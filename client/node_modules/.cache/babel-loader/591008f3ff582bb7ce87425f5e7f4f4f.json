{"ast":null,"code":"import _objectSpread from \"/home/costantinos/Documenti/Dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport React, { createElement, memo } from 'react';\nimport clsx from 'clsx';\n\nfunction FilterRow(_ref) {\n  var columns = _ref.columns,\n      filters = _ref.filters,\n      onFiltersChange = _ref.onFiltersChange;\n\n  function _onChange(key, value) {\n    var newFilters = _objectSpread({}, filters);\n\n    newFilters[key] = value;\n    onFiltersChange === null || onFiltersChange === void 0 ? void 0 : onFiltersChange(newFilters);\n  }\n\n  return React.createElement(\"div\", {\n    role: \"row\",\n    \"aria-rowindex\": 2,\n    className: \"rdg-filter-row\"\n  }, columns.map(function (column) {\n    var key = column.key;\n    var className = clsx('rdg-cell', {\n      'rdg-cell-frozen': column.frozen,\n      'rdg-cell-frozen-last': column.isLastFrozenColumn\n    });\n    var style = {\n      width: column.width,\n      left: column.left\n    };\n    return React.createElement(\"div\", {\n      key: key,\n      style: style,\n      className: className\n    }, column.filterRenderer && createElement(column.filterRenderer, {\n      column: column,\n      value: filters === null || filters === void 0 ? void 0 : filters[column.key],\n      onChange: function onChange(value) {\n        return _onChange(key, value);\n      }\n    }));\n  }));\n}\n\nexport default memo(FilterRow);","map":null,"metadata":{},"sourceType":"module"}
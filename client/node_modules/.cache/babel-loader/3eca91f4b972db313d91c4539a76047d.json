{"ast":null,"code":"import _objectWithoutProperties from \"/home/costantinos/Documenti/Dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React, { memo } from 'react';\nimport clsx from 'clsx';\nimport { SELECT_COLUMN_KEY } from './Columns';\nimport GroupCell from './GroupCell';\n\nfunction GroupedRow(_ref) {\n  var id = _ref.id,\n      groupKey = _ref.groupKey,\n      viewportColumns = _ref.viewportColumns,\n      childRows = _ref.childRows,\n      rowIdx = _ref.rowIdx,\n      top = _ref.top,\n      level = _ref.level,\n      isExpanded = _ref.isExpanded,\n      selectedCellIdx = _ref.selectedCellIdx,\n      isRowSelected = _ref.isRowSelected,\n      eventBus = _ref.eventBus,\n      props = _objectWithoutProperties(_ref, [\"id\", \"groupKey\", \"viewportColumns\", \"childRows\", \"rowIdx\", \"top\", \"level\", \"isExpanded\", \"selectedCellIdx\", \"isRowSelected\", \"eventBus\"]);\n\n  // Select is always the first column\n  var idx = viewportColumns[0].key === SELECT_COLUMN_KEY ? level + 1 : level;\n\n  function selectGroup() {\n    eventBus.dispatch('SelectCell', {\n      rowIdx: rowIdx,\n      idx: -1\n    });\n  }\n\n  return React.createElement(\"div\", Object.assign({\n    role: \"row\",\n    \"aria-level\": level,\n    \"aria-expanded\": isExpanded,\n    className: clsx('rdg-row', 'rdg-group-row', \"rdg-row-\".concat(rowIdx % 2 === 0 ? 'even' : 'odd'), {\n      'rdg-row-selected': isRowSelected,\n      'rdg-group-row-selected': selectedCellIdx === -1 // Select row if there is no selected cell\n\n    }),\n    onClick: selectGroup,\n    style: {\n      top: top\n    }\n  }, props), viewportColumns.map(function (column) {\n    return React.createElement(GroupCell, {\n      key: column.key,\n      id: id,\n      rowIdx: rowIdx,\n      groupKey: groupKey,\n      childRows: childRows,\n      isExpanded: isExpanded,\n      isRowSelected: isRowSelected,\n      isCellSelected: selectedCellIdx === column.idx,\n      eventBus: eventBus,\n      column: column,\n      groupColumnIndex: idx\n    });\n  }));\n}\n\nexport default memo(GroupedRow);","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var through = require('through');\n\nvar join = function join(a, b) {\n  if (!a) {\n    return b;\n  } else if (!b) {\n    return a;\n  } else if (Buffer.isBuffer(a)) {\n    return Buffer.concat([a, b], a.length + b.length);\n  } else {\n    return a + b;\n  }\n};\n\nvar slice = function slice(b, start, end) {\n  if (Buffer.isBuffer(b)) {\n    return b.slice(start, end);\n  } else {\n    return b.substring(start, end);\n  }\n};\n\nmodule.exports = function (states, callback) {\n  var state = typeof states.init !== 'undefined' ? 'init' : Object.keys(states)[0];\n  var cache = null,\n      stateFn = states[state];\n\n  var ret = function ret(data) {\n    var consumed;\n\n    if (cache) {\n      data = join(cache, data);\n      cache = null;\n    }\n\n    if (!data) {\n      return;\n    }\n\n    do {\n      consumed = stateFn.call(ret, data); // pending more data\n\n      if (consumed === false) {\n        cache = data;\n        break;\n      }\n\n      if (typeof consumed === 'function') {\n        stateFn = consumed;\n        continue;\n      }\n\n      if (typeof consumed !== 'undefined') {\n        data = slice(data, consumed);\n      } else {\n        throw new Error('Please return the number of bytes consumed');\n      }\n    } while (data.length);\n  };\n\n  ret.change = function (newState) {\n    state = newState;\n    stateFn = states[state];\n  };\n\n  ret.done = function () {\n    if (callback) {\n      callback.apply(this, arguments);\n    }\n  };\n\n  ret.mode = function () {\n    return state;\n  };\n\n  ret.cache = function () {\n    return cache;\n  };\n\n  var t = through(ret);\n  t.fsm = ret;\n  ret.queue = t.queue.bind(t);\n  return t;\n};\n\nmodule.exports.want = function (count, fn) {\n  fn.callCount = 0;\n  return function (data) {\n    if (data.length >= count) {\n      var ret = fn.call(this, slice(data, 0, count), fn.callCount);\n      fn.callCount++;\n\n      if (typeof ret === 'undefined') {\n        return count;\n      }\n\n      return ret;\n    } else {\n      return false;\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}
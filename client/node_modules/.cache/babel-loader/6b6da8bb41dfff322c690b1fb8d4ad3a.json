{"ast":null,"code":"import React, { useCallback, memo } from 'react';\nimport HeaderCell from './HeaderCell';\nimport { assertIsValidKey } from './utils';\n\nfunction HeaderRow(_ref) {\n  var columns = _ref.columns,\n      rows = _ref.rows,\n      rowKey = _ref.rowKey,\n      onSelectedRowsChange = _ref.onSelectedRowsChange,\n      allRowsSelected = _ref.allRowsSelected,\n      onColumnResize = _ref.onColumnResize,\n      sortColumn = _ref.sortColumn,\n      sortDirection = _ref.sortDirection,\n      onSort = _ref.onSort;\n  var handleAllRowsSelectionChange = useCallback(function (checked) {\n    if (!onSelectedRowsChange) return;\n    assertIsValidKey(rowKey);\n    var newSelectedRows = new Set();\n\n    if (checked) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var row = _step.value;\n          newSelectedRows.add(row[rowKey]);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    onSelectedRowsChange(newSelectedRows);\n  }, [onSelectedRowsChange, rows, rowKey]);\n  return React.createElement(\"div\", {\n    role: \"row\",\n    \"aria-rowindex\": 1,\n    className: \"rdg-header-row\"\n  }, columns.map(function (column) {\n    return React.createElement(HeaderCell, {\n      key: column.key,\n      column: column,\n      onResize: onColumnResize,\n      allRowsSelected: allRowsSelected,\n      onAllRowsSelectionChange: handleAllRowsSelectionChange,\n      onSort: onSort,\n      sortColumn: sortColumn,\n      sortDirection: sortDirection\n    });\n  }));\n}\n\nexport default memo(HeaderRow);","map":null,"metadata":{},"sourceType":"module"}
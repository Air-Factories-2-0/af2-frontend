{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId]) {\n      /******/\n      return installedModules[moduleId].exports;\n      /******/\n    }\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n\n    var module = installedModules[moduleId] = {\n      /******/\n      i: moduleId,\n\n      /******/\n      l: false,\n\n      /******/\n      exports: {}\n      /******/\n\n    };\n    /******/\n\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.l = true;\n    /******/\n\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n\n  /******/\n\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n\n  /******/\n  // define getter function for harmony exports\n\n  /******/\n\n  __webpack_require__.d = function (exports, name, getter) {\n    /******/\n    if (!__webpack_require__.o(exports, name)) {\n      /******/\n      Object.defineProperty(exports, name, {\n        /******/\n        configurable: false,\n\n        /******/\n        enumerable: true,\n\n        /******/\n        get: getter\n        /******/\n\n      });\n      /******/\n    }\n    /******/\n\n  };\n  /******/\n\n  /******/\n  // getDefaultExport function for compatibility with non-harmony modules\n\n  /******/\n\n\n  __webpack_require__.n = function (module) {\n    /******/\n    var getter = module && module.__esModule ?\n    /******/\n    function getDefault() {\n      return module['default'];\n    } :\n    /******/\n    function getModuleExports() {\n      return module;\n    };\n    /******/\n\n    __webpack_require__.d(getter, 'a', getter);\n    /******/\n\n\n    return getter;\n    /******/\n  };\n  /******/\n\n  /******/\n  // Object.prototype.hasOwnProperty.call\n\n  /******/\n\n\n  __webpack_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  /******/\n\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n\n  __webpack_require__.p = \"\";\n  /******/\n\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(__webpack_require__.s = 21);\n  /******/\n}(\n/************************************************************************/\n\n/******/\n[\n/* 0 */\n\n/***/\nfunction (module, exports) {\n  // shim for using process in browser\n  var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n  // don't break things.  But we need to wrap it in a try catch in case it is\n  // wrapped in strict mode code which doesn't define any globals.  It's inside a\n  // function because try/catches deoptimize in certain engines.\n\n  var cachedSetTimeout;\n  var cachedClearTimeout;\n\n  function defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n  }\n\n  function defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n  }\n\n  (function () {\n    try {\n      if (typeof setTimeout === 'function') {\n        cachedSetTimeout = setTimeout;\n      } else {\n        cachedSetTimeout = defaultSetTimout;\n      }\n    } catch (e) {\n      cachedSetTimeout = defaultSetTimout;\n    }\n\n    try {\n      if (typeof clearTimeout === 'function') {\n        cachedClearTimeout = clearTimeout;\n      } else {\n        cachedClearTimeout = defaultClearTimeout;\n      }\n    } catch (e) {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  })();\n\n  function runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n      //normal enviroments in sane situations\n      return setTimeout(fun, 0);\n    } // if setTimeout wasn't available but was latter defined\n\n\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n      cachedSetTimeout = setTimeout;\n      return setTimeout(fun, 0);\n    }\n\n    try {\n      // when when somebody has screwed with setTimeout but no I.E. maddness\n      return cachedSetTimeout(fun, 0);\n    } catch (e) {\n      try {\n        // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n        return cachedSetTimeout.call(null, fun, 0);\n      } catch (e) {\n        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n        return cachedSetTimeout.call(this, fun, 0);\n      }\n    }\n  }\n\n  function runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n      //normal enviroments in sane situations\n      return clearTimeout(marker);\n    } // if clearTimeout wasn't available but was latter defined\n\n\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n      cachedClearTimeout = clearTimeout;\n      return clearTimeout(marker);\n    }\n\n    try {\n      // when when somebody has screwed with setTimeout but no I.E. maddness\n      return cachedClearTimeout(marker);\n    } catch (e) {\n      try {\n        // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n        return cachedClearTimeout.call(null, marker);\n      } catch (e) {\n        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n        // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n        return cachedClearTimeout.call(this, marker);\n      }\n    }\n  }\n\n  var queue = [];\n  var draining = false;\n  var currentQueue;\n  var queueIndex = -1;\n\n  function cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n      return;\n    }\n\n    draining = false;\n\n    if (currentQueue.length) {\n      queue = currentQueue.concat(queue);\n    } else {\n      queueIndex = -1;\n    }\n\n    if (queue.length) {\n      drainQueue();\n    }\n  }\n\n  function drainQueue() {\n    if (draining) {\n      return;\n    }\n\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n    var len = queue.length;\n\n    while (len) {\n      currentQueue = queue;\n      queue = [];\n\n      while (++queueIndex < len) {\n        if (currentQueue) {\n          currentQueue[queueIndex].run();\n        }\n      }\n\n      queueIndex = -1;\n      len = queue.length;\n    }\n\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n  }\n\n  process.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n\n    if (arguments.length > 1) {\n      for (var i = 1; i < arguments.length; i++) {\n        args[i - 1] = arguments[i];\n      }\n    }\n\n    queue.push(new Item(fun, args));\n\n    if (queue.length === 1 && !draining) {\n      runTimeout(drainQueue);\n    }\n  }; // v8 likes predictible objects\n\n\n  function Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n  }\n\n  Item.prototype.run = function () {\n    this.fun.apply(null, this.array);\n  };\n\n  process.title = 'browser';\n  process.browser = true;\n  process.env = {};\n  process.argv = [];\n  process.version = ''; // empty string to avoid regexp issues\n\n  process.versions = {};\n\n  function noop() {}\n\n  process.on = noop;\n  process.addListener = noop;\n  process.once = noop;\n  process.off = noop;\n  process.removeListener = noop;\n  process.removeAllListeners = noop;\n  process.emit = noop;\n  process.prependListener = noop;\n  process.prependOnceListener = noop;\n\n  process.listeners = function (name) {\n    return [];\n  };\n\n  process.binding = function (name) {\n    throw new Error('process.binding is not supported');\n  };\n\n  process.cwd = function () {\n    return '/';\n  };\n\n  process.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n  };\n\n  process.umask = function () {\n    return 0;\n  };\n  /***/\n\n},\n/* 1 */\n\n/***/\nfunction (module, exports) {\n  module.exports = require(\"react\");\n  /***/\n},\n/* 2 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    /**\n    * Copyright (c) 2013-present, Facebook, Inc.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    */\n    if (process.env.NODE_ENV !== 'production') {\n      var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 0xeac7;\n\n      var isValidElement = function isValidElement(object) {\n        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n      }; // By explicitly using `prop-types` you are opting into new development behavior.\n      // http://fb.me/prop-types-in-prod\n\n\n      var throwOnDirectAccess = true;\n      module.exports = __webpack_require__(23)(isValidElement, throwOnDirectAccess);\n    } else {\n      // By explicitly using `prop-types` you are opting into new production behavior.\n      // http://fb.me/prop-types-in-prod\n      module.exports = __webpack_require__(24)();\n    }\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 3 */\n\n/***/\nfunction (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(__webpack_exports__, \"__esModule\", {\n    value: true\n  });\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    /* harmony export (binding) */\n    __webpack_require__.d(__webpack_exports__, \"withEmotionCache\", function () {\n      return withEmotionCache;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"CacheProvider\", function () {\n      return CacheProvider;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"ThemeContext\", function () {\n      return ThemeContext;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"jsx\", function () {\n      return jsx;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"Global\", function () {\n      return Global;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"keyframes\", function () {\n      return keyframes;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"ClassNames\", function () {\n      return ClassNames;\n    });\n    /* harmony import */\n\n\n    var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n    /* harmony import */\n\n\n    var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n    /* harmony import */\n\n\n    var __WEBPACK_IMPORTED_MODULE_1__emotion_cache__ = __webpack_require__(34);\n    /* harmony import */\n\n\n    var __WEBPACK_IMPORTED_MODULE_2__emotion_utils__ = __webpack_require__(37);\n    /* harmony import */\n\n\n    var __WEBPACK_IMPORTED_MODULE_3__emotion_serialize__ = __webpack_require__(16);\n    /* harmony import */\n\n\n    var __WEBPACK_IMPORTED_MODULE_4__emotion_sheet__ = __webpack_require__(15);\n    /* harmony import */\n\n\n    var __WEBPACK_IMPORTED_MODULE_5__emotion_css__ = __webpack_require__(17);\n    /* harmony reexport (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"css\", function () {\n      return __WEBPACK_IMPORTED_MODULE_5__emotion_css__[\"a\"];\n    });\n\n    function _inheritsLoose(subClass, superClass) {\n      subClass.prototype = Object.create(superClass.prototype);\n      subClass.prototype.constructor = subClass;\n      subClass.__proto__ = superClass;\n    }\n\n    var EmotionCacheContext = Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createContext\"])(Object(__WEBPACK_IMPORTED_MODULE_1__emotion_cache__[\"a\"\n    /* default */\n    ])());\n    var ThemeContext = Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createContext\"])({});\n    var CacheProvider = EmotionCacheContext.Provider;\n\n    var withEmotionCache = function withEmotionCache(func) {\n      var render = function render(props, ref) {\n        return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(EmotionCacheContext.Consumer, null, function ( // $FlowFixMe we know it won't be null\n        cache) {\n          return func(props, cache, ref);\n        });\n      }; // $FlowFixMe\n\n\n      return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"forwardRef\"])(render);\n    };\n\n    var typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\n    var labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    var render = function render(cache, props, theme, ref) {\n      var type = props[typePropName];\n      var registeredStyles = [];\n      var className = '';\n      var cssProp = theme === null ? props.css : props.css(theme); // so that using `css` from `emotion` and passing the result to the css prop works\n      // not passing the registered cache to serializeStyles because it would\n      // make certain babel optimisations not possible\n\n      if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n        cssProp = cache.registered[cssProp];\n      }\n\n      registeredStyles.push(cssProp);\n\n      if (props.className !== undefined) {\n        className = Object(__WEBPACK_IMPORTED_MODULE_2__emotion_utils__[\"a\"\n        /* getRegisteredStyles */\n        ])(cache.registered, registeredStyles, props.className);\n      }\n\n      var serialized = Object(__WEBPACK_IMPORTED_MODULE_3__emotion_serialize__[\"a\"\n      /* serializeStyles */\n      ])(registeredStyles);\n\n      if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n        var labelFromStack = props[labelPropName];\n\n        if (labelFromStack) {\n          serialized = Object(__WEBPACK_IMPORTED_MODULE_3__emotion_serialize__[\"a\"\n          /* serializeStyles */\n          ])([serialized, 'label:' + labelFromStack + ';']);\n        }\n      }\n\n      var rules = Object(__WEBPACK_IMPORTED_MODULE_2__emotion_utils__[\"b\"\n      /* insertStyles */\n      ])(cache, serialized, typeof type === 'string');\n      className += cache.key + \"-\" + serialized.name;\n      var newProps = {};\n\n      for (var key in props) {\n        if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n          newProps[key] = props[key];\n        }\n      }\n\n      newProps.ref = ref;\n      newProps.className = className;\n      var ele = Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(type, newProps);\n      return ele;\n    };\n\n    var Emotion = withEmotionCache(function (props, cache, ref) {\n      // use Context.read for the theme when it's stable\n      if (typeof props.css === 'function') {\n        return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(ThemeContext.Consumer, null, function (theme) {\n          return render(cache, props, theme, ref);\n        });\n      }\n\n      return render(cache, props, null, ref);\n    }); // $FlowFixMe\n\n    var jsx = function jsx(type, props) {\n      var args = arguments;\n\n      if (props == null || props.css == null) {\n        // $FlowFixMe\n        return __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"].apply(undefined, args);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n      props.css.indexOf(':') !== -1) {\n        throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`\" + props.css + \"`\");\n      }\n\n      var argsLength = args.length;\n      var createElementArgArray = new Array(argsLength);\n      createElementArgArray[0] = Emotion;\n      var newProps = {};\n\n      for (var key in props) {\n        if (hasOwnProperty.call(props, key)) {\n          newProps[key] = props[key];\n        }\n      }\n\n      newProps[typePropName] = type;\n\n      if (process.env.NODE_ENV !== 'production') {\n        var error = new Error();\n\n        if (error.stack) {\n          // chrome\n          var match = error.stack.match(/at jsx.*\\n\\s+at ([A-Z][A-Za-z]+) /);\n\n          if (!match) {\n            // safari and firefox\n            match = error.stack.match(/^.*\\n([A-Z][A-Za-z]+)@/);\n          }\n\n          if (match) {\n            newProps[labelPropName] = match[1];\n          }\n        }\n      }\n\n      createElementArgArray[1] = newProps;\n\n      for (var i = 2; i < argsLength; i++) {\n        createElementArgArray[i] = args[i];\n      } // $FlowFixMe\n\n\n      return __WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"].apply(null, createElementArgArray);\n    };\n\n    var warnedAboutCssPropForGlobal = false;\n    var Global =\n    /* #__PURE__ */\n    withEmotionCache(function (props, cache) {\n      if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n      // probably using the custom createElement which\n      // means it will be turned into a className prop\n      // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n      props.className || props.css)) {\n        console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n        warnedAboutCssPropForGlobal = true;\n      }\n\n      var styles = props.styles;\n\n      if (typeof styles === 'function') {\n        return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(ThemeContext.Consumer, null, function (theme) {\n          var serialized = Object(__WEBPACK_IMPORTED_MODULE_3__emotion_serialize__[\"a\"\n          /* serializeStyles */\n          ])([styles(theme)]);\n          return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(InnerGlobal, {\n            serialized: serialized,\n            cache: cache\n          });\n        });\n      }\n\n      var serialized = Object(__WEBPACK_IMPORTED_MODULE_3__emotion_serialize__[\"a\"\n      /* serializeStyles */\n      ])([styles]);\n      return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(InnerGlobal, {\n        serialized: serialized,\n        cache: cache\n      });\n    }); // maintain place over rerenders.\n    // initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n    // initial client-side render from SSR, use place of hydrating tag\n\n    var InnerGlobal =\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inheritsLoose(InnerGlobal, _React$Component);\n\n      function InnerGlobal(props, context, updater) {\n        return _React$Component.call(this, props, context, updater) || this;\n      }\n\n      var _proto = InnerGlobal.prototype;\n\n      _proto.componentDidMount = function componentDidMount() {\n        this.sheet = new __WEBPACK_IMPORTED_MODULE_4__emotion_sheet__[\"a\"\n        /* StyleSheet */\n        ]({\n          key: this.props.cache.key + \"-global\",\n          nonce: this.props.cache.sheet.nonce,\n          container: this.props.cache.sheet.container\n        }); // $FlowFixMe\n\n        var node = document.querySelector(\"style[data-emotion-\" + this.props.cache.key + \"=\\\"\" + this.props.serialized.name + \"\\\"]\");\n\n        if (node !== null) {\n          this.sheet.tags.push(node);\n        }\n\n        if (this.props.cache.sheet.tags.length) {\n          this.sheet.before = this.props.cache.sheet.tags[0];\n        }\n\n        this.insertStyles();\n      };\n\n      _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n        if (prevProps.serialized.name !== this.props.serialized.name) {\n          this.insertStyles();\n        }\n      };\n\n      _proto.insertStyles = function insertStyles$$1() {\n        if (this.props.serialized.next !== undefined) {\n          // insert keyframes\n          Object(__WEBPACK_IMPORTED_MODULE_2__emotion_utils__[\"b\"\n          /* insertStyles */\n          ])(this.props.cache, this.props.serialized.next, true);\n        }\n\n        if (this.sheet.tags.length) {\n          // if this doesn't exist then it will be null so the style element will be appended\n          var element = this.sheet.tags[this.sheet.tags.length - 1].nextElementSibling;\n          this.sheet.before = element;\n          this.sheet.flush();\n        }\n\n        this.props.cache.insert(\"\", this.props.serialized, this.sheet, false);\n      };\n\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        this.sheet.flush();\n      };\n\n      _proto.render = function render() {\n        return null;\n      };\n\n      return InnerGlobal;\n    }(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);\n\n    var keyframes = function keyframes() {\n      var insertable = __WEBPACK_IMPORTED_MODULE_5__emotion_css__[\"a\"\n      /* default */\n      ].apply(void 0, arguments);\n\n      var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n      return {\n        name: name,\n        styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n        anim: 1,\n        toString: function toString() {\n          return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n        }\n      };\n    };\n\n    var classnames = function classnames(args) {\n      var len = args.length;\n      var i = 0;\n      var cls = '';\n\n      for (; i < len; i++) {\n        var arg = args[i];\n        if (arg == null) continue;\n        var toAdd = void 0;\n\n        switch (typeof arg) {\n          case 'boolean':\n            break;\n\n          case 'object':\n            {\n              if (Array.isArray(arg)) {\n                toAdd = classnames(arg);\n              } else {\n                toAdd = '';\n\n                for (var k in arg) {\n                  if (arg[k] && k) {\n                    toAdd && (toAdd += ' ');\n                    toAdd += k;\n                  }\n                }\n              }\n\n              break;\n            }\n\n          default:\n            {\n              toAdd = arg;\n            }\n        }\n\n        if (toAdd) {\n          cls && (cls += ' ');\n          cls += toAdd;\n        }\n      }\n\n      return cls;\n    };\n\n    function merge(registered, css$$1, className) {\n      var registeredStyles = [];\n      var rawClassName = Object(__WEBPACK_IMPORTED_MODULE_2__emotion_utils__[\"a\"\n      /* getRegisteredStyles */\n      ])(registered, registeredStyles, className);\n\n      if (registeredStyles.length < 2) {\n        return className;\n      }\n\n      return rawClassName + css$$1(registeredStyles);\n    }\n\n    var ClassNames = withEmotionCache(function (props, context) {\n      return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(ThemeContext.Consumer, null, function (theme) {\n        var hasRendered = false;\n\n        var css$$1 = function css$$1() {\n          if (hasRendered && process.env.NODE_ENV !== 'production') {\n            throw new Error('css can only be used during render');\n          }\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var serialized = Object(__WEBPACK_IMPORTED_MODULE_3__emotion_serialize__[\"a\"\n          /* serializeStyles */\n          ])(args, context.registered);\n          {\n            Object(__WEBPACK_IMPORTED_MODULE_2__emotion_utils__[\"b\"\n            /* insertStyles */\n            ])(context, serialized, false);\n          }\n          return context.key + \"-\" + serialized.name;\n        };\n\n        var cx = function cx() {\n          if (hasRendered && process.env.NODE_ENV !== 'production') {\n            throw new Error('cx can only be used during render');\n          }\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          return merge(context.registered, css$$1, classnames(args));\n        };\n\n        var content = {\n          css: css$$1,\n          cx: cx,\n          theme: theme\n        };\n        var ele = props.children(content);\n        hasRendered = true;\n        return ele;\n      });\n    });\n    /* WEBPACK VAR INJECTION */\n  }).call(__webpack_exports__, __webpack_require__(0));\n  /***/\n},\n/* 4 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    var _interopRequireDefault = __webpack_require__(5);\n\n    exports.__esModule = true;\n    exports.default = void 0;\n\n    var _shouldUpdate = _interopRequireDefault(__webpack_require__(41));\n\n    var _shallowEqual = _interopRequireDefault(__webpack_require__(45));\n\n    var _setDisplayName = _interopRequireDefault(__webpack_require__(18));\n\n    var _wrapDisplayName = _interopRequireDefault(__webpack_require__(19));\n\n    var _pick = _interopRequireDefault(__webpack_require__(47));\n\n    var onlyUpdateForKeys = function onlyUpdateForKeys(propKeys) {\n      var hoc = (0, _shouldUpdate.default)(function (props, nextProps) {\n        return !(0, _shallowEqual.default)((0, _pick.default)(nextProps, propKeys), (0, _pick.default)(props, propKeys));\n      });\n\n      if (process.env.NODE_ENV !== 'production') {\n        return function (BaseComponent) {\n          return (0, _setDisplayName.default)((0, _wrapDisplayName.default)(BaseComponent, 'onlyUpdateForKeys'))(hoc(BaseComponent));\n        };\n      }\n\n      return hoc;\n    };\n\n    var _default = onlyUpdateForKeys;\n    exports.default = _default;\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 5 */\n\n/***/\nfunction (module, exports) {\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  module.exports = _interopRequireDefault;\n  /***/\n},\n/* 6 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /*\n  object-assign\n  (c) Sindre Sorhus\n  @license MIT\n  */\n\n  /* eslint-disable no-unused-vars */\n\n  var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n  function toObject(val) {\n    if (val === null || val === undefined) {\n      throw new TypeError('Object.assign cannot be called with null or undefined');\n    }\n\n    return Object(val);\n  }\n\n  function shouldUseNative() {\n    try {\n      if (!Object.assign) {\n        return false;\n      } // Detect buggy property enumeration order in older V8 versions.\n      // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n      var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n      test1[5] = 'de';\n\n      if (Object.getOwnPropertyNames(test1)[0] === '5') {\n        return false;\n      } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n      var test2 = {};\n\n      for (var i = 0; i < 10; i++) {\n        test2['_' + String.fromCharCode(i)] = i;\n      }\n\n      var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n        return test2[n];\n      });\n\n      if (order2.join('') !== '0123456789') {\n        return false;\n      } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n      var test3 = {};\n      'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n        test3[letter] = letter;\n      });\n\n      if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n        return false;\n      }\n\n      return true;\n    } catch (err) {\n      // We don't expect any of the above to throw, but better to be safe.\n      return false;\n    }\n  }\n\n  module.exports = shouldUseNative() ? Object.assign : function (target, source) {\n    var from;\n    var to = toObject(target);\n    var symbols;\n\n    for (var s = 1; s < arguments.length; s++) {\n      from = Object(arguments[s]);\n\n      for (var key in from) {\n        if (hasOwnProperty.call(from, key)) {\n          to[key] = from[key];\n        }\n      }\n\n      if (getOwnPropertySymbols) {\n        symbols = getOwnPropertySymbols(from);\n\n        for (var i = 0; i < symbols.length; i++) {\n          if (propIsEnumerable.call(from, symbols[i])) {\n            to[symbols[i]] = from[symbols[i]];\n          }\n        }\n      }\n    }\n\n    return to;\n  };\n  /***/\n},\n/* 7 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n  module.exports = ReactPropTypesSecret;\n  /***/\n},\n/* 8 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    /**\n    * Copyright (c) 2013-present, Facebook, Inc.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    */\n    var printWarning = function printWarning() {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      var ReactPropTypesSecret = __webpack_require__(7);\n\n      var loggedTypeFailures = {};\n\n      printWarning = function printWarning(text) {\n        var message = 'Warning: ' + text;\n\n        if (typeof console !== 'undefined') {\n          console.error(message);\n        }\n\n        try {\n          // --- Welcome to debugging React ---\n          // This error was thrown as a convenience so that you can use this stack\n          // to find the callsite that caused this warning to fire.\n          throw new Error(message);\n        } catch (x) {}\n      };\n    }\n    /**\n     * Assert that the values match with the type specs.\n     * Error messages are memorized and will only be shown once.\n     *\n     * @param {object} typeSpecs Map of name to a ReactPropType\n     * @param {object} values Runtime values that need to be type-checked\n     * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n     * @param {string} componentName Name of the component for error messages.\n     * @param {?Function} getStack Returns the component stack.\n     * @private\n     */\n\n\n    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n      if (process.env.NODE_ENV !== 'production') {\n        for (var typeSpecName in typeSpecs) {\n          if (typeSpecs.hasOwnProperty(typeSpecName)) {\n            var error; // Prop type validation may throw. In case they do, we don't want to\n            // fail the render phase where it didn't fail before. So we log it.\n            // After these have been cleaned up, we'll let them throw.\n\n            try {\n              // This is intentionally an invariant that gets caught. It's the same\n              // behavior as without this statement except with a better message.\n              if (typeof typeSpecs[typeSpecName] !== 'function') {\n                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.');\n                err.name = 'Invariant Violation';\n                throw err;\n              }\n\n              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n            } catch (ex) {\n              error = ex;\n            }\n\n            if (error && !(error instanceof Error)) {\n              printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');\n            }\n\n            if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n              // Only monitor this failure once because there tends to be a lot of the\n              // same error.\n              loggedTypeFailures[error.message] = true;\n              var stack = getStack ? getStack() : '';\n              printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));\n            }\n          }\n        }\n      }\n    }\n\n    module.exports = checkPropTypes;\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 9 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    function checkDCE() {\n      /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {\n        return;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        // This branch is unreachable because this function is only called\n        // in production, but the condition is true only in development.\n        // Therefore if the branch is still here, dead code elimination wasn't\n        // properly applied.\n        // Don't change the message. React DevTools relies on it. Also make sure\n        // this message doesn't occur elsewhere in this function, or it will cause\n        // a false positive.\n        throw new Error('^_^');\n      }\n\n      try {\n        // Verify that the code above has been dead code eliminated (DCE'd).\n        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n      } catch (err) {\n        // DevTools shouldn't crash React, no matter what.\n        // We should still report in case we break this code.\n        console.error(err);\n      }\n    }\n\n    if (process.env.NODE_ENV === 'production') {\n      // DCE check should happen before ReactDOM bundle executes so that\n      // DevTools can report bad minification during injection.\n      checkDCE();\n      module.exports = __webpack_require__(25);\n    } else {\n      module.exports = __webpack_require__(28);\n    }\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 10 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    if (process.env.NODE_ENV === 'production') {\n      module.exports = __webpack_require__(26);\n    } else {\n      module.exports = __webpack_require__(27);\n    }\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 11 */\n\n/***/\nfunction (module, exports) {\n  var g; // This works in non-strict mode\n\n  g = function () {\n    return this;\n  }();\n\n  try {\n    // This works if eval is allowed (see CSP)\n    g = g || Function(\"return this\")() || (1, eval)(\"this\");\n  } catch (e) {\n    // This works if the window reference is available\n    if (typeof window === \"object\") g = window;\n  } // g can still be undefined, but nothing to do about it...\n  // We return undefined, instead of nothing here, so it's\n  // easier to handle this case. if(!global) { ...}\n\n\n  module.exports = g;\n  /***/\n},\n/* 12 */\n\n/***/\nfunction (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(__webpack_exports__, \"__esModule\", {\n    value: true\n  });\n  /* harmony export (binding) */\n\n  __webpack_require__.d(__webpack_exports__, \"WebGLRenderTargetCube\", function () {\n    return WebGLRenderTargetCube;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"WebGLRenderTarget\", function () {\n    return WebGLRenderTarget;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"WebGLRenderer\", function () {\n    return WebGLRenderer;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ShaderLib\", function () {\n    return ShaderLib;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"UniformsLib\", function () {\n    return UniformsLib;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"UniformsUtils\", function () {\n    return UniformsUtils;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ShaderChunk\", function () {\n    return ShaderChunk;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"FogExp2\", function () {\n    return FogExp2;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Fog\", function () {\n    return Fog;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Scene\", function () {\n    return Scene;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Sprite\", function () {\n    return Sprite;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LOD\", function () {\n    return LOD;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"SkinnedMesh\", function () {\n    return SkinnedMesh;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Skeleton\", function () {\n    return Skeleton;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Bone\", function () {\n    return Bone;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Mesh\", function () {\n    return Mesh;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LineSegments\", function () {\n    return LineSegments;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LineLoop\", function () {\n    return LineLoop;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Line\", function () {\n    return Line;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Points\", function () {\n    return Points;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Group\", function () {\n    return Group;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"VideoTexture\", function () {\n    return VideoTexture;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"DataTexture\", function () {\n    return DataTexture;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"DataTexture3D\", function () {\n    return DataTexture3D;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CompressedTexture\", function () {\n    return CompressedTexture;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CubeTexture\", function () {\n    return CubeTexture;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CanvasTexture\", function () {\n    return CanvasTexture;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"DepthTexture\", function () {\n    return DepthTexture;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Texture\", function () {\n    return Texture;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"AnimationLoader\", function () {\n    return AnimationLoader;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CompressedTextureLoader\", function () {\n    return CompressedTextureLoader;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"DataTextureLoader\", function () {\n    return DataTextureLoader;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CubeTextureLoader\", function () {\n    return CubeTextureLoader;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"TextureLoader\", function () {\n    return TextureLoader;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ObjectLoader\", function () {\n    return ObjectLoader;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MaterialLoader\", function () {\n    return MaterialLoader;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"BufferGeometryLoader\", function () {\n    return BufferGeometryLoader;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"DefaultLoadingManager\", function () {\n    return DefaultLoadingManager;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LoadingManager\", function () {\n    return LoadingManager;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ImageLoader\", function () {\n    return ImageLoader;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ImageBitmapLoader\", function () {\n    return ImageBitmapLoader;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"FontLoader\", function () {\n    return FontLoader;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"FileLoader\", function () {\n    return FileLoader;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Loader\", function () {\n    return Loader;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LoaderUtils\", function () {\n    return LoaderUtils;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Cache\", function () {\n    return Cache;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"AudioLoader\", function () {\n    return AudioLoader;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"SpotLightShadow\", function () {\n    return SpotLightShadow;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"SpotLight\", function () {\n    return SpotLight;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"PointLight\", function () {\n    return PointLight;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RectAreaLight\", function () {\n    return RectAreaLight;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"HemisphereLight\", function () {\n    return HemisphereLight;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"DirectionalLightShadow\", function () {\n    return DirectionalLightShadow;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"DirectionalLight\", function () {\n    return DirectionalLight;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"AmbientLight\", function () {\n    return AmbientLight;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LightShadow\", function () {\n    return LightShadow;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Light\", function () {\n    return Light;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"StereoCamera\", function () {\n    return StereoCamera;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"PerspectiveCamera\", function () {\n    return PerspectiveCamera;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"OrthographicCamera\", function () {\n    return OrthographicCamera;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CubeCamera\", function () {\n    return CubeCamera;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ArrayCamera\", function () {\n    return ArrayCamera;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Camera\", function () {\n    return Camera;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"AudioListener\", function () {\n    return AudioListener;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"PositionalAudio\", function () {\n    return PositionalAudio;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"AudioContext\", function () {\n    return AudioContext;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"AudioAnalyser\", function () {\n    return AudioAnalyser;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Audio\", function () {\n    return Audio;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"VectorKeyframeTrack\", function () {\n    return VectorKeyframeTrack;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"StringKeyframeTrack\", function () {\n    return StringKeyframeTrack;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"QuaternionKeyframeTrack\", function () {\n    return QuaternionKeyframeTrack;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"NumberKeyframeTrack\", function () {\n    return NumberKeyframeTrack;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ColorKeyframeTrack\", function () {\n    return ColorKeyframeTrack;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"BooleanKeyframeTrack\", function () {\n    return BooleanKeyframeTrack;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"PropertyMixer\", function () {\n    return PropertyMixer;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"PropertyBinding\", function () {\n    return PropertyBinding;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"KeyframeTrack\", function () {\n    return KeyframeTrack;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"AnimationUtils\", function () {\n    return AnimationUtils;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"AnimationObjectGroup\", function () {\n    return AnimationObjectGroup;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"AnimationMixer\", function () {\n    return AnimationMixer;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"AnimationClip\", function () {\n    return AnimationClip;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Uniform\", function () {\n    return Uniform;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"InstancedBufferGeometry\", function () {\n    return InstancedBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"BufferGeometry\", function () {\n    return BufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Geometry\", function () {\n    return Geometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"InterleavedBufferAttribute\", function () {\n    return InterleavedBufferAttribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"InstancedInterleavedBuffer\", function () {\n    return InstancedInterleavedBuffer;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"InterleavedBuffer\", function () {\n    return InterleavedBuffer;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"InstancedBufferAttribute\", function () {\n    return InstancedBufferAttribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Face3\", function () {\n    return Face3;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Object3D\", function () {\n    return Object3D;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Raycaster\", function () {\n    return Raycaster;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Layers\", function () {\n    return Layers;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"EventDispatcher\", function () {\n    return EventDispatcher;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Clock\", function () {\n    return Clock;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"QuaternionLinearInterpolant\", function () {\n    return QuaternionLinearInterpolant;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LinearInterpolant\", function () {\n    return LinearInterpolant;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"DiscreteInterpolant\", function () {\n    return DiscreteInterpolant;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CubicInterpolant\", function () {\n    return CubicInterpolant;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Interpolant\", function () {\n    return Interpolant;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Triangle\", function () {\n    return Triangle;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Math\", function () {\n    return _Math;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Spherical\", function () {\n    return Spherical;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Cylindrical\", function () {\n    return Cylindrical;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Plane\", function () {\n    return Plane;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Frustum\", function () {\n    return Frustum;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Sphere\", function () {\n    return Sphere;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Ray\", function () {\n    return Ray;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Matrix4\", function () {\n    return Matrix4;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Matrix3\", function () {\n    return Matrix3;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Box3\", function () {\n    return Box3;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Box2\", function () {\n    return Box2;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Line3\", function () {\n    return Line3;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Euler\", function () {\n    return Euler;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Vector4\", function () {\n    return Vector4;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Vector3\", function () {\n    return Vector3;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Vector2\", function () {\n    return Vector2;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Quaternion\", function () {\n    return Quaternion;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Color\", function () {\n    return Color;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ImmediateRenderObject\", function () {\n    return ImmediateRenderObject;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"VertexNormalsHelper\", function () {\n    return VertexNormalsHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"SpotLightHelper\", function () {\n    return SpotLightHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"SkeletonHelper\", function () {\n    return SkeletonHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"PointLightHelper\", function () {\n    return PointLightHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RectAreaLightHelper\", function () {\n    return RectAreaLightHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"HemisphereLightHelper\", function () {\n    return HemisphereLightHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"GridHelper\", function () {\n    return GridHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"PolarGridHelper\", function () {\n    return PolarGridHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"FaceNormalsHelper\", function () {\n    return FaceNormalsHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"DirectionalLightHelper\", function () {\n    return DirectionalLightHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CameraHelper\", function () {\n    return CameraHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"BoxHelper\", function () {\n    return BoxHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Box3Helper\", function () {\n    return Box3Helper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"PlaneHelper\", function () {\n    return PlaneHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ArrowHelper\", function () {\n    return ArrowHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"AxesHelper\", function () {\n    return AxesHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Shape\", function () {\n    return Shape;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Path\", function () {\n    return Path;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ShapePath\", function () {\n    return ShapePath;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Font\", function () {\n    return Font;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CurvePath\", function () {\n    return CurvePath;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Curve\", function () {\n    return Curve;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ImageUtils\", function () {\n    return ImageUtils;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ShapeUtils\", function () {\n    return ShapeUtils;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"WebGLUtils\", function () {\n    return WebGLUtils;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"WireframeGeometry\", function () {\n    return WireframeGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ParametricGeometry\", function () {\n    return ParametricGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ParametricBufferGeometry\", function () {\n    return ParametricBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"TetrahedronGeometry\", function () {\n    return TetrahedronGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"TetrahedronBufferGeometry\", function () {\n    return TetrahedronBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"OctahedronGeometry\", function () {\n    return OctahedronGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"OctahedronBufferGeometry\", function () {\n    return OctahedronBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"IcosahedronGeometry\", function () {\n    return IcosahedronGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"IcosahedronBufferGeometry\", function () {\n    return IcosahedronBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"DodecahedronGeometry\", function () {\n    return DodecahedronGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"DodecahedronBufferGeometry\", function () {\n    return DodecahedronBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"PolyhedronGeometry\", function () {\n    return PolyhedronGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"PolyhedronBufferGeometry\", function () {\n    return PolyhedronBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"TubeGeometry\", function () {\n    return TubeGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"TubeBufferGeometry\", function () {\n    return TubeBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"TorusKnotGeometry\", function () {\n    return TorusKnotGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"TorusKnotBufferGeometry\", function () {\n    return TorusKnotBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"TorusGeometry\", function () {\n    return TorusGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"TorusBufferGeometry\", function () {\n    return TorusBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"TextGeometry\", function () {\n    return TextGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"TextBufferGeometry\", function () {\n    return TextBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"SphereGeometry\", function () {\n    return SphereGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"SphereBufferGeometry\", function () {\n    return SphereBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RingGeometry\", function () {\n    return RingGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RingBufferGeometry\", function () {\n    return RingBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"PlaneGeometry\", function () {\n    return PlaneGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"PlaneBufferGeometry\", function () {\n    return PlaneBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LatheGeometry\", function () {\n    return LatheGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LatheBufferGeometry\", function () {\n    return LatheBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ShapeGeometry\", function () {\n    return ShapeGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ShapeBufferGeometry\", function () {\n    return ShapeBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ExtrudeGeometry\", function () {\n    return ExtrudeGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ExtrudeBufferGeometry\", function () {\n    return ExtrudeBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"EdgesGeometry\", function () {\n    return EdgesGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ConeGeometry\", function () {\n    return ConeGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ConeBufferGeometry\", function () {\n    return ConeBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CylinderGeometry\", function () {\n    return CylinderGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CylinderBufferGeometry\", function () {\n    return CylinderBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CircleGeometry\", function () {\n    return CircleGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CircleBufferGeometry\", function () {\n    return CircleBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"BoxGeometry\", function () {\n    return BoxGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"BoxBufferGeometry\", function () {\n    return BoxBufferGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ShadowMaterial\", function () {\n    return ShadowMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"SpriteMaterial\", function () {\n    return SpriteMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RawShaderMaterial\", function () {\n    return RawShaderMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ShaderMaterial\", function () {\n    return ShaderMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"PointsMaterial\", function () {\n    return PointsMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MeshPhysicalMaterial\", function () {\n    return MeshPhysicalMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MeshStandardMaterial\", function () {\n    return MeshStandardMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MeshPhongMaterial\", function () {\n    return MeshPhongMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MeshToonMaterial\", function () {\n    return MeshToonMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MeshNormalMaterial\", function () {\n    return MeshNormalMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MeshLambertMaterial\", function () {\n    return MeshLambertMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MeshDepthMaterial\", function () {\n    return MeshDepthMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MeshDistanceMaterial\", function () {\n    return MeshDistanceMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MeshBasicMaterial\", function () {\n    return MeshBasicMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MeshMatcapMaterial\", function () {\n    return MeshMatcapMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LineDashedMaterial\", function () {\n    return LineDashedMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LineBasicMaterial\", function () {\n    return LineBasicMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Material\", function () {\n    return Material;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Float64BufferAttribute\", function () {\n    return Float64BufferAttribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Float32BufferAttribute\", function () {\n    return Float32BufferAttribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Uint32BufferAttribute\", function () {\n    return Uint32BufferAttribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Int32BufferAttribute\", function () {\n    return Int32BufferAttribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Uint16BufferAttribute\", function () {\n    return Uint16BufferAttribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Int16BufferAttribute\", function () {\n    return Int16BufferAttribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Uint8ClampedBufferAttribute\", function () {\n    return Uint8ClampedBufferAttribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Uint8BufferAttribute\", function () {\n    return Uint8BufferAttribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Int8BufferAttribute\", function () {\n    return Int8BufferAttribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"BufferAttribute\", function () {\n    return BufferAttribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ArcCurve\", function () {\n    return ArcCurve;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CatmullRomCurve3\", function () {\n    return CatmullRomCurve3;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CubicBezierCurve\", function () {\n    return CubicBezierCurve;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CubicBezierCurve3\", function () {\n    return CubicBezierCurve3;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"EllipseCurve\", function () {\n    return EllipseCurve;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LineCurve\", function () {\n    return LineCurve;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LineCurve3\", function () {\n    return LineCurve3;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"QuadraticBezierCurve\", function () {\n    return QuadraticBezierCurve;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"QuadraticBezierCurve3\", function () {\n    return QuadraticBezierCurve3;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"SplineCurve\", function () {\n    return SplineCurve;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"REVISION\", function () {\n    return REVISION;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MOUSE\", function () {\n    return MOUSE;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CullFaceNone\", function () {\n    return CullFaceNone;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CullFaceBack\", function () {\n    return CullFaceBack;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CullFaceFront\", function () {\n    return CullFaceFront;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CullFaceFrontBack\", function () {\n    return CullFaceFrontBack;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"FrontFaceDirectionCW\", function () {\n    return FrontFaceDirectionCW;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"FrontFaceDirectionCCW\", function () {\n    return FrontFaceDirectionCCW;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"BasicShadowMap\", function () {\n    return BasicShadowMap;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"PCFShadowMap\", function () {\n    return PCFShadowMap;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"PCFSoftShadowMap\", function () {\n    return PCFSoftShadowMap;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"FrontSide\", function () {\n    return FrontSide;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"BackSide\", function () {\n    return BackSide;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"DoubleSide\", function () {\n    return DoubleSide;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"FlatShading\", function () {\n    return FlatShading;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"SmoothShading\", function () {\n    return SmoothShading;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"NoColors\", function () {\n    return NoColors;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"FaceColors\", function () {\n    return FaceColors;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"VertexColors\", function () {\n    return VertexColors;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"NoBlending\", function () {\n    return NoBlending;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"NormalBlending\", function () {\n    return NormalBlending;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"AdditiveBlending\", function () {\n    return AdditiveBlending;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"SubtractiveBlending\", function () {\n    return SubtractiveBlending;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MultiplyBlending\", function () {\n    return MultiplyBlending;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CustomBlending\", function () {\n    return CustomBlending;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"AddEquation\", function () {\n    return AddEquation;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"SubtractEquation\", function () {\n    return SubtractEquation;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ReverseSubtractEquation\", function () {\n    return ReverseSubtractEquation;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MinEquation\", function () {\n    return MinEquation;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MaxEquation\", function () {\n    return MaxEquation;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ZeroFactor\", function () {\n    return ZeroFactor;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"OneFactor\", function () {\n    return OneFactor;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"SrcColorFactor\", function () {\n    return SrcColorFactor;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"OneMinusSrcColorFactor\", function () {\n    return OneMinusSrcColorFactor;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"SrcAlphaFactor\", function () {\n    return SrcAlphaFactor;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"OneMinusSrcAlphaFactor\", function () {\n    return OneMinusSrcAlphaFactor;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"DstAlphaFactor\", function () {\n    return DstAlphaFactor;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"OneMinusDstAlphaFactor\", function () {\n    return OneMinusDstAlphaFactor;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"DstColorFactor\", function () {\n    return DstColorFactor;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"OneMinusDstColorFactor\", function () {\n    return OneMinusDstColorFactor;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"SrcAlphaSaturateFactor\", function () {\n    return SrcAlphaSaturateFactor;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"NeverDepth\", function () {\n    return NeverDepth;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"AlwaysDepth\", function () {\n    return AlwaysDepth;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LessDepth\", function () {\n    return LessDepth;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LessEqualDepth\", function () {\n    return LessEqualDepth;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"EqualDepth\", function () {\n    return EqualDepth;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"GreaterEqualDepth\", function () {\n    return GreaterEqualDepth;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"GreaterDepth\", function () {\n    return GreaterDepth;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"NotEqualDepth\", function () {\n    return NotEqualDepth;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MultiplyOperation\", function () {\n    return MultiplyOperation;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MixOperation\", function () {\n    return MixOperation;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"AddOperation\", function () {\n    return AddOperation;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"NoToneMapping\", function () {\n    return NoToneMapping;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LinearToneMapping\", function () {\n    return LinearToneMapping;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ReinhardToneMapping\", function () {\n    return ReinhardToneMapping;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Uncharted2ToneMapping\", function () {\n    return Uncharted2ToneMapping;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CineonToneMapping\", function () {\n    return CineonToneMapping;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ACESFilmicToneMapping\", function () {\n    return ACESFilmicToneMapping;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"UVMapping\", function () {\n    return UVMapping;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CubeReflectionMapping\", function () {\n    return CubeReflectionMapping;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CubeRefractionMapping\", function () {\n    return CubeRefractionMapping;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"EquirectangularReflectionMapping\", function () {\n    return EquirectangularReflectionMapping;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"EquirectangularRefractionMapping\", function () {\n    return EquirectangularRefractionMapping;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"SphericalReflectionMapping\", function () {\n    return SphericalReflectionMapping;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CubeUVReflectionMapping\", function () {\n    return CubeUVReflectionMapping;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CubeUVRefractionMapping\", function () {\n    return CubeUVRefractionMapping;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RepeatWrapping\", function () {\n    return RepeatWrapping;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ClampToEdgeWrapping\", function () {\n    return ClampToEdgeWrapping;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MirroredRepeatWrapping\", function () {\n    return MirroredRepeatWrapping;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"NearestFilter\", function () {\n    return NearestFilter;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"NearestMipMapNearestFilter\", function () {\n    return NearestMipMapNearestFilter;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"NearestMipMapLinearFilter\", function () {\n    return NearestMipMapLinearFilter;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LinearFilter\", function () {\n    return LinearFilter;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LinearMipMapNearestFilter\", function () {\n    return LinearMipMapNearestFilter;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LinearMipMapLinearFilter\", function () {\n    return LinearMipMapLinearFilter;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"UnsignedByteType\", function () {\n    return UnsignedByteType;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ByteType\", function () {\n    return ByteType;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ShortType\", function () {\n    return ShortType;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"UnsignedShortType\", function () {\n    return UnsignedShortType;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"IntType\", function () {\n    return IntType;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"UnsignedIntType\", function () {\n    return UnsignedIntType;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"FloatType\", function () {\n    return FloatType;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"HalfFloatType\", function () {\n    return HalfFloatType;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"UnsignedShort4444Type\", function () {\n    return UnsignedShort4444Type;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"UnsignedShort5551Type\", function () {\n    return UnsignedShort5551Type;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"UnsignedShort565Type\", function () {\n    return UnsignedShort565Type;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"UnsignedInt248Type\", function () {\n    return UnsignedInt248Type;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"AlphaFormat\", function () {\n    return AlphaFormat;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBFormat\", function () {\n    return RGBFormat;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBAFormat\", function () {\n    return RGBAFormat;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LuminanceFormat\", function () {\n    return LuminanceFormat;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LuminanceAlphaFormat\", function () {\n    return LuminanceAlphaFormat;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBEFormat\", function () {\n    return RGBEFormat;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"DepthFormat\", function () {\n    return DepthFormat;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"DepthStencilFormat\", function () {\n    return DepthStencilFormat;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RedFormat\", function () {\n    return RedFormat;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGB_S3TC_DXT1_Format\", function () {\n    return RGB_S3TC_DXT1_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_S3TC_DXT1_Format\", function () {\n    return RGBA_S3TC_DXT1_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_S3TC_DXT3_Format\", function () {\n    return RGBA_S3TC_DXT3_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_S3TC_DXT5_Format\", function () {\n    return RGBA_S3TC_DXT5_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGB_PVRTC_4BPPV1_Format\", function () {\n    return RGB_PVRTC_4BPPV1_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGB_PVRTC_2BPPV1_Format\", function () {\n    return RGB_PVRTC_2BPPV1_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_PVRTC_4BPPV1_Format\", function () {\n    return RGBA_PVRTC_4BPPV1_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_PVRTC_2BPPV1_Format\", function () {\n    return RGBA_PVRTC_2BPPV1_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGB_ETC1_Format\", function () {\n    return RGB_ETC1_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_ASTC_4x4_Format\", function () {\n    return RGBA_ASTC_4x4_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_ASTC_5x4_Format\", function () {\n    return RGBA_ASTC_5x4_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_ASTC_5x5_Format\", function () {\n    return RGBA_ASTC_5x5_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_ASTC_6x5_Format\", function () {\n    return RGBA_ASTC_6x5_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_ASTC_6x6_Format\", function () {\n    return RGBA_ASTC_6x6_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_ASTC_8x5_Format\", function () {\n    return RGBA_ASTC_8x5_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_ASTC_8x6_Format\", function () {\n    return RGBA_ASTC_8x6_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_ASTC_8x8_Format\", function () {\n    return RGBA_ASTC_8x8_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_ASTC_10x5_Format\", function () {\n    return RGBA_ASTC_10x5_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_ASTC_10x6_Format\", function () {\n    return RGBA_ASTC_10x6_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_ASTC_10x8_Format\", function () {\n    return RGBA_ASTC_10x8_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_ASTC_10x10_Format\", function () {\n    return RGBA_ASTC_10x10_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_ASTC_12x10_Format\", function () {\n    return RGBA_ASTC_12x10_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBA_ASTC_12x12_Format\", function () {\n    return RGBA_ASTC_12x12_Format;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LoopOnce\", function () {\n    return LoopOnce;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LoopRepeat\", function () {\n    return LoopRepeat;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LoopPingPong\", function () {\n    return LoopPingPong;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"InterpolateDiscrete\", function () {\n    return InterpolateDiscrete;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"InterpolateLinear\", function () {\n    return InterpolateLinear;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"InterpolateSmooth\", function () {\n    return InterpolateSmooth;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ZeroCurvatureEnding\", function () {\n    return ZeroCurvatureEnding;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ZeroSlopeEnding\", function () {\n    return ZeroSlopeEnding;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"WrapAroundEnding\", function () {\n    return WrapAroundEnding;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"TrianglesDrawMode\", function () {\n    return TrianglesDrawMode;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"TriangleStripDrawMode\", function () {\n    return TriangleStripDrawMode;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"TriangleFanDrawMode\", function () {\n    return TriangleFanDrawMode;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LinearEncoding\", function () {\n    return LinearEncoding;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"sRGBEncoding\", function () {\n    return sRGBEncoding;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"GammaEncoding\", function () {\n    return GammaEncoding;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBEEncoding\", function () {\n    return RGBEEncoding;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LogLuvEncoding\", function () {\n    return LogLuvEncoding;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBM7Encoding\", function () {\n    return RGBM7Encoding;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBM16Encoding\", function () {\n    return RGBM16Encoding;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBDEncoding\", function () {\n    return RGBDEncoding;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"BasicDepthPacking\", function () {\n    return BasicDepthPacking;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"RGBADepthPacking\", function () {\n    return RGBADepthPacking;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"TangentSpaceNormalMap\", function () {\n    return TangentSpaceNormalMap;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ObjectSpaceNormalMap\", function () {\n    return ObjectSpaceNormalMap;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CubeGeometry\", function () {\n    return BoxGeometry;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Face4\", function () {\n    return Face4;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LineStrip\", function () {\n    return LineStrip;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LinePieces\", function () {\n    return LinePieces;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MeshFaceMaterial\", function () {\n    return MeshFaceMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"MultiMaterial\", function () {\n    return MultiMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"PointCloud\", function () {\n    return PointCloud;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Particle\", function () {\n    return Particle;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ParticleSystem\", function () {\n    return ParticleSystem;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"PointCloudMaterial\", function () {\n    return PointCloudMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ParticleBasicMaterial\", function () {\n    return ParticleBasicMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ParticleSystemMaterial\", function () {\n    return ParticleSystemMaterial;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Vertex\", function () {\n    return Vertex;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"DynamicBufferAttribute\", function () {\n    return DynamicBufferAttribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Int8Attribute\", function () {\n    return Int8Attribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Uint8Attribute\", function () {\n    return Uint8Attribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Uint8ClampedAttribute\", function () {\n    return Uint8ClampedAttribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Int16Attribute\", function () {\n    return Int16Attribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Uint16Attribute\", function () {\n    return Uint16Attribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Int32Attribute\", function () {\n    return Int32Attribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Uint32Attribute\", function () {\n    return Uint32Attribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Float32Attribute\", function () {\n    return Float32Attribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Float64Attribute\", function () {\n    return Float64Attribute;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"ClosedSplineCurve3\", function () {\n    return ClosedSplineCurve3;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"SplineCurve3\", function () {\n    return SplineCurve3;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Spline\", function () {\n    return Spline;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"AxisHelper\", function () {\n    return AxisHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"BoundingBoxHelper\", function () {\n    return BoundingBoxHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"EdgesHelper\", function () {\n    return EdgesHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"WireframeHelper\", function () {\n    return WireframeHelper;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"XHRLoader\", function () {\n    return XHRLoader;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"BinaryTextureLoader\", function () {\n    return BinaryTextureLoader;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"GeometryUtils\", function () {\n    return GeometryUtils;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"Projector\", function () {\n    return Projector;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"CanvasRenderer\", function () {\n    return CanvasRenderer;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"JSONLoader\", function () {\n    return JSONLoader;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"SceneUtils\", function () {\n    return SceneUtils;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"LensFlare\", function () {\n    return LensFlare;\n  }); // Polyfills\n\n\n  if (Number.EPSILON === undefined) {\n    Number.EPSILON = Math.pow(2, -52);\n  }\n\n  if (Number.isInteger === undefined) {\n    // Missing in IE\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n    Number.isInteger = function (value) {\n      return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n    };\n  } //\n\n\n  if (Math.sign === undefined) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n    Math.sign = function (x) {\n      return x < 0 ? -1 : x > 0 ? 1 : +x;\n    };\n  }\n\n  if ('name' in Function.prototype === false) {\n    // Missing in IE\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n    Object.defineProperty(Function.prototype, 'name', {\n      get: function get() {\n        return this.toString().match(/^\\s*function\\s*([^\\(\\s]*)/)[1];\n      }\n    });\n  }\n\n  if (Object.assign === undefined) {\n    // Missing in IE\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    (function () {\n      Object.assign = function (target) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n\n        for (var index = 1; index < arguments.length; index++) {\n          var source = arguments[index];\n\n          if (source !== undefined && source !== null) {\n            for (var nextKey in source) {\n              if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n                output[nextKey] = source[nextKey];\n              }\n            }\n          }\n        }\n\n        return output;\n      };\n    })();\n  }\n  /**\n   * https://github.com/mrdoob/eventdispatcher.js/\n   */\n\n\n  function EventDispatcher() {}\n\n  Object.assign(EventDispatcher.prototype, {\n    addEventListener: function addEventListener(type, listener) {\n      if (this._listeners === undefined) this._listeners = {};\n      var listeners = this._listeners;\n\n      if (listeners[type] === undefined) {\n        listeners[type] = [];\n      }\n\n      if (listeners[type].indexOf(listener) === -1) {\n        listeners[type].push(listener);\n      }\n    },\n    hasEventListener: function hasEventListener(type, listener) {\n      if (this._listeners === undefined) return false;\n      var listeners = this._listeners;\n      return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n    },\n    removeEventListener: function removeEventListener(type, listener) {\n      if (this._listeners === undefined) return;\n      var listeners = this._listeners;\n      var listenerArray = listeners[type];\n\n      if (listenerArray !== undefined) {\n        var index = listenerArray.indexOf(listener);\n\n        if (index !== -1) {\n          listenerArray.splice(index, 1);\n        }\n      }\n    },\n    dispatchEvent: function dispatchEvent(event) {\n      if (this._listeners === undefined) return;\n      var listeners = this._listeners;\n      var listenerArray = listeners[event.type];\n\n      if (listenerArray !== undefined) {\n        event.target = this;\n        var array = listenerArray.slice(0);\n\n        for (var i = 0, l = array.length; i < l; i++) {\n          array[i].call(this, event);\n        }\n      }\n    }\n  });\n  var REVISION = '100';\n  var MOUSE = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2\n  };\n  var CullFaceNone = 0;\n  var CullFaceBack = 1;\n  var CullFaceFront = 2;\n  var CullFaceFrontBack = 3;\n  var FrontFaceDirectionCW = 0;\n  var FrontFaceDirectionCCW = 1;\n  var BasicShadowMap = 0;\n  var PCFShadowMap = 1;\n  var PCFSoftShadowMap = 2;\n  var FrontSide = 0;\n  var BackSide = 1;\n  var DoubleSide = 2;\n  var FlatShading = 1;\n  var SmoothShading = 2;\n  var NoColors = 0;\n  var FaceColors = 1;\n  var VertexColors = 2;\n  var NoBlending = 0;\n  var NormalBlending = 1;\n  var AdditiveBlending = 2;\n  var SubtractiveBlending = 3;\n  var MultiplyBlending = 4;\n  var CustomBlending = 5;\n  var AddEquation = 100;\n  var SubtractEquation = 101;\n  var ReverseSubtractEquation = 102;\n  var MinEquation = 103;\n  var MaxEquation = 104;\n  var ZeroFactor = 200;\n  var OneFactor = 201;\n  var SrcColorFactor = 202;\n  var OneMinusSrcColorFactor = 203;\n  var SrcAlphaFactor = 204;\n  var OneMinusSrcAlphaFactor = 205;\n  var DstAlphaFactor = 206;\n  var OneMinusDstAlphaFactor = 207;\n  var DstColorFactor = 208;\n  var OneMinusDstColorFactor = 209;\n  var SrcAlphaSaturateFactor = 210;\n  var NeverDepth = 0;\n  var AlwaysDepth = 1;\n  var LessDepth = 2;\n  var LessEqualDepth = 3;\n  var EqualDepth = 4;\n  var GreaterEqualDepth = 5;\n  var GreaterDepth = 6;\n  var NotEqualDepth = 7;\n  var MultiplyOperation = 0;\n  var MixOperation = 1;\n  var AddOperation = 2;\n  var NoToneMapping = 0;\n  var LinearToneMapping = 1;\n  var ReinhardToneMapping = 2;\n  var Uncharted2ToneMapping = 3;\n  var CineonToneMapping = 4;\n  var ACESFilmicToneMapping = 5;\n  var UVMapping = 300;\n  var CubeReflectionMapping = 301;\n  var CubeRefractionMapping = 302;\n  var EquirectangularReflectionMapping = 303;\n  var EquirectangularRefractionMapping = 304;\n  var SphericalReflectionMapping = 305;\n  var CubeUVReflectionMapping = 306;\n  var CubeUVRefractionMapping = 307;\n  var RepeatWrapping = 1000;\n  var ClampToEdgeWrapping = 1001;\n  var MirroredRepeatWrapping = 1002;\n  var NearestFilter = 1003;\n  var NearestMipMapNearestFilter = 1004;\n  var NearestMipMapLinearFilter = 1005;\n  var LinearFilter = 1006;\n  var LinearMipMapNearestFilter = 1007;\n  var LinearMipMapLinearFilter = 1008;\n  var UnsignedByteType = 1009;\n  var ByteType = 1010;\n  var ShortType = 1011;\n  var UnsignedShortType = 1012;\n  var IntType = 1013;\n  var UnsignedIntType = 1014;\n  var FloatType = 1015;\n  var HalfFloatType = 1016;\n  var UnsignedShort4444Type = 1017;\n  var UnsignedShort5551Type = 1018;\n  var UnsignedShort565Type = 1019;\n  var UnsignedInt248Type = 1020;\n  var AlphaFormat = 1021;\n  var RGBFormat = 1022;\n  var RGBAFormat = 1023;\n  var LuminanceFormat = 1024;\n  var LuminanceAlphaFormat = 1025;\n  var RGBEFormat = RGBAFormat;\n  var DepthFormat = 1026;\n  var DepthStencilFormat = 1027;\n  var RedFormat = 1028;\n  var RGB_S3TC_DXT1_Format = 33776;\n  var RGBA_S3TC_DXT1_Format = 33777;\n  var RGBA_S3TC_DXT3_Format = 33778;\n  var RGBA_S3TC_DXT5_Format = 33779;\n  var RGB_PVRTC_4BPPV1_Format = 35840;\n  var RGB_PVRTC_2BPPV1_Format = 35841;\n  var RGBA_PVRTC_4BPPV1_Format = 35842;\n  var RGBA_PVRTC_2BPPV1_Format = 35843;\n  var RGB_ETC1_Format = 36196;\n  var RGBA_ASTC_4x4_Format = 37808;\n  var RGBA_ASTC_5x4_Format = 37809;\n  var RGBA_ASTC_5x5_Format = 37810;\n  var RGBA_ASTC_6x5_Format = 37811;\n  var RGBA_ASTC_6x6_Format = 37812;\n  var RGBA_ASTC_8x5_Format = 37813;\n  var RGBA_ASTC_8x6_Format = 37814;\n  var RGBA_ASTC_8x8_Format = 37815;\n  var RGBA_ASTC_10x5_Format = 37816;\n  var RGBA_ASTC_10x6_Format = 37817;\n  var RGBA_ASTC_10x8_Format = 37818;\n  var RGBA_ASTC_10x10_Format = 37819;\n  var RGBA_ASTC_12x10_Format = 37820;\n  var RGBA_ASTC_12x12_Format = 37821;\n  var LoopOnce = 2200;\n  var LoopRepeat = 2201;\n  var LoopPingPong = 2202;\n  var InterpolateDiscrete = 2300;\n  var InterpolateLinear = 2301;\n  var InterpolateSmooth = 2302;\n  var ZeroCurvatureEnding = 2400;\n  var ZeroSlopeEnding = 2401;\n  var WrapAroundEnding = 2402;\n  var TrianglesDrawMode = 0;\n  var TriangleStripDrawMode = 1;\n  var TriangleFanDrawMode = 2;\n  var LinearEncoding = 3000;\n  var sRGBEncoding = 3001;\n  var GammaEncoding = 3007;\n  var RGBEEncoding = 3002;\n  var LogLuvEncoding = 3003;\n  var RGBM7Encoding = 3004;\n  var RGBM16Encoding = 3005;\n  var RGBDEncoding = 3006;\n  var BasicDepthPacking = 3200;\n  var RGBADepthPacking = 3201;\n  var TangentSpaceNormalMap = 0;\n  var ObjectSpaceNormalMap = 1;\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var _Math = {\n    DEG2RAD: Math.PI / 180,\n    RAD2DEG: 180 / Math.PI,\n    generateUUID: function () {\n      // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n      var lut = [];\n\n      for (var i = 0; i < 256; i++) {\n        lut[i] = (i < 16 ? '0' : '') + i.toString(16);\n      }\n\n      return function generateUUID() {\n        var d0 = Math.random() * 0xffffffff | 0;\n        var d1 = Math.random() * 0xffffffff | 0;\n        var d2 = Math.random() * 0xffffffff | 0;\n        var d3 = Math.random() * 0xffffffff | 0;\n        var uuid = lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff] + '-' + lut[d1 & 0xff] + lut[d1 >> 8 & 0xff] + '-' + lut[d1 >> 16 & 0x0f | 0x40] + lut[d1 >> 24 & 0xff] + '-' + lut[d2 & 0x3f | 0x80] + lut[d2 >> 8 & 0xff] + '-' + lut[d2 >> 16 & 0xff] + lut[d2 >> 24 & 0xff] + lut[d3 & 0xff] + lut[d3 >> 8 & 0xff] + lut[d3 >> 16 & 0xff] + lut[d3 >> 24 & 0xff]; // .toUpperCase() here flattens concatenated strings to save heap memory space.\n\n        return uuid.toUpperCase();\n      };\n    }(),\n    clamp: function clamp(value, min, max) {\n      return Math.max(min, Math.min(max, value));\n    },\n    // compute euclidian modulo of m % n\n    // https://en.wikipedia.org/wiki/Modulo_operation\n    euclideanModulo: function euclideanModulo(n, m) {\n      return (n % m + m) % m;\n    },\n    // Linear mapping from range <a1, a2> to range <b1, b2>\n    mapLinear: function mapLinear(x, a1, a2, b1, b2) {\n      return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n    },\n    // https://en.wikipedia.org/wiki/Linear_interpolation\n    lerp: function lerp(x, y, t) {\n      return (1 - t) * x + t * y;\n    },\n    // http://en.wikipedia.org/wiki/Smoothstep\n    smoothstep: function smoothstep(x, min, max) {\n      if (x <= min) return 0;\n      if (x >= max) return 1;\n      x = (x - min) / (max - min);\n      return x * x * (3 - 2 * x);\n    },\n    smootherstep: function smootherstep(x, min, max) {\n      if (x <= min) return 0;\n      if (x >= max) return 1;\n      x = (x - min) / (max - min);\n      return x * x * x * (x * (x * 6 - 15) + 10);\n    },\n    // Random integer from <low, high> interval\n    randInt: function randInt(low, high) {\n      return low + Math.floor(Math.random() * (high - low + 1));\n    },\n    // Random float from <low, high> interval\n    randFloat: function randFloat(low, high) {\n      return low + Math.random() * (high - low);\n    },\n    // Random float from <-range/2, range/2> interval\n    randFloatSpread: function randFloatSpread(range) {\n      return range * (0.5 - Math.random());\n    },\n    degToRad: function degToRad(degrees) {\n      return degrees * _Math.DEG2RAD;\n    },\n    radToDeg: function radToDeg(radians) {\n      return radians * _Math.RAD2DEG;\n    },\n    isPowerOfTwo: function isPowerOfTwo(value) {\n      return (value & value - 1) === 0 && value !== 0;\n    },\n    ceilPowerOfTwo: function ceilPowerOfTwo(value) {\n      return Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\n    },\n    floorPowerOfTwo: function floorPowerOfTwo(value) {\n      return Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\n    }\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author philogb / http://blog.thejit.org/\n   * @author egraether / http://egraether.com/\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   */\n\n  function Vector2(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  Object.defineProperties(Vector2.prototype, {\n    \"width\": {\n      get: function get() {\n        return this.x;\n      },\n      set: function set(value) {\n        this.x = value;\n      }\n    },\n    \"height\": {\n      get: function get() {\n        return this.y;\n      },\n      set: function set(value) {\n        this.y = value;\n      }\n    }\n  });\n  Object.assign(Vector2.prototype, {\n    isVector2: true,\n    set: function set(x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n    setScalar: function setScalar(scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      return this;\n    },\n    setX: function setX(x) {\n      this.x = x;\n      return this;\n    },\n    setY: function setY(y) {\n      this.y = y;\n      return this;\n    },\n    setComponent: function setComponent(index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n\n      return this;\n    },\n    getComponent: function getComponent(index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    },\n    clone: function clone() {\n      return new this.constructor(this.x, this.y);\n    },\n    copy: function copy(v) {\n      this.x = v.x;\n      this.y = v.y;\n      return this;\n    },\n    add: function add(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      return this;\n    },\n    addScalar: function addScalar(s) {\n      this.x += s;\n      this.y += s;\n      return this;\n    },\n    addVectors: function addVectors(a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      return this;\n    },\n    addScaledVector: function addScaledVector(v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      return this;\n    },\n    sub: function sub(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      return this;\n    },\n    subScalar: function subScalar(s) {\n      this.x -= s;\n      this.y -= s;\n      return this;\n    },\n    subVectors: function subVectors(a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      return this;\n    },\n    multiply: function multiply(v) {\n      this.x *= v.x;\n      this.y *= v.y;\n      return this;\n    },\n    multiplyScalar: function multiplyScalar(scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n    divide: function divide(v) {\n      this.x /= v.x;\n      this.y /= v.y;\n      return this;\n    },\n    divideScalar: function divideScalar(scalar) {\n      return this.multiplyScalar(1 / scalar);\n    },\n    applyMatrix3: function applyMatrix3(m) {\n      var x = this.x,\n          y = this.y;\n      var e = m.elements;\n      this.x = e[0] * x + e[3] * y + e[6];\n      this.y = e[1] * x + e[4] * y + e[7];\n      return this;\n    },\n    min: function min(v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      return this;\n    },\n    max: function max(v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      return this;\n    },\n    clamp: function clamp(min, max) {\n      // assumes min < max, componentwise\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      return this;\n    },\n    clampScalar: function () {\n      var min = new Vector2();\n      var max = new Vector2();\n      return function clampScalar(minVal, maxVal) {\n        min.set(minVal, minVal);\n        max.set(maxVal, maxVal);\n        return this.clamp(min, max);\n      };\n    }(),\n    clampLength: function clampLength(min, max) {\n      var length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    },\n    floor: function floor() {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      return this;\n    },\n    ceil: function ceil() {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      return this;\n    },\n    round: function round() {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      return this;\n    },\n    roundToZero: function roundToZero() {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      return this;\n    },\n    negate: function negate() {\n      this.x = -this.x;\n      this.y = -this.y;\n      return this;\n    },\n    dot: function dot(v) {\n      return this.x * v.x + this.y * v.y;\n    },\n    cross: function cross(v) {\n      return this.x * v.y - this.y * v.x;\n    },\n    lengthSq: function lengthSq() {\n      return this.x * this.x + this.y * this.y;\n    },\n    length: function length() {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n    manhattanLength: function manhattanLength() {\n      return Math.abs(this.x) + Math.abs(this.y);\n    },\n    normalize: function normalize() {\n      return this.divideScalar(this.length() || 1);\n    },\n    angle: function angle() {\n      // computes the angle in radians with respect to the positive x-axis\n      var angle = Math.atan2(this.y, this.x);\n      if (angle < 0) angle += 2 * Math.PI;\n      return angle;\n    },\n    distanceTo: function distanceTo(v) {\n      return Math.sqrt(this.distanceToSquared(v));\n    },\n    distanceToSquared: function distanceToSquared(v) {\n      var dx = this.x - v.x,\n          dy = this.y - v.y;\n      return dx * dx + dy * dy;\n    },\n    manhattanDistanceTo: function manhattanDistanceTo(v) {\n      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n    },\n    setLength: function setLength(length) {\n      return this.normalize().multiplyScalar(length);\n    },\n    lerp: function lerp(v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      return this;\n    },\n    lerpVectors: function lerpVectors(v1, v2, alpha) {\n      return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    },\n    equals: function equals(v) {\n      return v.x === this.x && v.y === this.y;\n    },\n    fromArray: function fromArray(array, offset) {\n      if (offset === undefined) offset = 0;\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      return this;\n    },\n    toArray: function toArray(array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      return array;\n    },\n    fromBufferAttribute: function fromBufferAttribute(attribute, index, offset) {\n      if (offset !== undefined) {\n        console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\n      }\n\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      return this;\n    },\n    rotateAround: function rotateAround(center, angle) {\n      var c = Math.cos(angle),\n          s = Math.sin(angle);\n      var x = this.x - center.x;\n      var y = this.y - center.y;\n      this.x = x * c - y * s + center.x;\n      this.y = x * s + y * c + center.y;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author supereggbert / http://www.paulbrunt.co.uk/\n   * @author philogb / http://blog.thejit.org/\n   * @author jordi_ros / http://plattsoft.com\n   * @author D1plo1d / http://github.com/D1plo1d\n   * @author alteredq / http://alteredqualia.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author timknip / http://www.floorplanner.com/\n   * @author bhouston / http://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function Matrix4() {\n    this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n    if (arguments.length > 0) {\n      console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n    }\n  }\n\n  Object.assign(Matrix4.prototype, {\n    isMatrix4: true,\n    set: function set(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n      var te = this.elements;\n      te[0] = n11;\n      te[4] = n12;\n      te[8] = n13;\n      te[12] = n14;\n      te[1] = n21;\n      te[5] = n22;\n      te[9] = n23;\n      te[13] = n24;\n      te[2] = n31;\n      te[6] = n32;\n      te[10] = n33;\n      te[14] = n34;\n      te[3] = n41;\n      te[7] = n42;\n      te[11] = n43;\n      te[15] = n44;\n      return this;\n    },\n    identity: function identity() {\n      this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n      return this;\n    },\n    clone: function clone() {\n      return new Matrix4().fromArray(this.elements);\n    },\n    copy: function copy(m) {\n      var te = this.elements;\n      var me = m.elements;\n      te[0] = me[0];\n      te[1] = me[1];\n      te[2] = me[2];\n      te[3] = me[3];\n      te[4] = me[4];\n      te[5] = me[5];\n      te[6] = me[6];\n      te[7] = me[7];\n      te[8] = me[8];\n      te[9] = me[9];\n      te[10] = me[10];\n      te[11] = me[11];\n      te[12] = me[12];\n      te[13] = me[13];\n      te[14] = me[14];\n      te[15] = me[15];\n      return this;\n    },\n    copyPosition: function copyPosition(m) {\n      var te = this.elements,\n          me = m.elements;\n      te[12] = me[12];\n      te[13] = me[13];\n      te[14] = me[14];\n      return this;\n    },\n    extractBasis: function extractBasis(xAxis, yAxis, zAxis) {\n      xAxis.setFromMatrixColumn(this, 0);\n      yAxis.setFromMatrixColumn(this, 1);\n      zAxis.setFromMatrixColumn(this, 2);\n      return this;\n    },\n    makeBasis: function makeBasis(xAxis, yAxis, zAxis) {\n      this.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n      return this;\n    },\n    extractRotation: function () {\n      var v1 = new Vector3();\n      return function extractRotation(m) {\n        // this method does not support reflection matrices\n        var te = this.elements;\n        var me = m.elements;\n        var scaleX = 1 / v1.setFromMatrixColumn(m, 0).length();\n        var scaleY = 1 / v1.setFromMatrixColumn(m, 1).length();\n        var scaleZ = 1 / v1.setFromMatrixColumn(m, 2).length();\n        te[0] = me[0] * scaleX;\n        te[1] = me[1] * scaleX;\n        te[2] = me[2] * scaleX;\n        te[3] = 0;\n        te[4] = me[4] * scaleY;\n        te[5] = me[5] * scaleY;\n        te[6] = me[6] * scaleY;\n        te[7] = 0;\n        te[8] = me[8] * scaleZ;\n        te[9] = me[9] * scaleZ;\n        te[10] = me[10] * scaleZ;\n        te[11] = 0;\n        te[12] = 0;\n        te[13] = 0;\n        te[14] = 0;\n        te[15] = 1;\n        return this;\n      };\n    }(),\n    makeRotationFromEuler: function makeRotationFromEuler(euler) {\n      if (!(euler && euler.isEuler)) {\n        console.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n      }\n\n      var te = this.elements;\n      var x = euler.x,\n          y = euler.y,\n          z = euler.z;\n      var a = Math.cos(x),\n          b = Math.sin(x);\n      var c = Math.cos(y),\n          d = Math.sin(y);\n      var e = Math.cos(z),\n          f = Math.sin(z);\n\n      if (euler.order === 'XYZ') {\n        var ae = a * e,\n            af = a * f,\n            be = b * e,\n            bf = b * f;\n        te[0] = c * e;\n        te[4] = -c * f;\n        te[8] = d;\n        te[1] = af + be * d;\n        te[5] = ae - bf * d;\n        te[9] = -b * c;\n        te[2] = bf - ae * d;\n        te[6] = be + af * d;\n        te[10] = a * c;\n      } else if (euler.order === 'YXZ') {\n        var ce = c * e,\n            cf = c * f,\n            de = d * e,\n            df = d * f;\n        te[0] = ce + df * b;\n        te[4] = de * b - cf;\n        te[8] = a * d;\n        te[1] = a * f;\n        te[5] = a * e;\n        te[9] = -b;\n        te[2] = cf * b - de;\n        te[6] = df + ce * b;\n        te[10] = a * c;\n      } else if (euler.order === 'ZXY') {\n        var ce = c * e,\n            cf = c * f,\n            de = d * e,\n            df = d * f;\n        te[0] = ce - df * b;\n        te[4] = -a * f;\n        te[8] = de + cf * b;\n        te[1] = cf + de * b;\n        te[5] = a * e;\n        te[9] = df - ce * b;\n        te[2] = -a * d;\n        te[6] = b;\n        te[10] = a * c;\n      } else if (euler.order === 'ZYX') {\n        var ae = a * e,\n            af = a * f,\n            be = b * e,\n            bf = b * f;\n        te[0] = c * e;\n        te[4] = be * d - af;\n        te[8] = ae * d + bf;\n        te[1] = c * f;\n        te[5] = bf * d + ae;\n        te[9] = af * d - be;\n        te[2] = -d;\n        te[6] = b * c;\n        te[10] = a * c;\n      } else if (euler.order === 'YZX') {\n        var ac = a * c,\n            ad = a * d,\n            bc = b * c,\n            bd = b * d;\n        te[0] = c * e;\n        te[4] = bd - ac * f;\n        te[8] = bc * f + ad;\n        te[1] = f;\n        te[5] = a * e;\n        te[9] = -b * e;\n        te[2] = -d * e;\n        te[6] = ad * f + bc;\n        te[10] = ac - bd * f;\n      } else if (euler.order === 'XZY') {\n        var ac = a * c,\n            ad = a * d,\n            bc = b * c,\n            bd = b * d;\n        te[0] = c * e;\n        te[4] = -f;\n        te[8] = d * e;\n        te[1] = ac * f + bd;\n        te[5] = a * e;\n        te[9] = ad * f - bc;\n        te[2] = bc * f - ad;\n        te[6] = b * e;\n        te[10] = bd * f + ac;\n      } // bottom row\n\n\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = 0; // last column\n\n      te[12] = 0;\n      te[13] = 0;\n      te[14] = 0;\n      te[15] = 1;\n      return this;\n    },\n    makeRotationFromQuaternion: function () {\n      var zero = new Vector3(0, 0, 0);\n      var one = new Vector3(1, 1, 1);\n      return function makeRotationFromQuaternion(q) {\n        return this.compose(zero, q, one);\n      };\n    }(),\n    lookAt: function () {\n      var x = new Vector3();\n      var y = new Vector3();\n      var z = new Vector3();\n      return function lookAt(eye, target, up) {\n        var te = this.elements;\n        z.subVectors(eye, target);\n\n        if (z.lengthSq() === 0) {\n          // eye and target are in the same position\n          z.z = 1;\n        }\n\n        z.normalize();\n        x.crossVectors(up, z);\n\n        if (x.lengthSq() === 0) {\n          // up and z are parallel\n          if (Math.abs(up.z) === 1) {\n            z.x += 0.0001;\n          } else {\n            z.z += 0.0001;\n          }\n\n          z.normalize();\n          x.crossVectors(up, z);\n        }\n\n        x.normalize();\n        y.crossVectors(z, x);\n        te[0] = x.x;\n        te[4] = y.x;\n        te[8] = z.x;\n        te[1] = x.y;\n        te[5] = y.y;\n        te[9] = z.y;\n        te[2] = x.z;\n        te[6] = y.z;\n        te[10] = z.z;\n        return this;\n      };\n    }(),\n    multiply: function multiply(m, n) {\n      if (n !== undefined) {\n        console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n        return this.multiplyMatrices(m, n);\n      }\n\n      return this.multiplyMatrices(this, m);\n    },\n    premultiply: function premultiply(m) {\n      return this.multiplyMatrices(m, this);\n    },\n    multiplyMatrices: function multiplyMatrices(a, b) {\n      var ae = a.elements;\n      var be = b.elements;\n      var te = this.elements;\n      var a11 = ae[0],\n          a12 = ae[4],\n          a13 = ae[8],\n          a14 = ae[12];\n      var a21 = ae[1],\n          a22 = ae[5],\n          a23 = ae[9],\n          a24 = ae[13];\n      var a31 = ae[2],\n          a32 = ae[6],\n          a33 = ae[10],\n          a34 = ae[14];\n      var a41 = ae[3],\n          a42 = ae[7],\n          a43 = ae[11],\n          a44 = ae[15];\n      var b11 = be[0],\n          b12 = be[4],\n          b13 = be[8],\n          b14 = be[12];\n      var b21 = be[1],\n          b22 = be[5],\n          b23 = be[9],\n          b24 = be[13];\n      var b31 = be[2],\n          b32 = be[6],\n          b33 = be[10],\n          b34 = be[14];\n      var b41 = be[3],\n          b42 = be[7],\n          b43 = be[11],\n          b44 = be[15];\n      te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n      te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n      te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n      te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n      te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n      te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n      te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n      te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n      te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n      te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n      te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n      te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n      te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n      te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n      te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n      te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n      return this;\n    },\n    multiplyScalar: function multiplyScalar(s) {\n      var te = this.elements;\n      te[0] *= s;\n      te[4] *= s;\n      te[8] *= s;\n      te[12] *= s;\n      te[1] *= s;\n      te[5] *= s;\n      te[9] *= s;\n      te[13] *= s;\n      te[2] *= s;\n      te[6] *= s;\n      te[10] *= s;\n      te[14] *= s;\n      te[3] *= s;\n      te[7] *= s;\n      te[11] *= s;\n      te[15] *= s;\n      return this;\n    },\n    applyToBufferAttribute: function () {\n      var v1 = new Vector3();\n      return function applyToBufferAttribute(attribute) {\n        for (var i = 0, l = attribute.count; i < l; i++) {\n          v1.x = attribute.getX(i);\n          v1.y = attribute.getY(i);\n          v1.z = attribute.getZ(i);\n          v1.applyMatrix4(this);\n          attribute.setXYZ(i, v1.x, v1.y, v1.z);\n        }\n\n        return attribute;\n      };\n    }(),\n    determinant: function determinant() {\n      var te = this.elements;\n      var n11 = te[0],\n          n12 = te[4],\n          n13 = te[8],\n          n14 = te[12];\n      var n21 = te[1],\n          n22 = te[5],\n          n23 = te[9],\n          n24 = te[13];\n      var n31 = te[2],\n          n32 = te[6],\n          n33 = te[10],\n          n34 = te[14];\n      var n41 = te[3],\n          n42 = te[7],\n          n43 = te[11],\n          n44 = te[15]; //TODO: make this more efficient\n      //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n      return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n    },\n    transpose: function transpose() {\n      var te = this.elements;\n      var tmp;\n      tmp = te[1];\n      te[1] = te[4];\n      te[4] = tmp;\n      tmp = te[2];\n      te[2] = te[8];\n      te[8] = tmp;\n      tmp = te[6];\n      te[6] = te[9];\n      te[9] = tmp;\n      tmp = te[3];\n      te[3] = te[12];\n      te[12] = tmp;\n      tmp = te[7];\n      te[7] = te[13];\n      te[13] = tmp;\n      tmp = te[11];\n      te[11] = te[14];\n      te[14] = tmp;\n      return this;\n    },\n    setPosition: function setPosition(v) {\n      var te = this.elements;\n      te[12] = v.x;\n      te[13] = v.y;\n      te[14] = v.z;\n      return this;\n    },\n    getInverse: function getInverse(m, throwOnDegenerate) {\n      // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n      var te = this.elements,\n          me = m.elements,\n          n11 = me[0],\n          n21 = me[1],\n          n31 = me[2],\n          n41 = me[3],\n          n12 = me[4],\n          n22 = me[5],\n          n32 = me[6],\n          n42 = me[7],\n          n13 = me[8],\n          n23 = me[9],\n          n33 = me[10],\n          n43 = me[11],\n          n14 = me[12],\n          n24 = me[13],\n          n34 = me[14],\n          n44 = me[15],\n          t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n          t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n          t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n          t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n      var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n      if (det === 0) {\n        var msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n        if (throwOnDegenerate === true) {\n          throw new Error(msg);\n        } else {\n          console.warn(msg);\n        }\n\n        return this.identity();\n      }\n\n      var detInv = 1 / det;\n      te[0] = t11 * detInv;\n      te[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n      te[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n      te[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n      te[4] = t12 * detInv;\n      te[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n      te[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n      te[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n      te[8] = t13 * detInv;\n      te[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n      te[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n      te[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n      te[12] = t14 * detInv;\n      te[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n      te[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n      te[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n      return this;\n    },\n    scale: function scale(v) {\n      var te = this.elements;\n      var x = v.x,\n          y = v.y,\n          z = v.z;\n      te[0] *= x;\n      te[4] *= y;\n      te[8] *= z;\n      te[1] *= x;\n      te[5] *= y;\n      te[9] *= z;\n      te[2] *= x;\n      te[6] *= y;\n      te[10] *= z;\n      te[3] *= x;\n      te[7] *= y;\n      te[11] *= z;\n      return this;\n    },\n    getMaxScaleOnAxis: function getMaxScaleOnAxis() {\n      var te = this.elements;\n      var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n      var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n      var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n      return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n    },\n    makeTranslation: function makeTranslation(x, y, z) {\n      this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationX: function makeRotationX(theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationY: function makeRotationY(theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationZ: function makeRotationZ(theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationAxis: function makeRotationAxis(axis, angle) {\n      // Based on http://www.gamedev.net/reference/articles/article1199.asp\n      var c = Math.cos(angle);\n      var s = Math.sin(angle);\n      var t = 1 - c;\n      var x = axis.x,\n          y = axis.y,\n          z = axis.z;\n      var tx = t * x,\n          ty = t * y;\n      this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeScale: function makeScale(x, y, z) {\n      this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeShear: function makeShear(x, y, z) {\n      this.set(1, y, z, 0, x, 1, z, 0, x, y, 1, 0, 0, 0, 0, 1);\n      return this;\n    },\n    compose: function compose(position, quaternion, scale) {\n      var te = this.elements;\n      var x = quaternion._x,\n          y = quaternion._y,\n          z = quaternion._z,\n          w = quaternion._w;\n      var x2 = x + x,\n          y2 = y + y,\n          z2 = z + z;\n      var xx = x * x2,\n          xy = x * y2,\n          xz = x * z2;\n      var yy = y * y2,\n          yz = y * z2,\n          zz = z * z2;\n      var wx = w * x2,\n          wy = w * y2,\n          wz = w * z2;\n      var sx = scale.x,\n          sy = scale.y,\n          sz = scale.z;\n      te[0] = (1 - (yy + zz)) * sx;\n      te[1] = (xy + wz) * sx;\n      te[2] = (xz - wy) * sx;\n      te[3] = 0;\n      te[4] = (xy - wz) * sy;\n      te[5] = (1 - (xx + zz)) * sy;\n      te[6] = (yz + wx) * sy;\n      te[7] = 0;\n      te[8] = (xz + wy) * sz;\n      te[9] = (yz - wx) * sz;\n      te[10] = (1 - (xx + yy)) * sz;\n      te[11] = 0;\n      te[12] = position.x;\n      te[13] = position.y;\n      te[14] = position.z;\n      te[15] = 1;\n      return this;\n    },\n    decompose: function () {\n      var vector = new Vector3();\n      var matrix = new Matrix4();\n      return function decompose(position, quaternion, scale) {\n        var te = this.elements;\n        var sx = vector.set(te[0], te[1], te[2]).length();\n        var sy = vector.set(te[4], te[5], te[6]).length();\n        var sz = vector.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n        var det = this.determinant();\n        if (det < 0) sx = -sx;\n        position.x = te[12];\n        position.y = te[13];\n        position.z = te[14]; // scale the rotation part\n\n        matrix.copy(this);\n        var invSX = 1 / sx;\n        var invSY = 1 / sy;\n        var invSZ = 1 / sz;\n        matrix.elements[0] *= invSX;\n        matrix.elements[1] *= invSX;\n        matrix.elements[2] *= invSX;\n        matrix.elements[4] *= invSY;\n        matrix.elements[5] *= invSY;\n        matrix.elements[6] *= invSY;\n        matrix.elements[8] *= invSZ;\n        matrix.elements[9] *= invSZ;\n        matrix.elements[10] *= invSZ;\n        quaternion.setFromRotationMatrix(matrix);\n        scale.x = sx;\n        scale.y = sy;\n        scale.z = sz;\n        return this;\n      };\n    }(),\n    makePerspective: function makePerspective(left, right, top, bottom, near, far) {\n      if (far === undefined) {\n        console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\n      }\n\n      var te = this.elements;\n      var x = 2 * near / (right - left);\n      var y = 2 * near / (top - bottom);\n      var a = (right + left) / (right - left);\n      var b = (top + bottom) / (top - bottom);\n      var c = -(far + near) / (far - near);\n      var d = -2 * far * near / (far - near);\n      te[0] = x;\n      te[4] = 0;\n      te[8] = a;\n      te[12] = 0;\n      te[1] = 0;\n      te[5] = y;\n      te[9] = b;\n      te[13] = 0;\n      te[2] = 0;\n      te[6] = 0;\n      te[10] = c;\n      te[14] = d;\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = -1;\n      te[15] = 0;\n      return this;\n    },\n    makeOrthographic: function makeOrthographic(left, right, top, bottom, near, far) {\n      var te = this.elements;\n      var w = 1.0 / (right - left);\n      var h = 1.0 / (top - bottom);\n      var p = 1.0 / (far - near);\n      var x = (right + left) * w;\n      var y = (top + bottom) * h;\n      var z = (far + near) * p;\n      te[0] = 2 * w;\n      te[4] = 0;\n      te[8] = 0;\n      te[12] = -x;\n      te[1] = 0;\n      te[5] = 2 * h;\n      te[9] = 0;\n      te[13] = -y;\n      te[2] = 0;\n      te[6] = 0;\n      te[10] = -2 * p;\n      te[14] = -z;\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = 0;\n      te[15] = 1;\n      return this;\n    },\n    equals: function equals(matrix) {\n      var te = this.elements;\n      var me = matrix.elements;\n\n      for (var i = 0; i < 16; i++) {\n        if (te[i] !== me[i]) return false;\n      }\n\n      return true;\n    },\n    fromArray: function fromArray(array, offset) {\n      if (offset === undefined) offset = 0;\n\n      for (var i = 0; i < 16; i++) {\n        this.elements[i] = array[i + offset];\n      }\n\n      return this;\n    },\n    toArray: function toArray(array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      var te = this.elements;\n      array[offset] = te[0];\n      array[offset + 1] = te[1];\n      array[offset + 2] = te[2];\n      array[offset + 3] = te[3];\n      array[offset + 4] = te[4];\n      array[offset + 5] = te[5];\n      array[offset + 6] = te[6];\n      array[offset + 7] = te[7];\n      array[offset + 8] = te[8];\n      array[offset + 9] = te[9];\n      array[offset + 10] = te[10];\n      array[offset + 11] = te[11];\n      array[offset + 12] = te[12];\n      array[offset + 13] = te[13];\n      array[offset + 14] = te[14];\n      array[offset + 15] = te[15];\n      return array;\n    }\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author bhouston / http://clara.io\n   */\n\n  function Quaternion(x, y, z, w) {\n    this._x = x || 0;\n    this._y = y || 0;\n    this._z = z || 0;\n    this._w = w !== undefined ? w : 1;\n  }\n\n  Object.assign(Quaternion, {\n    slerp: function slerp(qa, qb, qm, t) {\n      return qm.copy(qa).slerp(qb, t);\n    },\n    slerpFlat: function slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n      // fuzz-free, array-based Quaternion SLERP operation\n      var x0 = src0[srcOffset0 + 0],\n          y0 = src0[srcOffset0 + 1],\n          z0 = src0[srcOffset0 + 2],\n          w0 = src0[srcOffset0 + 3],\n          x1 = src1[srcOffset1 + 0],\n          y1 = src1[srcOffset1 + 1],\n          z1 = src1[srcOffset1 + 2],\n          w1 = src1[srcOffset1 + 3];\n\n      if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n        var s = 1 - t,\n            cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n            dir = cos >= 0 ? 1 : -1,\n            sqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n        if (sqrSin > Number.EPSILON) {\n          var sin = Math.sqrt(sqrSin),\n              len = Math.atan2(sin, cos * dir);\n          s = Math.sin(s * len) / sin;\n          t = Math.sin(t * len) / sin;\n        }\n\n        var tDir = t * dir;\n        x0 = x0 * s + x1 * tDir;\n        y0 = y0 * s + y1 * tDir;\n        z0 = z0 * s + z1 * tDir;\n        w0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n        if (s === 1 - t) {\n          var f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n          x0 *= f;\n          y0 *= f;\n          z0 *= f;\n          w0 *= f;\n        }\n      }\n\n      dst[dstOffset] = x0;\n      dst[dstOffset + 1] = y0;\n      dst[dstOffset + 2] = z0;\n      dst[dstOffset + 3] = w0;\n    }\n  });\n  Object.defineProperties(Quaternion.prototype, {\n    x: {\n      get: function get() {\n        return this._x;\n      },\n      set: function set(value) {\n        this._x = value;\n        this.onChangeCallback();\n      }\n    },\n    y: {\n      get: function get() {\n        return this._y;\n      },\n      set: function set(value) {\n        this._y = value;\n        this.onChangeCallback();\n      }\n    },\n    z: {\n      get: function get() {\n        return this._z;\n      },\n      set: function set(value) {\n        this._z = value;\n        this.onChangeCallback();\n      }\n    },\n    w: {\n      get: function get() {\n        return this._w;\n      },\n      set: function set(value) {\n        this._w = value;\n        this.onChangeCallback();\n      }\n    }\n  });\n  Object.assign(Quaternion.prototype, {\n    isQuaternion: true,\n    set: function set(x, y, z, w) {\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      this._w = w;\n      this.onChangeCallback();\n      return this;\n    },\n    clone: function clone() {\n      return new this.constructor(this._x, this._y, this._z, this._w);\n    },\n    copy: function copy(quaternion) {\n      this._x = quaternion.x;\n      this._y = quaternion.y;\n      this._z = quaternion.z;\n      this._w = quaternion.w;\n      this.onChangeCallback();\n      return this;\n    },\n    setFromEuler: function setFromEuler(euler, update) {\n      if (!(euler && euler.isEuler)) {\n        throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\n      }\n\n      var x = euler._x,\n          y = euler._y,\n          z = euler._z,\n          order = euler.order; // http://www.mathworks.com/matlabcentral/fileexchange/\n      // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n      //\tcontent/SpinCalc.m\n\n      var cos = Math.cos;\n      var sin = Math.sin;\n      var c1 = cos(x / 2);\n      var c2 = cos(y / 2);\n      var c3 = cos(z / 2);\n      var s1 = sin(x / 2);\n      var s2 = sin(y / 2);\n      var s3 = sin(z / 2);\n\n      if (order === 'XYZ') {\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n      } else if (order === 'YXZ') {\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n      } else if (order === 'ZXY') {\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n      } else if (order === 'ZYX') {\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n      } else if (order === 'YZX') {\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n      } else if (order === 'XZY') {\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n      }\n\n      if (update !== false) this.onChangeCallback();\n      return this;\n    },\n    setFromAxisAngle: function setFromAxisAngle(axis, angle) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n      // assumes axis is normalized\n      var halfAngle = angle / 2,\n          s = Math.sin(halfAngle);\n      this._x = axis.x * s;\n      this._y = axis.y * s;\n      this._z = axis.z * s;\n      this._w = Math.cos(halfAngle);\n      this.onChangeCallback();\n      return this;\n    },\n    setFromRotationMatrix: function setFromRotationMatrix(m) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      var te = m.elements,\n          m11 = te[0],\n          m12 = te[4],\n          m13 = te[8],\n          m21 = te[1],\n          m22 = te[5],\n          m23 = te[9],\n          m31 = te[2],\n          m32 = te[6],\n          m33 = te[10],\n          trace = m11 + m22 + m33,\n          s;\n\n      if (trace > 0) {\n        s = 0.5 / Math.sqrt(trace + 1.0);\n        this._w = 0.25 / s;\n        this._x = (m32 - m23) * s;\n        this._y = (m13 - m31) * s;\n        this._z = (m21 - m12) * s;\n      } else if (m11 > m22 && m11 > m33) {\n        s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n        this._w = (m32 - m23) / s;\n        this._x = 0.25 * s;\n        this._y = (m12 + m21) / s;\n        this._z = (m13 + m31) / s;\n      } else if (m22 > m33) {\n        s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n        this._w = (m13 - m31) / s;\n        this._x = (m12 + m21) / s;\n        this._y = 0.25 * s;\n        this._z = (m23 + m32) / s;\n      } else {\n        s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n        this._w = (m21 - m12) / s;\n        this._x = (m13 + m31) / s;\n        this._y = (m23 + m32) / s;\n        this._z = 0.25 * s;\n      }\n\n      this.onChangeCallback();\n      return this;\n    },\n    setFromUnitVectors: function () {\n      // assumes direction vectors vFrom and vTo are normalized\n      var v1 = new Vector3();\n      var r;\n      var EPS = 0.000001;\n      return function setFromUnitVectors(vFrom, vTo) {\n        if (v1 === undefined) v1 = new Vector3();\n        r = vFrom.dot(vTo) + 1;\n\n        if (r < EPS) {\n          r = 0;\n\n          if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n            v1.set(-vFrom.y, vFrom.x, 0);\n          } else {\n            v1.set(0, -vFrom.z, vFrom.y);\n          }\n        } else {\n          v1.crossVectors(vFrom, vTo);\n        }\n\n        this._x = v1.x;\n        this._y = v1.y;\n        this._z = v1.z;\n        this._w = r;\n        return this.normalize();\n      };\n    }(),\n    angleTo: function angleTo(q) {\n      return 2 * Math.acos(Math.abs(_Math.clamp(this.dot(q), -1, 1)));\n    },\n    rotateTowards: function rotateTowards(q, step) {\n      var angle = this.angleTo(q);\n      if (angle === 0) return this;\n      var t = Math.min(1, step / angle);\n      this.slerp(q, t);\n      return this;\n    },\n    inverse: function inverse() {\n      // quaternion is assumed to have unit length\n      return this.conjugate();\n    },\n    conjugate: function conjugate() {\n      this._x *= -1;\n      this._y *= -1;\n      this._z *= -1;\n      this.onChangeCallback();\n      return this;\n    },\n    dot: function dot(v) {\n      return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n    },\n    lengthSq: function lengthSq() {\n      return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n    },\n    length: function length() {\n      return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n    },\n    normalize: function normalize() {\n      var l = this.length();\n\n      if (l === 0) {\n        this._x = 0;\n        this._y = 0;\n        this._z = 0;\n        this._w = 1;\n      } else {\n        l = 1 / l;\n        this._x = this._x * l;\n        this._y = this._y * l;\n        this._z = this._z * l;\n        this._w = this._w * l;\n      }\n\n      this.onChangeCallback();\n      return this;\n    },\n    multiply: function multiply(q, p) {\n      if (p !== undefined) {\n        console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n        return this.multiplyQuaternions(q, p);\n      }\n\n      return this.multiplyQuaternions(this, q);\n    },\n    premultiply: function premultiply(q) {\n      return this.multiplyQuaternions(q, this);\n    },\n    multiplyQuaternions: function multiplyQuaternions(a, b) {\n      // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n      var qax = a._x,\n          qay = a._y,\n          qaz = a._z,\n          qaw = a._w;\n      var qbx = b._x,\n          qby = b._y,\n          qbz = b._z,\n          qbw = b._w;\n      this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n      this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n      this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n      this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n      this.onChangeCallback();\n      return this;\n    },\n    slerp: function slerp(qb, t) {\n      if (t === 0) return this;\n      if (t === 1) return this.copy(qb);\n      var x = this._x,\n          y = this._y,\n          z = this._z,\n          w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n      var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n      if (cosHalfTheta < 0) {\n        this._w = -qb._w;\n        this._x = -qb._x;\n        this._y = -qb._y;\n        this._z = -qb._z;\n        cosHalfTheta = -cosHalfTheta;\n      } else {\n        this.copy(qb);\n      }\n\n      if (cosHalfTheta >= 1.0) {\n        this._w = w;\n        this._x = x;\n        this._y = y;\n        this._z = z;\n        return this;\n      }\n\n      var sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n      if (sqrSinHalfTheta <= Number.EPSILON) {\n        var s = 1 - t;\n        this._w = s * w + t * this._w;\n        this._x = s * x + t * this._x;\n        this._y = s * y + t * this._y;\n        this._z = s * z + t * this._z;\n        return this.normalize();\n      }\n\n      var sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n      var halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n      var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n          ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n      this._w = w * ratioA + this._w * ratioB;\n      this._x = x * ratioA + this._x * ratioB;\n      this._y = y * ratioA + this._y * ratioB;\n      this._z = z * ratioA + this._z * ratioB;\n      this.onChangeCallback();\n      return this;\n    },\n    equals: function equals(quaternion) {\n      return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n    },\n    fromArray: function fromArray(array, offset) {\n      if (offset === undefined) offset = 0;\n      this._x = array[offset];\n      this._y = array[offset + 1];\n      this._z = array[offset + 2];\n      this._w = array[offset + 3];\n      this.onChangeCallback();\n      return this;\n    },\n    toArray: function toArray(array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this._x;\n      array[offset + 1] = this._y;\n      array[offset + 2] = this._z;\n      array[offset + 3] = this._w;\n      return array;\n    },\n    onChange: function onChange(callback) {\n      this.onChangeCallback = callback;\n      return this;\n    },\n    onChangeCallback: function onChangeCallback() {}\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author kile / http://kile.stravaganza.org/\n   * @author philogb / http://blog.thejit.org/\n   * @author mikael emtinger / http://gomo.se/\n   * @author egraether / http://egraether.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function Vector3(x, y, z) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n  }\n\n  Object.assign(Vector3.prototype, {\n    isVector3: true,\n    set: function set(x, y, z) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      return this;\n    },\n    setScalar: function setScalar(scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      this.z = scalar;\n      return this;\n    },\n    setX: function setX(x) {\n      this.x = x;\n      return this;\n    },\n    setY: function setY(y) {\n      this.y = y;\n      return this;\n    },\n    setZ: function setZ(z) {\n      this.z = z;\n      return this;\n    },\n    setComponent: function setComponent(index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        case 2:\n          this.z = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n\n      return this;\n    },\n    getComponent: function getComponent(index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        case 2:\n          return this.z;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    },\n    clone: function clone() {\n      return new this.constructor(this.x, this.y, this.z);\n    },\n    copy: function copy(v) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      return this;\n    },\n    add: function add(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n      return this;\n    },\n    addScalar: function addScalar(s) {\n      this.x += s;\n      this.y += s;\n      this.z += s;\n      return this;\n    },\n    addVectors: function addVectors(a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      this.z = a.z + b.z;\n      return this;\n    },\n    addScaledVector: function addScaledVector(v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      this.z += v.z * s;\n      return this;\n    },\n    sub: function sub(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n      return this;\n    },\n    subScalar: function subScalar(s) {\n      this.x -= s;\n      this.y -= s;\n      this.z -= s;\n      return this;\n    },\n    subVectors: function subVectors(a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      this.z = a.z - b.z;\n      return this;\n    },\n    multiply: function multiply(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n        return this.multiplyVectors(v, w);\n      }\n\n      this.x *= v.x;\n      this.y *= v.y;\n      this.z *= v.z;\n      return this;\n    },\n    multiplyScalar: function multiplyScalar(scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      return this;\n    },\n    multiplyVectors: function multiplyVectors(a, b) {\n      this.x = a.x * b.x;\n      this.y = a.y * b.y;\n      this.z = a.z * b.z;\n      return this;\n    },\n    applyEuler: function () {\n      var quaternion = new Quaternion();\n      return function applyEuler(euler) {\n        if (!(euler && euler.isEuler)) {\n          console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n        }\n\n        return this.applyQuaternion(quaternion.setFromEuler(euler));\n      };\n    }(),\n    applyAxisAngle: function () {\n      var quaternion = new Quaternion();\n      return function applyAxisAngle(axis, angle) {\n        return this.applyQuaternion(quaternion.setFromAxisAngle(axis, angle));\n      };\n    }(),\n    applyMatrix3: function applyMatrix3(m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      this.x = e[0] * x + e[3] * y + e[6] * z;\n      this.y = e[1] * x + e[4] * y + e[7] * z;\n      this.z = e[2] * x + e[5] * y + e[8] * z;\n      return this;\n    },\n    applyMatrix4: function applyMatrix4(m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      var w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n      this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n      this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n      this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n      return this;\n    },\n    applyQuaternion: function applyQuaternion(q) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var qx = q.x,\n          qy = q.y,\n          qz = q.z,\n          qw = q.w; // calculate quat * vector\n\n      var ix = qw * x + qy * z - qz * y;\n      var iy = qw * y + qz * x - qx * z;\n      var iz = qw * z + qx * y - qy * x;\n      var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n      this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n      this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n      this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n      return this;\n    },\n    project: function project(camera) {\n      return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n    },\n    unproject: function () {\n      var matrix = new Matrix4();\n      return function unproject(camera) {\n        return this.applyMatrix4(matrix.getInverse(camera.projectionMatrix)).applyMatrix4(camera.matrixWorld);\n      };\n    }(),\n    transformDirection: function transformDirection(m) {\n      // input: THREE.Matrix4 affine matrix\n      // vector interpreted as a direction\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      this.x = e[0] * x + e[4] * y + e[8] * z;\n      this.y = e[1] * x + e[5] * y + e[9] * z;\n      this.z = e[2] * x + e[6] * y + e[10] * z;\n      return this.normalize();\n    },\n    divide: function divide(v) {\n      this.x /= v.x;\n      this.y /= v.y;\n      this.z /= v.z;\n      return this;\n    },\n    divideScalar: function divideScalar(scalar) {\n      return this.multiplyScalar(1 / scalar);\n    },\n    min: function min(v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      this.z = Math.min(this.z, v.z);\n      return this;\n    },\n    max: function max(v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      this.z = Math.max(this.z, v.z);\n      return this;\n    },\n    clamp: function clamp(min, max) {\n      // assumes min < max, componentwise\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      this.z = Math.max(min.z, Math.min(max.z, this.z));\n      return this;\n    },\n    clampScalar: function () {\n      var min = new Vector3();\n      var max = new Vector3();\n      return function clampScalar(minVal, maxVal) {\n        min.set(minVal, minVal, minVal);\n        max.set(maxVal, maxVal, maxVal);\n        return this.clamp(min, max);\n      };\n    }(),\n    clampLength: function clampLength(min, max) {\n      var length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    },\n    floor: function floor() {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      this.z = Math.floor(this.z);\n      return this;\n    },\n    ceil: function ceil() {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      this.z = Math.ceil(this.z);\n      return this;\n    },\n    round: function round() {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      this.z = Math.round(this.z);\n      return this;\n    },\n    roundToZero: function roundToZero() {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n      return this;\n    },\n    negate: function negate() {\n      this.x = -this.x;\n      this.y = -this.y;\n      this.z = -this.z;\n      return this;\n    },\n    dot: function dot(v) {\n      return this.x * v.x + this.y * v.y + this.z * v.z;\n    },\n    // TODO lengthSquared?\n    lengthSq: function lengthSq() {\n      return this.x * this.x + this.y * this.y + this.z * this.z;\n    },\n    length: function length() {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    },\n    manhattanLength: function manhattanLength() {\n      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n    },\n    normalize: function normalize() {\n      return this.divideScalar(this.length() || 1);\n    },\n    setLength: function setLength(length) {\n      return this.normalize().multiplyScalar(length);\n    },\n    lerp: function lerp(v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      this.z += (v.z - this.z) * alpha;\n      return this;\n    },\n    lerpVectors: function lerpVectors(v1, v2, alpha) {\n      return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    },\n    cross: function cross(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n        return this.crossVectors(v, w);\n      }\n\n      return this.crossVectors(this, v);\n    },\n    crossVectors: function crossVectors(a, b) {\n      var ax = a.x,\n          ay = a.y,\n          az = a.z;\n      var bx = b.x,\n          by = b.y,\n          bz = b.z;\n      this.x = ay * bz - az * by;\n      this.y = az * bx - ax * bz;\n      this.z = ax * by - ay * bx;\n      return this;\n    },\n    projectOnVector: function projectOnVector(vector) {\n      var scalar = vector.dot(this) / vector.lengthSq();\n      return this.copy(vector).multiplyScalar(scalar);\n    },\n    projectOnPlane: function () {\n      var v1 = new Vector3();\n      return function projectOnPlane(planeNormal) {\n        v1.copy(this).projectOnVector(planeNormal);\n        return this.sub(v1);\n      };\n    }(),\n    reflect: function () {\n      // reflect incident vector off plane orthogonal to normal\n      // normal is assumed to have unit length\n      var v1 = new Vector3();\n      return function reflect(normal) {\n        return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n      };\n    }(),\n    angleTo: function angleTo(v) {\n      var theta = this.dot(v) / Math.sqrt(this.lengthSq() * v.lengthSq()); // clamp, to handle numerical problems\n\n      return Math.acos(_Math.clamp(theta, -1, 1));\n    },\n    distanceTo: function distanceTo(v) {\n      return Math.sqrt(this.distanceToSquared(v));\n    },\n    distanceToSquared: function distanceToSquared(v) {\n      var dx = this.x - v.x,\n          dy = this.y - v.y,\n          dz = this.z - v.z;\n      return dx * dx + dy * dy + dz * dz;\n    },\n    manhattanDistanceTo: function manhattanDistanceTo(v) {\n      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n    },\n    setFromSpherical: function setFromSpherical(s) {\n      return this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n    },\n    setFromSphericalCoords: function setFromSphericalCoords(radius, phi, theta) {\n      var sinPhiRadius = Math.sin(phi) * radius;\n      this.x = sinPhiRadius * Math.sin(theta);\n      this.y = Math.cos(phi) * radius;\n      this.z = sinPhiRadius * Math.cos(theta);\n      return this;\n    },\n    setFromCylindrical: function setFromCylindrical(c) {\n      return this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n    },\n    setFromCylindricalCoords: function setFromCylindricalCoords(radius, theta, y) {\n      this.x = radius * Math.sin(theta);\n      this.y = y;\n      this.z = radius * Math.cos(theta);\n      return this;\n    },\n    setFromMatrixPosition: function setFromMatrixPosition(m) {\n      var e = m.elements;\n      this.x = e[12];\n      this.y = e[13];\n      this.z = e[14];\n      return this;\n    },\n    setFromMatrixScale: function setFromMatrixScale(m) {\n      var sx = this.setFromMatrixColumn(m, 0).length();\n      var sy = this.setFromMatrixColumn(m, 1).length();\n      var sz = this.setFromMatrixColumn(m, 2).length();\n      this.x = sx;\n      this.y = sy;\n      this.z = sz;\n      return this;\n    },\n    setFromMatrixColumn: function setFromMatrixColumn(m, index) {\n      return this.fromArray(m.elements, index * 4);\n    },\n    equals: function equals(v) {\n      return v.x === this.x && v.y === this.y && v.z === this.z;\n    },\n    fromArray: function fromArray(array, offset) {\n      if (offset === undefined) offset = 0;\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      this.z = array[offset + 2];\n      return this;\n    },\n    toArray: function toArray(array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      array[offset + 2] = this.z;\n      return array;\n    },\n    fromBufferAttribute: function fromBufferAttribute(attribute, index, offset) {\n      if (offset !== undefined) {\n        console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\n      }\n\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      this.z = attribute.getZ(index);\n      return this;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author bhouston / http://clara.io\n   * @author tschw\n   */\n\n  function Matrix3() {\n    this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n    if (arguments.length > 0) {\n      console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n    }\n  }\n\n  Object.assign(Matrix3.prototype, {\n    isMatrix3: true,\n    set: function set(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n      var te = this.elements;\n      te[0] = n11;\n      te[1] = n21;\n      te[2] = n31;\n      te[3] = n12;\n      te[4] = n22;\n      te[5] = n32;\n      te[6] = n13;\n      te[7] = n23;\n      te[8] = n33;\n      return this;\n    },\n    identity: function identity() {\n      this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n      return this;\n    },\n    clone: function clone() {\n      return new this.constructor().fromArray(this.elements);\n    },\n    copy: function copy(m) {\n      var te = this.elements;\n      var me = m.elements;\n      te[0] = me[0];\n      te[1] = me[1];\n      te[2] = me[2];\n      te[3] = me[3];\n      te[4] = me[4];\n      te[5] = me[5];\n      te[6] = me[6];\n      te[7] = me[7];\n      te[8] = me[8];\n      return this;\n    },\n    setFromMatrix4: function setFromMatrix4(m) {\n      var me = m.elements;\n      this.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n      return this;\n    },\n    applyToBufferAttribute: function () {\n      var v1 = new Vector3();\n      return function applyToBufferAttribute(attribute) {\n        for (var i = 0, l = attribute.count; i < l; i++) {\n          v1.x = attribute.getX(i);\n          v1.y = attribute.getY(i);\n          v1.z = attribute.getZ(i);\n          v1.applyMatrix3(this);\n          attribute.setXYZ(i, v1.x, v1.y, v1.z);\n        }\n\n        return attribute;\n      };\n    }(),\n    multiply: function multiply(m) {\n      return this.multiplyMatrices(this, m);\n    },\n    premultiply: function premultiply(m) {\n      return this.multiplyMatrices(m, this);\n    },\n    multiplyMatrices: function multiplyMatrices(a, b) {\n      var ae = a.elements;\n      var be = b.elements;\n      var te = this.elements;\n      var a11 = ae[0],\n          a12 = ae[3],\n          a13 = ae[6];\n      var a21 = ae[1],\n          a22 = ae[4],\n          a23 = ae[7];\n      var a31 = ae[2],\n          a32 = ae[5],\n          a33 = ae[8];\n      var b11 = be[0],\n          b12 = be[3],\n          b13 = be[6];\n      var b21 = be[1],\n          b22 = be[4],\n          b23 = be[7];\n      var b31 = be[2],\n          b32 = be[5],\n          b33 = be[8];\n      te[0] = a11 * b11 + a12 * b21 + a13 * b31;\n      te[3] = a11 * b12 + a12 * b22 + a13 * b32;\n      te[6] = a11 * b13 + a12 * b23 + a13 * b33;\n      te[1] = a21 * b11 + a22 * b21 + a23 * b31;\n      te[4] = a21 * b12 + a22 * b22 + a23 * b32;\n      te[7] = a21 * b13 + a22 * b23 + a23 * b33;\n      te[2] = a31 * b11 + a32 * b21 + a33 * b31;\n      te[5] = a31 * b12 + a32 * b22 + a33 * b32;\n      te[8] = a31 * b13 + a32 * b23 + a33 * b33;\n      return this;\n    },\n    multiplyScalar: function multiplyScalar(s) {\n      var te = this.elements;\n      te[0] *= s;\n      te[3] *= s;\n      te[6] *= s;\n      te[1] *= s;\n      te[4] *= s;\n      te[7] *= s;\n      te[2] *= s;\n      te[5] *= s;\n      te[8] *= s;\n      return this;\n    },\n    determinant: function determinant() {\n      var te = this.elements;\n      var a = te[0],\n          b = te[1],\n          c = te[2],\n          d = te[3],\n          e = te[4],\n          f = te[5],\n          g = te[6],\n          h = te[7],\n          i = te[8];\n      return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n    },\n    getInverse: function getInverse(matrix, throwOnDegenerate) {\n      if (matrix && matrix.isMatrix4) {\n        console.error(\"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\");\n      }\n\n      var me = matrix.elements,\n          te = this.elements,\n          n11 = me[0],\n          n21 = me[1],\n          n31 = me[2],\n          n12 = me[3],\n          n22 = me[4],\n          n32 = me[5],\n          n13 = me[6],\n          n23 = me[7],\n          n33 = me[8],\n          t11 = n33 * n22 - n32 * n23,\n          t12 = n32 * n13 - n33 * n12,\n          t13 = n23 * n12 - n22 * n13,\n          det = n11 * t11 + n21 * t12 + n31 * t13;\n\n      if (det === 0) {\n        var msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n        if (throwOnDegenerate === true) {\n          throw new Error(msg);\n        } else {\n          console.warn(msg);\n        }\n\n        return this.identity();\n      }\n\n      var detInv = 1 / det;\n      te[0] = t11 * detInv;\n      te[1] = (n31 * n23 - n33 * n21) * detInv;\n      te[2] = (n32 * n21 - n31 * n22) * detInv;\n      te[3] = t12 * detInv;\n      te[4] = (n33 * n11 - n31 * n13) * detInv;\n      te[5] = (n31 * n12 - n32 * n11) * detInv;\n      te[6] = t13 * detInv;\n      te[7] = (n21 * n13 - n23 * n11) * detInv;\n      te[8] = (n22 * n11 - n21 * n12) * detInv;\n      return this;\n    },\n    transpose: function transpose() {\n      var tmp,\n          m = this.elements;\n      tmp = m[1];\n      m[1] = m[3];\n      m[3] = tmp;\n      tmp = m[2];\n      m[2] = m[6];\n      m[6] = tmp;\n      tmp = m[5];\n      m[5] = m[7];\n      m[7] = tmp;\n      return this;\n    },\n    getNormalMatrix: function getNormalMatrix(matrix4) {\n      return this.setFromMatrix4(matrix4).getInverse(this).transpose();\n    },\n    transposeIntoArray: function transposeIntoArray(r) {\n      var m = this.elements;\n      r[0] = m[0];\n      r[1] = m[3];\n      r[2] = m[6];\n      r[3] = m[1];\n      r[4] = m[4];\n      r[5] = m[7];\n      r[6] = m[2];\n      r[7] = m[5];\n      r[8] = m[8];\n      return this;\n    },\n    setUvTransform: function setUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\n      var c = Math.cos(rotation);\n      var s = Math.sin(rotation);\n      this.set(sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx, -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty, 0, 0, 1);\n    },\n    scale: function scale(sx, sy) {\n      var te = this.elements;\n      te[0] *= sx;\n      te[3] *= sx;\n      te[6] *= sx;\n      te[1] *= sy;\n      te[4] *= sy;\n      te[7] *= sy;\n      return this;\n    },\n    rotate: function rotate(theta) {\n      var c = Math.cos(theta);\n      var s = Math.sin(theta);\n      var te = this.elements;\n      var a11 = te[0],\n          a12 = te[3],\n          a13 = te[6];\n      var a21 = te[1],\n          a22 = te[4],\n          a23 = te[7];\n      te[0] = c * a11 + s * a21;\n      te[3] = c * a12 + s * a22;\n      te[6] = c * a13 + s * a23;\n      te[1] = -s * a11 + c * a21;\n      te[4] = -s * a12 + c * a22;\n      te[7] = -s * a13 + c * a23;\n      return this;\n    },\n    translate: function translate(tx, ty) {\n      var te = this.elements;\n      te[0] += tx * te[2];\n      te[3] += tx * te[5];\n      te[6] += tx * te[8];\n      te[1] += ty * te[2];\n      te[4] += ty * te[5];\n      te[7] += ty * te[8];\n      return this;\n    },\n    equals: function equals(matrix) {\n      var te = this.elements;\n      var me = matrix.elements;\n\n      for (var i = 0; i < 9; i++) {\n        if (te[i] !== me[i]) return false;\n      }\n\n      return true;\n    },\n    fromArray: function fromArray(array, offset) {\n      if (offset === undefined) offset = 0;\n\n      for (var i = 0; i < 9; i++) {\n        this.elements[i] = array[i + offset];\n      }\n\n      return this;\n    },\n    toArray: function toArray(array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      var te = this.elements;\n      array[offset] = te[0];\n      array[offset + 1] = te[1];\n      array[offset + 2] = te[2];\n      array[offset + 3] = te[3];\n      array[offset + 4] = te[4];\n      array[offset + 5] = te[5];\n      array[offset + 6] = te[6];\n      array[offset + 7] = te[7];\n      array[offset + 8] = te[8];\n      return array;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author szimek / https://github.com/szimek/\n   */\n\n  var _canvas;\n\n  var ImageUtils = {\n    getDataURL: function getDataURL(image) {\n      var canvas;\n\n      if (typeof HTMLCanvasElement == 'undefined') {\n        return image.src;\n      } else if (image instanceof HTMLCanvasElement) {\n        canvas = image;\n      } else {\n        if (_canvas === undefined) _canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n        _canvas.width = image.width;\n        _canvas.height = image.height;\n\n        var context = _canvas.getContext('2d');\n\n        if (image instanceof ImageData) {\n          context.putImageData(image, 0, 0);\n        } else {\n          context.drawImage(image, 0, 0, image.width, image.height);\n        }\n\n        canvas = _canvas;\n      }\n\n      if (canvas.width > 2048 || canvas.height > 2048) {\n        return canvas.toDataURL('image/jpeg', 0.6);\n      } else {\n        return canvas.toDataURL('image/png');\n      }\n    }\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author szimek / https://github.com/szimek/\n   */\n\n  var textureId = 0;\n\n  function Texture(image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n    Object.defineProperty(this, 'id', {\n      value: textureId++\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n    this.mipmaps = [];\n    this.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n    this.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n    this.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n    this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n    this.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n    this.format = format !== undefined ? format : RGBAFormat;\n    this.type = type !== undefined ? type : UnsignedByteType;\n    this.offset = new Vector2(0, 0);\n    this.repeat = new Vector2(1, 1);\n    this.center = new Vector2(0, 0);\n    this.rotation = 0;\n    this.matrixAutoUpdate = true;\n    this.matrix = new Matrix3();\n    this.generateMipmaps = true;\n    this.premultiplyAlpha = false;\n    this.flipY = true;\n    this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n    // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n    //\n    // Also changing the encoding after already used by a Material will not automatically make the Material\n    // update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n    this.encoding = encoding !== undefined ? encoding : LinearEncoding;\n    this.version = 0;\n    this.onUpdate = null;\n  }\n\n  Texture.DEFAULT_IMAGE = undefined;\n  Texture.DEFAULT_MAPPING = UVMapping;\n  Texture.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: Texture,\n    isTexture: true,\n    updateMatrix: function updateMatrix() {\n      this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    copy: function copy(source) {\n      this.name = source.name;\n      this.image = source.image;\n      this.mipmaps = source.mipmaps.slice(0);\n      this.mapping = source.mapping;\n      this.wrapS = source.wrapS;\n      this.wrapT = source.wrapT;\n      this.magFilter = source.magFilter;\n      this.minFilter = source.minFilter;\n      this.anisotropy = source.anisotropy;\n      this.format = source.format;\n      this.type = source.type;\n      this.offset.copy(source.offset);\n      this.repeat.copy(source.repeat);\n      this.center.copy(source.center);\n      this.rotation = source.rotation;\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      this.matrix.copy(source.matrix);\n      this.generateMipmaps = source.generateMipmaps;\n      this.premultiplyAlpha = source.premultiplyAlpha;\n      this.flipY = source.flipY;\n      this.unpackAlignment = source.unpackAlignment;\n      this.encoding = source.encoding;\n      return this;\n    },\n    toJSON: function toJSON(meta) {\n      var isRootObject = meta === undefined || typeof meta === 'string';\n\n      if (!isRootObject && meta.textures[this.uuid] !== undefined) {\n        return meta.textures[this.uuid];\n      }\n\n      var output = {\n        metadata: {\n          version: 4.5,\n          type: 'Texture',\n          generator: 'Texture.toJSON'\n        },\n        uuid: this.uuid,\n        name: this.name,\n        mapping: this.mapping,\n        repeat: [this.repeat.x, this.repeat.y],\n        offset: [this.offset.x, this.offset.y],\n        center: [this.center.x, this.center.y],\n        rotation: this.rotation,\n        wrap: [this.wrapS, this.wrapT],\n        format: this.format,\n        type: this.type,\n        encoding: this.encoding,\n        minFilter: this.minFilter,\n        magFilter: this.magFilter,\n        anisotropy: this.anisotropy,\n        flipY: this.flipY,\n        premultiplyAlpha: this.premultiplyAlpha,\n        unpackAlignment: this.unpackAlignment\n      };\n\n      if (this.image !== undefined) {\n        // TODO: Move to THREE.Image\n        var image = this.image;\n\n        if (image.uuid === undefined) {\n          image.uuid = _Math.generateUUID(); // UGH\n        }\n\n        if (!isRootObject && meta.images[image.uuid] === undefined) {\n          var url;\n\n          if (Array.isArray(image)) {\n            // process array of images e.g. CubeTexture\n            url = [];\n\n            for (var i = 0, l = image.length; i < l; i++) {\n              url.push(ImageUtils.getDataURL(image[i]));\n            }\n          } else {\n            // process single image\n            url = ImageUtils.getDataURL(image);\n          }\n\n          meta.images[image.uuid] = {\n            uuid: image.uuid,\n            url: url\n          };\n        }\n\n        output.image = image.uuid;\n      }\n\n      if (!isRootObject) {\n        meta.textures[this.uuid] = output;\n      }\n\n      return output;\n    },\n    dispose: function dispose() {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    },\n    transformUv: function transformUv(uv) {\n      if (this.mapping !== UVMapping) return uv;\n      uv.applyMatrix3(this.matrix);\n\n      if (uv.x < 0 || uv.x > 1) {\n        switch (this.wrapS) {\n          case RepeatWrapping:\n            uv.x = uv.x - Math.floor(uv.x);\n            break;\n\n          case ClampToEdgeWrapping:\n            uv.x = uv.x < 0 ? 0 : 1;\n            break;\n\n          case MirroredRepeatWrapping:\n            if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n              uv.x = Math.ceil(uv.x) - uv.x;\n            } else {\n              uv.x = uv.x - Math.floor(uv.x);\n            }\n\n            break;\n        }\n      }\n\n      if (uv.y < 0 || uv.y > 1) {\n        switch (this.wrapT) {\n          case RepeatWrapping:\n            uv.y = uv.y - Math.floor(uv.y);\n            break;\n\n          case ClampToEdgeWrapping:\n            uv.y = uv.y < 0 ? 0 : 1;\n            break;\n\n          case MirroredRepeatWrapping:\n            if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n              uv.y = Math.ceil(uv.y) - uv.y;\n            } else {\n              uv.y = uv.y - Math.floor(uv.y);\n            }\n\n            break;\n        }\n      }\n\n      if (this.flipY) {\n        uv.y = 1 - uv.y;\n      }\n\n      return uv;\n    }\n  });\n  Object.defineProperty(Texture.prototype, \"needsUpdate\", {\n    set: function set(value) {\n      if (value === true) this.version++;\n    }\n  });\n  /**\n   * @author supereggbert / http://www.paulbrunt.co.uk/\n   * @author philogb / http://blog.thejit.org/\n   * @author mikael emtinger / http://gomo.se/\n   * @author egraether / http://egraether.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function Vector4(x, y, z, w) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n    this.w = w !== undefined ? w : 1;\n  }\n\n  Object.assign(Vector4.prototype, {\n    isVector4: true,\n    set: function set(x, y, z, w) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      this.w = w;\n      return this;\n    },\n    setScalar: function setScalar(scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      this.z = scalar;\n      this.w = scalar;\n      return this;\n    },\n    setX: function setX(x) {\n      this.x = x;\n      return this;\n    },\n    setY: function setY(y) {\n      this.y = y;\n      return this;\n    },\n    setZ: function setZ(z) {\n      this.z = z;\n      return this;\n    },\n    setW: function setW(w) {\n      this.w = w;\n      return this;\n    },\n    setComponent: function setComponent(index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        case 2:\n          this.z = value;\n          break;\n\n        case 3:\n          this.w = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n\n      return this;\n    },\n    getComponent: function getComponent(index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        case 2:\n          return this.z;\n\n        case 3:\n          return this.w;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    },\n    clone: function clone() {\n      return new this.constructor(this.x, this.y, this.z, this.w);\n    },\n    copy: function copy(v) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      this.w = v.w !== undefined ? v.w : 1;\n      return this;\n    },\n    add: function add(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n      this.w += v.w;\n      return this;\n    },\n    addScalar: function addScalar(s) {\n      this.x += s;\n      this.y += s;\n      this.z += s;\n      this.w += s;\n      return this;\n    },\n    addVectors: function addVectors(a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      this.z = a.z + b.z;\n      this.w = a.w + b.w;\n      return this;\n    },\n    addScaledVector: function addScaledVector(v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      this.z += v.z * s;\n      this.w += v.w * s;\n      return this;\n    },\n    sub: function sub(v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n      this.w -= v.w;\n      return this;\n    },\n    subScalar: function subScalar(s) {\n      this.x -= s;\n      this.y -= s;\n      this.z -= s;\n      this.w -= s;\n      return this;\n    },\n    subVectors: function subVectors(a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      this.z = a.z - b.z;\n      this.w = a.w - b.w;\n      return this;\n    },\n    multiplyScalar: function multiplyScalar(scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      this.w *= scalar;\n      return this;\n    },\n    applyMatrix4: function applyMatrix4(m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z,\n          w = this.w;\n      var e = m.elements;\n      this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n      this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n      this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n      this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n      return this;\n    },\n    divideScalar: function divideScalar(scalar) {\n      return this.multiplyScalar(1 / scalar);\n    },\n    setAxisAngleFromQuaternion: function setAxisAngleFromQuaternion(q) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n      // q is assumed to be normalized\n      this.w = 2 * Math.acos(q.w);\n      var s = Math.sqrt(1 - q.w * q.w);\n\n      if (s < 0.0001) {\n        this.x = 1;\n        this.y = 0;\n        this.z = 0;\n      } else {\n        this.x = q.x / s;\n        this.y = q.y / s;\n        this.z = q.z / s;\n      }\n\n      return this;\n    },\n    setAxisAngleFromRotationMatrix: function setAxisAngleFromRotationMatrix(m) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      var angle,\n          x,\n          y,\n          z,\n          // variables for result\n      epsilon = 0.01,\n          // margin to allow for rounding errors\n      epsilon2 = 0.1,\n          // margin to distinguish between 0 and 180 degrees\n      te = m.elements,\n          m11 = te[0],\n          m12 = te[4],\n          m13 = te[8],\n          m21 = te[1],\n          m22 = te[5],\n          m23 = te[9],\n          m31 = te[2],\n          m32 = te[6],\n          m33 = te[10];\n\n      if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n        // singularity found\n        // first check for identity matrix which must have +1 for all terms\n        // in leading diagonal and zero in other terms\n        if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n          // this singularity is identity matrix so angle = 0\n          this.set(1, 0, 0, 0);\n          return this; // zero angle, arbitrary axis\n        } // otherwise this singularity is angle = 180\n\n\n        angle = Math.PI;\n        var xx = (m11 + 1) / 2;\n        var yy = (m22 + 1) / 2;\n        var zz = (m33 + 1) / 2;\n        var xy = (m12 + m21) / 4;\n        var xz = (m13 + m31) / 4;\n        var yz = (m23 + m32) / 4;\n\n        if (xx > yy && xx > zz) {\n          // m11 is the largest diagonal term\n          if (xx < epsilon) {\n            x = 0;\n            y = 0.707106781;\n            z = 0.707106781;\n          } else {\n            x = Math.sqrt(xx);\n            y = xy / x;\n            z = xz / x;\n          }\n        } else if (yy > zz) {\n          // m22 is the largest diagonal term\n          if (yy < epsilon) {\n            x = 0.707106781;\n            y = 0;\n            z = 0.707106781;\n          } else {\n            y = Math.sqrt(yy);\n            x = xy / y;\n            z = yz / y;\n          }\n        } else {\n          // m33 is the largest diagonal term so base result on this\n          if (zz < epsilon) {\n            x = 0.707106781;\n            y = 0.707106781;\n            z = 0;\n          } else {\n            z = Math.sqrt(zz);\n            x = xz / z;\n            y = yz / z;\n          }\n        }\n\n        this.set(x, y, z, angle);\n        return this; // return 180 deg rotation\n      } // as we have reached here there are no singularities so we can handle normally\n\n\n      var s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n      if (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n      // caught by singularity test above, but I've left it in just in case\n\n      this.x = (m32 - m23) / s;\n      this.y = (m13 - m31) / s;\n      this.z = (m21 - m12) / s;\n      this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n      return this;\n    },\n    min: function min(v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      this.z = Math.min(this.z, v.z);\n      this.w = Math.min(this.w, v.w);\n      return this;\n    },\n    max: function max(v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      this.z = Math.max(this.z, v.z);\n      this.w = Math.max(this.w, v.w);\n      return this;\n    },\n    clamp: function clamp(min, max) {\n      // assumes min < max, componentwise\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      this.z = Math.max(min.z, Math.min(max.z, this.z));\n      this.w = Math.max(min.w, Math.min(max.w, this.w));\n      return this;\n    },\n    clampScalar: function () {\n      var min, max;\n      return function clampScalar(minVal, maxVal) {\n        if (min === undefined) {\n          min = new Vector4();\n          max = new Vector4();\n        }\n\n        min.set(minVal, minVal, minVal, minVal);\n        max.set(maxVal, maxVal, maxVal, maxVal);\n        return this.clamp(min, max);\n      };\n    }(),\n    clampLength: function clampLength(min, max) {\n      var length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    },\n    floor: function floor() {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      this.z = Math.floor(this.z);\n      this.w = Math.floor(this.w);\n      return this;\n    },\n    ceil: function ceil() {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      this.z = Math.ceil(this.z);\n      this.w = Math.ceil(this.w);\n      return this;\n    },\n    round: function round() {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      this.z = Math.round(this.z);\n      this.w = Math.round(this.w);\n      return this;\n    },\n    roundToZero: function roundToZero() {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n      this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n      return this;\n    },\n    negate: function negate() {\n      this.x = -this.x;\n      this.y = -this.y;\n      this.z = -this.z;\n      this.w = -this.w;\n      return this;\n    },\n    dot: function dot(v) {\n      return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n    },\n    lengthSq: function lengthSq() {\n      return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n    },\n    length: function length() {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    },\n    manhattanLength: function manhattanLength() {\n      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n    },\n    normalize: function normalize() {\n      return this.divideScalar(this.length() || 1);\n    },\n    setLength: function setLength(length) {\n      return this.normalize().multiplyScalar(length);\n    },\n    lerp: function lerp(v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      this.z += (v.z - this.z) * alpha;\n      this.w += (v.w - this.w) * alpha;\n      return this;\n    },\n    lerpVectors: function lerpVectors(v1, v2, alpha) {\n      return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    },\n    equals: function equals(v) {\n      return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n    },\n    fromArray: function fromArray(array, offset) {\n      if (offset === undefined) offset = 0;\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      this.z = array[offset + 2];\n      this.w = array[offset + 3];\n      return this;\n    },\n    toArray: function toArray(array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      array[offset + 2] = this.z;\n      array[offset + 3] = this.w;\n      return array;\n    },\n    fromBufferAttribute: function fromBufferAttribute(attribute, index, offset) {\n      if (offset !== undefined) {\n        console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\n      }\n\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      this.z = attribute.getZ(index);\n      this.w = attribute.getW(index);\n      return this;\n    }\n  });\n  /**\n   * @author szimek / https://github.com/szimek/\n   * @author alteredq / http://alteredqualia.com/\n   * @author Marius Kintel / https://github.com/kintel\n   */\n\n  /*\n   In options, we can specify:\n   * Texture parameters for an auto-generated target texture\n   * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n  */\n\n  function WebGLRenderTarget(width, height, options) {\n    this.width = width;\n    this.height = height;\n    this.scissor = new Vector4(0, 0, width, height);\n    this.scissorTest = false;\n    this.viewport = new Vector4(0, 0, width, height);\n    options = options || {};\n    this.texture = new Texture(undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n    this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n    this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n    this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n    this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n    this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n  }\n\n  WebGLRenderTarget.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: WebGLRenderTarget,\n    isWebGLRenderTarget: true,\n    setSize: function setSize(width, height) {\n      if (this.width !== width || this.height !== height) {\n        this.width = width;\n        this.height = height;\n        this.dispose();\n      }\n\n      this.viewport.set(0, 0, width, height);\n      this.scissor.set(0, 0, width, height);\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    copy: function copy(source) {\n      this.width = source.width;\n      this.height = source.height;\n      this.viewport.copy(source.viewport);\n      this.texture = source.texture.clone();\n      this.depthBuffer = source.depthBuffer;\n      this.stencilBuffer = source.stencilBuffer;\n      this.depthTexture = source.depthTexture;\n      return this;\n    },\n    dispose: function dispose() {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com\n   */\n\n  function WebGLRenderTargetCube(width, height, options) {\n    WebGLRenderTarget.call(this, width, height, options);\n    this.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\n    this.activeMipMapLevel = 0;\n  }\n\n  WebGLRenderTargetCube.prototype = Object.create(WebGLRenderTarget.prototype);\n  WebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n  WebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function DataTexture(data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n    Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.image = {\n      data: data,\n      width: width,\n      height: height\n    };\n    this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n    this.generateMipmaps = false;\n    this.flipY = false;\n    this.unpackAlignment = 1;\n  }\n\n  DataTexture.prototype = Object.create(Texture.prototype);\n  DataTexture.prototype.constructor = DataTexture;\n  DataTexture.prototype.isDataTexture = true;\n  /**\n   * @author bhouston / http://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function Box3(min, max) {\n    this.min = min !== undefined ? min : new Vector3(+Infinity, +Infinity, +Infinity);\n    this.max = max !== undefined ? max : new Vector3(-Infinity, -Infinity, -Infinity);\n  }\n\n  Object.assign(Box3.prototype, {\n    isBox3: true,\n    set: function set(min, max) {\n      this.min.copy(min);\n      this.max.copy(max);\n      return this;\n    },\n    setFromArray: function setFromArray(array) {\n      var minX = +Infinity;\n      var minY = +Infinity;\n      var minZ = +Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n      var maxZ = -Infinity;\n\n      for (var i = 0, l = array.length; i < l; i += 3) {\n        var x = array[i];\n        var y = array[i + 1];\n        var z = array[i + 2];\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (z < minZ) minZ = z;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n        if (z > maxZ) maxZ = z;\n      }\n\n      this.min.set(minX, minY, minZ);\n      this.max.set(maxX, maxY, maxZ);\n      return this;\n    },\n    setFromBufferAttribute: function setFromBufferAttribute(attribute) {\n      var minX = +Infinity;\n      var minY = +Infinity;\n      var minZ = +Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n      var maxZ = -Infinity;\n\n      for (var i = 0, l = attribute.count; i < l; i++) {\n        var x = attribute.getX(i);\n        var y = attribute.getY(i);\n        var z = attribute.getZ(i);\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (z < minZ) minZ = z;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n        if (z > maxZ) maxZ = z;\n      }\n\n      this.min.set(minX, minY, minZ);\n      this.max.set(maxX, maxY, maxZ);\n      return this;\n    },\n    setFromPoints: function setFromPoints(points) {\n      this.makeEmpty();\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        this.expandByPoint(points[i]);\n      }\n\n      return this;\n    },\n    setFromCenterAndSize: function () {\n      var v1 = new Vector3();\n      return function setFromCenterAndSize(center, size) {\n        var halfSize = v1.copy(size).multiplyScalar(0.5);\n        this.min.copy(center).sub(halfSize);\n        this.max.copy(center).add(halfSize);\n        return this;\n      };\n    }(),\n    setFromObject: function setFromObject(object) {\n      this.makeEmpty();\n      return this.expandByObject(object);\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    copy: function copy(box) {\n      this.min.copy(box.min);\n      this.max.copy(box.max);\n      return this;\n    },\n    makeEmpty: function makeEmpty() {\n      this.min.x = this.min.y = this.min.z = +Infinity;\n      this.max.x = this.max.y = this.max.z = -Infinity;\n      return this;\n    },\n    isEmpty: function isEmpty() {\n      // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n      return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n    },\n    getCenter: function getCenter(target) {\n      if (target === undefined) {\n        console.warn('THREE.Box3: .getCenter() target is now required');\n        target = new Vector3();\n      }\n\n      return this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n    },\n    getSize: function getSize(target) {\n      if (target === undefined) {\n        console.warn('THREE.Box3: .getSize() target is now required');\n        target = new Vector3();\n      }\n\n      return this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\n    },\n    expandByPoint: function expandByPoint(point) {\n      this.min.min(point);\n      this.max.max(point);\n      return this;\n    },\n    expandByVector: function expandByVector(vector) {\n      this.min.sub(vector);\n      this.max.add(vector);\n      return this;\n    },\n    expandByScalar: function expandByScalar(scalar) {\n      this.min.addScalar(-scalar);\n      this.max.addScalar(scalar);\n      return this;\n    },\n    expandByObject: function () {\n      // Computes the world-axis-aligned bounding box of an object (including its children),\n      // accounting for both the object's, and children's, world transforms\n      var scope, i, l;\n      var v1 = new Vector3();\n\n      function traverse(node) {\n        var geometry = node.geometry;\n\n        if (geometry !== undefined) {\n          if (geometry.isGeometry) {\n            var vertices = geometry.vertices;\n\n            for (i = 0, l = vertices.length; i < l; i++) {\n              v1.copy(vertices[i]);\n              v1.applyMatrix4(node.matrixWorld);\n              scope.expandByPoint(v1);\n            }\n          } else if (geometry.isBufferGeometry) {\n            var attribute = geometry.attributes.position;\n\n            if (attribute !== undefined) {\n              for (i = 0, l = attribute.count; i < l; i++) {\n                v1.fromBufferAttribute(attribute, i).applyMatrix4(node.matrixWorld);\n                scope.expandByPoint(v1);\n              }\n            }\n          }\n        }\n      }\n\n      return function expandByObject(object) {\n        scope = this;\n        object.updateMatrixWorld(true);\n        object.traverse(traverse);\n        return this;\n      };\n    }(),\n    containsPoint: function containsPoint(point) {\n      return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\n    },\n    containsBox: function containsBox(box) {\n      return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n    },\n    getParameter: function getParameter(point, target) {\n      // This can potentially have a divide by zero if the box\n      // has a size dimension of 0.\n      if (target === undefined) {\n        console.warn('THREE.Box3: .getParameter() target is now required');\n        target = new Vector3();\n      }\n\n      return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n    },\n    intersectsBox: function intersectsBox(box) {\n      // using 6 splitting planes to rule out intersections.\n      return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n    },\n    intersectsSphere: function () {\n      var closestPoint = new Vector3();\n      return function intersectsSphere(sphere) {\n        // Find the point on the AABB closest to the sphere center.\n        this.clampPoint(sphere.center, closestPoint); // If that point is inside the sphere, the AABB and sphere intersect.\n\n        return closestPoint.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n      };\n    }(),\n    intersectsPlane: function intersectsPlane(plane) {\n      // We compute the minimum and maximum dot product values. If those values\n      // are on the same side (back or front) of the plane, then there is no intersection.\n      var min, max;\n\n      if (plane.normal.x > 0) {\n        min = plane.normal.x * this.min.x;\n        max = plane.normal.x * this.max.x;\n      } else {\n        min = plane.normal.x * this.max.x;\n        max = plane.normal.x * this.min.x;\n      }\n\n      if (plane.normal.y > 0) {\n        min += plane.normal.y * this.min.y;\n        max += plane.normal.y * this.max.y;\n      } else {\n        min += plane.normal.y * this.max.y;\n        max += plane.normal.y * this.min.y;\n      }\n\n      if (plane.normal.z > 0) {\n        min += plane.normal.z * this.min.z;\n        max += plane.normal.z * this.max.z;\n      } else {\n        min += plane.normal.z * this.max.z;\n        max += plane.normal.z * this.min.z;\n      }\n\n      return min <= -plane.constant && max >= -plane.constant;\n    },\n    intersectsTriangle: function () {\n      // triangle centered vertices\n      var v0 = new Vector3();\n      var v1 = new Vector3();\n      var v2 = new Vector3(); // triangle edge vectors\n\n      var f0 = new Vector3();\n      var f1 = new Vector3();\n      var f2 = new Vector3();\n      var testAxis = new Vector3();\n      var center = new Vector3();\n      var extents = new Vector3();\n      var triangleNormal = new Vector3();\n\n      function satForAxes(axes) {\n        var i, j;\n\n        for (i = 0, j = axes.length - 3; i <= j; i += 3) {\n          testAxis.fromArray(axes, i); // project the aabb onto the seperating axis\n\n          var r = extents.x * Math.abs(testAxis.x) + extents.y * Math.abs(testAxis.y) + extents.z * Math.abs(testAxis.z); // project all 3 vertices of the triangle onto the seperating axis\n\n          var p0 = v0.dot(testAxis);\n          var p1 = v1.dot(testAxis);\n          var p2 = v2.dot(testAxis); // actual test, basically see if either of the most extreme of the triangle points intersects r\n\n          if (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n            // points of the projected triangle are outside the projected half-length of the aabb\n            // the axis is seperating and we can exit\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      return function intersectsTriangle(triangle) {\n        if (this.isEmpty()) {\n          return false;\n        } // compute box center and extents\n\n\n        this.getCenter(center);\n        extents.subVectors(this.max, center); // translate triangle to aabb origin\n\n        v0.subVectors(triangle.a, center);\n        v1.subVectors(triangle.b, center);\n        v2.subVectors(triangle.c, center); // compute edge vectors for triangle\n\n        f0.subVectors(v1, v0);\n        f1.subVectors(v2, v1);\n        f2.subVectors(v0, v2); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n        // make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n        // axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\n        var axes = [0, -f0.z, f0.y, 0, -f1.z, f1.y, 0, -f2.z, f2.y, f0.z, 0, -f0.x, f1.z, 0, -f1.x, f2.z, 0, -f2.x, -f0.y, f0.x, 0, -f1.y, f1.x, 0, -f2.y, f2.x, 0];\n\n        if (!satForAxes(axes)) {\n          return false;\n        } // test 3 face normals from the aabb\n\n\n        axes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n        if (!satForAxes(axes)) {\n          return false;\n        } // finally testing the face normal of the triangle\n        // use already existing triangle edge vectors here\n\n\n        triangleNormal.crossVectors(f0, f1);\n        axes = [triangleNormal.x, triangleNormal.y, triangleNormal.z];\n        return satForAxes(axes);\n      };\n    }(),\n    clampPoint: function clampPoint(point, target) {\n      if (target === undefined) {\n        console.warn('THREE.Box3: .clampPoint() target is now required');\n        target = new Vector3();\n      }\n\n      return target.copy(point).clamp(this.min, this.max);\n    },\n    distanceToPoint: function () {\n      var v1 = new Vector3();\n      return function distanceToPoint(point) {\n        var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n        return clampedPoint.sub(point).length();\n      };\n    }(),\n    getBoundingSphere: function () {\n      var v1 = new Vector3();\n      return function getBoundingSphere(target) {\n        if (target === undefined) {\n          console.warn('THREE.Box3: .getBoundingSphere() target is now required');\n          target = new Sphere();\n        }\n\n        this.getCenter(target.center);\n        target.radius = this.getSize(v1).length() * 0.5;\n        return target;\n      };\n    }(),\n    intersect: function intersect(box) {\n      this.min.max(box.min);\n      this.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n      if (this.isEmpty()) this.makeEmpty();\n      return this;\n    },\n    union: function union(box) {\n      this.min.min(box.min);\n      this.max.max(box.max);\n      return this;\n    },\n    applyMatrix4: function () {\n      var points = [new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3()];\n      return function applyMatrix4(matrix) {\n        // transform of empty box is an empty box.\n        if (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n        points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n        points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n        points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n        points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n        points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n        points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n        points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n        points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n        this.setFromPoints(points);\n        return this;\n      };\n    }(),\n    translate: function translate(offset) {\n      this.min.add(offset);\n      this.max.add(offset);\n      return this;\n    },\n    equals: function equals(box) {\n      return box.min.equals(this.min) && box.max.equals(this.max);\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Sphere(center, radius) {\n    this.center = center !== undefined ? center : new Vector3();\n    this.radius = radius !== undefined ? radius : 0;\n  }\n\n  Object.assign(Sphere.prototype, {\n    set: function set(center, radius) {\n      this.center.copy(center);\n      this.radius = radius;\n      return this;\n    },\n    setFromPoints: function () {\n      var box = new Box3();\n      return function setFromPoints(points, optionalCenter) {\n        var center = this.center;\n\n        if (optionalCenter !== undefined) {\n          center.copy(optionalCenter);\n        } else {\n          box.setFromPoints(points).getCenter(center);\n        }\n\n        var maxRadiusSq = 0;\n\n        for (var i = 0, il = points.length; i < il; i++) {\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n        }\n\n        this.radius = Math.sqrt(maxRadiusSq);\n        return this;\n      };\n    }(),\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    copy: function copy(sphere) {\n      this.center.copy(sphere.center);\n      this.radius = sphere.radius;\n      return this;\n    },\n    empty: function empty() {\n      return this.radius <= 0;\n    },\n    containsPoint: function containsPoint(point) {\n      return point.distanceToSquared(this.center) <= this.radius * this.radius;\n    },\n    distanceToPoint: function distanceToPoint(point) {\n      return point.distanceTo(this.center) - this.radius;\n    },\n    intersectsSphere: function intersectsSphere(sphere) {\n      var radiusSum = this.radius + sphere.radius;\n      return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n    },\n    intersectsBox: function intersectsBox(box) {\n      return box.intersectsSphere(this);\n    },\n    intersectsPlane: function intersectsPlane(plane) {\n      return Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\n    },\n    clampPoint: function clampPoint(point, target) {\n      var deltaLengthSq = this.center.distanceToSquared(point);\n\n      if (target === undefined) {\n        console.warn('THREE.Sphere: .clampPoint() target is now required');\n        target = new Vector3();\n      }\n\n      target.copy(point);\n\n      if (deltaLengthSq > this.radius * this.radius) {\n        target.sub(this.center).normalize();\n        target.multiplyScalar(this.radius).add(this.center);\n      }\n\n      return target;\n    },\n    getBoundingBox: function getBoundingBox(target) {\n      if (target === undefined) {\n        console.warn('THREE.Sphere: .getBoundingBox() target is now required');\n        target = new Box3();\n      }\n\n      target.set(this.center, this.center);\n      target.expandByScalar(this.radius);\n      return target;\n    },\n    applyMatrix4: function applyMatrix4(matrix) {\n      this.center.applyMatrix4(matrix);\n      this.radius = this.radius * matrix.getMaxScaleOnAxis();\n      return this;\n    },\n    translate: function translate(offset) {\n      this.center.add(offset);\n      return this;\n    },\n    equals: function equals(sphere) {\n      return sphere.center.equals(this.center) && sphere.radius === this.radius;\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n  function Plane(normal, constant) {\n    // normal is assumed to be normalized\n    this.normal = normal !== undefined ? normal : new Vector3(1, 0, 0);\n    this.constant = constant !== undefined ? constant : 0;\n  }\n\n  Object.assign(Plane.prototype, {\n    set: function set(normal, constant) {\n      this.normal.copy(normal);\n      this.constant = constant;\n      return this;\n    },\n    setComponents: function setComponents(x, y, z, w) {\n      this.normal.set(x, y, z);\n      this.constant = w;\n      return this;\n    },\n    setFromNormalAndCoplanarPoint: function setFromNormalAndCoplanarPoint(normal, point) {\n      this.normal.copy(normal);\n      this.constant = -point.dot(this.normal);\n      return this;\n    },\n    setFromCoplanarPoints: function () {\n      var v1 = new Vector3();\n      var v2 = new Vector3();\n      return function setFromCoplanarPoints(a, b, c) {\n        var normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n        this.setFromNormalAndCoplanarPoint(normal, a);\n        return this;\n      };\n    }(),\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    copy: function copy(plane) {\n      this.normal.copy(plane.normal);\n      this.constant = plane.constant;\n      return this;\n    },\n    normalize: function normalize() {\n      // Note: will lead to a divide by zero if the plane is invalid.\n      var inverseNormalLength = 1.0 / this.normal.length();\n      this.normal.multiplyScalar(inverseNormalLength);\n      this.constant *= inverseNormalLength;\n      return this;\n    },\n    negate: function negate() {\n      this.constant *= -1;\n      this.normal.negate();\n      return this;\n    },\n    distanceToPoint: function distanceToPoint(point) {\n      return this.normal.dot(point) + this.constant;\n    },\n    distanceToSphere: function distanceToSphere(sphere) {\n      return this.distanceToPoint(sphere.center) - sphere.radius;\n    },\n    projectPoint: function projectPoint(point, target) {\n      if (target === undefined) {\n        console.warn('THREE.Plane: .projectPoint() target is now required');\n        target = new Vector3();\n      }\n\n      return target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);\n    },\n    intersectLine: function () {\n      var v1 = new Vector3();\n      return function intersectLine(line, target) {\n        if (target === undefined) {\n          console.warn('THREE.Plane: .intersectLine() target is now required');\n          target = new Vector3();\n        }\n\n        var direction = line.delta(v1);\n        var denominator = this.normal.dot(direction);\n\n        if (denominator === 0) {\n          // line is coplanar, return origin\n          if (this.distanceToPoint(line.start) === 0) {\n            return target.copy(line.start);\n          } // Unsure if this is the correct method to handle this case.\n\n\n          return undefined;\n        }\n\n        var t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n        if (t < 0 || t > 1) {\n          return undefined;\n        }\n\n        return target.copy(direction).multiplyScalar(t).add(line.start);\n      };\n    }(),\n    intersectsLine: function intersectsLine(line) {\n      // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n      var startSign = this.distanceToPoint(line.start);\n      var endSign = this.distanceToPoint(line.end);\n      return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n    },\n    intersectsBox: function intersectsBox(box) {\n      return box.intersectsPlane(this);\n    },\n    intersectsSphere: function intersectsSphere(sphere) {\n      return sphere.intersectsPlane(this);\n    },\n    coplanarPoint: function coplanarPoint(target) {\n      if (target === undefined) {\n        console.warn('THREE.Plane: .coplanarPoint() target is now required');\n        target = new Vector3();\n      }\n\n      return target.copy(this.normal).multiplyScalar(-this.constant);\n    },\n    applyMatrix4: function () {\n      var v1 = new Vector3();\n      var m1 = new Matrix3();\n      return function applyMatrix4(matrix, optionalNormalMatrix) {\n        var normalMatrix = optionalNormalMatrix || m1.getNormalMatrix(matrix);\n        var referencePoint = this.coplanarPoint(v1).applyMatrix4(matrix);\n        var normal = this.normal.applyMatrix3(normalMatrix).normalize();\n        this.constant = -referencePoint.dot(normal);\n        return this;\n      };\n    }(),\n    translate: function translate(offset) {\n      this.constant -= offset.dot(this.normal);\n      return this;\n    },\n    equals: function equals(plane) {\n      return plane.normal.equals(this.normal) && plane.constant === this.constant;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author bhouston / http://clara.io\n   */\n\n  function Frustum(p0, p1, p2, p3, p4, p5) {\n    this.planes = [p0 !== undefined ? p0 : new Plane(), p1 !== undefined ? p1 : new Plane(), p2 !== undefined ? p2 : new Plane(), p3 !== undefined ? p3 : new Plane(), p4 !== undefined ? p4 : new Plane(), p5 !== undefined ? p5 : new Plane()];\n  }\n\n  Object.assign(Frustum.prototype, {\n    set: function set(p0, p1, p2, p3, p4, p5) {\n      var planes = this.planes;\n      planes[0].copy(p0);\n      planes[1].copy(p1);\n      planes[2].copy(p2);\n      planes[3].copy(p3);\n      planes[4].copy(p4);\n      planes[5].copy(p5);\n      return this;\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    copy: function copy(frustum) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        planes[i].copy(frustum.planes[i]);\n      }\n\n      return this;\n    },\n    setFromMatrix: function setFromMatrix(m) {\n      var planes = this.planes;\n      var me = m.elements;\n      var me0 = me[0],\n          me1 = me[1],\n          me2 = me[2],\n          me3 = me[3];\n      var me4 = me[4],\n          me5 = me[5],\n          me6 = me[6],\n          me7 = me[7];\n      var me8 = me[8],\n          me9 = me[9],\n          me10 = me[10],\n          me11 = me[11];\n      var me12 = me[12],\n          me13 = me[13],\n          me14 = me[14],\n          me15 = me[15];\n      planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n      planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n      planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n      planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n      planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n      planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n      return this;\n    },\n    intersectsObject: function () {\n      var sphere = new Sphere();\n      return function intersectsObject(object) {\n        var geometry = object.geometry;\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n        sphere.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n        return this.intersectsSphere(sphere);\n      };\n    }(),\n    intersectsSprite: function () {\n      var sphere = new Sphere();\n      return function intersectsSprite(sprite) {\n        sphere.center.set(0, 0, 0);\n        sphere.radius = 0.7071067811865476;\n        sphere.applyMatrix4(sprite.matrixWorld);\n        return this.intersectsSphere(sphere);\n      };\n    }(),\n    intersectsSphere: function intersectsSphere(sphere) {\n      var planes = this.planes;\n      var center = sphere.center;\n      var negRadius = -sphere.radius;\n\n      for (var i = 0; i < 6; i++) {\n        var distance = planes[i].distanceToPoint(center);\n\n        if (distance < negRadius) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    intersectsBox: function () {\n      var p = new Vector3();\n      return function intersectsBox(box) {\n        var planes = this.planes;\n\n        for (var i = 0; i < 6; i++) {\n          var plane = planes[i]; // corner at max distance\n\n          p.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n          p.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n          p.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n          if (plane.distanceToPoint(p) < 0) {\n            return false;\n          }\n        }\n\n        return true;\n      };\n    }(),\n    containsPoint: function containsPoint(point) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        if (planes[i].distanceToPoint(point) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  });\n  var alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n  var alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n  var alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n  var aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n  var aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n  var begin_vertex = \"vec3 transformed = vec3( position );\";\n  var beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\";\n  var bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\";\n  var bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n  var clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n  var clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n  var clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\";\n  var clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\";\n  var color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n  var color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n  var color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n  var color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n  var common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\";\n  var cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\";\n  var defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\";\n  var displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n  var displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\";\n  var emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n  var emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n  var encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n  var encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n  var envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n  var envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n  var envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n  var envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n  var fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\";\n  var fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n  var fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n  var fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n  var gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n  var lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\";\n  var lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n  var lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n  var lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n  var envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n  var lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n  var lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n  var lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\";\n  var lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n  var lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\";\n  var lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\";\n  var lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n  var logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n  var logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n#endif\";\n  var logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n  var logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\";\n  var map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n  var map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n  var map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\";\n  var map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\";\n  var metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n  var metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n  var morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\";\n  var morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n  var morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n  var normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\";\n  var normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n  var normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\";\n  var packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n  var premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n  var project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\";\n  var dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n  var dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n  var roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n  var roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n  var shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n  var shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\";\n  var shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\";\n  var shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n  var skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n  var skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n  var skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n  var skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\";\n  var specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n  var specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n  var tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n  var tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\\n}\";\n  var uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n  var uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\";\n  var uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n  var uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n  var uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n  var uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n  var worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\";\n  var background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n  var background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n  var cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n  var cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n  var depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\";\n  var depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\";\n  var distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n  var distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n  var equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n  var equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n  var linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n  var linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n  var meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n  var meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n  var meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n  var meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n  var meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n  var meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n  var normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n  var points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n  var points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\";\n  var shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n  var sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var ShaderChunk = {\n    alphamap_fragment: alphamap_fragment,\n    alphamap_pars_fragment: alphamap_pars_fragment,\n    alphatest_fragment: alphatest_fragment,\n    aomap_fragment: aomap_fragment,\n    aomap_pars_fragment: aomap_pars_fragment,\n    begin_vertex: begin_vertex,\n    beginnormal_vertex: beginnormal_vertex,\n    bsdfs: bsdfs,\n    bumpmap_pars_fragment: bumpmap_pars_fragment,\n    clipping_planes_fragment: clipping_planes_fragment,\n    clipping_planes_pars_fragment: clipping_planes_pars_fragment,\n    clipping_planes_pars_vertex: clipping_planes_pars_vertex,\n    clipping_planes_vertex: clipping_planes_vertex,\n    color_fragment: color_fragment,\n    color_pars_fragment: color_pars_fragment,\n    color_pars_vertex: color_pars_vertex,\n    color_vertex: color_vertex,\n    common: common,\n    cube_uv_reflection_fragment: cube_uv_reflection_fragment,\n    defaultnormal_vertex: defaultnormal_vertex,\n    displacementmap_pars_vertex: displacementmap_pars_vertex,\n    displacementmap_vertex: displacementmap_vertex,\n    emissivemap_fragment: emissivemap_fragment,\n    emissivemap_pars_fragment: emissivemap_pars_fragment,\n    encodings_fragment: encodings_fragment,\n    encodings_pars_fragment: encodings_pars_fragment,\n    envmap_fragment: envmap_fragment,\n    envmap_pars_fragment: envmap_pars_fragment,\n    envmap_pars_vertex: envmap_pars_vertex,\n    envmap_physical_pars_fragment: envmap_physical_pars_fragment,\n    envmap_vertex: envmap_vertex,\n    fog_vertex: fog_vertex,\n    fog_pars_vertex: fog_pars_vertex,\n    fog_fragment: fog_fragment,\n    fog_pars_fragment: fog_pars_fragment,\n    gradientmap_pars_fragment: gradientmap_pars_fragment,\n    lightmap_fragment: lightmap_fragment,\n    lightmap_pars_fragment: lightmap_pars_fragment,\n    lights_lambert_vertex: lights_lambert_vertex,\n    lights_pars_begin: lights_pars_begin,\n    lights_phong_fragment: lights_phong_fragment,\n    lights_phong_pars_fragment: lights_phong_pars_fragment,\n    lights_physical_fragment: lights_physical_fragment,\n    lights_physical_pars_fragment: lights_physical_pars_fragment,\n    lights_fragment_begin: lights_fragment_begin,\n    lights_fragment_maps: lights_fragment_maps,\n    lights_fragment_end: lights_fragment_end,\n    logdepthbuf_fragment: logdepthbuf_fragment,\n    logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n    logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n    logdepthbuf_vertex: logdepthbuf_vertex,\n    map_fragment: map_fragment,\n    map_pars_fragment: map_pars_fragment,\n    map_particle_fragment: map_particle_fragment,\n    map_particle_pars_fragment: map_particle_pars_fragment,\n    metalnessmap_fragment: metalnessmap_fragment,\n    metalnessmap_pars_fragment: metalnessmap_pars_fragment,\n    morphnormal_vertex: morphnormal_vertex,\n    morphtarget_pars_vertex: morphtarget_pars_vertex,\n    morphtarget_vertex: morphtarget_vertex,\n    normal_fragment_begin: normal_fragment_begin,\n    normal_fragment_maps: normal_fragment_maps,\n    normalmap_pars_fragment: normalmap_pars_fragment,\n    packing: packing,\n    premultiplied_alpha_fragment: premultiplied_alpha_fragment,\n    project_vertex: project_vertex,\n    dithering_fragment: dithering_fragment,\n    dithering_pars_fragment: dithering_pars_fragment,\n    roughnessmap_fragment: roughnessmap_fragment,\n    roughnessmap_pars_fragment: roughnessmap_pars_fragment,\n    shadowmap_pars_fragment: shadowmap_pars_fragment,\n    shadowmap_pars_vertex: shadowmap_pars_vertex,\n    shadowmap_vertex: shadowmap_vertex,\n    shadowmask_pars_fragment: shadowmask_pars_fragment,\n    skinbase_vertex: skinbase_vertex,\n    skinning_pars_vertex: skinning_pars_vertex,\n    skinning_vertex: skinning_vertex,\n    skinnormal_vertex: skinnormal_vertex,\n    specularmap_fragment: specularmap_fragment,\n    specularmap_pars_fragment: specularmap_pars_fragment,\n    tonemapping_fragment: tonemapping_fragment,\n    tonemapping_pars_fragment: tonemapping_pars_fragment,\n    uv_pars_fragment: uv_pars_fragment,\n    uv_pars_vertex: uv_pars_vertex,\n    uv_vertex: uv_vertex,\n    uv2_pars_fragment: uv2_pars_fragment,\n    uv2_pars_vertex: uv2_pars_vertex,\n    uv2_vertex: uv2_vertex,\n    worldpos_vertex: worldpos_vertex,\n    background_frag: background_frag,\n    background_vert: background_vert,\n    cube_frag: cube_frag,\n    cube_vert: cube_vert,\n    depth_frag: depth_frag,\n    depth_vert: depth_vert,\n    distanceRGBA_frag: distanceRGBA_frag,\n    distanceRGBA_vert: distanceRGBA_vert,\n    equirect_frag: equirect_frag,\n    equirect_vert: equirect_vert,\n    linedashed_frag: linedashed_frag,\n    linedashed_vert: linedashed_vert,\n    meshbasic_frag: meshbasic_frag,\n    meshbasic_vert: meshbasic_vert,\n    meshlambert_frag: meshlambert_frag,\n    meshlambert_vert: meshlambert_vert,\n    meshmatcap_frag: meshmatcap_frag,\n    meshmatcap_vert: meshmatcap_vert,\n    meshphong_frag: meshphong_frag,\n    meshphong_vert: meshphong_vert,\n    meshphysical_frag: meshphysical_frag,\n    meshphysical_vert: meshphysical_vert,\n    normal_frag: normal_frag,\n    normal_vert: normal_vert,\n    points_frag: points_frag,\n    points_vert: points_vert,\n    shadow_frag: shadow_frag,\n    shadow_vert: shadow_vert,\n    sprite_frag: sprite_frag,\n    sprite_vert: sprite_vert\n  };\n  /**\n   * Uniform Utilities\n   */\n\n  function cloneUniforms(src) {\n    var dst = {};\n\n    for (var u in src) {\n      dst[u] = {};\n\n      for (var p in src[u]) {\n        var property = src[u][p];\n\n        if (property && (property.isColor || property.isMatrix3 || property.isMatrix4 || property.isVector2 || property.isVector3 || property.isVector4 || property.isTexture)) {\n          dst[u][p] = property.clone();\n        } else if (Array.isArray(property)) {\n          dst[u][p] = property.slice();\n        } else {\n          dst[u][p] = property;\n        }\n      }\n    }\n\n    return dst;\n  }\n\n  function mergeUniforms(uniforms) {\n    var merged = {};\n\n    for (var u = 0; u < uniforms.length; u++) {\n      var tmp = cloneUniforms(uniforms[u]);\n\n      for (var p in tmp) {\n        merged[p] = tmp[p];\n      }\n    }\n\n    return merged;\n  } // Legacy\n\n\n  var UniformsUtils = {\n    clone: cloneUniforms,\n    merge: mergeUniforms\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var ColorKeywords = {\n    'aliceblue': 0xF0F8FF,\n    'antiquewhite': 0xFAEBD7,\n    'aqua': 0x00FFFF,\n    'aquamarine': 0x7FFFD4,\n    'azure': 0xF0FFFF,\n    'beige': 0xF5F5DC,\n    'bisque': 0xFFE4C4,\n    'black': 0x000000,\n    'blanchedalmond': 0xFFEBCD,\n    'blue': 0x0000FF,\n    'blueviolet': 0x8A2BE2,\n    'brown': 0xA52A2A,\n    'burlywood': 0xDEB887,\n    'cadetblue': 0x5F9EA0,\n    'chartreuse': 0x7FFF00,\n    'chocolate': 0xD2691E,\n    'coral': 0xFF7F50,\n    'cornflowerblue': 0x6495ED,\n    'cornsilk': 0xFFF8DC,\n    'crimson': 0xDC143C,\n    'cyan': 0x00FFFF,\n    'darkblue': 0x00008B,\n    'darkcyan': 0x008B8B,\n    'darkgoldenrod': 0xB8860B,\n    'darkgray': 0xA9A9A9,\n    'darkgreen': 0x006400,\n    'darkgrey': 0xA9A9A9,\n    'darkkhaki': 0xBDB76B,\n    'darkmagenta': 0x8B008B,\n    'darkolivegreen': 0x556B2F,\n    'darkorange': 0xFF8C00,\n    'darkorchid': 0x9932CC,\n    'darkred': 0x8B0000,\n    'darksalmon': 0xE9967A,\n    'darkseagreen': 0x8FBC8F,\n    'darkslateblue': 0x483D8B,\n    'darkslategray': 0x2F4F4F,\n    'darkslategrey': 0x2F4F4F,\n    'darkturquoise': 0x00CED1,\n    'darkviolet': 0x9400D3,\n    'deeppink': 0xFF1493,\n    'deepskyblue': 0x00BFFF,\n    'dimgray': 0x696969,\n    'dimgrey': 0x696969,\n    'dodgerblue': 0x1E90FF,\n    'firebrick': 0xB22222,\n    'floralwhite': 0xFFFAF0,\n    'forestgreen': 0x228B22,\n    'fuchsia': 0xFF00FF,\n    'gainsboro': 0xDCDCDC,\n    'ghostwhite': 0xF8F8FF,\n    'gold': 0xFFD700,\n    'goldenrod': 0xDAA520,\n    'gray': 0x808080,\n    'green': 0x008000,\n    'greenyellow': 0xADFF2F,\n    'grey': 0x808080,\n    'honeydew': 0xF0FFF0,\n    'hotpink': 0xFF69B4,\n    'indianred': 0xCD5C5C,\n    'indigo': 0x4B0082,\n    'ivory': 0xFFFFF0,\n    'khaki': 0xF0E68C,\n    'lavender': 0xE6E6FA,\n    'lavenderblush': 0xFFF0F5,\n    'lawngreen': 0x7CFC00,\n    'lemonchiffon': 0xFFFACD,\n    'lightblue': 0xADD8E6,\n    'lightcoral': 0xF08080,\n    'lightcyan': 0xE0FFFF,\n    'lightgoldenrodyellow': 0xFAFAD2,\n    'lightgray': 0xD3D3D3,\n    'lightgreen': 0x90EE90,\n    'lightgrey': 0xD3D3D3,\n    'lightpink': 0xFFB6C1,\n    'lightsalmon': 0xFFA07A,\n    'lightseagreen': 0x20B2AA,\n    'lightskyblue': 0x87CEFA,\n    'lightslategray': 0x778899,\n    'lightslategrey': 0x778899,\n    'lightsteelblue': 0xB0C4DE,\n    'lightyellow': 0xFFFFE0,\n    'lime': 0x00FF00,\n    'limegreen': 0x32CD32,\n    'linen': 0xFAF0E6,\n    'magenta': 0xFF00FF,\n    'maroon': 0x800000,\n    'mediumaquamarine': 0x66CDAA,\n    'mediumblue': 0x0000CD,\n    'mediumorchid': 0xBA55D3,\n    'mediumpurple': 0x9370DB,\n    'mediumseagreen': 0x3CB371,\n    'mediumslateblue': 0x7B68EE,\n    'mediumspringgreen': 0x00FA9A,\n    'mediumturquoise': 0x48D1CC,\n    'mediumvioletred': 0xC71585,\n    'midnightblue': 0x191970,\n    'mintcream': 0xF5FFFA,\n    'mistyrose': 0xFFE4E1,\n    'moccasin': 0xFFE4B5,\n    'navajowhite': 0xFFDEAD,\n    'navy': 0x000080,\n    'oldlace': 0xFDF5E6,\n    'olive': 0x808000,\n    'olivedrab': 0x6B8E23,\n    'orange': 0xFFA500,\n    'orangered': 0xFF4500,\n    'orchid': 0xDA70D6,\n    'palegoldenrod': 0xEEE8AA,\n    'palegreen': 0x98FB98,\n    'paleturquoise': 0xAFEEEE,\n    'palevioletred': 0xDB7093,\n    'papayawhip': 0xFFEFD5,\n    'peachpuff': 0xFFDAB9,\n    'peru': 0xCD853F,\n    'pink': 0xFFC0CB,\n    'plum': 0xDDA0DD,\n    'powderblue': 0xB0E0E6,\n    'purple': 0x800080,\n    'rebeccapurple': 0x663399,\n    'red': 0xFF0000,\n    'rosybrown': 0xBC8F8F,\n    'royalblue': 0x4169E1,\n    'saddlebrown': 0x8B4513,\n    'salmon': 0xFA8072,\n    'sandybrown': 0xF4A460,\n    'seagreen': 0x2E8B57,\n    'seashell': 0xFFF5EE,\n    'sienna': 0xA0522D,\n    'silver': 0xC0C0C0,\n    'skyblue': 0x87CEEB,\n    'slateblue': 0x6A5ACD,\n    'slategray': 0x708090,\n    'slategrey': 0x708090,\n    'snow': 0xFFFAFA,\n    'springgreen': 0x00FF7F,\n    'steelblue': 0x4682B4,\n    'tan': 0xD2B48C,\n    'teal': 0x008080,\n    'thistle': 0xD8BFD8,\n    'tomato': 0xFF6347,\n    'turquoise': 0x40E0D0,\n    'violet': 0xEE82EE,\n    'wheat': 0xF5DEB3,\n    'white': 0xFFFFFF,\n    'whitesmoke': 0xF5F5F5,\n    'yellow': 0xFFFF00,\n    'yellowgreen': 0x9ACD32\n  };\n\n  function Color(r, g, b) {\n    if (g === undefined && b === undefined) {\n      // r is THREE.Color, hex or string\n      return this.set(r);\n    }\n\n    return this.setRGB(r, g, b);\n  }\n\n  Object.assign(Color.prototype, {\n    isColor: true,\n    r: 1,\n    g: 1,\n    b: 1,\n    set: function set(value) {\n      if (value && value.isColor) {\n        this.copy(value);\n      } else if (typeof value === 'number') {\n        this.setHex(value);\n      } else if (typeof value === 'string') {\n        this.setStyle(value);\n      }\n\n      return this;\n    },\n    setScalar: function setScalar(scalar) {\n      this.r = scalar;\n      this.g = scalar;\n      this.b = scalar;\n      return this;\n    },\n    setHex: function setHex(hex) {\n      hex = Math.floor(hex);\n      this.r = (hex >> 16 & 255) / 255;\n      this.g = (hex >> 8 & 255) / 255;\n      this.b = (hex & 255) / 255;\n      return this;\n    },\n    setRGB: function setRGB(r, g, b) {\n      this.r = r;\n      this.g = g;\n      this.b = b;\n      return this;\n    },\n    setHSL: function () {\n      function hue2rgb(p, q, t) {\n        if (t < 0) t += 1;\n        if (t > 1) t -= 1;\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\n        if (t < 1 / 2) return q;\n        if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n        return p;\n      }\n\n      return function setHSL(h, s, l) {\n        // h,s,l ranges are in 0.0 - 1.0\n        h = _Math.euclideanModulo(h, 1);\n        s = _Math.clamp(s, 0, 1);\n        l = _Math.clamp(l, 0, 1);\n\n        if (s === 0) {\n          this.r = this.g = this.b = l;\n        } else {\n          var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n          var q = 2 * l - p;\n          this.r = hue2rgb(q, p, h + 1 / 3);\n          this.g = hue2rgb(q, p, h);\n          this.b = hue2rgb(q, p, h - 1 / 3);\n        }\n\n        return this;\n      };\n    }(),\n    setStyle: function setStyle(style) {\n      function handleAlpha(string) {\n        if (string === undefined) return;\n\n        if (parseFloat(string) < 1) {\n          console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n        }\n      }\n\n      var m;\n\n      if (m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(style)) {\n        // rgb / hsl\n        var color;\n        var name = m[1];\n        var components = m[2];\n\n        switch (name) {\n          case 'rgb':\n          case 'rgba':\n            if (color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n              // rgb(255,0,0) rgba(255,0,0,0.5)\n              this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n              this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n              this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n              handleAlpha(color[5]);\n              return this;\n            }\n\n            if (color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n              // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n              this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n              this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n              this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n              handleAlpha(color[5]);\n              return this;\n            }\n\n            break;\n\n          case 'hsl':\n          case 'hsla':\n            if (color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n              // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n              var h = parseFloat(color[1]) / 360;\n              var s = parseInt(color[2], 10) / 100;\n              var l = parseInt(color[3], 10) / 100;\n              handleAlpha(color[5]);\n              return this.setHSL(h, s, l);\n            }\n\n            break;\n        }\n      } else if (m = /^\\#([A-Fa-f0-9]+)$/.exec(style)) {\n        // hex color\n        var hex = m[1];\n        var size = hex.length;\n\n        if (size === 3) {\n          // #ff0\n          this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n          this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n          this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n          return this;\n        } else if (size === 6) {\n          // #ff0000\n          this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n          this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n          this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n          return this;\n        }\n      }\n\n      if (style && style.length > 0) {\n        // color keywords\n        var hex = ColorKeywords[style];\n\n        if (hex !== undefined) {\n          // red\n          this.setHex(hex);\n        } else {\n          // unknown color\n          console.warn('THREE.Color: Unknown color ' + style);\n        }\n      }\n\n      return this;\n    },\n    clone: function clone() {\n      return new this.constructor(this.r, this.g, this.b);\n    },\n    copy: function copy(color) {\n      this.r = color.r;\n      this.g = color.g;\n      this.b = color.b;\n      return this;\n    },\n    copyGammaToLinear: function copyGammaToLinear(color, gammaFactor) {\n      if (gammaFactor === undefined) gammaFactor = 2.0;\n      this.r = Math.pow(color.r, gammaFactor);\n      this.g = Math.pow(color.g, gammaFactor);\n      this.b = Math.pow(color.b, gammaFactor);\n      return this;\n    },\n    copyLinearToGamma: function copyLinearToGamma(color, gammaFactor) {\n      if (gammaFactor === undefined) gammaFactor = 2.0;\n      var safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n      this.r = Math.pow(color.r, safeInverse);\n      this.g = Math.pow(color.g, safeInverse);\n      this.b = Math.pow(color.b, safeInverse);\n      return this;\n    },\n    convertGammaToLinear: function convertGammaToLinear(gammaFactor) {\n      this.copyGammaToLinear(this, gammaFactor);\n      return this;\n    },\n    convertLinearToGamma: function convertLinearToGamma(gammaFactor) {\n      this.copyLinearToGamma(this, gammaFactor);\n      return this;\n    },\n    copySRGBToLinear: function () {\n      function SRGBToLinear(c) {\n        return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n      }\n\n      return function copySRGBToLinear(color) {\n        this.r = SRGBToLinear(color.r);\n        this.g = SRGBToLinear(color.g);\n        this.b = SRGBToLinear(color.b);\n        return this;\n      };\n    }(),\n    copyLinearToSRGB: function () {\n      function LinearToSRGB(c) {\n        return c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n      }\n\n      return function copyLinearToSRGB(color) {\n        this.r = LinearToSRGB(color.r);\n        this.g = LinearToSRGB(color.g);\n        this.b = LinearToSRGB(color.b);\n        return this;\n      };\n    }(),\n    convertSRGBToLinear: function convertSRGBToLinear() {\n      this.copySRGBToLinear(this);\n      return this;\n    },\n    convertLinearToSRGB: function convertLinearToSRGB() {\n      this.copyLinearToSRGB(this);\n      return this;\n    },\n    getHex: function getHex() {\n      return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n    },\n    getHexString: function getHexString() {\n      return ('000000' + this.getHex().toString(16)).slice(-6);\n    },\n    getHSL: function getHSL(target) {\n      // h,s,l ranges are in 0.0 - 1.0\n      if (target === undefined) {\n        console.warn('THREE.Color: .getHSL() target is now required');\n        target = {\n          h: 0,\n          s: 0,\n          l: 0\n        };\n      }\n\n      var r = this.r,\n          g = this.g,\n          b = this.b;\n      var max = Math.max(r, g, b);\n      var min = Math.min(r, g, b);\n      var hue, saturation;\n      var lightness = (min + max) / 2.0;\n\n      if (min === max) {\n        hue = 0;\n        saturation = 0;\n      } else {\n        var delta = max - min;\n        saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n        switch (max) {\n          case r:\n            hue = (g - b) / delta + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            hue = (b - r) / delta + 2;\n            break;\n\n          case b:\n            hue = (r - g) / delta + 4;\n            break;\n        }\n\n        hue /= 6;\n      }\n\n      target.h = hue;\n      target.s = saturation;\n      target.l = lightness;\n      return target;\n    },\n    getStyle: function getStyle() {\n      return 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n    },\n    offsetHSL: function () {\n      var hsl = {};\n      return function (h, s, l) {\n        this.getHSL(hsl);\n        hsl.h += h;\n        hsl.s += s;\n        hsl.l += l;\n        this.setHSL(hsl.h, hsl.s, hsl.l);\n        return this;\n      };\n    }(),\n    add: function add(color) {\n      this.r += color.r;\n      this.g += color.g;\n      this.b += color.b;\n      return this;\n    },\n    addColors: function addColors(color1, color2) {\n      this.r = color1.r + color2.r;\n      this.g = color1.g + color2.g;\n      this.b = color1.b + color2.b;\n      return this;\n    },\n    addScalar: function addScalar(s) {\n      this.r += s;\n      this.g += s;\n      this.b += s;\n      return this;\n    },\n    sub: function sub(color) {\n      this.r = Math.max(0, this.r - color.r);\n      this.g = Math.max(0, this.g - color.g);\n      this.b = Math.max(0, this.b - color.b);\n      return this;\n    },\n    multiply: function multiply(color) {\n      this.r *= color.r;\n      this.g *= color.g;\n      this.b *= color.b;\n      return this;\n    },\n    multiplyScalar: function multiplyScalar(s) {\n      this.r *= s;\n      this.g *= s;\n      this.b *= s;\n      return this;\n    },\n    lerp: function lerp(color, alpha) {\n      this.r += (color.r - this.r) * alpha;\n      this.g += (color.g - this.g) * alpha;\n      this.b += (color.b - this.b) * alpha;\n      return this;\n    },\n    lerpHSL: function () {\n      var hslA = {\n        h: 0,\n        s: 0,\n        l: 0\n      };\n      var hslB = {\n        h: 0,\n        s: 0,\n        l: 0\n      };\n      return function lerpHSL(color, alpha) {\n        this.getHSL(hslA);\n        color.getHSL(hslB);\n\n        var h = _Math.lerp(hslA.h, hslB.h, alpha);\n\n        var s = _Math.lerp(hslA.s, hslB.s, alpha);\n\n        var l = _Math.lerp(hslA.l, hslB.l, alpha);\n\n        this.setHSL(h, s, l);\n        return this;\n      };\n    }(),\n    equals: function equals(c) {\n      return c.r === this.r && c.g === this.g && c.b === this.b;\n    },\n    fromArray: function fromArray(array, offset) {\n      if (offset === undefined) offset = 0;\n      this.r = array[offset];\n      this.g = array[offset + 1];\n      this.b = array[offset + 2];\n      return this;\n    },\n    toArray: function toArray(array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this.r;\n      array[offset + 1] = this.g;\n      array[offset + 2] = this.b;\n      return array;\n    },\n    toJSON: function toJSON() {\n      return this.getHex();\n    }\n  });\n  /**\n   * Uniforms library for shared webgl shaders\n   */\n\n  var UniformsLib = {\n    common: {\n      diffuse: {\n        value: new Color(0xeeeeee)\n      },\n      opacity: {\n        value: 1.0\n      },\n      map: {\n        value: null\n      },\n      uvTransform: {\n        value: new Matrix3()\n      },\n      alphaMap: {\n        value: null\n      }\n    },\n    specularmap: {\n      specularMap: {\n        value: null\n      }\n    },\n    envmap: {\n      envMap: {\n        value: null\n      },\n      flipEnvMap: {\n        value: -1\n      },\n      reflectivity: {\n        value: 1.0\n      },\n      refractionRatio: {\n        value: 0.98\n      },\n      maxMipLevel: {\n        value: 0\n      }\n    },\n    aomap: {\n      aoMap: {\n        value: null\n      },\n      aoMapIntensity: {\n        value: 1\n      }\n    },\n    lightmap: {\n      lightMap: {\n        value: null\n      },\n      lightMapIntensity: {\n        value: 1\n      }\n    },\n    emissivemap: {\n      emissiveMap: {\n        value: null\n      }\n    },\n    bumpmap: {\n      bumpMap: {\n        value: null\n      },\n      bumpScale: {\n        value: 1\n      }\n    },\n    normalmap: {\n      normalMap: {\n        value: null\n      },\n      normalScale: {\n        value: new Vector2(1, 1)\n      }\n    },\n    displacementmap: {\n      displacementMap: {\n        value: null\n      },\n      displacementScale: {\n        value: 1\n      },\n      displacementBias: {\n        value: 0\n      }\n    },\n    roughnessmap: {\n      roughnessMap: {\n        value: null\n      }\n    },\n    metalnessmap: {\n      metalnessMap: {\n        value: null\n      }\n    },\n    gradientmap: {\n      gradientMap: {\n        value: null\n      }\n    },\n    fog: {\n      fogDensity: {\n        value: 0.00025\n      },\n      fogNear: {\n        value: 1\n      },\n      fogFar: {\n        value: 2000\n      },\n      fogColor: {\n        value: new Color(0xffffff)\n      }\n    },\n    lights: {\n      ambientLightColor: {\n        value: []\n      },\n      directionalLights: {\n        value: [],\n        properties: {\n          direction: {},\n          color: {},\n          shadow: {},\n          shadowBias: {},\n          shadowRadius: {},\n          shadowMapSize: {}\n        }\n      },\n      directionalShadowMap: {\n        value: []\n      },\n      directionalShadowMatrix: {\n        value: []\n      },\n      spotLights: {\n        value: [],\n        properties: {\n          color: {},\n          position: {},\n          direction: {},\n          distance: {},\n          coneCos: {},\n          penumbraCos: {},\n          decay: {},\n          shadow: {},\n          shadowBias: {},\n          shadowRadius: {},\n          shadowMapSize: {}\n        }\n      },\n      spotShadowMap: {\n        value: []\n      },\n      spotShadowMatrix: {\n        value: []\n      },\n      pointLights: {\n        value: [],\n        properties: {\n          color: {},\n          position: {},\n          decay: {},\n          distance: {},\n          shadow: {},\n          shadowBias: {},\n          shadowRadius: {},\n          shadowMapSize: {},\n          shadowCameraNear: {},\n          shadowCameraFar: {}\n        }\n      },\n      pointShadowMap: {\n        value: []\n      },\n      pointShadowMatrix: {\n        value: []\n      },\n      hemisphereLights: {\n        value: [],\n        properties: {\n          direction: {},\n          skyColor: {},\n          groundColor: {}\n        }\n      },\n      // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n      rectAreaLights: {\n        value: [],\n        properties: {\n          color: {},\n          position: {},\n          width: {},\n          height: {}\n        }\n      }\n    },\n    points: {\n      diffuse: {\n        value: new Color(0xeeeeee)\n      },\n      opacity: {\n        value: 1.0\n      },\n      size: {\n        value: 1.0\n      },\n      scale: {\n        value: 1.0\n      },\n      map: {\n        value: null\n      },\n      uvTransform: {\n        value: new Matrix3()\n      }\n    },\n    sprite: {\n      diffuse: {\n        value: new Color(0xeeeeee)\n      },\n      opacity: {\n        value: 1.0\n      },\n      center: {\n        value: new Vector2(0.5, 0.5)\n      },\n      rotation: {\n        value: 0.0\n      },\n      map: {\n        value: null\n      },\n      uvTransform: {\n        value: new Matrix3()\n      }\n    }\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author mikael emtinger / http://gomo.se/\n   */\n\n  var ShaderLib = {\n    basic: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n      vertexShader: ShaderChunk.meshbasic_vert,\n      fragmentShader: ShaderChunk.meshbasic_frag\n    },\n    lambert: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        }\n      }]),\n      vertexShader: ShaderChunk.meshlambert_vert,\n      fragmentShader: ShaderChunk.meshlambert_frag\n    },\n    phong: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        },\n        specular: {\n          value: new Color(0x111111)\n        },\n        shininess: {\n          value: 30\n        }\n      }]),\n      vertexShader: ShaderChunk.meshphong_vert,\n      fragmentShader: ShaderChunk.meshphong_frag\n    },\n    standard: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        },\n        roughness: {\n          value: 0.5\n        },\n        metalness: {\n          value: 0.5\n        },\n        envMapIntensity: {\n          value: 1 // temporary\n\n        }\n      }]),\n      vertexShader: ShaderChunk.meshphysical_vert,\n      fragmentShader: ShaderChunk.meshphysical_frag\n    },\n    matcap: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, {\n        matcap: {\n          value: null\n        }\n      }]),\n      vertexShader: ShaderChunk.meshmatcap_vert,\n      fragmentShader: ShaderChunk.meshmatcap_frag\n    },\n    points: {\n      uniforms: mergeUniforms([UniformsLib.points, UniformsLib.fog]),\n      vertexShader: ShaderChunk.points_vert,\n      fragmentShader: ShaderChunk.points_frag\n    },\n    dashed: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.fog, {\n        scale: {\n          value: 1\n        },\n        dashSize: {\n          value: 1\n        },\n        totalSize: {\n          value: 2\n        }\n      }]),\n      vertexShader: ShaderChunk.linedashed_vert,\n      fragmentShader: ShaderChunk.linedashed_frag\n    },\n    depth: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\n      vertexShader: ShaderChunk.depth_vert,\n      fragmentShader: ShaderChunk.depth_frag\n    },\n    normal: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n        opacity: {\n          value: 1.0\n        }\n      }]),\n      vertexShader: ShaderChunk.normal_vert,\n      fragmentShader: ShaderChunk.normal_frag\n    },\n    sprite: {\n      uniforms: mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\n      vertexShader: ShaderChunk.sprite_vert,\n      fragmentShader: ShaderChunk.sprite_frag\n    },\n    background: {\n      uniforms: {\n        uvTransform: {\n          value: new Matrix3()\n        },\n        t2D: {\n          value: null\n        }\n      },\n      vertexShader: ShaderChunk.background_vert,\n      fragmentShader: ShaderChunk.background_frag\n    },\n\n    /* -------------------------------------------------------------------------\n    //\tCube map shader\n     ------------------------------------------------------------------------- */\n    cube: {\n      uniforms: {\n        tCube: {\n          value: null\n        },\n        tFlip: {\n          value: -1\n        },\n        opacity: {\n          value: 1.0\n        }\n      },\n      vertexShader: ShaderChunk.cube_vert,\n      fragmentShader: ShaderChunk.cube_frag\n    },\n    equirect: {\n      uniforms: {\n        tEquirect: {\n          value: null\n        }\n      },\n      vertexShader: ShaderChunk.equirect_vert,\n      fragmentShader: ShaderChunk.equirect_frag\n    },\n    distanceRGBA: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap, {\n        referencePosition: {\n          value: new Vector3()\n        },\n        nearDistance: {\n          value: 1\n        },\n        farDistance: {\n          value: 1000\n        }\n      }]),\n      vertexShader: ShaderChunk.distanceRGBA_vert,\n      fragmentShader: ShaderChunk.distanceRGBA_frag\n    },\n    shadow: {\n      uniforms: mergeUniforms([UniformsLib.lights, UniformsLib.fog, {\n        color: {\n          value: new Color(0x00000)\n        },\n        opacity: {\n          value: 1.0\n        }\n      }]),\n      vertexShader: ShaderChunk.shadow_vert,\n      fragmentShader: ShaderChunk.shadow_frag\n    }\n  };\n  ShaderLib.physical = {\n    uniforms: mergeUniforms([ShaderLib.standard.uniforms, {\n      clearCoat: {\n        value: 0\n      },\n      clearCoatRoughness: {\n        value: 0\n      }\n    }]),\n    vertexShader: ShaderChunk.meshphysical_vert,\n    fragmentShader: ShaderChunk.meshphysical_frag\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function WebGLAnimation() {\n    var context = null;\n    var isAnimating = false;\n    var animationLoop = null;\n\n    function onAnimationFrame(time, frame) {\n      if (isAnimating === false) return;\n      animationLoop(time, frame);\n      context.requestAnimationFrame(onAnimationFrame);\n    }\n\n    return {\n      start: function start() {\n        if (isAnimating === true) return;\n        if (animationLoop === null) return;\n        context.requestAnimationFrame(onAnimationFrame);\n        isAnimating = true;\n      },\n      stop: function stop() {\n        isAnimating = false;\n      },\n      setAnimationLoop: function setAnimationLoop(callback) {\n        animationLoop = callback;\n      },\n      setContext: function setContext(value) {\n        context = value;\n      }\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLAttributes(gl) {\n    var buffers = new WeakMap();\n\n    function createBuffer(attribute, bufferType) {\n      var array = attribute.array;\n      var usage = attribute.dynamic ? 35048 : 35044;\n      var buffer = gl.createBuffer();\n      gl.bindBuffer(bufferType, buffer);\n      gl.bufferData(bufferType, array, usage);\n      attribute.onUploadCallback();\n      var type = 5126;\n\n      if (array instanceof Float32Array) {\n        type = 5126;\n      } else if (array instanceof Float64Array) {\n        console.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');\n      } else if (array instanceof Uint16Array) {\n        type = 5123;\n      } else if (array instanceof Int16Array) {\n        type = 5122;\n      } else if (array instanceof Uint32Array) {\n        type = 5125;\n      } else if (array instanceof Int32Array) {\n        type = 5124;\n      } else if (array instanceof Int8Array) {\n        type = 5120;\n      } else if (array instanceof Uint8Array) {\n        type = 5121;\n      }\n\n      return {\n        buffer: buffer,\n        type: type,\n        bytesPerElement: array.BYTES_PER_ELEMENT,\n        version: attribute.version\n      };\n    }\n\n    function updateBuffer(buffer, attribute, bufferType) {\n      var array = attribute.array;\n      var updateRange = attribute.updateRange;\n      gl.bindBuffer(bufferType, buffer);\n\n      if (attribute.dynamic === false) {\n        gl.bufferData(bufferType, array, 35044);\n      } else if (updateRange.count === -1) {\n        // Not using update ranges\n        gl.bufferSubData(bufferType, 0, array);\n      } else if (updateRange.count === 0) {\n        console.error('THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.');\n      } else {\n        gl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\n        updateRange.count = -1; // reset range\n      }\n    } //\n\n\n    function get(attribute) {\n      if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n      return buffers.get(attribute);\n    }\n\n    function remove(attribute) {\n      if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n      var data = buffers.get(attribute);\n\n      if (data) {\n        gl.deleteBuffer(data.buffer);\n        buffers.delete(attribute);\n      }\n    }\n\n    function update(attribute, bufferType) {\n      if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n      var data = buffers.get(attribute);\n\n      if (data === undefined) {\n        buffers.set(attribute, createBuffer(attribute, bufferType));\n      } else if (data.version < attribute.version) {\n        updateBuffer(data.buffer, attribute, bufferType);\n        data.version = attribute.version;\n      }\n    }\n\n    return {\n      get: get,\n      remove: remove,\n      update: update\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  function Face3(a, b, c, normal, color, materialIndex) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.normal = normal && normal.isVector3 ? normal : new Vector3();\n    this.vertexNormals = Array.isArray(normal) ? normal : [];\n    this.color = color && color.isColor ? color : new Color();\n    this.vertexColors = Array.isArray(color) ? color : [];\n    this.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n  }\n\n  Object.assign(Face3.prototype, {\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    copy: function copy(source) {\n      this.a = source.a;\n      this.b = source.b;\n      this.c = source.c;\n      this.normal.copy(source.normal);\n      this.color.copy(source.color);\n      this.materialIndex = source.materialIndex;\n\n      for (var i = 0, il = source.vertexNormals.length; i < il; i++) {\n        this.vertexNormals[i] = source.vertexNormals[i].clone();\n      }\n\n      for (var i = 0, il = source.vertexColors.length; i < il; i++) {\n        this.vertexColors[i] = source.vertexColors[i].clone();\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author bhouston / http://clara.io\n   */\n\n  function Euler(x, y, z, order) {\n    this._x = x || 0;\n    this._y = y || 0;\n    this._z = z || 0;\n    this._order = order || Euler.DefaultOrder;\n  }\n\n  Euler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\n  Euler.DefaultOrder = 'XYZ';\n  Object.defineProperties(Euler.prototype, {\n    x: {\n      get: function get() {\n        return this._x;\n      },\n      set: function set(value) {\n        this._x = value;\n        this.onChangeCallback();\n      }\n    },\n    y: {\n      get: function get() {\n        return this._y;\n      },\n      set: function set(value) {\n        this._y = value;\n        this.onChangeCallback();\n      }\n    },\n    z: {\n      get: function get() {\n        return this._z;\n      },\n      set: function set(value) {\n        this._z = value;\n        this.onChangeCallback();\n      }\n    },\n    order: {\n      get: function get() {\n        return this._order;\n      },\n      set: function set(value) {\n        this._order = value;\n        this.onChangeCallback();\n      }\n    }\n  });\n  Object.assign(Euler.prototype, {\n    isEuler: true,\n    set: function set(x, y, z, order) {\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      this._order = order || this._order;\n      this.onChangeCallback();\n      return this;\n    },\n    clone: function clone() {\n      return new this.constructor(this._x, this._y, this._z, this._order);\n    },\n    copy: function copy(euler) {\n      this._x = euler._x;\n      this._y = euler._y;\n      this._z = euler._z;\n      this._order = euler._order;\n      this.onChangeCallback();\n      return this;\n    },\n    setFromRotationMatrix: function setFromRotationMatrix(m, order, update) {\n      var clamp = _Math.clamp; // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n      var te = m.elements;\n      var m11 = te[0],\n          m12 = te[4],\n          m13 = te[8];\n      var m21 = te[1],\n          m22 = te[5],\n          m23 = te[9];\n      var m31 = te[2],\n          m32 = te[6],\n          m33 = te[10];\n      order = order || this._order;\n\n      if (order === 'XYZ') {\n        this._y = Math.asin(clamp(m13, -1, 1));\n\n        if (Math.abs(m13) < 0.99999) {\n          this._x = Math.atan2(-m23, m33);\n          this._z = Math.atan2(-m12, m11);\n        } else {\n          this._x = Math.atan2(m32, m22);\n          this._z = 0;\n        }\n      } else if (order === 'YXZ') {\n        this._x = Math.asin(-clamp(m23, -1, 1));\n\n        if (Math.abs(m23) < 0.99999) {\n          this._y = Math.atan2(m13, m33);\n          this._z = Math.atan2(m21, m22);\n        } else {\n          this._y = Math.atan2(-m31, m11);\n          this._z = 0;\n        }\n      } else if (order === 'ZXY') {\n        this._x = Math.asin(clamp(m32, -1, 1));\n\n        if (Math.abs(m32) < 0.99999) {\n          this._y = Math.atan2(-m31, m33);\n          this._z = Math.atan2(-m12, m22);\n        } else {\n          this._y = 0;\n          this._z = Math.atan2(m21, m11);\n        }\n      } else if (order === 'ZYX') {\n        this._y = Math.asin(-clamp(m31, -1, 1));\n\n        if (Math.abs(m31) < 0.99999) {\n          this._x = Math.atan2(m32, m33);\n          this._z = Math.atan2(m21, m11);\n        } else {\n          this._x = 0;\n          this._z = Math.atan2(-m12, m22);\n        }\n      } else if (order === 'YZX') {\n        this._z = Math.asin(clamp(m21, -1, 1));\n\n        if (Math.abs(m21) < 0.99999) {\n          this._x = Math.atan2(-m23, m22);\n          this._y = Math.atan2(-m31, m11);\n        } else {\n          this._x = 0;\n          this._y = Math.atan2(m13, m33);\n        }\n      } else if (order === 'XZY') {\n        this._z = Math.asin(-clamp(m12, -1, 1));\n\n        if (Math.abs(m12) < 0.99999) {\n          this._x = Math.atan2(m32, m22);\n          this._y = Math.atan2(m13, m11);\n        } else {\n          this._x = Math.atan2(-m23, m33);\n          this._y = 0;\n        }\n      } else {\n        console.warn('THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order);\n      }\n\n      this._order = order;\n      if (update !== false) this.onChangeCallback();\n      return this;\n    },\n    setFromQuaternion: function () {\n      var matrix = new Matrix4();\n      return function setFromQuaternion(q, order, update) {\n        matrix.makeRotationFromQuaternion(q);\n        return this.setFromRotationMatrix(matrix, order, update);\n      };\n    }(),\n    setFromVector3: function setFromVector3(v, order) {\n      return this.set(v.x, v.y, v.z, order || this._order);\n    },\n    reorder: function () {\n      // WARNING: this discards revolution information -bhouston\n      var q = new Quaternion();\n      return function reorder(newOrder) {\n        q.setFromEuler(this);\n        return this.setFromQuaternion(q, newOrder);\n      };\n    }(),\n    equals: function equals(euler) {\n      return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n    },\n    fromArray: function fromArray(array) {\n      this._x = array[0];\n      this._y = array[1];\n      this._z = array[2];\n      if (array[3] !== undefined) this._order = array[3];\n      this.onChangeCallback();\n      return this;\n    },\n    toArray: function toArray(array, offset) {\n      if (array === undefined) array = [];\n      if (offset === undefined) offset = 0;\n      array[offset] = this._x;\n      array[offset + 1] = this._y;\n      array[offset + 2] = this._z;\n      array[offset + 3] = this._order;\n      return array;\n    },\n    toVector3: function toVector3(optionalResult) {\n      if (optionalResult) {\n        return optionalResult.set(this._x, this._y, this._z);\n      } else {\n        return new Vector3(this._x, this._y, this._z);\n      }\n    },\n    onChange: function onChange(callback) {\n      this.onChangeCallback = callback;\n      return this;\n    },\n    onChangeCallback: function onChangeCallback() {}\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Layers() {\n    this.mask = 1 | 0;\n  }\n\n  Object.assign(Layers.prototype, {\n    set: function set(channel) {\n      this.mask = 1 << channel | 0;\n    },\n    enable: function enable(channel) {\n      this.mask |= 1 << channel | 0;\n    },\n    toggle: function toggle(channel) {\n      this.mask ^= 1 << channel | 0;\n    },\n    disable: function disable(channel) {\n      this.mask &= ~(1 << channel | 0);\n    },\n    test: function test(layers) {\n      return (this.mask & layers.mask) !== 0;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author elephantatwork / www.elephantatwork.ch\n   */\n\n  var object3DId = 0;\n\n  function Object3D() {\n    Object.defineProperty(this, 'id', {\n      value: object3DId++\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.type = 'Object3D';\n    this.parent = null;\n    this.children = [];\n    this.up = Object3D.DefaultUp.clone();\n    var position = new Vector3();\n    var rotation = new Euler();\n    var quaternion = new Quaternion();\n    var scale = new Vector3(1, 1, 1);\n\n    function onRotationChange() {\n      quaternion.setFromEuler(rotation, false);\n    }\n\n    function onQuaternionChange() {\n      rotation.setFromQuaternion(quaternion, undefined, false);\n    }\n\n    rotation.onChange(onRotationChange);\n    quaternion.onChange(onQuaternionChange);\n    Object.defineProperties(this, {\n      position: {\n        configurable: true,\n        enumerable: true,\n        value: position\n      },\n      rotation: {\n        configurable: true,\n        enumerable: true,\n        value: rotation\n      },\n      quaternion: {\n        configurable: true,\n        enumerable: true,\n        value: quaternion\n      },\n      scale: {\n        configurable: true,\n        enumerable: true,\n        value: scale\n      },\n      modelViewMatrix: {\n        value: new Matrix4()\n      },\n      normalMatrix: {\n        value: new Matrix3()\n      }\n    });\n    this.matrix = new Matrix4();\n    this.matrixWorld = new Matrix4();\n    this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = false;\n    this.layers = new Layers();\n    this.visible = true;\n    this.castShadow = false;\n    this.receiveShadow = false;\n    this.frustumCulled = true;\n    this.renderOrder = 0;\n    this.userData = {};\n  }\n\n  Object3D.DefaultUp = new Vector3(0, 1, 0);\n  Object3D.DefaultMatrixAutoUpdate = true;\n  Object3D.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: Object3D,\n    isObject3D: true,\n    onBeforeRender: function onBeforeRender() {},\n    onAfterRender: function onAfterRender() {},\n    applyMatrix: function applyMatrix(matrix) {\n      this.matrix.multiplyMatrices(matrix, this.matrix);\n      this.matrix.decompose(this.position, this.quaternion, this.scale);\n    },\n    applyQuaternion: function applyQuaternion(q) {\n      this.quaternion.premultiply(q);\n      return this;\n    },\n    setRotationFromAxisAngle: function setRotationFromAxisAngle(axis, angle) {\n      // assumes axis is normalized\n      this.quaternion.setFromAxisAngle(axis, angle);\n    },\n    setRotationFromEuler: function setRotationFromEuler(euler) {\n      this.quaternion.setFromEuler(euler, true);\n    },\n    setRotationFromMatrix: function setRotationFromMatrix(m) {\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      this.quaternion.setFromRotationMatrix(m);\n    },\n    setRotationFromQuaternion: function setRotationFromQuaternion(q) {\n      // assumes q is normalized\n      this.quaternion.copy(q);\n    },\n    rotateOnAxis: function () {\n      // rotate object on axis in object space\n      // axis is assumed to be normalized\n      var q1 = new Quaternion();\n      return function rotateOnAxis(axis, angle) {\n        q1.setFromAxisAngle(axis, angle);\n        this.quaternion.multiply(q1);\n        return this;\n      };\n    }(),\n    rotateOnWorldAxis: function () {\n      // rotate object on axis in world space\n      // axis is assumed to be normalized\n      // method assumes no rotated parent\n      var q1 = new Quaternion();\n      return function rotateOnWorldAxis(axis, angle) {\n        q1.setFromAxisAngle(axis, angle);\n        this.quaternion.premultiply(q1);\n        return this;\n      };\n    }(),\n    rotateX: function () {\n      var v1 = new Vector3(1, 0, 0);\n      return function rotateX(angle) {\n        return this.rotateOnAxis(v1, angle);\n      };\n    }(),\n    rotateY: function () {\n      var v1 = new Vector3(0, 1, 0);\n      return function rotateY(angle) {\n        return this.rotateOnAxis(v1, angle);\n      };\n    }(),\n    rotateZ: function () {\n      var v1 = new Vector3(0, 0, 1);\n      return function rotateZ(angle) {\n        return this.rotateOnAxis(v1, angle);\n      };\n    }(),\n    translateOnAxis: function () {\n      // translate object by distance along axis in object space\n      // axis is assumed to be normalized\n      var v1 = new Vector3();\n      return function translateOnAxis(axis, distance) {\n        v1.copy(axis).applyQuaternion(this.quaternion);\n        this.position.add(v1.multiplyScalar(distance));\n        return this;\n      };\n    }(),\n    translateX: function () {\n      var v1 = new Vector3(1, 0, 0);\n      return function translateX(distance) {\n        return this.translateOnAxis(v1, distance);\n      };\n    }(),\n    translateY: function () {\n      var v1 = new Vector3(0, 1, 0);\n      return function translateY(distance) {\n        return this.translateOnAxis(v1, distance);\n      };\n    }(),\n    translateZ: function () {\n      var v1 = new Vector3(0, 0, 1);\n      return function translateZ(distance) {\n        return this.translateOnAxis(v1, distance);\n      };\n    }(),\n    localToWorld: function localToWorld(vector) {\n      return vector.applyMatrix4(this.matrixWorld);\n    },\n    worldToLocal: function () {\n      var m1 = new Matrix4();\n      return function worldToLocal(vector) {\n        return vector.applyMatrix4(m1.getInverse(this.matrixWorld));\n      };\n    }(),\n    lookAt: function () {\n      // This method does not support objects having non-uniformly-scaled parent(s)\n      var q1 = new Quaternion();\n      var m1 = new Matrix4();\n      var target = new Vector3();\n      var position = new Vector3();\n      return function lookAt(x, y, z) {\n        if (x.isVector3) {\n          target.copy(x);\n        } else {\n          target.set(x, y, z);\n        }\n\n        var parent = this.parent;\n        this.updateWorldMatrix(true, false);\n        position.setFromMatrixPosition(this.matrixWorld);\n\n        if (this.isCamera || this.isLight) {\n          m1.lookAt(position, target, this.up);\n        } else {\n          m1.lookAt(target, position, this.up);\n        }\n\n        this.quaternion.setFromRotationMatrix(m1);\n\n        if (parent) {\n          m1.extractRotation(parent.matrixWorld);\n          q1.setFromRotationMatrix(m1);\n          this.quaternion.premultiply(q1.inverse());\n        }\n      };\n    }(),\n    add: function add(object) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n\n        return this;\n      }\n\n      if (object === this) {\n        console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\", object);\n        return this;\n      }\n\n      if (object && object.isObject3D) {\n        if (object.parent !== null) {\n          object.parent.remove(object);\n        }\n\n        object.parent = this;\n        object.dispatchEvent({\n          type: 'added'\n        });\n        this.children.push(object);\n      } else {\n        console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object);\n      }\n\n      return this;\n    },\n    remove: function remove(object) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.remove(arguments[i]);\n        }\n\n        return this;\n      }\n\n      var index = this.children.indexOf(object);\n\n      if (index !== -1) {\n        object.parent = null;\n        object.dispatchEvent({\n          type: 'removed'\n        });\n        this.children.splice(index, 1);\n      }\n\n      return this;\n    },\n    getObjectById: function getObjectById(id) {\n      return this.getObjectByProperty('id', id);\n    },\n    getObjectByName: function getObjectByName(name) {\n      return this.getObjectByProperty('name', name);\n    },\n    getObjectByProperty: function getObjectByProperty(name, value) {\n      if (this[name] === value) return this;\n\n      for (var i = 0, l = this.children.length; i < l; i++) {\n        var child = this.children[i];\n        var object = child.getObjectByProperty(name, value);\n\n        if (object !== undefined) {\n          return object;\n        }\n      }\n\n      return undefined;\n    },\n    getWorldPosition: function getWorldPosition(target) {\n      if (target === undefined) {\n        console.warn('THREE.Object3D: .getWorldPosition() target is now required');\n        target = new Vector3();\n      }\n\n      this.updateMatrixWorld(true);\n      return target.setFromMatrixPosition(this.matrixWorld);\n    },\n    getWorldQuaternion: function () {\n      var position = new Vector3();\n      var scale = new Vector3();\n      return function getWorldQuaternion(target) {\n        if (target === undefined) {\n          console.warn('THREE.Object3D: .getWorldQuaternion() target is now required');\n          target = new Quaternion();\n        }\n\n        this.updateMatrixWorld(true);\n        this.matrixWorld.decompose(position, target, scale);\n        return target;\n      };\n    }(),\n    getWorldScale: function () {\n      var position = new Vector3();\n      var quaternion = new Quaternion();\n      return function getWorldScale(target) {\n        if (target === undefined) {\n          console.warn('THREE.Object3D: .getWorldScale() target is now required');\n          target = new Vector3();\n        }\n\n        this.updateMatrixWorld(true);\n        this.matrixWorld.decompose(position, quaternion, target);\n        return target;\n      };\n    }(),\n    getWorldDirection: function getWorldDirection(target) {\n      if (target === undefined) {\n        console.warn('THREE.Object3D: .getWorldDirection() target is now required');\n        target = new Vector3();\n      }\n\n      this.updateMatrixWorld(true);\n      var e = this.matrixWorld.elements;\n      return target.set(e[8], e[9], e[10]).normalize();\n    },\n    raycast: function raycast() {},\n    traverse: function traverse(callback) {\n      callback(this);\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].traverse(callback);\n      }\n    },\n    traverseVisible: function traverseVisible(callback) {\n      if (this.visible === false) return;\n      callback(this);\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].traverseVisible(callback);\n      }\n    },\n    traverseAncestors: function traverseAncestors(callback) {\n      var parent = this.parent;\n\n      if (parent !== null) {\n        callback(parent);\n        parent.traverseAncestors(callback);\n      }\n    },\n    updateMatrix: function updateMatrix() {\n      this.matrix.compose(this.position, this.quaternion, this.scale);\n      this.matrixWorldNeedsUpdate = true;\n    },\n    updateMatrixWorld: function updateMatrixWorld(force) {\n      if (this.matrixAutoUpdate) this.updateMatrix();\n\n      if (this.matrixWorldNeedsUpdate || force) {\n        if (this.parent === null) {\n          this.matrixWorld.copy(this.matrix);\n        } else {\n          this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n        }\n\n        this.matrixWorldNeedsUpdate = false;\n        force = true;\n      } // update children\n\n\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].updateMatrixWorld(force);\n      }\n    },\n    updateWorldMatrix: function updateWorldMatrix(updateParents, updateChildren) {\n      var parent = this.parent;\n\n      if (updateParents === true && parent !== null) {\n        parent.updateWorldMatrix(true, false);\n      }\n\n      if (this.matrixAutoUpdate) this.updateMatrix();\n\n      if (this.parent === null) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      } // update children\n\n\n      if (updateChildren === true) {\n        var children = this.children;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          children[i].updateWorldMatrix(false, true);\n        }\n      }\n    },\n    toJSON: function toJSON(meta) {\n      // meta is a string when called from JSON.stringify\n      var isRootObject = meta === undefined || typeof meta === 'string';\n      var output = {}; // meta is a hash used to collect geometries, materials.\n      // not providing it implies that this is the root object\n      // being serialized.\n\n      if (isRootObject) {\n        // initialize meta obj\n        meta = {\n          geometries: {},\n          materials: {},\n          textures: {},\n          images: {},\n          shapes: {}\n        };\n        output.metadata = {\n          version: 4.5,\n          type: 'Object',\n          generator: 'Object3D.toJSON'\n        };\n      } // standard Object3D serialization\n\n\n      var object = {};\n      object.uuid = this.uuid;\n      object.type = this.type;\n      if (this.name !== '') object.name = this.name;\n      if (this.castShadow === true) object.castShadow = true;\n      if (this.receiveShadow === true) object.receiveShadow = true;\n      if (this.visible === false) object.visible = false;\n      if (this.frustumCulled === false) object.frustumCulled = false;\n      if (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n      if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n      object.layers = this.layers.mask;\n      object.matrix = this.matrix.toArray();\n      if (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; //\n\n      function serialize(library, element) {\n        if (library[element.uuid] === undefined) {\n          library[element.uuid] = element.toJSON(meta);\n        }\n\n        return element.uuid;\n      }\n\n      if (this.isMesh || this.isLine || this.isPoints) {\n        object.geometry = serialize(meta.geometries, this.geometry);\n        var parameters = this.geometry.parameters;\n\n        if (parameters !== undefined && parameters.shapes !== undefined) {\n          var shapes = parameters.shapes;\n\n          if (Array.isArray(shapes)) {\n            for (var i = 0, l = shapes.length; i < l; i++) {\n              var shape = shapes[i];\n              serialize(meta.shapes, shape);\n            }\n          } else {\n            serialize(meta.shapes, shapes);\n          }\n        }\n      }\n\n      if (this.material !== undefined) {\n        if (Array.isArray(this.material)) {\n          var uuids = [];\n\n          for (var i = 0, l = this.material.length; i < l; i++) {\n            uuids.push(serialize(meta.materials, this.material[i]));\n          }\n\n          object.material = uuids;\n        } else {\n          object.material = serialize(meta.materials, this.material);\n        }\n      } //\n\n\n      if (this.children.length > 0) {\n        object.children = [];\n\n        for (var i = 0; i < this.children.length; i++) {\n          object.children.push(this.children[i].toJSON(meta).object);\n        }\n      }\n\n      if (isRootObject) {\n        var geometries = extractFromCache(meta.geometries);\n        var materials = extractFromCache(meta.materials);\n        var textures = extractFromCache(meta.textures);\n        var images = extractFromCache(meta.images);\n        var shapes = extractFromCache(meta.shapes);\n        if (geometries.length > 0) output.geometries = geometries;\n        if (materials.length > 0) output.materials = materials;\n        if (textures.length > 0) output.textures = textures;\n        if (images.length > 0) output.images = images;\n        if (shapes.length > 0) output.shapes = shapes;\n      }\n\n      output.object = object;\n      return output; // extract data from the cache hash\n      // remove metadata on each item\n      // and return as array\n\n      function extractFromCache(cache) {\n        var values = [];\n\n        for (var key in cache) {\n          var data = cache[key];\n          delete data.metadata;\n          values.push(data);\n        }\n\n        return values;\n      }\n    },\n    clone: function clone(recursive) {\n      return new this.constructor().copy(this, recursive);\n    },\n    copy: function copy(source, recursive) {\n      if (recursive === undefined) recursive = true;\n      this.name = source.name;\n      this.up.copy(source.up);\n      this.position.copy(source.position);\n      this.quaternion.copy(source.quaternion);\n      this.scale.copy(source.scale);\n      this.matrix.copy(source.matrix);\n      this.matrixWorld.copy(source.matrixWorld);\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n      this.layers.mask = source.layers.mask;\n      this.visible = source.visible;\n      this.castShadow = source.castShadow;\n      this.receiveShadow = source.receiveShadow;\n      this.frustumCulled = source.frustumCulled;\n      this.renderOrder = source.renderOrder;\n      this.userData = JSON.parse(JSON.stringify(source.userData));\n\n      if (recursive === true) {\n        for (var i = 0; i < source.children.length; i++) {\n          var child = source.children[i];\n          this.add(child.clone());\n        }\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author kile / http://kile.stravaganza.org/\n   * @author alteredq / http://alteredqualia.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author bhouston / http://clara.io\n   */\n\n  var geometryId = 0; // Geometry uses even numbers as Id\n\n  function Geometry() {\n    Object.defineProperty(this, 'id', {\n      value: geometryId += 2\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.type = 'Geometry';\n    this.vertices = [];\n    this.colors = [];\n    this.faces = [];\n    this.faceVertexUvs = [[]];\n    this.morphTargets = [];\n    this.morphNormals = [];\n    this.skinWeights = [];\n    this.skinIndices = [];\n    this.lineDistances = [];\n    this.boundingBox = null;\n    this.boundingSphere = null; // update flags\n\n    this.elementsNeedUpdate = false;\n    this.verticesNeedUpdate = false;\n    this.uvsNeedUpdate = false;\n    this.normalsNeedUpdate = false;\n    this.colorsNeedUpdate = false;\n    this.lineDistancesNeedUpdate = false;\n    this.groupsNeedUpdate = false;\n  }\n\n  Geometry.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: Geometry,\n    isGeometry: true,\n    applyMatrix: function applyMatrix(matrix) {\n      var normalMatrix = new Matrix3().getNormalMatrix(matrix);\n\n      for (var i = 0, il = this.vertices.length; i < il; i++) {\n        var vertex = this.vertices[i];\n        vertex.applyMatrix4(matrix);\n      }\n\n      for (var i = 0, il = this.faces.length; i < il; i++) {\n        var face = this.faces[i];\n        face.normal.applyMatrix3(normalMatrix).normalize();\n\n        for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n          face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();\n        }\n      }\n\n      if (this.boundingBox !== null) {\n        this.computeBoundingBox();\n      }\n\n      if (this.boundingSphere !== null) {\n        this.computeBoundingSphere();\n      }\n\n      this.verticesNeedUpdate = true;\n      this.normalsNeedUpdate = true;\n      return this;\n    },\n    rotateX: function () {\n      // rotate geometry around world x-axis\n      var m1 = new Matrix4();\n      return function rotateX(angle) {\n        m1.makeRotationX(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    rotateY: function () {\n      // rotate geometry around world y-axis\n      var m1 = new Matrix4();\n      return function rotateY(angle) {\n        m1.makeRotationY(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    rotateZ: function () {\n      // rotate geometry around world z-axis\n      var m1 = new Matrix4();\n      return function rotateZ(angle) {\n        m1.makeRotationZ(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    translate: function () {\n      // translate geometry\n      var m1 = new Matrix4();\n      return function translate(x, y, z) {\n        m1.makeTranslation(x, y, z);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    scale: function () {\n      // scale geometry\n      var m1 = new Matrix4();\n      return function scale(x, y, z) {\n        m1.makeScale(x, y, z);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    lookAt: function () {\n      var obj = new Object3D();\n      return function lookAt(vector) {\n        obj.lookAt(vector);\n        obj.updateMatrix();\n        this.applyMatrix(obj.matrix);\n      };\n    }(),\n    fromBufferGeometry: function fromBufferGeometry(geometry) {\n      var scope = this;\n      var indices = geometry.index !== null ? geometry.index.array : undefined;\n      var attributes = geometry.attributes;\n      var positions = attributes.position.array;\n      var normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n      var colors = attributes.color !== undefined ? attributes.color.array : undefined;\n      var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n      var uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n      if (uvs2 !== undefined) this.faceVertexUvs[1] = [];\n\n      for (var i = 0, j = 0; i < positions.length; i += 3, j += 2) {\n        scope.vertices.push(new Vector3().fromArray(positions, i));\n\n        if (colors !== undefined) {\n          scope.colors.push(new Color().fromArray(colors, i));\n        }\n      }\n\n      function addFace(a, b, c, materialIndex) {\n        var vertexColors = colors === undefined ? [] : [scope.colors[a].clone(), scope.colors[b].clone(), scope.colors[c].clone()];\n        var vertexNormals = normals === undefined ? [] : [new Vector3().fromArray(normals, a * 3), new Vector3().fromArray(normals, b * 3), new Vector3().fromArray(normals, c * 3)];\n        var face = new Face3(a, b, c, vertexNormals, vertexColors, materialIndex);\n        scope.faces.push(face);\n\n        if (uvs !== undefined) {\n          scope.faceVertexUvs[0].push([new Vector2().fromArray(uvs, a * 2), new Vector2().fromArray(uvs, b * 2), new Vector2().fromArray(uvs, c * 2)]);\n        }\n\n        if (uvs2 !== undefined) {\n          scope.faceVertexUvs[1].push([new Vector2().fromArray(uvs2, a * 2), new Vector2().fromArray(uvs2, b * 2), new Vector2().fromArray(uvs2, c * 2)]);\n        }\n      }\n\n      var groups = geometry.groups;\n\n      if (groups.length > 0) {\n        for (var i = 0; i < groups.length; i++) {\n          var group = groups[i];\n          var start = group.start;\n          var count = group.count;\n\n          for (var j = start, jl = start + count; j < jl; j += 3) {\n            if (indices !== undefined) {\n              addFace(indices[j], indices[j + 1], indices[j + 2], group.materialIndex);\n            } else {\n              addFace(j, j + 1, j + 2, group.materialIndex);\n            }\n          }\n        }\n      } else {\n        if (indices !== undefined) {\n          for (var i = 0; i < indices.length; i += 3) {\n            addFace(indices[i], indices[i + 1], indices[i + 2]);\n          }\n        } else {\n          for (var i = 0; i < positions.length / 3; i += 3) {\n            addFace(i, i + 1, i + 2);\n          }\n        }\n      }\n\n      this.computeFaceNormals();\n\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n\n      return this;\n    },\n    center: function () {\n      var offset = new Vector3();\n      return function center() {\n        this.computeBoundingBox();\n        this.boundingBox.getCenter(offset).negate();\n        this.translate(offset.x, offset.y, offset.z);\n        return this;\n      };\n    }(),\n    normalize: function normalize() {\n      this.computeBoundingSphere();\n      var center = this.boundingSphere.center;\n      var radius = this.boundingSphere.radius;\n      var s = radius === 0 ? 1 : 1.0 / radius;\n      var matrix = new Matrix4();\n      matrix.set(s, 0, 0, -s * center.x, 0, s, 0, -s * center.y, 0, 0, s, -s * center.z, 0, 0, 0, 1);\n      this.applyMatrix(matrix);\n      return this;\n    },\n    computeFaceNormals: function computeFaceNormals() {\n      var cb = new Vector3(),\n          ab = new Vector3();\n\n      for (var f = 0, fl = this.faces.length; f < fl; f++) {\n        var face = this.faces[f];\n        var vA = this.vertices[face.a];\n        var vB = this.vertices[face.b];\n        var vC = this.vertices[face.c];\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        cb.normalize();\n        face.normal.copy(cb);\n      }\n    },\n    computeVertexNormals: function computeVertexNormals(areaWeighted) {\n      if (areaWeighted === undefined) areaWeighted = true;\n      var v, vl, f, fl, face, vertices;\n      vertices = new Array(this.vertices.length);\n\n      for (v = 0, vl = this.vertices.length; v < vl; v++) {\n        vertices[v] = new Vector3();\n      }\n\n      if (areaWeighted) {\n        // vertex normals weighted by triangle areas\n        // http://www.iquilezles.org/www/articles/normals/normals.htm\n        var vA, vB, vC;\n        var cb = new Vector3(),\n            ab = new Vector3();\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          face = this.faces[f];\n          vA = this.vertices[face.a];\n          vB = this.vertices[face.b];\n          vC = this.vertices[face.c];\n          cb.subVectors(vC, vB);\n          ab.subVectors(vA, vB);\n          cb.cross(ab);\n          vertices[face.a].add(cb);\n          vertices[face.b].add(cb);\n          vertices[face.c].add(cb);\n        }\n      } else {\n        this.computeFaceNormals();\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          face = this.faces[f];\n          vertices[face.a].add(face.normal);\n          vertices[face.b].add(face.normal);\n          vertices[face.c].add(face.normal);\n        }\n      }\n\n      for (v = 0, vl = this.vertices.length; v < vl; v++) {\n        vertices[v].normalize();\n      }\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        var vertexNormals = face.vertexNormals;\n\n        if (vertexNormals.length === 3) {\n          vertexNormals[0].copy(vertices[face.a]);\n          vertexNormals[1].copy(vertices[face.b]);\n          vertexNormals[2].copy(vertices[face.c]);\n        } else {\n          vertexNormals[0] = vertices[face.a].clone();\n          vertexNormals[1] = vertices[face.b].clone();\n          vertexNormals[2] = vertices[face.c].clone();\n        }\n      }\n\n      if (this.faces.length > 0) {\n        this.normalsNeedUpdate = true;\n      }\n    },\n    computeFlatVertexNormals: function computeFlatVertexNormals() {\n      var f, fl, face;\n      this.computeFaceNormals();\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        var vertexNormals = face.vertexNormals;\n\n        if (vertexNormals.length === 3) {\n          vertexNormals[0].copy(face.normal);\n          vertexNormals[1].copy(face.normal);\n          vertexNormals[2].copy(face.normal);\n        } else {\n          vertexNormals[0] = face.normal.clone();\n          vertexNormals[1] = face.normal.clone();\n          vertexNormals[2] = face.normal.clone();\n        }\n      }\n\n      if (this.faces.length > 0) {\n        this.normalsNeedUpdate = true;\n      }\n    },\n    computeMorphNormals: function computeMorphNormals() {\n      var i, il, f, fl, face; // save original normals\n      // - create temp variables on first access\n      //   otherwise just copy (for faster repeated calls)\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n\n        if (!face.__originalFaceNormal) {\n          face.__originalFaceNormal = face.normal.clone();\n        } else {\n          face.__originalFaceNormal.copy(face.normal);\n        }\n\n        if (!face.__originalVertexNormals) face.__originalVertexNormals = [];\n\n        for (i = 0, il = face.vertexNormals.length; i < il; i++) {\n          if (!face.__originalVertexNormals[i]) {\n            face.__originalVertexNormals[i] = face.vertexNormals[i].clone();\n          } else {\n            face.__originalVertexNormals[i].copy(face.vertexNormals[i]);\n          }\n        }\n      } // use temp geometry to compute face and vertex normals for each morph\n\n\n      var tmpGeo = new Geometry();\n      tmpGeo.faces = this.faces;\n\n      for (i = 0, il = this.morphTargets.length; i < il; i++) {\n        // create on first access\n        if (!this.morphNormals[i]) {\n          this.morphNormals[i] = {};\n          this.morphNormals[i].faceNormals = [];\n          this.morphNormals[i].vertexNormals = [];\n          var dstNormalsFace = this.morphNormals[i].faceNormals;\n          var dstNormalsVertex = this.morphNormals[i].vertexNormals;\n          var faceNormal, vertexNormals;\n\n          for (f = 0, fl = this.faces.length; f < fl; f++) {\n            faceNormal = new Vector3();\n            vertexNormals = {\n              a: new Vector3(),\n              b: new Vector3(),\n              c: new Vector3()\n            };\n            dstNormalsFace.push(faceNormal);\n            dstNormalsVertex.push(vertexNormals);\n          }\n        }\n\n        var morphNormals = this.morphNormals[i]; // set vertices to morph target\n\n        tmpGeo.vertices = this.morphTargets[i].vertices; // compute morph normals\n\n        tmpGeo.computeFaceNormals();\n        tmpGeo.computeVertexNormals(); // store morph normals\n\n        var faceNormal, vertexNormals;\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          face = this.faces[f];\n          faceNormal = morphNormals.faceNormals[f];\n          vertexNormals = morphNormals.vertexNormals[f];\n          faceNormal.copy(face.normal);\n          vertexNormals.a.copy(face.vertexNormals[0]);\n          vertexNormals.b.copy(face.vertexNormals[1]);\n          vertexNormals.c.copy(face.vertexNormals[2]);\n        }\n      } // restore original normals\n\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        face.normal = face.__originalFaceNormal;\n        face.vertexNormals = face.__originalVertexNormals;\n      }\n    },\n    computeBoundingBox: function computeBoundingBox() {\n      if (this.boundingBox === null) {\n        this.boundingBox = new Box3();\n      }\n\n      this.boundingBox.setFromPoints(this.vertices);\n    },\n    computeBoundingSphere: function computeBoundingSphere() {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new Sphere();\n      }\n\n      this.boundingSphere.setFromPoints(this.vertices);\n    },\n    merge: function merge(geometry, matrix, materialIndexOffset) {\n      if (!(geometry && geometry.isGeometry)) {\n        console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry);\n        return;\n      }\n\n      var normalMatrix,\n          vertexOffset = this.vertices.length,\n          vertices1 = this.vertices,\n          vertices2 = geometry.vertices,\n          faces1 = this.faces,\n          faces2 = geometry.faces,\n          uvs1 = this.faceVertexUvs[0],\n          uvs2 = geometry.faceVertexUvs[0],\n          colors1 = this.colors,\n          colors2 = geometry.colors;\n      if (materialIndexOffset === undefined) materialIndexOffset = 0;\n\n      if (matrix !== undefined) {\n        normalMatrix = new Matrix3().getNormalMatrix(matrix);\n      } // vertices\n\n\n      for (var i = 0, il = vertices2.length; i < il; i++) {\n        var vertex = vertices2[i];\n        var vertexCopy = vertex.clone();\n        if (matrix !== undefined) vertexCopy.applyMatrix4(matrix);\n        vertices1.push(vertexCopy);\n      } // colors\n\n\n      for (var i = 0, il = colors2.length; i < il; i++) {\n        colors1.push(colors2[i].clone());\n      } // faces\n\n\n      for (i = 0, il = faces2.length; i < il; i++) {\n        var face = faces2[i],\n            faceCopy,\n            normal,\n            color,\n            faceVertexNormals = face.vertexNormals,\n            faceVertexColors = face.vertexColors;\n        faceCopy = new Face3(face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset);\n        faceCopy.normal.copy(face.normal);\n\n        if (normalMatrix !== undefined) {\n          faceCopy.normal.applyMatrix3(normalMatrix).normalize();\n        }\n\n        for (var j = 0, jl = faceVertexNormals.length; j < jl; j++) {\n          normal = faceVertexNormals[j].clone();\n\n          if (normalMatrix !== undefined) {\n            normal.applyMatrix3(normalMatrix).normalize();\n          }\n\n          faceCopy.vertexNormals.push(normal);\n        }\n\n        faceCopy.color.copy(face.color);\n\n        for (var j = 0, jl = faceVertexColors.length; j < jl; j++) {\n          color = faceVertexColors[j];\n          faceCopy.vertexColors.push(color.clone());\n        }\n\n        faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n        faces1.push(faceCopy);\n      } // uvs\n\n\n      for (i = 0, il = uvs2.length; i < il; i++) {\n        var uv = uvs2[i],\n            uvCopy = [];\n\n        if (uv === undefined) {\n          continue;\n        }\n\n        for (var j = 0, jl = uv.length; j < jl; j++) {\n          uvCopy.push(uv[j].clone());\n        }\n\n        uvs1.push(uvCopy);\n      }\n    },\n    mergeMesh: function mergeMesh(mesh) {\n      if (!(mesh && mesh.isMesh)) {\n        console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh);\n        return;\n      }\n\n      if (mesh.matrixAutoUpdate) mesh.updateMatrix();\n      this.merge(mesh.geometry, mesh.matrix);\n    },\n\n    /*\n     * Checks for duplicate vertices with hashmap.\n     * Duplicated vertices are removed\n     * and faces' vertices are updated.\n     */\n    mergeVertices: function mergeVertices() {\n      var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\n      var unique = [],\n          changes = [];\n      var v, key;\n      var precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\n      var precision = Math.pow(10, precisionPoints);\n      var i, il, face;\n      var indices, j, jl;\n\n      for (i = 0, il = this.vertices.length; i < il; i++) {\n        v = this.vertices[i];\n        key = Math.round(v.x * precision) + '_' + Math.round(v.y * precision) + '_' + Math.round(v.z * precision);\n\n        if (verticesMap[key] === undefined) {\n          verticesMap[key] = i;\n          unique.push(this.vertices[i]);\n          changes[i] = unique.length - 1;\n        } else {\n          //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n          changes[i] = changes[verticesMap[key]];\n        }\n      } // if faces are completely degenerate after merging vertices, we\n      // have to remove them from the geometry.\n\n\n      var faceIndicesToRemove = [];\n\n      for (i = 0, il = this.faces.length; i < il; i++) {\n        face = this.faces[i];\n        face.a = changes[face.a];\n        face.b = changes[face.b];\n        face.c = changes[face.c];\n        indices = [face.a, face.b, face.c]; // if any duplicate vertices are found in a Face3\n        // we have to remove the face as nothing can be saved\n\n        for (var n = 0; n < 3; n++) {\n          if (indices[n] === indices[(n + 1) % 3]) {\n            faceIndicesToRemove.push(i);\n            break;\n          }\n        }\n      }\n\n      for (i = faceIndicesToRemove.length - 1; i >= 0; i--) {\n        var idx = faceIndicesToRemove[i];\n        this.faces.splice(idx, 1);\n\n        for (j = 0, jl = this.faceVertexUvs.length; j < jl; j++) {\n          this.faceVertexUvs[j].splice(idx, 1);\n        }\n      } // Use unique set of vertices\n\n\n      var diff = this.vertices.length - unique.length;\n      this.vertices = unique;\n      return diff;\n    },\n    setFromPoints: function setFromPoints(points) {\n      this.vertices = [];\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        var point = points[i];\n        this.vertices.push(new Vector3(point.x, point.y, point.z || 0));\n      }\n\n      return this;\n    },\n    sortFacesByMaterialIndex: function sortFacesByMaterialIndex() {\n      var faces = this.faces;\n      var length = faces.length; // tag faces\n\n      for (var i = 0; i < length; i++) {\n        faces[i]._id = i;\n      } // sort faces\n\n\n      function materialIndexSort(a, b) {\n        return a.materialIndex - b.materialIndex;\n      }\n\n      faces.sort(materialIndexSort); // sort uvs\n\n      var uvs1 = this.faceVertexUvs[0];\n      var uvs2 = this.faceVertexUvs[1];\n      var newUvs1, newUvs2;\n      if (uvs1 && uvs1.length === length) newUvs1 = [];\n      if (uvs2 && uvs2.length === length) newUvs2 = [];\n\n      for (var i = 0; i < length; i++) {\n        var id = faces[i]._id;\n        if (newUvs1) newUvs1.push(uvs1[id]);\n        if (newUvs2) newUvs2.push(uvs2[id]);\n      }\n\n      if (newUvs1) this.faceVertexUvs[0] = newUvs1;\n      if (newUvs2) this.faceVertexUvs[1] = newUvs2;\n    },\n    toJSON: function toJSON() {\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'Geometry',\n          generator: 'Geometry.toJSON'\n        }\n      }; // standard Geometry serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n      if (this.name !== '') data.name = this.name;\n\n      if (this.parameters !== undefined) {\n        var parameters = this.parameters;\n\n        for (var key in parameters) {\n          if (parameters[key] !== undefined) data[key] = parameters[key];\n        }\n\n        return data;\n      }\n\n      var vertices = [];\n\n      for (var i = 0; i < this.vertices.length; i++) {\n        var vertex = this.vertices[i];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n\n      var faces = [];\n      var normals = [];\n      var normalsHash = {};\n      var colors = [];\n      var colorsHash = {};\n      var uvs = [];\n      var uvsHash = {};\n\n      for (var i = 0; i < this.faces.length; i++) {\n        var face = this.faces[i];\n        var hasMaterial = true;\n        var hasFaceUv = false; // deprecated\n\n        var hasFaceVertexUv = this.faceVertexUvs[0][i] !== undefined;\n        var hasFaceNormal = face.normal.length() > 0;\n        var hasFaceVertexNormal = face.vertexNormals.length > 0;\n        var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n        var hasFaceVertexColor = face.vertexColors.length > 0;\n        var faceType = 0;\n        faceType = setBit(faceType, 0, 0); // isQuad\n\n        faceType = setBit(faceType, 1, hasMaterial);\n        faceType = setBit(faceType, 2, hasFaceUv);\n        faceType = setBit(faceType, 3, hasFaceVertexUv);\n        faceType = setBit(faceType, 4, hasFaceNormal);\n        faceType = setBit(faceType, 5, hasFaceVertexNormal);\n        faceType = setBit(faceType, 6, hasFaceColor);\n        faceType = setBit(faceType, 7, hasFaceVertexColor);\n        faces.push(faceType);\n        faces.push(face.a, face.b, face.c);\n        faces.push(face.materialIndex);\n\n        if (hasFaceVertexUv) {\n          var faceVertexUvs = this.faceVertexUvs[0][i];\n          faces.push(getUvIndex(faceVertexUvs[0]), getUvIndex(faceVertexUvs[1]), getUvIndex(faceVertexUvs[2]));\n        }\n\n        if (hasFaceNormal) {\n          faces.push(getNormalIndex(face.normal));\n        }\n\n        if (hasFaceVertexNormal) {\n          var vertexNormals = face.vertexNormals;\n          faces.push(getNormalIndex(vertexNormals[0]), getNormalIndex(vertexNormals[1]), getNormalIndex(vertexNormals[2]));\n        }\n\n        if (hasFaceColor) {\n          faces.push(getColorIndex(face.color));\n        }\n\n        if (hasFaceVertexColor) {\n          var vertexColors = face.vertexColors;\n          faces.push(getColorIndex(vertexColors[0]), getColorIndex(vertexColors[1]), getColorIndex(vertexColors[2]));\n        }\n      }\n\n      function setBit(value, position, enabled) {\n        return enabled ? value | 1 << position : value & ~(1 << position);\n      }\n\n      function getNormalIndex(normal) {\n        var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n        if (normalsHash[hash] !== undefined) {\n          return normalsHash[hash];\n        }\n\n        normalsHash[hash] = normals.length / 3;\n        normals.push(normal.x, normal.y, normal.z);\n        return normalsHash[hash];\n      }\n\n      function getColorIndex(color) {\n        var hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n        if (colorsHash[hash] !== undefined) {\n          return colorsHash[hash];\n        }\n\n        colorsHash[hash] = colors.length;\n        colors.push(color.getHex());\n        return colorsHash[hash];\n      }\n\n      function getUvIndex(uv) {\n        var hash = uv.x.toString() + uv.y.toString();\n\n        if (uvsHash[hash] !== undefined) {\n          return uvsHash[hash];\n        }\n\n        uvsHash[hash] = uvs.length / 2;\n        uvs.push(uv.x, uv.y);\n        return uvsHash[hash];\n      }\n\n      data.data = {};\n      data.data.vertices = vertices;\n      data.data.normals = normals;\n      if (colors.length > 0) data.data.colors = colors;\n      if (uvs.length > 0) data.data.uvs = [uvs]; // temporal backward compatibility\n\n      data.data.faces = faces;\n      return data;\n    },\n    clone: function clone() {\n      /*\n       // Handle primitives\n      \t var parameters = this.parameters;\n      \t if ( parameters !== undefined ) {\n      \t var values = [];\n      \t for ( var key in parameters ) {\n      \t values.push( parameters[ key ] );\n      \t }\n      \t var geometry = Object.create( this.constructor.prototype );\n       this.constructor.apply( geometry, values );\n       return geometry;\n      \t }\n      \t return new this.constructor().copy( this );\n       */\n      return new Geometry().copy(this);\n    },\n    copy: function copy(source) {\n      var i, il, j, jl, k, kl; // reset\n\n      this.vertices = [];\n      this.colors = [];\n      this.faces = [];\n      this.faceVertexUvs = [[]];\n      this.morphTargets = [];\n      this.morphNormals = [];\n      this.skinWeights = [];\n      this.skinIndices = [];\n      this.lineDistances = [];\n      this.boundingBox = null;\n      this.boundingSphere = null; // name\n\n      this.name = source.name; // vertices\n\n      var vertices = source.vertices;\n\n      for (i = 0, il = vertices.length; i < il; i++) {\n        this.vertices.push(vertices[i].clone());\n      } // colors\n\n\n      var colors = source.colors;\n\n      for (i = 0, il = colors.length; i < il; i++) {\n        this.colors.push(colors[i].clone());\n      } // faces\n\n\n      var faces = source.faces;\n\n      for (i = 0, il = faces.length; i < il; i++) {\n        this.faces.push(faces[i].clone());\n      } // face vertex uvs\n\n\n      for (i = 0, il = source.faceVertexUvs.length; i < il; i++) {\n        var faceVertexUvs = source.faceVertexUvs[i];\n\n        if (this.faceVertexUvs[i] === undefined) {\n          this.faceVertexUvs[i] = [];\n        }\n\n        for (j = 0, jl = faceVertexUvs.length; j < jl; j++) {\n          var uvs = faceVertexUvs[j],\n              uvsCopy = [];\n\n          for (k = 0, kl = uvs.length; k < kl; k++) {\n            var uv = uvs[k];\n            uvsCopy.push(uv.clone());\n          }\n\n          this.faceVertexUvs[i].push(uvsCopy);\n        }\n      } // morph targets\n\n\n      var morphTargets = source.morphTargets;\n\n      for (i = 0, il = morphTargets.length; i < il; i++) {\n        var morphTarget = {};\n        morphTarget.name = morphTargets[i].name; // vertices\n\n        if (morphTargets[i].vertices !== undefined) {\n          morphTarget.vertices = [];\n\n          for (j = 0, jl = morphTargets[i].vertices.length; j < jl; j++) {\n            morphTarget.vertices.push(morphTargets[i].vertices[j].clone());\n          }\n        } // normals\n\n\n        if (morphTargets[i].normals !== undefined) {\n          morphTarget.normals = [];\n\n          for (j = 0, jl = morphTargets[i].normals.length; j < jl; j++) {\n            morphTarget.normals.push(morphTargets[i].normals[j].clone());\n          }\n        }\n\n        this.morphTargets.push(morphTarget);\n      } // morph normals\n\n\n      var morphNormals = source.morphNormals;\n\n      for (i = 0, il = morphNormals.length; i < il; i++) {\n        var morphNormal = {}; // vertex normals\n\n        if (morphNormals[i].vertexNormals !== undefined) {\n          morphNormal.vertexNormals = [];\n\n          for (j = 0, jl = morphNormals[i].vertexNormals.length; j < jl; j++) {\n            var srcVertexNormal = morphNormals[i].vertexNormals[j];\n            var destVertexNormal = {};\n            destVertexNormal.a = srcVertexNormal.a.clone();\n            destVertexNormal.b = srcVertexNormal.b.clone();\n            destVertexNormal.c = srcVertexNormal.c.clone();\n            morphNormal.vertexNormals.push(destVertexNormal);\n          }\n        } // face normals\n\n\n        if (morphNormals[i].faceNormals !== undefined) {\n          morphNormal.faceNormals = [];\n\n          for (j = 0, jl = morphNormals[i].faceNormals.length; j < jl; j++) {\n            morphNormal.faceNormals.push(morphNormals[i].faceNormals[j].clone());\n          }\n        }\n\n        this.morphNormals.push(morphNormal);\n      } // skin weights\n\n\n      var skinWeights = source.skinWeights;\n\n      for (i = 0, il = skinWeights.length; i < il; i++) {\n        this.skinWeights.push(skinWeights[i].clone());\n      } // skin indices\n\n\n      var skinIndices = source.skinIndices;\n\n      for (i = 0, il = skinIndices.length; i < il; i++) {\n        this.skinIndices.push(skinIndices[i].clone());\n      } // line distances\n\n\n      var lineDistances = source.lineDistances;\n\n      for (i = 0, il = lineDistances.length; i < il; i++) {\n        this.lineDistances.push(lineDistances[i]);\n      } // bounding box\n\n\n      var boundingBox = source.boundingBox;\n\n      if (boundingBox !== null) {\n        this.boundingBox = boundingBox.clone();\n      } // bounding sphere\n\n\n      var boundingSphere = source.boundingSphere;\n\n      if (boundingSphere !== null) {\n        this.boundingSphere = boundingSphere.clone();\n      } // update flags\n\n\n      this.elementsNeedUpdate = source.elementsNeedUpdate;\n      this.verticesNeedUpdate = source.verticesNeedUpdate;\n      this.uvsNeedUpdate = source.uvsNeedUpdate;\n      this.normalsNeedUpdate = source.normalsNeedUpdate;\n      this.colorsNeedUpdate = source.colorsNeedUpdate;\n      this.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n      this.groupsNeedUpdate = source.groupsNeedUpdate;\n      return this;\n    },\n    dispose: function dispose() {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function BufferAttribute(array, itemSize, normalized) {\n    if (Array.isArray(array)) {\n      throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n    }\n\n    this.name = '';\n    this.array = array;\n    this.itemSize = itemSize;\n    this.count = array !== undefined ? array.length / itemSize : 0;\n    this.normalized = normalized === true;\n    this.dynamic = false;\n    this.updateRange = {\n      offset: 0,\n      count: -1\n    };\n    this.version = 0;\n  }\n\n  Object.defineProperty(BufferAttribute.prototype, 'needsUpdate', {\n    set: function set(value) {\n      if (value === true) this.version++;\n    }\n  });\n  Object.assign(BufferAttribute.prototype, {\n    isBufferAttribute: true,\n    onUploadCallback: function onUploadCallback() {},\n    setArray: function setArray(array) {\n      if (Array.isArray(array)) {\n        throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n      }\n\n      this.count = array !== undefined ? array.length / this.itemSize : 0;\n      this.array = array;\n      return this;\n    },\n    setDynamic: function setDynamic(value) {\n      this.dynamic = value;\n      return this;\n    },\n    copy: function copy(source) {\n      this.name = source.name;\n      this.array = new source.array.constructor(source.array);\n      this.itemSize = source.itemSize;\n      this.count = source.count;\n      this.normalized = source.normalized;\n      this.dynamic = source.dynamic;\n      return this;\n    },\n    copyAt: function copyAt(index1, attribute, index2) {\n      index1 *= this.itemSize;\n      index2 *= attribute.itemSize;\n\n      for (var i = 0, l = this.itemSize; i < l; i++) {\n        this.array[index1 + i] = attribute.array[index2 + i];\n      }\n\n      return this;\n    },\n    copyArray: function copyArray(array) {\n      this.array.set(array);\n      return this;\n    },\n    copyColorsArray: function copyColorsArray(colors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = colors.length; i < l; i++) {\n        var color = colors[i];\n\n        if (color === undefined) {\n          console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n          color = new Color();\n        }\n\n        array[offset++] = color.r;\n        array[offset++] = color.g;\n        array[offset++] = color.b;\n      }\n\n      return this;\n    },\n    copyVector2sArray: function copyVector2sArray(vectors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n          vector = new Vector2();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n      }\n\n      return this;\n    },\n    copyVector3sArray: function copyVector3sArray(vectors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n          vector = new Vector3();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n        array[offset++] = vector.z;\n      }\n\n      return this;\n    },\n    copyVector4sArray: function copyVector4sArray(vectors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n          vector = new Vector4();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n        array[offset++] = vector.z;\n        array[offset++] = vector.w;\n      }\n\n      return this;\n    },\n    set: function set(value, offset) {\n      if (offset === undefined) offset = 0;\n      this.array.set(value, offset);\n      return this;\n    },\n    getX: function getX(index) {\n      return this.array[index * this.itemSize];\n    },\n    setX: function setX(index, x) {\n      this.array[index * this.itemSize] = x;\n      return this;\n    },\n    getY: function getY(index) {\n      return this.array[index * this.itemSize + 1];\n    },\n    setY: function setY(index, y) {\n      this.array[index * this.itemSize + 1] = y;\n      return this;\n    },\n    getZ: function getZ(index) {\n      return this.array[index * this.itemSize + 2];\n    },\n    setZ: function setZ(index, z) {\n      this.array[index * this.itemSize + 2] = z;\n      return this;\n    },\n    getW: function getW(index) {\n      return this.array[index * this.itemSize + 3];\n    },\n    setW: function setW(index, w) {\n      this.array[index * this.itemSize + 3] = w;\n      return this;\n    },\n    setXY: function setXY(index, x, y) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      return this;\n    },\n    setXYZ: function setXYZ(index, x, y, z) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      this.array[index + 2] = z;\n      return this;\n    },\n    setXYZW: function setXYZW(index, x, y, z, w) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      this.array[index + 2] = z;\n      this.array[index + 3] = w;\n      return this;\n    },\n    onUpload: function onUpload(callback) {\n      this.onUploadCallback = callback;\n      return this;\n    },\n    clone: function clone() {\n      return new this.constructor(this.array, this.itemSize).copy(this);\n    }\n  }); //\n\n  function Int8BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Int8Array(array), itemSize, normalized);\n  }\n\n  Int8BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Int8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n  function Uint8BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Uint8Array(array), itemSize, normalized);\n  }\n\n  Uint8BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n  function Uint8ClampedBufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Uint8ClampedArray(array), itemSize, normalized);\n  }\n\n  Uint8ClampedBufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n  function Int16BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Int16Array(array), itemSize, normalized);\n  }\n\n  Int16BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Int16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n  function Uint16BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Uint16Array(array), itemSize, normalized);\n  }\n\n  Uint16BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n  function Int32BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Int32Array(array), itemSize, normalized);\n  }\n\n  Int32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Int32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n  function Uint32BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Uint32Array(array), itemSize, normalized);\n  }\n\n  Uint32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n  function Float32BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Float32Array(array), itemSize, normalized);\n  }\n\n  Float32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Float32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n  function Float64BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Float64Array(array), itemSize, normalized);\n  }\n\n  Float64BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Float64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function DirectGeometry() {\n    this.vertices = [];\n    this.normals = [];\n    this.colors = [];\n    this.uvs = [];\n    this.uvs2 = [];\n    this.groups = [];\n    this.morphTargets = {};\n    this.skinWeights = [];\n    this.skinIndices = []; // this.lineDistances = [];\n\n    this.boundingBox = null;\n    this.boundingSphere = null; // update flags\n\n    this.verticesNeedUpdate = false;\n    this.normalsNeedUpdate = false;\n    this.colorsNeedUpdate = false;\n    this.uvsNeedUpdate = false;\n    this.groupsNeedUpdate = false;\n  }\n\n  Object.assign(DirectGeometry.prototype, {\n    computeGroups: function computeGroups(geometry) {\n      var group;\n      var groups = [];\n      var materialIndex = undefined;\n      var faces = geometry.faces;\n\n      for (var i = 0; i < faces.length; i++) {\n        var face = faces[i]; // materials\n\n        if (face.materialIndex !== materialIndex) {\n          materialIndex = face.materialIndex;\n\n          if (group !== undefined) {\n            group.count = i * 3 - group.start;\n            groups.push(group);\n          }\n\n          group = {\n            start: i * 3,\n            materialIndex: materialIndex\n          };\n        }\n      }\n\n      if (group !== undefined) {\n        group.count = i * 3 - group.start;\n        groups.push(group);\n      }\n\n      this.groups = groups;\n    },\n    fromGeometry: function fromGeometry(geometry) {\n      var faces = geometry.faces;\n      var vertices = geometry.vertices;\n      var faceVertexUvs = geometry.faceVertexUvs;\n      var hasFaceVertexUv = faceVertexUvs[0] && faceVertexUvs[0].length > 0;\n      var hasFaceVertexUv2 = faceVertexUvs[1] && faceVertexUvs[1].length > 0; // morphs\n\n      var morphTargets = geometry.morphTargets;\n      var morphTargetsLength = morphTargets.length;\n      var morphTargetsPosition;\n\n      if (morphTargetsLength > 0) {\n        morphTargetsPosition = [];\n\n        for (var i = 0; i < morphTargetsLength; i++) {\n          morphTargetsPosition[i] = {\n            name: morphTargets[i].name,\n            data: []\n          };\n        }\n\n        this.morphTargets.position = morphTargetsPosition;\n      }\n\n      var morphNormals = geometry.morphNormals;\n      var morphNormalsLength = morphNormals.length;\n      var morphTargetsNormal;\n\n      if (morphNormalsLength > 0) {\n        morphTargetsNormal = [];\n\n        for (var i = 0; i < morphNormalsLength; i++) {\n          morphTargetsNormal[i] = {\n            name: morphNormals[i].name,\n            data: []\n          };\n        }\n\n        this.morphTargets.normal = morphTargetsNormal;\n      } // skins\n\n\n      var skinIndices = geometry.skinIndices;\n      var skinWeights = geometry.skinWeights;\n      var hasSkinIndices = skinIndices.length === vertices.length;\n      var hasSkinWeights = skinWeights.length === vertices.length; //\n\n      if (vertices.length > 0 && faces.length === 0) {\n        console.error('THREE.DirectGeometry: Faceless geometries are not supported.');\n      }\n\n      for (var i = 0; i < faces.length; i++) {\n        var face = faces[i];\n        this.vertices.push(vertices[face.a], vertices[face.b], vertices[face.c]);\n        var vertexNormals = face.vertexNormals;\n\n        if (vertexNormals.length === 3) {\n          this.normals.push(vertexNormals[0], vertexNormals[1], vertexNormals[2]);\n        } else {\n          var normal = face.normal;\n          this.normals.push(normal, normal, normal);\n        }\n\n        var vertexColors = face.vertexColors;\n\n        if (vertexColors.length === 3) {\n          this.colors.push(vertexColors[0], vertexColors[1], vertexColors[2]);\n        } else {\n          var color = face.color;\n          this.colors.push(color, color, color);\n        }\n\n        if (hasFaceVertexUv === true) {\n          var vertexUvs = faceVertexUvs[0][i];\n\n          if (vertexUvs !== undefined) {\n            this.uvs.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n          } else {\n            console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i);\n            this.uvs.push(new Vector2(), new Vector2(), new Vector2());\n          }\n        }\n\n        if (hasFaceVertexUv2 === true) {\n          var vertexUvs = faceVertexUvs[1][i];\n\n          if (vertexUvs !== undefined) {\n            this.uvs2.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n          } else {\n            console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i);\n            this.uvs2.push(new Vector2(), new Vector2(), new Vector2());\n          }\n        } // morphs\n\n\n        for (var j = 0; j < morphTargetsLength; j++) {\n          var morphTarget = morphTargets[j].vertices;\n          morphTargetsPosition[j].data.push(morphTarget[face.a], morphTarget[face.b], morphTarget[face.c]);\n        }\n\n        for (var j = 0; j < morphNormalsLength; j++) {\n          var morphNormal = morphNormals[j].vertexNormals[i];\n          morphTargetsNormal[j].data.push(morphNormal.a, morphNormal.b, morphNormal.c);\n        } // skins\n\n\n        if (hasSkinIndices) {\n          this.skinIndices.push(skinIndices[face.a], skinIndices[face.b], skinIndices[face.c]);\n        }\n\n        if (hasSkinWeights) {\n          this.skinWeights.push(skinWeights[face.a], skinWeights[face.b], skinWeights[face.c]);\n        }\n      }\n\n      this.computeGroups(geometry);\n      this.verticesNeedUpdate = geometry.verticesNeedUpdate;\n      this.normalsNeedUpdate = geometry.normalsNeedUpdate;\n      this.colorsNeedUpdate = geometry.colorsNeedUpdate;\n      this.uvsNeedUpdate = geometry.uvsNeedUpdate;\n      this.groupsNeedUpdate = geometry.groupsNeedUpdate;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function arrayMax(array) {\n    if (array.length === 0) return -Infinity;\n    var max = array[0];\n\n    for (var i = 1, l = array.length; i < l; ++i) {\n      if (array[i] > max) max = array[i];\n    }\n\n    return max;\n  }\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  var bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\n  function BufferGeometry() {\n    Object.defineProperty(this, 'id', {\n      value: bufferGeometryId += 2\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.type = 'BufferGeometry';\n    this.index = null;\n    this.attributes = {};\n    this.morphAttributes = {};\n    this.groups = [];\n    this.boundingBox = null;\n    this.boundingSphere = null;\n    this.drawRange = {\n      start: 0,\n      count: Infinity\n    };\n    this.userData = {};\n  }\n\n  BufferGeometry.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: BufferGeometry,\n    isBufferGeometry: true,\n    getIndex: function getIndex() {\n      return this.index;\n    },\n    setIndex: function setIndex(index) {\n      if (Array.isArray(index)) {\n        this.index = new (arrayMax(index) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\n      } else {\n        this.index = index;\n      }\n    },\n    addAttribute: function addAttribute(name, attribute) {\n      if (!(attribute && attribute.isBufferAttribute) && !(attribute && attribute.isInterleavedBufferAttribute)) {\n        console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n        return this.addAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\n      }\n\n      if (name === 'index') {\n        console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n        this.setIndex(attribute);\n        return this;\n      }\n\n      this.attributes[name] = attribute;\n      return this;\n    },\n    getAttribute: function getAttribute(name) {\n      return this.attributes[name];\n    },\n    removeAttribute: function removeAttribute(name) {\n      delete this.attributes[name];\n      return this;\n    },\n    addGroup: function addGroup(start, count, materialIndex) {\n      this.groups.push({\n        start: start,\n        count: count,\n        materialIndex: materialIndex !== undefined ? materialIndex : 0\n      });\n    },\n    clearGroups: function clearGroups() {\n      this.groups = [];\n    },\n    setDrawRange: function setDrawRange(start, count) {\n      this.drawRange.start = start;\n      this.drawRange.count = count;\n    },\n    applyMatrix: function applyMatrix(matrix) {\n      var position = this.attributes.position;\n\n      if (position !== undefined) {\n        matrix.applyToBufferAttribute(position);\n        position.needsUpdate = true;\n      }\n\n      var normal = this.attributes.normal;\n\n      if (normal !== undefined) {\n        var normalMatrix = new Matrix3().getNormalMatrix(matrix);\n        normalMatrix.applyToBufferAttribute(normal);\n        normal.needsUpdate = true;\n      }\n\n      if (this.boundingBox !== null) {\n        this.computeBoundingBox();\n      }\n\n      if (this.boundingSphere !== null) {\n        this.computeBoundingSphere();\n      }\n\n      return this;\n    },\n    rotateX: function () {\n      // rotate geometry around world x-axis\n      var m1 = new Matrix4();\n      return function rotateX(angle) {\n        m1.makeRotationX(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    rotateY: function () {\n      // rotate geometry around world y-axis\n      var m1 = new Matrix4();\n      return function rotateY(angle) {\n        m1.makeRotationY(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    rotateZ: function () {\n      // rotate geometry around world z-axis\n      var m1 = new Matrix4();\n      return function rotateZ(angle) {\n        m1.makeRotationZ(angle);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    translate: function () {\n      // translate geometry\n      var m1 = new Matrix4();\n      return function translate(x, y, z) {\n        m1.makeTranslation(x, y, z);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    scale: function () {\n      // scale geometry\n      var m1 = new Matrix4();\n      return function scale(x, y, z) {\n        m1.makeScale(x, y, z);\n        this.applyMatrix(m1);\n        return this;\n      };\n    }(),\n    lookAt: function () {\n      var obj = new Object3D();\n      return function lookAt(vector) {\n        obj.lookAt(vector);\n        obj.updateMatrix();\n        this.applyMatrix(obj.matrix);\n      };\n    }(),\n    center: function () {\n      var offset = new Vector3();\n      return function center() {\n        this.computeBoundingBox();\n        this.boundingBox.getCenter(offset).negate();\n        this.translate(offset.x, offset.y, offset.z);\n        return this;\n      };\n    }(),\n    setFromObject: function setFromObject(object) {\n      // console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n      var geometry = object.geometry;\n\n      if (object.isPoints || object.isLine) {\n        var positions = new Float32BufferAttribute(geometry.vertices.length * 3, 3);\n        var colors = new Float32BufferAttribute(geometry.colors.length * 3, 3);\n        this.addAttribute('position', positions.copyVector3sArray(geometry.vertices));\n        this.addAttribute('color', colors.copyColorsArray(geometry.colors));\n\n        if (geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length) {\n          var lineDistances = new Float32BufferAttribute(geometry.lineDistances.length, 1);\n          this.addAttribute('lineDistance', lineDistances.copyArray(geometry.lineDistances));\n        }\n\n        if (geometry.boundingSphere !== null) {\n          this.boundingSphere = geometry.boundingSphere.clone();\n        }\n\n        if (geometry.boundingBox !== null) {\n          this.boundingBox = geometry.boundingBox.clone();\n        }\n      } else if (object.isMesh) {\n        if (geometry && geometry.isGeometry) {\n          this.fromGeometry(geometry);\n        }\n      }\n\n      return this;\n    },\n    setFromPoints: function setFromPoints(points) {\n      var position = [];\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        var point = points[i];\n        position.push(point.x, point.y, point.z || 0);\n      }\n\n      this.addAttribute('position', new Float32BufferAttribute(position, 3));\n      return this;\n    },\n    updateFromObject: function updateFromObject(object) {\n      var geometry = object.geometry;\n\n      if (object.isMesh) {\n        var direct = geometry.__directGeometry;\n\n        if (geometry.elementsNeedUpdate === true) {\n          direct = undefined;\n          geometry.elementsNeedUpdate = false;\n        }\n\n        if (direct === undefined) {\n          return this.fromGeometry(geometry);\n        }\n\n        direct.verticesNeedUpdate = geometry.verticesNeedUpdate;\n        direct.normalsNeedUpdate = geometry.normalsNeedUpdate;\n        direct.colorsNeedUpdate = geometry.colorsNeedUpdate;\n        direct.uvsNeedUpdate = geometry.uvsNeedUpdate;\n        direct.groupsNeedUpdate = geometry.groupsNeedUpdate;\n        geometry.verticesNeedUpdate = false;\n        geometry.normalsNeedUpdate = false;\n        geometry.colorsNeedUpdate = false;\n        geometry.uvsNeedUpdate = false;\n        geometry.groupsNeedUpdate = false;\n        geometry = direct;\n      }\n\n      var attribute;\n\n      if (geometry.verticesNeedUpdate === true) {\n        attribute = this.attributes.position;\n\n        if (attribute !== undefined) {\n          attribute.copyVector3sArray(geometry.vertices);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.verticesNeedUpdate = false;\n      }\n\n      if (geometry.normalsNeedUpdate === true) {\n        attribute = this.attributes.normal;\n\n        if (attribute !== undefined) {\n          attribute.copyVector3sArray(geometry.normals);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.normalsNeedUpdate = false;\n      }\n\n      if (geometry.colorsNeedUpdate === true) {\n        attribute = this.attributes.color;\n\n        if (attribute !== undefined) {\n          attribute.copyColorsArray(geometry.colors);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.colorsNeedUpdate = false;\n      }\n\n      if (geometry.uvsNeedUpdate) {\n        attribute = this.attributes.uv;\n\n        if (attribute !== undefined) {\n          attribute.copyVector2sArray(geometry.uvs);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.uvsNeedUpdate = false;\n      }\n\n      if (geometry.lineDistancesNeedUpdate) {\n        attribute = this.attributes.lineDistance;\n\n        if (attribute !== undefined) {\n          attribute.copyArray(geometry.lineDistances);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.lineDistancesNeedUpdate = false;\n      }\n\n      if (geometry.groupsNeedUpdate) {\n        geometry.computeGroups(object.geometry);\n        this.groups = geometry.groups;\n        geometry.groupsNeedUpdate = false;\n      }\n\n      return this;\n    },\n    fromGeometry: function fromGeometry(geometry) {\n      geometry.__directGeometry = new DirectGeometry().fromGeometry(geometry);\n      return this.fromDirectGeometry(geometry.__directGeometry);\n    },\n    fromDirectGeometry: function fromDirectGeometry(geometry) {\n      var positions = new Float32Array(geometry.vertices.length * 3);\n      this.addAttribute('position', new BufferAttribute(positions, 3).copyVector3sArray(geometry.vertices));\n\n      if (geometry.normals.length > 0) {\n        var normals = new Float32Array(geometry.normals.length * 3);\n        this.addAttribute('normal', new BufferAttribute(normals, 3).copyVector3sArray(geometry.normals));\n      }\n\n      if (geometry.colors.length > 0) {\n        var colors = new Float32Array(geometry.colors.length * 3);\n        this.addAttribute('color', new BufferAttribute(colors, 3).copyColorsArray(geometry.colors));\n      }\n\n      if (geometry.uvs.length > 0) {\n        var uvs = new Float32Array(geometry.uvs.length * 2);\n        this.addAttribute('uv', new BufferAttribute(uvs, 2).copyVector2sArray(geometry.uvs));\n      }\n\n      if (geometry.uvs2.length > 0) {\n        var uvs2 = new Float32Array(geometry.uvs2.length * 2);\n        this.addAttribute('uv2', new BufferAttribute(uvs2, 2).copyVector2sArray(geometry.uvs2));\n      } // groups\n\n\n      this.groups = geometry.groups; // morphs\n\n      for (var name in geometry.morphTargets) {\n        var array = [];\n        var morphTargets = geometry.morphTargets[name];\n\n        for (var i = 0, l = morphTargets.length; i < l; i++) {\n          var morphTarget = morphTargets[i];\n          var attribute = new Float32BufferAttribute(morphTarget.data.length * 3, 3);\n          attribute.name = morphTarget.name;\n          array.push(attribute.copyVector3sArray(morphTarget.data));\n        }\n\n        this.morphAttributes[name] = array;\n      } // skinning\n\n\n      if (geometry.skinIndices.length > 0) {\n        var skinIndices = new Float32BufferAttribute(geometry.skinIndices.length * 4, 4);\n        this.addAttribute('skinIndex', skinIndices.copyVector4sArray(geometry.skinIndices));\n      }\n\n      if (geometry.skinWeights.length > 0) {\n        var skinWeights = new Float32BufferAttribute(geometry.skinWeights.length * 4, 4);\n        this.addAttribute('skinWeight', skinWeights.copyVector4sArray(geometry.skinWeights));\n      } //\n\n\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n\n      return this;\n    },\n    computeBoundingBox: function computeBoundingBox() {\n      if (this.boundingBox === null) {\n        this.boundingBox = new Box3();\n      }\n\n      var position = this.attributes.position;\n\n      if (position !== undefined) {\n        this.boundingBox.setFromBufferAttribute(position);\n      } else {\n        this.boundingBox.makeEmpty();\n      }\n\n      if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n        console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n      }\n    },\n    computeBoundingSphere: function () {\n      var box = new Box3();\n      var vector = new Vector3();\n      return function computeBoundingSphere() {\n        if (this.boundingSphere === null) {\n          this.boundingSphere = new Sphere();\n        }\n\n        var position = this.attributes.position;\n\n        if (position) {\n          var center = this.boundingSphere.center;\n          box.setFromBufferAttribute(position);\n          box.getCenter(center); // hoping to find a boundingSphere with a radius smaller than the\n          // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n          var maxRadiusSq = 0;\n\n          for (var i = 0, il = position.count; i < il; i++) {\n            vector.x = position.getX(i);\n            vector.y = position.getY(i);\n            vector.z = position.getZ(i);\n            maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(vector));\n          }\n\n          this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n          if (isNaN(this.boundingSphere.radius)) {\n            console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n          }\n        }\n      };\n    }(),\n    computeFaceNormals: function computeFaceNormals() {// backwards compatibility\n    },\n    computeVertexNormals: function computeVertexNormals() {\n      var index = this.index;\n      var attributes = this.attributes;\n\n      if (attributes.position) {\n        var positions = attributes.position.array;\n\n        if (attributes.normal === undefined) {\n          this.addAttribute('normal', new BufferAttribute(new Float32Array(positions.length), 3));\n        } else {\n          // reset existing normals to zero\n          var array = attributes.normal.array;\n\n          for (var i = 0, il = array.length; i < il; i++) {\n            array[i] = 0;\n          }\n        }\n\n        var normals = attributes.normal.array;\n        var vA, vB, vC;\n        var pA = new Vector3(),\n            pB = new Vector3(),\n            pC = new Vector3();\n        var cb = new Vector3(),\n            ab = new Vector3(); // indexed elements\n\n        if (index) {\n          var indices = index.array;\n\n          for (var i = 0, il = index.count; i < il; i += 3) {\n            vA = indices[i + 0] * 3;\n            vB = indices[i + 1] * 3;\n            vC = indices[i + 2] * 3;\n            pA.fromArray(positions, vA);\n            pB.fromArray(positions, vB);\n            pC.fromArray(positions, vC);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normals[vA] += cb.x;\n            normals[vA + 1] += cb.y;\n            normals[vA + 2] += cb.z;\n            normals[vB] += cb.x;\n            normals[vB + 1] += cb.y;\n            normals[vB + 2] += cb.z;\n            normals[vC] += cb.x;\n            normals[vC + 1] += cb.y;\n            normals[vC + 2] += cb.z;\n          }\n        } else {\n          // non-indexed elements (unconnected triangle soup)\n          for (var i = 0, il = positions.length; i < il; i += 9) {\n            pA.fromArray(positions, i);\n            pB.fromArray(positions, i + 3);\n            pC.fromArray(positions, i + 6);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normals[i] = cb.x;\n            normals[i + 1] = cb.y;\n            normals[i + 2] = cb.z;\n            normals[i + 3] = cb.x;\n            normals[i + 4] = cb.y;\n            normals[i + 5] = cb.z;\n            normals[i + 6] = cb.x;\n            normals[i + 7] = cb.y;\n            normals[i + 8] = cb.z;\n          }\n        }\n\n        this.normalizeNormals();\n        attributes.normal.needsUpdate = true;\n      }\n    },\n    merge: function merge(geometry, offset) {\n      if (!(geometry && geometry.isBufferGeometry)) {\n        console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n        return;\n      }\n\n      if (offset === undefined) {\n        offset = 0;\n        console.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. ' + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');\n      }\n\n      var attributes = this.attributes;\n\n      for (var key in attributes) {\n        if (geometry.attributes[key] === undefined) continue;\n        var attribute1 = attributes[key];\n        var attributeArray1 = attribute1.array;\n        var attribute2 = geometry.attributes[key];\n        var attributeArray2 = attribute2.array;\n        var attributeSize = attribute2.itemSize;\n\n        for (var i = 0, j = attributeSize * offset; i < attributeArray2.length; i++, j++) {\n          attributeArray1[j] = attributeArray2[i];\n        }\n      }\n\n      return this;\n    },\n    normalizeNormals: function () {\n      var vector = new Vector3();\n      return function normalizeNormals() {\n        var normals = this.attributes.normal;\n\n        for (var i = 0, il = normals.count; i < il; i++) {\n          vector.x = normals.getX(i);\n          vector.y = normals.getY(i);\n          vector.z = normals.getZ(i);\n          vector.normalize();\n          normals.setXYZ(i, vector.x, vector.y, vector.z);\n        }\n      };\n    }(),\n    toNonIndexed: function toNonIndexed() {\n      if (this.index === null) {\n        console.warn('THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.');\n        return this;\n      }\n\n      var geometry2 = new BufferGeometry();\n      var indices = this.index.array;\n      var attributes = this.attributes;\n\n      for (var name in attributes) {\n        var attribute = attributes[name];\n        var array = attribute.array;\n        var itemSize = attribute.itemSize;\n        var array2 = new array.constructor(indices.length * itemSize);\n        var index = 0,\n            index2 = 0;\n\n        for (var i = 0, l = indices.length; i < l; i++) {\n          index = indices[i] * itemSize;\n\n          for (var j = 0; j < itemSize; j++) {\n            array2[index2++] = array[index++];\n          }\n        }\n\n        geometry2.addAttribute(name, new BufferAttribute(array2, itemSize));\n      }\n\n      var groups = this.groups;\n\n      for (var i = 0, l = groups.length; i < l; i++) {\n        var group = groups[i];\n        geometry2.addGroup(group.start, group.count, group.materialIndex);\n      }\n\n      return geometry2;\n    },\n    toJSON: function toJSON() {\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'BufferGeometry',\n          generator: 'BufferGeometry.toJSON'\n        }\n      }; // standard BufferGeometry serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n      if (this.name !== '') data.name = this.name;\n      if (Object.keys(this.userData).length > 0) data.userData = this.userData;\n\n      if (this.parameters !== undefined) {\n        var parameters = this.parameters;\n\n        for (var key in parameters) {\n          if (parameters[key] !== undefined) data[key] = parameters[key];\n        }\n\n        return data;\n      }\n\n      data.data = {\n        attributes: {}\n      };\n      var index = this.index;\n\n      if (index !== null) {\n        var array = Array.prototype.slice.call(index.array);\n        data.data.index = {\n          type: index.array.constructor.name,\n          array: array\n        };\n      }\n\n      var attributes = this.attributes;\n\n      for (var key in attributes) {\n        var attribute = attributes[key];\n        var array = Array.prototype.slice.call(attribute.array);\n        data.data.attributes[key] = {\n          itemSize: attribute.itemSize,\n          type: attribute.array.constructor.name,\n          array: array,\n          normalized: attribute.normalized\n        };\n      }\n\n      var groups = this.groups;\n\n      if (groups.length > 0) {\n        data.data.groups = JSON.parse(JSON.stringify(groups));\n      }\n\n      var boundingSphere = this.boundingSphere;\n\n      if (boundingSphere !== null) {\n        data.data.boundingSphere = {\n          center: boundingSphere.center.toArray(),\n          radius: boundingSphere.radius\n        };\n      }\n\n      return data;\n    },\n    clone: function clone() {\n      /*\n       // Handle primitives\n      \t var parameters = this.parameters;\n      \t if ( parameters !== undefined ) {\n      \t var values = [];\n      \t for ( var key in parameters ) {\n      \t values.push( parameters[ key ] );\n      \t }\n      \t var geometry = Object.create( this.constructor.prototype );\n       this.constructor.apply( geometry, values );\n       return geometry;\n      \t }\n      \t return new this.constructor().copy( this );\n       */\n      return new BufferGeometry().copy(this);\n    },\n    copy: function copy(source) {\n      var name, i, l; // reset\n\n      this.index = null;\n      this.attributes = {};\n      this.morphAttributes = {};\n      this.groups = [];\n      this.boundingBox = null;\n      this.boundingSphere = null; // name\n\n      this.name = source.name; // index\n\n      var index = source.index;\n\n      if (index !== null) {\n        this.setIndex(index.clone());\n      } // attributes\n\n\n      var attributes = source.attributes;\n\n      for (name in attributes) {\n        var attribute = attributes[name];\n        this.addAttribute(name, attribute.clone());\n      } // morph attributes\n\n\n      var morphAttributes = source.morphAttributes;\n\n      for (name in morphAttributes) {\n        var array = [];\n        var morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n        for (i = 0, l = morphAttribute.length; i < l; i++) {\n          array.push(morphAttribute[i].clone());\n        }\n\n        this.morphAttributes[name] = array;\n      } // groups\n\n\n      var groups = source.groups;\n\n      for (i = 0, l = groups.length; i < l; i++) {\n        var group = groups[i];\n        this.addGroup(group.start, group.count, group.materialIndex);\n      } // bounding box\n\n\n      var boundingBox = source.boundingBox;\n\n      if (boundingBox !== null) {\n        this.boundingBox = boundingBox.clone();\n      } // bounding sphere\n\n\n      var boundingSphere = source.boundingSphere;\n\n      if (boundingSphere !== null) {\n        this.boundingSphere = boundingSphere.clone();\n      } // draw range\n\n\n      this.drawRange.start = source.drawRange.start;\n      this.drawRange.count = source.drawRange.count; // user data\n\n      this.userData = source.userData;\n      return this;\n    },\n    dispose: function dispose() {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // BoxGeometry\n\n  function BoxGeometry(width, height, depth, widthSegments, heightSegments, depthSegments) {\n    Geometry.call(this);\n    this.type = 'BoxGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      depth: depth,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      depthSegments: depthSegments\n    };\n    this.fromBufferGeometry(new BoxBufferGeometry(width, height, depth, widthSegments, heightSegments, depthSegments));\n    this.mergeVertices();\n  }\n\n  BoxGeometry.prototype = Object.create(Geometry.prototype);\n  BoxGeometry.prototype.constructor = BoxGeometry; // BoxBufferGeometry\n\n  function BoxBufferGeometry(width, height, depth, widthSegments, heightSegments, depthSegments) {\n    BufferGeometry.call(this);\n    this.type = 'BoxBufferGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      depth: depth,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      depthSegments: depthSegments\n    };\n    var scope = this;\n    width = width || 1;\n    height = height || 1;\n    depth = depth || 1; // segments\n\n    widthSegments = Math.floor(widthSegments) || 1;\n    heightSegments = Math.floor(heightSegments) || 1;\n    depthSegments = Math.floor(depthSegments) || 1; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var numberOfVertices = 0;\n    var groupStart = 0; // build each side of the box geometry\n\n    buildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n    buildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n    buildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n    buildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n    buildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n    buildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n    // build geometry\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n      var segmentWidth = width / gridX;\n      var segmentHeight = height / gridY;\n      var widthHalf = width / 2;\n      var heightHalf = height / 2;\n      var depthHalf = depth / 2;\n      var gridX1 = gridX + 1;\n      var gridY1 = gridY + 1;\n      var vertexCounter = 0;\n      var groupCount = 0;\n      var ix, iy;\n      var vector = new Vector3(); // generate vertices, normals and uvs\n\n      for (iy = 0; iy < gridY1; iy++) {\n        var y = iy * segmentHeight - heightHalf;\n\n        for (ix = 0; ix < gridX1; ix++) {\n          var x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n          vector[u] = x * udir;\n          vector[v] = y * vdir;\n          vector[w] = depthHalf; // now apply vector to vertex buffer\n\n          vertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\n\n          vector[u] = 0;\n          vector[v] = 0;\n          vector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n          normals.push(vector.x, vector.y, vector.z); // uvs\n\n          uvs.push(ix / gridX);\n          uvs.push(1 - iy / gridY); // counters\n\n          vertexCounter += 1;\n        }\n      } // indices\n      // 1. you need three indices to draw a single face\n      // 2. a single segment consists of two faces\n      // 3. so we need to generate six (2*3) indices per segment\n\n\n      for (iy = 0; iy < gridY; iy++) {\n        for (ix = 0; ix < gridX; ix++) {\n          var a = numberOfVertices + ix + gridX1 * iy;\n          var b = numberOfVertices + ix + gridX1 * (iy + 1);\n          var c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n          var d = numberOfVertices + (ix + 1) + gridX1 * iy; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d); // increase counter\n\n          groupCount += 6;\n        }\n      } // add a group to the geometry. this will ensure multi material support\n\n\n      scope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n      groupStart += groupCount; // update total number of vertices\n\n      numberOfVertices += vertexCounter;\n    }\n  }\n\n  BoxBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  BoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // PlaneGeometry\n\n  function PlaneGeometry(width, height, widthSegments, heightSegments) {\n    Geometry.call(this);\n    this.type = 'PlaneGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments\n    };\n    this.fromBufferGeometry(new PlaneBufferGeometry(width, height, widthSegments, heightSegments));\n    this.mergeVertices();\n  }\n\n  PlaneGeometry.prototype = Object.create(Geometry.prototype);\n  PlaneGeometry.prototype.constructor = PlaneGeometry; // PlaneBufferGeometry\n\n  function PlaneBufferGeometry(width, height, widthSegments, heightSegments) {\n    BufferGeometry.call(this);\n    this.type = 'PlaneBufferGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments\n    };\n    width = width || 1;\n    height = height || 1;\n    var width_half = width / 2;\n    var height_half = height / 2;\n    var gridX = Math.floor(widthSegments) || 1;\n    var gridY = Math.floor(heightSegments) || 1;\n    var gridX1 = gridX + 1;\n    var gridY1 = gridY + 1;\n    var segment_width = width / gridX;\n    var segment_height = height / gridY;\n    var ix, iy; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // generate vertices, normals and uvs\n\n    for (iy = 0; iy < gridY1; iy++) {\n      var y = iy * segment_height - height_half;\n\n      for (ix = 0; ix < gridX1; ix++) {\n        var x = ix * segment_width - width_half;\n        vertices.push(x, -y, 0);\n        normals.push(0, 0, 1);\n        uvs.push(ix / gridX);\n        uvs.push(1 - iy / gridY);\n      }\n    } // indices\n\n\n    for (iy = 0; iy < gridY; iy++) {\n      for (ix = 0; ix < gridX; ix++) {\n        var a = ix + gridX1 * iy;\n        var b = ix + gridX1 * (iy + 1);\n        var c = ix + 1 + gridX1 * (iy + 1);\n        var d = ix + 1 + gridX1 * iy; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  PlaneBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  PlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  var materialId = 0;\n\n  function Material() {\n    Object.defineProperty(this, 'id', {\n      value: materialId++\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.type = 'Material';\n    this.fog = true;\n    this.lights = true;\n    this.blending = NormalBlending;\n    this.side = FrontSide;\n    this.flatShading = false;\n    this.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n    this.opacity = 1;\n    this.transparent = false;\n    this.blendSrc = SrcAlphaFactor;\n    this.blendDst = OneMinusSrcAlphaFactor;\n    this.blendEquation = AddEquation;\n    this.blendSrcAlpha = null;\n    this.blendDstAlpha = null;\n    this.blendEquationAlpha = null;\n    this.depthFunc = LessEqualDepth;\n    this.depthTest = true;\n    this.depthWrite = true;\n    this.clippingPlanes = null;\n    this.clipIntersection = false;\n    this.clipShadows = false;\n    this.shadowSide = null;\n    this.colorWrite = true;\n    this.precision = null; // override the renderer's default precision for this material\n\n    this.polygonOffset = false;\n    this.polygonOffsetFactor = 0;\n    this.polygonOffsetUnits = 0;\n    this.dithering = false;\n    this.alphaTest = 0;\n    this.premultipliedAlpha = false;\n    this.visible = true;\n    this.userData = {};\n    this.needsUpdate = true;\n  }\n\n  Material.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: Material,\n    isMaterial: true,\n    onBeforeCompile: function onBeforeCompile() {},\n    setValues: function setValues(values) {\n      if (values === undefined) return;\n\n      for (var key in values) {\n        var newValue = values[key];\n\n        if (newValue === undefined) {\n          console.warn(\"THREE.Material: '\" + key + \"' parameter is undefined.\");\n          continue;\n        } // for backward compatability if shading is set in the constructor\n\n\n        if (key === 'shading') {\n          console.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n          this.flatShading = newValue === FlatShading ? true : false;\n          continue;\n        }\n\n        var currentValue = this[key];\n\n        if (currentValue === undefined) {\n          console.warn(\"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\");\n          continue;\n        }\n\n        if (currentValue && currentValue.isColor) {\n          currentValue.set(newValue);\n        } else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n          currentValue.copy(newValue);\n        } else {\n          this[key] = newValue;\n        }\n      }\n    },\n    toJSON: function toJSON(meta) {\n      var isRoot = meta === undefined || typeof meta === 'string';\n\n      if (isRoot) {\n        meta = {\n          textures: {},\n          images: {}\n        };\n      }\n\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'Material',\n          generator: 'Material.toJSON'\n        }\n      }; // standard Material serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n      if (this.name !== '') data.name = this.name;\n      if (this.color && this.color.isColor) data.color = this.color.getHex();\n      if (this.roughness !== undefined) data.roughness = this.roughness;\n      if (this.metalness !== undefined) data.metalness = this.metalness;\n      if (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n      if (this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\n      if (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n      if (this.shininess !== undefined) data.shininess = this.shininess;\n      if (this.clearCoat !== undefined) data.clearCoat = this.clearCoat;\n      if (this.clearCoatRoughness !== undefined) data.clearCoatRoughness = this.clearCoatRoughness;\n      if (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n      if (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n      if (this.lightMap && this.lightMap.isTexture) data.lightMap = this.lightMap.toJSON(meta).uuid;\n\n      if (this.aoMap && this.aoMap.isTexture) {\n        data.aoMap = this.aoMap.toJSON(meta).uuid;\n        data.aoMapIntensity = this.aoMapIntensity;\n      }\n\n      if (this.bumpMap && this.bumpMap.isTexture) {\n        data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n        data.bumpScale = this.bumpScale;\n      }\n\n      if (this.normalMap && this.normalMap.isTexture) {\n        data.normalMap = this.normalMap.toJSON(meta).uuid;\n        data.normalMapType = this.normalMapType;\n        data.normalScale = this.normalScale.toArray();\n      }\n\n      if (this.displacementMap && this.displacementMap.isTexture) {\n        data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n        data.displacementScale = this.displacementScale;\n        data.displacementBias = this.displacementBias;\n      }\n\n      if (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n      if (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n      if (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n      if (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\n      if (this.envMap && this.envMap.isTexture) {\n        data.envMap = this.envMap.toJSON(meta).uuid;\n        data.reflectivity = this.reflectivity; // Scale behind envMap\n\n        if (this.combine !== undefined) data.combine = this.combine;\n        if (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\n      }\n\n      if (this.gradientMap && this.gradientMap.isTexture) {\n        data.gradientMap = this.gradientMap.toJSON(meta).uuid;\n      }\n\n      if (this.size !== undefined) data.size = this.size;\n      if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n      if (this.blending !== NormalBlending) data.blending = this.blending;\n      if (this.flatShading === true) data.flatShading = this.flatShading;\n      if (this.side !== FrontSide) data.side = this.side;\n      if (this.vertexColors !== NoColors) data.vertexColors = this.vertexColors;\n      if (this.opacity < 1) data.opacity = this.opacity;\n      if (this.transparent === true) data.transparent = this.transparent;\n      data.depthFunc = this.depthFunc;\n      data.depthTest = this.depthTest;\n      data.depthWrite = this.depthWrite; // rotation (SpriteMaterial)\n\n      if (this.rotation !== 0) data.rotation = this.rotation;\n      if (this.polygonOffset === true) data.polygonOffset = true;\n      if (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\n      if (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\n      if (this.linewidth !== 1) data.linewidth = this.linewidth;\n      if (this.dashSize !== undefined) data.dashSize = this.dashSize;\n      if (this.gapSize !== undefined) data.gapSize = this.gapSize;\n      if (this.scale !== undefined) data.scale = this.scale;\n      if (this.dithering === true) data.dithering = true;\n      if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n      if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n      if (this.wireframe === true) data.wireframe = this.wireframe;\n      if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n      if (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n      if (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n      if (this.morphTargets === true) data.morphTargets = true;\n      if (this.skinning === true) data.skinning = true;\n      if (this.visible === false) data.visible = false;\n      if (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\n\n      function extractFromCache(cache) {\n        var values = [];\n\n        for (var key in cache) {\n          var data = cache[key];\n          delete data.metadata;\n          values.push(data);\n        }\n\n        return values;\n      }\n\n      if (isRoot) {\n        var textures = extractFromCache(meta.textures);\n        var images = extractFromCache(meta.images);\n        if (textures.length > 0) data.textures = textures;\n        if (images.length > 0) data.images = images;\n      }\n\n      return data;\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    copy: function copy(source) {\n      this.name = source.name;\n      this.fog = source.fog;\n      this.lights = source.lights;\n      this.blending = source.blending;\n      this.side = source.side;\n      this.flatShading = source.flatShading;\n      this.vertexColors = source.vertexColors;\n      this.opacity = source.opacity;\n      this.transparent = source.transparent;\n      this.blendSrc = source.blendSrc;\n      this.blendDst = source.blendDst;\n      this.blendEquation = source.blendEquation;\n      this.blendSrcAlpha = source.blendSrcAlpha;\n      this.blendDstAlpha = source.blendDstAlpha;\n      this.blendEquationAlpha = source.blendEquationAlpha;\n      this.depthFunc = source.depthFunc;\n      this.depthTest = source.depthTest;\n      this.depthWrite = source.depthWrite;\n      this.colorWrite = source.colorWrite;\n      this.precision = source.precision;\n      this.polygonOffset = source.polygonOffset;\n      this.polygonOffsetFactor = source.polygonOffsetFactor;\n      this.polygonOffsetUnits = source.polygonOffsetUnits;\n      this.dithering = source.dithering;\n      this.alphaTest = source.alphaTest;\n      this.premultipliedAlpha = source.premultipliedAlpha;\n      this.visible = source.visible;\n      this.userData = JSON.parse(JSON.stringify(source.userData));\n      this.clipShadows = source.clipShadows;\n      this.clipIntersection = source.clipIntersection;\n      var srcPlanes = source.clippingPlanes,\n          dstPlanes = null;\n\n      if (srcPlanes !== null) {\n        var n = srcPlanes.length;\n        dstPlanes = new Array(n);\n\n        for (var i = 0; i !== n; ++i) {\n          dstPlanes[i] = srcPlanes[i].clone();\n        }\n      }\n\n      this.clippingPlanes = dstPlanes;\n      this.shadowSide = source.shadowSide;\n      return this;\n    },\n    dispose: function dispose() {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  defines: { \"label\" : \"value\" },\n   *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n   *\n   *  fragmentShader: <string>,\n   *  vertexShader: <string>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  lights: <bool>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n  function ShaderMaterial(parameters) {\n    Material.call(this);\n    this.type = 'ShaderMaterial';\n    this.defines = {};\n    this.uniforms = {};\n    this.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n    this.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n    this.linewidth = 1;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false; // set to use scene fog\n\n    this.lights = false; // set to use scene lights\n\n    this.clipping = false; // set to use user-defined clipping planes\n\n    this.skinning = false; // set to use skinning attribute streams\n\n    this.morphTargets = false; // set to use morph targets\n\n    this.morphNormals = false; // set to use morph normals\n\n    this.extensions = {\n      derivatives: false,\n      // set to use derivatives\n      fragDepth: false,\n      // set to use fragment depth values\n      drawBuffers: false,\n      // set to use draw buffers\n      shaderTextureLOD: false // set to use shader texture LOD\n\n    }; // When rendered geometry doesn't include these attributes but the material does,\n    // use these default values in WebGL. This avoids errors when buffer data is missing.\n\n    this.defaultAttributeValues = {\n      'color': [1, 1, 1],\n      'uv': [0, 0],\n      'uv2': [0, 0]\n    };\n    this.index0AttributeName = undefined;\n    this.uniformsNeedUpdate = false;\n\n    if (parameters !== undefined) {\n      if (parameters.attributes !== undefined) {\n        console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n      }\n\n      this.setValues(parameters);\n    }\n  }\n\n  ShaderMaterial.prototype = Object.create(Material.prototype);\n  ShaderMaterial.prototype.constructor = ShaderMaterial;\n  ShaderMaterial.prototype.isShaderMaterial = true;\n\n  ShaderMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.fragmentShader = source.fragmentShader;\n    this.vertexShader = source.vertexShader;\n    this.uniforms = cloneUniforms(source.uniforms);\n    this.defines = Object.assign({}, source.defines);\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.lights = source.lights;\n    this.clipping = source.clipping;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    this.extensions = source.extensions;\n    return this;\n  };\n\n  ShaderMaterial.prototype.toJSON = function (meta) {\n    var data = Material.prototype.toJSON.call(this, meta);\n    data.uniforms = {};\n\n    for (var name in this.uniforms) {\n      var uniform = this.uniforms[name];\n      var value = uniform.value;\n\n      if (value && value.isTexture) {\n        data.uniforms[name] = {\n          type: 't',\n          value: value.toJSON(meta).uuid\n        };\n      } else if (value && value.isColor) {\n        data.uniforms[name] = {\n          type: 'c',\n          value: value.getHex()\n        };\n      } else if (value && value.isVector2) {\n        data.uniforms[name] = {\n          type: 'v2',\n          value: value.toArray()\n        };\n      } else if (value && value.isVector3) {\n        data.uniforms[name] = {\n          type: 'v3',\n          value: value.toArray()\n        };\n      } else if (value && value.isVector4) {\n        data.uniforms[name] = {\n          type: 'v4',\n          value: value.toArray()\n        };\n      } else if (value && value.isMatrix4) {\n        data.uniforms[name] = {\n          type: 'm4',\n          value: value.toArray()\n        };\n      } else {\n        data.uniforms[name] = {\n          value: value\n        }; // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n      }\n    }\n\n    if (Object.keys(this.defines).length > 0) data.defines = this.defines;\n    data.vertexShader = this.vertexShader;\n    data.fragmentShader = this.fragmentShader;\n    var extensions = {};\n\n    for (var key in this.extensions) {\n      if (this.extensions[key] === true) extensions[key] = true;\n    }\n\n    if (Object.keys(extensions).length > 0) data.extensions = extensions;\n    return data;\n  };\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n\n  function Ray(origin, direction) {\n    this.origin = origin !== undefined ? origin : new Vector3();\n    this.direction = direction !== undefined ? direction : new Vector3();\n  }\n\n  Object.assign(Ray.prototype, {\n    set: function set(origin, direction) {\n      this.origin.copy(origin);\n      this.direction.copy(direction);\n      return this;\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    copy: function copy(ray) {\n      this.origin.copy(ray.origin);\n      this.direction.copy(ray.direction);\n      return this;\n    },\n    at: function at(t, target) {\n      if (target === undefined) {\n        console.warn('THREE.Ray: .at() target is now required');\n        target = new Vector3();\n      }\n\n      return target.copy(this.direction).multiplyScalar(t).add(this.origin);\n    },\n    lookAt: function lookAt(v) {\n      this.direction.copy(v).sub(this.origin).normalize();\n      return this;\n    },\n    recast: function () {\n      var v1 = new Vector3();\n      return function recast(t) {\n        this.origin.copy(this.at(t, v1));\n        return this;\n      };\n    }(),\n    closestPointToPoint: function closestPointToPoint(point, target) {\n      if (target === undefined) {\n        console.warn('THREE.Ray: .closestPointToPoint() target is now required');\n        target = new Vector3();\n      }\n\n      target.subVectors(point, this.origin);\n      var directionDistance = target.dot(this.direction);\n\n      if (directionDistance < 0) {\n        return target.copy(this.origin);\n      }\n\n      return target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n    },\n    distanceToPoint: function distanceToPoint(point) {\n      return Math.sqrt(this.distanceSqToPoint(point));\n    },\n    distanceSqToPoint: function () {\n      var v1 = new Vector3();\n      return function distanceSqToPoint(point) {\n        var directionDistance = v1.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n        if (directionDistance < 0) {\n          return this.origin.distanceToSquared(point);\n        }\n\n        v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n        return v1.distanceToSquared(point);\n      };\n    }(),\n    distanceSqToSegment: function () {\n      var segCenter = new Vector3();\n      var segDir = new Vector3();\n      var diff = new Vector3();\n      return function distanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n        // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n        // It returns the min distance between the ray and the segment\n        // defined by v0 and v1\n        // It can also set two optional targets :\n        // - The closest point on the ray\n        // - The closest point on the segment\n        segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n        segDir.copy(v1).sub(v0).normalize();\n        diff.copy(this.origin).sub(segCenter);\n        var segExtent = v0.distanceTo(v1) * 0.5;\n        var a01 = -this.direction.dot(segDir);\n        var b0 = diff.dot(this.direction);\n        var b1 = -diff.dot(segDir);\n        var c = diff.lengthSq();\n        var det = Math.abs(1 - a01 * a01);\n        var s0, s1, sqrDist, extDet;\n\n        if (det > 0) {\n          // The ray and segment are not parallel.\n          s0 = a01 * b1 - b0;\n          s1 = a01 * b0 - b1;\n          extDet = segExtent * det;\n\n          if (s0 >= 0) {\n            if (s1 >= -extDet) {\n              if (s1 <= extDet) {\n                // region 0\n                // Minimum at interior points of ray and segment.\n                var invDet = 1 / det;\n                s0 *= invDet;\n                s1 *= invDet;\n                sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n              } else {\n                // region 1\n                s1 = segExtent;\n                s0 = Math.max(0, -(a01 * s1 + b0));\n                sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n              }\n            } else {\n              // region 5\n              s1 = -segExtent;\n              s0 = Math.max(0, -(a01 * s1 + b0));\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          } else {\n            if (s1 <= -extDet) {\n              // region 4\n              s0 = Math.max(0, -(-a01 * segExtent + b0));\n              s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            } else if (s1 <= extDet) {\n              // region 3\n              s0 = 0;\n              s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n              sqrDist = s1 * (s1 + 2 * b1) + c;\n            } else {\n              // region 2\n              s0 = Math.max(0, -(a01 * segExtent + b0));\n              s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          }\n        } else {\n          // Ray and segment are parallel.\n          s1 = a01 > 0 ? -segExtent : segExtent;\n          s0 = Math.max(0, -(a01 * s1 + b0));\n          sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n        }\n\n        if (optionalPointOnRay) {\n          optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n        }\n\n        if (optionalPointOnSegment) {\n          optionalPointOnSegment.copy(segDir).multiplyScalar(s1).add(segCenter);\n        }\n\n        return sqrDist;\n      };\n    }(),\n    intersectSphere: function () {\n      var v1 = new Vector3();\n      return function intersectSphere(sphere, target) {\n        v1.subVectors(sphere.center, this.origin);\n        var tca = v1.dot(this.direction);\n        var d2 = v1.dot(v1) - tca * tca;\n        var radius2 = sphere.radius * sphere.radius;\n        if (d2 > radius2) return null;\n        var thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n        var t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n        var t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n        if (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n        // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n        // in order to always return an intersect point that is in front of the ray.\n\n        if (t0 < 0) return this.at(t1, target); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n        return this.at(t0, target);\n      };\n    }(),\n    intersectsSphere: function intersectsSphere(sphere) {\n      return this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius;\n    },\n    distanceToPlane: function distanceToPlane(plane) {\n      var denominator = plane.normal.dot(this.direction);\n\n      if (denominator === 0) {\n        // line is coplanar, return origin\n        if (plane.distanceToPoint(this.origin) === 0) {\n          return 0;\n        } // Null is preferable to undefined since undefined means.... it is undefined\n\n\n        return null;\n      }\n\n      var t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n      return t >= 0 ? t : null;\n    },\n    intersectPlane: function intersectPlane(plane, target) {\n      var t = this.distanceToPlane(plane);\n\n      if (t === null) {\n        return null;\n      }\n\n      return this.at(t, target);\n    },\n    intersectsPlane: function intersectsPlane(plane) {\n      // check if the ray lies on the plane first\n      var distToPoint = plane.distanceToPoint(this.origin);\n\n      if (distToPoint === 0) {\n        return true;\n      }\n\n      var denominator = plane.normal.dot(this.direction);\n\n      if (denominator * distToPoint < 0) {\n        return true;\n      } // ray origin is behind the plane (and is pointing behind it)\n\n\n      return false;\n    },\n    intersectBox: function intersectBox(box, target) {\n      var tmin, tmax, tymin, tymax, tzmin, tzmax;\n      var invdirx = 1 / this.direction.x,\n          invdiry = 1 / this.direction.y,\n          invdirz = 1 / this.direction.z;\n      var origin = this.origin;\n\n      if (invdirx >= 0) {\n        tmin = (box.min.x - origin.x) * invdirx;\n        tmax = (box.max.x - origin.x) * invdirx;\n      } else {\n        tmin = (box.max.x - origin.x) * invdirx;\n        tmax = (box.min.x - origin.x) * invdirx;\n      }\n\n      if (invdiry >= 0) {\n        tymin = (box.min.y - origin.y) * invdiry;\n        tymax = (box.max.y - origin.y) * invdiry;\n      } else {\n        tymin = (box.max.y - origin.y) * invdiry;\n        tymax = (box.min.y - origin.y) * invdiry;\n      }\n\n      if (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n      // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n      if (tymin > tmin || tmin !== tmin) tmin = tymin;\n      if (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n      if (invdirz >= 0) {\n        tzmin = (box.min.z - origin.z) * invdirz;\n        tzmax = (box.max.z - origin.z) * invdirz;\n      } else {\n        tzmin = (box.max.z - origin.z) * invdirz;\n        tzmax = (box.min.z - origin.z) * invdirz;\n      }\n\n      if (tmin > tzmax || tzmin > tmax) return null;\n      if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n      if (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n      if (tmax < 0) return null;\n      return this.at(tmin >= 0 ? tmin : tmax, target);\n    },\n    intersectsBox: function () {\n      var v = new Vector3();\n      return function intersectsBox(box) {\n        return this.intersectBox(box, v) !== null;\n      };\n    }(),\n    intersectTriangle: function () {\n      // Compute the offset origin, edges, and normal.\n      var diff = new Vector3();\n      var edge1 = new Vector3();\n      var edge2 = new Vector3();\n      var normal = new Vector3();\n      return function intersectTriangle(a, b, c, backfaceCulling, target) {\n        // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n        edge1.subVectors(b, a);\n        edge2.subVectors(c, a);\n        normal.crossVectors(edge1, edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n        // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n        //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n        //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n        //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n        var DdN = this.direction.dot(normal);\n        var sign;\n\n        if (DdN > 0) {\n          if (backfaceCulling) return null;\n          sign = 1;\n        } else if (DdN < 0) {\n          sign = -1;\n          DdN = -DdN;\n        } else {\n          return null;\n        }\n\n        diff.subVectors(this.origin, a);\n        var DdQxE2 = sign * this.direction.dot(edge2.crossVectors(diff, edge2)); // b1 < 0, no intersection\n\n        if (DdQxE2 < 0) {\n          return null;\n        }\n\n        var DdE1xQ = sign * this.direction.dot(edge1.cross(diff)); // b2 < 0, no intersection\n\n        if (DdE1xQ < 0) {\n          return null;\n        } // b1+b2 > 1, no intersection\n\n\n        if (DdQxE2 + DdE1xQ > DdN) {\n          return null;\n        } // Line intersects triangle, check if ray does.\n\n\n        var QdN = -sign * diff.dot(normal); // t < 0, no intersection\n\n        if (QdN < 0) {\n          return null;\n        } // Ray intersects triangle.\n\n\n        return this.at(QdN / DdN, target);\n      };\n    }(),\n    applyMatrix4: function applyMatrix4(matrix4) {\n      this.origin.applyMatrix4(matrix4);\n      this.direction.transformDirection(matrix4);\n      return this;\n    },\n    equals: function equals(ray) {\n      return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Triangle(a, b, c) {\n    this.a = a !== undefined ? a : new Vector3();\n    this.b = b !== undefined ? b : new Vector3();\n    this.c = c !== undefined ? c : new Vector3();\n  }\n\n  Object.assign(Triangle, {\n    getNormal: function () {\n      var v0 = new Vector3();\n      return function getNormal(a, b, c, target) {\n        if (target === undefined) {\n          console.warn('THREE.Triangle: .getNormal() target is now required');\n          target = new Vector3();\n        }\n\n        target.subVectors(c, b);\n        v0.subVectors(a, b);\n        target.cross(v0);\n        var targetLengthSq = target.lengthSq();\n\n        if (targetLengthSq > 0) {\n          return target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\n        }\n\n        return target.set(0, 0, 0);\n      };\n    }(),\n    // static/instance method to calculate barycentric coordinates\n    // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n    getBarycoord: function () {\n      var v0 = new Vector3();\n      var v1 = new Vector3();\n      var v2 = new Vector3();\n      return function getBarycoord(point, a, b, c, target) {\n        v0.subVectors(c, a);\n        v1.subVectors(b, a);\n        v2.subVectors(point, a);\n        var dot00 = v0.dot(v0);\n        var dot01 = v0.dot(v1);\n        var dot02 = v0.dot(v2);\n        var dot11 = v1.dot(v1);\n        var dot12 = v1.dot(v2);\n        var denom = dot00 * dot11 - dot01 * dot01;\n\n        if (target === undefined) {\n          console.warn('THREE.Triangle: .getBarycoord() target is now required');\n          target = new Vector3();\n        } // collinear or singular triangle\n\n\n        if (denom === 0) {\n          // arbitrary location outside of triangle?\n          // not sure if this is the best idea, maybe should be returning undefined\n          return target.set(-2, -1, -1);\n        }\n\n        var invDenom = 1 / denom;\n        var u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n        var v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n        return target.set(1 - u - v, v, u);\n      };\n    }(),\n    containsPoint: function () {\n      var v1 = new Vector3();\n      return function containsPoint(point, a, b, c) {\n        Triangle.getBarycoord(point, a, b, c, v1);\n        return v1.x >= 0 && v1.y >= 0 && v1.x + v1.y <= 1;\n      };\n    }(),\n    getUV: function () {\n      var barycoord = new Vector3();\n      return function getUV(point, p1, p2, p3, uv1, uv2, uv3, target) {\n        this.getBarycoord(point, p1, p2, p3, barycoord);\n        target.set(0, 0);\n        target.addScaledVector(uv1, barycoord.x);\n        target.addScaledVector(uv2, barycoord.y);\n        target.addScaledVector(uv3, barycoord.z);\n        return target;\n      };\n    }()\n  });\n  Object.assign(Triangle.prototype, {\n    set: function set(a, b, c) {\n      this.a.copy(a);\n      this.b.copy(b);\n      this.c.copy(c);\n      return this;\n    },\n    setFromPointsAndIndices: function setFromPointsAndIndices(points, i0, i1, i2) {\n      this.a.copy(points[i0]);\n      this.b.copy(points[i1]);\n      this.c.copy(points[i2]);\n      return this;\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    copy: function copy(triangle) {\n      this.a.copy(triangle.a);\n      this.b.copy(triangle.b);\n      this.c.copy(triangle.c);\n      return this;\n    },\n    getArea: function () {\n      var v0 = new Vector3();\n      var v1 = new Vector3();\n      return function getArea() {\n        v0.subVectors(this.c, this.b);\n        v1.subVectors(this.a, this.b);\n        return v0.cross(v1).length() * 0.5;\n      };\n    }(),\n    getMidpoint: function getMidpoint(target) {\n      if (target === undefined) {\n        console.warn('THREE.Triangle: .getMidpoint() target is now required');\n        target = new Vector3();\n      }\n\n      return target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n    },\n    getNormal: function getNormal(target) {\n      return Triangle.getNormal(this.a, this.b, this.c, target);\n    },\n    getPlane: function getPlane(target) {\n      if (target === undefined) {\n        console.warn('THREE.Triangle: .getPlane() target is now required');\n        target = new Vector3();\n      }\n\n      return target.setFromCoplanarPoints(this.a, this.b, this.c);\n    },\n    getBarycoord: function getBarycoord(point, target) {\n      return Triangle.getBarycoord(point, this.a, this.b, this.c, target);\n    },\n    containsPoint: function containsPoint(point) {\n      return Triangle.containsPoint(point, this.a, this.b, this.c);\n    },\n    getUV: function getUV(point, uv1, uv2, uv3, result) {\n      return Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, result);\n    },\n    intersectsBox: function intersectsBox(box) {\n      return box.intersectsTriangle(this);\n    },\n    closestPointToPoint: function () {\n      var vab = new Vector3();\n      var vac = new Vector3();\n      var vbc = new Vector3();\n      var vap = new Vector3();\n      var vbp = new Vector3();\n      var vcp = new Vector3();\n      return function closestPointToPoint(p, target) {\n        if (target === undefined) {\n          console.warn('THREE.Triangle: .closestPointToPoint() target is now required');\n          target = new Vector3();\n        }\n\n        var a = this.a,\n            b = this.b,\n            c = this.c;\n        var v, w; // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n        // published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n        // under the accompanying license; see chapter 5.1.5 for detailed explanation.\n        // basically, we're distinguishing which of the voronoi regions of the triangle\n        // the point lies in with the minimum amount of redundant computation.\n\n        vab.subVectors(b, a);\n        vac.subVectors(c, a);\n        vap.subVectors(p, a);\n        var d1 = vab.dot(vap);\n        var d2 = vac.dot(vap);\n\n        if (d1 <= 0 && d2 <= 0) {\n          // vertex region of A; barycentric coords (1, 0, 0)\n          return target.copy(a);\n        }\n\n        vbp.subVectors(p, b);\n        var d3 = vab.dot(vbp);\n        var d4 = vac.dot(vbp);\n\n        if (d3 >= 0 && d4 <= d3) {\n          // vertex region of B; barycentric coords (0, 1, 0)\n          return target.copy(b);\n        }\n\n        var vc = d1 * d4 - d3 * d2;\n\n        if (vc <= 0 && d1 >= 0 && d3 <= 0) {\n          v = d1 / (d1 - d3); // edge region of AB; barycentric coords (1-v, v, 0)\n\n          return target.copy(a).addScaledVector(vab, v);\n        }\n\n        vcp.subVectors(p, c);\n        var d5 = vab.dot(vcp);\n        var d6 = vac.dot(vcp);\n\n        if (d6 >= 0 && d5 <= d6) {\n          // vertex region of C; barycentric coords (0, 0, 1)\n          return target.copy(c);\n        }\n\n        var vb = d5 * d2 - d1 * d6;\n\n        if (vb <= 0 && d2 >= 0 && d6 <= 0) {\n          w = d2 / (d2 - d6); // edge region of AC; barycentric coords (1-w, 0, w)\n\n          return target.copy(a).addScaledVector(vac, w);\n        }\n\n        var va = d3 * d6 - d5 * d4;\n\n        if (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\n          vbc.subVectors(c, b);\n          w = (d4 - d3) / (d4 - d3 + (d5 - d6)); // edge region of BC; barycentric coords (0, 1-w, w)\n\n          return target.copy(b).addScaledVector(vbc, w); // edge region of BC\n        } // face region\n\n\n        var denom = 1 / (va + vb + vc); // u = va * denom\n\n        v = vb * denom;\n        w = vc * denom;\n        return target.copy(a).addScaledVector(vab, v).addScaledVector(vac, w);\n      };\n    }(),\n    equals: function equals(triangle) {\n      return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  specularMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *  combine: THREE.Multiply,\n   *  reflectivity: <float>,\n   *  refractionRatio: <float>,\n   *\n   *  depthTest: <bool>,\n   *  depthWrite: <bool>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>\n   * }\n   */\n\n  function MeshBasicMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshBasicMaterial';\n    this.color = new Color(0xffffff); // emissive\n\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n\n  MeshBasicMaterial.prototype = Object.create(Material.prototype);\n  MeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n  MeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n  MeshBasicMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author jonobr1 / http://jonobr1.com/\n   */\n\n\n  function Mesh(geometry, material) {\n    Object3D.call(this);\n    this.type = 'Mesh';\n    this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n    this.material = material !== undefined ? material : new MeshBasicMaterial({\n      color: Math.random() * 0xffffff\n    });\n    this.drawMode = TrianglesDrawMode;\n    this.updateMorphTargets();\n  }\n\n  Mesh.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Mesh,\n    isMesh: true,\n    setDrawMode: function setDrawMode(value) {\n      this.drawMode = value;\n    },\n    copy: function copy(source) {\n      Object3D.prototype.copy.call(this, source);\n      this.drawMode = source.drawMode;\n\n      if (source.morphTargetInfluences !== undefined) {\n        this.morphTargetInfluences = source.morphTargetInfluences.slice();\n      }\n\n      if (source.morphTargetDictionary !== undefined) {\n        this.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\n      }\n\n      return this;\n    },\n    updateMorphTargets: function updateMorphTargets() {\n      var geometry = this.geometry;\n      var m, ml, name;\n\n      if (geometry.isBufferGeometry) {\n        var morphAttributes = geometry.morphAttributes;\n        var keys = Object.keys(morphAttributes);\n\n        if (keys.length > 0) {\n          var morphAttribute = morphAttributes[keys[0]];\n\n          if (morphAttribute !== undefined) {\n            this.morphTargetInfluences = [];\n            this.morphTargetDictionary = {};\n\n            for (m = 0, ml = morphAttribute.length; m < ml; m++) {\n              name = morphAttribute[m].name || String(m);\n              this.morphTargetInfluences.push(0);\n              this.morphTargetDictionary[name] = m;\n            }\n          }\n        }\n      } else {\n        var morphTargets = geometry.morphTargets;\n\n        if (morphTargets !== undefined && morphTargets.length > 0) {\n          console.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n        }\n      }\n    },\n    raycast: function () {\n      var inverseMatrix = new Matrix4();\n      var ray = new Ray();\n      var sphere = new Sphere();\n      var vA = new Vector3();\n      var vB = new Vector3();\n      var vC = new Vector3();\n      var tempA = new Vector3();\n      var tempB = new Vector3();\n      var tempC = new Vector3();\n      var uvA = new Vector2();\n      var uvB = new Vector2();\n      var uvC = new Vector2();\n      var intersectionPoint = new Vector3();\n      var intersectionPointWorld = new Vector3();\n\n      function checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n        var intersect;\n\n        if (material.side === BackSide) {\n          intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n        } else {\n          intersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\n        }\n\n        if (intersect === null) return null;\n        intersectionPointWorld.copy(point);\n        intersectionPointWorld.applyMatrix4(object.matrixWorld);\n        var distance = raycaster.ray.origin.distanceTo(intersectionPointWorld);\n        if (distance < raycaster.near || distance > raycaster.far) return null;\n        return {\n          distance: distance,\n          point: intersectionPointWorld.clone(),\n          object: object\n        };\n      }\n\n      function checkBufferGeometryIntersection(object, material, raycaster, ray, position, uv, a, b, c) {\n        vA.fromBufferAttribute(position, a);\n        vB.fromBufferAttribute(position, b);\n        vC.fromBufferAttribute(position, c);\n        var intersection = checkIntersection(object, material, raycaster, ray, vA, vB, vC, intersectionPoint);\n\n        if (intersection) {\n          if (uv) {\n            uvA.fromBufferAttribute(uv, a);\n            uvB.fromBufferAttribute(uv, b);\n            uvC.fromBufferAttribute(uv, c);\n            intersection.uv = Triangle.getUV(intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2());\n          }\n\n          var face = new Face3(a, b, c);\n          Triangle.getNormal(vA, vB, vC, face.normal);\n          intersection.face = face;\n        }\n\n        return intersection;\n      }\n\n      return function raycast(raycaster, intersects) {\n        var geometry = this.geometry;\n        var material = this.material;\n        var matrixWorld = this.matrixWorld;\n        if (material === undefined) return; // Checking boundingSphere distance to ray\n\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n        sphere.copy(geometry.boundingSphere);\n        sphere.applyMatrix4(matrixWorld);\n        if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n        inverseMatrix.getInverse(matrixWorld);\n        ray.copy(raycaster.ray).applyMatrix4(inverseMatrix); // Check boundingBox before continuing\n\n        if (geometry.boundingBox !== null) {\n          if (ray.intersectsBox(geometry.boundingBox) === false) return;\n        }\n\n        var intersection;\n\n        if (geometry.isBufferGeometry) {\n          var a, b, c;\n          var index = geometry.index;\n          var position = geometry.attributes.position;\n          var uv = geometry.attributes.uv;\n          var groups = geometry.groups;\n          var drawRange = geometry.drawRange;\n          var i, j, il, jl;\n          var group, groupMaterial;\n          var start, end;\n\n          if (index !== null) {\n            // indexed buffer geometry\n            if (Array.isArray(material)) {\n              for (i = 0, il = groups.length; i < il; i++) {\n                group = groups[i];\n                groupMaterial = material[group.materialIndex];\n                start = Math.max(group.start, drawRange.start);\n                end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n\n                for (j = start, jl = end; j < jl; j += 3) {\n                  a = index.getX(j);\n                  b = index.getX(j + 1);\n                  c = index.getX(j + 2);\n                  intersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, ray, position, uv, a, b, c);\n\n                  if (intersection) {\n                    intersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\n\n                    intersects.push(intersection);\n                  }\n                }\n              }\n            } else {\n              start = Math.max(0, drawRange.start);\n              end = Math.min(index.count, drawRange.start + drawRange.count);\n\n              for (i = start, il = end; i < il; i += 3) {\n                a = index.getX(i);\n                b = index.getX(i + 1);\n                c = index.getX(i + 2);\n                intersection = checkBufferGeometryIntersection(this, material, raycaster, ray, position, uv, a, b, c);\n\n                if (intersection) {\n                  intersection.faceIndex = Math.floor(i / 3); // triangle number in indexed buffer semantics\n\n                  intersects.push(intersection);\n                }\n              }\n            }\n          } else if (position !== undefined) {\n            // non-indexed buffer geometry\n            if (Array.isArray(material)) {\n              for (i = 0, il = groups.length; i < il; i++) {\n                group = groups[i];\n                groupMaterial = material[group.materialIndex];\n                start = Math.max(group.start, drawRange.start);\n                end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n\n                for (j = start, jl = end; j < jl; j += 3) {\n                  a = j;\n                  b = j + 1;\n                  c = j + 2;\n                  intersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, ray, position, uv, a, b, c);\n\n                  if (intersection) {\n                    intersection.faceIndex = Math.floor(j / 3); // triangle number in non-indexed buffer semantics\n\n                    intersects.push(intersection);\n                  }\n                }\n              }\n            } else {\n              start = Math.max(0, drawRange.start);\n              end = Math.min(position.count, drawRange.start + drawRange.count);\n\n              for (i = start, il = end; i < il; i += 3) {\n                a = i;\n                b = i + 1;\n                c = i + 2;\n                intersection = checkBufferGeometryIntersection(this, material, raycaster, ray, position, uv, a, b, c);\n\n                if (intersection) {\n                  intersection.faceIndex = Math.floor(i / 3); // triangle number in non-indexed buffer semantics\n\n                  intersects.push(intersection);\n                }\n              }\n            }\n          }\n        } else if (geometry.isGeometry) {\n          var fvA, fvB, fvC;\n          var isMultiMaterial = Array.isArray(material);\n          var vertices = geometry.vertices;\n          var faces = geometry.faces;\n          var uvs;\n          var faceVertexUvs = geometry.faceVertexUvs[0];\n          if (faceVertexUvs.length > 0) uvs = faceVertexUvs;\n\n          for (var f = 0, fl = faces.length; f < fl; f++) {\n            var face = faces[f];\n            var faceMaterial = isMultiMaterial ? material[face.materialIndex] : material;\n            if (faceMaterial === undefined) continue;\n            fvA = vertices[face.a];\n            fvB = vertices[face.b];\n            fvC = vertices[face.c];\n\n            if (faceMaterial.morphTargets === true) {\n              var morphTargets = geometry.morphTargets;\n              var morphInfluences = this.morphTargetInfluences;\n              vA.set(0, 0, 0);\n              vB.set(0, 0, 0);\n              vC.set(0, 0, 0);\n\n              for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n                var influence = morphInfluences[t];\n                if (influence === 0) continue;\n                var targets = morphTargets[t].vertices;\n                vA.addScaledVector(tempA.subVectors(targets[face.a], fvA), influence);\n                vB.addScaledVector(tempB.subVectors(targets[face.b], fvB), influence);\n                vC.addScaledVector(tempC.subVectors(targets[face.c], fvC), influence);\n              }\n\n              vA.add(fvA);\n              vB.add(fvB);\n              vC.add(fvC);\n              fvA = vA;\n              fvB = vB;\n              fvC = vC;\n            }\n\n            intersection = checkIntersection(this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint);\n\n            if (intersection) {\n              if (uvs && uvs[f]) {\n                var uvs_f = uvs[f];\n                uvA.copy(uvs_f[0]);\n                uvB.copy(uvs_f[1]);\n                uvC.copy(uvs_f[2]);\n                intersection.uv = Triangle.getUV(intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC, new Vector2());\n              }\n\n              intersection.face = face;\n              intersection.faceIndex = f;\n              intersects.push(intersection);\n            }\n          }\n        }\n      };\n    }(),\n    clone: function clone() {\n      return new this.constructor(this.geometry, this.material).copy(this);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function WebGLBackground(renderer, state, objects, premultipliedAlpha) {\n    var clearColor = new Color(0x000000);\n    var clearAlpha = 0;\n    var planeMesh;\n    var boxMesh; // Store the current background texture and its `version`\n    // so we can recompile the material accordingly.\n\n    var currentBackground = null;\n    var currentBackgroundVersion = 0;\n\n    function render(renderList, scene, camera, forceClear) {\n      var background = scene.background;\n\n      if (background === null) {\n        setClear(clearColor, clearAlpha);\n        currentBackground = null;\n        currentBackgroundVersion = 0;\n      } else if (background && background.isColor) {\n        setClear(background, 1);\n        forceClear = true;\n        currentBackground = null;\n        currentBackgroundVersion = 0;\n      }\n\n      if (renderer.autoClear || forceClear) {\n        renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n      }\n\n      if (background && (background.isCubeTexture || background.isWebGLRenderTargetCube)) {\n        if (boxMesh === undefined) {\n          boxMesh = new Mesh(new BoxBufferGeometry(1, 1, 1), new ShaderMaterial({\n            type: 'BackgroundCubeMaterial',\n            uniforms: cloneUniforms(ShaderLib.cube.uniforms),\n            vertexShader: ShaderLib.cube.vertexShader,\n            fragmentShader: ShaderLib.cube.fragmentShader,\n            side: BackSide,\n            depthTest: true,\n            depthWrite: false,\n            fog: false\n          }));\n          boxMesh.geometry.removeAttribute('normal');\n          boxMesh.geometry.removeAttribute('uv');\n\n          boxMesh.onBeforeRender = function (renderer, scene, camera) {\n            this.matrixWorld.copyPosition(camera.matrixWorld);\n          }; // enable code injection for non-built-in material\n\n\n          Object.defineProperty(boxMesh.material, 'map', {\n            get: function get() {\n              return this.uniforms.tCube.value;\n            }\n          });\n          objects.update(boxMesh);\n        }\n\n        var texture = background.isWebGLRenderTargetCube ? background.texture : background;\n        boxMesh.material.uniforms.tCube.value = texture;\n        boxMesh.material.uniforms.tFlip.value = background.isWebGLRenderTargetCube ? 1 : -1;\n\n        if (currentBackground !== background || currentBackgroundVersion !== texture.version) {\n          boxMesh.material.needsUpdate = true;\n          currentBackground = background;\n          currentBackgroundVersion = texture.version;\n        } // push to the pre-sorted opaque render list\n\n\n        renderList.unshift(boxMesh, boxMesh.geometry, boxMesh.material, 0, null);\n      } else if (background && background.isTexture) {\n        if (planeMesh === undefined) {\n          planeMesh = new Mesh(new PlaneBufferGeometry(2, 2), new ShaderMaterial({\n            type: 'BackgroundMaterial',\n            uniforms: cloneUniforms(ShaderLib.background.uniforms),\n            vertexShader: ShaderLib.background.vertexShader,\n            fragmentShader: ShaderLib.background.fragmentShader,\n            side: FrontSide,\n            depthTest: false,\n            depthWrite: false,\n            fog: false\n          }));\n          planeMesh.geometry.removeAttribute('normal'); // enable code injection for non-built-in material\n\n          Object.defineProperty(planeMesh.material, 'map', {\n            get: function get() {\n              return this.uniforms.t2D.value;\n            }\n          });\n          objects.update(planeMesh);\n        }\n\n        planeMesh.material.uniforms.t2D.value = background;\n\n        if (background.matrixAutoUpdate === true) {\n          background.updateMatrix();\n        }\n\n        planeMesh.material.uniforms.uvTransform.value.copy(background.matrix);\n\n        if (currentBackground !== background || currentBackgroundVersion !== background.version) {\n          planeMesh.material.needsUpdate = true;\n          currentBackground = background;\n          currentBackgroundVersion = background.version;\n        } // push to the pre-sorted opaque render list\n\n\n        renderList.unshift(planeMesh, planeMesh.geometry, planeMesh.material, 0, null);\n      }\n    }\n\n    function setClear(color, alpha) {\n      state.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\n    }\n\n    return {\n      getClearColor: function getClearColor() {\n        return clearColor;\n      },\n      setClearColor: function setClearColor(color, alpha) {\n        clearColor.set(color);\n        clearAlpha = alpha !== undefined ? alpha : 1;\n        setClear(clearColor, clearAlpha);\n      },\n      getClearAlpha: function getClearAlpha() {\n        return clearAlpha;\n      },\n      setClearAlpha: function setClearAlpha(alpha) {\n        clearAlpha = alpha;\n        setClear(clearColor, clearAlpha);\n      },\n      render: render\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLBufferRenderer(gl, extensions, info, capabilities) {\n    var mode;\n\n    function setMode(value) {\n      mode = value;\n    }\n\n    function render(start, count) {\n      gl.drawArrays(mode, start, count);\n      info.update(count, mode);\n    }\n\n    function renderInstances(geometry, start, count) {\n      var extension;\n\n      if (capabilities.isWebGL2) {\n        extension = gl;\n      } else {\n        extension = extensions.get('ANGLE_instanced_arrays');\n\n        if (extension === null) {\n          console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n          return;\n        }\n      }\n\n      extension[capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE'](mode, start, count, geometry.maxInstancedCount);\n      info.update(count, mode, geometry.maxInstancedCount);\n    } //\n\n\n    this.setMode = setMode;\n    this.render = render;\n    this.renderInstances = renderInstances;\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLCapabilities(gl, extensions, parameters) {\n    var maxAnisotropy;\n\n    function getMaxAnisotropy() {\n      if (maxAnisotropy !== undefined) return maxAnisotropy;\n      var extension = extensions.get('EXT_texture_filter_anisotropic');\n\n      if (extension !== null) {\n        maxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n      } else {\n        maxAnisotropy = 0;\n      }\n\n      return maxAnisotropy;\n    }\n\n    function getMaxPrecision(precision) {\n      if (precision === 'highp') {\n        if (gl.getShaderPrecisionFormat(35633, 36338).precision > 0 && gl.getShaderPrecisionFormat(35632, 36338).precision > 0) {\n          return 'highp';\n        }\n\n        precision = 'mediump';\n      }\n\n      if (precision === 'mediump') {\n        if (gl.getShaderPrecisionFormat(35633, 36337).precision > 0 && gl.getShaderPrecisionFormat(35632, 36337).precision > 0) {\n          return 'mediump';\n        }\n      }\n\n      return 'lowp';\n    }\n\n    var isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n    var precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n    var maxPrecision = getMaxPrecision(precision);\n\n    if (maxPrecision !== precision) {\n      console.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n      precision = maxPrecision;\n    }\n\n    var logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n    var maxTextures = gl.getParameter(34930);\n    var maxVertexTextures = gl.getParameter(35660);\n    var maxTextureSize = gl.getParameter(3379);\n    var maxCubemapSize = gl.getParameter(34076);\n    var maxAttributes = gl.getParameter(34921);\n    var maxVertexUniforms = gl.getParameter(36347);\n    var maxVaryings = gl.getParameter(36348);\n    var maxFragmentUniforms = gl.getParameter(36349);\n    var vertexTextures = maxVertexTextures > 0;\n    var floatFragmentTextures = isWebGL2 || !!extensions.get('OES_texture_float');\n    var floatVertexTextures = vertexTextures && floatFragmentTextures;\n    return {\n      isWebGL2: isWebGL2,\n      getMaxAnisotropy: getMaxAnisotropy,\n      getMaxPrecision: getMaxPrecision,\n      precision: precision,\n      logarithmicDepthBuffer: logarithmicDepthBuffer,\n      maxTextures: maxTextures,\n      maxVertexTextures: maxVertexTextures,\n      maxTextureSize: maxTextureSize,\n      maxCubemapSize: maxCubemapSize,\n      maxAttributes: maxAttributes,\n      maxVertexUniforms: maxVertexUniforms,\n      maxVaryings: maxVaryings,\n      maxFragmentUniforms: maxFragmentUniforms,\n      vertexTextures: vertexTextures,\n      floatFragmentTextures: floatFragmentTextures,\n      floatVertexTextures: floatVertexTextures\n    };\n  }\n  /**\n   * @author tschw\n   */\n\n\n  function WebGLClipping() {\n    var scope = this,\n        globalState = null,\n        numGlobalPlanes = 0,\n        localClippingEnabled = false,\n        renderingShadows = false,\n        plane = new Plane(),\n        viewNormalMatrix = new Matrix3(),\n        uniform = {\n      value: null,\n      needsUpdate: false\n    };\n    this.uniform = uniform;\n    this.numPlanes = 0;\n    this.numIntersection = 0;\n\n    this.init = function (planes, enableLocalClipping, camera) {\n      var enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n      // run another frame in order to reset the state:\n      numGlobalPlanes !== 0 || localClippingEnabled;\n      localClippingEnabled = enableLocalClipping;\n      globalState = projectPlanes(planes, camera, 0);\n      numGlobalPlanes = planes.length;\n      return enabled;\n    };\n\n    this.beginShadows = function () {\n      renderingShadows = true;\n      projectPlanes(null);\n    };\n\n    this.endShadows = function () {\n      renderingShadows = false;\n      resetGlobalState();\n    };\n\n    this.setState = function (planes, clipIntersection, clipShadows, camera, cache, fromCache) {\n      if (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n        // there's no local clipping\n        if (renderingShadows) {\n          // there's no global clipping\n          projectPlanes(null);\n        } else {\n          resetGlobalState();\n        }\n      } else {\n        var nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n            lGlobal = nGlobal * 4,\n            dstArray = cache.clippingState || null;\n        uniform.value = dstArray; // ensure unique state\n\n        dstArray = projectPlanes(planes, camera, lGlobal, fromCache);\n\n        for (var i = 0; i !== lGlobal; ++i) {\n          dstArray[i] = globalState[i];\n        }\n\n        cache.clippingState = dstArray;\n        this.numIntersection = clipIntersection ? this.numPlanes : 0;\n        this.numPlanes += nGlobal;\n      }\n    };\n\n    function resetGlobalState() {\n      if (uniform.value !== globalState) {\n        uniform.value = globalState;\n        uniform.needsUpdate = numGlobalPlanes > 0;\n      }\n\n      scope.numPlanes = numGlobalPlanes;\n      scope.numIntersection = 0;\n    }\n\n    function projectPlanes(planes, camera, dstOffset, skipTransform) {\n      var nPlanes = planes !== null ? planes.length : 0,\n          dstArray = null;\n\n      if (nPlanes !== 0) {\n        dstArray = uniform.value;\n\n        if (skipTransform !== true || dstArray === null) {\n          var flatSize = dstOffset + nPlanes * 4,\n              viewMatrix = camera.matrixWorldInverse;\n          viewNormalMatrix.getNormalMatrix(viewMatrix);\n\n          if (dstArray === null || dstArray.length < flatSize) {\n            dstArray = new Float32Array(flatSize);\n          }\n\n          for (var i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n            plane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n            plane.normal.toArray(dstArray, i4);\n            dstArray[i4 + 3] = plane.constant;\n          }\n        }\n\n        uniform.value = dstArray;\n        uniform.needsUpdate = true;\n      }\n\n      scope.numPlanes = nPlanes;\n      return dstArray;\n    }\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLExtensions(gl) {\n    var extensions = {};\n    return {\n      get: function get(name) {\n        if (extensions[name] !== undefined) {\n          return extensions[name];\n        }\n\n        var extension;\n\n        switch (name) {\n          case 'WEBGL_depth_texture':\n            extension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n            break;\n\n          case 'EXT_texture_filter_anisotropic':\n            extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n            break;\n\n          case 'WEBGL_compressed_texture_s3tc':\n            extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n            break;\n\n          case 'WEBGL_compressed_texture_pvrtc':\n            extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n            break;\n\n          default:\n            extension = gl.getExtension(name);\n        }\n\n        if (extension === null) {\n          console.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n        }\n\n        extensions[name] = extension;\n        return extension;\n      }\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLGeometries(gl, attributes, info) {\n    var geometries = {};\n    var wireframeAttributes = {};\n\n    function onGeometryDispose(event) {\n      var geometry = event.target;\n      var buffergeometry = geometries[geometry.id];\n\n      if (buffergeometry.index !== null) {\n        attributes.remove(buffergeometry.index);\n      }\n\n      for (var name in buffergeometry.attributes) {\n        attributes.remove(buffergeometry.attributes[name]);\n      }\n\n      geometry.removeEventListener('dispose', onGeometryDispose);\n      delete geometries[geometry.id];\n      var attribute = wireframeAttributes[buffergeometry.id];\n\n      if (attribute) {\n        attributes.remove(attribute);\n        delete wireframeAttributes[buffergeometry.id];\n      } //\n\n\n      info.memory.geometries--;\n    }\n\n    function get(object, geometry) {\n      var buffergeometry = geometries[geometry.id];\n      if (buffergeometry) return buffergeometry;\n      geometry.addEventListener('dispose', onGeometryDispose);\n\n      if (geometry.isBufferGeometry) {\n        buffergeometry = geometry;\n      } else if (geometry.isGeometry) {\n        if (geometry._bufferGeometry === undefined) {\n          geometry._bufferGeometry = new BufferGeometry().setFromObject(object);\n        }\n\n        buffergeometry = geometry._bufferGeometry;\n      }\n\n      geometries[geometry.id] = buffergeometry;\n      info.memory.geometries++;\n      return buffergeometry;\n    }\n\n    function update(geometry) {\n      var index = geometry.index;\n      var geometryAttributes = geometry.attributes;\n\n      if (index !== null) {\n        attributes.update(index, 34963);\n      }\n\n      for (var name in geometryAttributes) {\n        attributes.update(geometryAttributes[name], 34962);\n      } // morph targets\n\n\n      var morphAttributes = geometry.morphAttributes;\n\n      for (var name in morphAttributes) {\n        var array = morphAttributes[name];\n\n        for (var i = 0, l = array.length; i < l; i++) {\n          attributes.update(array[i], 34962);\n        }\n      }\n    }\n\n    function getWireframeAttribute(geometry) {\n      var attribute = wireframeAttributes[geometry.id];\n      if (attribute) return attribute;\n      var indices = [];\n      var geometryIndex = geometry.index;\n      var geometryAttributes = geometry.attributes; // console.time( 'wireframe' );\n\n      if (geometryIndex !== null) {\n        var array = geometryIndex.array;\n\n        for (var i = 0, l = array.length; i < l; i += 3) {\n          var a = array[i + 0];\n          var b = array[i + 1];\n          var c = array[i + 2];\n          indices.push(a, b, b, c, c, a);\n        }\n      } else {\n        var array = geometryAttributes.position.array;\n\n        for (var i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n          var a = i + 0;\n          var b = i + 1;\n          var c = i + 2;\n          indices.push(a, b, b, c, c, a);\n        }\n      } // console.timeEnd( 'wireframe' );\n\n\n      attribute = new (arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n      attributes.update(attribute, 34963);\n      wireframeAttributes[geometry.id] = attribute;\n      return attribute;\n    }\n\n    return {\n      get: get,\n      update: update,\n      getWireframeAttribute: getWireframeAttribute\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\n    var mode;\n\n    function setMode(value) {\n      mode = value;\n    }\n\n    var type, bytesPerElement;\n\n    function setIndex(value) {\n      type = value.type;\n      bytesPerElement = value.bytesPerElement;\n    }\n\n    function render(start, count) {\n      gl.drawElements(mode, count, type, start * bytesPerElement);\n      info.update(count, mode);\n    }\n\n    function renderInstances(geometry, start, count) {\n      var extension;\n\n      if (capabilities.isWebGL2) {\n        extension = gl;\n      } else {\n        var extension = extensions.get('ANGLE_instanced_arrays');\n\n        if (extension === null) {\n          console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n          return;\n        }\n      }\n\n      extension[capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE'](mode, count, type, start * bytesPerElement, geometry.maxInstancedCount);\n      info.update(count, mode, geometry.maxInstancedCount);\n    } //\n\n\n    this.setMode = setMode;\n    this.setIndex = setIndex;\n    this.render = render;\n    this.renderInstances = renderInstances;\n  }\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n\n  function WebGLInfo(gl) {\n    var memory = {\n      geometries: 0,\n      textures: 0\n    };\n    var render = {\n      frame: 0,\n      calls: 0,\n      triangles: 0,\n      points: 0,\n      lines: 0\n    };\n\n    function update(count, mode, instanceCount) {\n      instanceCount = instanceCount || 1;\n      render.calls++;\n\n      switch (mode) {\n        case 4:\n          render.triangles += instanceCount * (count / 3);\n          break;\n\n        case 5:\n        case 6:\n          render.triangles += instanceCount * (count - 2);\n          break;\n\n        case 1:\n          render.lines += instanceCount * (count / 2);\n          break;\n\n        case 3:\n          render.lines += instanceCount * (count - 1);\n          break;\n\n        case 2:\n          render.lines += instanceCount * count;\n          break;\n\n        case 0:\n          render.points += instanceCount * count;\n          break;\n\n        default:\n          console.error('THREE.WebGLInfo: Unknown draw mode:', mode);\n          break;\n      }\n    }\n\n    function reset() {\n      render.frame++;\n      render.calls = 0;\n      render.triangles = 0;\n      render.points = 0;\n      render.lines = 0;\n    }\n\n    return {\n      memory: memory,\n      render: render,\n      programs: null,\n      autoReset: true,\n      reset: reset,\n      update: update\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function absNumericalSort(a, b) {\n    return Math.abs(b[1]) - Math.abs(a[1]);\n  }\n\n  function WebGLMorphtargets(gl) {\n    var influencesList = {};\n    var morphInfluences = new Float32Array(8);\n\n    function update(object, geometry, material, program) {\n      var objectInfluences = object.morphTargetInfluences;\n      var length = objectInfluences.length;\n      var influences = influencesList[geometry.id];\n\n      if (influences === undefined) {\n        // initialise list\n        influences = [];\n\n        for (var i = 0; i < length; i++) {\n          influences[i] = [i, 0];\n        }\n\n        influencesList[geometry.id] = influences;\n      }\n\n      var morphTargets = material.morphTargets && geometry.morphAttributes.position;\n      var morphNormals = material.morphNormals && geometry.morphAttributes.normal; // Remove current morphAttributes\n\n      for (var i = 0; i < length; i++) {\n        var influence = influences[i];\n\n        if (influence[1] !== 0) {\n          if (morphTargets) geometry.removeAttribute('morphTarget' + i);\n          if (morphNormals) geometry.removeAttribute('morphNormal' + i);\n        }\n      } // Collect influences\n\n\n      for (var i = 0; i < length; i++) {\n        var influence = influences[i];\n        influence[0] = i;\n        influence[1] = objectInfluences[i];\n      }\n\n      influences.sort(absNumericalSort); // Add morphAttributes\n\n      for (var i = 0; i < 8; i++) {\n        var influence = influences[i];\n\n        if (influence) {\n          var index = influence[0];\n          var value = influence[1];\n\n          if (value) {\n            if (morphTargets) geometry.addAttribute('morphTarget' + i, morphTargets[index]);\n            if (morphNormals) geometry.addAttribute('morphNormal' + i, morphNormals[index]);\n            morphInfluences[i] = value;\n            continue;\n          }\n        }\n\n        morphInfluences[i] = 0;\n      }\n\n      program.getUniforms().setValue(gl, 'morphTargetInfluences', morphInfluences);\n    }\n\n    return {\n      update: update\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLObjects(geometries, info) {\n    var updateList = {};\n\n    function update(object) {\n      var frame = info.render.frame;\n      var geometry = object.geometry;\n      var buffergeometry = geometries.get(object, geometry); // Update once per frame\n\n      if (updateList[buffergeometry.id] !== frame) {\n        if (geometry.isGeometry) {\n          buffergeometry.updateFromObject(object);\n        }\n\n        geometries.update(buffergeometry);\n        updateList[buffergeometry.id] = frame;\n      }\n\n      return buffergeometry;\n    }\n\n    function dispose() {\n      updateList = {};\n    }\n\n    return {\n      update: update,\n      dispose: dispose\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function CubeTexture(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n    images = images !== undefined ? images : [];\n    mapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n    Texture.call(this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.flipY = false;\n  }\n\n  CubeTexture.prototype = Object.create(Texture.prototype);\n  CubeTexture.prototype.constructor = CubeTexture;\n  CubeTexture.prototype.isCubeTexture = true;\n  Object.defineProperty(CubeTexture.prototype, 'images', {\n    get: function get() {\n      return this.image;\n    },\n    set: function set(value) {\n      this.image = value;\n    }\n  });\n  /**\n   * @author Artur Trzesiok\n   */\n\n  function DataTexture3D(data, width, height, depth) {\n    // We're going to add .setXXX() methods for setting properties later.\n    // Users can still set in DataTexture3D directly.\n    //\n    //\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n    // \ttexture.anisotropy = 16;\n    //\n    // See #14839\n    Texture.call(this, null);\n    this.image = {\n      data: data,\n      width: width,\n      height: height,\n      depth: depth\n    };\n    this.magFilter = NearestFilter;\n    this.minFilter = NearestFilter;\n    this.generateMipmaps = false;\n    this.flipY = false;\n  }\n\n  DataTexture3D.prototype = Object.create(Texture.prototype);\n  DataTexture3D.prototype.constructor = DataTexture3D;\n  DataTexture3D.prototype.isDataTexture3D = true;\n  /**\n   * @author tschw\n   * @author Mugen87 / https://github.com/Mugen87\n   * @author mrdoob / http://mrdoob.com/\n   *\n   * Uniforms of a program.\n   * Those form a tree structure with a special top-level container for the root,\n   * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n   *\n   *\n   * Properties of inner nodes including the top-level container:\n   *\n   * .seq - array of nested uniforms\n   * .map - nested uniforms by name\n   *\n   *\n   * Methods of all nodes except the top-level container:\n   *\n   * .setValue( gl, value, [renderer] )\n   *\n   * \t\tuploads a uniform value(s)\n   *  \tthe 'renderer' parameter is needed for sampler uniforms\n   *\n   *\n   * Static methods of the top-level container (renderer factorizations):\n   *\n   * .upload( gl, seq, values, renderer )\n   *\n   * \t\tsets uniforms in 'seq' to 'values[id].value'\n   *\n   * .seqWithValue( seq, values ) : filteredSeq\n   *\n   * \t\tfilters 'seq' entries with corresponding entry in values\n   *\n   *\n   * Methods of the top-level container (renderer factorizations):\n   *\n   * .setValue( gl, name, value )\n   *\n   * \t\tsets uniform with  name 'name' to 'value'\n   *\n   * .set( gl, obj, prop )\n   *\n   * \t\tsets uniform from object and property with same name than uniform\n   *\n   * .setOptional( gl, obj, prop )\n   *\n   * \t\tlike .set for an optional property of the object\n   *\n   */\n\n  var emptyTexture = new Texture();\n  var emptyTexture3d = new DataTexture3D();\n  var emptyCubeTexture = new CubeTexture(); // --- Base for inner nodes (including the root) ---\n\n  function UniformContainer() {\n    this.seq = [];\n    this.map = {};\n  } // --- Utilities ---\n  // Array Caches (provide typed arrays for temporary by size)\n\n\n  var arrayCacheF32 = [];\n  var arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\n\n  var mat4array = new Float32Array(16);\n  var mat3array = new Float32Array(9);\n  var mat2array = new Float32Array(4); // Flattening for arrays of vectors and matrices\n\n  function flatten(array, nBlocks, blockSize) {\n    var firstElem = array[0];\n    if (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n    // see http://jacksondunstan.com/articles/983\n\n    var n = nBlocks * blockSize,\n        r = arrayCacheF32[n];\n\n    if (r === undefined) {\n      r = new Float32Array(n);\n      arrayCacheF32[n] = r;\n    }\n\n    if (nBlocks !== 0) {\n      firstElem.toArray(r, 0);\n\n      for (var i = 1, offset = 0; i !== nBlocks; ++i) {\n        offset += blockSize;\n        array[i].toArray(r, offset);\n      }\n    }\n\n    return r;\n  }\n\n  function arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n\n    for (var i = 0, l = a.length; i < l; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n\n    return true;\n  }\n\n  function copyArray(a, b) {\n    for (var i = 0, l = b.length; i < l; i++) {\n      a[i] = b[i];\n    }\n  } // Texture unit allocation\n\n\n  function allocTexUnits(renderer, n) {\n    var r = arrayCacheI32[n];\n\n    if (r === undefined) {\n      r = new Int32Array(n);\n      arrayCacheI32[n] = r;\n    }\n\n    for (var i = 0; i !== n; ++i) {\n      r[i] = renderer.allocTextureUnit();\n    }\n\n    return r;\n  } // --- Setters ---\n  // Note: Defining these methods externally, because they come in a bunch\n  // and this way their names minify.\n  // Single scalar\n\n\n  function setValue1f(gl, v) {\n    var cache = this.cache;\n    if (cache[0] === v) return;\n    gl.uniform1f(this.addr, v);\n    cache[0] = v;\n  }\n\n  function setValue1i(gl, v) {\n    var cache = this.cache;\n    if (cache[0] === v) return;\n    gl.uniform1i(this.addr, v);\n    cache[0] = v;\n  } // Single float vector (from flat array or THREE.VectorN)\n\n\n  function setValue2fv(gl, v) {\n    var cache = this.cache;\n\n    if (v.x !== undefined) {\n      if (cache[0] !== v.x || cache[1] !== v.y) {\n        gl.uniform2f(this.addr, v.x, v.y);\n        cache[0] = v.x;\n        cache[1] = v.y;\n      }\n    } else {\n      if (arraysEqual(cache, v)) return;\n      gl.uniform2fv(this.addr, v);\n      copyArray(cache, v);\n    }\n  }\n\n  function setValue3fv(gl, v) {\n    var cache = this.cache;\n\n    if (v.x !== undefined) {\n      if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n        gl.uniform3f(this.addr, v.x, v.y, v.z);\n        cache[0] = v.x;\n        cache[1] = v.y;\n        cache[2] = v.z;\n      }\n    } else if (v.r !== undefined) {\n      if (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\n        gl.uniform3f(this.addr, v.r, v.g, v.b);\n        cache[0] = v.r;\n        cache[1] = v.g;\n        cache[2] = v.b;\n      }\n    } else {\n      if (arraysEqual(cache, v)) return;\n      gl.uniform3fv(this.addr, v);\n      copyArray(cache, v);\n    }\n  }\n\n  function setValue4fv(gl, v) {\n    var cache = this.cache;\n\n    if (v.x !== undefined) {\n      if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\n        gl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n        cache[0] = v.x;\n        cache[1] = v.y;\n        cache[2] = v.z;\n        cache[3] = v.w;\n      }\n    } else {\n      if (arraysEqual(cache, v)) return;\n      gl.uniform4fv(this.addr, v);\n      copyArray(cache, v);\n    }\n  } // Single matrix (from flat array or MatrixN)\n\n\n  function setValue2fm(gl, v) {\n    var cache = this.cache;\n    var elements = v.elements;\n\n    if (elements === undefined) {\n      if (arraysEqual(cache, v)) return;\n      gl.uniformMatrix2fv(this.addr, false, v);\n      copyArray(cache, v);\n    } else {\n      if (arraysEqual(cache, elements)) return;\n      mat2array.set(elements);\n      gl.uniformMatrix2fv(this.addr, false, mat2array);\n      copyArray(cache, elements);\n    }\n  }\n\n  function setValue3fm(gl, v) {\n    var cache = this.cache;\n    var elements = v.elements;\n\n    if (elements === undefined) {\n      if (arraysEqual(cache, v)) return;\n      gl.uniformMatrix3fv(this.addr, false, v);\n      copyArray(cache, v);\n    } else {\n      if (arraysEqual(cache, elements)) return;\n      mat3array.set(elements);\n      gl.uniformMatrix3fv(this.addr, false, mat3array);\n      copyArray(cache, elements);\n    }\n  }\n\n  function setValue4fm(gl, v) {\n    var cache = this.cache;\n    var elements = v.elements;\n\n    if (elements === undefined) {\n      if (arraysEqual(cache, v)) return;\n      gl.uniformMatrix4fv(this.addr, false, v);\n      copyArray(cache, v);\n    } else {\n      if (arraysEqual(cache, elements)) return;\n      mat4array.set(elements);\n      gl.uniformMatrix4fv(this.addr, false, mat4array);\n      copyArray(cache, elements);\n    }\n  } // Single texture (2D / Cube)\n\n\n  function setValueT1(gl, v, renderer) {\n    var cache = this.cache;\n    var unit = renderer.allocTextureUnit();\n\n    if (cache[0] !== unit) {\n      gl.uniform1i(this.addr, unit);\n      cache[0] = unit;\n    }\n\n    renderer.setTexture2D(v || emptyTexture, unit);\n  }\n\n  function setValueT3D1(gl, v, renderer) {\n    var cache = this.cache;\n    var unit = renderer.allocTextureUnit();\n\n    if (cache[0] !== unit) {\n      gl.uniform1i(this.addr, unit);\n      cache[0] = unit;\n    }\n\n    renderer.setTexture3D(v || emptyTexture3d, unit);\n  }\n\n  function setValueT6(gl, v, renderer) {\n    var cache = this.cache;\n    var unit = renderer.allocTextureUnit();\n\n    if (cache[0] !== unit) {\n      gl.uniform1i(this.addr, unit);\n      cache[0] = unit;\n    }\n\n    renderer.setTextureCube(v || emptyCubeTexture, unit);\n  } // Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\n  function setValue2iv(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform2iv(this.addr, v);\n    copyArray(cache, v);\n  }\n\n  function setValue3iv(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform3iv(this.addr, v);\n    copyArray(cache, v);\n  }\n\n  function setValue4iv(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform4iv(this.addr, v);\n    copyArray(cache, v);\n  } // Helper to pick the right setter for the singular case\n\n\n  function getSingularSetter(type) {\n    switch (type) {\n      case 0x1406:\n        return setValue1f;\n      // FLOAT\n\n      case 0x8b50:\n        return setValue2fv;\n      // _VEC2\n\n      case 0x8b51:\n        return setValue3fv;\n      // _VEC3\n\n      case 0x8b52:\n        return setValue4fv;\n      // _VEC4\n\n      case 0x8b5a:\n        return setValue2fm;\n      // _MAT2\n\n      case 0x8b5b:\n        return setValue3fm;\n      // _MAT3\n\n      case 0x8b5c:\n        return setValue4fm;\n      // _MAT4\n\n      case 0x8b5e:\n      case 0x8d66:\n        return setValueT1;\n      // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\n      case 0x8B5F:\n        return setValueT3D1;\n      // SAMPLER_3D\n\n      case 0x8b60:\n        return setValueT6;\n      // SAMPLER_CUBE\n\n      case 0x1404:\n      case 0x8b56:\n        return setValue1i;\n      // INT, BOOL\n\n      case 0x8b53:\n      case 0x8b57:\n        return setValue2iv;\n      // _VEC2\n\n      case 0x8b54:\n      case 0x8b58:\n        return setValue3iv;\n      // _VEC3\n\n      case 0x8b55:\n      case 0x8b59:\n        return setValue4iv;\n      // _VEC4\n    }\n  } // Array of scalars\n\n\n  function setValue1fv(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform1fv(this.addr, v);\n    copyArray(cache, v);\n  }\n\n  function setValue1iv(gl, v) {\n    var cache = this.cache;\n    if (arraysEqual(cache, v)) return;\n    gl.uniform1iv(this.addr, v);\n    copyArray(cache, v);\n  } // Array of vectors (flat or from THREE classes)\n\n\n  function setValueV2a(gl, v) {\n    var cache = this.cache;\n    var data = flatten(v, this.size, 2);\n    if (arraysEqual(cache, data)) return;\n    gl.uniform2fv(this.addr, data);\n    this.updateCache(data);\n  }\n\n  function setValueV3a(gl, v) {\n    var cache = this.cache;\n    var data = flatten(v, this.size, 3);\n    if (arraysEqual(cache, data)) return;\n    gl.uniform3fv(this.addr, data);\n    this.updateCache(data);\n  }\n\n  function setValueV4a(gl, v) {\n    var cache = this.cache;\n    var data = flatten(v, this.size, 4);\n    if (arraysEqual(cache, data)) return;\n    gl.uniform4fv(this.addr, data);\n    this.updateCache(data);\n  } // Array of matrices (flat or from THREE clases)\n\n\n  function setValueM2a(gl, v) {\n    var cache = this.cache;\n    var data = flatten(v, this.size, 4);\n    if (arraysEqual(cache, data)) return;\n    gl.uniformMatrix2fv(this.addr, false, data);\n    this.updateCache(data);\n  }\n\n  function setValueM3a(gl, v) {\n    var cache = this.cache;\n    var data = flatten(v, this.size, 9);\n    if (arraysEqual(cache, data)) return;\n    gl.uniformMatrix3fv(this.addr, false, data);\n    this.updateCache(data);\n  }\n\n  function setValueM4a(gl, v) {\n    var cache = this.cache;\n    var data = flatten(v, this.size, 16);\n    if (arraysEqual(cache, data)) return;\n    gl.uniformMatrix4fv(this.addr, false, data);\n    this.updateCache(data);\n  } // Array of textures (2D / Cube)\n\n\n  function setValueT1a(gl, v, renderer) {\n    var cache = this.cache;\n    var n = v.length;\n    var units = allocTexUnits(renderer, n);\n\n    if (arraysEqual(cache, units) === false) {\n      gl.uniform1iv(this.addr, units);\n      copyArray(cache, units);\n    }\n\n    for (var i = 0; i !== n; ++i) {\n      renderer.setTexture2D(v[i] || emptyTexture, units[i]);\n    }\n  }\n\n  function setValueT6a(gl, v, renderer) {\n    var cache = this.cache;\n    var n = v.length;\n    var units = allocTexUnits(renderer, n);\n\n    if (arraysEqual(cache, units) === false) {\n      gl.uniform1iv(this.addr, units);\n      copyArray(cache, units);\n    }\n\n    for (var i = 0; i !== n; ++i) {\n      renderer.setTextureCube(v[i] || emptyCubeTexture, units[i]);\n    }\n  } // Helper to pick the right setter for a pure (bottom-level) array\n\n\n  function getPureArraySetter(type) {\n    switch (type) {\n      case 0x1406:\n        return setValue1fv;\n      // FLOAT\n\n      case 0x8b50:\n        return setValueV2a;\n      // _VEC2\n\n      case 0x8b51:\n        return setValueV3a;\n      // _VEC3\n\n      case 0x8b52:\n        return setValueV4a;\n      // _VEC4\n\n      case 0x8b5a:\n        return setValueM2a;\n      // _MAT2\n\n      case 0x8b5b:\n        return setValueM3a;\n      // _MAT3\n\n      case 0x8b5c:\n        return setValueM4a;\n      // _MAT4\n\n      case 0x8b5e:\n        return setValueT1a;\n      // SAMPLER_2D\n\n      case 0x8b60:\n        return setValueT6a;\n      // SAMPLER_CUBE\n\n      case 0x1404:\n      case 0x8b56:\n        return setValue1iv;\n      // INT, BOOL\n\n      case 0x8b53:\n      case 0x8b57:\n        return setValue2iv;\n      // _VEC2\n\n      case 0x8b54:\n      case 0x8b58:\n        return setValue3iv;\n      // _VEC3\n\n      case 0x8b55:\n      case 0x8b59:\n        return setValue4iv;\n      // _VEC4\n    }\n  } // --- Uniform Classes ---\n\n\n  function SingleUniform(id, activeInfo, addr) {\n    this.id = id;\n    this.addr = addr;\n    this.cache = [];\n    this.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n  }\n\n  function PureArrayUniform(id, activeInfo, addr) {\n    this.id = id;\n    this.addr = addr;\n    this.cache = [];\n    this.size = activeInfo.size;\n    this.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n  }\n\n  PureArrayUniform.prototype.updateCache = function (data) {\n    var cache = this.cache;\n\n    if (data instanceof Float32Array && cache.length !== data.length) {\n      this.cache = new Float32Array(data.length);\n    }\n\n    copyArray(cache, data);\n  };\n\n  function StructuredUniform(id) {\n    this.id = id;\n    UniformContainer.call(this); // mix-in\n  }\n\n  StructuredUniform.prototype.setValue = function (gl, value, renderer) {\n    var seq = this.seq;\n\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i];\n      u.setValue(gl, value[u.id], renderer);\n    }\n  }; // --- Top-level ---\n  // Parser - builds up the property tree from the path strings\n\n\n  var RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g; // extracts\n  // \t- the identifier (member name or array index)\n  //  - followed by an optional right bracket (found when array index)\n  //  - followed by an optional left bracket or dot (type of subscript)\n  //\n  // Note: These portions can be read in a non-overlapping fashion and\n  // allow straightforward parsing of the hierarchy that WebGL encodes\n  // in the uniform names.\n\n  function addUniform(container, uniformObject) {\n    container.seq.push(uniformObject);\n    container.map[uniformObject.id] = uniformObject;\n  }\n\n  function parseUniform(activeInfo, addr, container) {\n    var path = activeInfo.name,\n        pathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n    RePathPart.lastIndex = 0;\n\n    while (true) {\n      var match = RePathPart.exec(path),\n          matchEnd = RePathPart.lastIndex,\n          id = match[1],\n          idIsIndex = match[2] === ']',\n          subscript = match[3];\n      if (idIsIndex) id = id | 0; // convert to integer\n\n      if (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n        // bare name or \"pure\" bottom-level array \"[0]\" suffix\n        addUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n        break;\n      } else {\n        // step into inner node / create it in case it doesn't exist\n        var map = container.map,\n            next = map[id];\n\n        if (next === undefined) {\n          next = new StructuredUniform(id);\n          addUniform(container, next);\n        }\n\n        container = next;\n      }\n    }\n  } // Root Container\n\n\n  function WebGLUniforms(gl, program, renderer) {\n    UniformContainer.call(this);\n    this.renderer = renderer;\n    var n = gl.getProgramParameter(program, 35718);\n\n    for (var i = 0; i < n; ++i) {\n      var info = gl.getActiveUniform(program, i),\n          addr = gl.getUniformLocation(program, info.name);\n      parseUniform(info, addr, this);\n    }\n  }\n\n  WebGLUniforms.prototype.setValue = function (gl, name, value) {\n    var u = this.map[name];\n    if (u !== undefined) u.setValue(gl, value, this.renderer);\n  };\n\n  WebGLUniforms.prototype.setOptional = function (gl, object, name) {\n    var v = object[name];\n    if (v !== undefined) this.setValue(gl, name, v);\n  }; // Static interface\n\n\n  WebGLUniforms.upload = function (gl, seq, values, renderer) {\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i],\n          v = values[u.id];\n\n      if (v.needsUpdate !== false) {\n        // note: always updating when .needsUpdate is undefined\n        u.setValue(gl, v.value, renderer);\n      }\n    }\n  };\n\n  WebGLUniforms.seqWithValue = function (seq, values) {\n    var r = [];\n\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i];\n      if (u.id in values) r.push(u);\n    }\n\n    return r;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function addLineNumbers(string) {\n    var lines = string.split('\\n');\n\n    for (var i = 0; i < lines.length; i++) {\n      lines[i] = i + 1 + ': ' + lines[i];\n    }\n\n    return lines.join('\\n');\n  }\n\n  function WebGLShader(gl, type, string) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, string);\n    gl.compileShader(shader);\n\n    if (gl.getShaderParameter(shader, 35713) === false) {\n      console.error('THREE.WebGLShader: Shader couldn\\'t compile.');\n    }\n\n    if (gl.getShaderInfoLog(shader) !== '') {\n      console.warn('THREE.WebGLShader: gl.getShaderInfoLog()', type === 35633 ? 'vertex' : 'fragment', gl.getShaderInfoLog(shader), addLineNumbers(string));\n    } // --enable-privileged-webgl-extension\n    // console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\n    return shader;\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  var programIdCount = 0;\n\n  function getEncodingComponents(encoding) {\n    switch (encoding) {\n      case LinearEncoding:\n        return ['Linear', '( value )'];\n\n      case sRGBEncoding:\n        return ['sRGB', '( value )'];\n\n      case RGBEEncoding:\n        return ['RGBE', '( value )'];\n\n      case RGBM7Encoding:\n        return ['RGBM', '( value, 7.0 )'];\n\n      case RGBM16Encoding:\n        return ['RGBM', '( value, 16.0 )'];\n\n      case RGBDEncoding:\n        return ['RGBD', '( value, 256.0 )'];\n\n      case GammaEncoding:\n        return ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n      default:\n        throw new Error('unsupported encoding: ' + encoding);\n    }\n  }\n\n  function getTexelDecodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return 'vec4 ' + functionName + '( vec4 value ) { return ' + components[0] + 'ToLinear' + components[1] + '; }';\n  }\n\n  function getTexelEncodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\n  }\n\n  function getToneMappingFunction(functionName, toneMapping) {\n    var toneMappingName;\n\n    switch (toneMapping) {\n      case LinearToneMapping:\n        toneMappingName = 'Linear';\n        break;\n\n      case ReinhardToneMapping:\n        toneMappingName = 'Reinhard';\n        break;\n\n      case Uncharted2ToneMapping:\n        toneMappingName = 'Uncharted2';\n        break;\n\n      case CineonToneMapping:\n        toneMappingName = 'OptimizedCineon';\n        break;\n\n      case ACESFilmicToneMapping:\n        toneMappingName = 'ACESFilmic';\n        break;\n\n      default:\n        throw new Error('unsupported toneMapping: ' + toneMapping);\n    }\n\n    return 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n  }\n\n  function generateExtensions(extensions, parameters, rendererExtensions) {\n    extensions = extensions || {};\n    var chunks = [extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap && !parameters.objectSpaceNormalMap || parameters.flatShading ? '#extension GL_OES_standard_derivatives : enable' : '', (extensions.fragDepth || parameters.logarithmicDepthBuffer) && rendererExtensions.get('EXT_frag_depth') ? '#extension GL_EXT_frag_depth : enable' : '', extensions.drawBuffers && rendererExtensions.get('WEBGL_draw_buffers') ? '#extension GL_EXT_draw_buffers : require' : '', (extensions.shaderTextureLOD || parameters.envMap) && rendererExtensions.get('EXT_shader_texture_lod') ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n    return chunks.filter(filterEmptyLine).join('\\n');\n  }\n\n  function generateDefines(defines) {\n    var chunks = [];\n\n    for (var name in defines) {\n      var value = defines[name];\n      if (value === false) continue;\n      chunks.push('#define ' + name + ' ' + value);\n    }\n\n    return chunks.join('\\n');\n  }\n\n  function fetchAttributeLocations(gl, program) {\n    var attributes = {};\n    var n = gl.getProgramParameter(program, 35721);\n\n    for (var i = 0; i < n; i++) {\n      var info = gl.getActiveAttrib(program, i);\n      var name = info.name; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n      attributes[name] = gl.getAttribLocation(program, name);\n    }\n\n    return attributes;\n  }\n\n  function filterEmptyLine(string) {\n    return string !== '';\n  }\n\n  function replaceLightNums(string, parameters) {\n    return string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights);\n  }\n\n  function replaceClippingPlaneNums(string, parameters) {\n    return string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\n  }\n\n  function parseIncludes(string) {\n    var pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n    function replace(match, include) {\n      var replace = ShaderChunk[include];\n\n      if (replace === undefined) {\n        throw new Error('Can not resolve #include <' + include + '>');\n      }\n\n      return parseIncludes(replace);\n    }\n\n    return string.replace(pattern, replace);\n  }\n\n  function unrollLoops(string) {\n    var pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n    function replace(match, start, end, snippet) {\n      var unroll = '';\n\n      for (var i = parseInt(start); i < parseInt(end); i++) {\n        unroll += snippet.replace(/\\[ i \\]/g, '[ ' + i + ' ]');\n      }\n\n      return unroll;\n    }\n\n    return string.replace(pattern, replace);\n  }\n\n  function WebGLProgram(renderer, extensions, code, material, shader, parameters, capabilities) {\n    var gl = renderer.context;\n    var defines = material.defines;\n    var vertexShader = shader.vertexShader;\n    var fragmentShader = shader.fragmentShader;\n    var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n    if (parameters.shadowMapType === PCFShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n    } else if (parameters.shadowMapType === PCFSoftShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n    }\n\n    var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n    var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n    var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n    if (parameters.envMap) {\n      switch (material.envMap.mapping) {\n        case CubeReflectionMapping:\n        case CubeRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n          break;\n\n        case CubeUVReflectionMapping:\n        case CubeUVRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n          break;\n\n        case EquirectangularReflectionMapping:\n        case EquirectangularRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n          break;\n\n        case SphericalReflectionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n          break;\n      }\n\n      switch (material.envMap.mapping) {\n        case CubeRefractionMapping:\n        case EquirectangularRefractionMapping:\n          envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n          break;\n      }\n\n      switch (material.combine) {\n        case MultiplyOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n          break;\n\n        case MixOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n          break;\n\n        case AddOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n          break;\n      }\n    }\n\n    var gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0; // console.log( 'building new program ' );\n    //\n\n    var customExtensions = capabilities.isWebGL2 ? '' : generateExtensions(material.extensions, parameters, extensions);\n    var customDefines = generateDefines(defines); //\n\n    var program = gl.createProgram();\n    var prefixVertex, prefixFragment;\n\n    if (material.isRawShaderMaterial) {\n      prefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\n\n      if (prefixVertex.length > 0) {\n        prefixVertex += '\\n';\n      }\n\n      prefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\n\n      if (prefixFragment.length > 0) {\n        prefixFragment += '\\n';\n      }\n    } else {\n      prefixVertex = ['precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + shader.name, customDefines, parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && (capabilities.isWebGL2 || extensions.get('EXT_frag_depth')) ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_COLOR', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n      prefixFragment = [customExtensions, 'precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + shader.name, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + (parameters.alphaTest % 1 ? '' : '.0') : '', // add '.0' if integer\n      '#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.matcap ? '#define USE_MATCAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && (capabilities.isWebGL2 || extensions.get('EXT_frag_depth')) ? '#define USE_LOGDEPTHBUF_EXT' : '', parameters.envMap && (capabilities.isWebGL2 || extensions.get('EXT_shader_texture_lod')) ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n      parameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ? ShaderChunk['encodings_pars_fragment'] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n      parameters.mapEncoding ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.matcapEncoding ? getTexelDecodingFunction('matcapTexelToLinear', parameters.matcapEncoding) : '', parameters.envMapEncoding ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMapEncoding ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.outputEncoding ? getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding) : '', parameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n    }\n\n    vertexShader = parseIncludes(vertexShader);\n    vertexShader = replaceLightNums(vertexShader, parameters);\n    vertexShader = replaceClippingPlaneNums(vertexShader, parameters);\n    fragmentShader = parseIncludes(fragmentShader);\n    fragmentShader = replaceLightNums(fragmentShader, parameters);\n    fragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\n    vertexShader = unrollLoops(vertexShader);\n    fragmentShader = unrollLoops(fragmentShader);\n\n    if (capabilities.isWebGL2 && !material.isRawShaderMaterial) {\n      var isGLSL3ShaderMaterial = false;\n      var versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n      if (material.isShaderMaterial && vertexShader.match(versionRegex) !== null && fragmentShader.match(versionRegex) !== null) {\n        isGLSL3ShaderMaterial = true;\n        vertexShader = vertexShader.replace(versionRegex, '');\n        fragmentShader = fragmentShader.replace(versionRegex, '');\n      } // GLSL 3.0 conversion\n\n\n      prefixVertex = ['#version 300 es\\n', '#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') + '\\n' + prefixVertex;\n      prefixFragment = ['#version 300 es\\n', '#define varying in', isGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;', isGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad'].join('\\n') + '\\n' + prefixFragment;\n    }\n\n    var vertexGlsl = prefixVertex + vertexShader;\n    var fragmentGlsl = prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n    // console.log( '*FRAGMENT*', fragmentGlsl );\n\n    var glVertexShader = WebGLShader(gl, 35633, vertexGlsl);\n    var glFragmentShader = WebGLShader(gl, 35632, fragmentGlsl);\n    gl.attachShader(program, glVertexShader);\n    gl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n    if (material.index0AttributeName !== undefined) {\n      gl.bindAttribLocation(program, 0, material.index0AttributeName);\n    } else if (parameters.morphTargets === true) {\n      // programs with morphTargets displace position out of attribute 0\n      gl.bindAttribLocation(program, 0, 'position');\n    }\n\n    gl.linkProgram(program);\n    var programLog = gl.getProgramInfoLog(program).trim();\n    var vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\n    var fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\n    var runnable = true;\n    var haveDiagnostics = true; // console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n    // console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n    if (gl.getProgramParameter(program, 35714) === false) {\n      runnable = false;\n      console.error('THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter(program, 35715), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog);\n    } else if (programLog !== '') {\n      console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\n    } else if (vertexLog === '' || fragmentLog === '') {\n      haveDiagnostics = false;\n    }\n\n    if (haveDiagnostics) {\n      this.diagnostics = {\n        runnable: runnable,\n        material: material,\n        programLog: programLog,\n        vertexShader: {\n          log: vertexLog,\n          prefix: prefixVertex\n        },\n        fragmentShader: {\n          log: fragmentLog,\n          prefix: prefixFragment\n        }\n      };\n    } // clean up\n\n\n    gl.deleteShader(glVertexShader);\n    gl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n    var cachedUniforms;\n\n    this.getUniforms = function () {\n      if (cachedUniforms === undefined) {\n        cachedUniforms = new WebGLUniforms(gl, program, renderer);\n      }\n\n      return cachedUniforms;\n    }; // set up caching for attribute locations\n\n\n    var cachedAttributes;\n\n    this.getAttributes = function () {\n      if (cachedAttributes === undefined) {\n        cachedAttributes = fetchAttributeLocations(gl, program);\n      }\n\n      return cachedAttributes;\n    }; // free resource\n\n\n    this.destroy = function () {\n      gl.deleteProgram(program);\n      this.program = undefined;\n    }; // DEPRECATED\n\n\n    Object.defineProperties(this, {\n      uniforms: {\n        get: function get() {\n          console.warn('THREE.WebGLProgram: .uniforms is now .getUniforms().');\n          return this.getUniforms();\n        }\n      },\n      attributes: {\n        get: function get() {\n          console.warn('THREE.WebGLProgram: .attributes is now .getAttributes().');\n          return this.getAttributes();\n        }\n      }\n    }); //\n\n    this.name = shader.name;\n    this.id = programIdCount++;\n    this.code = code;\n    this.usedTimes = 1;\n    this.program = program;\n    this.vertexShader = glVertexShader;\n    this.fragmentShader = glFragmentShader;\n    return this;\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLPrograms(renderer, extensions, capabilities) {\n    var programs = [];\n    var shaderIDs = {\n      MeshDepthMaterial: 'depth',\n      MeshDistanceMaterial: 'distanceRGBA',\n      MeshNormalMaterial: 'normal',\n      MeshBasicMaterial: 'basic',\n      MeshLambertMaterial: 'lambert',\n      MeshPhongMaterial: 'phong',\n      MeshToonMaterial: 'phong',\n      MeshStandardMaterial: 'physical',\n      MeshPhysicalMaterial: 'physical',\n      MeshMatcapMaterial: 'matcap',\n      LineBasicMaterial: 'basic',\n      LineDashedMaterial: 'dashed',\n      PointsMaterial: 'points',\n      ShadowMaterial: 'shadow',\n      SpriteMaterial: 'sprite'\n    };\n    var parameterNames = [\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\", \"roughnessMap\", \"metalnessMap\", \"gradientMap\", \"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\", \"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\", \"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\", \"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\", \"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\", \"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights', \"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"];\n\n    function allocateBones(object) {\n      var skeleton = object.skeleton;\n      var bones = skeleton.bones;\n\n      if (capabilities.floatVertexTextures) {\n        return 1024;\n      } else {\n        // default for when object is not specified\n        // ( for example when prebuilding shader to be used with multiple objects )\n        //\n        //  - leave some extra space for other uniforms\n        //  - limit here is ANGLE's 254 max uniform vectors\n        //    (up to 54 should be safe)\n        var nVertexUniforms = capabilities.maxVertexUniforms;\n        var nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n        var maxBones = Math.min(nVertexMatrices, bones.length);\n\n        if (maxBones < bones.length) {\n          console.warn('THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.');\n          return 0;\n        }\n\n        return maxBones;\n      }\n    }\n\n    function getTextureEncodingFromMap(map, gammaOverrideLinear) {\n      var encoding;\n\n      if (!map) {\n        encoding = LinearEncoding;\n      } else if (map.isTexture) {\n        encoding = map.encoding;\n      } else if (map.isWebGLRenderTarget) {\n        console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\");\n        encoding = map.texture.encoding;\n      } // add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\n\n      if (encoding === LinearEncoding && gammaOverrideLinear) {\n        encoding = GammaEncoding;\n      }\n\n      return encoding;\n    }\n\n    this.getParameters = function (material, lights, shadows, fog, nClipPlanes, nClipIntersection, object) {\n      var shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n      // (not to blow over maxLights budget)\n\n      var maxBones = object.isSkinnedMesh ? allocateBones(object) : 0;\n      var precision = capabilities.precision;\n\n      if (material.precision !== null) {\n        precision = capabilities.getMaxPrecision(material.precision);\n\n        if (precision !== material.precision) {\n          console.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n        }\n      }\n\n      var currentRenderTarget = renderer.getRenderTarget();\n      var parameters = {\n        shaderID: shaderID,\n        precision: precision,\n        supportsVertexTextures: capabilities.vertexTextures,\n        outputEncoding: getTextureEncodingFromMap(!currentRenderTarget ? null : currentRenderTarget.texture, renderer.gammaOutput),\n        map: !!material.map,\n        mapEncoding: getTextureEncodingFromMap(material.map, renderer.gammaInput),\n        matcap: !!material.matcap,\n        matcapEncoding: getTextureEncodingFromMap(material.matcap, renderer.gammaInput),\n        envMap: !!material.envMap,\n        envMapMode: material.envMap && material.envMap.mapping,\n        envMapEncoding: getTextureEncodingFromMap(material.envMap, renderer.gammaInput),\n        envMapCubeUV: !!material.envMap && (material.envMap.mapping === CubeUVReflectionMapping || material.envMap.mapping === CubeUVRefractionMapping),\n        lightMap: !!material.lightMap,\n        aoMap: !!material.aoMap,\n        emissiveMap: !!material.emissiveMap,\n        emissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap, renderer.gammaInput),\n        bumpMap: !!material.bumpMap,\n        normalMap: !!material.normalMap,\n        objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n        displacementMap: !!material.displacementMap,\n        roughnessMap: !!material.roughnessMap,\n        metalnessMap: !!material.metalnessMap,\n        specularMap: !!material.specularMap,\n        alphaMap: !!material.alphaMap,\n        gradientMap: !!material.gradientMap,\n        combine: material.combine,\n        vertexColors: material.vertexColors,\n        fog: !!fog,\n        useFog: material.fog,\n        fogExp: fog && fog.isFogExp2,\n        flatShading: material.flatShading,\n        sizeAttenuation: material.sizeAttenuation,\n        logarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n        skinning: material.skinning && maxBones > 0,\n        maxBones: maxBones,\n        useVertexTexture: capabilities.floatVertexTextures,\n        morphTargets: material.morphTargets,\n        morphNormals: material.morphNormals,\n        maxMorphTargets: renderer.maxMorphTargets,\n        maxMorphNormals: renderer.maxMorphNormals,\n        numDirLights: lights.directional.length,\n        numPointLights: lights.point.length,\n        numSpotLights: lights.spot.length,\n        numRectAreaLights: lights.rectArea.length,\n        numHemiLights: lights.hemi.length,\n        numClippingPlanes: nClipPlanes,\n        numClipIntersection: nClipIntersection,\n        dithering: material.dithering,\n        shadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n        shadowMapType: renderer.shadowMap.type,\n        toneMapping: renderer.toneMapping,\n        physicallyCorrectLights: renderer.physicallyCorrectLights,\n        premultipliedAlpha: material.premultipliedAlpha,\n        alphaTest: material.alphaTest,\n        doubleSided: material.side === DoubleSide,\n        flipSided: material.side === BackSide,\n        depthPacking: material.depthPacking !== undefined ? material.depthPacking : false\n      };\n      return parameters;\n    };\n\n    this.getProgramCode = function (material, parameters) {\n      var array = [];\n\n      if (parameters.shaderID) {\n        array.push(parameters.shaderID);\n      } else {\n        array.push(material.fragmentShader);\n        array.push(material.vertexShader);\n      }\n\n      if (material.defines !== undefined) {\n        for (var name in material.defines) {\n          array.push(name);\n          array.push(material.defines[name]);\n        }\n      }\n\n      for (var i = 0; i < parameterNames.length; i++) {\n        array.push(parameters[parameterNames[i]]);\n      }\n\n      array.push(material.onBeforeCompile.toString());\n      array.push(renderer.gammaOutput);\n      array.push(renderer.gammaFactor);\n      return array.join();\n    };\n\n    this.acquireProgram = function (material, shader, parameters, code) {\n      var program; // Check if code has been already compiled\n\n      for (var p = 0, pl = programs.length; p < pl; p++) {\n        var programInfo = programs[p];\n\n        if (programInfo.code === code) {\n          program = programInfo;\n          ++program.usedTimes;\n          break;\n        }\n      }\n\n      if (program === undefined) {\n        program = new WebGLProgram(renderer, extensions, code, material, shader, parameters, capabilities);\n        programs.push(program);\n      }\n\n      return program;\n    };\n\n    this.releaseProgram = function (program) {\n      if (--program.usedTimes === 0) {\n        // Remove from unordered set\n        var i = programs.indexOf(program);\n        programs[i] = programs[programs.length - 1];\n        programs.pop(); // Free WebGL resources\n\n        program.destroy();\n      }\n    }; // Exposed for resource monitoring & error feedback via renderer.info:\n\n\n    this.programs = programs;\n  }\n  /**\n   * @author fordacious / fordacious.github.io\n   */\n\n\n  function WebGLProperties() {\n    var properties = new WeakMap();\n\n    function get(object) {\n      var map = properties.get(object);\n\n      if (map === undefined) {\n        map = {};\n        properties.set(object, map);\n      }\n\n      return map;\n    }\n\n    function remove(object) {\n      properties.delete(object);\n    }\n\n    function update(object, key, value) {\n      properties.get(object)[key] = value;\n    }\n\n    function dispose() {\n      properties = new WeakMap();\n    }\n\n    return {\n      get: get,\n      remove: remove,\n      update: update,\n      dispose: dispose\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function painterSortStable(a, b) {\n    if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    } else if (a.program && b.program && a.program !== b.program) {\n      return a.program.id - b.program.id;\n    } else if (a.material.id !== b.material.id) {\n      return a.material.id - b.material.id;\n    } else if (a.z !== b.z) {\n      return a.z - b.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function reversePainterSortStable(a, b) {\n    if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    }\n\n    if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function WebGLRenderList() {\n    var renderItems = [];\n    var renderItemsIndex = 0;\n    var opaque = [];\n    var transparent = [];\n\n    function init() {\n      renderItemsIndex = 0;\n      opaque.length = 0;\n      transparent.length = 0;\n    }\n\n    function getNextRenderItem(object, geometry, material, z, group) {\n      var renderItem = renderItems[renderItemsIndex];\n\n      if (renderItem === undefined) {\n        renderItem = {\n          id: object.id,\n          object: object,\n          geometry: geometry,\n          material: material,\n          program: material.program,\n          renderOrder: object.renderOrder,\n          z: z,\n          group: group\n        };\n        renderItems[renderItemsIndex] = renderItem;\n      } else {\n        renderItem.id = object.id;\n        renderItem.object = object;\n        renderItem.geometry = geometry;\n        renderItem.material = material;\n        renderItem.program = material.program;\n        renderItem.renderOrder = object.renderOrder;\n        renderItem.z = z;\n        renderItem.group = group;\n      }\n\n      renderItemsIndex++;\n      return renderItem;\n    }\n\n    function push(object, geometry, material, z, group) {\n      var renderItem = getNextRenderItem(object, geometry, material, z, group);\n      (material.transparent === true ? transparent : opaque).push(renderItem);\n    }\n\n    function unshift(object, geometry, material, z, group) {\n      var renderItem = getNextRenderItem(object, geometry, material, z, group);\n      (material.transparent === true ? transparent : opaque).unshift(renderItem);\n    }\n\n    function sort() {\n      if (opaque.length > 1) opaque.sort(painterSortStable);\n      if (transparent.length > 1) transparent.sort(reversePainterSortStable);\n    }\n\n    return {\n      opaque: opaque,\n      transparent: transparent,\n      init: init,\n      push: push,\n      unshift: unshift,\n      sort: sort\n    };\n  }\n\n  function WebGLRenderLists() {\n    var lists = {};\n\n    function get(scene, camera) {\n      var cameras = lists[scene.id];\n      var list;\n\n      if (cameras === undefined) {\n        list = new WebGLRenderList();\n        lists[scene.id] = {};\n        lists[scene.id][camera.id] = list;\n      } else {\n        list = cameras[camera.id];\n\n        if (list === undefined) {\n          list = new WebGLRenderList();\n          cameras[camera.id] = list;\n        }\n      }\n\n      return list;\n    }\n\n    function dispose() {\n      lists = {};\n    }\n\n    return {\n      get: get,\n      dispose: dispose\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function UniformsCache() {\n    var lights = {};\n    return {\n      get: function get(light) {\n        if (lights[light.id] !== undefined) {\n          return lights[light.id];\n        }\n\n        var uniforms;\n\n        switch (light.type) {\n          case 'DirectionalLight':\n            uniforms = {\n              direction: new Vector3(),\n              color: new Color(),\n              shadow: false,\n              shadowBias: 0,\n              shadowRadius: 1,\n              shadowMapSize: new Vector2()\n            };\n            break;\n\n          case 'SpotLight':\n            uniforms = {\n              position: new Vector3(),\n              direction: new Vector3(),\n              color: new Color(),\n              distance: 0,\n              coneCos: 0,\n              penumbraCos: 0,\n              decay: 0,\n              shadow: false,\n              shadowBias: 0,\n              shadowRadius: 1,\n              shadowMapSize: new Vector2()\n            };\n            break;\n\n          case 'PointLight':\n            uniforms = {\n              position: new Vector3(),\n              color: new Color(),\n              distance: 0,\n              decay: 0,\n              shadow: false,\n              shadowBias: 0,\n              shadowRadius: 1,\n              shadowMapSize: new Vector2(),\n              shadowCameraNear: 1,\n              shadowCameraFar: 1000\n            };\n            break;\n\n          case 'HemisphereLight':\n            uniforms = {\n              direction: new Vector3(),\n              skyColor: new Color(),\n              groundColor: new Color()\n            };\n            break;\n\n          case 'RectAreaLight':\n            uniforms = {\n              color: new Color(),\n              position: new Vector3(),\n              halfWidth: new Vector3(),\n              halfHeight: new Vector3() // TODO (abelnation): set RectAreaLight shadow uniforms\n\n            };\n            break;\n        }\n\n        lights[light.id] = uniforms;\n        return uniforms;\n      }\n    };\n  }\n\n  var count = 0;\n\n  function WebGLLights() {\n    var cache = new UniformsCache();\n    var state = {\n      id: count++,\n      hash: {\n        stateID: -1,\n        directionalLength: -1,\n        pointLength: -1,\n        spotLength: -1,\n        rectAreaLength: -1,\n        hemiLength: -1,\n        shadowsLength: -1\n      },\n      ambient: [0, 0, 0],\n      directional: [],\n      directionalShadowMap: [],\n      directionalShadowMatrix: [],\n      spot: [],\n      spotShadowMap: [],\n      spotShadowMatrix: [],\n      rectArea: [],\n      point: [],\n      pointShadowMap: [],\n      pointShadowMatrix: [],\n      hemi: []\n    };\n    var vector3 = new Vector3();\n    var matrix4 = new Matrix4();\n    var matrix42 = new Matrix4();\n\n    function setup(lights, shadows, camera) {\n      var r = 0,\n          g = 0,\n          b = 0;\n      var directionalLength = 0;\n      var pointLength = 0;\n      var spotLength = 0;\n      var rectAreaLength = 0;\n      var hemiLength = 0;\n      var viewMatrix = camera.matrixWorldInverse;\n\n      for (var i = 0, l = lights.length; i < l; i++) {\n        var light = lights[i];\n        var color = light.color;\n        var intensity = light.intensity;\n        var distance = light.distance;\n        var shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n        if (light.isAmbientLight) {\n          r += color.r * intensity;\n          g += color.g * intensity;\n          b += color.b * intensity;\n        } else if (light.isDirectionalLight) {\n          var uniforms = cache.get(light);\n          uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n          vector3.setFromMatrixPosition(light.target.matrixWorld);\n          uniforms.direction.sub(vector3);\n          uniforms.direction.transformDirection(viewMatrix);\n          uniforms.shadow = light.castShadow;\n\n          if (light.castShadow) {\n            var shadow = light.shadow;\n            uniforms.shadowBias = shadow.bias;\n            uniforms.shadowRadius = shadow.radius;\n            uniforms.shadowMapSize = shadow.mapSize;\n          }\n\n          state.directionalShadowMap[directionalLength] = shadowMap;\n          state.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n          state.directional[directionalLength] = uniforms;\n          directionalLength++;\n        } else if (light.isSpotLight) {\n          var uniforms = cache.get(light);\n          uniforms.position.setFromMatrixPosition(light.matrixWorld);\n          uniforms.position.applyMatrix4(viewMatrix);\n          uniforms.color.copy(color).multiplyScalar(intensity);\n          uniforms.distance = distance;\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n          vector3.setFromMatrixPosition(light.target.matrixWorld);\n          uniforms.direction.sub(vector3);\n          uniforms.direction.transformDirection(viewMatrix);\n          uniforms.coneCos = Math.cos(light.angle);\n          uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n          uniforms.decay = light.decay;\n          uniforms.shadow = light.castShadow;\n\n          if (light.castShadow) {\n            var shadow = light.shadow;\n            uniforms.shadowBias = shadow.bias;\n            uniforms.shadowRadius = shadow.radius;\n            uniforms.shadowMapSize = shadow.mapSize;\n          }\n\n          state.spotShadowMap[spotLength] = shadowMap;\n          state.spotShadowMatrix[spotLength] = light.shadow.matrix;\n          state.spot[spotLength] = uniforms;\n          spotLength++;\n        } else if (light.isRectAreaLight) {\n          var uniforms = cache.get(light); // (a) intensity is the total visible light emitted\n          //uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n          // (b) intensity is the brightness of the light\n\n          uniforms.color.copy(color).multiplyScalar(intensity);\n          uniforms.position.setFromMatrixPosition(light.matrixWorld);\n          uniforms.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\n\n          matrix42.identity();\n          matrix4.copy(light.matrixWorld);\n          matrix4.premultiply(viewMatrix);\n          matrix42.extractRotation(matrix4);\n          uniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n          uniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n          uniforms.halfWidth.applyMatrix4(matrix42);\n          uniforms.halfHeight.applyMatrix4(matrix42); // TODO (abelnation): RectAreaLight distance?\n          // uniforms.distance = distance;\n\n          state.rectArea[rectAreaLength] = uniforms;\n          rectAreaLength++;\n        } else if (light.isPointLight) {\n          var uniforms = cache.get(light);\n          uniforms.position.setFromMatrixPosition(light.matrixWorld);\n          uniforms.position.applyMatrix4(viewMatrix);\n          uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n          uniforms.distance = light.distance;\n          uniforms.decay = light.decay;\n          uniforms.shadow = light.castShadow;\n\n          if (light.castShadow) {\n            var shadow = light.shadow;\n            uniforms.shadowBias = shadow.bias;\n            uniforms.shadowRadius = shadow.radius;\n            uniforms.shadowMapSize = shadow.mapSize;\n            uniforms.shadowCameraNear = shadow.camera.near;\n            uniforms.shadowCameraFar = shadow.camera.far;\n          }\n\n          state.pointShadowMap[pointLength] = shadowMap;\n          state.pointShadowMatrix[pointLength] = light.shadow.matrix;\n          state.point[pointLength] = uniforms;\n          pointLength++;\n        } else if (light.isHemisphereLight) {\n          var uniforms = cache.get(light);\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n          uniforms.direction.transformDirection(viewMatrix);\n          uniforms.direction.normalize();\n          uniforms.skyColor.copy(light.color).multiplyScalar(intensity);\n          uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);\n          state.hemi[hemiLength] = uniforms;\n          hemiLength++;\n        }\n      }\n\n      state.ambient[0] = r;\n      state.ambient[1] = g;\n      state.ambient[2] = b;\n      state.directional.length = directionalLength;\n      state.spot.length = spotLength;\n      state.rectArea.length = rectAreaLength;\n      state.point.length = pointLength;\n      state.hemi.length = hemiLength;\n      state.hash.stateID = state.id;\n      state.hash.directionalLength = directionalLength;\n      state.hash.pointLength = pointLength;\n      state.hash.spotLength = spotLength;\n      state.hash.rectAreaLength = rectAreaLength;\n      state.hash.hemiLength = hemiLength;\n      state.hash.shadowsLength = shadows.length;\n    }\n\n    return {\n      setup: setup,\n      state: state\n    };\n  }\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n\n  function WebGLRenderState() {\n    var lights = new WebGLLights();\n    var lightsArray = [];\n    var shadowsArray = [];\n\n    function init() {\n      lightsArray.length = 0;\n      shadowsArray.length = 0;\n    }\n\n    function pushLight(light) {\n      lightsArray.push(light);\n    }\n\n    function pushShadow(shadowLight) {\n      shadowsArray.push(shadowLight);\n    }\n\n    function setupLights(camera) {\n      lights.setup(lightsArray, shadowsArray, camera);\n    }\n\n    var state = {\n      lightsArray: lightsArray,\n      shadowsArray: shadowsArray,\n      lights: lights\n    };\n    return {\n      init: init,\n      state: state,\n      setupLights: setupLights,\n      pushLight: pushLight,\n      pushShadow: pushShadow\n    };\n  }\n\n  function WebGLRenderStates() {\n    var renderStates = {};\n\n    function get(scene, camera) {\n      var renderState;\n\n      if (renderStates[scene.id] === undefined) {\n        renderState = new WebGLRenderState();\n        renderStates[scene.id] = {};\n        renderStates[scene.id][camera.id] = renderState;\n      } else {\n        if (renderStates[scene.id][camera.id] === undefined) {\n          renderState = new WebGLRenderState();\n          renderStates[scene.id][camera.id] = renderState;\n        } else {\n          renderState = renderStates[scene.id][camera.id];\n        }\n      }\n\n      return renderState;\n    }\n\n    function dispose() {\n      renderStates = {};\n    }\n\n    return {\n      get: get,\n      dispose: dispose\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author bhouston / https://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>\n   * }\n   */\n\n\n  function MeshDepthMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshDepthMaterial';\n    this.depthPacking = BasicDepthPacking;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.map = null;\n    this.alphaMap = null;\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n\n  MeshDepthMaterial.prototype = Object.create(Material.prototype);\n  MeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n  MeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n  MeshDepthMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.depthPacking = source.depthPacking;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    return this;\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *\n   *  referencePosition: <float>,\n   *  nearDistance: <float>,\n   *  farDistance: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>\n   *\n   * }\n   */\n\n\n  function MeshDistanceMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshDistanceMaterial';\n    this.referencePosition = new Vector3();\n    this.nearDistance = 1;\n    this.farDistance = 1000;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.map = null;\n    this.alphaMap = null;\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.fog = false;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n\n  MeshDistanceMaterial.prototype = Object.create(Material.prototype);\n  MeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n  MeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n  MeshDistanceMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.referencePosition.copy(source.referencePosition);\n    this.nearDistance = source.nearDistance;\n    this.farDistance = source.farDistance;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    return this;\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLShadowMap(_renderer, _objects, maxTextureSize) {\n    var _frustum = new Frustum(),\n        _projScreenMatrix = new Matrix4(),\n        _shadowMapSize = new Vector2(),\n        _maxShadowMapSize = new Vector2(maxTextureSize, maxTextureSize),\n        _lookTarget = new Vector3(),\n        _lightPositionWorld = new Vector3(),\n        _MorphingFlag = 1,\n        _SkinningFlag = 2,\n        _NumberOfMaterialVariants = (_MorphingFlag | _SkinningFlag) + 1,\n        _depthMaterials = new Array(_NumberOfMaterialVariants),\n        _distanceMaterials = new Array(_NumberOfMaterialVariants),\n        _materialCache = {};\n\n    var shadowSide = {\n      0: BackSide,\n      1: FrontSide,\n      2: DoubleSide\n    };\n    var cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\n    var cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\n    var cube2DViewPorts = [new Vector4(), new Vector4(), new Vector4(), new Vector4(), new Vector4(), new Vector4()]; // init\n\n    for (var i = 0; i !== _NumberOfMaterialVariants; ++i) {\n      var useMorphing = (i & _MorphingFlag) !== 0;\n      var useSkinning = (i & _SkinningFlag) !== 0;\n      var depthMaterial = new MeshDepthMaterial({\n        depthPacking: RGBADepthPacking,\n        morphTargets: useMorphing,\n        skinning: useSkinning\n      });\n      _depthMaterials[i] = depthMaterial; //\n\n      var distanceMaterial = new MeshDistanceMaterial({\n        morphTargets: useMorphing,\n        skinning: useSkinning\n      });\n      _distanceMaterials[i] = distanceMaterial;\n    } //\n\n\n    var scope = this;\n    this.enabled = false;\n    this.autoUpdate = true;\n    this.needsUpdate = false;\n    this.type = PCFShadowMap;\n\n    this.render = function (lights, scene, camera) {\n      if (scope.enabled === false) return;\n      if (scope.autoUpdate === false && scope.needsUpdate === false) return;\n      if (lights.length === 0) return; // TODO Clean up (needed in case of contextlost)\n\n      var _gl = _renderer.context;\n      var _state = _renderer.state; // Set GL state for depth map.\n\n      _state.disable(3042);\n\n      _state.buffers.color.setClear(1, 1, 1, 1);\n\n      _state.buffers.depth.setTest(true);\n\n      _state.setScissorTest(false); // render depth map\n\n\n      var faceCount;\n\n      for (var i = 0, il = lights.length; i < il; i++) {\n        var light = lights[i];\n        var shadow = light.shadow;\n        var isPointLight = light && light.isPointLight;\n\n        if (shadow === undefined) {\n          console.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n          continue;\n        }\n\n        var shadowCamera = shadow.camera;\n\n        _shadowMapSize.copy(shadow.mapSize);\n\n        _shadowMapSize.min(_maxShadowMapSize);\n\n        if (isPointLight) {\n          var vpWidth = _shadowMapSize.x;\n          var vpHeight = _shadowMapSize.y; // These viewports map a cube-map onto a 2D texture with the\n          // following orientation:\n          //\n          //  xzXZ\n          //   y Y\n          //\n          // X - Positive x direction\n          // x - Negative x direction\n          // Y - Positive y direction\n          // y - Negative y direction\n          // Z - Positive z direction\n          // z - Negative z direction\n          // positive X\n\n          cube2DViewPorts[0].set(vpWidth * 2, vpHeight, vpWidth, vpHeight); // negative X\n\n          cube2DViewPorts[1].set(0, vpHeight, vpWidth, vpHeight); // positive Z\n\n          cube2DViewPorts[2].set(vpWidth * 3, vpHeight, vpWidth, vpHeight); // negative Z\n\n          cube2DViewPorts[3].set(vpWidth, vpHeight, vpWidth, vpHeight); // positive Y\n\n          cube2DViewPorts[4].set(vpWidth * 3, 0, vpWidth, vpHeight); // negative Y\n\n          cube2DViewPorts[5].set(vpWidth, 0, vpWidth, vpHeight);\n          _shadowMapSize.x *= 4.0;\n          _shadowMapSize.y *= 2.0;\n        }\n\n        if (shadow.map === null) {\n          var pars = {\n            minFilter: NearestFilter,\n            magFilter: NearestFilter,\n            format: RGBAFormat\n          };\n          shadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n          shadow.map.texture.name = light.name + \".shadowMap\";\n          shadowCamera.updateProjectionMatrix();\n        }\n\n        if (shadow.isSpotLightShadow) {\n          shadow.update(light);\n        }\n\n        var shadowMap = shadow.map;\n        var shadowMatrix = shadow.matrix;\n\n        _lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n        shadowCamera.position.copy(_lightPositionWorld);\n\n        if (isPointLight) {\n          faceCount = 6; // for point lights we set the shadow matrix to be a translation-only matrix\n          // equal to inverse of the light's position\n\n          shadowMatrix.makeTranslation(-_lightPositionWorld.x, -_lightPositionWorld.y, -_lightPositionWorld.z);\n        } else {\n          faceCount = 1;\n\n          _lookTarget.setFromMatrixPosition(light.target.matrixWorld);\n\n          shadowCamera.lookAt(_lookTarget);\n          shadowCamera.updateMatrixWorld(); // compute shadow matrix\n\n          shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n          shadowMatrix.multiply(shadowCamera.projectionMatrix);\n          shadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n        }\n\n        _renderer.setRenderTarget(shadowMap);\n\n        _renderer.clear(); // render shadow map for each cube face (if omni-directional) or\n        // run a single pass if not\n\n\n        for (var face = 0; face < faceCount; face++) {\n          if (isPointLight) {\n            _lookTarget.copy(shadowCamera.position);\n\n            _lookTarget.add(cubeDirections[face]);\n\n            shadowCamera.up.copy(cubeUps[face]);\n            shadowCamera.lookAt(_lookTarget);\n            shadowCamera.updateMatrixWorld();\n            var vpDimensions = cube2DViewPorts[face];\n\n            _state.viewport(vpDimensions);\n          } // update camera matrices and frustum\n\n\n          _projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n          _frustum.setFromMatrix(_projScreenMatrix); // set object matrices & frustum culling\n\n\n          renderObject(scene, camera, shadowCamera, isPointLight);\n        }\n      }\n\n      scope.needsUpdate = false;\n    };\n\n    function getDepthMaterial(object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar) {\n      var geometry = object.geometry;\n      var result = null;\n      var materialVariants = _depthMaterials;\n      var customMaterial = object.customDepthMaterial;\n\n      if (isPointLight) {\n        materialVariants = _distanceMaterials;\n        customMaterial = object.customDistanceMaterial;\n      }\n\n      if (!customMaterial) {\n        var useMorphing = false;\n\n        if (material.morphTargets) {\n          if (geometry && geometry.isBufferGeometry) {\n            useMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n          } else if (geometry && geometry.isGeometry) {\n            useMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n          }\n        }\n\n        if (object.isSkinnedMesh && material.skinning === false) {\n          console.warn('THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object);\n        }\n\n        var useSkinning = object.isSkinnedMesh && material.skinning;\n        var variantIndex = 0;\n        if (useMorphing) variantIndex |= _MorphingFlag;\n        if (useSkinning) variantIndex |= _SkinningFlag;\n        result = materialVariants[variantIndex];\n      } else {\n        result = customMaterial;\n      }\n\n      if (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0) {\n        // in this case we need a unique material instance reflecting the\n        // appropriate state\n        var keyA = result.uuid,\n            keyB = material.uuid;\n        var materialsForVariant = _materialCache[keyA];\n\n        if (materialsForVariant === undefined) {\n          materialsForVariant = {};\n          _materialCache[keyA] = materialsForVariant;\n        }\n\n        var cachedMaterial = materialsForVariant[keyB];\n\n        if (cachedMaterial === undefined) {\n          cachedMaterial = result.clone();\n          materialsForVariant[keyB] = cachedMaterial;\n        }\n\n        result = cachedMaterial;\n      }\n\n      result.visible = material.visible;\n      result.wireframe = material.wireframe;\n      result.side = material.shadowSide != null ? material.shadowSide : shadowSide[material.side];\n      result.clipShadows = material.clipShadows;\n      result.clippingPlanes = material.clippingPlanes;\n      result.clipIntersection = material.clipIntersection;\n      result.wireframeLinewidth = material.wireframeLinewidth;\n      result.linewidth = material.linewidth;\n\n      if (isPointLight && result.isMeshDistanceMaterial) {\n        result.referencePosition.copy(lightPositionWorld);\n        result.nearDistance = shadowCameraNear;\n        result.farDistance = shadowCameraFar;\n      }\n\n      return result;\n    }\n\n    function renderObject(object, camera, shadowCamera, isPointLight) {\n      if (object.visible === false) return;\n      var visible = object.layers.test(camera.layers);\n\n      if (visible && (object.isMesh || object.isLine || object.isPoints)) {\n        if (object.castShadow && (!object.frustumCulled || _frustum.intersectsObject(object))) {\n          object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n          var geometry = _objects.update(object);\n\n          var material = object.material;\n\n          if (Array.isArray(material)) {\n            var groups = geometry.groups;\n\n            for (var k = 0, kl = groups.length; k < kl; k++) {\n              var group = groups[k];\n              var groupMaterial = material[group.materialIndex];\n\n              if (groupMaterial && groupMaterial.visible) {\n                var depthMaterial = getDepthMaterial(object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far);\n\n                _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n              }\n            }\n          } else if (material.visible) {\n            var depthMaterial = getDepthMaterial(object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far);\n\n            _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n          }\n        }\n      }\n\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        renderObject(children[i], camera, shadowCamera, isPointLight);\n      }\n    }\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLState(gl, extensions, utils, capabilities) {\n    function ColorBuffer() {\n      var locked = false;\n      var color = new Vector4();\n      var currentColorMask = null;\n      var currentColorClear = new Vector4(0, 0, 0, 0);\n      return {\n        setMask: function setMask(colorMask) {\n          if (currentColorMask !== colorMask && !locked) {\n            gl.colorMask(colorMask, colorMask, colorMask, colorMask);\n            currentColorMask = colorMask;\n          }\n        },\n        setLocked: function setLocked(lock) {\n          locked = lock;\n        },\n        setClear: function setClear(r, g, b, a, premultipliedAlpha) {\n          if (premultipliedAlpha === true) {\n            r *= a;\n            g *= a;\n            b *= a;\n          }\n\n          color.set(r, g, b, a);\n\n          if (currentColorClear.equals(color) === false) {\n            gl.clearColor(r, g, b, a);\n            currentColorClear.copy(color);\n          }\n        },\n        reset: function reset() {\n          locked = false;\n          currentColorMask = null;\n          currentColorClear.set(-1, 0, 0, 0); // set to invalid state\n        }\n      };\n    }\n\n    function DepthBuffer() {\n      var locked = false;\n      var currentDepthMask = null;\n      var currentDepthFunc = null;\n      var currentDepthClear = null;\n      return {\n        setTest: function setTest(depthTest) {\n          if (depthTest) {\n            enable(2929);\n          } else {\n            disable(2929);\n          }\n        },\n        setMask: function setMask(depthMask) {\n          if (currentDepthMask !== depthMask && !locked) {\n            gl.depthMask(depthMask);\n            currentDepthMask = depthMask;\n          }\n        },\n        setFunc: function setFunc(depthFunc) {\n          if (currentDepthFunc !== depthFunc) {\n            if (depthFunc) {\n              switch (depthFunc) {\n                case NeverDepth:\n                  gl.depthFunc(512);\n                  break;\n\n                case AlwaysDepth:\n                  gl.depthFunc(519);\n                  break;\n\n                case LessDepth:\n                  gl.depthFunc(513);\n                  break;\n\n                case LessEqualDepth:\n                  gl.depthFunc(515);\n                  break;\n\n                case EqualDepth:\n                  gl.depthFunc(514);\n                  break;\n\n                case GreaterEqualDepth:\n                  gl.depthFunc(518);\n                  break;\n\n                case GreaterDepth:\n                  gl.depthFunc(516);\n                  break;\n\n                case NotEqualDepth:\n                  gl.depthFunc(517);\n                  break;\n\n                default:\n                  gl.depthFunc(515);\n              }\n            } else {\n              gl.depthFunc(515);\n            }\n\n            currentDepthFunc = depthFunc;\n          }\n        },\n        setLocked: function setLocked(lock) {\n          locked = lock;\n        },\n        setClear: function setClear(depth) {\n          if (currentDepthClear !== depth) {\n            gl.clearDepth(depth);\n            currentDepthClear = depth;\n          }\n        },\n        reset: function reset() {\n          locked = false;\n          currentDepthMask = null;\n          currentDepthFunc = null;\n          currentDepthClear = null;\n        }\n      };\n    }\n\n    function StencilBuffer() {\n      var locked = false;\n      var currentStencilMask = null;\n      var currentStencilFunc = null;\n      var currentStencilRef = null;\n      var currentStencilFuncMask = null;\n      var currentStencilFail = null;\n      var currentStencilZFail = null;\n      var currentStencilZPass = null;\n      var currentStencilClear = null;\n      return {\n        setTest: function setTest(stencilTest) {\n          if (stencilTest) {\n            enable(2960);\n          } else {\n            disable(2960);\n          }\n        },\n        setMask: function setMask(stencilMask) {\n          if (currentStencilMask !== stencilMask && !locked) {\n            gl.stencilMask(stencilMask);\n            currentStencilMask = stencilMask;\n          }\n        },\n        setFunc: function setFunc(stencilFunc, stencilRef, stencilMask) {\n          if (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n            gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n            currentStencilFunc = stencilFunc;\n            currentStencilRef = stencilRef;\n            currentStencilFuncMask = stencilMask;\n          }\n        },\n        setOp: function setOp(stencilFail, stencilZFail, stencilZPass) {\n          if (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n            gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n            currentStencilFail = stencilFail;\n            currentStencilZFail = stencilZFail;\n            currentStencilZPass = stencilZPass;\n          }\n        },\n        setLocked: function setLocked(lock) {\n          locked = lock;\n        },\n        setClear: function setClear(stencil) {\n          if (currentStencilClear !== stencil) {\n            gl.clearStencil(stencil);\n            currentStencilClear = stencil;\n          }\n        },\n        reset: function reset() {\n          locked = false;\n          currentStencilMask = null;\n          currentStencilFunc = null;\n          currentStencilRef = null;\n          currentStencilFuncMask = null;\n          currentStencilFail = null;\n          currentStencilZFail = null;\n          currentStencilZPass = null;\n          currentStencilClear = null;\n        }\n      };\n    } //\n\n\n    var colorBuffer = new ColorBuffer();\n    var depthBuffer = new DepthBuffer();\n    var stencilBuffer = new StencilBuffer();\n    var maxVertexAttributes = gl.getParameter(34921);\n    var newAttributes = new Uint8Array(maxVertexAttributes);\n    var enabledAttributes = new Uint8Array(maxVertexAttributes);\n    var attributeDivisors = new Uint8Array(maxVertexAttributes);\n    var enabledCapabilities = {};\n    var compressedTextureFormats = null;\n    var currentProgram = null;\n    var currentBlendingEnabled = null;\n    var currentBlending = null;\n    var currentBlendEquation = null;\n    var currentBlendSrc = null;\n    var currentBlendDst = null;\n    var currentBlendEquationAlpha = null;\n    var currentBlendSrcAlpha = null;\n    var currentBlendDstAlpha = null;\n    var currentPremultipledAlpha = false;\n    var currentFlipSided = null;\n    var currentCullFace = null;\n    var currentLineWidth = null;\n    var currentPolygonOffsetFactor = null;\n    var currentPolygonOffsetUnits = null;\n    var maxTextures = gl.getParameter(35661);\n    var lineWidthAvailable = false;\n    var version = 0;\n    var glVersion = gl.getParameter(7938);\n\n    if (glVersion.indexOf('WebGL') !== -1) {\n      version = parseFloat(/^WebGL\\ ([0-9])/.exec(glVersion)[1]);\n      lineWidthAvailable = version >= 1.0;\n    } else if (glVersion.indexOf('OpenGL ES') !== -1) {\n      version = parseFloat(/^OpenGL\\ ES\\ ([0-9])/.exec(glVersion)[1]);\n      lineWidthAvailable = version >= 2.0;\n    }\n\n    var currentTextureSlot = null;\n    var currentBoundTextures = {};\n    var currentScissor = new Vector4();\n    var currentViewport = new Vector4();\n\n    function createTexture(type, target, count) {\n      var data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n      var texture = gl.createTexture();\n      gl.bindTexture(type, texture);\n      gl.texParameteri(type, 10241, 9728);\n      gl.texParameteri(type, 10240, 9728);\n\n      for (var i = 0; i < count; i++) {\n        gl.texImage2D(target + i, 0, 6408, 1, 1, 0, 6408, 5121, data);\n      }\n\n      return texture;\n    }\n\n    var emptyTextures = {};\n    emptyTextures[3553] = createTexture(3553, 3553, 1);\n    emptyTextures[34067] = createTexture(34067, 34069, 6); // init\n\n    colorBuffer.setClear(0, 0, 0, 1);\n    depthBuffer.setClear(1);\n    stencilBuffer.setClear(0);\n    enable(2929);\n    depthBuffer.setFunc(LessEqualDepth);\n    setFlipSided(false);\n    setCullFace(CullFaceBack);\n    enable(2884);\n    setBlending(NoBlending); //\n\n    function initAttributes() {\n      for (var i = 0, l = newAttributes.length; i < l; i++) {\n        newAttributes[i] = 0;\n      }\n    }\n\n    function enableAttribute(attribute) {\n      enableAttributeAndDivisor(attribute, 0);\n    }\n\n    function enableAttributeAndDivisor(attribute, meshPerAttribute) {\n      newAttributes[attribute] = 1;\n\n      if (enabledAttributes[attribute] === 0) {\n        gl.enableVertexAttribArray(attribute);\n        enabledAttributes[attribute] = 1;\n      }\n\n      if (attributeDivisors[attribute] !== meshPerAttribute) {\n        var extension = capabilities.isWebGL2 ? gl : extensions.get('ANGLE_instanced_arrays');\n        extension[capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](attribute, meshPerAttribute);\n        attributeDivisors[attribute] = meshPerAttribute;\n      }\n    }\n\n    function disableUnusedAttributes() {\n      for (var i = 0, l = enabledAttributes.length; i !== l; ++i) {\n        if (enabledAttributes[i] !== newAttributes[i]) {\n          gl.disableVertexAttribArray(i);\n          enabledAttributes[i] = 0;\n        }\n      }\n    }\n\n    function enable(id) {\n      if (enabledCapabilities[id] !== true) {\n        gl.enable(id);\n        enabledCapabilities[id] = true;\n      }\n    }\n\n    function disable(id) {\n      if (enabledCapabilities[id] !== false) {\n        gl.disable(id);\n        enabledCapabilities[id] = false;\n      }\n    }\n\n    function getCompressedTextureFormats() {\n      if (compressedTextureFormats === null) {\n        compressedTextureFormats = [];\n\n        if (extensions.get('WEBGL_compressed_texture_pvrtc') || extensions.get('WEBGL_compressed_texture_s3tc') || extensions.get('WEBGL_compressed_texture_etc1') || extensions.get('WEBGL_compressed_texture_astc')) {\n          var formats = gl.getParameter(34467);\n\n          for (var i = 0; i < formats.length; i++) {\n            compressedTextureFormats.push(formats[i]);\n          }\n        }\n      }\n\n      return compressedTextureFormats;\n    }\n\n    function useProgram(program) {\n      if (currentProgram !== program) {\n        gl.useProgram(program);\n        currentProgram = program;\n        return true;\n      }\n\n      return false;\n    }\n\n    function setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n      if (blending === NoBlending) {\n        if (currentBlendingEnabled) {\n          disable(3042);\n          currentBlendingEnabled = false;\n        }\n\n        return;\n      }\n\n      if (!currentBlendingEnabled) {\n        enable(3042);\n        currentBlendingEnabled = true;\n      }\n\n      if (blending !== CustomBlending) {\n        if (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n          if (currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation) {\n            gl.blendEquation(32774);\n            currentBlendEquation = AddEquation;\n            currentBlendEquationAlpha = AddEquation;\n          }\n\n          if (premultipliedAlpha) {\n            switch (blending) {\n              case NormalBlending:\n                gl.blendFuncSeparate(1, 771, 1, 771);\n                break;\n\n              case AdditiveBlending:\n                gl.blendFunc(1, 1);\n                break;\n\n              case SubtractiveBlending:\n                gl.blendFuncSeparate(0, 0, 769, 771);\n                break;\n\n              case MultiplyBlending:\n                gl.blendFuncSeparate(0, 768, 0, 770);\n                break;\n\n              default:\n                console.error('THREE.WebGLState: Invalid blending: ', blending);\n                break;\n            }\n          } else {\n            switch (blending) {\n              case NormalBlending:\n                gl.blendFuncSeparate(770, 771, 1, 771);\n                break;\n\n              case AdditiveBlending:\n                gl.blendFunc(770, 1);\n                break;\n\n              case SubtractiveBlending:\n                gl.blendFunc(0, 769);\n                break;\n\n              case MultiplyBlending:\n                gl.blendFunc(0, 768);\n                break;\n\n              default:\n                console.error('THREE.WebGLState: Invalid blending: ', blending);\n                break;\n            }\n          }\n\n          currentBlendSrc = null;\n          currentBlendDst = null;\n          currentBlendSrcAlpha = null;\n          currentBlendDstAlpha = null;\n          currentBlending = blending;\n          currentPremultipledAlpha = premultipliedAlpha;\n        }\n\n        return;\n      } // custom blending\n\n\n      blendEquationAlpha = blendEquationAlpha || blendEquation;\n      blendSrcAlpha = blendSrcAlpha || blendSrc;\n      blendDstAlpha = blendDstAlpha || blendDst;\n\n      if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n        gl.blendEquationSeparate(utils.convert(blendEquation), utils.convert(blendEquationAlpha));\n        currentBlendEquation = blendEquation;\n        currentBlendEquationAlpha = blendEquationAlpha;\n      }\n\n      if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n        gl.blendFuncSeparate(utils.convert(blendSrc), utils.convert(blendDst), utils.convert(blendSrcAlpha), utils.convert(blendDstAlpha));\n        currentBlendSrc = blendSrc;\n        currentBlendDst = blendDst;\n        currentBlendSrcAlpha = blendSrcAlpha;\n        currentBlendDstAlpha = blendDstAlpha;\n      }\n\n      currentBlending = blending;\n      currentPremultipledAlpha = null;\n    }\n\n    function setMaterial(material, frontFaceCW) {\n      material.side === DoubleSide ? disable(2884) : enable(2884);\n      var flipSided = material.side === BackSide;\n      if (frontFaceCW) flipSided = !flipSided;\n      setFlipSided(flipSided);\n      material.blending === NormalBlending && material.transparent === false ? setBlending(NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n      depthBuffer.setFunc(material.depthFunc);\n      depthBuffer.setTest(material.depthTest);\n      depthBuffer.setMask(material.depthWrite);\n      colorBuffer.setMask(material.colorWrite);\n      setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n    } //\n\n\n    function setFlipSided(flipSided) {\n      if (currentFlipSided !== flipSided) {\n        if (flipSided) {\n          gl.frontFace(2304);\n        } else {\n          gl.frontFace(2305);\n        }\n\n        currentFlipSided = flipSided;\n      }\n    }\n\n    function setCullFace(cullFace) {\n      if (cullFace !== CullFaceNone) {\n        enable(2884);\n\n        if (cullFace !== currentCullFace) {\n          if (cullFace === CullFaceBack) {\n            gl.cullFace(1029);\n          } else if (cullFace === CullFaceFront) {\n            gl.cullFace(1028);\n          } else {\n            gl.cullFace(1032);\n          }\n        }\n      } else {\n        disable(2884);\n      }\n\n      currentCullFace = cullFace;\n    }\n\n    function setLineWidth(width) {\n      if (width !== currentLineWidth) {\n        if (lineWidthAvailable) gl.lineWidth(width);\n        currentLineWidth = width;\n      }\n    }\n\n    function setPolygonOffset(polygonOffset, factor, units) {\n      if (polygonOffset) {\n        enable(32823);\n\n        if (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n          gl.polygonOffset(factor, units);\n          currentPolygonOffsetFactor = factor;\n          currentPolygonOffsetUnits = units;\n        }\n      } else {\n        disable(32823);\n      }\n    }\n\n    function setScissorTest(scissorTest) {\n      if (scissorTest) {\n        enable(3089);\n      } else {\n        disable(3089);\n      }\n    } // texture\n\n\n    function activeTexture(webglSlot) {\n      if (webglSlot === undefined) webglSlot = 33984 + maxTextures - 1;\n\n      if (currentTextureSlot !== webglSlot) {\n        gl.activeTexture(webglSlot);\n        currentTextureSlot = webglSlot;\n      }\n    }\n\n    function bindTexture(webglType, webglTexture) {\n      if (currentTextureSlot === null) {\n        activeTexture();\n      }\n\n      var boundTexture = currentBoundTextures[currentTextureSlot];\n\n      if (boundTexture === undefined) {\n        boundTexture = {\n          type: undefined,\n          texture: undefined\n        };\n        currentBoundTextures[currentTextureSlot] = boundTexture;\n      }\n\n      if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n        gl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n        boundTexture.type = webglType;\n        boundTexture.texture = webglTexture;\n      }\n    }\n\n    function compressedTexImage2D() {\n      try {\n        gl.compressedTexImage2D.apply(gl, arguments);\n      } catch (error) {\n        console.error('THREE.WebGLState:', error);\n      }\n    }\n\n    function texImage2D() {\n      try {\n        gl.texImage2D.apply(gl, arguments);\n      } catch (error) {\n        console.error('THREE.WebGLState:', error);\n      }\n    }\n\n    function texImage3D() {\n      try {\n        gl.texImage3D.apply(gl, arguments);\n      } catch (error) {\n        console.error('THREE.WebGLState:', error);\n      }\n    } //\n\n\n    function scissor(scissor) {\n      if (currentScissor.equals(scissor) === false) {\n        gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n        currentScissor.copy(scissor);\n      }\n    }\n\n    function viewport(viewport) {\n      if (currentViewport.equals(viewport) === false) {\n        gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n        currentViewport.copy(viewport);\n      }\n    } //\n\n\n    function reset() {\n      for (var i = 0; i < enabledAttributes.length; i++) {\n        if (enabledAttributes[i] === 1) {\n          gl.disableVertexAttribArray(i);\n          enabledAttributes[i] = 0;\n        }\n      }\n\n      enabledCapabilities = {};\n      compressedTextureFormats = null;\n      currentTextureSlot = null;\n      currentBoundTextures = {};\n      currentProgram = null;\n      currentBlending = null;\n      currentFlipSided = null;\n      currentCullFace = null;\n      colorBuffer.reset();\n      depthBuffer.reset();\n      stencilBuffer.reset();\n    }\n\n    return {\n      buffers: {\n        color: colorBuffer,\n        depth: depthBuffer,\n        stencil: stencilBuffer\n      },\n      initAttributes: initAttributes,\n      enableAttribute: enableAttribute,\n      enableAttributeAndDivisor: enableAttributeAndDivisor,\n      disableUnusedAttributes: disableUnusedAttributes,\n      enable: enable,\n      disable: disable,\n      getCompressedTextureFormats: getCompressedTextureFormats,\n      useProgram: useProgram,\n      setBlending: setBlending,\n      setMaterial: setMaterial,\n      setFlipSided: setFlipSided,\n      setCullFace: setCullFace,\n      setLineWidth: setLineWidth,\n      setPolygonOffset: setPolygonOffset,\n      setScissorTest: setScissorTest,\n      activeTexture: activeTexture,\n      bindTexture: bindTexture,\n      compressedTexImage2D: compressedTexImage2D,\n      texImage2D: texImage2D,\n      texImage3D: texImage3D,\n      scissor: scissor,\n      viewport: viewport,\n      reset: reset\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info) {\n    var _videoTextures = {};\n\n    var _canvas; //\n\n\n    function clampToMaxSize(image, maxSize) {\n      if (image.width > maxSize || image.height > maxSize) {\n        if ('data' in image) {\n          console.warn('THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').');\n          return;\n        } // Warning: Scaling through the canvas will only work with images that use\n        // premultiplied alpha.\n\n\n        var scale = maxSize / Math.max(image.width, image.height);\n        var canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n        canvas.width = Math.floor(image.width * scale);\n        canvas.height = Math.floor(image.height * scale);\n        var context = canvas.getContext('2d');\n        context.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n        console.warn('THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height);\n        return canvas;\n      }\n\n      return image;\n    }\n\n    function isPowerOfTwo(image) {\n      return _Math.isPowerOfTwo(image.width) && _Math.isPowerOfTwo(image.height);\n    }\n\n    function makePowerOfTwo(image) {\n      if (image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap) {\n        if (_canvas === undefined) _canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n        _canvas.width = _Math.floorPowerOfTwo(image.width);\n        _canvas.height = _Math.floorPowerOfTwo(image.height);\n\n        var context = _canvas.getContext('2d');\n\n        context.drawImage(image, 0, 0, _canvas.width, _canvas.height);\n        console.warn('THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height);\n        return _canvas;\n      }\n\n      return image;\n    }\n\n    function textureNeedsPowerOfTwo(texture) {\n      if (capabilities.isWebGL2) return false;\n      return texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n    }\n\n    function textureNeedsGenerateMipmaps(texture, isPowerOfTwo) {\n      return texture.generateMipmaps && isPowerOfTwo && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n    }\n\n    function generateMipmap(target, texture, width, height) {\n      _gl.generateMipmap(target);\n\n      var textureProperties = properties.get(texture); // Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\n      textureProperties.__maxMipLevel = Math.log(Math.max(width, height)) * Math.LOG2E;\n    }\n\n    function getInternalFormat(glFormat, glType) {\n      if (!capabilities.isWebGL2) return glFormat;\n\n      if (glFormat === 6403) {\n        if (glType === 5126) return 33326;\n        if (glType === 5131) return 33325;\n        if (glType === 5121) return 33321;\n      }\n\n      if (glFormat === 6407) {\n        if (glType === 5126) return 34837;\n        if (glType === 5131) return 34843;\n        if (glType === 5121) return 32849;\n      }\n\n      if (glFormat === 6408) {\n        if (glType === 5126) return 34836;\n        if (glType === 5131) return 34842;\n        if (glType === 5121) return 32856;\n      }\n\n      return glFormat;\n    } // Fallback filters for non-power-of-2 textures\n\n\n    function filterFallback(f) {\n      if (f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter) {\n        return 9728;\n      }\n\n      return 9729;\n    } //\n\n\n    function onTextureDispose(event) {\n      var texture = event.target;\n      texture.removeEventListener('dispose', onTextureDispose);\n      deallocateTexture(texture);\n\n      if (texture.isVideoTexture) {\n        delete _videoTextures[texture.id];\n      }\n\n      info.memory.textures--;\n    }\n\n    function onRenderTargetDispose(event) {\n      var renderTarget = event.target;\n      renderTarget.removeEventListener('dispose', onRenderTargetDispose);\n      deallocateRenderTarget(renderTarget);\n      info.memory.textures--;\n    } //\n\n\n    function deallocateTexture(texture) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.image && textureProperties.__image__webglTextureCube) {\n        // cube texture\n        _gl.deleteTexture(textureProperties.__image__webglTextureCube);\n      } else {\n        // 2D texture\n        if (textureProperties.__webglInit === undefined) return;\n\n        _gl.deleteTexture(textureProperties.__webglTexture);\n      } // remove all webgl properties\n\n\n      properties.remove(texture);\n    }\n\n    function deallocateRenderTarget(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var textureProperties = properties.get(renderTarget.texture);\n      if (!renderTarget) return;\n\n      if (textureProperties.__webglTexture !== undefined) {\n        _gl.deleteTexture(textureProperties.__webglTexture);\n      }\n\n      if (renderTarget.depthTexture) {\n        renderTarget.depthTexture.dispose();\n      }\n\n      if (renderTarget.isWebGLRenderTargetCube) {\n        for (var i = 0; i < 6; i++) {\n          _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n          if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n        }\n      } else {\n        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n        if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n      }\n\n      properties.remove(renderTarget.texture);\n      properties.remove(renderTarget);\n    } //\n\n\n    function setTexture2D(texture, slot) {\n      var textureProperties = properties.get(texture);\n      if (texture.isVideoTexture) updateVideoTexture(texture);\n\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        var image = texture.image;\n\n        if (image === undefined) {\n          console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');\n        } else if (image.complete === false) {\n          console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');\n        } else {\n          uploadTexture(textureProperties, texture, slot);\n          return;\n        }\n      }\n\n      state.activeTexture(33984 + slot);\n      state.bindTexture(3553, textureProperties.__webglTexture);\n    }\n\n    function setTexture3D(texture, slot) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        uploadTexture(textureProperties, texture, slot);\n        return;\n      }\n\n      state.activeTexture(33984 + slot);\n      state.bindTexture(32879, textureProperties.__webglTexture);\n    }\n\n    function setTextureCube(texture, slot) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.image.length === 6) {\n        if (texture.version > 0 && textureProperties.__version !== texture.version) {\n          if (!textureProperties.__image__webglTextureCube) {\n            texture.addEventListener('dispose', onTextureDispose);\n            textureProperties.__image__webglTextureCube = _gl.createTexture();\n            info.memory.textures++;\n          }\n\n          state.activeTexture(33984 + slot);\n          state.bindTexture(34067, textureProperties.__image__webglTextureCube);\n\n          _gl.pixelStorei(37440, texture.flipY);\n\n          var isCompressed = texture && texture.isCompressedTexture;\n          var isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\n          var cubeImage = [];\n\n          for (var i = 0; i < 6; i++) {\n            if (!isCompressed && !isDataTexture) {\n              cubeImage[i] = clampToMaxSize(texture.image[i], capabilities.maxCubemapSize);\n            } else {\n              cubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n            }\n          }\n\n          var image = cubeImage[0],\n              isPowerOfTwoImage = isPowerOfTwo(image),\n              glFormat = utils.convert(texture.format),\n              glType = utils.convert(texture.type),\n              glInternalFormat = getInternalFormat(glFormat, glType);\n          setTextureParameters(34067, texture, isPowerOfTwoImage);\n\n          for (var i = 0; i < 6; i++) {\n            if (!isCompressed) {\n              if (isDataTexture) {\n                state.texImage2D(34069 + i, 0, glInternalFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n              } else {\n                state.texImage2D(34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[i]);\n              }\n            } else {\n              var mipmap,\n                  mipmaps = cubeImage[i].mipmaps;\n\n              for (var j = 0, jl = mipmaps.length; j < jl; j++) {\n                mipmap = mipmaps[j];\n\n                if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n                  if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n                    state.compressedTexImage2D(34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n                  } else {\n                    console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');\n                  }\n                } else {\n                  state.texImage2D(34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n                }\n              }\n            }\n          }\n\n          if (!isCompressed) {\n            textureProperties.__maxMipLevel = 0;\n          } else {\n            textureProperties.__maxMipLevel = mipmaps.length - 1;\n          }\n\n          if (textureNeedsGenerateMipmaps(texture, isPowerOfTwoImage)) {\n            // We assume images for cube map have the same size.\n            generateMipmap(34067, texture, image.width, image.height);\n          }\n\n          textureProperties.__version = texture.version;\n          if (texture.onUpdate) texture.onUpdate(texture);\n        } else {\n          state.activeTexture(33984 + slot);\n          state.bindTexture(34067, textureProperties.__image__webglTextureCube);\n        }\n      }\n    }\n\n    function setTextureCubeDynamic(texture, slot) {\n      state.activeTexture(33984 + slot);\n      state.bindTexture(34067, properties.get(texture).__webglTexture);\n    }\n\n    function setTextureParameters(textureType, texture, isPowerOfTwoImage) {\n      var extension;\n\n      if (isPowerOfTwoImage) {\n        _gl.texParameteri(textureType, 10242, utils.convert(texture.wrapS));\n\n        _gl.texParameteri(textureType, 10243, utils.convert(texture.wrapT));\n\n        _gl.texParameteri(textureType, 10240, utils.convert(texture.magFilter));\n\n        _gl.texParameteri(textureType, 10241, utils.convert(texture.minFilter));\n      } else {\n        _gl.texParameteri(textureType, 10242, 33071);\n\n        _gl.texParameteri(textureType, 10243, 33071);\n\n        if (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\n          console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');\n        }\n\n        _gl.texParameteri(textureType, 10240, filterFallback(texture.magFilter));\n\n        _gl.texParameteri(textureType, 10241, filterFallback(texture.minFilter));\n\n        if (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\n          console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');\n        }\n      }\n\n      extension = extensions.get('EXT_texture_filter_anisotropic');\n\n      if (extension) {\n        if (texture.type === FloatType && extensions.get('OES_texture_float_linear') === null) return;\n        if (texture.type === HalfFloatType && (capabilities.isWebGL2 || extensions.get('OES_texture_half_float_linear')) === null) return;\n\n        if (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n          _gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\n\n          properties.get(texture).__currentAnisotropy = texture.anisotropy;\n        }\n      }\n    }\n\n    function uploadTexture(textureProperties, texture, slot) {\n      var textureType;\n\n      if (texture.isDataTexture3D) {\n        textureType = 32879;\n      } else {\n        textureType = 3553;\n      }\n\n      if (textureProperties.__webglInit === undefined) {\n        textureProperties.__webglInit = true;\n        texture.addEventListener('dispose', onTextureDispose);\n        textureProperties.__webglTexture = _gl.createTexture();\n        info.memory.textures++;\n      }\n\n      state.activeTexture(33984 + slot);\n      state.bindTexture(textureType, textureProperties.__webglTexture);\n\n      _gl.pixelStorei(37440, texture.flipY);\n\n      _gl.pixelStorei(37441, texture.premultiplyAlpha);\n\n      _gl.pixelStorei(3317, texture.unpackAlignment);\n\n      var image = clampToMaxSize(texture.image, capabilities.maxTextureSize);\n\n      if (textureNeedsPowerOfTwo(texture) && isPowerOfTwo(image) === false) {\n        image = makePowerOfTwo(image);\n      }\n\n      var isPowerOfTwoImage = isPowerOfTwo(image),\n          glFormat = utils.convert(texture.format),\n          glType = utils.convert(texture.type),\n          glInternalFormat = getInternalFormat(glFormat, glType);\n      setTextureParameters(textureType, texture, isPowerOfTwoImage);\n      var mipmap,\n          mipmaps = texture.mipmaps;\n\n      if (texture.isDepthTexture) {\n        // populate depth texture with dummy data\n        glInternalFormat = 6402;\n\n        if (texture.type === FloatType) {\n          if (!capabilities.isWebGL2) throw new Error('Float Depth Texture only supported in WebGL2.0');\n          glInternalFormat = 36012;\n        } else if (capabilities.isWebGL2) {\n          // WebGL 2.0 requires signed internalformat for glTexImage2D\n          glInternalFormat = 33189;\n        }\n\n        if (texture.format === DepthFormat && glInternalFormat === 6402) {\n          // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n          // DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n          if (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\n            console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');\n            texture.type = UnsignedShortType;\n            glType = utils.convert(texture.type);\n          }\n        } // Depth stencil textures need the DEPTH_STENCIL internal format\n        // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n\n        if (texture.format === DepthStencilFormat) {\n          glInternalFormat = 34041; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n          // DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n          if (texture.type !== UnsignedInt248Type) {\n            console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');\n            texture.type = UnsignedInt248Type;\n            glType = utils.convert(texture.type);\n          }\n        }\n\n        state.texImage2D(3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null);\n      } else if (texture.isDataTexture) {\n        // use manually created mipmaps if available\n        // if there are no manual mipmaps\n        // set 0 level mipmap and then use GL to generate other mipmap levels\n        if (mipmaps.length > 0 && isPowerOfTwoImage) {\n          for (var i = 0, il = mipmaps.length; i < il; i++) {\n            mipmap = mipmaps[i];\n            state.texImage2D(3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n          }\n\n          texture.generateMipmaps = false;\n          textureProperties.__maxMipLevel = mipmaps.length - 1;\n        } else {\n          state.texImage2D(3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data);\n          textureProperties.__maxMipLevel = 0;\n        }\n      } else if (texture.isCompressedTexture) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n\n          if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n            if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n              state.compressedTexImage2D(3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n            } else {\n              console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');\n            }\n          } else {\n            state.texImage2D(3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n          }\n        }\n\n        textureProperties.__maxMipLevel = mipmaps.length - 1;\n      } else if (texture.isDataTexture3D) {\n        state.texImage3D(32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n        textureProperties.__maxMipLevel = 0;\n      } else {\n        // regular Texture (image, video, canvas)\n        // use manually created mipmaps if available\n        // if there are no manual mipmaps\n        // set 0 level mipmap and then use GL to generate other mipmap levels\n        if (mipmaps.length > 0 && isPowerOfTwoImage) {\n          for (var i = 0, il = mipmaps.length; i < il; i++) {\n            mipmap = mipmaps[i];\n            state.texImage2D(3553, i, glInternalFormat, glFormat, glType, mipmap);\n          }\n\n          texture.generateMipmaps = false;\n          textureProperties.__maxMipLevel = mipmaps.length - 1;\n        } else {\n          state.texImage2D(3553, 0, glInternalFormat, glFormat, glType, image);\n          textureProperties.__maxMipLevel = 0;\n        }\n      }\n\n      if (textureNeedsGenerateMipmaps(texture, isPowerOfTwoImage)) {\n        generateMipmap(3553, texture, image.width, image.height);\n      }\n\n      textureProperties.__version = texture.version;\n      if (texture.onUpdate) texture.onUpdate(texture);\n    } // Render targets\n    // Setup storage for target texture and bind it to correct framebuffer\n\n\n    function setupFrameBufferTexture(framebuffer, renderTarget, attachment, textureTarget) {\n      var glFormat = utils.convert(renderTarget.texture.format);\n      var glType = utils.convert(renderTarget.texture.type);\n      var glInternalFormat = getInternalFormat(glFormat, glType);\n      state.texImage2D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\n      _gl.bindFramebuffer(36160, framebuffer);\n\n      _gl.framebufferTexture2D(36160, attachment, textureTarget, properties.get(renderTarget.texture).__webglTexture, 0);\n\n      _gl.bindFramebuffer(36160, null);\n    } // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n    function setupRenderBufferStorage(renderbuffer, renderTarget) {\n      _gl.bindRenderbuffer(36161, renderbuffer);\n\n      if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n        _gl.renderbufferStorage(36161, 33189, renderTarget.width, renderTarget.height);\n\n        _gl.framebufferRenderbuffer(36160, 36096, 36161, renderbuffer);\n      } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n        _gl.renderbufferStorage(36161, 34041, renderTarget.width, renderTarget.height);\n\n        _gl.framebufferRenderbuffer(36160, 33306, 36161, renderbuffer);\n      } else {\n        // FIXME: We don't support !depth !stencil\n        _gl.renderbufferStorage(36161, 32854, renderTarget.width, renderTarget.height);\n      }\n\n      _gl.bindRenderbuffer(36161, null);\n    } // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n    function setupDepthTexture(framebuffer, renderTarget) {\n      var isCube = renderTarget && renderTarget.isWebGLRenderTargetCube;\n      if (isCube) throw new Error('Depth Texture with cube render targets is not supported');\n\n      _gl.bindFramebuffer(36160, framebuffer);\n\n      if (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\n        throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n      } // upload an empty depth texture with framebuffer size\n\n\n      if (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n        renderTarget.depthTexture.image.width = renderTarget.width;\n        renderTarget.depthTexture.image.height = renderTarget.height;\n        renderTarget.depthTexture.needsUpdate = true;\n      }\n\n      setTexture2D(renderTarget.depthTexture, 0);\n\n      var webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n      if (renderTarget.depthTexture.format === DepthFormat) {\n        _gl.framebufferTexture2D(36160, 36096, 3553, webglDepthTexture, 0);\n      } else if (renderTarget.depthTexture.format === DepthStencilFormat) {\n        _gl.framebufferTexture2D(36160, 33306, 3553, webglDepthTexture, 0);\n      } else {\n        throw new Error('Unknown depthTexture format');\n      }\n    } // Setup GL resources for a non-texture depth buffer\n\n\n    function setupDepthRenderbuffer(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var isCube = renderTarget.isWebGLRenderTargetCube === true;\n\n      if (renderTarget.depthTexture) {\n        if (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n        setupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n      } else {\n        if (isCube) {\n          renderTargetProperties.__webglDepthbuffer = [];\n\n          for (var i = 0; i < 6; i++) {\n            _gl.bindFramebuffer(36160, renderTargetProperties.__webglFramebuffer[i]);\n\n            renderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n            setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget);\n          }\n        } else {\n          _gl.bindFramebuffer(36160, renderTargetProperties.__webglFramebuffer);\n\n          renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n          setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget);\n        }\n      }\n\n      _gl.bindFramebuffer(36160, null);\n    } // Set up GL resources for the render target\n\n\n    function setupRenderTarget(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var textureProperties = properties.get(renderTarget.texture);\n      renderTarget.addEventListener('dispose', onRenderTargetDispose);\n      textureProperties.__webglTexture = _gl.createTexture();\n      info.memory.textures++;\n      var isCube = renderTarget.isWebGLRenderTargetCube === true;\n      var isTargetPowerOfTwo = isPowerOfTwo(renderTarget); // Setup framebuffer\n\n      if (isCube) {\n        renderTargetProperties.__webglFramebuffer = [];\n\n        for (var i = 0; i < 6; i++) {\n          renderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n        }\n      } else {\n        renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n      } // Setup color buffer\n\n\n      if (isCube) {\n        state.bindTexture(34067, textureProperties.__webglTexture);\n        setTextureParameters(34067, renderTarget.texture, isTargetPowerOfTwo);\n\n        for (var i = 0; i < 6; i++) {\n          setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, 36064, 34069 + i);\n        }\n\n        if (textureNeedsGenerateMipmaps(renderTarget.texture, isTargetPowerOfTwo)) {\n          generateMipmap(34067, renderTarget.texture, renderTarget.width, renderTarget.height);\n        }\n\n        state.bindTexture(34067, null);\n      } else {\n        state.bindTexture(3553, textureProperties.__webglTexture);\n        setTextureParameters(3553, renderTarget.texture, isTargetPowerOfTwo);\n        setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553);\n\n        if (textureNeedsGenerateMipmaps(renderTarget.texture, isTargetPowerOfTwo)) {\n          generateMipmap(3553, renderTarget.texture, renderTarget.width, renderTarget.height);\n        }\n\n        state.bindTexture(3553, null);\n      } // Setup depth and stencil buffers\n\n\n      if (renderTarget.depthBuffer) {\n        setupDepthRenderbuffer(renderTarget);\n      }\n    }\n\n    function updateRenderTargetMipmap(renderTarget) {\n      var texture = renderTarget.texture;\n      var isTargetPowerOfTwo = isPowerOfTwo(renderTarget);\n\n      if (textureNeedsGenerateMipmaps(texture, isTargetPowerOfTwo)) {\n        var target = renderTarget.isWebGLRenderTargetCube ? 34067 : 3553;\n\n        var webglTexture = properties.get(texture).__webglTexture;\n\n        state.bindTexture(target, webglTexture);\n        generateMipmap(target, texture, renderTarget.width, renderTarget.height);\n        state.bindTexture(target, null);\n      }\n    }\n\n    function updateVideoTexture(texture) {\n      var id = texture.id;\n      var frame = info.render.frame; // Check the last frame we updated the VideoTexture\n\n      if (_videoTextures[id] !== frame) {\n        _videoTextures[id] = frame;\n        texture.update();\n      }\n    }\n\n    this.setTexture2D = setTexture2D;\n    this.setTexture3D = setTexture3D;\n    this.setTextureCube = setTextureCube;\n    this.setTextureCubeDynamic = setTextureCubeDynamic;\n    this.setupRenderTarget = setupRenderTarget;\n    this.updateRenderTargetMipmap = updateRenderTargetMipmap;\n  }\n  /**\n   * @author thespite / http://www.twitter.com/thespite\n   */\n\n\n  function WebGLUtils(gl, extensions, capabilities) {\n    function convert(p) {\n      var extension;\n      if (p === RepeatWrapping) return 10497;\n      if (p === ClampToEdgeWrapping) return 33071;\n      if (p === MirroredRepeatWrapping) return 33648;\n      if (p === NearestFilter) return 9728;\n      if (p === NearestMipMapNearestFilter) return 9984;\n      if (p === NearestMipMapLinearFilter) return 9986;\n      if (p === LinearFilter) return 9729;\n      if (p === LinearMipMapNearestFilter) return 9985;\n      if (p === LinearMipMapLinearFilter) return 9987;\n      if (p === UnsignedByteType) return 5121;\n      if (p === UnsignedShort4444Type) return 32819;\n      if (p === UnsignedShort5551Type) return 32820;\n      if (p === UnsignedShort565Type) return 33635;\n      if (p === ByteType) return 5120;\n      if (p === ShortType) return 5122;\n      if (p === UnsignedShortType) return 5123;\n      if (p === IntType) return 5124;\n      if (p === UnsignedIntType) return 5125;\n      if (p === FloatType) return 5126;\n\n      if (p === HalfFloatType) {\n        if (capabilities.isWebGL2) return 5131;\n        extension = extensions.get('OES_texture_half_float');\n        if (extension !== null) return extension.HALF_FLOAT_OES;\n      }\n\n      if (p === AlphaFormat) return 6406;\n      if (p === RGBFormat) return 6407;\n      if (p === RGBAFormat) return 6408;\n      if (p === LuminanceFormat) return 6409;\n      if (p === LuminanceAlphaFormat) return 6410;\n      if (p === DepthFormat) return 6402;\n      if (p === DepthStencilFormat) return 34041;\n      if (p === RedFormat) return 6403;\n      if (p === AddEquation) return 32774;\n      if (p === SubtractEquation) return 32778;\n      if (p === ReverseSubtractEquation) return 32779;\n      if (p === ZeroFactor) return 0;\n      if (p === OneFactor) return 1;\n      if (p === SrcColorFactor) return 768;\n      if (p === OneMinusSrcColorFactor) return 769;\n      if (p === SrcAlphaFactor) return 770;\n      if (p === OneMinusSrcAlphaFactor) return 771;\n      if (p === DstAlphaFactor) return 772;\n      if (p === OneMinusDstAlphaFactor) return 773;\n      if (p === DstColorFactor) return 774;\n      if (p === OneMinusDstColorFactor) return 775;\n      if (p === SrcAlphaSaturateFactor) return 776;\n\n      if (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n        if (extension !== null) {\n          if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n          if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n        }\n      }\n\n      if (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n        if (extension !== null) {\n          if (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n          if (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n          if (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n          if (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n        }\n      }\n\n      if (p === RGB_ETC1_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_etc1');\n        if (extension !== null) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n      }\n\n      if (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_astc');\n\n        if (extension !== null) {\n          return p;\n        }\n      }\n\n      if (p === MinEquation || p === MaxEquation) {\n        if (capabilities.isWebGL2) {\n          if (p === MinEquation) return 32775;\n          if (p === MaxEquation) return 32776;\n        }\n\n        extension = extensions.get('EXT_blend_minmax');\n\n        if (extension !== null) {\n          if (p === MinEquation) return extension.MIN_EXT;\n          if (p === MaxEquation) return extension.MAX_EXT;\n        }\n      }\n\n      if (p === UnsignedInt248Type) {\n        if (capabilities.isWebGL2) return 34042;\n        extension = extensions.get('WEBGL_depth_texture');\n        if (extension !== null) return extension.UNSIGNED_INT_24_8_WEBGL;\n      }\n\n      return 0;\n    }\n\n    return {\n      convert: convert\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function Group() {\n    Object3D.call(this);\n    this.type = 'Group';\n  }\n\n  Group.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Group,\n    isGroup: true\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author WestLangley / http://github.com/WestLangley\n  */\n\n  function Camera() {\n    Object3D.call(this);\n    this.type = 'Camera';\n    this.matrixWorldInverse = new Matrix4();\n    this.projectionMatrix = new Matrix4();\n    this.projectionMatrixInverse = new Matrix4();\n  }\n\n  Camera.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Camera,\n    isCamera: true,\n    copy: function copy(source, recursive) {\n      Object3D.prototype.copy.call(this, source, recursive);\n      this.matrixWorldInverse.copy(source.matrixWorldInverse);\n      this.projectionMatrix.copy(source.projectionMatrix);\n      this.projectionMatrixInverse.copy(source.projectionMatrixInverse);\n      return this;\n    },\n    getWorldDirection: function getWorldDirection(target) {\n      if (target === undefined) {\n        console.warn('THREE.Camera: .getWorldDirection() target is now required');\n        target = new Vector3();\n      }\n\n      this.updateMatrixWorld(true);\n      var e = this.matrixWorld.elements;\n      return target.set(-e[8], -e[9], -e[10]).normalize();\n    },\n    updateMatrixWorld: function updateMatrixWorld(force) {\n      Object3D.prototype.updateMatrixWorld.call(this, force);\n      this.matrixWorldInverse.getInverse(this.matrixWorld);\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author greggman / http://games.greggman.com/\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author tschw\n   */\n\n  function PerspectiveCamera(fov, aspect, near, far) {\n    Camera.call(this);\n    this.type = 'PerspectiveCamera';\n    this.fov = fov !== undefined ? fov : 50;\n    this.zoom = 1;\n    this.near = near !== undefined ? near : 0.1;\n    this.far = far !== undefined ? far : 2000;\n    this.focus = 10;\n    this.aspect = aspect !== undefined ? aspect : 1;\n    this.view = null;\n    this.filmGauge = 35; // width of the film (default in millimeters)\n\n    this.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n    this.updateProjectionMatrix();\n  }\n\n  PerspectiveCamera.prototype = Object.assign(Object.create(Camera.prototype), {\n    constructor: PerspectiveCamera,\n    isPerspectiveCamera: true,\n    copy: function copy(source, recursive) {\n      Camera.prototype.copy.call(this, source, recursive);\n      this.fov = source.fov;\n      this.zoom = source.zoom;\n      this.near = source.near;\n      this.far = source.far;\n      this.focus = source.focus;\n      this.aspect = source.aspect;\n      this.view = source.view === null ? null : Object.assign({}, source.view);\n      this.filmGauge = source.filmGauge;\n      this.filmOffset = source.filmOffset;\n      return this;\n    },\n\n    /**\n     * Sets the FOV by focal length in respect to the current .filmGauge.\n     *\n     * The default film gauge is 35, so that the focal length can be specified for\n     * a 35mm (full frame) camera.\n     *\n     * Values for focal length and film gauge must have the same unit.\n     */\n    setFocalLength: function setFocalLength(focalLength) {\n      // see http://www.bobatkins.com/photography/technical/field_of_view.html\n      var vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n      this.fov = _Math.RAD2DEG * 2 * Math.atan(vExtentSlope);\n      this.updateProjectionMatrix();\n    },\n\n    /**\n     * Calculates the focal length from the current .fov and .filmGauge.\n     */\n    getFocalLength: function getFocalLength() {\n      var vExtentSlope = Math.tan(_Math.DEG2RAD * 0.5 * this.fov);\n      return 0.5 * this.getFilmHeight() / vExtentSlope;\n    },\n    getEffectiveFOV: function getEffectiveFOV() {\n      return _Math.RAD2DEG * 2 * Math.atan(Math.tan(_Math.DEG2RAD * 0.5 * this.fov) / this.zoom);\n    },\n    getFilmWidth: function getFilmWidth() {\n      // film not completely covered in portrait format (aspect < 1)\n      return this.filmGauge * Math.min(this.aspect, 1);\n    },\n    getFilmHeight: function getFilmHeight() {\n      // film not completely covered in landscape format (aspect > 1)\n      return this.filmGauge / Math.max(this.aspect, 1);\n    },\n\n    /**\n     * Sets an offset in a larger frustum. This is useful for multi-window or\n     * multi-monitor/multi-machine setups.\n     *\n     * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n     * the monitors are in grid like this\n     *\n     *   +---+---+---+\n     *   | A | B | C |\n     *   +---+---+---+\n     *   | D | E | F |\n     *   +---+---+---+\n     *\n     * then for each monitor you would call it like this\n     *\n     *   var w = 1920;\n     *   var h = 1080;\n     *   var fullWidth = w * 3;\n     *   var fullHeight = h * 2;\n     *\n     *   --A--\n     *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n     *   --B--\n     *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n     *   --C--\n     *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n     *   --D--\n     *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n     *   --E--\n     *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n     *   --F--\n     *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n     *\n     *   Note there is no reason monitors have to be the same size or in a grid.\n     */\n    setViewOffset: function setViewOffset(fullWidth, fullHeight, x, y, width, height) {\n      this.aspect = fullWidth / fullHeight;\n\n      if (this.view === null) {\n        this.view = {\n          enabled: true,\n          fullWidth: 1,\n          fullHeight: 1,\n          offsetX: 0,\n          offsetY: 0,\n          width: 1,\n          height: 1\n        };\n      }\n\n      this.view.enabled = true;\n      this.view.fullWidth = fullWidth;\n      this.view.fullHeight = fullHeight;\n      this.view.offsetX = x;\n      this.view.offsetY = y;\n      this.view.width = width;\n      this.view.height = height;\n      this.updateProjectionMatrix();\n    },\n    clearViewOffset: function clearViewOffset() {\n      if (this.view !== null) {\n        this.view.enabled = false;\n      }\n\n      this.updateProjectionMatrix();\n    },\n    updateProjectionMatrix: function updateProjectionMatrix() {\n      var near = this.near,\n          top = near * Math.tan(_Math.DEG2RAD * 0.5 * this.fov) / this.zoom,\n          height = 2 * top,\n          width = this.aspect * height,\n          left = -0.5 * width,\n          view = this.view;\n\n      if (this.view !== null && this.view.enabled) {\n        var fullWidth = view.fullWidth,\n            fullHeight = view.fullHeight;\n        left += view.offsetX * width / fullWidth;\n        top -= view.offsetY * height / fullHeight;\n        width *= view.width / fullWidth;\n        height *= view.height / fullHeight;\n      }\n\n      var skew = this.filmOffset;\n      if (skew !== 0) left += near * skew / this.getFilmWidth();\n      this.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\n      this.projectionMatrixInverse.getInverse(this.projectionMatrix);\n    },\n    toJSON: function toJSON(meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      data.object.fov = this.fov;\n      data.object.zoom = this.zoom;\n      data.object.near = this.near;\n      data.object.far = this.far;\n      data.object.focus = this.focus;\n      data.object.aspect = this.aspect;\n      if (this.view !== null) data.object.view = Object.assign({}, this.view);\n      data.object.filmGauge = this.filmGauge;\n      data.object.filmOffset = this.filmOffset;\n      return data;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function ArrayCamera(array) {\n    PerspectiveCamera.call(this);\n    this.cameras = array || [];\n  }\n\n  ArrayCamera.prototype = Object.assign(Object.create(PerspectiveCamera.prototype), {\n    constructor: ArrayCamera,\n    isArrayCamera: true\n  });\n  /**\n   * @author jsantell / https://www.jsantell.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var cameraLPos = new Vector3();\n  var cameraRPos = new Vector3();\n  /**\n   * Assumes 2 cameras that are parallel and share an X-axis, and that\n   * the cameras' projection and world matrices have already been set.\n   * And that near and far planes are identical for both cameras.\n   * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n   */\n\n  function setProjectionFromUnion(camera, cameraL, cameraR) {\n    cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\n    cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\n    var ipd = cameraLPos.distanceTo(cameraRPos);\n    var projL = cameraL.projectionMatrix.elements;\n    var projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and\n    // most likely identical top and bottom frustum extents.\n    // Use the left camera for these values.\n\n    var near = projL[14] / (projL[10] - 1);\n    var far = projL[14] / (projL[10] + 1);\n    var topFov = (projL[9] + 1) / projL[5];\n    var bottomFov = (projL[9] - 1) / projL[5];\n    var leftFov = (projL[8] - 1) / projL[0];\n    var rightFov = (projR[8] + 1) / projR[0];\n    var left = near * leftFov;\n    var right = near * rightFov; // Calculate the new camera's position offset from the\n    // left camera. xOffset should be roughly half `ipd`.\n\n    var zOffset = ipd / (-leftFov + rightFov);\n    var xOffset = zOffset * -leftFov; // TODO: Better way to apply this offset?\n\n    cameraL.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\n    camera.translateX(xOffset);\n    camera.translateZ(zOffset);\n    camera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld); // Find the union of the frustum values of the cameras and scale\n    // the values so that the near plane's position does not change in world space,\n    // although must now be relative to the new union camera.\n\n    var near2 = near + zOffset;\n    var far2 = far + zOffset;\n    var left2 = left - xOffset;\n    var right2 = right + (ipd - xOffset);\n    var top2 = topFov * far / far2 * near2;\n    var bottom2 = bottomFov * far / far2 * near2;\n    camera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebVRManager(renderer) {\n    var scope = this;\n    var device = null;\n    var frameData = null;\n    var poseTarget = null;\n    var controllers = [];\n    var standingMatrix = new Matrix4();\n    var standingMatrixInverse = new Matrix4();\n    var framebufferScaleFactor = 1.0;\n    var frameOfReferenceType = 'stage';\n\n    if (typeof window !== 'undefined' && 'VRFrameData' in window) {\n      frameData = new window.VRFrameData();\n      window.addEventListener('vrdisplaypresentchange', onVRDisplayPresentChange, false);\n    }\n\n    var matrixWorldInverse = new Matrix4();\n    var tempQuaternion = new Quaternion();\n    var tempPosition = new Vector3();\n    var cameraL = new PerspectiveCamera();\n    cameraL.bounds = new Vector4(0.0, 0.0, 0.5, 1.0);\n    cameraL.layers.enable(1);\n    var cameraR = new PerspectiveCamera();\n    cameraR.bounds = new Vector4(0.5, 0.0, 0.5, 1.0);\n    cameraR.layers.enable(2);\n    var cameraVR = new ArrayCamera([cameraL, cameraR]);\n    cameraVR.layers.enable(1);\n    cameraVR.layers.enable(2); //\n\n    function isPresenting() {\n      return device !== null && device.isPresenting === true;\n    }\n\n    var currentSize, currentPixelRatio;\n\n    function onVRDisplayPresentChange() {\n      if (isPresenting()) {\n        var eyeParameters = device.getEyeParameters('left');\n        var renderWidth = eyeParameters.renderWidth * framebufferScaleFactor;\n        var renderHeight = eyeParameters.renderHeight * framebufferScaleFactor;\n        currentPixelRatio = renderer.getPixelRatio();\n        currentSize = renderer.getSize();\n        renderer.setDrawingBufferSize(renderWidth * 2, renderHeight, 1);\n        animation.start();\n      } else {\n        if (scope.enabled) {\n          renderer.setDrawingBufferSize(currentSize.width, currentSize.height, currentPixelRatio);\n        }\n\n        animation.stop();\n      }\n    } //\n\n\n    var triggers = [];\n\n    function findGamepad(id) {\n      var gamepads = navigator.getGamepads && navigator.getGamepads();\n\n      for (var i = 0, j = 0, l = gamepads.length; i < l; i++) {\n        var gamepad = gamepads[i];\n\n        if (gamepad && (gamepad.id === 'Daydream Controller' || gamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' || gamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith('Oculus Touch') || gamepad.id.startsWith('Spatial Controller'))) {\n          if (j === id) return gamepad;\n          j++;\n        }\n      }\n    }\n\n    function updateControllers() {\n      for (var i = 0; i < controllers.length; i++) {\n        var controller = controllers[i];\n        var gamepad = findGamepad(i);\n\n        if (gamepad !== undefined && gamepad.pose !== undefined) {\n          if (gamepad.pose === null) return; //  Pose\n\n          var pose = gamepad.pose;\n          if (pose.hasPosition === false) controller.position.set(0.2, -0.6, -0.05);\n          if (pose.position !== null) controller.position.fromArray(pose.position);\n          if (pose.orientation !== null) controller.quaternion.fromArray(pose.orientation);\n          controller.matrix.compose(controller.position, controller.quaternion, controller.scale);\n          controller.matrix.premultiply(standingMatrix);\n          controller.matrix.decompose(controller.position, controller.quaternion, controller.scale);\n          controller.matrixWorldNeedsUpdate = true;\n          controller.visible = true; //  Trigger\n\n          var buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n          if (triggers[i] !== gamepad.buttons[buttonId].pressed) {\n            triggers[i] = gamepad.buttons[buttonId].pressed;\n\n            if (triggers[i] === true) {\n              controller.dispatchEvent({\n                type: 'selectstart'\n              });\n            } else {\n              controller.dispatchEvent({\n                type: 'selectend'\n              });\n              controller.dispatchEvent({\n                type: 'select'\n              });\n            }\n          }\n        } else {\n          controller.visible = false;\n        }\n      }\n    } //\n\n\n    this.enabled = false;\n\n    this.getController = function (id) {\n      var controller = controllers[id];\n\n      if (controller === undefined) {\n        controller = new Group();\n        controller.matrixAutoUpdate = false;\n        controller.visible = false;\n        controllers[id] = controller;\n      }\n\n      return controller;\n    };\n\n    this.getDevice = function () {\n      return device;\n    };\n\n    this.setDevice = function (value) {\n      if (value !== undefined) device = value;\n      animation.setContext(value);\n    };\n\n    this.setFramebufferScaleFactor = function (value) {\n      framebufferScaleFactor = value;\n    };\n\n    this.setFrameOfReferenceType = function (value) {\n      frameOfReferenceType = value;\n    };\n\n    this.setPoseTarget = function (object) {\n      if (object !== undefined) poseTarget = object;\n    };\n\n    this.getCamera = function (camera) {\n      var userHeight = frameOfReferenceType === 'stage' ? 1.6 : 0;\n\n      if (device === null) {\n        camera.position.set(0, userHeight, 0);\n        return camera;\n      }\n\n      device.depthNear = camera.near;\n      device.depthFar = camera.far;\n      device.getFrameData(frameData); //\n\n      if (frameOfReferenceType === 'stage') {\n        var stageParameters = device.stageParameters;\n\n        if (stageParameters) {\n          standingMatrix.fromArray(stageParameters.sittingToStandingTransform);\n        } else {\n          standingMatrix.makeTranslation(0, userHeight, 0);\n        }\n      }\n\n      var pose = frameData.pose;\n      var poseObject = poseTarget !== null ? poseTarget : camera; // We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\n      poseObject.matrix.copy(standingMatrix);\n      poseObject.matrix.decompose(poseObject.position, poseObject.quaternion, poseObject.scale);\n\n      if (pose.orientation !== null) {\n        tempQuaternion.fromArray(pose.orientation);\n        poseObject.quaternion.multiply(tempQuaternion);\n      }\n\n      if (pose.position !== null) {\n        tempQuaternion.setFromRotationMatrix(standingMatrix);\n        tempPosition.fromArray(pose.position);\n        tempPosition.applyQuaternion(tempQuaternion);\n        poseObject.position.add(tempPosition);\n      }\n\n      poseObject.updateMatrixWorld();\n      if (device.isPresenting === false) return camera; //\n\n      cameraL.near = camera.near;\n      cameraR.near = camera.near;\n      cameraL.far = camera.far;\n      cameraR.far = camera.far;\n      cameraL.matrixWorldInverse.fromArray(frameData.leftViewMatrix);\n      cameraR.matrixWorldInverse.fromArray(frameData.rightViewMatrix); // TODO (mrdoob) Double check this code\n\n      standingMatrixInverse.getInverse(standingMatrix);\n\n      if (frameOfReferenceType === 'stage') {\n        cameraL.matrixWorldInverse.multiply(standingMatrixInverse);\n        cameraR.matrixWorldInverse.multiply(standingMatrixInverse);\n      }\n\n      var parent = poseObject.parent;\n\n      if (parent !== null) {\n        matrixWorldInverse.getInverse(parent.matrixWorld);\n        cameraL.matrixWorldInverse.multiply(matrixWorldInverse);\n        cameraR.matrixWorldInverse.multiply(matrixWorldInverse);\n      } // envMap and Mirror needs camera.matrixWorld\n\n\n      cameraL.matrixWorld.getInverse(cameraL.matrixWorldInverse);\n      cameraR.matrixWorld.getInverse(cameraR.matrixWorldInverse);\n      cameraL.projectionMatrix.fromArray(frameData.leftProjectionMatrix);\n      cameraR.projectionMatrix.fromArray(frameData.rightProjectionMatrix);\n      setProjectionFromUnion(cameraVR, cameraL, cameraR); //\n\n      var layers = device.getLayers();\n\n      if (layers.length) {\n        var layer = layers[0];\n\n        if (layer.leftBounds !== null && layer.leftBounds.length === 4) {\n          cameraL.bounds.fromArray(layer.leftBounds);\n        }\n\n        if (layer.rightBounds !== null && layer.rightBounds.length === 4) {\n          cameraR.bounds.fromArray(layer.rightBounds);\n        }\n      }\n\n      updateControllers();\n      return cameraVR;\n    };\n\n    this.getStandingMatrix = function () {\n      return standingMatrix;\n    };\n\n    this.isPresenting = isPresenting; // Animation Loop\n\n    var animation = new WebGLAnimation();\n\n    this.setAnimationLoop = function (callback) {\n      animation.setAnimationLoop(callback);\n    };\n\n    this.submitFrame = function () {\n      if (isPresenting()) device.submitFrame();\n    };\n\n    this.dispose = function () {\n      if (typeof window !== 'undefined') {\n        window.removeEventListener('vrdisplaypresentchange', onVRDisplayPresentChange);\n      }\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebXRManager(renderer) {\n    var gl = renderer.context;\n    var device = null;\n    var session = null;\n    var framebufferScaleFactor = 1.0;\n    var frameOfReference = null;\n    var frameOfReferenceType = 'stage';\n    var pose = null;\n    var controllers = [];\n    var inputSources = [];\n\n    function isPresenting() {\n      return session !== null && frameOfReference !== null;\n    } //\n\n\n    var cameraL = new PerspectiveCamera();\n    cameraL.layers.enable(1);\n    cameraL.viewport = new Vector4();\n    var cameraR = new PerspectiveCamera();\n    cameraR.layers.enable(2);\n    cameraR.viewport = new Vector4();\n    var cameraVR = new ArrayCamera([cameraL, cameraR]);\n    cameraVR.layers.enable(1);\n    cameraVR.layers.enable(2); //\n\n    this.enabled = false;\n\n    this.getController = function (id) {\n      var controller = controllers[id];\n\n      if (controller === undefined) {\n        controller = new Group();\n        controller.matrixAutoUpdate = false;\n        controller.visible = false;\n        controllers[id] = controller;\n      }\n\n      return controller;\n    };\n\n    this.getDevice = function () {\n      return device;\n    };\n\n    this.setDevice = function (value) {\n      if (value !== undefined) device = value;\n      if (value instanceof XRDevice) gl.setCompatibleXRDevice(value);\n    }; //\n\n\n    function onSessionEvent(event) {\n      var controller = controllers[inputSources.indexOf(event.inputSource)];\n      if (controller) controller.dispatchEvent({\n        type: event.type\n      });\n    }\n\n    function onSessionEnd() {\n      renderer.setFramebuffer(null);\n      animation.stop();\n    }\n\n    this.setFramebufferScaleFactor = function (value) {\n      framebufferScaleFactor = value;\n    };\n\n    this.setFrameOfReferenceType = function (value) {\n      frameOfReferenceType = value;\n    };\n\n    this.setSession = function (value) {\n      session = value;\n\n      if (session !== null) {\n        session.addEventListener('select', onSessionEvent);\n        session.addEventListener('selectstart', onSessionEvent);\n        session.addEventListener('selectend', onSessionEvent);\n        session.addEventListener('end', onSessionEnd);\n        session.baseLayer = new XRWebGLLayer(session, gl, {\n          framebufferScaleFactor: framebufferScaleFactor\n        });\n        session.requestFrameOfReference(frameOfReferenceType).then(function (value) {\n          frameOfReference = value;\n          renderer.setFramebuffer(session.baseLayer.framebuffer);\n          animation.setContext(session);\n          animation.start();\n        }); //\n\n        inputSources = session.getInputSources();\n        session.addEventListener('inputsourceschange', function () {\n          inputSources = session.getInputSources();\n          console.log(inputSources);\n\n          for (var i = 0; i < controllers.length; i++) {\n            var controller = controllers[i];\n            controller.userData.inputSource = inputSources[i];\n          }\n        });\n      }\n    };\n\n    function updateCamera(camera, parent) {\n      if (parent === null) {\n        camera.matrixWorld.copy(camera.matrix);\n      } else {\n        camera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\n      }\n\n      camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n    }\n\n    this.getCamera = function (camera) {\n      if (isPresenting()) {\n        var parent = camera.parent;\n        var cameras = cameraVR.cameras;\n        updateCamera(cameraVR, parent);\n\n        for (var i = 0; i < cameras.length; i++) {\n          updateCamera(cameras[i], parent);\n        } // update camera and its children\n\n\n        camera.matrixWorld.copy(cameraVR.matrixWorld);\n        var children = camera.children;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          children[i].updateMatrixWorld(true);\n        }\n\n        setProjectionFromUnion(cameraVR, cameraL, cameraR);\n        return cameraVR;\n      }\n\n      return camera;\n    };\n\n    this.isPresenting = isPresenting; // Animation Loop\n\n    var onAnimationFrameCallback = null;\n\n    function onAnimationFrame(time, frame) {\n      pose = frame.getDevicePose(frameOfReference);\n\n      if (pose !== null) {\n        var layer = session.baseLayer;\n        var views = frame.views;\n\n        for (var i = 0; i < views.length; i++) {\n          var view = views[i];\n          var viewport = layer.getViewport(view);\n          var viewMatrix = pose.getViewMatrix(view);\n          var camera = cameraVR.cameras[i];\n          camera.matrix.fromArray(viewMatrix).getInverse(camera.matrix);\n          camera.projectionMatrix.fromArray(view.projectionMatrix);\n          camera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\n\n          if (i === 0) {\n            cameraVR.matrix.copy(camera.matrix);\n          }\n        }\n      } //\n\n\n      for (var i = 0; i < controllers.length; i++) {\n        var controller = controllers[i];\n        var inputSource = inputSources[i];\n\n        if (inputSource) {\n          var inputPose = frame.getInputPose(inputSource, frameOfReference);\n\n          if (inputPose !== null) {\n            if ('targetRay' in inputPose) {\n              controller.matrix.elements = inputPose.targetRay.transformMatrix;\n            } else if ('pointerMatrix' in inputPose) {\n              // DEPRECATED\n              controller.matrix.elements = inputPose.pointerMatrix;\n            }\n\n            controller.matrix.decompose(controller.position, controller.rotation, controller.scale);\n            controller.visible = true;\n            continue;\n          }\n        }\n\n        controller.visible = false;\n      }\n\n      if (onAnimationFrameCallback) onAnimationFrameCallback(time);\n    }\n\n    var animation = new WebGLAnimation();\n    animation.setAnimationLoop(onAnimationFrame);\n\n    this.setAnimationLoop = function (callback) {\n      onAnimationFrameCallback = callback;\n    };\n\n    this.dispose = function () {}; // DEPRECATED\n\n\n    this.getStandingMatrix = function () {\n      console.warn('THREE.WebXRManager: getStandingMatrix() is no longer needed.');\n      return new THREE.Matrix4();\n    };\n\n    this.submitFrame = function () {};\n  }\n  /**\n   * @author supereggbert / http://www.paulbrunt.co.uk/\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author szimek / https://github.com/szimek/\n   * @author tschw\n   */\n\n\n  function WebGLRenderer(parameters) {\n    console.log('THREE.WebGLRenderer', REVISION);\n    parameters = parameters || {};\n\n    var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas'),\n        _context = parameters.context !== undefined ? parameters.context : null,\n        _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n        _depth = parameters.depth !== undefined ? parameters.depth : true,\n        _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n        _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n        _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n        _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n        _powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n    var currentRenderList = null;\n    var currentRenderState = null; // public properties\n\n    this.domElement = _canvas;\n    this.context = null; // clearing\n\n    this.autoClear = true;\n    this.autoClearColor = true;\n    this.autoClearDepth = true;\n    this.autoClearStencil = true; // scene graph\n\n    this.sortObjects = true; // user-defined clipping\n\n    this.clippingPlanes = [];\n    this.localClippingEnabled = false; // physically based shading\n\n    this.gammaFactor = 2.0; // for backwards compatibility\n\n    this.gammaInput = false;\n    this.gammaOutput = false; // physical lights\n\n    this.physicallyCorrectLights = false; // tone mapping\n\n    this.toneMapping = LinearToneMapping;\n    this.toneMappingExposure = 1.0;\n    this.toneMappingWhitePoint = 1.0; // morphs\n\n    this.maxMorphTargets = 8;\n    this.maxMorphNormals = 4; // internal properties\n\n    var _this = this,\n        _isContextLost = false,\n        // internal state cache\n    _framebuffer = null,\n        _currentRenderTarget = null,\n        _currentFramebuffer = null,\n        _currentMaterialId = -1,\n        // geometry and program caching\n    _currentGeometryProgram = {\n      geometry: null,\n      program: null,\n      wireframe: false\n    },\n        _currentCamera = null,\n        _currentArrayCamera = null,\n        _currentViewport = new Vector4(),\n        _currentScissor = new Vector4(),\n        _currentScissorTest = null,\n        //\n    _usedTextureUnits = 0,\n        //\n    _width = _canvas.width,\n        _height = _canvas.height,\n        _pixelRatio = 1,\n        _viewport = new Vector4(0, 0, _width, _height),\n        _scissor = new Vector4(0, 0, _width, _height),\n        _scissorTest = false,\n        // frustum\n    _frustum = new Frustum(),\n        // clipping\n    _clipping = new WebGLClipping(),\n        _clippingEnabled = false,\n        _localClippingEnabled = false,\n        // camera matrices cache\n    _projScreenMatrix = new Matrix4(),\n        _vector3 = new Vector3();\n\n    function getTargetPixelRatio() {\n      return _currentRenderTarget === null ? _pixelRatio : 1;\n    } // initialize\n\n\n    var _gl;\n\n    try {\n      var contextAttributes = {\n        alpha: _alpha,\n        depth: _depth,\n        stencil: _stencil,\n        antialias: _antialias,\n        premultipliedAlpha: _premultipliedAlpha,\n        preserveDrawingBuffer: _preserveDrawingBuffer,\n        powerPreference: _powerPreference\n      }; // event listeners must be registered before WebGL context is created, see #12753\n\n      _canvas.addEventListener('webglcontextlost', onContextLost, false);\n\n      _canvas.addEventListener('webglcontextrestored', onContextRestore, false);\n\n      _gl = _context || _canvas.getContext('webgl', contextAttributes) || _canvas.getContext('experimental-webgl', contextAttributes);\n\n      if (_gl === null) {\n        if (_canvas.getContext('webgl') !== null) {\n          throw new Error('Error creating WebGL context with your selected attributes.');\n        } else {\n          throw new Error('Error creating WebGL context.');\n        }\n      } // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n      if (_gl.getShaderPrecisionFormat === undefined) {\n        _gl.getShaderPrecisionFormat = function () {\n          return {\n            'rangeMin': 1,\n            'rangeMax': 1,\n            'precision': 1\n          };\n        };\n      }\n    } catch (error) {\n      console.error('THREE.WebGLRenderer: ' + error.message);\n    }\n\n    var extensions, capabilities, state, info;\n    var properties, textures, attributes, geometries, objects;\n    var programCache, renderLists, renderStates;\n    var background, morphtargets, bufferRenderer, indexedBufferRenderer;\n    var utils;\n\n    function initGLContext() {\n      extensions = new WebGLExtensions(_gl);\n      capabilities = new WebGLCapabilities(_gl, extensions, parameters);\n\n      if (!capabilities.isWebGL2) {\n        extensions.get('WEBGL_depth_texture');\n        extensions.get('OES_texture_float');\n        extensions.get('OES_texture_half_float');\n        extensions.get('OES_texture_half_float_linear');\n        extensions.get('OES_standard_derivatives');\n        extensions.get('OES_element_index_uint');\n        extensions.get('ANGLE_instanced_arrays');\n      }\n\n      extensions.get('OES_texture_float_linear');\n      utils = new WebGLUtils(_gl, extensions, capabilities);\n      state = new WebGLState(_gl, extensions, utils, capabilities);\n      state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio));\n      state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio));\n      info = new WebGLInfo(_gl);\n      properties = new WebGLProperties();\n      textures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\n      attributes = new WebGLAttributes(_gl);\n      geometries = new WebGLGeometries(_gl, attributes, info);\n      objects = new WebGLObjects(geometries, info);\n      morphtargets = new WebGLMorphtargets(_gl);\n      programCache = new WebGLPrograms(_this, extensions, capabilities);\n      renderLists = new WebGLRenderLists();\n      renderStates = new WebGLRenderStates();\n      background = new WebGLBackground(_this, state, objects, _premultipliedAlpha);\n      bufferRenderer = new WebGLBufferRenderer(_gl, extensions, info, capabilities);\n      indexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);\n      info.programs = programCache.programs;\n      _this.context = _gl;\n      _this.capabilities = capabilities;\n      _this.extensions = extensions;\n      _this.properties = properties;\n      _this.renderLists = renderLists;\n      _this.state = state;\n      _this.info = info;\n    }\n\n    initGLContext(); // vr\n\n    var vr = null;\n\n    if (typeof navigator !== 'undefined') {\n      vr = 'xr' in navigator ? new WebXRManager(_this) : new WebVRManager(_this);\n    }\n\n    this.vr = vr; // shadow map\n\n    var shadowMap = new WebGLShadowMap(_this, objects, capabilities.maxTextureSize);\n    this.shadowMap = shadowMap; // API\n\n    this.getContext = function () {\n      return _gl;\n    };\n\n    this.getContextAttributes = function () {\n      return _gl.getContextAttributes();\n    };\n\n    this.forceContextLoss = function () {\n      var extension = extensions.get('WEBGL_lose_context');\n      if (extension) extension.loseContext();\n    };\n\n    this.forceContextRestore = function () {\n      var extension = extensions.get('WEBGL_lose_context');\n      if (extension) extension.restoreContext();\n    };\n\n    this.getPixelRatio = function () {\n      return _pixelRatio;\n    };\n\n    this.setPixelRatio = function (value) {\n      if (value === undefined) return;\n      _pixelRatio = value;\n      this.setSize(_width, _height, false);\n    };\n\n    this.getSize = function () {\n      return {\n        width: _width,\n        height: _height\n      };\n    };\n\n    this.setSize = function (width, height, updateStyle) {\n      if (vr.isPresenting()) {\n        console.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\n        return;\n      }\n\n      _width = width;\n      _height = height;\n      _canvas.width = width * _pixelRatio;\n      _canvas.height = height * _pixelRatio;\n\n      if (updateStyle !== false) {\n        _canvas.style.width = width + 'px';\n        _canvas.style.height = height + 'px';\n      }\n\n      this.setViewport(0, 0, width, height);\n    };\n\n    this.getDrawingBufferSize = function () {\n      return {\n        width: _width * _pixelRatio,\n        height: _height * _pixelRatio\n      };\n    };\n\n    this.setDrawingBufferSize = function (width, height, pixelRatio) {\n      _width = width;\n      _height = height;\n      _pixelRatio = pixelRatio;\n      _canvas.width = width * pixelRatio;\n      _canvas.height = height * pixelRatio;\n      this.setViewport(0, 0, width, height);\n    };\n\n    this.getCurrentViewport = function () {\n      return _currentViewport;\n    };\n\n    this.setViewport = function (x, y, width, height) {\n      _viewport.set(x, _height - y - height, width, height);\n\n      state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio));\n    };\n\n    this.setScissor = function (x, y, width, height) {\n      _scissor.set(x, _height - y - height, width, height);\n\n      state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio));\n    };\n\n    this.setScissorTest = function (boolean) {\n      state.setScissorTest(_scissorTest = boolean);\n    }; // Clearing\n\n\n    this.getClearColor = function () {\n      return background.getClearColor();\n    };\n\n    this.setClearColor = function () {\n      background.setClearColor.apply(background, arguments);\n    };\n\n    this.getClearAlpha = function () {\n      return background.getClearAlpha();\n    };\n\n    this.setClearAlpha = function () {\n      background.setClearAlpha.apply(background, arguments);\n    };\n\n    this.clear = function (color, depth, stencil) {\n      var bits = 0;\n      if (color === undefined || color) bits |= 16384;\n      if (depth === undefined || depth) bits |= 256;\n      if (stencil === undefined || stencil) bits |= 1024;\n\n      _gl.clear(bits);\n    };\n\n    this.clearColor = function () {\n      this.clear(true, false, false);\n    };\n\n    this.clearDepth = function () {\n      this.clear(false, true, false);\n    };\n\n    this.clearStencil = function () {\n      this.clear(false, false, true);\n    }; //\n\n\n    this.dispose = function () {\n      _canvas.removeEventListener('webglcontextlost', onContextLost, false);\n\n      _canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\n\n      renderLists.dispose();\n      renderStates.dispose();\n      properties.dispose();\n      objects.dispose();\n      vr.dispose();\n      animation.stop();\n    }; // Events\n\n\n    function onContextLost(event) {\n      event.preventDefault();\n      console.log('THREE.WebGLRenderer: Context Lost.');\n      _isContextLost = true;\n    }\n\n    function onContextRestore()\n    /* event */\n    {\n      console.log('THREE.WebGLRenderer: Context Restored.');\n      _isContextLost = false;\n      initGLContext();\n    }\n\n    function onMaterialDispose(event) {\n      var material = event.target;\n      material.removeEventListener('dispose', onMaterialDispose);\n      deallocateMaterial(material);\n    } // Buffer deallocation\n\n\n    function deallocateMaterial(material) {\n      releaseMaterialProgramReference(material);\n      properties.remove(material);\n    }\n\n    function releaseMaterialProgramReference(material) {\n      var programInfo = properties.get(material).program;\n      material.program = undefined;\n\n      if (programInfo !== undefined) {\n        programCache.releaseProgram(programInfo);\n      }\n    } // Buffer rendering\n\n\n    function renderObjectImmediate(object, program) {\n      object.render(function (object) {\n        _this.renderBufferImmediate(object, program);\n      });\n    }\n\n    this.renderBufferImmediate = function (object, program) {\n      state.initAttributes();\n      var buffers = properties.get(object);\n      if (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\n      if (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\n      if (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\n      if (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\n      var programAttributes = program.getAttributes();\n\n      if (object.hasPositions) {\n        _gl.bindBuffer(34962, buffers.position);\n\n        _gl.bufferData(34962, object.positionArray, 35048);\n\n        state.enableAttribute(programAttributes.position);\n\n        _gl.vertexAttribPointer(programAttributes.position, 3, 5126, false, 0, 0);\n      }\n\n      if (object.hasNormals) {\n        _gl.bindBuffer(34962, buffers.normal);\n\n        _gl.bufferData(34962, object.normalArray, 35048);\n\n        state.enableAttribute(programAttributes.normal);\n\n        _gl.vertexAttribPointer(programAttributes.normal, 3, 5126, false, 0, 0);\n      }\n\n      if (object.hasUvs) {\n        _gl.bindBuffer(34962, buffers.uv);\n\n        _gl.bufferData(34962, object.uvArray, 35048);\n\n        state.enableAttribute(programAttributes.uv);\n\n        _gl.vertexAttribPointer(programAttributes.uv, 2, 5126, false, 0, 0);\n      }\n\n      if (object.hasColors) {\n        _gl.bindBuffer(34962, buffers.color);\n\n        _gl.bufferData(34962, object.colorArray, 35048);\n\n        state.enableAttribute(programAttributes.color);\n\n        _gl.vertexAttribPointer(programAttributes.color, 3, 5126, false, 0, 0);\n      }\n\n      state.disableUnusedAttributes();\n\n      _gl.drawArrays(4, 0, object.count);\n\n      object.count = 0;\n    };\n\n    this.renderBufferDirect = function (camera, fog, geometry, material, object, group) {\n      var frontFaceCW = object.isMesh && object.normalMatrix.determinant() < 0;\n      state.setMaterial(material, frontFaceCW);\n      var program = setProgram(camera, fog, material, object);\n      var updateBuffers = false;\n\n      if (_currentGeometryProgram.geometry !== geometry.id || _currentGeometryProgram.program !== program.id || _currentGeometryProgram.wireframe !== (material.wireframe === true)) {\n        _currentGeometryProgram.geometry = geometry.id;\n        _currentGeometryProgram.program = program.id;\n        _currentGeometryProgram.wireframe = material.wireframe === true;\n        updateBuffers = true;\n      }\n\n      if (object.morphTargetInfluences) {\n        morphtargets.update(object, geometry, material, program);\n        updateBuffers = true;\n      } //\n\n\n      var index = geometry.index;\n      var position = geometry.attributes.position;\n      var rangeFactor = 1;\n\n      if (material.wireframe === true) {\n        index = geometries.getWireframeAttribute(geometry);\n        rangeFactor = 2;\n      }\n\n      var attribute;\n      var renderer = bufferRenderer;\n\n      if (index !== null) {\n        attribute = attributes.get(index);\n        renderer = indexedBufferRenderer;\n        renderer.setIndex(attribute);\n      }\n\n      if (updateBuffers) {\n        setupVertexAttributes(material, program, geometry);\n\n        if (index !== null) {\n          _gl.bindBuffer(34963, attribute.buffer);\n        }\n      } //\n\n\n      var dataCount = Infinity;\n\n      if (index !== null) {\n        dataCount = index.count;\n      } else if (position !== undefined) {\n        dataCount = position.count;\n      }\n\n      var rangeStart = geometry.drawRange.start * rangeFactor;\n      var rangeCount = geometry.drawRange.count * rangeFactor;\n      var groupStart = group !== null ? group.start * rangeFactor : 0;\n      var groupCount = group !== null ? group.count * rangeFactor : Infinity;\n      var drawStart = Math.max(rangeStart, groupStart);\n      var drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n      var drawCount = Math.max(0, drawEnd - drawStart + 1);\n      if (drawCount === 0) return; //\n\n      if (object.isMesh) {\n        if (material.wireframe === true) {\n          state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n          renderer.setMode(1);\n        } else {\n          switch (object.drawMode) {\n            case TrianglesDrawMode:\n              renderer.setMode(4);\n              break;\n\n            case TriangleStripDrawMode:\n              renderer.setMode(5);\n              break;\n\n            case TriangleFanDrawMode:\n              renderer.setMode(6);\n              break;\n          }\n        }\n      } else if (object.isLine) {\n        var lineWidth = material.linewidth;\n        if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n        state.setLineWidth(lineWidth * getTargetPixelRatio());\n\n        if (object.isLineSegments) {\n          renderer.setMode(1);\n        } else if (object.isLineLoop) {\n          renderer.setMode(2);\n        } else {\n          renderer.setMode(3);\n        }\n      } else if (object.isPoints) {\n        renderer.setMode(0);\n      } else if (object.isSprite) {\n        renderer.setMode(4);\n      }\n\n      if (geometry && geometry.isInstancedBufferGeometry) {\n        if (geometry.maxInstancedCount > 0) {\n          renderer.renderInstances(geometry, drawStart, drawCount);\n        }\n      } else {\n        renderer.render(drawStart, drawCount);\n      }\n    };\n\n    function setupVertexAttributes(material, program, geometry) {\n      if (geometry && geometry.isInstancedBufferGeometry & !capabilities.isWebGL2) {\n        if (extensions.get('ANGLE_instanced_arrays') === null) {\n          console.error('THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n          return;\n        }\n      }\n\n      state.initAttributes();\n      var geometryAttributes = geometry.attributes;\n      var programAttributes = program.getAttributes();\n      var materialDefaultAttributeValues = material.defaultAttributeValues;\n\n      for (var name in programAttributes) {\n        var programAttribute = programAttributes[name];\n\n        if (programAttribute >= 0) {\n          var geometryAttribute = geometryAttributes[name];\n\n          if (geometryAttribute !== undefined) {\n            var normalized = geometryAttribute.normalized;\n            var size = geometryAttribute.itemSize;\n            var attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\n\n            if (attribute === undefined) continue;\n            var buffer = attribute.buffer;\n            var type = attribute.type;\n            var bytesPerElement = attribute.bytesPerElement;\n\n            if (geometryAttribute.isInterleavedBufferAttribute) {\n              var data = geometryAttribute.data;\n              var stride = data.stride;\n              var offset = geometryAttribute.offset;\n\n              if (data && data.isInstancedInterleavedBuffer) {\n                state.enableAttributeAndDivisor(programAttribute, data.meshPerAttribute);\n\n                if (geometry.maxInstancedCount === undefined) {\n                  geometry.maxInstancedCount = data.meshPerAttribute * data.count;\n                }\n              } else {\n                state.enableAttribute(programAttribute);\n              }\n\n              _gl.bindBuffer(34962, buffer);\n\n              _gl.vertexAttribPointer(programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement);\n            } else {\n              if (geometryAttribute.isInstancedBufferAttribute) {\n                state.enableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute);\n\n                if (geometry.maxInstancedCount === undefined) {\n                  geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n                }\n              } else {\n                state.enableAttribute(programAttribute);\n              }\n\n              _gl.bindBuffer(34962, buffer);\n\n              _gl.vertexAttribPointer(programAttribute, size, type, normalized, 0, 0);\n            }\n          } else if (materialDefaultAttributeValues !== undefined) {\n            var value = materialDefaultAttributeValues[name];\n\n            if (value !== undefined) {\n              switch (value.length) {\n                case 2:\n                  _gl.vertexAttrib2fv(programAttribute, value);\n\n                  break;\n\n                case 3:\n                  _gl.vertexAttrib3fv(programAttribute, value);\n\n                  break;\n\n                case 4:\n                  _gl.vertexAttrib4fv(programAttribute, value);\n\n                  break;\n\n                default:\n                  _gl.vertexAttrib1fv(programAttribute, value);\n\n              }\n            }\n          }\n        }\n      }\n\n      state.disableUnusedAttributes();\n    } // Compile\n\n\n    this.compile = function (scene, camera) {\n      currentRenderState = renderStates.get(scene, camera);\n      currentRenderState.init();\n      scene.traverse(function (object) {\n        if (object.isLight) {\n          currentRenderState.pushLight(object);\n\n          if (object.castShadow) {\n            currentRenderState.pushShadow(object);\n          }\n        }\n      });\n      currentRenderState.setupLights(camera);\n      scene.traverse(function (object) {\n        if (object.material) {\n          if (Array.isArray(object.material)) {\n            for (var i = 0; i < object.material.length; i++) {\n              initMaterial(object.material[i], scene.fog, object);\n            }\n          } else {\n            initMaterial(object.material, scene.fog, object);\n          }\n        }\n      });\n    }; // Animation Loop\n\n\n    var onAnimationFrameCallback = null;\n\n    function onAnimationFrame(time) {\n      if (vr.isPresenting()) return;\n      if (onAnimationFrameCallback) onAnimationFrameCallback(time);\n    }\n\n    var animation = new WebGLAnimation();\n    animation.setAnimationLoop(onAnimationFrame);\n    if (typeof window !== 'undefined') animation.setContext(window);\n\n    this.setAnimationLoop = function (callback) {\n      onAnimationFrameCallback = callback;\n      vr.setAnimationLoop(callback);\n      animation.start();\n    }; // Rendering\n\n\n    this.render = function (scene, camera, renderTarget, forceClear) {\n      if (!(camera && camera.isCamera)) {\n        console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n        return;\n      }\n\n      if (_isContextLost) return; // reset caching for this frame\n\n      _currentGeometryProgram.geometry = null;\n      _currentGeometryProgram.program = null;\n      _currentGeometryProgram.wireframe = false;\n      _currentMaterialId = -1;\n      _currentCamera = null; // update scene graph\n\n      if (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n      if (camera.parent === null) camera.updateMatrixWorld();\n\n      if (vr.enabled) {\n        camera = vr.getCamera(camera);\n      } //\n\n\n      currentRenderState = renderStates.get(scene, camera);\n      currentRenderState.init();\n      scene.onBeforeRender(_this, scene, camera, renderTarget);\n\n      _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n      _frustum.setFromMatrix(_projScreenMatrix);\n\n      _localClippingEnabled = this.localClippingEnabled;\n      _clippingEnabled = _clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n      currentRenderList = renderLists.get(scene, camera);\n      currentRenderList.init();\n      projectObject(scene, camera, _this.sortObjects);\n\n      if (_this.sortObjects === true) {\n        currentRenderList.sort();\n      } //\n\n\n      if (_clippingEnabled) _clipping.beginShadows();\n      var shadowsArray = currentRenderState.state.shadowsArray;\n      shadowMap.render(shadowsArray, scene, camera);\n      currentRenderState.setupLights(camera);\n      if (_clippingEnabled) _clipping.endShadows(); //\n\n      if (this.info.autoReset) this.info.reset();\n\n      if (renderTarget === undefined) {\n        renderTarget = null;\n      }\n\n      this.setRenderTarget(renderTarget); //\n\n      background.render(currentRenderList, scene, camera, forceClear); // render scene\n\n      var opaqueObjects = currentRenderList.opaque;\n      var transparentObjects = currentRenderList.transparent;\n\n      if (scene.overrideMaterial) {\n        var overrideMaterial = scene.overrideMaterial;\n        if (opaqueObjects.length) renderObjects(opaqueObjects, scene, camera, overrideMaterial);\n        if (transparentObjects.length) renderObjects(transparentObjects, scene, camera, overrideMaterial);\n      } else {\n        // opaque pass (front-to-back order)\n        if (opaqueObjects.length) renderObjects(opaqueObjects, scene, camera); // transparent pass (back-to-front order)\n\n        if (transparentObjects.length) renderObjects(transparentObjects, scene, camera);\n      } // Generate mipmap if we're using any kind of mipmap filtering\n\n\n      if (renderTarget) {\n        textures.updateRenderTargetMipmap(renderTarget);\n      } // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\n      state.buffers.depth.setTest(true);\n      state.buffers.depth.setMask(true);\n      state.buffers.color.setMask(true);\n      state.setPolygonOffset(false);\n      scene.onAfterRender(_this, scene, camera);\n\n      if (vr.enabled) {\n        vr.submitFrame();\n      } // _gl.finish();\n\n\n      currentRenderList = null;\n      currentRenderState = null;\n    };\n\n    function projectObject(object, camera, sortObjects) {\n      if (object.visible === false) return;\n      var visible = object.layers.test(camera.layers);\n\n      if (visible) {\n        if (object.isLight) {\n          currentRenderState.pushLight(object);\n\n          if (object.castShadow) {\n            currentRenderState.pushShadow(object);\n          }\n        } else if (object.isSprite) {\n          if (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n            if (sortObjects) {\n              _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n            }\n\n            var geometry = objects.update(object);\n            var material = object.material;\n            currentRenderList.push(object, geometry, material, _vector3.z, null);\n          }\n        } else if (object.isImmediateRenderObject) {\n          if (sortObjects) {\n            _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n          }\n\n          currentRenderList.push(object, null, object.material, _vector3.z, null);\n        } else if (object.isMesh || object.isLine || object.isPoints) {\n          if (object.isSkinnedMesh) {\n            object.skeleton.update();\n          }\n\n          if (!object.frustumCulled || _frustum.intersectsObject(object)) {\n            if (sortObjects) {\n              _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n            }\n\n            var geometry = objects.update(object);\n            var material = object.material;\n\n            if (Array.isArray(material)) {\n              var groups = geometry.groups;\n\n              for (var i = 0, l = groups.length; i < l; i++) {\n                var group = groups[i];\n                var groupMaterial = material[group.materialIndex];\n\n                if (groupMaterial && groupMaterial.visible) {\n                  currentRenderList.push(object, geometry, groupMaterial, _vector3.z, group);\n                }\n              }\n            } else if (material.visible) {\n              currentRenderList.push(object, geometry, material, _vector3.z, null);\n            }\n          }\n        }\n      }\n\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        projectObject(children[i], camera, sortObjects);\n      }\n    }\n\n    function renderObjects(renderList, scene, camera, overrideMaterial) {\n      for (var i = 0, l = renderList.length; i < l; i++) {\n        var renderItem = renderList[i];\n        var object = renderItem.object;\n        var geometry = renderItem.geometry;\n        var material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n        var group = renderItem.group;\n\n        if (camera.isArrayCamera) {\n          _currentArrayCamera = camera;\n          var cameras = camera.cameras;\n\n          for (var j = 0, jl = cameras.length; j < jl; j++) {\n            var camera2 = cameras[j];\n\n            if (object.layers.test(camera2.layers)) {\n              if ('viewport' in camera2) {\n                // XR\n                state.viewport(_currentViewport.copy(camera2.viewport));\n              } else {\n                var bounds = camera2.bounds;\n                var x = bounds.x * _width;\n                var y = bounds.y * _height;\n                var width = bounds.z * _width;\n                var height = bounds.w * _height;\n                state.viewport(_currentViewport.set(x, y, width, height).multiplyScalar(_pixelRatio));\n              }\n\n              currentRenderState.setupLights(camera2);\n              renderObject(object, scene, camera2, geometry, material, group);\n            }\n          }\n        } else {\n          _currentArrayCamera = null;\n          renderObject(object, scene, camera, geometry, material, group);\n        }\n      }\n    }\n\n    function renderObject(object, scene, camera, geometry, material, group) {\n      object.onBeforeRender(_this, scene, camera, geometry, material, group);\n      currentRenderState = renderStates.get(scene, _currentArrayCamera || camera);\n      object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n      object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\n      if (object.isImmediateRenderObject) {\n        state.setMaterial(material);\n        var program = setProgram(camera, scene.fog, material, object);\n        _currentGeometryProgram.geometry = null;\n        _currentGeometryProgram.program = null;\n        _currentGeometryProgram.wireframe = false;\n        renderObjectImmediate(object, program);\n      } else {\n        _this.renderBufferDirect(camera, scene.fog, geometry, material, object, group);\n      }\n\n      object.onAfterRender(_this, scene, camera, geometry, material, group);\n      currentRenderState = renderStates.get(scene, _currentArrayCamera || camera);\n    }\n\n    function initMaterial(material, fog, object) {\n      var materialProperties = properties.get(material);\n      var lights = currentRenderState.state.lights;\n      var shadowsArray = currentRenderState.state.shadowsArray;\n      var lightsHash = materialProperties.lightsHash;\n      var lightsStateHash = lights.state.hash;\n      var parameters = programCache.getParameters(material, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object);\n      var code = programCache.getProgramCode(material, parameters);\n      var program = materialProperties.program;\n      var programChange = true;\n\n      if (program === undefined) {\n        // new material\n        material.addEventListener('dispose', onMaterialDispose);\n      } else if (program.code !== code) {\n        // changed glsl or parameters\n        releaseMaterialProgramReference(material);\n      } else if (lightsHash.stateID !== lightsStateHash.stateID || lightsHash.directionalLength !== lightsStateHash.directionalLength || lightsHash.pointLength !== lightsStateHash.pointLength || lightsHash.spotLength !== lightsStateHash.spotLength || lightsHash.rectAreaLength !== lightsStateHash.rectAreaLength || lightsHash.hemiLength !== lightsStateHash.hemiLength || lightsHash.shadowsLength !== lightsStateHash.shadowsLength) {\n        lightsHash.stateID = lightsStateHash.stateID;\n        lightsHash.directionalLength = lightsStateHash.directionalLength;\n        lightsHash.pointLength = lightsStateHash.pointLength;\n        lightsHash.spotLength = lightsStateHash.spotLength;\n        lightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n        lightsHash.hemiLength = lightsStateHash.hemiLength;\n        lightsHash.shadowsLength = lightsStateHash.shadowsLength;\n        programChange = false;\n      } else if (parameters.shaderID !== undefined) {\n        // same glsl and uniform list\n        return;\n      } else {\n        // only rebuild uniform list\n        programChange = false;\n      }\n\n      if (programChange) {\n        if (parameters.shaderID) {\n          var shader = ShaderLib[parameters.shaderID];\n          materialProperties.shader = {\n            name: material.type,\n            uniforms: cloneUniforms(shader.uniforms),\n            vertexShader: shader.vertexShader,\n            fragmentShader: shader.fragmentShader\n          };\n        } else {\n          materialProperties.shader = {\n            name: material.type,\n            uniforms: material.uniforms,\n            vertexShader: material.vertexShader,\n            fragmentShader: material.fragmentShader\n          };\n        }\n\n        material.onBeforeCompile(materialProperties.shader, _this); // Computing code again as onBeforeCompile may have changed the shaders\n\n        code = programCache.getProgramCode(material, parameters);\n        program = programCache.acquireProgram(material, materialProperties.shader, parameters, code);\n        materialProperties.program = program;\n        material.program = program;\n      }\n\n      var programAttributes = program.getAttributes();\n\n      if (material.morphTargets) {\n        material.numSupportedMorphTargets = 0;\n\n        for (var i = 0; i < _this.maxMorphTargets; i++) {\n          if (programAttributes['morphTarget' + i] >= 0) {\n            material.numSupportedMorphTargets++;\n          }\n        }\n      }\n\n      if (material.morphNormals) {\n        material.numSupportedMorphNormals = 0;\n\n        for (var i = 0; i < _this.maxMorphNormals; i++) {\n          if (programAttributes['morphNormal' + i] >= 0) {\n            material.numSupportedMorphNormals++;\n          }\n        }\n      }\n\n      var uniforms = materialProperties.shader.uniforms;\n\n      if (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\n        materialProperties.numClippingPlanes = _clipping.numPlanes;\n        materialProperties.numIntersection = _clipping.numIntersection;\n        uniforms.clippingPlanes = _clipping.uniform;\n      }\n\n      materialProperties.fog = fog; // store the light setup it was created for\n\n      if (lightsHash === undefined) {\n        materialProperties.lightsHash = lightsHash = {};\n      }\n\n      lightsHash.stateID = lightsStateHash.stateID;\n      lightsHash.directionalLength = lightsStateHash.directionalLength;\n      lightsHash.pointLength = lightsStateHash.pointLength;\n      lightsHash.spotLength = lightsStateHash.spotLength;\n      lightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n      lightsHash.hemiLength = lightsStateHash.hemiLength;\n      lightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n      if (material.lights) {\n        // wire up the material to this renderer's lighting state\n        uniforms.ambientLightColor.value = lights.state.ambient;\n        uniforms.directionalLights.value = lights.state.directional;\n        uniforms.spotLights.value = lights.state.spot;\n        uniforms.rectAreaLights.value = lights.state.rectArea;\n        uniforms.pointLights.value = lights.state.point;\n        uniforms.hemisphereLights.value = lights.state.hemi;\n        uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n        uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n        uniforms.spotShadowMap.value = lights.state.spotShadowMap;\n        uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n        uniforms.pointShadowMap.value = lights.state.pointShadowMap;\n        uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\n      }\n\n      var progUniforms = materialProperties.program.getUniforms(),\n          uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n      materialProperties.uniformsList = uniformsList;\n    }\n\n    function setProgram(camera, fog, material, object) {\n      _usedTextureUnits = 0;\n      var materialProperties = properties.get(material);\n      var lights = currentRenderState.state.lights;\n      var lightsHash = materialProperties.lightsHash;\n      var lightsStateHash = lights.state.hash;\n\n      if (_clippingEnabled) {\n        if (_localClippingEnabled || camera !== _currentCamera) {\n          var useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n          // object instead of the material, once it becomes feasible\n          // (#8465, #8379)\n\n          _clipping.setState(material.clippingPlanes, material.clipIntersection, material.clipShadows, camera, materialProperties, useCache);\n        }\n      }\n\n      if (material.needsUpdate === false) {\n        if (materialProperties.program === undefined) {\n          material.needsUpdate = true;\n        } else if (material.fog && materialProperties.fog !== fog) {\n          material.needsUpdate = true;\n        } else if (material.lights && (lightsHash.stateID !== lightsStateHash.stateID || lightsHash.directionalLength !== lightsStateHash.directionalLength || lightsHash.pointLength !== lightsStateHash.pointLength || lightsHash.spotLength !== lightsStateHash.spotLength || lightsHash.rectAreaLength !== lightsStateHash.rectAreaLength || lightsHash.hemiLength !== lightsStateHash.hemiLength || lightsHash.shadowsLength !== lightsStateHash.shadowsLength)) {\n          material.needsUpdate = true;\n        } else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== _clipping.numPlanes || materialProperties.numIntersection !== _clipping.numIntersection)) {\n          material.needsUpdate = true;\n        }\n      }\n\n      if (material.needsUpdate) {\n        initMaterial(material, fog, object);\n        material.needsUpdate = false;\n      }\n\n      var refreshProgram = false;\n      var refreshMaterial = false;\n      var refreshLights = false;\n      var program = materialProperties.program,\n          p_uniforms = program.getUniforms(),\n          m_uniforms = materialProperties.shader.uniforms;\n\n      if (state.useProgram(program.program)) {\n        refreshProgram = true;\n        refreshMaterial = true;\n        refreshLights = true;\n      }\n\n      if (material.id !== _currentMaterialId) {\n        _currentMaterialId = material.id;\n        refreshMaterial = true;\n      }\n\n      if (refreshProgram || _currentCamera !== camera) {\n        p_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\n\n        if (capabilities.logarithmicDepthBuffer) {\n          p_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n        }\n\n        if (_currentCamera !== camera) {\n          _currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n          // now, in case this material supports lights - or later, when\n          // the next material that does gets activated:\n\n          refreshMaterial = true; // set to true on material change\n\n          refreshLights = true; // remains set until update done\n        } // load material specific uniforms\n        // (shader material also gets them for the sake of genericity)\n\n\n        if (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.envMap) {\n          var uCamPos = p_uniforms.map.cameraPosition;\n\n          if (uCamPos !== undefined) {\n            uCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n          }\n        }\n\n        if (material.isMeshPhongMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.skinning) {\n          p_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n        }\n      } // skinning uniforms must be set even if material didn't change\n      // auto-setting of texture unit for bone texture must go before other textures\n      // not sure why, but otherwise weird things happen\n\n\n      if (material.skinning) {\n        p_uniforms.setOptional(_gl, object, 'bindMatrix');\n        p_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n        var skeleton = object.skeleton;\n\n        if (skeleton) {\n          var bones = skeleton.bones;\n\n          if (capabilities.floatVertexTextures) {\n            if (skeleton.boneTexture === undefined) {\n              // layout (1 matrix = 4 pixels)\n              //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n              //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n              //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n              //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n              //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n              var size = Math.sqrt(bones.length * 4); // 4 pixels needed for 1 matrix\n\n              size = _Math.ceilPowerOfTwo(size);\n              size = Math.max(size, 4);\n              var boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n\n              boneMatrices.set(skeleton.boneMatrices); // copy current values\n\n              var boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\n              boneTexture.needsUpdate = true;\n              skeleton.boneMatrices = boneMatrices;\n              skeleton.boneTexture = boneTexture;\n              skeleton.boneTextureSize = size;\n            }\n\n            p_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture);\n            p_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\n          } else {\n            p_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n          }\n        }\n      }\n\n      if (refreshMaterial) {\n        p_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\n        p_uniforms.setValue(_gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint);\n\n        if (material.lights) {\n          // the current material requires lighting info\n          // note: all lighting uniforms are always set correctly\n          // they simply reference the renderer's state for their\n          // values\n          //\n          // use the current material's .needsUpdate flags to set\n          // the GL state when required\n          markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n        } // refresh uniforms common to several materials\n\n\n        if (fog && material.fog) {\n          refreshUniformsFog(m_uniforms, fog);\n        }\n\n        if (material.isMeshBasicMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n        } else if (material.isMeshLambertMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n          refreshUniformsLambert(m_uniforms, material);\n        } else if (material.isMeshPhongMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n\n          if (material.isMeshToonMaterial) {\n            refreshUniformsToon(m_uniforms, material);\n          } else {\n            refreshUniformsPhong(m_uniforms, material);\n          }\n        } else if (material.isMeshStandardMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n\n          if (material.isMeshPhysicalMaterial) {\n            refreshUniformsPhysical(m_uniforms, material);\n          } else {\n            refreshUniformsStandard(m_uniforms, material);\n          }\n        } else if (material.isMeshMatcapMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n          refreshUniformsMatcap(m_uniforms, material);\n        } else if (material.isMeshDepthMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n          refreshUniformsDepth(m_uniforms, material);\n        } else if (material.isMeshDistanceMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n          refreshUniformsDistance(m_uniforms, material);\n        } else if (material.isMeshNormalMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n          refreshUniformsNormal(m_uniforms, material);\n        } else if (material.isLineBasicMaterial) {\n          refreshUniformsLine(m_uniforms, material);\n\n          if (material.isLineDashedMaterial) {\n            refreshUniformsDash(m_uniforms, material);\n          }\n        } else if (material.isPointsMaterial) {\n          refreshUniformsPoints(m_uniforms, material);\n        } else if (material.isSpriteMaterial) {\n          refreshUniformsSprites(m_uniforms, material);\n        } else if (material.isShadowMaterial) {\n          m_uniforms.color.value = material.color;\n          m_uniforms.opacity.value = material.opacity;\n        } // RectAreaLight Texture\n        // TODO (mrdoob): Find a nicer implementation\n\n\n        if (m_uniforms.ltc_1 !== undefined) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n        if (m_uniforms.ltc_2 !== undefined) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n        WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, _this);\n      }\n\n      if (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\n        WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, _this);\n        material.uniformsNeedUpdate = false;\n      }\n\n      if (material.isSpriteMaterial) {\n        p_uniforms.setValue(_gl, 'center', object.center);\n      } // common matrices\n\n\n      p_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\n      p_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\n      p_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\n      return program;\n    } // Uniforms (refresh uniforms objects)\n\n\n    function refreshUniformsCommon(uniforms, material) {\n      uniforms.opacity.value = material.opacity;\n\n      if (material.color) {\n        uniforms.diffuse.value = material.color;\n      }\n\n      if (material.emissive) {\n        uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n      }\n\n      if (material.map) {\n        uniforms.map.value = material.map;\n      }\n\n      if (material.alphaMap) {\n        uniforms.alphaMap.value = material.alphaMap;\n      }\n\n      if (material.specularMap) {\n        uniforms.specularMap.value = material.specularMap;\n      }\n\n      if (material.envMap) {\n        uniforms.envMap.value = material.envMap; // don't flip CubeTexture envMaps, flip everything else:\n        //  WebGLRenderTargetCube will be flipped for backwards compatibility\n        //  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n        // this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\n        uniforms.flipEnvMap.value = material.envMap.isCubeTexture ? -1 : 1;\n        uniforms.reflectivity.value = material.reflectivity;\n        uniforms.refractionRatio.value = material.refractionRatio;\n        uniforms.maxMipLevel.value = properties.get(material.envMap).__maxMipLevel;\n      }\n\n      if (material.lightMap) {\n        uniforms.lightMap.value = material.lightMap;\n        uniforms.lightMapIntensity.value = material.lightMapIntensity;\n      }\n\n      if (material.aoMap) {\n        uniforms.aoMap.value = material.aoMap;\n        uniforms.aoMapIntensity.value = material.aoMapIntensity;\n      } // uv repeat and offset setting priorities\n      // 1. color map\n      // 2. specular map\n      // 3. normal map\n      // 4. bump map\n      // 5. alpha map\n      // 6. emissive map\n\n\n      var uvScaleMap;\n\n      if (material.map) {\n        uvScaleMap = material.map;\n      } else if (material.specularMap) {\n        uvScaleMap = material.specularMap;\n      } else if (material.displacementMap) {\n        uvScaleMap = material.displacementMap;\n      } else if (material.normalMap) {\n        uvScaleMap = material.normalMap;\n      } else if (material.bumpMap) {\n        uvScaleMap = material.bumpMap;\n      } else if (material.roughnessMap) {\n        uvScaleMap = material.roughnessMap;\n      } else if (material.metalnessMap) {\n        uvScaleMap = material.metalnessMap;\n      } else if (material.alphaMap) {\n        uvScaleMap = material.alphaMap;\n      } else if (material.emissiveMap) {\n        uvScaleMap = material.emissiveMap;\n      }\n\n      if (uvScaleMap !== undefined) {\n        // backwards compatibility\n        if (uvScaleMap.isWebGLRenderTarget) {\n          uvScaleMap = uvScaleMap.texture;\n        }\n\n        if (uvScaleMap.matrixAutoUpdate === true) {\n          uvScaleMap.updateMatrix();\n        }\n\n        uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n      }\n    }\n\n    function refreshUniformsLine(uniforms, material) {\n      uniforms.diffuse.value = material.color;\n      uniforms.opacity.value = material.opacity;\n    }\n\n    function refreshUniformsDash(uniforms, material) {\n      uniforms.dashSize.value = material.dashSize;\n      uniforms.totalSize.value = material.dashSize + material.gapSize;\n      uniforms.scale.value = material.scale;\n    }\n\n    function refreshUniformsPoints(uniforms, material) {\n      uniforms.diffuse.value = material.color;\n      uniforms.opacity.value = material.opacity;\n      uniforms.size.value = material.size * _pixelRatio;\n      uniforms.scale.value = _height * 0.5;\n      uniforms.map.value = material.map;\n\n      if (material.map !== null) {\n        if (material.map.matrixAutoUpdate === true) {\n          material.map.updateMatrix();\n        }\n\n        uniforms.uvTransform.value.copy(material.map.matrix);\n      }\n    }\n\n    function refreshUniformsSprites(uniforms, material) {\n      uniforms.diffuse.value = material.color;\n      uniforms.opacity.value = material.opacity;\n      uniforms.rotation.value = material.rotation;\n      uniforms.map.value = material.map;\n\n      if (material.map !== null) {\n        if (material.map.matrixAutoUpdate === true) {\n          material.map.updateMatrix();\n        }\n\n        uniforms.uvTransform.value.copy(material.map.matrix);\n      }\n    }\n\n    function refreshUniformsFog(uniforms, fog) {\n      uniforms.fogColor.value = fog.color;\n\n      if (fog.isFog) {\n        uniforms.fogNear.value = fog.near;\n        uniforms.fogFar.value = fog.far;\n      } else if (fog.isFogExp2) {\n        uniforms.fogDensity.value = fog.density;\n      }\n    }\n\n    function refreshUniformsLambert(uniforms, material) {\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n    }\n\n    function refreshUniformsPhong(uniforms, material) {\n      uniforms.specular.value = material.specular;\n      uniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsToon(uniforms, material) {\n      refreshUniformsPhong(uniforms, material);\n\n      if (material.gradientMap) {\n        uniforms.gradientMap.value = material.gradientMap;\n      }\n    }\n\n    function refreshUniformsStandard(uniforms, material) {\n      uniforms.roughness.value = material.roughness;\n      uniforms.metalness.value = material.metalness;\n\n      if (material.roughnessMap) {\n        uniforms.roughnessMap.value = material.roughnessMap;\n      }\n\n      if (material.metalnessMap) {\n        uniforms.metalnessMap.value = material.metalnessMap;\n      }\n\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n\n      if (material.envMap) {\n        //uniforms.envMap.value = material.envMap; // part of uniforms common\n        uniforms.envMapIntensity.value = material.envMapIntensity;\n      }\n    }\n\n    function refreshUniformsPhysical(uniforms, material) {\n      refreshUniformsStandard(uniforms, material);\n      uniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n      uniforms.clearCoat.value = material.clearCoat;\n      uniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n    }\n\n    function refreshUniformsMatcap(uniforms, material) {\n      if (material.matcap) {\n        uniforms.matcap.value = material.matcap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsDepth(uniforms, material) {\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsDistance(uniforms, material) {\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n\n      uniforms.referencePosition.value.copy(material.referencePosition);\n      uniforms.nearDistance.value = material.nearDistance;\n      uniforms.farDistance.value = material.farDistance;\n    }\n\n    function refreshUniformsNormal(uniforms, material) {\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n    function markUniformsLightsNeedsUpdate(uniforms, value) {\n      uniforms.ambientLightColor.needsUpdate = value;\n      uniforms.directionalLights.needsUpdate = value;\n      uniforms.pointLights.needsUpdate = value;\n      uniforms.spotLights.needsUpdate = value;\n      uniforms.rectAreaLights.needsUpdate = value;\n      uniforms.hemisphereLights.needsUpdate = value;\n    } // Textures\n\n\n    function allocTextureUnit() {\n      var textureUnit = _usedTextureUnits;\n\n      if (textureUnit >= capabilities.maxTextures) {\n        console.warn('THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures);\n      }\n\n      _usedTextureUnits += 1;\n      return textureUnit;\n    }\n\n    this.allocTextureUnit = allocTextureUnit; // this.setTexture2D = setTexture2D;\n\n    this.setTexture2D = function () {\n      var warned = false; // backwards compatibility: peel texture.texture\n\n      return function setTexture2D(texture, slot) {\n        if (texture && texture.isWebGLRenderTarget) {\n          if (!warned) {\n            console.warn(\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\");\n            warned = true;\n          }\n\n          texture = texture.texture;\n        }\n\n        textures.setTexture2D(texture, slot);\n      };\n    }();\n\n    this.setTexture3D = function () {\n      // backwards compatibility: peel texture.texture\n      return function setTexture3D(texture, slot) {\n        textures.setTexture3D(texture, slot);\n      };\n    }();\n\n    this.setTexture = function () {\n      var warned = false;\n      return function setTexture(texture, slot) {\n        if (!warned) {\n          console.warn(\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\");\n          warned = true;\n        }\n\n        textures.setTexture2D(texture, slot);\n      };\n    }();\n\n    this.setTextureCube = function () {\n      var warned = false;\n      return function setTextureCube(texture, slot) {\n        // backwards compatibility: peel texture.texture\n        if (texture && texture.isWebGLRenderTargetCube) {\n          if (!warned) {\n            console.warn(\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\");\n            warned = true;\n          }\n\n          texture = texture.texture;\n        } // currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n        // TODO: unify these code paths\n\n\n        if (texture && texture.isCubeTexture || Array.isArray(texture.image) && texture.image.length === 6) {\n          // CompressedTexture can have Array in image :/\n          // this function alone should take care of cube textures\n          textures.setTextureCube(texture, slot);\n        } else {\n          // assumed: texture property of THREE.WebGLRenderTargetCube\n          textures.setTextureCubeDynamic(texture, slot);\n        }\n      };\n    }(); //\n\n\n    this.setFramebuffer = function (value) {\n      _framebuffer = value;\n    };\n\n    this.getRenderTarget = function () {\n      return _currentRenderTarget;\n    };\n\n    this.setRenderTarget = function (renderTarget) {\n      _currentRenderTarget = renderTarget;\n\n      if (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n        textures.setupRenderTarget(renderTarget);\n      }\n\n      var framebuffer = _framebuffer;\n      var isCube = false;\n\n      if (renderTarget) {\n        var __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n        if (renderTarget.isWebGLRenderTargetCube) {\n          framebuffer = __webglFramebuffer[renderTarget.activeCubeFace];\n          isCube = true;\n        } else {\n          framebuffer = __webglFramebuffer;\n        }\n\n        _currentViewport.copy(renderTarget.viewport);\n\n        _currentScissor.copy(renderTarget.scissor);\n\n        _currentScissorTest = renderTarget.scissorTest;\n      } else {\n        _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio);\n\n        _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio);\n\n        _currentScissorTest = _scissorTest;\n      }\n\n      if (_currentFramebuffer !== framebuffer) {\n        _gl.bindFramebuffer(36160, framebuffer);\n\n        _currentFramebuffer = framebuffer;\n      }\n\n      state.viewport(_currentViewport);\n      state.scissor(_currentScissor);\n      state.setScissorTest(_currentScissorTest);\n\n      if (isCube) {\n        var textureProperties = properties.get(renderTarget.texture);\n\n        _gl.framebufferTexture2D(36160, 36064, 34069 + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel);\n      }\n    };\n\n    this.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer) {\n      if (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n        console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n        return;\n      }\n\n      var framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n      if (framebuffer) {\n        var restore = false;\n\n        if (framebuffer !== _currentFramebuffer) {\n          _gl.bindFramebuffer(36160, framebuffer);\n\n          restore = true;\n        }\n\n        try {\n          var texture = renderTarget.texture;\n          var textureFormat = texture.format;\n          var textureType = texture.type;\n\n          if (textureFormat !== RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(35739)) {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n            return;\n          }\n\n          if (textureType !== UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(35738) && // IE11, Edge and Chrome Mac < 52 (#9513)\n          !(textureType === FloatType && (capabilities.isWebGL2 || extensions.get('OES_texture_float') || extensions.get('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n          !(textureType === HalfFloatType && (capabilities.isWebGL2 ? extensions.get('EXT_color_buffer_float') : extensions.get('EXT_color_buffer_half_float')))) {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n            return;\n          }\n\n          if (_gl.checkFramebufferStatus(36160) === 36053) {\n            // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n            if (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n              _gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\n            }\n          } else {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n          }\n        } finally {\n          if (restore) {\n            _gl.bindFramebuffer(36160, _currentFramebuffer);\n          }\n        }\n      }\n    };\n\n    this.copyFramebufferToTexture = function (position, texture, level) {\n      var width = texture.image.width;\n      var height = texture.image.height;\n      var glFormat = utils.convert(texture.format);\n      this.setTexture2D(texture, 0);\n\n      _gl.copyTexImage2D(3553, level || 0, glFormat, position.x, position.y, width, height, 0);\n    };\n\n    this.copyTextureToTexture = function (position, srcTexture, dstTexture, level) {\n      var width = srcTexture.image.width;\n      var height = srcTexture.image.height;\n      var glFormat = utils.convert(dstTexture.format);\n      var glType = utils.convert(dstTexture.type);\n      this.setTexture2D(dstTexture, 0);\n\n      if (srcTexture.isDataTexture) {\n        _gl.texSubImage2D(3553, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);\n      } else {\n        _gl.texSubImage2D(3553, level || 0, position.x, position.y, glFormat, glType, srcTexture.image);\n      }\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  function FogExp2(color, density) {\n    this.name = '';\n    this.color = new Color(color);\n    this.density = density !== undefined ? density : 0.00025;\n  }\n\n  FogExp2.prototype.isFogExp2 = true;\n\n  FogExp2.prototype.clone = function () {\n    return new FogExp2(this.color, this.density);\n  };\n\n  FogExp2.prototype.toJSON = function ()\n  /* meta */\n  {\n    return {\n      type: 'FogExp2',\n      color: this.color.getHex(),\n      density: this.density\n    };\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  function Fog(color, near, far) {\n    this.name = '';\n    this.color = new Color(color);\n    this.near = near !== undefined ? near : 1;\n    this.far = far !== undefined ? far : 1000;\n  }\n\n  Fog.prototype.isFog = true;\n\n  Fog.prototype.clone = function () {\n    return new Fog(this.color, this.near, this.far);\n  };\n\n  Fog.prototype.toJSON = function ()\n  /* meta */\n  {\n    return {\n      type: 'Fog',\n      color: this.color.getHex(),\n      near: this.near,\n      far: this.far\n    };\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function Scene() {\n    Object3D.call(this);\n    this.type = 'Scene';\n    this.background = null;\n    this.fog = null;\n    this.overrideMaterial = null;\n    this.autoUpdate = true; // checked by the renderer\n  }\n\n  Scene.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Scene,\n    copy: function copy(source, recursive) {\n      Object3D.prototype.copy.call(this, source, recursive);\n      if (source.background !== null) this.background = source.background.clone();\n      if (source.fog !== null) this.fog = source.fog.clone();\n      if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n      this.autoUpdate = source.autoUpdate;\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      return this;\n    },\n    toJSON: function toJSON(meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      if (this.background !== null) data.object.background = this.background.toJSON(meta);\n      if (this.fog !== null) data.object.fog = this.fog.toJSON();\n      return data;\n    }\n  });\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  function InterleavedBuffer(array, stride) {\n    this.array = array;\n    this.stride = stride;\n    this.count = array !== undefined ? array.length / stride : 0;\n    this.dynamic = false;\n    this.updateRange = {\n      offset: 0,\n      count: -1\n    };\n    this.version = 0;\n  }\n\n  Object.defineProperty(InterleavedBuffer.prototype, 'needsUpdate', {\n    set: function set(value) {\n      if (value === true) this.version++;\n    }\n  });\n  Object.assign(InterleavedBuffer.prototype, {\n    isInterleavedBuffer: true,\n    onUploadCallback: function onUploadCallback() {},\n    setArray: function setArray(array) {\n      if (Array.isArray(array)) {\n        throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n      }\n\n      this.count = array !== undefined ? array.length / this.stride : 0;\n      this.array = array;\n      return this;\n    },\n    setDynamic: function setDynamic(value) {\n      this.dynamic = value;\n      return this;\n    },\n    copy: function copy(source) {\n      this.array = new source.array.constructor(source.array);\n      this.count = source.count;\n      this.stride = source.stride;\n      this.dynamic = source.dynamic;\n      return this;\n    },\n    copyAt: function copyAt(index1, attribute, index2) {\n      index1 *= this.stride;\n      index2 *= attribute.stride;\n\n      for (var i = 0, l = this.stride; i < l; i++) {\n        this.array[index1 + i] = attribute.array[index2 + i];\n      }\n\n      return this;\n    },\n    set: function set(value, offset) {\n      if (offset === undefined) offset = 0;\n      this.array.set(value, offset);\n      return this;\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    onUpload: function onUpload(callback) {\n      this.onUploadCallback = callback;\n      return this;\n    }\n  });\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  function InterleavedBufferAttribute(interleavedBuffer, itemSize, offset, normalized) {\n    this.data = interleavedBuffer;\n    this.itemSize = itemSize;\n    this.offset = offset;\n    this.normalized = normalized === true;\n  }\n\n  Object.defineProperties(InterleavedBufferAttribute.prototype, {\n    count: {\n      get: function get() {\n        return this.data.count;\n      }\n    },\n    array: {\n      get: function get() {\n        return this.data.array;\n      }\n    }\n  });\n  Object.assign(InterleavedBufferAttribute.prototype, {\n    isInterleavedBufferAttribute: true,\n    setX: function setX(index, x) {\n      this.data.array[index * this.data.stride + this.offset] = x;\n      return this;\n    },\n    setY: function setY(index, y) {\n      this.data.array[index * this.data.stride + this.offset + 1] = y;\n      return this;\n    },\n    setZ: function setZ(index, z) {\n      this.data.array[index * this.data.stride + this.offset + 2] = z;\n      return this;\n    },\n    setW: function setW(index, w) {\n      this.data.array[index * this.data.stride + this.offset + 3] = w;\n      return this;\n    },\n    getX: function getX(index) {\n      return this.data.array[index * this.data.stride + this.offset];\n    },\n    getY: function getY(index) {\n      return this.data.array[index * this.data.stride + this.offset + 1];\n    },\n    getZ: function getZ(index) {\n      return this.data.array[index * this.data.stride + this.offset + 2];\n    },\n    getW: function getW(index) {\n      return this.data.array[index * this.data.stride + this.offset + 3];\n    },\n    setXY: function setXY(index, x, y) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      return this;\n    },\n    setXYZ: function setXYZ(index, x, y, z) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      this.data.array[index + 2] = z;\n      return this;\n    },\n    setXYZW: function setXYZW(index, x, y, z, w) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      this.data.array[index + 2] = z;\n      this.data.array[index + 3] = w;\n      return this;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  map: new THREE.Texture( <Image> ),\n   *  rotation: <float>,\n   *  sizeAttenuation: <bool>\n   * }\n   */\n\n  function SpriteMaterial(parameters) {\n    Material.call(this);\n    this.type = 'SpriteMaterial';\n    this.color = new Color(0xffffff);\n    this.map = null;\n    this.rotation = 0;\n    this.sizeAttenuation = true;\n    this.lights = false;\n    this.transparent = true;\n    this.setValues(parameters);\n  }\n\n  SpriteMaterial.prototype = Object.create(Material.prototype);\n  SpriteMaterial.prototype.constructor = SpriteMaterial;\n  SpriteMaterial.prototype.isSpriteMaterial = true;\n\n  SpriteMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.rotation = source.rotation;\n    this.sizeAttenuation = source.sizeAttenuation;\n    return this;\n  };\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  var geometry;\n\n  function Sprite(material) {\n    Object3D.call(this);\n    this.type = 'Sprite';\n\n    if (geometry === undefined) {\n      geometry = new BufferGeometry();\n      var float32Array = new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]);\n      var interleavedBuffer = new InterleavedBuffer(float32Array, 5);\n      geometry.setIndex([0, 1, 2, 0, 2, 3]);\n      geometry.addAttribute('position', new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false));\n      geometry.addAttribute('uv', new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false));\n    }\n\n    this.geometry = geometry;\n    this.material = material !== undefined ? material : new SpriteMaterial();\n    this.center = new Vector2(0.5, 0.5);\n  }\n\n  Sprite.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Sprite,\n    isSprite: true,\n    raycast: function () {\n      var intersectPoint = new Vector3();\n      var worldScale = new Vector3();\n      var mvPosition = new Vector3();\n      var alignedPosition = new Vector2();\n      var rotatedPosition = new Vector2();\n      var viewWorldMatrix = new Matrix4();\n      var vA = new Vector3();\n      var vB = new Vector3();\n      var vC = new Vector3();\n      var uvA = new Vector2();\n      var uvB = new Vector2();\n      var uvC = new Vector2();\n\n      function transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\n        // compute position in camera space\n        alignedPosition.subVectors(vertexPosition, center).addScalar(0.5).multiply(scale); // to check if rotation is not zero\n\n        if (sin !== undefined) {\n          rotatedPosition.x = cos * alignedPosition.x - sin * alignedPosition.y;\n          rotatedPosition.y = sin * alignedPosition.x + cos * alignedPosition.y;\n        } else {\n          rotatedPosition.copy(alignedPosition);\n        }\n\n        vertexPosition.copy(mvPosition);\n        vertexPosition.x += rotatedPosition.x;\n        vertexPosition.y += rotatedPosition.y; // transform to world space\n\n        vertexPosition.applyMatrix4(viewWorldMatrix);\n      }\n\n      return function raycast(raycaster, intersects) {\n        worldScale.setFromMatrixScale(this.matrixWorld);\n        viewWorldMatrix.getInverse(this.modelViewMatrix).premultiply(this.matrixWorld);\n        mvPosition.setFromMatrixPosition(this.modelViewMatrix);\n        var rotation = this.material.rotation;\n        var sin, cos;\n\n        if (rotation !== 0) {\n          cos = Math.cos(rotation);\n          sin = Math.sin(rotation);\n        }\n\n        var center = this.center;\n        transformVertex(vA.set(-0.5, -0.5, 0), mvPosition, center, worldScale, sin, cos);\n        transformVertex(vB.set(0.5, -0.5, 0), mvPosition, center, worldScale, sin, cos);\n        transformVertex(vC.set(0.5, 0.5, 0), mvPosition, center, worldScale, sin, cos);\n        uvA.set(0, 0);\n        uvB.set(1, 0);\n        uvC.set(1, 1); // check first triangle\n\n        var intersect = raycaster.ray.intersectTriangle(vA, vB, vC, false, intersectPoint);\n\n        if (intersect === null) {\n          // check second triangle\n          transformVertex(vB.set(-0.5, 0.5, 0), mvPosition, center, worldScale, sin, cos);\n          uvB.set(0, 1);\n          intersect = raycaster.ray.intersectTriangle(vA, vC, vB, false, intersectPoint);\n\n          if (intersect === null) {\n            return;\n          }\n        }\n\n        var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n        if (distance < raycaster.near || distance > raycaster.far) return;\n        intersects.push({\n          distance: distance,\n          point: intersectPoint.clone(),\n          uv: Triangle.getUV(intersectPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2()),\n          face: null,\n          object: this\n        });\n      };\n    }(),\n    clone: function clone() {\n      return new this.constructor(this.material).copy(this);\n    },\n    copy: function copy(source) {\n      Object3D.prototype.copy.call(this, source);\n      if (source.center !== undefined) this.center.copy(source.center);\n      return this;\n    }\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function LOD() {\n    Object3D.call(this);\n    this.type = 'LOD';\n    Object.defineProperties(this, {\n      levels: {\n        enumerable: true,\n        value: []\n      }\n    });\n  }\n\n  LOD.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: LOD,\n    copy: function copy(source) {\n      Object3D.prototype.copy.call(this, source, false);\n      var levels = source.levels;\n\n      for (var i = 0, l = levels.length; i < l; i++) {\n        var level = levels[i];\n        this.addLevel(level.object.clone(), level.distance);\n      }\n\n      return this;\n    },\n    addLevel: function addLevel(object, distance) {\n      if (distance === undefined) distance = 0;\n      distance = Math.abs(distance);\n      var levels = this.levels;\n\n      for (var l = 0; l < levels.length; l++) {\n        if (distance < levels[l].distance) {\n          break;\n        }\n      }\n\n      levels.splice(l, 0, {\n        distance: distance,\n        object: object\n      });\n      this.add(object);\n    },\n    getObjectForDistance: function getObjectForDistance(distance) {\n      var levels = this.levels;\n\n      for (var i = 1, l = levels.length; i < l; i++) {\n        if (distance < levels[i].distance) {\n          break;\n        }\n      }\n\n      return levels[i - 1].object;\n    },\n    raycast: function () {\n      var matrixPosition = new Vector3();\n      return function raycast(raycaster, intersects) {\n        matrixPosition.setFromMatrixPosition(this.matrixWorld);\n        var distance = raycaster.ray.origin.distanceTo(matrixPosition);\n        this.getObjectForDistance(distance).raycast(raycaster, intersects);\n      };\n    }(),\n    update: function () {\n      var v1 = new Vector3();\n      var v2 = new Vector3();\n      return function update(camera) {\n        var levels = this.levels;\n\n        if (levels.length > 1) {\n          v1.setFromMatrixPosition(camera.matrixWorld);\n          v2.setFromMatrixPosition(this.matrixWorld);\n          var distance = v1.distanceTo(v2);\n          levels[0].object.visible = true;\n\n          for (var i = 1, l = levels.length; i < l; i++) {\n            if (distance >= levels[i].distance) {\n              levels[i - 1].object.visible = false;\n              levels[i].object.visible = true;\n            } else {\n              break;\n            }\n          }\n\n          for (; i < l; i++) {\n            levels[i].object.visible = false;\n          }\n        }\n      };\n    }(),\n    toJSON: function toJSON(meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      data.object.levels = [];\n      var levels = this.levels;\n\n      for (var i = 0, l = levels.length; i < l; i++) {\n        var level = levels[i];\n        data.object.levels.push({\n          object: level.object.uuid,\n          distance: level.distance\n        });\n      }\n\n      return data;\n    }\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author ikerr / http://verold.com\n   */\n\n  function SkinnedMesh(geometry, material) {\n    if (geometry && geometry.isGeometry) {\n      console.error('THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n    }\n\n    Mesh.call(this, geometry, material);\n    this.type = 'SkinnedMesh';\n    this.bindMode = 'attached';\n    this.bindMatrix = new Matrix4();\n    this.bindMatrixInverse = new Matrix4();\n  }\n\n  SkinnedMesh.prototype = Object.assign(Object.create(Mesh.prototype), {\n    constructor: SkinnedMesh,\n    isSkinnedMesh: true,\n    bind: function bind(skeleton, bindMatrix) {\n      this.skeleton = skeleton;\n\n      if (bindMatrix === undefined) {\n        this.updateMatrixWorld(true);\n        this.skeleton.calculateInverses();\n        bindMatrix = this.matrixWorld;\n      }\n\n      this.bindMatrix.copy(bindMatrix);\n      this.bindMatrixInverse.getInverse(bindMatrix);\n    },\n    pose: function pose() {\n      this.skeleton.pose();\n    },\n    normalizeSkinWeights: function normalizeSkinWeights() {\n      var vector = new Vector4();\n      var skinWeight = this.geometry.attributes.skinWeight;\n\n      for (var i = 0, l = skinWeight.count; i < l; i++) {\n        vector.x = skinWeight.getX(i);\n        vector.y = skinWeight.getY(i);\n        vector.z = skinWeight.getZ(i);\n        vector.w = skinWeight.getW(i);\n        var scale = 1.0 / vector.manhattanLength();\n\n        if (scale !== Infinity) {\n          vector.multiplyScalar(scale);\n        } else {\n          vector.set(1, 0, 0, 0); // do something reasonable\n        }\n\n        skinWeight.setXYZW(i, vector.x, vector.y, vector.z, vector.w);\n      }\n    },\n    updateMatrixWorld: function updateMatrixWorld(force) {\n      Mesh.prototype.updateMatrixWorld.call(this, force);\n\n      if (this.bindMode === 'attached') {\n        this.bindMatrixInverse.getInverse(this.matrixWorld);\n      } else if (this.bindMode === 'detached') {\n        this.bindMatrixInverse.getInverse(this.bindMatrix);\n      } else {\n        console.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\n      }\n    },\n    clone: function clone() {\n      return new this.constructor(this.geometry, this.material).copy(this);\n    }\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author michael guerrero / http://realitymeltdown.com\n   * @author ikerr / http://verold.com\n   */\n\n  function Skeleton(bones, boneInverses) {\n    // copy the bone array\n    bones = bones || [];\n    this.bones = bones.slice(0);\n    this.boneMatrices = new Float32Array(this.bones.length * 16); // use the supplied bone inverses or calculate the inverses\n\n    if (boneInverses === undefined) {\n      this.calculateInverses();\n    } else {\n      if (this.bones.length === boneInverses.length) {\n        this.boneInverses = boneInverses.slice(0);\n      } else {\n        console.warn('THREE.Skeleton boneInverses is the wrong length.');\n        this.boneInverses = [];\n\n        for (var i = 0, il = this.bones.length; i < il; i++) {\n          this.boneInverses.push(new Matrix4());\n        }\n      }\n    }\n  }\n\n  Object.assign(Skeleton.prototype, {\n    calculateInverses: function calculateInverses() {\n      this.boneInverses = [];\n\n      for (var i = 0, il = this.bones.length; i < il; i++) {\n        var inverse = new Matrix4();\n\n        if (this.bones[i]) {\n          inverse.getInverse(this.bones[i].matrixWorld);\n        }\n\n        this.boneInverses.push(inverse);\n      }\n    },\n    pose: function pose() {\n      var bone, i, il; // recover the bind-time world matrices\n\n      for (i = 0, il = this.bones.length; i < il; i++) {\n        bone = this.bones[i];\n\n        if (bone) {\n          bone.matrixWorld.getInverse(this.boneInverses[i]);\n        }\n      } // compute the local matrices, positions, rotations and scales\n\n\n      for (i = 0, il = this.bones.length; i < il; i++) {\n        bone = this.bones[i];\n\n        if (bone) {\n          if (bone.parent && bone.parent.isBone) {\n            bone.matrix.getInverse(bone.parent.matrixWorld);\n            bone.matrix.multiply(bone.matrixWorld);\n          } else {\n            bone.matrix.copy(bone.matrixWorld);\n          }\n\n          bone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n        }\n      }\n    },\n    update: function () {\n      var offsetMatrix = new Matrix4();\n      var identityMatrix = new Matrix4();\n      return function update() {\n        var bones = this.bones;\n        var boneInverses = this.boneInverses;\n        var boneMatrices = this.boneMatrices;\n        var boneTexture = this.boneTexture; // flatten bone matrices to array\n\n        for (var i = 0, il = bones.length; i < il; i++) {\n          // compute the offset between the current and the original transform\n          var matrix = bones[i] ? bones[i].matrixWorld : identityMatrix;\n          offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\n          offsetMatrix.toArray(boneMatrices, i * 16);\n        }\n\n        if (boneTexture !== undefined) {\n          boneTexture.needsUpdate = true;\n        }\n      };\n    }(),\n    clone: function clone() {\n      return new Skeleton(this.bones, this.boneInverses);\n    },\n    getBoneByName: function getBoneByName(name) {\n      for (var i = 0, il = this.bones.length; i < il; i++) {\n        var bone = this.bones[i];\n\n        if (bone.name === name) {\n          return bone;\n        }\n      }\n\n      return undefined;\n    }\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author ikerr / http://verold.com\n   */\n\n  function Bone() {\n    Object3D.call(this);\n    this.type = 'Bone';\n  }\n\n  Bone.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Bone,\n    isBone: true\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *\n   *  linewidth: <float>,\n   *  linecap: \"round\",\n   *  linejoin: \"round\"\n   * }\n   */\n\n  function LineBasicMaterial(parameters) {\n    Material.call(this);\n    this.type = 'LineBasicMaterial';\n    this.color = new Color(0xffffff);\n    this.linewidth = 1;\n    this.linecap = 'round';\n    this.linejoin = 'round';\n    this.lights = false;\n    this.setValues(parameters);\n  }\n\n  LineBasicMaterial.prototype = Object.create(Material.prototype);\n  LineBasicMaterial.prototype.constructor = LineBasicMaterial;\n  LineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n  LineBasicMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.linewidth = source.linewidth;\n    this.linecap = source.linecap;\n    this.linejoin = source.linejoin;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function Line(geometry, material, mode) {\n    if (mode === 1) {\n      console.error('THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.');\n    }\n\n    Object3D.call(this);\n    this.type = 'Line';\n    this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n    this.material = material !== undefined ? material : new LineBasicMaterial({\n      color: Math.random() * 0xffffff\n    });\n  }\n\n  Line.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Line,\n    isLine: true,\n    computeLineDistances: function () {\n      var start = new Vector3();\n      var end = new Vector3();\n      return function computeLineDistances() {\n        var geometry = this.geometry;\n\n        if (geometry.isBufferGeometry) {\n          // we assume non-indexed geometry\n          if (geometry.index === null) {\n            var positionAttribute = geometry.attributes.position;\n            var lineDistances = [0];\n\n            for (var i = 1, l = positionAttribute.count; i < l; i++) {\n              start.fromBufferAttribute(positionAttribute, i - 1);\n              end.fromBufferAttribute(positionAttribute, i);\n              lineDistances[i] = lineDistances[i - 1];\n              lineDistances[i] += start.distanceTo(end);\n            }\n\n            geometry.addAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n          } else {\n            console.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n          }\n        } else if (geometry.isGeometry) {\n          var vertices = geometry.vertices;\n          var lineDistances = geometry.lineDistances;\n          lineDistances[0] = 0;\n\n          for (var i = 1, l = vertices.length; i < l; i++) {\n            lineDistances[i] = lineDistances[i - 1];\n            lineDistances[i] += vertices[i - 1].distanceTo(vertices[i]);\n          }\n        }\n\n        return this;\n      };\n    }(),\n    raycast: function () {\n      var inverseMatrix = new Matrix4();\n      var ray = new Ray();\n      var sphere = new Sphere();\n      return function raycast(raycaster, intersects) {\n        var precision = raycaster.linePrecision;\n        var geometry = this.geometry;\n        var matrixWorld = this.matrixWorld; // Checking boundingSphere distance to ray\n\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n        sphere.copy(geometry.boundingSphere);\n        sphere.applyMatrix4(matrixWorld);\n        sphere.radius += precision;\n        if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n        inverseMatrix.getInverse(matrixWorld);\n        ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n        var localPrecision = precision / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n        var localPrecisionSq = localPrecision * localPrecision;\n        var vStart = new Vector3();\n        var vEnd = new Vector3();\n        var interSegment = new Vector3();\n        var interRay = new Vector3();\n        var step = this && this.isLineSegments ? 2 : 1;\n\n        if (geometry.isBufferGeometry) {\n          var index = geometry.index;\n          var attributes = geometry.attributes;\n          var positions = attributes.position.array;\n\n          if (index !== null) {\n            var indices = index.array;\n\n            for (var i = 0, l = indices.length - 1; i < l; i += step) {\n              var a = indices[i];\n              var b = indices[i + 1];\n              vStart.fromArray(positions, a * 3);\n              vEnd.fromArray(positions, b * 3);\n              var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n              if (distSq > localPrecisionSq) continue;\n              interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n              var distance = raycaster.ray.origin.distanceTo(interRay);\n              if (distance < raycaster.near || distance > raycaster.far) continue;\n              intersects.push({\n                distance: distance,\n                // What do we want? intersection point on the ray or on the segment??\n                // point: raycaster.ray.at( distance ),\n                point: interSegment.clone().applyMatrix4(this.matrixWorld),\n                index: i,\n                face: null,\n                faceIndex: null,\n                object: this\n              });\n            }\n          } else {\n            for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n              vStart.fromArray(positions, 3 * i);\n              vEnd.fromArray(positions, 3 * i + 3);\n              var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n              if (distSq > localPrecisionSq) continue;\n              interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n              var distance = raycaster.ray.origin.distanceTo(interRay);\n              if (distance < raycaster.near || distance > raycaster.far) continue;\n              intersects.push({\n                distance: distance,\n                // What do we want? intersection point on the ray or on the segment??\n                // point: raycaster.ray.at( distance ),\n                point: interSegment.clone().applyMatrix4(this.matrixWorld),\n                index: i,\n                face: null,\n                faceIndex: null,\n                object: this\n              });\n            }\n          }\n        } else if (geometry.isGeometry) {\n          var vertices = geometry.vertices;\n          var nbVertices = vertices.length;\n\n          for (var i = 0; i < nbVertices - 1; i += step) {\n            var distSq = ray.distanceSqToSegment(vertices[i], vertices[i + 1], interRay, interSegment);\n            if (distSq > localPrecisionSq) continue;\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n            var distance = raycaster.ray.origin.distanceTo(interRay);\n            if (distance < raycaster.near || distance > raycaster.far) continue;\n            intersects.push({\n              distance: distance,\n              // What do we want? intersection point on the ray or on the segment??\n              // point: raycaster.ray.at( distance ),\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\n              index: i,\n              face: null,\n              faceIndex: null,\n              object: this\n            });\n          }\n        }\n      };\n    }(),\n    copy: function copy(source) {\n      Object3D.prototype.copy.call(this, source);\n      this.geometry.copy(source.geometry);\n      this.material.copy(source.material);\n      return this;\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function LineSegments(geometry, material) {\n    Line.call(this, geometry, material);\n    this.type = 'LineSegments';\n  }\n\n  LineSegments.prototype = Object.assign(Object.create(Line.prototype), {\n    constructor: LineSegments,\n    isLineSegments: true,\n    computeLineDistances: function () {\n      var start = new Vector3();\n      var end = new Vector3();\n      return function computeLineDistances() {\n        var geometry = this.geometry;\n\n        if (geometry.isBufferGeometry) {\n          // we assume non-indexed geometry\n          if (geometry.index === null) {\n            var positionAttribute = geometry.attributes.position;\n            var lineDistances = [];\n\n            for (var i = 0, l = positionAttribute.count; i < l; i += 2) {\n              start.fromBufferAttribute(positionAttribute, i);\n              end.fromBufferAttribute(positionAttribute, i + 1);\n              lineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n              lineDistances[i + 1] = lineDistances[i] + start.distanceTo(end);\n            }\n\n            geometry.addAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n          } else {\n            console.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n          }\n        } else if (geometry.isGeometry) {\n          var vertices = geometry.vertices;\n          var lineDistances = geometry.lineDistances;\n\n          for (var i = 0, l = vertices.length; i < l; i += 2) {\n            start.copy(vertices[i]);\n            end.copy(vertices[i + 1]);\n            lineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n            lineDistances[i + 1] = lineDistances[i] + start.distanceTo(end);\n          }\n        }\n\n        return this;\n      };\n    }()\n  });\n  /**\n   * @author mgreter / http://github.com/mgreter\n   */\n\n  function LineLoop(geometry, material) {\n    Line.call(this, geometry, material);\n    this.type = 'LineLoop';\n  }\n\n  LineLoop.prototype = Object.assign(Object.create(Line.prototype), {\n    constructor: LineLoop,\n    isLineLoop: true\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  size: <float>,\n   *  sizeAttenuation: <bool>\n   *\n   *  morphTargets: <bool>\n   * }\n   */\n\n  function PointsMaterial(parameters) {\n    Material.call(this);\n    this.type = 'PointsMaterial';\n    this.color = new Color(0xffffff);\n    this.map = null;\n    this.size = 1;\n    this.sizeAttenuation = true;\n    this.morphTargets = false;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n\n  PointsMaterial.prototype = Object.create(Material.prototype);\n  PointsMaterial.prototype.constructor = PointsMaterial;\n  PointsMaterial.prototype.isPointsMaterial = true;\n\n  PointsMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.size = source.size;\n    this.sizeAttenuation = source.sizeAttenuation;\n    this.morphTargets = source.morphTargets;\n    return this;\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  function Points(geometry, material) {\n    Object3D.call(this);\n    this.type = 'Points';\n    this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n    this.material = material !== undefined ? material : new PointsMaterial({\n      color: Math.random() * 0xffffff\n    });\n  }\n\n  Points.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Points,\n    isPoints: true,\n    raycast: function () {\n      var inverseMatrix = new Matrix4();\n      var ray = new Ray();\n      var sphere = new Sphere();\n      return function raycast(raycaster, intersects) {\n        var object = this;\n        var geometry = this.geometry;\n        var matrixWorld = this.matrixWorld;\n        var threshold = raycaster.params.Points.threshold; // Checking boundingSphere distance to ray\n\n        if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n        sphere.copy(geometry.boundingSphere);\n        sphere.applyMatrix4(matrixWorld);\n        sphere.radius += threshold;\n        if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n        inverseMatrix.getInverse(matrixWorld);\n        ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n        var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n        var localThresholdSq = localThreshold * localThreshold;\n        var position = new Vector3();\n        var intersectPoint = new Vector3();\n\n        function testPoint(point, index) {\n          var rayPointDistanceSq = ray.distanceSqToPoint(point);\n\n          if (rayPointDistanceSq < localThresholdSq) {\n            ray.closestPointToPoint(point, intersectPoint);\n            intersectPoint.applyMatrix4(matrixWorld);\n            var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n            if (distance < raycaster.near || distance > raycaster.far) return;\n            intersects.push({\n              distance: distance,\n              distanceToRay: Math.sqrt(rayPointDistanceSq),\n              point: intersectPoint.clone(),\n              index: index,\n              face: null,\n              object: object\n            });\n          }\n        }\n\n        if (geometry.isBufferGeometry) {\n          var index = geometry.index;\n          var attributes = geometry.attributes;\n          var positions = attributes.position.array;\n\n          if (index !== null) {\n            var indices = index.array;\n\n            for (var i = 0, il = indices.length; i < il; i++) {\n              var a = indices[i];\n              position.fromArray(positions, a * 3);\n              testPoint(position, a);\n            }\n          } else {\n            for (var i = 0, l = positions.length / 3; i < l; i++) {\n              position.fromArray(positions, i * 3);\n              testPoint(position, i);\n            }\n          }\n        } else {\n          var vertices = geometry.vertices;\n\n          for (var i = 0, l = vertices.length; i < l; i++) {\n            testPoint(vertices[i], i);\n          }\n        }\n      };\n    }(),\n    clone: function clone() {\n      return new this.constructor(this.geometry, this.material).copy(this);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function VideoTexture(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n    Texture.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.format = format !== undefined ? format : RGBFormat;\n    this.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n    this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n    this.generateMipmaps = false;\n  }\n\n  VideoTexture.prototype = Object.assign(Object.create(Texture.prototype), {\n    constructor: VideoTexture,\n    isVideoTexture: true,\n    update: function update() {\n      var video = this.image;\n\n      if (video.readyState >= video.HAVE_CURRENT_DATA) {\n        this.needsUpdate = true;\n      }\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function CompressedTexture(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n    Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.image = {\n      width: width,\n      height: height\n    };\n    this.mipmaps = mipmaps; // no flipping for cube textures\n    // (also flipping doesn't work for compressed textures )\n\n    this.flipY = false; // can't generate mipmaps for compressed textures\n    // mips must be embedded in DDS files\n\n    this.generateMipmaps = false;\n  }\n\n  CompressedTexture.prototype = Object.create(Texture.prototype);\n  CompressedTexture.prototype.constructor = CompressedTexture;\n  CompressedTexture.prototype.isCompressedTexture = true;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function CanvasTexture(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n    Texture.call(this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.needsUpdate = true;\n  }\n\n  CanvasTexture.prototype = Object.create(Texture.prototype);\n  CanvasTexture.prototype.constructor = CanvasTexture;\n  CanvasTexture.prototype.isCanvasTexture = true;\n  /**\n   * @author Matt DesLauriers / @mattdesl\n   * @author atix / arthursilber.de\n   */\n\n  function DepthTexture(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format) {\n    format = format !== undefined ? format : DepthFormat;\n\n    if (format !== DepthFormat && format !== DepthStencilFormat) {\n      throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\n    }\n\n    if (type === undefined && format === DepthFormat) type = UnsignedShortType;\n    if (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\n    Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.image = {\n      width: width,\n      height: height\n    };\n    this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n    this.flipY = false;\n    this.generateMipmaps = false;\n  }\n\n  DepthTexture.prototype = Object.create(Texture.prototype);\n  DepthTexture.prototype.constructor = DepthTexture;\n  DepthTexture.prototype.isDepthTexture = true;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n  function WireframeGeometry(geometry) {\n    BufferGeometry.call(this);\n    this.type = 'WireframeGeometry'; // buffer\n\n    var vertices = []; // helper variables\n\n    var i, j, l, o, ol;\n    var edge = [0, 0],\n        edges = {},\n        e,\n        edge1,\n        edge2;\n    var key,\n        keys = ['a', 'b', 'c'];\n    var vertex; // different logic for Geometry and BufferGeometry\n\n    if (geometry && geometry.isGeometry) {\n      // create a data structure that contains all edges without duplicates\n      var faces = geometry.faces;\n\n      for (i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n\n        for (j = 0; j < 3; j++) {\n          edge1 = face[keys[j]];\n          edge2 = face[keys[(j + 1) % 3]];\n          edge[0] = Math.min(edge1, edge2); // sorting prevents duplicates\n\n          edge[1] = Math.max(edge1, edge2);\n          key = edge[0] + ',' + edge[1];\n\n          if (edges[key] === undefined) {\n            edges[key] = {\n              index1: edge[0],\n              index2: edge[1]\n            };\n          }\n        }\n      } // generate vertices\n\n\n      for (key in edges) {\n        e = edges[key];\n        vertex = geometry.vertices[e.index1];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n        vertex = geometry.vertices[e.index2];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n    } else if (geometry && geometry.isBufferGeometry) {\n      var position, indices, groups;\n      var group, start, count;\n      var index1, index2;\n      vertex = new Vector3();\n\n      if (geometry.index !== null) {\n        // indexed BufferGeometry\n        position = geometry.attributes.position;\n        indices = geometry.index;\n        groups = geometry.groups;\n\n        if (groups.length === 0) {\n          groups = [{\n            start: 0,\n            count: indices.count,\n            materialIndex: 0\n          }];\n        } // create a data structure that contains all eges without duplicates\n\n\n        for (o = 0, ol = groups.length; o < ol; ++o) {\n          group = groups[o];\n          start = group.start;\n          count = group.count;\n\n          for (i = start, l = start + count; i < l; i += 3) {\n            for (j = 0; j < 3; j++) {\n              edge1 = indices.getX(i + j);\n              edge2 = indices.getX(i + (j + 1) % 3);\n              edge[0] = Math.min(edge1, edge2); // sorting prevents duplicates\n\n              edge[1] = Math.max(edge1, edge2);\n              key = edge[0] + ',' + edge[1];\n\n              if (edges[key] === undefined) {\n                edges[key] = {\n                  index1: edge[0],\n                  index2: edge[1]\n                };\n              }\n            }\n          }\n        } // generate vertices\n\n\n        for (key in edges) {\n          e = edges[key];\n          vertex.fromBufferAttribute(position, e.index1);\n          vertices.push(vertex.x, vertex.y, vertex.z);\n          vertex.fromBufferAttribute(position, e.index2);\n          vertices.push(vertex.x, vertex.y, vertex.z);\n        }\n      } else {\n        // non-indexed BufferGeometry\n        position = geometry.attributes.position;\n\n        for (i = 0, l = position.count / 3; i < l; i++) {\n          for (j = 0; j < 3; j++) {\n            // three edges per triangle, an edge is represented as (index1, index2)\n            // e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n            index1 = 3 * i + j;\n            vertex.fromBufferAttribute(position, index1);\n            vertices.push(vertex.x, vertex.y, vertex.z);\n            index2 = 3 * i + (j + 1) % 3;\n            vertex.fromBufferAttribute(position, index2);\n            vertices.push(vertex.x, vertex.y, vertex.z);\n          }\n        }\n      }\n    } // build geometry\n\n\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  }\n\n  WireframeGeometry.prototype = Object.create(BufferGeometry.prototype);\n  WireframeGeometry.prototype.constructor = WireframeGeometry;\n  /**\n   * @author zz85 / https://github.com/zz85\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   * Parametric Surfaces Geometry\n   * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n   */\n  // ParametricGeometry\n\n  function ParametricGeometry(func, slices, stacks) {\n    Geometry.call(this);\n    this.type = 'ParametricGeometry';\n    this.parameters = {\n      func: func,\n      slices: slices,\n      stacks: stacks\n    };\n    this.fromBufferGeometry(new ParametricBufferGeometry(func, slices, stacks));\n    this.mergeVertices();\n  }\n\n  ParametricGeometry.prototype = Object.create(Geometry.prototype);\n  ParametricGeometry.prototype.constructor = ParametricGeometry; // ParametricBufferGeometry\n\n  function ParametricBufferGeometry(func, slices, stacks) {\n    BufferGeometry.call(this);\n    this.type = 'ParametricBufferGeometry';\n    this.parameters = {\n      func: func,\n      slices: slices,\n      stacks: stacks\n    }; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = [];\n    var EPS = 0.00001;\n    var normal = new Vector3();\n    var p0 = new Vector3(),\n        p1 = new Vector3();\n    var pu = new Vector3(),\n        pv = new Vector3();\n    var i, j;\n\n    if (func.length < 3) {\n      console.error('THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.');\n    } // generate vertices, normals and uvs\n\n\n    var sliceCount = slices + 1;\n\n    for (i = 0; i <= stacks; i++) {\n      var v = i / stacks;\n\n      for (j = 0; j <= slices; j++) {\n        var u = j / slices; // vertex\n\n        func(u, v, p0);\n        vertices.push(p0.x, p0.y, p0.z); // normal\n        // approximate tangent vectors via finite differences\n\n        if (u - EPS >= 0) {\n          func(u - EPS, v, p1);\n          pu.subVectors(p0, p1);\n        } else {\n          func(u + EPS, v, p1);\n          pu.subVectors(p1, p0);\n        }\n\n        if (v - EPS >= 0) {\n          func(u, v - EPS, p1);\n          pv.subVectors(p0, p1);\n        } else {\n          func(u, v + EPS, p1);\n          pv.subVectors(p1, p0);\n        } // cross product of tangent vectors returns surface normal\n\n\n        normal.crossVectors(pu, pv).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(u, v);\n      }\n    } // generate indices\n\n\n    for (i = 0; i < stacks; i++) {\n      for (j = 0; j < slices; j++) {\n        var a = i * sliceCount + j;\n        var b = i * sliceCount + j + 1;\n        var c = (i + 1) * sliceCount + j + 1;\n        var d = (i + 1) * sliceCount + j; // faces one and two\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  ParametricBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  ParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n  /**\n   * @author clockworkgeek / https://github.com/clockworkgeek\n   * @author timothypratley / https://github.com/timothypratley\n   * @author WestLangley / http://github.com/WestLangley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // PolyhedronGeometry\n\n  function PolyhedronGeometry(vertices, indices, radius, detail) {\n    Geometry.call(this);\n    this.type = 'PolyhedronGeometry';\n    this.parameters = {\n      vertices: vertices,\n      indices: indices,\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new PolyhedronBufferGeometry(vertices, indices, radius, detail));\n    this.mergeVertices();\n  }\n\n  PolyhedronGeometry.prototype = Object.create(Geometry.prototype);\n  PolyhedronGeometry.prototype.constructor = PolyhedronGeometry; // PolyhedronBufferGeometry\n\n  function PolyhedronBufferGeometry(vertices, indices, radius, detail) {\n    BufferGeometry.call(this);\n    this.type = 'PolyhedronBufferGeometry';\n    this.parameters = {\n      vertices: vertices,\n      indices: indices,\n      radius: radius,\n      detail: detail\n    };\n    radius = radius || 1;\n    detail = detail || 0; // default buffer data\n\n    var vertexBuffer = [];\n    var uvBuffer = []; // the subdivision creates the vertex buffer data\n\n    subdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\n\n    appplyRadius(radius); // finally, create the uv data\n\n    generateUVs(); // build non-indexed geometry\n\n    this.addAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\n\n    if (detail === 0) {\n      this.computeVertexNormals(); // flat normals\n    } else {\n      this.normalizeNormals(); // smooth normals\n    } // helper functions\n\n\n    function subdivide(detail) {\n      var a = new Vector3();\n      var b = new Vector3();\n      var c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\n\n      for (var i = 0; i < indices.length; i += 3) {\n        // get the vertices of the face\n        getVertexByIndex(indices[i + 0], a);\n        getVertexByIndex(indices[i + 1], b);\n        getVertexByIndex(indices[i + 2], c); // perform subdivision\n\n        subdivideFace(a, b, c, detail);\n      }\n    }\n\n    function subdivideFace(a, b, c, detail) {\n      var cols = Math.pow(2, detail); // we use this multidimensional array as a data structure for creating the subdivision\n\n      var v = [];\n      var i, j; // construct all of the vertices for this subdivision\n\n      for (i = 0; i <= cols; i++) {\n        v[i] = [];\n        var aj = a.clone().lerp(c, i / cols);\n        var bj = b.clone().lerp(c, i / cols);\n        var rows = cols - i;\n\n        for (j = 0; j <= rows; j++) {\n          if (j === 0 && i === cols) {\n            v[i][j] = aj;\n          } else {\n            v[i][j] = aj.clone().lerp(bj, j / rows);\n          }\n        }\n      } // construct all of the faces\n\n\n      for (i = 0; i < cols; i++) {\n        for (j = 0; j < 2 * (cols - i) - 1; j++) {\n          var k = Math.floor(j / 2);\n\n          if (j % 2 === 0) {\n            pushVertex(v[i][k + 1]);\n            pushVertex(v[i + 1][k]);\n            pushVertex(v[i][k]);\n          } else {\n            pushVertex(v[i][k + 1]);\n            pushVertex(v[i + 1][k + 1]);\n            pushVertex(v[i + 1][k]);\n          }\n        }\n      }\n    }\n\n    function appplyRadius(radius) {\n      var vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\n\n      for (var i = 0; i < vertexBuffer.length; i += 3) {\n        vertex.x = vertexBuffer[i + 0];\n        vertex.y = vertexBuffer[i + 1];\n        vertex.z = vertexBuffer[i + 2];\n        vertex.normalize().multiplyScalar(radius);\n        vertexBuffer[i + 0] = vertex.x;\n        vertexBuffer[i + 1] = vertex.y;\n        vertexBuffer[i + 2] = vertex.z;\n      }\n    }\n\n    function generateUVs() {\n      var vertex = new Vector3();\n\n      for (var i = 0; i < vertexBuffer.length; i += 3) {\n        vertex.x = vertexBuffer[i + 0];\n        vertex.y = vertexBuffer[i + 1];\n        vertex.z = vertexBuffer[i + 2];\n        var u = azimuth(vertex) / 2 / Math.PI + 0.5;\n        var v = inclination(vertex) / Math.PI + 0.5;\n        uvBuffer.push(u, 1 - v);\n      }\n\n      correctUVs();\n      correctSeam();\n    }\n\n    function correctSeam() {\n      // handle case when face straddles the seam, see #3269\n      for (var i = 0; i < uvBuffer.length; i += 6) {\n        // uv data of a single face\n        var x0 = uvBuffer[i + 0];\n        var x1 = uvBuffer[i + 2];\n        var x2 = uvBuffer[i + 4];\n        var max = Math.max(x0, x1, x2);\n        var min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\n\n        if (max > 0.9 && min < 0.1) {\n          if (x0 < 0.2) uvBuffer[i + 0] += 1;\n          if (x1 < 0.2) uvBuffer[i + 2] += 1;\n          if (x2 < 0.2) uvBuffer[i + 4] += 1;\n        }\n      }\n    }\n\n    function pushVertex(vertex) {\n      vertexBuffer.push(vertex.x, vertex.y, vertex.z);\n    }\n\n    function getVertexByIndex(index, vertex) {\n      var stride = index * 3;\n      vertex.x = vertices[stride + 0];\n      vertex.y = vertices[stride + 1];\n      vertex.z = vertices[stride + 2];\n    }\n\n    function correctUVs() {\n      var a = new Vector3();\n      var b = new Vector3();\n      var c = new Vector3();\n      var centroid = new Vector3();\n      var uvA = new Vector2();\n      var uvB = new Vector2();\n      var uvC = new Vector2();\n\n      for (var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\n        a.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\n        b.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\n        c.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\n        uvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\n        uvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\n        uvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\n        centroid.copy(a).add(b).add(c).divideScalar(3);\n        var azi = azimuth(centroid);\n        correctUV(uvA, j + 0, a, azi);\n        correctUV(uvB, j + 2, b, azi);\n        correctUV(uvC, j + 4, c, azi);\n      }\n    }\n\n    function correctUV(uv, stride, vector, azimuth) {\n      if (azimuth < 0 && uv.x === 1) {\n        uvBuffer[stride] = uv.x - 1;\n      }\n\n      if (vector.x === 0 && vector.z === 0) {\n        uvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\n      }\n    } // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n    function azimuth(vector) {\n      return Math.atan2(vector.z, -vector.x);\n    } // Angle above the XZ plane.\n\n\n    function inclination(vector) {\n      return Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n    }\n  }\n\n  PolyhedronBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  PolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n  /**\n   * @author timothypratley / https://github.com/timothypratley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // TetrahedronGeometry\n\n  function TetrahedronGeometry(radius, detail) {\n    Geometry.call(this);\n    this.type = 'TetrahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new TetrahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n\n  TetrahedronGeometry.prototype = Object.create(Geometry.prototype);\n  TetrahedronGeometry.prototype.constructor = TetrahedronGeometry; // TetrahedronBufferGeometry\n\n  function TetrahedronBufferGeometry(radius, detail) {\n    var vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n    var indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n    PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'TetrahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n\n  TetrahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\n  TetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n  /**\n   * @author timothypratley / https://github.com/timothypratley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // OctahedronGeometry\n\n  function OctahedronGeometry(radius, detail) {\n    Geometry.call(this);\n    this.type = 'OctahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new OctahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n\n  OctahedronGeometry.prototype = Object.create(Geometry.prototype);\n  OctahedronGeometry.prototype.constructor = OctahedronGeometry; // OctahedronBufferGeometry\n\n  function OctahedronBufferGeometry(radius, detail) {\n    var vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n    var indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n    PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'OctahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n\n  OctahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\n  OctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n  /**\n   * @author timothypratley / https://github.com/timothypratley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // IcosahedronGeometry\n\n  function IcosahedronGeometry(radius, detail) {\n    Geometry.call(this);\n    this.type = 'IcosahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new IcosahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n\n  IcosahedronGeometry.prototype = Object.create(Geometry.prototype);\n  IcosahedronGeometry.prototype.constructor = IcosahedronGeometry; // IcosahedronBufferGeometry\n\n  function IcosahedronBufferGeometry(radius, detail) {\n    var t = (1 + Math.sqrt(5)) / 2;\n    var vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n    var indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n    PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'IcosahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n\n  IcosahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\n  IcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n  /**\n   * @author Abe Pazos / https://hamoid.com\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // DodecahedronGeometry\n\n  function DodecahedronGeometry(radius, detail) {\n    Geometry.call(this);\n    this.type = 'DodecahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new DodecahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n\n  DodecahedronGeometry.prototype = Object.create(Geometry.prototype);\n  DodecahedronGeometry.prototype.constructor = DodecahedronGeometry; // DodecahedronBufferGeometry\n\n  function DodecahedronBufferGeometry(radius, detail) {\n    var t = (1 + Math.sqrt(5)) / 2;\n    var r = 1 / t;\n    var vertices = [// (±1, ±1, ±1)\n    -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n    0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n    -r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n    -t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n    var indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n    PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'DodecahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n\n  DodecahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\n  DodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n  /**\n   * @author oosmoxiecode / https://github.com/oosmoxiecode\n   * @author WestLangley / https://github.com/WestLangley\n   * @author zz85 / https://github.com/zz85\n   * @author miningold / https://github.com/miningold\n   * @author jonobr1 / https://github.com/jonobr1\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   */\n  // TubeGeometry\n\n  function TubeGeometry(path, tubularSegments, radius, radialSegments, closed, taper) {\n    Geometry.call(this);\n    this.type = 'TubeGeometry';\n    this.parameters = {\n      path: path,\n      tubularSegments: tubularSegments,\n      radius: radius,\n      radialSegments: radialSegments,\n      closed: closed\n    };\n    if (taper !== undefined) console.warn('THREE.TubeGeometry: taper has been removed.');\n    var bufferGeometry = new TubeBufferGeometry(path, tubularSegments, radius, radialSegments, closed); // expose internals\n\n    this.tangents = bufferGeometry.tangents;\n    this.normals = bufferGeometry.normals;\n    this.binormals = bufferGeometry.binormals; // create geometry\n\n    this.fromBufferGeometry(bufferGeometry);\n    this.mergeVertices();\n  }\n\n  TubeGeometry.prototype = Object.create(Geometry.prototype);\n  TubeGeometry.prototype.constructor = TubeGeometry; // TubeBufferGeometry\n\n  function TubeBufferGeometry(path, tubularSegments, radius, radialSegments, closed) {\n    BufferGeometry.call(this);\n    this.type = 'TubeBufferGeometry';\n    this.parameters = {\n      path: path,\n      tubularSegments: tubularSegments,\n      radius: radius,\n      radialSegments: radialSegments,\n      closed: closed\n    };\n    tubularSegments = tubularSegments || 64;\n    radius = radius || 1;\n    radialSegments = radialSegments || 8;\n    closed = closed || false;\n    var frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\n\n    this.tangents = frames.tangents;\n    this.normals = frames.normals;\n    this.binormals = frames.binormals; // helper variables\n\n    var vertex = new Vector3();\n    var normal = new Vector3();\n    var uv = new Vector2();\n    var P = new Vector3();\n    var i, j; // buffer\n\n    var vertices = [];\n    var normals = [];\n    var uvs = [];\n    var indices = []; // create buffer data\n\n    generateBufferData(); // build geometry\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\n\n    function generateBufferData() {\n      for (i = 0; i < tubularSegments; i++) {\n        generateSegment(i);\n      } // if the geometry is not closed, generate the last row of vertices and normals\n      // at the regular position on the given path\n      //\n      // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\n      generateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\n      // this makes it easy compute correct values for closed geometries\n\n      generateUVs(); // finally create faces\n\n      generateIndices();\n    }\n\n    function generateSegment(i) {\n      // we use getPointAt to sample evenly distributed points from the given path\n      P = path.getPointAt(i / tubularSegments, P); // retrieve corresponding normal and binormal\n\n      var N = frames.normals[i];\n      var B = frames.binormals[i]; // generate normals and vertices for the current segment\n\n      for (j = 0; j <= radialSegments; j++) {\n        var v = j / radialSegments * Math.PI * 2;\n        var sin = Math.sin(v);\n        var cos = -Math.cos(v); // normal\n\n        normal.x = cos * N.x + sin * B.x;\n        normal.y = cos * N.y + sin * B.y;\n        normal.z = cos * N.z + sin * B.z;\n        normal.normalize();\n        normals.push(normal.x, normal.y, normal.z); // vertex\n\n        vertex.x = P.x + radius * normal.x;\n        vertex.y = P.y + radius * normal.y;\n        vertex.z = P.z + radius * normal.z;\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n    }\n\n    function generateIndices() {\n      for (j = 1; j <= tubularSegments; j++) {\n        for (i = 1; i <= radialSegments; i++) {\n          var a = (radialSegments + 1) * (j - 1) + (i - 1);\n          var b = (radialSegments + 1) * j + (i - 1);\n          var c = (radialSegments + 1) * j + i;\n          var d = (radialSegments + 1) * (j - 1) + i; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      }\n    }\n\n    function generateUVs() {\n      for (i = 0; i <= tubularSegments; i++) {\n        for (j = 0; j <= radialSegments; j++) {\n          uv.x = i / tubularSegments;\n          uv.y = j / radialSegments;\n          uvs.push(uv.x, uv.y);\n        }\n      }\n    }\n  }\n\n  TubeBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  TubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n  /**\n   * @author oosmoxiecode\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   * based on http://www.blackpawn.com/texts/pqtorus/\n   */\n  // TorusKnotGeometry\n\n  function TorusKnotGeometry(radius, tube, tubularSegments, radialSegments, p, q, heightScale) {\n    Geometry.call(this);\n    this.type = 'TorusKnotGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      tubularSegments: tubularSegments,\n      radialSegments: radialSegments,\n      p: p,\n      q: q\n    };\n    if (heightScale !== undefined) console.warn('THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.');\n    this.fromBufferGeometry(new TorusKnotBufferGeometry(radius, tube, tubularSegments, radialSegments, p, q));\n    this.mergeVertices();\n  }\n\n  TorusKnotGeometry.prototype = Object.create(Geometry.prototype);\n  TorusKnotGeometry.prototype.constructor = TorusKnotGeometry; // TorusKnotBufferGeometry\n\n  function TorusKnotBufferGeometry(radius, tube, tubularSegments, radialSegments, p, q) {\n    BufferGeometry.call(this);\n    this.type = 'TorusKnotBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      tubularSegments: tubularSegments,\n      radialSegments: radialSegments,\n      p: p,\n      q: q\n    };\n    radius = radius || 1;\n    tube = tube || 0.4;\n    tubularSegments = Math.floor(tubularSegments) || 64;\n    radialSegments = Math.floor(radialSegments) || 8;\n    p = p || 2;\n    q = q || 3; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var i, j;\n    var vertex = new Vector3();\n    var normal = new Vector3();\n    var P1 = new Vector3();\n    var P2 = new Vector3();\n    var B = new Vector3();\n    var T = new Vector3();\n    var N = new Vector3(); // generate vertices, normals and uvs\n\n    for (i = 0; i <= tubularSegments; ++i) {\n      // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n      var u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n      // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n      calculatePositionOnCurve(u, p, q, radius, P1);\n      calculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n      T.subVectors(P2, P1);\n      N.addVectors(P2, P1);\n      B.crossVectors(T, N);\n      N.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n      B.normalize();\n      N.normalize();\n\n      for (j = 0; j <= radialSegments; ++j) {\n        // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n        // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n        var v = j / radialSegments * Math.PI * 2;\n        var cx = -tube * Math.cos(v);\n        var cy = tube * Math.sin(v); // now calculate the final vertex position.\n        // first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n        vertex.x = P1.x + (cx * N.x + cy * B.x);\n        vertex.y = P1.y + (cx * N.y + cy * B.y);\n        vertex.z = P1.z + (cx * N.z + cy * B.z);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n        normal.subVectors(vertex, P1).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(i / tubularSegments);\n        uvs.push(j / radialSegments);\n      }\n    } // generate indices\n\n\n    for (j = 1; j <= tubularSegments; j++) {\n      for (i = 1; i <= radialSegments; i++) {\n        // indices\n        var a = (radialSegments + 1) * (j - 1) + (i - 1);\n        var b = (radialSegments + 1) * j + (i - 1);\n        var c = (radialSegments + 1) * j + i;\n        var d = (radialSegments + 1) * (j - 1) + i; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\n\n    function calculatePositionOnCurve(u, p, q, radius, position) {\n      var cu = Math.cos(u);\n      var su = Math.sin(u);\n      var quOverP = q / p * u;\n      var cs = Math.cos(quOverP);\n      position.x = radius * (2 + cs) * 0.5 * cu;\n      position.y = radius * (2 + cs) * su * 0.5;\n      position.z = radius * Math.sin(quOverP) * 0.5;\n    }\n  }\n\n  TorusKnotBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  TorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n  /**\n   * @author oosmoxiecode\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // TorusGeometry\n\n  function TorusGeometry(radius, tube, radialSegments, tubularSegments, arc) {\n    Geometry.call(this);\n    this.type = 'TorusGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      radialSegments: radialSegments,\n      tubularSegments: tubularSegments,\n      arc: arc\n    };\n    this.fromBufferGeometry(new TorusBufferGeometry(radius, tube, radialSegments, tubularSegments, arc));\n    this.mergeVertices();\n  }\n\n  TorusGeometry.prototype = Object.create(Geometry.prototype);\n  TorusGeometry.prototype.constructor = TorusGeometry; // TorusBufferGeometry\n\n  function TorusBufferGeometry(radius, tube, radialSegments, tubularSegments, arc) {\n    BufferGeometry.call(this);\n    this.type = 'TorusBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      radialSegments: radialSegments,\n      tubularSegments: tubularSegments,\n      arc: arc\n    };\n    radius = radius || 1;\n    tube = tube || 0.4;\n    radialSegments = Math.floor(radialSegments) || 8;\n    tubularSegments = Math.floor(tubularSegments) || 6;\n    arc = arc || Math.PI * 2; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var center = new Vector3();\n    var vertex = new Vector3();\n    var normal = new Vector3();\n    var j, i; // generate vertices, normals and uvs\n\n    for (j = 0; j <= radialSegments; j++) {\n      for (i = 0; i <= tubularSegments; i++) {\n        var u = i / tubularSegments * arc;\n        var v = j / radialSegments * Math.PI * 2; // vertex\n\n        vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n        vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n        vertex.z = tube * Math.sin(v);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        center.x = radius * Math.cos(u);\n        center.y = radius * Math.sin(u);\n        normal.subVectors(vertex, center).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(i / tubularSegments);\n        uvs.push(j / radialSegments);\n      }\n    } // generate indices\n\n\n    for (j = 1; j <= radialSegments; j++) {\n      for (i = 1; i <= tubularSegments; i++) {\n        // indices\n        var a = (tubularSegments + 1) * j + i - 1;\n        var b = (tubularSegments + 1) * (j - 1) + i - 1;\n        var c = (tubularSegments + 1) * (j - 1) + i;\n        var d = (tubularSegments + 1) * j + i; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  TorusBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  TorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   * Port from https://github.com/mapbox/earcut (v2.1.2)\n   */\n\n  var Earcut = {\n    triangulate: function triangulate(data, holeIndices, dim) {\n      dim = dim || 2;\n      var hasHoles = holeIndices && holeIndices.length,\n          outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n          outerNode = linkedList(data, 0, outerLen, dim, true),\n          triangles = [];\n      if (!outerNode) return triangles;\n      var minX, minY, maxX, maxY, x, y, invSize;\n      if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim); // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n      if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n          x = data[i];\n          y = data[i + 1];\n          if (x < minX) minX = x;\n          if (y < minY) minY = y;\n          if (x > maxX) maxX = x;\n          if (y > maxY) maxY = y;\n        } // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n      }\n\n      earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n      return triangles;\n    }\n  }; // create a circular doubly linked list from polygon points in the specified winding order\n\n  function linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === signedArea(data, start, end, dim) > 0) {\n      for (i = start; i < end; i += dim) {\n        last = insertNode(i, data[i], data[i + 1], last);\n      }\n    } else {\n      for (i = end - dim; i >= start; i -= dim) {\n        last = insertNode(i, data[i], data[i + 1], last);\n      }\n    }\n\n    if (last && equals(last, last.next)) {\n      removeNode(last);\n      last = last.next;\n    }\n\n    return last;\n  } // eliminate colinear or duplicate points\n\n\n  function filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n    var p = start,\n        again;\n\n    do {\n      again = false;\n\n      if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n        removeNode(p);\n        p = end = p.prev;\n        if (p === p.next) break;\n        again = true;\n      } else {\n        p = p.next;\n      }\n    } while (again || p !== end);\n\n    return end;\n  } // main ear slicing loop which triangulates a polygon (given as a linked list)\n\n\n  function earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return; // interlink polygon nodes in z-order\n\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n    var stop = ear,\n        prev,\n        next; // iterate through ears, slicing them one by one\n\n    while (ear.prev !== ear.next) {\n      prev = ear.prev;\n      next = ear.next;\n\n      if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n        // cut off the triangle\n        triangles.push(prev.i / dim);\n        triangles.push(ear.i / dim);\n        triangles.push(next.i / dim);\n        removeNode(ear); // skipping the next vertice leads to less sliver triangles\n\n        ear = next.next;\n        stop = next.next;\n        continue;\n      }\n\n      ear = next; // if we looped through the whole remaining polygon and can't find any more ears\n\n      if (ear === stop) {\n        // try filtering points and slicing again\n        if (!pass) {\n          earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1); // if this didn't work, try curing all small self-intersections locally\n        } else if (pass === 1) {\n          ear = cureLocalIntersections(ear, triangles, dim);\n          earcutLinked(ear, triangles, dim, minX, minY, invSize, 2); // as a last resort, try splitting the remaining polygon into two\n        } else if (pass === 2) {\n          splitEarcut(ear, triangles, dim, minX, minY, invSize);\n        }\n\n        break;\n      }\n    }\n  } // check whether a polygon node forms a valid ear with adjacent nodes\n\n\n  function isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n    // now make sure we don't have other points inside the potential ear\n\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n      if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) {\n        return false;\n      }\n\n      p = p.next;\n    }\n\n    return true;\n  }\n\n  function isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n    // triangle bbox; min & max are calculated like this for speed\n\n    var minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\n        minTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\n        maxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\n        maxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y; // z-order range for the current triangle bbox;\n\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize); // first look for points inside the triangle in increasing z-order\n\n    var p = ear.nextZ;\n\n    while (p && p.z <= maxZ) {\n      if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n      p = p.nextZ;\n    } // then look for points in decreasing z-order\n\n\n    p = ear.prevZ;\n\n    while (p && p.z >= minZ) {\n      if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n      p = p.prevZ;\n    }\n\n    return true;\n  } // go through all polygon nodes and cure small local self-intersections\n\n\n  function cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n\n    do {\n      var a = p.prev,\n          b = p.next.next;\n\n      if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n        triangles.push(a.i / dim);\n        triangles.push(p.i / dim);\n        triangles.push(b.i / dim); // remove two nodes involved\n\n        removeNode(p);\n        removeNode(p.next);\n        p = start = b;\n      }\n\n      p = p.next;\n    } while (p !== start);\n\n    return p;\n  } // try splitting polygon into two and triangulate them independently\n\n\n  function splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n\n    do {\n      var b = a.next.next;\n\n      while (b !== a.prev) {\n        if (a.i !== b.i && isValidDiagonal(a, b)) {\n          // split the polygon in two by the diagonal\n          var c = splitPolygon(a, b); // filter colinear points around the cuts\n\n          a = filterPoints(a, a.next);\n          c = filterPoints(c, c.next); // run earcut on each half\n\n          earcutLinked(a, triangles, dim, minX, minY, invSize);\n          earcutLinked(c, triangles, dim, minX, minY, invSize);\n          return;\n        }\n\n        b = b.next;\n      }\n\n      a = a.next;\n    } while (a !== start);\n  } // link every hole into the outer loop, producing a single-ring polygon without holes\n\n\n  function eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i,\n        len,\n        start,\n        end,\n        list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n      start = holeIndices[i] * dim;\n      end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n      list = linkedList(data, start, end, dim, false);\n      if (list === list.next) list.steiner = true;\n      queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX); // process holes from left to right\n\n    for (i = 0; i < queue.length; i++) {\n      eliminateHole(queue[i], outerNode);\n      outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n  }\n\n  function compareX(a, b) {\n    return a.x - b.x;\n  } // find a bridge between vertices that connects hole with an outer ring and and link it\n\n\n  function eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n\n    if (outerNode) {\n      var b = splitPolygon(outerNode, hole);\n      filterPoints(b, b.next);\n    }\n  } // David Eberly's algorithm for finding a bridge between hole and outer polygon\n\n\n  function findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m; // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n\n    do {\n      if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n        var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n\n        if (x <= hx && x > qx) {\n          qx = x;\n\n          if (x === hx) {\n            if (hy === p.y) return p;\n            if (hy === p.next.y) return p.next;\n          }\n\n          m = p.x < p.next.x ? p : p.next;\n        }\n      }\n\n      p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n    p = m.next;\n\n    while (p !== stop) {\n      if (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n        tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n        if ((tan < tanMin || tan === tanMin && p.x > m.x) && locallyInside(p, hole)) {\n          m = p;\n          tanMin = tan;\n        }\n      }\n\n      p = p.next;\n    }\n\n    return m;\n  } // interlink polygon nodes in z-order\n\n\n  function indexCurve(start, minX, minY, invSize) {\n    var p = start;\n\n    do {\n      if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n      p.prevZ = p.prev;\n      p.nextZ = p.next;\n      p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n    sortLinked(p);\n  } // Simon Tatham's linked list merge sort algorithm\n  // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\n\n  function sortLinked(list) {\n    var i,\n        p,\n        q,\n        e,\n        tail,\n        numMerges,\n        pSize,\n        qSize,\n        inSize = 1;\n\n    do {\n      p = list;\n      list = null;\n      tail = null;\n      numMerges = 0;\n\n      while (p) {\n        numMerges++;\n        q = p;\n        pSize = 0;\n\n        for (i = 0; i < inSize; i++) {\n          pSize++;\n          q = q.nextZ;\n          if (!q) break;\n        }\n\n        qSize = inSize;\n\n        while (pSize > 0 || qSize > 0 && q) {\n          if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n            e = p;\n            p = p.nextZ;\n            pSize--;\n          } else {\n            e = q;\n            q = q.nextZ;\n            qSize--;\n          }\n\n          if (tail) tail.nextZ = e;else list = e;\n          e.prevZ = tail;\n          tail = e;\n        }\n\n        p = q;\n      }\n\n      tail.nextZ = null;\n      inSize *= 2;\n    } while (numMerges > 1);\n\n    return list;\n  } // z-order of a point given coords and inverse of the longer side of data bbox\n\n\n  function zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n    x = (x | x << 8) & 0x00FF00FF;\n    x = (x | x << 4) & 0x0F0F0F0F;\n    x = (x | x << 2) & 0x33333333;\n    x = (x | x << 1) & 0x55555555;\n    y = (y | y << 8) & 0x00FF00FF;\n    y = (y | y << 4) & 0x0F0F0F0F;\n    y = (y | y << 2) & 0x33333333;\n    y = (y | y << 1) & 0x55555555;\n    return x | y << 1;\n  } // find the leftmost node of a polygon ring\n\n\n  function getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n\n    do {\n      if (p.x < leftmost.x) leftmost = p;\n      p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n  } // check if a point lies within a convex triangle\n\n\n  function pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n  } // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\n\n  function isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n  } // signed area of a triangle\n\n\n  function area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n  } // check if two points are equal\n\n\n  function equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n  } // check if two segments intersect\n\n\n  function intersects(p1, q1, p2, q2) {\n    if (equals(p1, q1) && equals(p2, q2) || equals(p1, q2) && equals(p2, q1)) return true;\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 && area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n  } // check if a polygon diagonal intersects any polygon segments\n\n\n  function intersectsPolygon(a, b) {\n    var p = a;\n\n    do {\n      if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) {\n        return true;\n      }\n\n      p = p.next;\n    } while (p !== a);\n\n    return false;\n  } // check if a polygon diagonal is locally inside the polygon\n\n\n  function locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n  } // check if the middle point of a polygon diagonal is inside the polygon\n\n\n  function middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n\n    do {\n      if (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) {\n        inside = !inside;\n      }\n\n      p = p.next;\n    } while (p !== a);\n\n    return inside;\n  } // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n  // if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\n\n  function splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n    a.next = b;\n    b.prev = a;\n    a2.next = an;\n    an.prev = a2;\n    b2.next = a2;\n    a2.prev = b2;\n    bp.next = b2;\n    b2.prev = bp;\n    return b2;\n  } // create a node and optionally link it with previous one (in a circular doubly linked list)\n\n\n  function insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n      p.prev = p;\n      p.next = p;\n    } else {\n      p.next = last.next;\n      p.prev = last;\n      last.next.prev = p;\n      last.next = p;\n    }\n\n    return p;\n  }\n\n  function removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n  }\n\n  function Node(i, x, y) {\n    // vertice index in coordinates array\n    this.i = i; // vertex coordinates\n\n    this.x = x;\n    this.y = y; // previous and next vertice nodes in a polygon ring\n\n    this.prev = null;\n    this.next = null; // z-order curve value\n\n    this.z = null; // previous and next nodes in z-order\n\n    this.prevZ = null;\n    this.nextZ = null; // indicates whether this is a steiner point\n\n    this.steiner = false;\n  }\n\n  function signedArea(data, start, end, dim) {\n    var sum = 0;\n\n    for (var i = start, j = end - dim; i < end; i += dim) {\n      sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n      j = i;\n    }\n\n    return sum;\n  }\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   */\n\n\n  var ShapeUtils = {\n    // calculate area of the contour polygon\n    area: function area(contour) {\n      var n = contour.length;\n      var a = 0.0;\n\n      for (var p = n - 1, q = 0; q < n; p = q++) {\n        a += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n      }\n\n      return a * 0.5;\n    },\n    isClockWise: function isClockWise(pts) {\n      return ShapeUtils.area(pts) < 0;\n    },\n    triangulateShape: function triangulateShape(contour, holes) {\n      var vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\n      var holeIndices = []; // array of hole indices\n\n      var faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n      removeDupEndPts(contour);\n      addContour(vertices, contour); //\n\n      var holeIndex = contour.length;\n      holes.forEach(removeDupEndPts);\n\n      for (var i = 0; i < holes.length; i++) {\n        holeIndices.push(holeIndex);\n        holeIndex += holes[i].length;\n        addContour(vertices, holes[i]);\n      } //\n\n\n      var triangles = Earcut.triangulate(vertices, holeIndices); //\n\n      for (var i = 0; i < triangles.length; i += 3) {\n        faces.push(triangles.slice(i, i + 3));\n      }\n\n      return faces;\n    }\n  };\n\n  function removeDupEndPts(points) {\n    var l = points.length;\n\n    if (l > 2 && points[l - 1].equals(points[0])) {\n      points.pop();\n    }\n  }\n\n  function addContour(vertices, contour) {\n    for (var i = 0; i < contour.length; i++) {\n      vertices.push(contour[i].x);\n      vertices.push(contour[i].y);\n    }\n  }\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   *\n   * Creates extruded geometry from a path shape.\n   *\n   * parameters = {\n   *\n   *  curveSegments: <int>, // number of points on the curves\n   *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n   *  depth: <float>, // Depth to extrude the shape\n   *\n   *  bevelEnabled: <bool>, // turn on bevel\n   *  bevelThickness: <float>, // how deep into the original shape bevel goes\n   *  bevelSize: <float>, // how far from shape outline is bevel\n   *  bevelSegments: <int>, // number of bevel layers\n   *\n   *  extrudePath: <THREE.Curve> // curve to extrude shape along\n   *\n   *  UVGenerator: <Object> // object that provides UV generator functions\n   *\n   * }\n   */\n  // ExtrudeGeometry\n\n\n  function ExtrudeGeometry(shapes, options) {\n    Geometry.call(this);\n    this.type = 'ExtrudeGeometry';\n    this.parameters = {\n      shapes: shapes,\n      options: options\n    };\n    this.fromBufferGeometry(new ExtrudeBufferGeometry(shapes, options));\n    this.mergeVertices();\n  }\n\n  ExtrudeGeometry.prototype = Object.create(Geometry.prototype);\n  ExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n  ExtrudeGeometry.prototype.toJSON = function () {\n    var data = Geometry.prototype.toJSON.call(this);\n    var shapes = this.parameters.shapes;\n    var options = this.parameters.options;\n    return toJSON(shapes, options, data);\n  }; // ExtrudeBufferGeometry\n\n\n  function ExtrudeBufferGeometry(shapes, options) {\n    BufferGeometry.call(this);\n    this.type = 'ExtrudeBufferGeometry';\n    this.parameters = {\n      shapes: shapes,\n      options: options\n    };\n    shapes = Array.isArray(shapes) ? shapes : [shapes];\n    var scope = this;\n    var verticesArray = [];\n    var uvArray = [];\n\n    for (var i = 0, l = shapes.length; i < l; i++) {\n      var shape = shapes[i];\n      addShape(shape);\n    } // build geometry\n\n\n    this.addAttribute('position', new Float32BufferAttribute(verticesArray, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvArray, 2));\n    this.computeVertexNormals(); // functions\n\n    function addShape(shape) {\n      var placeholder = []; // options\n\n      var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n      var steps = options.steps !== undefined ? options.steps : 1;\n      var depth = options.depth !== undefined ? options.depth : 100;\n      var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n      var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n      var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n      var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n      var extrudePath = options.extrudePath;\n      var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator; // deprecated options\n\n      if (options.amount !== undefined) {\n        console.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');\n        depth = options.amount;\n      } //\n\n\n      var extrudePts,\n          extrudeByPath = false;\n      var splineTube, binormal, normal, position2;\n\n      if (extrudePath) {\n        extrudePts = extrudePath.getSpacedPoints(steps);\n        extrudeByPath = true;\n        bevelEnabled = false; // bevels not supported for path extrusion\n        // SETUP TNB variables\n        // TODO1 - have a .isClosed in spline?\n\n        splineTube = extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n        binormal = new Vector3();\n        normal = new Vector3();\n        position2 = new Vector3();\n      } // Safeguards if bevels are not enabled\n\n\n      if (!bevelEnabled) {\n        bevelSegments = 0;\n        bevelThickness = 0;\n        bevelSize = 0;\n      } // Variables initialization\n\n\n      var ahole, h, hl; // looping of holes\n\n      var shapePoints = shape.extractPoints(curveSegments);\n      var vertices = shapePoints.shape;\n      var holes = shapePoints.holes;\n      var reverse = !ShapeUtils.isClockWise(vertices);\n\n      if (reverse) {\n        vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n        for (h = 0, hl = holes.length; h < hl; h++) {\n          ahole = holes[h];\n\n          if (ShapeUtils.isClockWise(ahole)) {\n            holes[h] = ahole.reverse();\n          }\n        }\n      }\n\n      var faces = ShapeUtils.triangulateShape(vertices, holes);\n      /* Vertices */\n\n      var contour = vertices; // vertices has all points but contour has only points of circumference\n\n      for (h = 0, hl = holes.length; h < hl; h++) {\n        ahole = holes[h];\n        vertices = vertices.concat(ahole);\n      }\n\n      function scalePt2(pt, vec, size) {\n        if (!vec) console.error(\"THREE.ExtrudeGeometry: vec does not exist\");\n        return vec.clone().multiplyScalar(size).add(pt);\n      }\n\n      var b,\n          bs,\n          t,\n          z,\n          vert,\n          vlen = vertices.length,\n          face,\n          flen = faces.length; // Find directions for point movement\n\n      function getBevelVec(inPt, inPrev, inNext) {\n        // computes for inPt the corresponding point inPt' on a new contour\n        //   shifted by 1 unit (length of normalized vector) to the left\n        // if we walk along contour clockwise, this new contour is outside the old one\n        //\n        // inPt' is the intersection of the two lines parallel to the two\n        //  adjacent edges of inPt at a distance of 1 unit on the left side.\n        var v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n        // good reading for geometry algorithms (here: line-line intersection)\n        // http://geomalgorithms.com/a05-_intersect-1.html\n\n        var v_prev_x = inPt.x - inPrev.x,\n            v_prev_y = inPt.y - inPrev.y;\n        var v_next_x = inNext.x - inPt.x,\n            v_next_y = inNext.y - inPt.y;\n        var v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n        var collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n        if (Math.abs(collinear0) > Number.EPSILON) {\n          // not collinear\n          // length of vectors for normalizing\n          var v_prev_len = Math.sqrt(v_prev_lensq);\n          var v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n          var ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n          var ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n          var ptNextShift_x = inNext.x - v_next_y / v_next_len;\n          var ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n          var sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n          v_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n          v_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n          //  but prevent crazy spikes\n\n          var v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n          if (v_trans_lensq <= 2) {\n            return new Vector2(v_trans_x, v_trans_y);\n          } else {\n            shrink_by = Math.sqrt(v_trans_lensq / 2);\n          }\n        } else {\n          // handle special case of collinear edges\n          var direction_eq = false; // assumes: opposite\n\n          if (v_prev_x > Number.EPSILON) {\n            if (v_next_x > Number.EPSILON) {\n              direction_eq = true;\n            }\n          } else {\n            if (v_prev_x < -Number.EPSILON) {\n              if (v_next_x < -Number.EPSILON) {\n                direction_eq = true;\n              }\n            } else {\n              if (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n                direction_eq = true;\n              }\n            }\n          }\n\n          if (direction_eq) {\n            // console.log(\"Warning: lines are a straight sequence\");\n            v_trans_x = -v_prev_y;\n            v_trans_y = v_prev_x;\n            shrink_by = Math.sqrt(v_prev_lensq);\n          } else {\n            // console.log(\"Warning: lines are a straight spike\");\n            v_trans_x = v_prev_x;\n            v_trans_y = v_prev_y;\n            shrink_by = Math.sqrt(v_prev_lensq / 2);\n          }\n        }\n\n        return new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n      }\n\n      var contourMovements = [];\n\n      for (var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n        if (j === il) j = 0;\n        if (k === il) k = 0; //  (j)---(i)---(k)\n        // console.log('i,j,k', i, j , k)\n\n        contourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n      }\n\n      var holesMovements = [],\n          oneHoleMovements,\n          verticesMovements = contourMovements.concat();\n\n      for (h = 0, hl = holes.length; h < hl; h++) {\n        ahole = holes[h];\n        oneHoleMovements = [];\n\n        for (i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n          if (j === il) j = 0;\n          if (k === il) k = 0; //  (j)---(i)---(k)\n\n          oneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n        }\n\n        holesMovements.push(oneHoleMovements);\n        verticesMovements = verticesMovements.concat(oneHoleMovements);\n      } // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n      for (b = 0; b < bevelSegments; b++) {\n        //for ( b = bevelSegments; b > 0; b -- ) {\n        t = b / bevelSegments;\n        z = bevelThickness * Math.cos(t * Math.PI / 2);\n        bs = bevelSize * Math.sin(t * Math.PI / 2); // contract shape\n\n        for (i = 0, il = contour.length; i < il; i++) {\n          vert = scalePt2(contour[i], contourMovements[i], bs);\n          v(vert.x, vert.y, -z);\n        } // expand holes\n\n\n        for (h = 0, hl = holes.length; h < hl; h++) {\n          ahole = holes[h];\n          oneHoleMovements = holesMovements[h];\n\n          for (i = 0, il = ahole.length; i < il; i++) {\n            vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n            v(vert.x, vert.y, -z);\n          }\n        }\n      }\n\n      bs = bevelSize; // Back facing vertices\n\n      for (i = 0; i < vlen; i++) {\n        vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n        if (!extrudeByPath) {\n          v(vert.x, vert.y, 0);\n        } else {\n          // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n          normal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n          binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n          position2.copy(extrudePts[0]).add(normal).add(binormal);\n          v(position2.x, position2.y, position2.z);\n        }\n      } // Add stepped vertices...\n      // Including front facing vertices\n\n\n      var s;\n\n      for (s = 1; s <= steps; s++) {\n        for (i = 0; i < vlen; i++) {\n          vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n          if (!extrudeByPath) {\n            v(vert.x, vert.y, depth / steps * s);\n          } else {\n            // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n            normal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n            binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n            position2.copy(extrudePts[s]).add(normal).add(binormal);\n            v(position2.x, position2.y, position2.z);\n          }\n        }\n      } // Add bevel segments planes\n      //for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n      for (b = bevelSegments - 1; b >= 0; b--) {\n        t = b / bevelSegments;\n        z = bevelThickness * Math.cos(t * Math.PI / 2);\n        bs = bevelSize * Math.sin(t * Math.PI / 2); // contract shape\n\n        for (i = 0, il = contour.length; i < il; i++) {\n          vert = scalePt2(contour[i], contourMovements[i], bs);\n          v(vert.x, vert.y, depth + z);\n        } // expand holes\n\n\n        for (h = 0, hl = holes.length; h < hl; h++) {\n          ahole = holes[h];\n          oneHoleMovements = holesMovements[h];\n\n          for (i = 0, il = ahole.length; i < il; i++) {\n            vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n            if (!extrudeByPath) {\n              v(vert.x, vert.y, depth + z);\n            } else {\n              v(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\n            }\n          }\n        }\n      }\n      /* Faces */\n      // Top and bottom faces\n\n\n      buildLidFaces(); // Sides faces\n\n      buildSideFaces(); /////  Internal functions\n\n      function buildLidFaces() {\n        var start = verticesArray.length / 3;\n\n        if (bevelEnabled) {\n          var layer = 0; // steps + 1\n\n          var offset = vlen * layer; // Bottom faces\n\n          for (i = 0; i < flen; i++) {\n            face = faces[i];\n            f3(face[2] + offset, face[1] + offset, face[0] + offset);\n          }\n\n          layer = steps + bevelSegments * 2;\n          offset = vlen * layer; // Top faces\n\n          for (i = 0; i < flen; i++) {\n            face = faces[i];\n            f3(face[0] + offset, face[1] + offset, face[2] + offset);\n          }\n        } else {\n          // Bottom faces\n          for (i = 0; i < flen; i++) {\n            face = faces[i];\n            f3(face[2], face[1], face[0]);\n          } // Top faces\n\n\n          for (i = 0; i < flen; i++) {\n            face = faces[i];\n            f3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\n          }\n        }\n\n        scope.addGroup(start, verticesArray.length / 3 - start, 0);\n      } // Create faces for the z-sides of the shape\n\n\n      function buildSideFaces() {\n        var start = verticesArray.length / 3;\n        var layeroffset = 0;\n        sidewalls(contour, layeroffset);\n        layeroffset += contour.length;\n\n        for (h = 0, hl = holes.length; h < hl; h++) {\n          ahole = holes[h];\n          sidewalls(ahole, layeroffset); //, true\n\n          layeroffset += ahole.length;\n        }\n\n        scope.addGroup(start, verticesArray.length / 3 - start, 1);\n      }\n\n      function sidewalls(contour, layeroffset) {\n        var j, k;\n        i = contour.length;\n\n        while (--i >= 0) {\n          j = i;\n          k = i - 1;\n          if (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n          var s = 0,\n              sl = steps + bevelSegments * 2;\n\n          for (s = 0; s < sl; s++) {\n            var slen1 = vlen * s;\n            var slen2 = vlen * (s + 1);\n            var a = layeroffset + j + slen1,\n                b = layeroffset + k + slen1,\n                c = layeroffset + k + slen2,\n                d = layeroffset + j + slen2;\n            f4(a, b, c, d);\n          }\n        }\n      }\n\n      function v(x, y, z) {\n        placeholder.push(x);\n        placeholder.push(y);\n        placeholder.push(z);\n      }\n\n      function f3(a, b, c) {\n        addVertex(a);\n        addVertex(b);\n        addVertex(c);\n        var nextIndex = verticesArray.length / 3;\n        var uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n        addUV(uvs[0]);\n        addUV(uvs[1]);\n        addUV(uvs[2]);\n      }\n\n      function f4(a, b, c, d) {\n        addVertex(a);\n        addVertex(b);\n        addVertex(d);\n        addVertex(b);\n        addVertex(c);\n        addVertex(d);\n        var nextIndex = verticesArray.length / 3;\n        var uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n        addUV(uvs[0]);\n        addUV(uvs[1]);\n        addUV(uvs[3]);\n        addUV(uvs[1]);\n        addUV(uvs[2]);\n        addUV(uvs[3]);\n      }\n\n      function addVertex(index) {\n        verticesArray.push(placeholder[index * 3 + 0]);\n        verticesArray.push(placeholder[index * 3 + 1]);\n        verticesArray.push(placeholder[index * 3 + 2]);\n      }\n\n      function addUV(vector2) {\n        uvArray.push(vector2.x);\n        uvArray.push(vector2.y);\n      }\n    }\n  }\n\n  ExtrudeBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  ExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\n  ExtrudeBufferGeometry.prototype.toJSON = function () {\n    var data = BufferGeometry.prototype.toJSON.call(this);\n    var shapes = this.parameters.shapes;\n    var options = this.parameters.options;\n    return toJSON(shapes, options, data);\n  }; //\n\n\n  var WorldUVGenerator = {\n    generateTopUV: function generateTopUV(geometry, vertices, indexA, indexB, indexC) {\n      var a_x = vertices[indexA * 3];\n      var a_y = vertices[indexA * 3 + 1];\n      var b_x = vertices[indexB * 3];\n      var b_y = vertices[indexB * 3 + 1];\n      var c_x = vertices[indexC * 3];\n      var c_y = vertices[indexC * 3 + 1];\n      return [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\n    },\n    generateSideWallUV: function generateSideWallUV(geometry, vertices, indexA, indexB, indexC, indexD) {\n      var a_x = vertices[indexA * 3];\n      var a_y = vertices[indexA * 3 + 1];\n      var a_z = vertices[indexA * 3 + 2];\n      var b_x = vertices[indexB * 3];\n      var b_y = vertices[indexB * 3 + 1];\n      var b_z = vertices[indexB * 3 + 2];\n      var c_x = vertices[indexC * 3];\n      var c_y = vertices[indexC * 3 + 1];\n      var c_z = vertices[indexC * 3 + 2];\n      var d_x = vertices[indexD * 3];\n      var d_y = vertices[indexD * 3 + 1];\n      var d_z = vertices[indexD * 3 + 2];\n\n      if (Math.abs(a_y - b_y) < 0.01) {\n        return [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\n      } else {\n        return [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\n      }\n    }\n  };\n\n  function toJSON(shapes, options, data) {\n    //\n    data.shapes = [];\n\n    if (Array.isArray(shapes)) {\n      for (var i = 0, l = shapes.length; i < l; i++) {\n        var shape = shapes[i];\n        data.shapes.push(shape.uuid);\n      }\n    } else {\n      data.shapes.push(shapes.uuid);\n    } //\n\n\n    if (options.extrudePath !== undefined) data.options.extrudePath = options.extrudePath.toJSON();\n    return data;\n  }\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * Text = 3D Text\n   *\n   * parameters = {\n   *  font: <THREE.Font>, // font\n   *\n   *  size: <float>, // size of the text\n   *  height: <float>, // thickness to extrude text\n   *  curveSegments: <int>, // number of points on the curves\n   *\n   *  bevelEnabled: <bool>, // turn on bevel\n   *  bevelThickness: <float>, // how deep into text bevel goes\n   *  bevelSize: <float> // how far from text outline is bevel\n   * }\n   */\n  // TextGeometry\n\n\n  function TextGeometry(text, parameters) {\n    Geometry.call(this);\n    this.type = 'TextGeometry';\n    this.parameters = {\n      text: text,\n      parameters: parameters\n    };\n    this.fromBufferGeometry(new TextBufferGeometry(text, parameters));\n    this.mergeVertices();\n  }\n\n  TextGeometry.prototype = Object.create(Geometry.prototype);\n  TextGeometry.prototype.constructor = TextGeometry; // TextBufferGeometry\n\n  function TextBufferGeometry(text, parameters) {\n    parameters = parameters || {};\n    var font = parameters.font;\n\n    if (!(font && font.isFont)) {\n      console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');\n      return new Geometry();\n    }\n\n    var shapes = font.generateShapes(text, parameters.size); // translate parameters to ExtrudeGeometry API\n\n    parameters.depth = parameters.height !== undefined ? parameters.height : 50; // defaults\n\n    if (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\n    if (parameters.bevelSize === undefined) parameters.bevelSize = 8;\n    if (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\n    ExtrudeBufferGeometry.call(this, shapes, parameters);\n    this.type = 'TextBufferGeometry';\n  }\n\n  TextBufferGeometry.prototype = Object.create(ExtrudeBufferGeometry.prototype);\n  TextBufferGeometry.prototype.constructor = TextBufferGeometry;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author benaadams / https://twitter.com/ben_a_adams\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // SphereGeometry\n\n  function SphereGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n    Geometry.call(this);\n    this.type = 'SphereGeometry';\n    this.parameters = {\n      radius: radius,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      phiStart: phiStart,\n      phiLength: phiLength,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength));\n    this.mergeVertices();\n  }\n\n  SphereGeometry.prototype = Object.create(Geometry.prototype);\n  SphereGeometry.prototype.constructor = SphereGeometry; // SphereBufferGeometry\n\n  function SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n    BufferGeometry.call(this);\n    this.type = 'SphereBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      phiStart: phiStart,\n      phiLength: phiLength,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    radius = radius || 1;\n    widthSegments = Math.max(3, Math.floor(widthSegments) || 8);\n    heightSegments = Math.max(2, Math.floor(heightSegments) || 6);\n    phiStart = phiStart !== undefined ? phiStart : 0;\n    phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n    var thetaEnd = thetaStart + thetaLength;\n    var ix, iy;\n    var index = 0;\n    var grid = [];\n    var vertex = new Vector3();\n    var normal = new Vector3(); // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // generate vertices, normals and uvs\n\n    for (iy = 0; iy <= heightSegments; iy++) {\n      var verticesRow = [];\n      var v = iy / heightSegments;\n\n      for (ix = 0; ix <= widthSegments; ix++) {\n        var u = ix / widthSegments; // vertex\n\n        vertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n        vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n        vertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normal.set(vertex.x, vertex.y, vertex.z).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(u, 1 - v);\n        verticesRow.push(index++);\n      }\n\n      grid.push(verticesRow);\n    } // indices\n\n\n    for (iy = 0; iy < heightSegments; iy++) {\n      for (ix = 0; ix < widthSegments; ix++) {\n        var a = grid[iy][ix + 1];\n        var b = grid[iy][ix];\n        var c = grid[iy + 1][ix];\n        var d = grid[iy + 1][ix + 1];\n        if (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\n        if (iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  SphereBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  SphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n  /**\n   * @author Kaleb Murphy\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // RingGeometry\n\n  function RingGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n    Geometry.call(this);\n    this.type = 'RingGeometry';\n    this.parameters = {\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      thetaSegments: thetaSegments,\n      phiSegments: phiSegments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new RingBufferGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength));\n    this.mergeVertices();\n  }\n\n  RingGeometry.prototype = Object.create(Geometry.prototype);\n  RingGeometry.prototype.constructor = RingGeometry; // RingBufferGeometry\n\n  function RingBufferGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n    BufferGeometry.call(this);\n    this.type = 'RingBufferGeometry';\n    this.parameters = {\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      thetaSegments: thetaSegments,\n      phiSegments: phiSegments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    innerRadius = innerRadius || 0.5;\n    outerRadius = outerRadius || 1;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n    thetaSegments = thetaSegments !== undefined ? Math.max(3, thetaSegments) : 8;\n    phiSegments = phiSegments !== undefined ? Math.max(1, phiSegments) : 1; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // some helper variables\n\n    var segment;\n    var radius = innerRadius;\n    var radiusStep = (outerRadius - innerRadius) / phiSegments;\n    var vertex = new Vector3();\n    var uv = new Vector2();\n    var j, i; // generate vertices, normals and uvs\n\n    for (j = 0; j <= phiSegments; j++) {\n      for (i = 0; i <= thetaSegments; i++) {\n        // values are generate from the inside of the ring to the outside\n        segment = thetaStart + i / thetaSegments * thetaLength; // vertex\n\n        vertex.x = radius * Math.cos(segment);\n        vertex.y = radius * Math.sin(segment);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normals.push(0, 0, 1); // uv\n\n        uv.x = (vertex.x / outerRadius + 1) / 2;\n        uv.y = (vertex.y / outerRadius + 1) / 2;\n        uvs.push(uv.x, uv.y);\n      } // increase the radius for next row of vertices\n\n\n      radius += radiusStep;\n    } // indices\n\n\n    for (j = 0; j < phiSegments; j++) {\n      var thetaSegmentLevel = j * (thetaSegments + 1);\n\n      for (i = 0; i < thetaSegments; i++) {\n        segment = i + thetaSegmentLevel;\n        var a = segment;\n        var b = segment + thetaSegments + 1;\n        var c = segment + thetaSegments + 2;\n        var d = segment + 1; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  RingBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  RingBufferGeometry.prototype.constructor = RingBufferGeometry;\n  /**\n   * @author zz85 / https://github.com/zz85\n   * @author bhouston / http://clara.io\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // LatheGeometry\n\n  function LatheGeometry(points, segments, phiStart, phiLength) {\n    Geometry.call(this);\n    this.type = 'LatheGeometry';\n    this.parameters = {\n      points: points,\n      segments: segments,\n      phiStart: phiStart,\n      phiLength: phiLength\n    };\n    this.fromBufferGeometry(new LatheBufferGeometry(points, segments, phiStart, phiLength));\n    this.mergeVertices();\n  }\n\n  LatheGeometry.prototype = Object.create(Geometry.prototype);\n  LatheGeometry.prototype.constructor = LatheGeometry; // LatheBufferGeometry\n\n  function LatheBufferGeometry(points, segments, phiStart, phiLength) {\n    BufferGeometry.call(this);\n    this.type = 'LatheBufferGeometry';\n    this.parameters = {\n      points: points,\n      segments: segments,\n      phiStart: phiStart,\n      phiLength: phiLength\n    };\n    segments = Math.floor(segments) || 12;\n    phiStart = phiStart || 0;\n    phiLength = phiLength || Math.PI * 2; // clamp phiLength so it's in range of [ 0, 2PI ]\n\n    phiLength = _Math.clamp(phiLength, 0, Math.PI * 2); // buffers\n\n    var indices = [];\n    var vertices = [];\n    var uvs = []; // helper variables\n\n    var base;\n    var inverseSegments = 1.0 / segments;\n    var vertex = new Vector3();\n    var uv = new Vector2();\n    var i, j; // generate vertices and uvs\n\n    for (i = 0; i <= segments; i++) {\n      var phi = phiStart + i * inverseSegments * phiLength;\n      var sin = Math.sin(phi);\n      var cos = Math.cos(phi);\n\n      for (j = 0; j <= points.length - 1; j++) {\n        // vertex\n        vertex.x = points[j].x * sin;\n        vertex.y = points[j].y;\n        vertex.z = points[j].x * cos;\n        vertices.push(vertex.x, vertex.y, vertex.z); // uv\n\n        uv.x = i / segments;\n        uv.y = j / (points.length - 1);\n        uvs.push(uv.x, uv.y);\n      }\n    } // indices\n\n\n    for (i = 0; i < segments; i++) {\n      for (j = 0; j < points.length - 1; j++) {\n        base = j + i * points.length;\n        var a = base;\n        var b = base + points.length;\n        var c = base + points.length + 1;\n        var d = base + 1; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // generate normals\n\n    this.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\n    // because the corresponding vertices are identical (but still have different UVs).\n\n    if (phiLength === Math.PI * 2) {\n      var normals = this.attributes.normal.array;\n      var n1 = new Vector3();\n      var n2 = new Vector3();\n      var n = new Vector3(); // this is the buffer offset for the last line of vertices\n\n      base = segments * points.length * 3;\n\n      for (i = 0, j = 0; i < points.length; i++, j += 3) {\n        // select the normal of the vertex in the first line\n        n1.x = normals[j + 0];\n        n1.y = normals[j + 1];\n        n1.z = normals[j + 2]; // select the normal of the vertex in the last line\n\n        n2.x = normals[base + j + 0];\n        n2.y = normals[base + j + 1];\n        n2.z = normals[base + j + 2]; // average normals\n\n        n.addVectors(n1, n2).normalize(); // assign the new values to both normals\n\n        normals[j + 0] = normals[base + j + 0] = n.x;\n        normals[j + 1] = normals[base + j + 1] = n.y;\n        normals[j + 2] = normals[base + j + 2] = n.z;\n      }\n    }\n  }\n\n  LatheBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  LatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n  /**\n   * @author jonobr1 / http://jonobr1.com\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // ShapeGeometry\n\n  function ShapeGeometry(shapes, curveSegments) {\n    Geometry.call(this);\n    this.type = 'ShapeGeometry';\n\n    if (typeof curveSegments === 'object') {\n      console.warn('THREE.ShapeGeometry: Options parameter has been removed.');\n      curveSegments = curveSegments.curveSegments;\n    }\n\n    this.parameters = {\n      shapes: shapes,\n      curveSegments: curveSegments\n    };\n    this.fromBufferGeometry(new ShapeBufferGeometry(shapes, curveSegments));\n    this.mergeVertices();\n  }\n\n  ShapeGeometry.prototype = Object.create(Geometry.prototype);\n  ShapeGeometry.prototype.constructor = ShapeGeometry;\n\n  ShapeGeometry.prototype.toJSON = function () {\n    var data = Geometry.prototype.toJSON.call(this);\n    var shapes = this.parameters.shapes;\n    return toJSON$1(shapes, data);\n  }; // ShapeBufferGeometry\n\n\n  function ShapeBufferGeometry(shapes, curveSegments) {\n    BufferGeometry.call(this);\n    this.type = 'ShapeBufferGeometry';\n    this.parameters = {\n      shapes: shapes,\n      curveSegments: curveSegments\n    };\n    curveSegments = curveSegments || 12; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var groupStart = 0;\n    var groupCount = 0; // allow single and array values for \"shapes\" parameter\n\n    if (Array.isArray(shapes) === false) {\n      addShape(shapes);\n    } else {\n      for (var i = 0; i < shapes.length; i++) {\n        addShape(shapes[i]);\n        this.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\n\n        groupStart += groupCount;\n        groupCount = 0;\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\n\n    function addShape(shape) {\n      var i, l, shapeHole;\n      var indexOffset = vertices.length / 3;\n      var points = shape.extractPoints(curveSegments);\n      var shapeVertices = points.shape;\n      var shapeHoles = points.holes; // check direction of vertices\n\n      if (ShapeUtils.isClockWise(shapeVertices) === false) {\n        shapeVertices = shapeVertices.reverse();\n      }\n\n      for (i = 0, l = shapeHoles.length; i < l; i++) {\n        shapeHole = shapeHoles[i];\n\n        if (ShapeUtils.isClockWise(shapeHole) === true) {\n          shapeHoles[i] = shapeHole.reverse();\n        }\n      }\n\n      var faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\n\n      for (i = 0, l = shapeHoles.length; i < l; i++) {\n        shapeHole = shapeHoles[i];\n        shapeVertices = shapeVertices.concat(shapeHole);\n      } // vertices, normals, uvs\n\n\n      for (i = 0, l = shapeVertices.length; i < l; i++) {\n        var vertex = shapeVertices[i];\n        vertices.push(vertex.x, vertex.y, 0);\n        normals.push(0, 0, 1);\n        uvs.push(vertex.x, vertex.y); // world uvs\n      } // incides\n\n\n      for (i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n        var a = face[0] + indexOffset;\n        var b = face[1] + indexOffset;\n        var c = face[2] + indexOffset;\n        indices.push(a, b, c);\n        groupCount += 3;\n      }\n    }\n  }\n\n  ShapeBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  ShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\n  ShapeBufferGeometry.prototype.toJSON = function () {\n    var data = BufferGeometry.prototype.toJSON.call(this);\n    var shapes = this.parameters.shapes;\n    return toJSON$1(shapes, data);\n  }; //\n\n\n  function toJSON$1(shapes, data) {\n    data.shapes = [];\n\n    if (Array.isArray(shapes)) {\n      for (var i = 0, l = shapes.length; i < l; i++) {\n        var shape = shapes[i];\n        data.shapes.push(shape.uuid);\n      }\n    } else {\n      data.shapes.push(shapes.uuid);\n    }\n\n    return data;\n  }\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n\n  function EdgesGeometry(geometry, thresholdAngle) {\n    BufferGeometry.call(this);\n    this.type = 'EdgesGeometry';\n    this.parameters = {\n      thresholdAngle: thresholdAngle\n    };\n    thresholdAngle = thresholdAngle !== undefined ? thresholdAngle : 1; // buffer\n\n    var vertices = []; // helper variables\n\n    var thresholdDot = Math.cos(_Math.DEG2RAD * thresholdAngle);\n    var edge = [0, 0],\n        edges = {},\n        edge1,\n        edge2;\n    var key,\n        keys = ['a', 'b', 'c']; // prepare source geometry\n\n    var geometry2;\n\n    if (geometry.isBufferGeometry) {\n      geometry2 = new Geometry();\n      geometry2.fromBufferGeometry(geometry);\n    } else {\n      geometry2 = geometry.clone();\n    }\n\n    geometry2.mergeVertices();\n    geometry2.computeFaceNormals();\n    var sourceVertices = geometry2.vertices;\n    var faces = geometry2.faces; // now create a data structure where each entry represents an edge with its adjoining faces\n\n    for (var i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n\n      for (var j = 0; j < 3; j++) {\n        edge1 = face[keys[j]];\n        edge2 = face[keys[(j + 1) % 3]];\n        edge[0] = Math.min(edge1, edge2);\n        edge[1] = Math.max(edge1, edge2);\n        key = edge[0] + ',' + edge[1];\n\n        if (edges[key] === undefined) {\n          edges[key] = {\n            index1: edge[0],\n            index2: edge[1],\n            face1: i,\n            face2: undefined\n          };\n        } else {\n          edges[key].face2 = i;\n        }\n      }\n    } // generate vertices\n\n\n    for (key in edges) {\n      var e = edges[key]; // an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n      if (e.face2 === undefined || faces[e.face1].normal.dot(faces[e.face2].normal) <= thresholdDot) {\n        var vertex = sourceVertices[e.index1];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n        vertex = sourceVertices[e.index2];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n    } // build geometry\n\n\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  }\n\n  EdgesGeometry.prototype = Object.create(BufferGeometry.prototype);\n  EdgesGeometry.prototype.constructor = EdgesGeometry;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // CylinderGeometry\n\n  function CylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    Geometry.call(this);\n    this.type = 'CylinderGeometry';\n    this.parameters = {\n      radiusTop: radiusTop,\n      radiusBottom: radiusBottom,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new CylinderBufferGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength));\n    this.mergeVertices();\n  }\n\n  CylinderGeometry.prototype = Object.create(Geometry.prototype);\n  CylinderGeometry.prototype.constructor = CylinderGeometry; // CylinderBufferGeometry\n\n  function CylinderBufferGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    BufferGeometry.call(this);\n    this.type = 'CylinderBufferGeometry';\n    this.parameters = {\n      radiusTop: radiusTop,\n      radiusBottom: radiusBottom,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    var scope = this;\n    radiusTop = radiusTop !== undefined ? radiusTop : 1;\n    radiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n    height = height || 1;\n    radialSegments = Math.floor(radialSegments) || 8;\n    heightSegments = Math.floor(heightSegments) || 1;\n    openEnded = openEnded !== undefined ? openEnded : false;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var index = 0;\n    var indexArray = [];\n    var halfHeight = height / 2;\n    var groupStart = 0; // generate geometry\n\n    generateTorso();\n\n    if (openEnded === false) {\n      if (radiusTop > 0) generateCap(true);\n      if (radiusBottom > 0) generateCap(false);\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    function generateTorso() {\n      var x, y;\n      var normal = new Vector3();\n      var vertex = new Vector3();\n      var groupCount = 0; // this will be used to calculate the normal\n\n      var slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n      for (y = 0; y <= heightSegments; y++) {\n        var indexRow = [];\n        var v = y / heightSegments; // calculate the radius of the current row\n\n        var radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n        for (x = 0; x <= radialSegments; x++) {\n          var u = x / radialSegments;\n          var theta = u * thetaLength + thetaStart;\n          var sinTheta = Math.sin(theta);\n          var cosTheta = Math.cos(theta); // vertex\n\n          vertex.x = radius * sinTheta;\n          vertex.y = -v * height + halfHeight;\n          vertex.z = radius * cosTheta;\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n          normal.set(sinTheta, slope, cosTheta).normalize();\n          normals.push(normal.x, normal.y, normal.z); // uv\n\n          uvs.push(u, 1 - v); // save index of vertex in respective row\n\n          indexRow.push(index++);\n        } // now save vertices of the row in our index array\n\n\n        indexArray.push(indexRow);\n      } // generate indices\n\n\n      for (x = 0; x < radialSegments; x++) {\n        for (y = 0; y < heightSegments; y++) {\n          // we use the index array to access the correct indices\n          var a = indexArray[y][x];\n          var b = indexArray[y + 1][x];\n          var c = indexArray[y + 1][x + 1];\n          var d = indexArray[y][x + 1]; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d); // update group counter\n\n          groupCount += 6;\n        }\n      } // add a group to the geometry. this will ensure multi material support\n\n\n      scope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n      groupStart += groupCount;\n    }\n\n    function generateCap(top) {\n      var x, centerIndexStart, centerIndexEnd;\n      var uv = new Vector2();\n      var vertex = new Vector3();\n      var groupCount = 0;\n      var radius = top === true ? radiusTop : radiusBottom;\n      var sign = top === true ? 1 : -1; // save the index of the first center vertex\n\n      centerIndexStart = index; // first we generate the center vertex data of the cap.\n      // because the geometry needs one set of uvs per face,\n      // we must generate a center vertex per face/segment\n\n      for (x = 1; x <= radialSegments; x++) {\n        // vertex\n        vertices.push(0, halfHeight * sign, 0); // normal\n\n        normals.push(0, sign, 0); // uv\n\n        uvs.push(0.5, 0.5); // increase index\n\n        index++;\n      } // save the index of the last center vertex\n\n\n      centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n      for (x = 0; x <= radialSegments; x++) {\n        var u = x / radialSegments;\n        var theta = u * thetaLength + thetaStart;\n        var cosTheta = Math.cos(theta);\n        var sinTheta = Math.sin(theta); // vertex\n\n        vertex.x = radius * sinTheta;\n        vertex.y = halfHeight * sign;\n        vertex.z = radius * cosTheta;\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normals.push(0, sign, 0); // uv\n\n        uv.x = cosTheta * 0.5 + 0.5;\n        uv.y = sinTheta * 0.5 * sign + 0.5;\n        uvs.push(uv.x, uv.y); // increase index\n\n        index++;\n      } // generate indices\n\n\n      for (x = 0; x < radialSegments; x++) {\n        var c = centerIndexStart + x;\n        var i = centerIndexEnd + x;\n\n        if (top === true) {\n          // face top\n          indices.push(i, i + 1, c);\n        } else {\n          // face bottom\n          indices.push(i + 1, i, c);\n        }\n\n        groupCount += 3;\n      } // add a group to the geometry. this will ensure multi material support\n\n\n      scope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n      groupStart += groupCount;\n    }\n  }\n\n  CylinderBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  CylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n  /**\n   * @author abelnation / http://github.com/abelnation\n   */\n  // ConeGeometry\n\n  function ConeGeometry(radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    CylinderGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n    this.type = 'ConeGeometry';\n    this.parameters = {\n      radius: radius,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n  }\n\n  ConeGeometry.prototype = Object.create(CylinderGeometry.prototype);\n  ConeGeometry.prototype.constructor = ConeGeometry; // ConeBufferGeometry\n\n  function ConeBufferGeometry(radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    CylinderBufferGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n    this.type = 'ConeBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n  }\n\n  ConeBufferGeometry.prototype = Object.create(CylinderBufferGeometry.prototype);\n  ConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   * @author Mugen87 / https://github.com/Mugen87\n   * @author hughes\n   */\n  // CircleGeometry\n\n  function CircleGeometry(radius, segments, thetaStart, thetaLength) {\n    Geometry.call(this);\n    this.type = 'CircleGeometry';\n    this.parameters = {\n      radius: radius,\n      segments: segments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new CircleBufferGeometry(radius, segments, thetaStart, thetaLength));\n    this.mergeVertices();\n  }\n\n  CircleGeometry.prototype = Object.create(Geometry.prototype);\n  CircleGeometry.prototype.constructor = CircleGeometry; // CircleBufferGeometry\n\n  function CircleBufferGeometry(radius, segments, thetaStart, thetaLength) {\n    BufferGeometry.call(this);\n    this.type = 'CircleBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      segments: segments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    radius = radius || 1;\n    segments = segments !== undefined ? Math.max(3, segments) : 8;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var i, s;\n    var vertex = new Vector3();\n    var uv = new Vector2(); // center point\n\n    vertices.push(0, 0, 0);\n    normals.push(0, 0, 1);\n    uvs.push(0.5, 0.5);\n\n    for (s = 0, i = 3; s <= segments; s++, i += 3) {\n      var segment = thetaStart + s / segments * thetaLength; // vertex\n\n      vertex.x = radius * Math.cos(segment);\n      vertex.y = radius * Math.sin(segment);\n      vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n      normals.push(0, 0, 1); // uvs\n\n      uv.x = (vertices[i] / radius + 1) / 2;\n      uv.y = (vertices[i + 1] / radius + 1) / 2;\n      uvs.push(uv.x, uv.y);\n    } // indices\n\n\n    for (i = 1; i <= segments; i++) {\n      indices.push(i, i + 1, 0);\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  CircleBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  CircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n  var Geometries =\n  /*#__PURE__*/\n  Object.freeze({\n    WireframeGeometry: WireframeGeometry,\n    ParametricGeometry: ParametricGeometry,\n    ParametricBufferGeometry: ParametricBufferGeometry,\n    TetrahedronGeometry: TetrahedronGeometry,\n    TetrahedronBufferGeometry: TetrahedronBufferGeometry,\n    OctahedronGeometry: OctahedronGeometry,\n    OctahedronBufferGeometry: OctahedronBufferGeometry,\n    IcosahedronGeometry: IcosahedronGeometry,\n    IcosahedronBufferGeometry: IcosahedronBufferGeometry,\n    DodecahedronGeometry: DodecahedronGeometry,\n    DodecahedronBufferGeometry: DodecahedronBufferGeometry,\n    PolyhedronGeometry: PolyhedronGeometry,\n    PolyhedronBufferGeometry: PolyhedronBufferGeometry,\n    TubeGeometry: TubeGeometry,\n    TubeBufferGeometry: TubeBufferGeometry,\n    TorusKnotGeometry: TorusKnotGeometry,\n    TorusKnotBufferGeometry: TorusKnotBufferGeometry,\n    TorusGeometry: TorusGeometry,\n    TorusBufferGeometry: TorusBufferGeometry,\n    TextGeometry: TextGeometry,\n    TextBufferGeometry: TextBufferGeometry,\n    SphereGeometry: SphereGeometry,\n    SphereBufferGeometry: SphereBufferGeometry,\n    RingGeometry: RingGeometry,\n    RingBufferGeometry: RingBufferGeometry,\n    PlaneGeometry: PlaneGeometry,\n    PlaneBufferGeometry: PlaneBufferGeometry,\n    LatheGeometry: LatheGeometry,\n    LatheBufferGeometry: LatheBufferGeometry,\n    ShapeGeometry: ShapeGeometry,\n    ShapeBufferGeometry: ShapeBufferGeometry,\n    ExtrudeGeometry: ExtrudeGeometry,\n    ExtrudeBufferGeometry: ExtrudeBufferGeometry,\n    EdgesGeometry: EdgesGeometry,\n    ConeGeometry: ConeGeometry,\n    ConeBufferGeometry: ConeBufferGeometry,\n    CylinderGeometry: CylinderGeometry,\n    CylinderBufferGeometry: CylinderBufferGeometry,\n    CircleGeometry: CircleGeometry,\n    CircleBufferGeometry: CircleBufferGeometry,\n    BoxGeometry: BoxGeometry,\n    BoxBufferGeometry: BoxBufferGeometry\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   *\n   * parameters = {\n   *  color: <THREE.Color>\n   * }\n   */\n\n  function ShadowMaterial(parameters) {\n    Material.call(this);\n    this.type = 'ShadowMaterial';\n    this.color = new Color(0x000000);\n    this.transparent = true;\n    this.setValues(parameters);\n  }\n\n  ShadowMaterial.prototype = Object.create(Material.prototype);\n  ShadowMaterial.prototype.constructor = ShadowMaterial;\n  ShadowMaterial.prototype.isShadowMaterial = true;\n\n  ShadowMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function RawShaderMaterial(parameters) {\n    ShaderMaterial.call(this, parameters);\n    this.type = 'RawShaderMaterial';\n  }\n\n  RawShaderMaterial.prototype = Object.create(ShaderMaterial.prototype);\n  RawShaderMaterial.prototype.constructor = RawShaderMaterial;\n  RawShaderMaterial.prototype.isRawShaderMaterial = true;\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  roughness: <float>,\n   *  metalness: <float>,\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  emissive: <hex>,\n   *  emissiveIntensity: <float>\n   *  emissiveMap: new THREE.Texture( <Image> ),\n   *\n   *  bumpMap: new THREE.Texture( <Image> ),\n   *  bumpScale: <float>,\n   *\n   *  normalMap: new THREE.Texture( <Image> ),\n   *  normalMapType: THREE.TangentSpaceNormalMap,\n   *  normalScale: <Vector2>,\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  roughnessMap: new THREE.Texture( <Image> ),\n   *\n   *  metalnessMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *  envMapIntensity: <float>\n   *\n   *  refractionRatio: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n  function MeshStandardMaterial(parameters) {\n    Material.call(this);\n    this.defines = {\n      'STANDARD': ''\n    };\n    this.type = 'MeshStandardMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.roughness = 0.5;\n    this.metalness = 0.5;\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.roughnessMap = null;\n    this.metalnessMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.envMapIntensity = 1.0;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshStandardMaterial.prototype = Object.create(Material.prototype);\n  MeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n  MeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n  MeshStandardMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.defines = {\n      'STANDARD': ''\n    };\n    this.color.copy(source.color);\n    this.roughness = source.roughness;\n    this.metalness = source.metalness;\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.roughnessMap = source.roughnessMap;\n    this.metalnessMap = source.metalnessMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.envMapIntensity = source.envMapIntensity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *  reflectivity: <float>\n   * }\n   */\n\n\n  function MeshPhysicalMaterial(parameters) {\n    MeshStandardMaterial.call(this);\n    this.defines = {\n      'PHYSICAL': ''\n    };\n    this.type = 'MeshPhysicalMaterial';\n    this.reflectivity = 0.5; // maps to F0 = 0.04\n\n    this.clearCoat = 0.0;\n    this.clearCoatRoughness = 0.0;\n    this.setValues(parameters);\n  }\n\n  MeshPhysicalMaterial.prototype = Object.create(MeshStandardMaterial.prototype);\n  MeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n  MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n  MeshPhysicalMaterial.prototype.copy = function (source) {\n    MeshStandardMaterial.prototype.copy.call(this, source);\n    this.defines = {\n      'PHYSICAL': ''\n    };\n    this.reflectivity = source.reflectivity;\n    this.clearCoat = source.clearCoat;\n    this.clearCoatRoughness = source.clearCoatRoughness;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  specular: <hex>,\n   *  shininess: <float>,\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  emissive: <hex>,\n   *  emissiveIntensity: <float>\n   *  emissiveMap: new THREE.Texture( <Image> ),\n   *\n   *  bumpMap: new THREE.Texture( <Image> ),\n   *  bumpScale: <float>,\n   *\n   *  normalMap: new THREE.Texture( <Image> ),\n   *  normalMapType: THREE.TangentSpaceNormalMap,\n   *  normalScale: <Vector2>,\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  specularMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *  combine: THREE.Multiply,\n   *  reflectivity: <float>,\n   *  refractionRatio: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  function MeshPhongMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshPhongMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.specular = new Color(0x111111);\n    this.shininess = 30;\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshPhongMaterial.prototype = Object.create(Material.prototype);\n  MeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n  MeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n  MeshPhongMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.specular.copy(source.specular);\n    this.shininess = source.shininess;\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author takahirox / http://github.com/takahirox\n   *\n   * parameters = {\n   *  gradientMap: new THREE.Texture( <Image> )\n   * }\n   */\n\n\n  function MeshToonMaterial(parameters) {\n    MeshPhongMaterial.call(this);\n    this.defines = {\n      'TOON': ''\n    };\n    this.type = 'MeshToonMaterial';\n    this.gradientMap = null;\n    this.setValues(parameters);\n  }\n\n  MeshToonMaterial.prototype = Object.create(MeshPhongMaterial.prototype);\n  MeshToonMaterial.prototype.constructor = MeshToonMaterial;\n  MeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n  MeshToonMaterial.prototype.copy = function (source) {\n    MeshPhongMaterial.prototype.copy.call(this, source);\n    this.gradientMap = source.gradientMap;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *  opacity: <float>,\n   *\n   *  bumpMap: new THREE.Texture( <Image> ),\n   *  bumpScale: <float>,\n   *\n   *  normalMap: new THREE.Texture( <Image> ),\n   *  normalMapType: THREE.TangentSpaceNormalMap,\n   *  normalScale: <Vector2>,\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  function MeshNormalMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshNormalMaterial';\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false;\n    this.lights = false;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshNormalMaterial.prototype = Object.create(Material.prototype);\n  MeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n  MeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n  MeshNormalMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  emissive: <hex>,\n   *  emissiveIntensity: <float>\n   *  emissiveMap: new THREE.Texture( <Image> ),\n   *\n   *  specularMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *  combine: THREE.Multiply,\n   *  reflectivity: <float>,\n   *  refractionRatio: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  function MeshLambertMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshLambertMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshLambertMaterial.prototype = Object.create(Material.prototype);\n  MeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n  MeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n  MeshLambertMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *\n   *  matcap: new THREE.Texture( <Image> ),\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  bumpMap: new THREE.Texture( <Image> ),\n   *  bumpScale: <float>,\n   *\n   *  normalMap: new THREE.Texture( <Image> ),\n   *  normalMapType: THREE.TangentSpaceNormalMap,\n   *  normalScale: <Vector2>,\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  function MeshMatcapMaterial(parameters) {\n    Material.call(this);\n    this.defines = {\n      'MATCAP': ''\n    };\n    this.type = 'MeshMatcapMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.matcap = null;\n    this.map = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.alphaMap = null;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.lights = false;\n    this.setValues(parameters);\n  }\n\n  MeshMatcapMaterial.prototype = Object.create(Material.prototype);\n  MeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n  MeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n  MeshMatcapMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.defines = {\n      'MATCAP': ''\n    };\n    this.color.copy(source.color);\n    this.matcap = source.matcap;\n    this.map = source.map;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.alphaMap = source.alphaMap;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *\n   *  linewidth: <float>,\n   *\n   *  scale: <float>,\n   *  dashSize: <float>,\n   *  gapSize: <float>\n   * }\n   */\n\n\n  function LineDashedMaterial(parameters) {\n    LineBasicMaterial.call(this);\n    this.type = 'LineDashedMaterial';\n    this.scale = 1;\n    this.dashSize = 3;\n    this.gapSize = 1;\n    this.setValues(parameters);\n  }\n\n  LineDashedMaterial.prototype = Object.create(LineBasicMaterial.prototype);\n  LineDashedMaterial.prototype.constructor = LineDashedMaterial;\n  LineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n  LineDashedMaterial.prototype.copy = function (source) {\n    LineBasicMaterial.prototype.copy.call(this, source);\n    this.scale = source.scale;\n    this.dashSize = source.dashSize;\n    this.gapSize = source.gapSize;\n    return this;\n  };\n\n  var Materials =\n  /*#__PURE__*/\n  Object.freeze({\n    ShadowMaterial: ShadowMaterial,\n    SpriteMaterial: SpriteMaterial,\n    RawShaderMaterial: RawShaderMaterial,\n    ShaderMaterial: ShaderMaterial,\n    PointsMaterial: PointsMaterial,\n    MeshPhysicalMaterial: MeshPhysicalMaterial,\n    MeshStandardMaterial: MeshStandardMaterial,\n    MeshPhongMaterial: MeshPhongMaterial,\n    MeshToonMaterial: MeshToonMaterial,\n    MeshNormalMaterial: MeshNormalMaterial,\n    MeshLambertMaterial: MeshLambertMaterial,\n    MeshDepthMaterial: MeshDepthMaterial,\n    MeshDistanceMaterial: MeshDistanceMaterial,\n    MeshBasicMaterial: MeshBasicMaterial,\n    MeshMatcapMaterial: MeshMatcapMaterial,\n    LineDashedMaterial: LineDashedMaterial,\n    LineBasicMaterial: LineBasicMaterial,\n    Material: Material\n  });\n  /**\n   * @author tschw\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   */\n\n  var AnimationUtils = {\n    // same as Array.prototype.slice, but also works on typed arrays\n    arraySlice: function arraySlice(array, from, to) {\n      if (AnimationUtils.isTypedArray(array)) {\n        // in ios9 array.subarray(from, undefined) will return empty array\n        // but array.subarray(from) or array.subarray(from, len) is correct\n        return new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\n      }\n\n      return array.slice(from, to);\n    },\n    // converts an array to a specific type\n    convertArray: function convertArray(array, type, forceClone) {\n      if (!array || // let 'undefined' and 'null' pass\n      !forceClone && array.constructor === type) return array;\n\n      if (typeof type.BYTES_PER_ELEMENT === 'number') {\n        return new type(array); // create typed array\n      }\n\n      return Array.prototype.slice.call(array); // create Array\n    },\n    isTypedArray: function isTypedArray(object) {\n      return ArrayBuffer.isView(object) && !(object instanceof DataView);\n    },\n    // returns an array by which times and values can be sorted\n    getKeyframeOrder: function getKeyframeOrder(times) {\n      function compareTime(i, j) {\n        return times[i] - times[j];\n      }\n\n      var n = times.length;\n      var result = new Array(n);\n\n      for (var i = 0; i !== n; ++i) {\n        result[i] = i;\n      }\n\n      result.sort(compareTime);\n      return result;\n    },\n    // uses the array previously returned by 'getKeyframeOrder' to sort data\n    sortedArray: function sortedArray(values, stride, order) {\n      var nValues = values.length;\n      var result = new values.constructor(nValues);\n\n      for (var i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n        var srcOffset = order[i] * stride;\n\n        for (var j = 0; j !== stride; ++j) {\n          result[dstOffset++] = values[srcOffset + j];\n        }\n      }\n\n      return result;\n    },\n    // function for parsing AOS keyframe formats\n    flattenJSON: function flattenJSON(jsonKeys, times, values, valuePropertyName) {\n      var i = 1,\n          key = jsonKeys[0];\n\n      while (key !== undefined && key[valuePropertyName] === undefined) {\n        key = jsonKeys[i++];\n      }\n\n      if (key === undefined) return; // no data\n\n      var value = key[valuePropertyName];\n      if (value === undefined) return; // no data\n\n      if (Array.isArray(value)) {\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            values.push.apply(values, value); // push all elements\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      } else if (value.toArray !== undefined) {\n        // ...assume THREE.Math-ish\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            value.toArray(values, values.length);\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      } else {\n        // otherwise push as-is\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            values.push(value);\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      }\n    }\n  };\n  /**\n   * Abstract base class of interpolants over parametric samples.\n   *\n   * The parameter domain is one dimensional, typically the time or a path\n   * along a curve defined by the data.\n   *\n   * The sample values can have any dimensionality and derived classes may\n   * apply special interpretations to the data.\n   *\n   * This class provides the interval seek in a Template Method, deferring\n   * the actual interpolation to derived classes.\n   *\n   * Time complexity is O(1) for linear access crossing at most two points\n   * and O(log N) for random access, where N is the number of positions.\n   *\n   * References:\n   *\n   * \t\thttp://www.oodesign.com/template-method-pattern.html\n   *\n   * @author tschw\n   */\n\n  function Interpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    this.parameterPositions = parameterPositions;\n    this._cachedIndex = 0;\n    this.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n    this.sampleValues = sampleValues;\n    this.valueSize = sampleSize;\n  }\n\n  Object.assign(Interpolant.prototype, {\n    evaluate: function evaluate(t) {\n      var pp = this.parameterPositions,\n          i1 = this._cachedIndex,\n          t1 = pp[i1],\n          t0 = pp[i1 - 1];\n\n      validate_interval: {\n        seek: {\n          var right;\n\n          linear_scan: {\n            //- See http://jsperf.com/comparison-to-undefined/3\n            //- slower code:\n            //-\n            //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n            forward_scan: if (!(t < t1)) {\n              for (var giveUpAt = i1 + 2;;) {\n                if (t1 === undefined) {\n                  if (t < t0) break forward_scan; // after end\n\n                  i1 = pp.length;\n                  this._cachedIndex = i1;\n                  return this.afterEnd_(i1 - 1, t, t0);\n                }\n\n                if (i1 === giveUpAt) break; // this loop\n\n                t0 = t1;\n                t1 = pp[++i1];\n\n                if (t < t1) {\n                  // we have arrived at the sought interval\n                  break seek;\n                }\n              } // prepare binary search on the right side of the index\n\n\n              right = pp.length;\n              break linear_scan;\n            } //- slower code:\n            //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n            if (!(t >= t0)) {\n              // looping?\n              var t1global = pp[1];\n\n              if (t < t1global) {\n                i1 = 2; // + 1, using the scan for the details\n\n                t0 = t1global;\n              } // linear reverse scan\n\n\n              for (var giveUpAt = i1 - 2;;) {\n                if (t0 === undefined) {\n                  // before start\n                  this._cachedIndex = 0;\n                  return this.beforeStart_(0, t, t1);\n                }\n\n                if (i1 === giveUpAt) break; // this loop\n\n                t1 = t0;\n                t0 = pp[--i1 - 1];\n\n                if (t >= t0) {\n                  // we have arrived at the sought interval\n                  break seek;\n                }\n              } // prepare binary search on the left side of the index\n\n\n              right = i1;\n              i1 = 0;\n              break linear_scan;\n            } // the interval is valid\n\n\n            break validate_interval;\n          } // linear scan\n          // binary search\n\n\n          while (i1 < right) {\n            var mid = i1 + right >>> 1;\n\n            if (t < pp[mid]) {\n              right = mid;\n            } else {\n              i1 = mid + 1;\n            }\n          }\n\n          t1 = pp[i1];\n          t0 = pp[i1 - 1]; // check boundary cases, again\n\n          if (t0 === undefined) {\n            this._cachedIndex = 0;\n            return this.beforeStart_(0, t, t1);\n          }\n\n          if (t1 === undefined) {\n            i1 = pp.length;\n            this._cachedIndex = i1;\n            return this.afterEnd_(i1 - 1, t0, t);\n          }\n        } // seek\n\n\n        this._cachedIndex = i1;\n        this.intervalChanged_(i1, t0, t1);\n      } // validate_interval\n\n\n      return this.interpolate_(i1, t0, t, t1);\n    },\n    settings: null,\n    // optional, subclass-specific settings structure\n    // Note: The indirection allows central control of many interpolants.\n    // --- Protected interface\n    DefaultSettings_: {},\n    getSettings_: function getSettings_() {\n      return this.settings || this.DefaultSettings_;\n    },\n    copySampleValue_: function copySampleValue_(index) {\n      // copies a sample value to the result buffer\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset = index * stride;\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = values[offset + i];\n      }\n\n      return result;\n    },\n    // Template methods for derived classes:\n    interpolate_: function interpolate_()\n    /* i1, t0, t, t1 */\n    {\n      throw new Error('call to abstract method'); // implementations shall return this.resultBuffer\n    },\n    intervalChanged_: function intervalChanged_()\n    /* i1, t0, t1 */\n    {// empty\n    }\n  }); //!\\ DECLARE ALIAS AFTER assign prototype !\n\n  Object.assign(Interpolant.prototype, {\n    //( 0, t, t0 ), returns this.resultBuffer\n    beforeStart_: Interpolant.prototype.copySampleValue_,\n    //( N-1, tN-1, t ), returns this.resultBuffer\n    afterEnd_: Interpolant.prototype.copySampleValue_\n  });\n  /**\n   * Fast and simple cubic spline interpolant.\n   *\n   * It was derived from a Hermitian construction setting the first derivative\n   * at each sample position to the linear slope between neighboring positions\n   * over their parameter interval.\n   *\n   * @author tschw\n   */\n\n  function CubicInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n    this._weightPrev = -0;\n    this._offsetPrev = -0;\n    this._weightNext = -0;\n    this._offsetNext = -0;\n  }\n\n  CubicInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: CubicInterpolant,\n    DefaultSettings_: {\n      endingStart: ZeroCurvatureEnding,\n      endingEnd: ZeroCurvatureEnding\n    },\n    intervalChanged_: function intervalChanged_(i1, t0, t1) {\n      var pp = this.parameterPositions,\n          iPrev = i1 - 2,\n          iNext = i1 + 1,\n          tPrev = pp[iPrev],\n          tNext = pp[iNext];\n\n      if (tPrev === undefined) {\n        switch (this.getSettings_().endingStart) {\n          case ZeroSlopeEnding:\n            // f'(t0) = 0\n            iPrev = i1;\n            tPrev = 2 * t0 - t1;\n            break;\n\n          case WrapAroundEnding:\n            // use the other end of the curve\n            iPrev = pp.length - 2;\n            tPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n            break;\n\n          default:\n            // ZeroCurvatureEnding\n            // f''(t0) = 0 a.k.a. Natural Spline\n            iPrev = i1;\n            tPrev = t1;\n        }\n      }\n\n      if (tNext === undefined) {\n        switch (this.getSettings_().endingEnd) {\n          case ZeroSlopeEnding:\n            // f'(tN) = 0\n            iNext = i1;\n            tNext = 2 * t1 - t0;\n            break;\n\n          case WrapAroundEnding:\n            // use the other end of the curve\n            iNext = 1;\n            tNext = t1 + pp[1] - pp[0];\n            break;\n\n          default:\n            // ZeroCurvatureEnding\n            // f''(tN) = 0, a.k.a. Natural Spline\n            iNext = i1 - 1;\n            tNext = t0;\n        }\n      }\n\n      var halfDt = (t1 - t0) * 0.5,\n          stride = this.valueSize;\n      this._weightPrev = halfDt / (t0 - tPrev);\n      this._weightNext = halfDt / (tNext - t1);\n      this._offsetPrev = iPrev * stride;\n      this._offsetNext = iNext * stride;\n    },\n    interpolate_: function interpolate_(i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          o1 = i1 * stride,\n          o0 = o1 - stride,\n          oP = this._offsetPrev,\n          oN = this._offsetNext,\n          wP = this._weightPrev,\n          wN = this._weightNext,\n          p = (t - t0) / (t1 - t0),\n          pp = p * p,\n          ppp = pp * p; // evaluate polynomials\n\n      var sP = -wP * ppp + 2 * wP * pp - wP * p;\n      var s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n      var s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n      var sN = wN * ppp - wN * pp; // combine data linearly\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n      }\n\n      return result;\n    }\n  });\n  /**\n   * @author tschw\n   */\n\n  function LinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  LinearInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: LinearInterpolant,\n    interpolate_: function interpolate_(i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset1 = i1 * stride,\n          offset0 = offset1 - stride,\n          weight1 = (t - t0) / (t1 - t0),\n          weight0 = 1 - weight1;\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n      }\n\n      return result;\n    }\n  });\n  /**\n   *\n   * Interpolant that evaluates to the sample value at the position preceeding\n   * the parameter.\n   *\n   * @author tschw\n   */\n\n  function DiscreteInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  DiscreteInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: DiscreteInterpolant,\n    interpolate_: function interpolate_(i1\n    /*, t0, t, t1 */\n    ) {\n      return this.copySampleValue_(i1 - 1);\n    }\n  });\n  /**\n   *\n   * A timed sequence of keyframes for a specific property.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function KeyframeTrack(name, times, values, interpolation) {\n    if (name === undefined) throw new Error('THREE.KeyframeTrack: track name is undefined');\n    if (times === undefined || times.length === 0) throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + name);\n    this.name = name;\n    this.times = AnimationUtils.convertArray(times, this.TimeBufferType);\n    this.values = AnimationUtils.convertArray(values, this.ValueBufferType);\n    this.setInterpolation(interpolation || this.DefaultInterpolation);\n  } // Static methods\n\n\n  Object.assign(KeyframeTrack, {\n    // Serialization (in static context, because of constructor invocation\n    // and automatic invocation of .toJSON):\n    toJSON: function toJSON(track) {\n      var trackType = track.constructor;\n      var json; // derived classes can define a static toJSON method\n\n      if (trackType.toJSON !== undefined) {\n        json = trackType.toJSON(track);\n      } else {\n        // by default, we assume the data can be serialized as-is\n        json = {\n          'name': track.name,\n          'times': AnimationUtils.convertArray(track.times, Array),\n          'values': AnimationUtils.convertArray(track.values, Array)\n        };\n        var interpolation = track.getInterpolation();\n\n        if (interpolation !== track.DefaultInterpolation) {\n          json.interpolation = interpolation;\n        }\n      }\n\n      json.type = track.ValueTypeName; // mandatory\n\n      return json;\n    }\n  });\n  Object.assign(KeyframeTrack.prototype, {\n    constructor: KeyframeTrack,\n    TimeBufferType: Float32Array,\n    ValueBufferType: Float32Array,\n    DefaultInterpolation: InterpolateLinear,\n    InterpolantFactoryMethodDiscrete: function InterpolantFactoryMethodDiscrete(result) {\n      return new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    InterpolantFactoryMethodLinear: function InterpolantFactoryMethodLinear(result) {\n      return new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    InterpolantFactoryMethodSmooth: function InterpolantFactoryMethodSmooth(result) {\n      return new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    setInterpolation: function setInterpolation(interpolation) {\n      var factoryMethod;\n\n      switch (interpolation) {\n        case InterpolateDiscrete:\n          factoryMethod = this.InterpolantFactoryMethodDiscrete;\n          break;\n\n        case InterpolateLinear:\n          factoryMethod = this.InterpolantFactoryMethodLinear;\n          break;\n\n        case InterpolateSmooth:\n          factoryMethod = this.InterpolantFactoryMethodSmooth;\n          break;\n      }\n\n      if (factoryMethod === undefined) {\n        var message = \"unsupported interpolation for \" + this.ValueTypeName + \" keyframe track named \" + this.name;\n\n        if (this.createInterpolant === undefined) {\n          // fall back to default, unless the default itself is messed up\n          if (interpolation !== this.DefaultInterpolation) {\n            this.setInterpolation(this.DefaultInterpolation);\n          } else {\n            throw new Error(message); // fatal, in this case\n          }\n        }\n\n        console.warn('THREE.KeyframeTrack:', message);\n        return this;\n      }\n\n      this.createInterpolant = factoryMethod;\n      return this;\n    },\n    getInterpolation: function getInterpolation() {\n      switch (this.createInterpolant) {\n        case this.InterpolantFactoryMethodDiscrete:\n          return InterpolateDiscrete;\n\n        case this.InterpolantFactoryMethodLinear:\n          return InterpolateLinear;\n\n        case this.InterpolantFactoryMethodSmooth:\n          return InterpolateSmooth;\n      }\n    },\n    getValueSize: function getValueSize() {\n      return this.values.length / this.times.length;\n    },\n    // move all keyframes either forwards or backwards in time\n    shift: function shift(timeOffset) {\n      if (timeOffset !== 0.0) {\n        var times = this.times;\n\n        for (var i = 0, n = times.length; i !== n; ++i) {\n          times[i] += timeOffset;\n        }\n      }\n\n      return this;\n    },\n    // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n    scale: function scale(timeScale) {\n      if (timeScale !== 1.0) {\n        var times = this.times;\n\n        for (var i = 0, n = times.length; i !== n; ++i) {\n          times[i] *= timeScale;\n        }\n      }\n\n      return this;\n    },\n    // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n    // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n    trim: function trim(startTime, endTime) {\n      var times = this.times,\n          nKeys = times.length,\n          from = 0,\n          to = nKeys - 1;\n\n      while (from !== nKeys && times[from] < startTime) {\n        ++from;\n      }\n\n      while (to !== -1 && times[to] > endTime) {\n        --to;\n      }\n\n      ++to; // inclusive -> exclusive bound\n\n      if (from !== 0 || to !== nKeys) {\n        // empty tracks are forbidden, so keep at least one keyframe\n        if (from >= to) to = Math.max(to, 1), from = to - 1;\n        var stride = this.getValueSize();\n        this.times = AnimationUtils.arraySlice(times, from, to);\n        this.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n      }\n\n      return this;\n    },\n    // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n    validate: function validate() {\n      var valid = true;\n      var valueSize = this.getValueSize();\n\n      if (valueSize - Math.floor(valueSize) !== 0) {\n        console.error('THREE.KeyframeTrack: Invalid value size in track.', this);\n        valid = false;\n      }\n\n      var times = this.times,\n          values = this.values,\n          nKeys = times.length;\n\n      if (nKeys === 0) {\n        console.error('THREE.KeyframeTrack: Track is empty.', this);\n        valid = false;\n      }\n\n      var prevTime = null;\n\n      for (var i = 0; i !== nKeys; i++) {\n        var currTime = times[i];\n\n        if (typeof currTime === 'number' && isNaN(currTime)) {\n          console.error('THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime);\n          valid = false;\n          break;\n        }\n\n        if (prevTime !== null && prevTime > currTime) {\n          console.error('THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime);\n          valid = false;\n          break;\n        }\n\n        prevTime = currTime;\n      }\n\n      if (values !== undefined) {\n        if (AnimationUtils.isTypedArray(values)) {\n          for (var i = 0, n = values.length; i !== n; ++i) {\n            var value = values[i];\n\n            if (isNaN(value)) {\n              console.error('THREE.KeyframeTrack: Value is not a valid number.', this, i, value);\n              valid = false;\n              break;\n            }\n          }\n        }\n      }\n\n      return valid;\n    },\n    // removes equivalent sequential keys as common in morph target sequences\n    // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n    optimize: function optimize() {\n      var times = this.times,\n          values = this.values,\n          stride = this.getValueSize(),\n          smoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n          writeIndex = 1,\n          lastIndex = times.length - 1;\n\n      for (var i = 1; i < lastIndex; ++i) {\n        var keep = false;\n        var time = times[i];\n        var timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\n\n        if (time !== timeNext && (i !== 1 || time !== time[0])) {\n          if (!smoothInterpolation) {\n            // remove unnecessary keyframes same as their neighbors\n            var offset = i * stride,\n                offsetP = offset - stride,\n                offsetN = offset + stride;\n\n            for (var j = 0; j !== stride; ++j) {\n              var value = values[offset + j];\n\n              if (value !== values[offsetP + j] || value !== values[offsetN + j]) {\n                keep = true;\n                break;\n              }\n            }\n          } else {\n            keep = true;\n          }\n        } // in-place compaction\n\n\n        if (keep) {\n          if (i !== writeIndex) {\n            times[writeIndex] = times[i];\n            var readOffset = i * stride,\n                writeOffset = writeIndex * stride;\n\n            for (var j = 0; j !== stride; ++j) {\n              values[writeOffset + j] = values[readOffset + j];\n            }\n          }\n\n          ++writeIndex;\n        }\n      } // flush last keyframe (compaction looks ahead)\n\n\n      if (lastIndex > 0) {\n        times[writeIndex] = times[lastIndex];\n\n        for (var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++j) {\n          values[writeOffset + j] = values[readOffset + j];\n        }\n\n        ++writeIndex;\n      }\n\n      if (writeIndex !== times.length) {\n        this.times = AnimationUtils.arraySlice(times, 0, writeIndex);\n        this.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n      }\n\n      return this;\n    }\n  });\n  /**\n   *\n   * A Track of Boolean keyframe values.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function BooleanKeyframeTrack(name, times, values) {\n    KeyframeTrack.call(this, name, times, values);\n  }\n\n  BooleanKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: BooleanKeyframeTrack,\n    ValueTypeName: 'bool',\n    ValueBufferType: Array,\n    DefaultInterpolation: InterpolateDiscrete,\n    InterpolantFactoryMethodLinear: undefined,\n    InterpolantFactoryMethodSmooth: undefined // Note: Actually this track could have a optimized / compressed\n    // representation of a single value and a custom interpolant that\n    // computes \"firstValue ^ isOdd( index )\".\n\n  });\n  /**\n   *\n   * A Track of keyframe values that represent color.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function ColorKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  ColorKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: ColorKeyframeTrack,\n    ValueTypeName: 'color' // ValueBufferType is inherited\n    // DefaultInterpolation is inherited\n    // Note: Very basic implementation and nothing special yet.\n    // However, this is the place for color space parameterization.\n\n  });\n  /**\n   *\n   * A Track of numeric keyframe values.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function NumberKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  NumberKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: NumberKeyframeTrack,\n    ValueTypeName: 'number' // ValueBufferType is inherited\n    // DefaultInterpolation is inherited\n\n  });\n  /**\n   * Spherical linear unit quaternion interpolant.\n   *\n   * @author tschw\n   */\n\n  function QuaternionLinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  QuaternionLinearInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: QuaternionLinearInterpolant,\n    interpolate_: function interpolate_(i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset = i1 * stride,\n          alpha = (t - t0) / (t1 - t0);\n\n      for (var end = offset + stride; offset !== end; offset += 4) {\n        Quaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n      }\n\n      return result;\n    }\n  });\n  /**\n   *\n   * A Track of quaternion keyframe values.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function QuaternionKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  QuaternionKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: QuaternionKeyframeTrack,\n    ValueTypeName: 'quaternion',\n    // ValueBufferType is inherited\n    DefaultInterpolation: InterpolateLinear,\n    InterpolantFactoryMethodLinear: function InterpolantFactoryMethodLinear(result) {\n      return new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    InterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n  });\n  /**\n   *\n   * A Track that interpolates Strings\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function StringKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  StringKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: StringKeyframeTrack,\n    ValueTypeName: 'string',\n    ValueBufferType: Array,\n    DefaultInterpolation: InterpolateDiscrete,\n    InterpolantFactoryMethodLinear: undefined,\n    InterpolantFactoryMethodSmooth: undefined\n  });\n  /**\n   *\n   * A Track of vectored keyframe values.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function VectorKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  VectorKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: VectorKeyframeTrack,\n    ValueTypeName: 'vector' // ValueBufferType is inherited\n    // DefaultInterpolation is inherited\n\n  });\n  /**\n   *\n   * Reusable set of Tracks that represent an animation.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   */\n\n  function AnimationClip(name, duration, tracks) {\n    this.name = name;\n    this.tracks = tracks;\n    this.duration = duration !== undefined ? duration : -1;\n    this.uuid = _Math.generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n    if (this.duration < 0) {\n      this.resetDuration();\n    }\n  }\n\n  function getTrackTypeForValueTypeName(typeName) {\n    switch (typeName.toLowerCase()) {\n      case 'scalar':\n      case 'double':\n      case 'float':\n      case 'number':\n      case 'integer':\n        return NumberKeyframeTrack;\n\n      case 'vector':\n      case 'vector2':\n      case 'vector3':\n      case 'vector4':\n        return VectorKeyframeTrack;\n\n      case 'color':\n        return ColorKeyframeTrack;\n\n      case 'quaternion':\n        return QuaternionKeyframeTrack;\n\n      case 'bool':\n      case 'boolean':\n        return BooleanKeyframeTrack;\n\n      case 'string':\n        return StringKeyframeTrack;\n    }\n\n    throw new Error('THREE.KeyframeTrack: Unsupported typeName: ' + typeName);\n  }\n\n  function parseKeyframeTrack(json) {\n    if (json.type === undefined) {\n      throw new Error('THREE.KeyframeTrack: track type undefined, can not parse');\n    }\n\n    var trackType = getTrackTypeForValueTypeName(json.type);\n\n    if (json.times === undefined) {\n      var times = [],\n          values = [];\n      AnimationUtils.flattenJSON(json.keys, times, values, 'value');\n      json.times = times;\n      json.values = values;\n    } // derived classes can define a static parse method\n\n\n    if (trackType.parse !== undefined) {\n      return trackType.parse(json);\n    } else {\n      // by default, we assume a constructor compatible with the base\n      return new trackType(json.name, json.times, json.values, json.interpolation);\n    }\n  }\n\n  Object.assign(AnimationClip, {\n    parse: function parse(json) {\n      var tracks = [],\n          jsonTracks = json.tracks,\n          frameTime = 1.0 / (json.fps || 1.0);\n\n      for (var i = 0, n = jsonTracks.length; i !== n; ++i) {\n        tracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));\n      }\n\n      return new AnimationClip(json.name, json.duration, tracks);\n    },\n    toJSON: function toJSON(clip) {\n      var tracks = [],\n          clipTracks = clip.tracks;\n      var json = {\n        'name': clip.name,\n        'duration': clip.duration,\n        'tracks': tracks,\n        'uuid': clip.uuid\n      };\n\n      for (var i = 0, n = clipTracks.length; i !== n; ++i) {\n        tracks.push(KeyframeTrack.toJSON(clipTracks[i]));\n      }\n\n      return json;\n    },\n    CreateFromMorphTargetSequence: function CreateFromMorphTargetSequence(name, morphTargetSequence, fps, noLoop) {\n      var numMorphTargets = morphTargetSequence.length;\n      var tracks = [];\n\n      for (var i = 0; i < numMorphTargets; i++) {\n        var times = [];\n        var values = [];\n        times.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n        values.push(0, 1, 0);\n        var order = AnimationUtils.getKeyframeOrder(times);\n        times = AnimationUtils.sortedArray(times, 1, order);\n        values = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n        // last frame as well for perfect loop.\n\n        if (!noLoop && times[0] === 0) {\n          times.push(numMorphTargets);\n          values.push(values[0]);\n        }\n\n        tracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n      }\n\n      return new AnimationClip(name, -1, tracks);\n    },\n    findByName: function findByName(objectOrClipArray, name) {\n      var clipArray = objectOrClipArray;\n\n      if (!Array.isArray(objectOrClipArray)) {\n        var o = objectOrClipArray;\n        clipArray = o.geometry && o.geometry.animations || o.animations;\n      }\n\n      for (var i = 0; i < clipArray.length; i++) {\n        if (clipArray[i].name === name) {\n          return clipArray[i];\n        }\n      }\n\n      return null;\n    },\n    CreateClipsFromMorphTargetSequences: function CreateClipsFromMorphTargetSequences(morphTargets, fps, noLoop) {\n      var animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n      // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n      var pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n      // patterns like Walk_001, Walk_002, Run_001, Run_002\n\n      for (var i = 0, il = morphTargets.length; i < il; i++) {\n        var morphTarget = morphTargets[i];\n        var parts = morphTarget.name.match(pattern);\n\n        if (parts && parts.length > 1) {\n          var name = parts[1];\n          var animationMorphTargets = animationToMorphTargets[name];\n\n          if (!animationMorphTargets) {\n            animationToMorphTargets[name] = animationMorphTargets = [];\n          }\n\n          animationMorphTargets.push(morphTarget);\n        }\n      }\n\n      var clips = [];\n\n      for (var name in animationToMorphTargets) {\n        clips.push(AnimationClip.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop));\n      }\n\n      return clips;\n    },\n    // parse the animation.hierarchy format\n    parseAnimation: function parseAnimation(animation, bones) {\n      if (!animation) {\n        console.error('THREE.AnimationClip: No animation in JSONLoader data.');\n        return null;\n      }\n\n      var addNonemptyTrack = function addNonemptyTrack(trackType, trackName, animationKeys, propertyName, destTracks) {\n        // only return track if there are actually keys.\n        if (animationKeys.length !== 0) {\n          var times = [];\n          var values = [];\n          AnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n          if (times.length !== 0) {\n            destTracks.push(new trackType(trackName, times, values));\n          }\n        }\n      };\n\n      var tracks = [];\n      var clipName = animation.name || 'default'; // automatic length determination in AnimationClip.\n\n      var duration = animation.length || -1;\n      var fps = animation.fps || 30;\n      var hierarchyTracks = animation.hierarchy || [];\n\n      for (var h = 0; h < hierarchyTracks.length; h++) {\n        var animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n        if (!animationKeys || animationKeys.length === 0) continue; // process morph targets\n\n        if (animationKeys[0].morphTargets) {\n          // figure out all morph targets used in this track\n          var morphTargetNames = {};\n\n          for (var k = 0; k < animationKeys.length; k++) {\n            if (animationKeys[k].morphTargets) {\n              for (var m = 0; m < animationKeys[k].morphTargets.length; m++) {\n                morphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n              }\n            }\n          } // create a track for each morph target with all zero\n          // morphTargetInfluences except for the keys in which\n          // the morphTarget is named.\n\n\n          for (var morphTargetName in morphTargetNames) {\n            var times = [];\n            var values = [];\n\n            for (var m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\n              var animationKey = animationKeys[k];\n              times.push(animationKey.time);\n              values.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n            }\n\n            tracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n          }\n\n          duration = morphTargetNames.length * (fps || 1.0);\n        } else {\n          // ...assume skeletal animation\n          var boneName = '.bones[' + bones[h].name + ']';\n          addNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n          addNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n          addNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n        }\n      }\n\n      if (tracks.length === 0) {\n        return null;\n      }\n\n      var clip = new AnimationClip(clipName, duration, tracks);\n      return clip;\n    }\n  });\n  Object.assign(AnimationClip.prototype, {\n    resetDuration: function resetDuration() {\n      var tracks = this.tracks,\n          duration = 0;\n\n      for (var i = 0, n = tracks.length; i !== n; ++i) {\n        var track = this.tracks[i];\n        duration = Math.max(duration, track.times[track.times.length - 1]);\n      }\n\n      this.duration = duration;\n      return this;\n    },\n    trim: function trim() {\n      for (var i = 0; i < this.tracks.length; i++) {\n        this.tracks[i].trim(0, this.duration);\n      }\n\n      return this;\n    },\n    validate: function validate() {\n      var valid = true;\n\n      for (var i = 0; i < this.tracks.length; i++) {\n        valid = valid && this.tracks[i].validate();\n      }\n\n      return valid;\n    },\n    optimize: function optimize() {\n      for (var i = 0; i < this.tracks.length; i++) {\n        this.tracks[i].optimize();\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var Cache = {\n    enabled: false,\n    files: {},\n    add: function add(key, file) {\n      if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n      this.files[key] = file;\n    },\n    get: function get(key) {\n      if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n      return this.files[key];\n    },\n    remove: function remove(key) {\n      delete this.files[key];\n    },\n    clear: function clear() {\n      this.files = {};\n    }\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function LoadingManager(onLoad, onProgress, onError) {\n    var scope = this;\n    var isLoading = false;\n    var itemsLoaded = 0;\n    var itemsTotal = 0;\n    var urlModifier = undefined; // Refer to #5689 for the reason why we don't set .onStart\n    // in the constructor\n\n    this.onStart = undefined;\n    this.onLoad = onLoad;\n    this.onProgress = onProgress;\n    this.onError = onError;\n\n    this.itemStart = function (url) {\n      itemsTotal++;\n\n      if (isLoading === false) {\n        if (scope.onStart !== undefined) {\n          scope.onStart(url, itemsLoaded, itemsTotal);\n        }\n      }\n\n      isLoading = true;\n    };\n\n    this.itemEnd = function (url) {\n      itemsLoaded++;\n\n      if (scope.onProgress !== undefined) {\n        scope.onProgress(url, itemsLoaded, itemsTotal);\n      }\n\n      if (itemsLoaded === itemsTotal) {\n        isLoading = false;\n\n        if (scope.onLoad !== undefined) {\n          scope.onLoad();\n        }\n      }\n    };\n\n    this.itemError = function (url) {\n      if (scope.onError !== undefined) {\n        scope.onError(url);\n      }\n    };\n\n    this.resolveURL = function (url) {\n      if (urlModifier) {\n        return urlModifier(url);\n      }\n\n      return url;\n    };\n\n    this.setURLModifier = function (transform) {\n      urlModifier = transform;\n      return this;\n    };\n  }\n\n  var DefaultLoadingManager = new LoadingManager();\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var loading = {};\n\n  function FileLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(FileLoader.prototype, {\n    load: function load(url, onLoad, onProgress, onError) {\n      if (url === undefined) url = '';\n      if (this.path !== undefined) url = this.path + url;\n      url = this.manager.resolveURL(url);\n      var scope = this;\n      var cached = Cache.get(url);\n\n      if (cached !== undefined) {\n        scope.manager.itemStart(url);\n        setTimeout(function () {\n          if (onLoad) onLoad(cached);\n          scope.manager.itemEnd(url);\n        }, 0);\n        return cached;\n      } // Check if request is duplicate\n\n\n      if (loading[url] !== undefined) {\n        loading[url].push({\n          onLoad: onLoad,\n          onProgress: onProgress,\n          onError: onError\n        });\n        return;\n      } // Check for data: URI\n\n\n      var dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n      var dataUriRegexResult = url.match(dataUriRegex); // Safari can not handle Data URIs through XMLHttpRequest so process manually\n\n      if (dataUriRegexResult) {\n        var mimeType = dataUriRegexResult[1];\n        var isBase64 = !!dataUriRegexResult[2];\n        var data = dataUriRegexResult[3];\n        data = decodeURIComponent(data);\n        if (isBase64) data = atob(data);\n\n        try {\n          var response;\n          var responseType = (this.responseType || '').toLowerCase();\n\n          switch (responseType) {\n            case 'arraybuffer':\n            case 'blob':\n              var view = new Uint8Array(data.length);\n\n              for (var i = 0; i < data.length; i++) {\n                view[i] = data.charCodeAt(i);\n              }\n\n              if (responseType === 'blob') {\n                response = new Blob([view.buffer], {\n                  type: mimeType\n                });\n              } else {\n                response = view.buffer;\n              }\n\n              break;\n\n            case 'document':\n              var parser = new DOMParser();\n              response = parser.parseFromString(data, mimeType);\n              break;\n\n            case 'json':\n              response = JSON.parse(data);\n              break;\n\n            default:\n              // 'text' or other\n              response = data;\n              break;\n          } // Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\n\n          setTimeout(function () {\n            if (onLoad) onLoad(response);\n            scope.manager.itemEnd(url);\n          }, 0);\n        } catch (error) {\n          // Wait for next browser tick like standard XMLHttpRequest event dispatching does\n          setTimeout(function () {\n            if (onError) onError(error);\n            scope.manager.itemError(url);\n            scope.manager.itemEnd(url);\n          }, 0);\n        }\n      } else {\n        // Initialise array for duplicate requests\n        loading[url] = [];\n        loading[url].push({\n          onLoad: onLoad,\n          onProgress: onProgress,\n          onError: onError\n        });\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.addEventListener('load', function (event) {\n          var response = this.response;\n          Cache.add(url, response);\n          var callbacks = loading[url];\n          delete loading[url];\n\n          if (this.status === 200 || this.status === 0) {\n            // Some browsers return HTTP Status 0 when using non-http protocol\n            // e.g. 'file://' or 'data://'. Handle as success.\n            if (this.status === 0) console.warn('THREE.FileLoader: HTTP Status 0 received.');\n\n            for (var i = 0, il = callbacks.length; i < il; i++) {\n              var callback = callbacks[i];\n              if (callback.onLoad) callback.onLoad(response);\n            }\n\n            scope.manager.itemEnd(url);\n          } else {\n            for (var i = 0, il = callbacks.length; i < il; i++) {\n              var callback = callbacks[i];\n              if (callback.onError) callback.onError(event);\n            }\n\n            scope.manager.itemError(url);\n            scope.manager.itemEnd(url);\n          }\n        }, false);\n        request.addEventListener('progress', function (event) {\n          var callbacks = loading[url];\n\n          for (var i = 0, il = callbacks.length; i < il; i++) {\n            var callback = callbacks[i];\n            if (callback.onProgress) callback.onProgress(event);\n          }\n        }, false);\n        request.addEventListener('error', function (event) {\n          var callbacks = loading[url];\n          delete loading[url];\n\n          for (var i = 0, il = callbacks.length; i < il; i++) {\n            var callback = callbacks[i];\n            if (callback.onError) callback.onError(event);\n          }\n\n          scope.manager.itemError(url);\n          scope.manager.itemEnd(url);\n        }, false);\n        request.addEventListener('abort', function (event) {\n          var callbacks = loading[url];\n          delete loading[url];\n\n          for (var i = 0, il = callbacks.length; i < il; i++) {\n            var callback = callbacks[i];\n            if (callback.onError) callback.onError(event);\n          }\n\n          scope.manager.itemError(url);\n          scope.manager.itemEnd(url);\n        }, false);\n        if (this.responseType !== undefined) request.responseType = this.responseType;\n        if (this.withCredentials !== undefined) request.withCredentials = this.withCredentials;\n        if (request.overrideMimeType) request.overrideMimeType(this.mimeType !== undefined ? this.mimeType : 'text/plain');\n\n        for (var header in this.requestHeader) {\n          request.setRequestHeader(header, this.requestHeader[header]);\n        }\n\n        request.send(null);\n      }\n\n      scope.manager.itemStart(url);\n      return request;\n    },\n    setPath: function setPath(value) {\n      this.path = value;\n      return this;\n    },\n    setResponseType: function setResponseType(value) {\n      this.responseType = value;\n      return this;\n    },\n    setWithCredentials: function setWithCredentials(value) {\n      this.withCredentials = value;\n      return this;\n    },\n    setMimeType: function setMimeType(value) {\n      this.mimeType = value;\n      return this;\n    },\n    setRequestHeader: function setRequestHeader(value) {\n      this.requestHeader = value;\n      return this;\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io/\n   */\n\n  function AnimationLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(AnimationLoader.prototype, {\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.load(url, function (text) {\n        onLoad(scope.parse(JSON.parse(text)));\n      }, onProgress, onError);\n    },\n    parse: function parse(json, onLoad) {\n      var animations = [];\n\n      for (var i = 0; i < json.length; i++) {\n        var clip = AnimationClip.parse(json[i]);\n        animations.push(clip);\n      }\n\n      onLoad(animations);\n    },\n    setPath: function setPath(value) {\n      this.path = value;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   *\n   * Abstract Base class to block based textures loader (dds, pvr, ...)\n   */\n\n  function CompressedTextureLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager; // override in sub classes\n\n    this._parser = null;\n  }\n\n  Object.assign(CompressedTextureLoader.prototype, {\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var images = [];\n      var texture = new CompressedTexture();\n      texture.image = images;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setResponseType('arraybuffer');\n\n      function loadTexture(i) {\n        loader.load(url[i], function (buffer) {\n          var texDatas = scope._parser(buffer, true);\n\n          images[i] = {\n            width: texDatas.width,\n            height: texDatas.height,\n            format: texDatas.format,\n            mipmaps: texDatas.mipmaps\n          };\n          loaded += 1;\n\n          if (loaded === 6) {\n            if (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\n            texture.format = texDatas.format;\n            texture.needsUpdate = true;\n            if (onLoad) onLoad(texture);\n          }\n        }, onProgress, onError);\n      }\n\n      if (Array.isArray(url)) {\n        var loaded = 0;\n\n        for (var i = 0, il = url.length; i < il; ++i) {\n          loadTexture(i);\n        }\n      } else {\n        // compressed cubemap texture stored in a single DDS file\n        loader.load(url, function (buffer) {\n          var texDatas = scope._parser(buffer, true);\n\n          if (texDatas.isCubemap) {\n            var faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n            for (var f = 0; f < faces; f++) {\n              images[f] = {\n                mipmaps: []\n              };\n\n              for (var i = 0; i < texDatas.mipmapCount; i++) {\n                images[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n                images[f].format = texDatas.format;\n                images[f].width = texDatas.width;\n                images[f].height = texDatas.height;\n              }\n            }\n          } else {\n            texture.image.width = texDatas.width;\n            texture.image.height = texDatas.height;\n            texture.mipmaps = texDatas.mipmaps;\n          }\n\n          if (texDatas.mipmapCount === 1) {\n            texture.minFilter = LinearFilter;\n          }\n\n          texture.format = texDatas.format;\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }, onProgress, onError);\n      }\n\n      return texture;\n    },\n    setPath: function setPath(value) {\n      this.path = value;\n      return this;\n    }\n  });\n  /**\n   * @author Nikos M. / https://github.com/foo123/\n   *\n   * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n   */\n\n  function DataTextureLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager; // override in sub classes\n\n    this._parser = null;\n  }\n\n  Object.assign(DataTextureLoader.prototype, {\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var texture = new DataTexture();\n      var loader = new FileLoader(this.manager);\n      loader.setResponseType('arraybuffer');\n      loader.setPath(this.path);\n      loader.load(url, function (buffer) {\n        var texData = scope._parser(buffer);\n\n        if (!texData) return;\n\n        if (texData.image !== undefined) {\n          texture.image = texData.image;\n        } else if (texData.data !== undefined) {\n          texture.image.width = texData.width;\n          texture.image.height = texData.height;\n          texture.image.data = texData.data;\n        }\n\n        texture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n        texture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n        texture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n        texture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearMipMapLinearFilter;\n        texture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n        if (texData.format !== undefined) {\n          texture.format = texData.format;\n        }\n\n        if (texData.type !== undefined) {\n          texture.type = texData.type;\n        }\n\n        if (texData.mipmaps !== undefined) {\n          texture.mipmaps = texData.mipmaps;\n        }\n\n        if (texData.mipmapCount === 1) {\n          texture.minFilter = LinearFilter;\n        }\n\n        texture.needsUpdate = true;\n        if (onLoad) onLoad(texture, texData);\n      }, onProgress, onError);\n      return texture;\n    },\n    setPath: function setPath(value) {\n      this.path = value;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function ImageLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(ImageLoader.prototype, {\n    crossOrigin: 'anonymous',\n    load: function load(url, onLoad, onProgress, onError) {\n      if (url === undefined) url = '';\n      if (this.path !== undefined) url = this.path + url;\n      url = this.manager.resolveURL(url);\n      var scope = this;\n      var cached = Cache.get(url);\n\n      if (cached !== undefined) {\n        scope.manager.itemStart(url);\n        setTimeout(function () {\n          if (onLoad) onLoad(cached);\n          scope.manager.itemEnd(url);\n        }, 0);\n        return cached;\n      }\n\n      var image = document.createElementNS('http://www.w3.org/1999/xhtml', 'img');\n\n      function onImageLoad() {\n        image.removeEventListener('load', onImageLoad, false);\n        image.removeEventListener('error', onImageError, false);\n        Cache.add(url, this);\n        if (onLoad) onLoad(this);\n        scope.manager.itemEnd(url);\n      }\n\n      function onImageError(event) {\n        image.removeEventListener('load', onImageLoad, false);\n        image.removeEventListener('error', onImageError, false);\n        if (onError) onError(event);\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      }\n\n      image.addEventListener('load', onImageLoad, false);\n      image.addEventListener('error', onImageError, false);\n\n      if (url.substr(0, 5) !== 'data:') {\n        if (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n      }\n\n      scope.manager.itemStart(url);\n      image.src = url;\n      return image;\n    },\n    setCrossOrigin: function setCrossOrigin(value) {\n      this.crossOrigin = value;\n      return this;\n    },\n    setPath: function setPath(value) {\n      this.path = value;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function CubeTextureLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(CubeTextureLoader.prototype, {\n    crossOrigin: 'anonymous',\n    load: function load(urls, onLoad, onProgress, onError) {\n      var texture = new CubeTexture();\n      var loader = new ImageLoader(this.manager);\n      loader.setCrossOrigin(this.crossOrigin);\n      loader.setPath(this.path);\n      var loaded = 0;\n\n      function loadTexture(i) {\n        loader.load(urls[i], function (image) {\n          texture.images[i] = image;\n          loaded++;\n\n          if (loaded === 6) {\n            texture.needsUpdate = true;\n            if (onLoad) onLoad(texture);\n          }\n        }, undefined, onError);\n      }\n\n      for (var i = 0; i < urls.length; ++i) {\n        loadTexture(i);\n      }\n\n      return texture;\n    },\n    setCrossOrigin: function setCrossOrigin(value) {\n      this.crossOrigin = value;\n      return this;\n    },\n    setPath: function setPath(value) {\n      this.path = value;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function TextureLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(TextureLoader.prototype, {\n    crossOrigin: 'anonymous',\n    load: function load(url, onLoad, onProgress, onError) {\n      var texture = new Texture();\n      var loader = new ImageLoader(this.manager);\n      loader.setCrossOrigin(this.crossOrigin);\n      loader.setPath(this.path);\n      loader.load(url, function (image) {\n        texture.image = image; // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\n        var isJPEG = url.search(/\\.jpe?g($|\\?)/i) > 0 || url.search(/^data\\:image\\/jpeg/) === 0;\n        texture.format = isJPEG ? RGBFormat : RGBAFormat;\n        texture.needsUpdate = true;\n\n        if (onLoad !== undefined) {\n          onLoad(texture);\n        }\n      }, onProgress, onError);\n      return texture;\n    },\n    setCrossOrigin: function setCrossOrigin(value) {\n      this.crossOrigin = value;\n      return this;\n    },\n    setPath: function setPath(value) {\n      this.path = value;\n      return this;\n    }\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * Extensible curve object\n   *\n   * Some common of curve methods:\n   * .getPoint( t, optionalTarget ), .getTangent( t )\n   * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n   * .getPoints(), .getSpacedPoints()\n   * .getLength()\n   * .updateArcLengths()\n   *\n   * This following curves inherit from THREE.Curve:\n   *\n   * -- 2D curves --\n   * THREE.ArcCurve\n   * THREE.CubicBezierCurve\n   * THREE.EllipseCurve\n   * THREE.LineCurve\n   * THREE.QuadraticBezierCurve\n   * THREE.SplineCurve\n   *\n   * -- 3D curves --\n   * THREE.CatmullRomCurve3\n   * THREE.CubicBezierCurve3\n   * THREE.LineCurve3\n   * THREE.QuadraticBezierCurve3\n   *\n   * A series of curves can be represented as a THREE.CurvePath.\n   *\n   **/\n\n  /**************************************************************\n   *\tAbstract Curve base class\n   **************************************************************/\n\n  function Curve() {\n    this.type = 'Curve';\n    this.arcLengthDivisions = 200;\n  }\n\n  Object.assign(Curve.prototype, {\n    // Virtual base class method to overwrite and implement in subclasses\n    //\t- t [0 .. 1]\n    getPoint: function getPoint()\n    /* t, optionalTarget */\n    {\n      console.warn('THREE.Curve: .getPoint() not implemented.');\n      return null;\n    },\n    // Get point at relative position in curve according to arc length\n    // - u [0 .. 1]\n    getPointAt: function getPointAt(u, optionalTarget) {\n      var t = this.getUtoTmapping(u);\n      return this.getPoint(t, optionalTarget);\n    },\n    // Get sequence of points using getPoint( t )\n    getPoints: function getPoints(divisions) {\n      if (divisions === undefined) divisions = 5;\n      var points = [];\n\n      for (var d = 0; d <= divisions; d++) {\n        points.push(this.getPoint(d / divisions));\n      }\n\n      return points;\n    },\n    // Get sequence of points using getPointAt( u )\n    getSpacedPoints: function getSpacedPoints(divisions) {\n      if (divisions === undefined) divisions = 5;\n      var points = [];\n\n      for (var d = 0; d <= divisions; d++) {\n        points.push(this.getPointAt(d / divisions));\n      }\n\n      return points;\n    },\n    // Get total curve arc length\n    getLength: function getLength() {\n      var lengths = this.getLengths();\n      return lengths[lengths.length - 1];\n    },\n    // Get list of cumulative segment lengths\n    getLengths: function getLengths(divisions) {\n      if (divisions === undefined) divisions = this.arcLengthDivisions;\n\n      if (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n        return this.cacheArcLengths;\n      }\n\n      this.needsUpdate = false;\n      var cache = [];\n      var current,\n          last = this.getPoint(0);\n      var p,\n          sum = 0;\n      cache.push(0);\n\n      for (p = 1; p <= divisions; p++) {\n        current = this.getPoint(p / divisions);\n        sum += current.distanceTo(last);\n        cache.push(sum);\n        last = current;\n      }\n\n      this.cacheArcLengths = cache;\n      return cache; // { sums: cache, sum: sum }; Sum is in the last element.\n    },\n    updateArcLengths: function updateArcLengths() {\n      this.needsUpdate = true;\n      this.getLengths();\n    },\n    // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n    getUtoTmapping: function getUtoTmapping(u, distance) {\n      var arcLengths = this.getLengths();\n      var i = 0,\n          il = arcLengths.length;\n      var targetArcLength; // The targeted u distance value to get\n\n      if (distance) {\n        targetArcLength = distance;\n      } else {\n        targetArcLength = u * arcLengths[il - 1];\n      } // binary search for the index with largest value smaller than target u distance\n\n\n      var low = 0,\n          high = il - 1,\n          comparison;\n\n      while (low <= high) {\n        i = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n        comparison = arcLengths[i] - targetArcLength;\n\n        if (comparison < 0) {\n          low = i + 1;\n        } else if (comparison > 0) {\n          high = i - 1;\n        } else {\n          high = i;\n          break; // DONE\n        }\n      }\n\n      i = high;\n\n      if (arcLengths[i] === targetArcLength) {\n        return i / (il - 1);\n      } // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n      var lengthBefore = arcLengths[i];\n      var lengthAfter = arcLengths[i + 1];\n      var segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n      var segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n      var t = (i + segmentFraction) / (il - 1);\n      return t;\n    },\n    // Returns a unit vector tangent at t\n    // In case any sub curve does not implement its tangent derivation,\n    // 2 points a small delta apart will be used to find its gradient\n    // which seems to give a reasonable approximation\n    getTangent: function getTangent(t) {\n      var delta = 0.0001;\n      var t1 = t - delta;\n      var t2 = t + delta; // Capping in case of danger\n\n      if (t1 < 0) t1 = 0;\n      if (t2 > 1) t2 = 1;\n      var pt1 = this.getPoint(t1);\n      var pt2 = this.getPoint(t2);\n      var vec = pt2.clone().sub(pt1);\n      return vec.normalize();\n    },\n    getTangentAt: function getTangentAt(u) {\n      var t = this.getUtoTmapping(u);\n      return this.getTangent(t);\n    },\n    computeFrenetFrames: function computeFrenetFrames(segments, closed) {\n      // see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n      var normal = new Vector3();\n      var tangents = [];\n      var normals = [];\n      var binormals = [];\n      var vec = new Vector3();\n      var mat = new Matrix4();\n      var i, u, theta; // compute the tangent vectors for each segment on the curve\n\n      for (i = 0; i <= segments; i++) {\n        u = i / segments;\n        tangents[i] = this.getTangentAt(u);\n        tangents[i].normalize();\n      } // select an initial normal vector perpendicular to the first tangent vector,\n      // and in the direction of the minimum tangent xyz component\n\n\n      normals[0] = new Vector3();\n      binormals[0] = new Vector3();\n      var min = Number.MAX_VALUE;\n      var tx = Math.abs(tangents[0].x);\n      var ty = Math.abs(tangents[0].y);\n      var tz = Math.abs(tangents[0].z);\n\n      if (tx <= min) {\n        min = tx;\n        normal.set(1, 0, 0);\n      }\n\n      if (ty <= min) {\n        min = ty;\n        normal.set(0, 1, 0);\n      }\n\n      if (tz <= min) {\n        normal.set(0, 0, 1);\n      }\n\n      vec.crossVectors(tangents[0], normal).normalize();\n      normals[0].crossVectors(tangents[0], vec);\n      binormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n      for (i = 1; i <= segments; i++) {\n        normals[i] = normals[i - 1].clone();\n        binormals[i] = binormals[i - 1].clone();\n        vec.crossVectors(tangents[i - 1], tangents[i]);\n\n        if (vec.length() > Number.EPSILON) {\n          vec.normalize();\n          theta = Math.acos(_Math.clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n          normals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n        }\n\n        binormals[i].crossVectors(tangents[i], normals[i]);\n      } // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n      if (closed === true) {\n        theta = Math.acos(_Math.clamp(normals[0].dot(normals[segments]), -1, 1));\n        theta /= segments;\n\n        if (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\n          theta = -theta;\n        }\n\n        for (i = 1; i <= segments; i++) {\n          // twist a little...\n          normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n          binormals[i].crossVectors(tangents[i], normals[i]);\n        }\n      }\n\n      return {\n        tangents: tangents,\n        normals: normals,\n        binormals: binormals\n      };\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    copy: function copy(source) {\n      this.arcLengthDivisions = source.arcLengthDivisions;\n      return this;\n    },\n    toJSON: function toJSON() {\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'Curve',\n          generator: 'Curve.toJSON'\n        }\n      };\n      data.arcLengthDivisions = this.arcLengthDivisions;\n      data.type = this.type;\n      return data;\n    },\n    fromJSON: function fromJSON(json) {\n      this.arcLengthDivisions = json.arcLengthDivisions;\n      return this;\n    }\n  });\n\n  function EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n    Curve.call(this);\n    this.type = 'EllipseCurve';\n    this.aX = aX || 0;\n    this.aY = aY || 0;\n    this.xRadius = xRadius || 1;\n    this.yRadius = yRadius || 1;\n    this.aStartAngle = aStartAngle || 0;\n    this.aEndAngle = aEndAngle || 2 * Math.PI;\n    this.aClockwise = aClockwise || false;\n    this.aRotation = aRotation || 0;\n  }\n\n  EllipseCurve.prototype = Object.create(Curve.prototype);\n  EllipseCurve.prototype.constructor = EllipseCurve;\n  EllipseCurve.prototype.isEllipseCurve = true;\n\n  EllipseCurve.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector2();\n    var twoPi = Math.PI * 2;\n    var deltaAngle = this.aEndAngle - this.aStartAngle;\n    var samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\n\n    while (deltaAngle < 0) {\n      deltaAngle += twoPi;\n    }\n\n    while (deltaAngle > twoPi) {\n      deltaAngle -= twoPi;\n    }\n\n    if (deltaAngle < Number.EPSILON) {\n      if (samePoints) {\n        deltaAngle = 0;\n      } else {\n        deltaAngle = twoPi;\n      }\n    }\n\n    if (this.aClockwise === true && !samePoints) {\n      if (deltaAngle === twoPi) {\n        deltaAngle = -twoPi;\n      } else {\n        deltaAngle = deltaAngle - twoPi;\n      }\n    }\n\n    var angle = this.aStartAngle + t * deltaAngle;\n    var x = this.aX + this.xRadius * Math.cos(angle);\n    var y = this.aY + this.yRadius * Math.sin(angle);\n\n    if (this.aRotation !== 0) {\n      var cos = Math.cos(this.aRotation);\n      var sin = Math.sin(this.aRotation);\n      var tx = x - this.aX;\n      var ty = y - this.aY; // Rotate the point about the center of the ellipse.\n\n      x = tx * cos - ty * sin + this.aX;\n      y = tx * sin + ty * cos + this.aY;\n    }\n\n    return point.set(x, y);\n  };\n\n  EllipseCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.aX = source.aX;\n    this.aY = source.aY;\n    this.xRadius = source.xRadius;\n    this.yRadius = source.yRadius;\n    this.aStartAngle = source.aStartAngle;\n    this.aEndAngle = source.aEndAngle;\n    this.aClockwise = source.aClockwise;\n    this.aRotation = source.aRotation;\n    return this;\n  };\n\n  EllipseCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.aX = this.aX;\n    data.aY = this.aY;\n    data.xRadius = this.xRadius;\n    data.yRadius = this.yRadius;\n    data.aStartAngle = this.aStartAngle;\n    data.aEndAngle = this.aEndAngle;\n    data.aClockwise = this.aClockwise;\n    data.aRotation = this.aRotation;\n    return data;\n  };\n\n  EllipseCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.aX = json.aX;\n    this.aY = json.aY;\n    this.xRadius = json.xRadius;\n    this.yRadius = json.yRadius;\n    this.aStartAngle = json.aStartAngle;\n    this.aEndAngle = json.aEndAngle;\n    this.aClockwise = json.aClockwise;\n    this.aRotation = json.aRotation;\n    return this;\n  };\n\n  function ArcCurve(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    EllipseCurve.call(this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n    this.type = 'ArcCurve';\n  }\n\n  ArcCurve.prototype = Object.create(EllipseCurve.prototype);\n  ArcCurve.prototype.constructor = ArcCurve;\n  ArcCurve.prototype.isArcCurve = true;\n  /**\n   * @author zz85 https://github.com/zz85\n   *\n   * Centripetal CatmullRom Curve - which is useful for avoiding\n   * cusps and self-intersections in non-uniform catmull rom curves.\n   * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n   *\n   * curve.type accepts centripetal(default), chordal and catmullrom\n   * curve.tension is used for catmullrom which defaults to 0.5\n   */\n\n  /*\n  Based on an optimized c++ solution in\n   - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n   - http://ideone.com/NoEbVM\n  \n  This CubicPoly class could be used for reusing some variables and calculations,\n  but for three.js curve use, it could be possible inlined and flatten into a single function call\n  which can be placed in CurveUtils.\n  */\n\n  function CubicPoly() {\n    var c0 = 0,\n        c1 = 0,\n        c2 = 0,\n        c3 = 0;\n    /*\n     * Compute coefficients for a cubic polynomial\n     *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n     * such that\n     *   p(0) = x0, p(1) = x1\n     *  and\n     *   p'(0) = t0, p'(1) = t1.\n     */\n\n    function init(x0, x1, t0, t1) {\n      c0 = x0;\n      c1 = t0;\n      c2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n      c3 = 2 * x0 - 2 * x1 + t0 + t1;\n    }\n\n    return {\n      initCatmullRom: function initCatmullRom(x0, x1, x2, x3, tension) {\n        init(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n      },\n      initNonuniformCatmullRom: function initNonuniformCatmullRom(x0, x1, x2, x3, dt0, dt1, dt2) {\n        // compute tangents when parameterized in [t1,t2]\n        var t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n        var t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n        t1 *= dt1;\n        t2 *= dt1;\n        init(x1, x2, t1, t2);\n      },\n      calc: function calc(t) {\n        var t2 = t * t;\n        var t3 = t2 * t;\n        return c0 + c1 * t + c2 * t2 + c3 * t3;\n      }\n    };\n  } //\n\n\n  var tmp = new Vector3();\n  var px = new CubicPoly(),\n      py = new CubicPoly(),\n      pz = new CubicPoly();\n\n  function CatmullRomCurve3(points, closed, curveType, tension) {\n    Curve.call(this);\n    this.type = 'CatmullRomCurve3';\n    this.points = points || [];\n    this.closed = closed || false;\n    this.curveType = curveType || 'centripetal';\n    this.tension = tension || 0.5;\n  }\n\n  CatmullRomCurve3.prototype = Object.create(Curve.prototype);\n  CatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n  CatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n  CatmullRomCurve3.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector3();\n    var points = this.points;\n    var l = points.length;\n    var p = (l - (this.closed ? 0 : 1)) * t;\n    var intPoint = Math.floor(p);\n    var weight = p - intPoint;\n\n    if (this.closed) {\n      intPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\n    } else if (weight === 0 && intPoint === l - 1) {\n      intPoint = l - 2;\n      weight = 1;\n    }\n\n    var p0, p1, p2, p3; // 4 points\n\n    if (this.closed || intPoint > 0) {\n      p0 = points[(intPoint - 1) % l];\n    } else {\n      // extrapolate first point\n      tmp.subVectors(points[0], points[1]).add(points[0]);\n      p0 = tmp;\n    }\n\n    p1 = points[intPoint % l];\n    p2 = points[(intPoint + 1) % l];\n\n    if (this.closed || intPoint + 2 < l) {\n      p3 = points[(intPoint + 2) % l];\n    } else {\n      // extrapolate last point\n      tmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n      p3 = tmp;\n    }\n\n    if (this.curveType === 'centripetal' || this.curveType === 'chordal') {\n      // init Centripetal / Chordal Catmull-Rom\n      var pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n      var dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n      var dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n      var dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n      if (dt1 < 1e-4) dt1 = 1.0;\n      if (dt0 < 1e-4) dt0 = dt1;\n      if (dt2 < 1e-4) dt2 = dt1;\n      px.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n      py.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n      pz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n    } else if (this.curveType === 'catmullrom') {\n      px.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\n      py.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\n      pz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\n    }\n\n    point.set(px.calc(weight), py.calc(weight), pz.calc(weight));\n    return point;\n  };\n\n  CatmullRomCurve3.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.points = [];\n\n    for (var i = 0, l = source.points.length; i < l; i++) {\n      var point = source.points[i];\n      this.points.push(point.clone());\n    }\n\n    this.closed = source.closed;\n    this.curveType = source.curveType;\n    this.tension = source.tension;\n    return this;\n  };\n\n  CatmullRomCurve3.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.points = [];\n\n    for (var i = 0, l = this.points.length; i < l; i++) {\n      var point = this.points[i];\n      data.points.push(point.toArray());\n    }\n\n    data.closed = this.closed;\n    data.curveType = this.curveType;\n    data.tension = this.tension;\n    return data;\n  };\n\n  CatmullRomCurve3.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.points = [];\n\n    for (var i = 0, l = json.points.length; i < l; i++) {\n      var point = json.points[i];\n      this.points.push(new Vector3().fromArray(point));\n    }\n\n    this.closed = json.closed;\n    this.curveType = json.curveType;\n    this.tension = json.tension;\n    return this;\n  };\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   *\n   * Bezier Curves formulas obtained from\n   * http://en.wikipedia.org/wiki/Bézier_curve\n   */\n\n\n  function CatmullRom(t, p0, p1, p2, p3) {\n    var v0 = (p2 - p0) * 0.5;\n    var v1 = (p3 - p1) * 0.5;\n    var t2 = t * t;\n    var t3 = t * t2;\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n  } //\n\n\n  function QuadraticBezierP0(t, p) {\n    var k = 1 - t;\n    return k * k * p;\n  }\n\n  function QuadraticBezierP1(t, p) {\n    return 2 * (1 - t) * t * p;\n  }\n\n  function QuadraticBezierP2(t, p) {\n    return t * t * p;\n  }\n\n  function QuadraticBezier(t, p0, p1, p2) {\n    return QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\n  } //\n\n\n  function CubicBezierP0(t, p) {\n    var k = 1 - t;\n    return k * k * k * p;\n  }\n\n  function CubicBezierP1(t, p) {\n    var k = 1 - t;\n    return 3 * k * k * t * p;\n  }\n\n  function CubicBezierP2(t, p) {\n    return 3 * (1 - t) * t * t * p;\n  }\n\n  function CubicBezierP3(t, p) {\n    return t * t * t * p;\n  }\n\n  function CubicBezier(t, p0, p1, p2, p3) {\n    return CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n  }\n\n  function CubicBezierCurve(v0, v1, v2, v3) {\n    Curve.call(this);\n    this.type = 'CubicBezierCurve';\n    this.v0 = v0 || new Vector2();\n    this.v1 = v1 || new Vector2();\n    this.v2 = v2 || new Vector2();\n    this.v3 = v3 || new Vector2();\n  }\n\n  CubicBezierCurve.prototype = Object.create(Curve.prototype);\n  CubicBezierCurve.prototype.constructor = CubicBezierCurve;\n  CubicBezierCurve.prototype.isCubicBezierCurve = true;\n\n  CubicBezierCurve.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector2();\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2,\n        v3 = this.v3;\n    point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\n    return point;\n  };\n\n  CubicBezierCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    this.v3.copy(source.v3);\n    return this;\n  };\n\n  CubicBezierCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    data.v3 = this.v3.toArray();\n    return data;\n  };\n\n  CubicBezierCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    this.v3.fromArray(json.v3);\n    return this;\n  };\n\n  function CubicBezierCurve3(v0, v1, v2, v3) {\n    Curve.call(this);\n    this.type = 'CubicBezierCurve3';\n    this.v0 = v0 || new Vector3();\n    this.v1 = v1 || new Vector3();\n    this.v2 = v2 || new Vector3();\n    this.v3 = v3 || new Vector3();\n  }\n\n  CubicBezierCurve3.prototype = Object.create(Curve.prototype);\n  CubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n  CubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\n  CubicBezierCurve3.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector3();\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2,\n        v3 = this.v3;\n    point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\n    return point;\n  };\n\n  CubicBezierCurve3.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    this.v3.copy(source.v3);\n    return this;\n  };\n\n  CubicBezierCurve3.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    data.v3 = this.v3.toArray();\n    return data;\n  };\n\n  CubicBezierCurve3.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    this.v3.fromArray(json.v3);\n    return this;\n  };\n\n  function LineCurve(v1, v2) {\n    Curve.call(this);\n    this.type = 'LineCurve';\n    this.v1 = v1 || new Vector2();\n    this.v2 = v2 || new Vector2();\n  }\n\n  LineCurve.prototype = Object.create(Curve.prototype);\n  LineCurve.prototype.constructor = LineCurve;\n  LineCurve.prototype.isLineCurve = true;\n\n  LineCurve.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector2();\n\n    if (t === 1) {\n      point.copy(this.v2);\n    } else {\n      point.copy(this.v2).sub(this.v1);\n      point.multiplyScalar(t).add(this.v1);\n    }\n\n    return point;\n  }; // Line curve is linear, so we can overwrite default getPointAt\n\n\n  LineCurve.prototype.getPointAt = function (u, optionalTarget) {\n    return this.getPoint(u, optionalTarget);\n  };\n\n  LineCurve.prototype.getTangent = function ()\n  /* t */\n  {\n    var tangent = this.v2.clone().sub(this.v1);\n    return tangent.normalize();\n  };\n\n  LineCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  };\n\n  LineCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  };\n\n  LineCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  };\n\n  function LineCurve3(v1, v2) {\n    Curve.call(this);\n    this.type = 'LineCurve3';\n    this.v1 = v1 || new Vector3();\n    this.v2 = v2 || new Vector3();\n  }\n\n  LineCurve3.prototype = Object.create(Curve.prototype);\n  LineCurve3.prototype.constructor = LineCurve3;\n  LineCurve3.prototype.isLineCurve3 = true;\n\n  LineCurve3.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector3();\n\n    if (t === 1) {\n      point.copy(this.v2);\n    } else {\n      point.copy(this.v2).sub(this.v1);\n      point.multiplyScalar(t).add(this.v1);\n    }\n\n    return point;\n  }; // Line curve is linear, so we can overwrite default getPointAt\n\n\n  LineCurve3.prototype.getPointAt = function (u, optionalTarget) {\n    return this.getPoint(u, optionalTarget);\n  };\n\n  LineCurve3.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  };\n\n  LineCurve3.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  };\n\n  LineCurve3.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  };\n\n  function QuadraticBezierCurve(v0, v1, v2) {\n    Curve.call(this);\n    this.type = 'QuadraticBezierCurve';\n    this.v0 = v0 || new Vector2();\n    this.v1 = v1 || new Vector2();\n    this.v2 = v2 || new Vector2();\n  }\n\n  QuadraticBezierCurve.prototype = Object.create(Curve.prototype);\n  QuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n  QuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\n  QuadraticBezierCurve.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector2();\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2;\n    point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n    return point;\n  };\n\n  QuadraticBezierCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  };\n\n  QuadraticBezierCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  };\n\n  QuadraticBezierCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  };\n\n  function QuadraticBezierCurve3(v0, v1, v2) {\n    Curve.call(this);\n    this.type = 'QuadraticBezierCurve3';\n    this.v0 = v0 || new Vector3();\n    this.v1 = v1 || new Vector3();\n    this.v2 = v2 || new Vector3();\n  }\n\n  QuadraticBezierCurve3.prototype = Object.create(Curve.prototype);\n  QuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n  QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\n  QuadraticBezierCurve3.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector3();\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2;\n    point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\n    return point;\n  };\n\n  QuadraticBezierCurve3.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  };\n\n  QuadraticBezierCurve3.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  };\n\n  QuadraticBezierCurve3.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  };\n\n  function SplineCurve(points\n  /* array of Vector2 */\n  ) {\n    Curve.call(this);\n    this.type = 'SplineCurve';\n    this.points = points || [];\n  }\n\n  SplineCurve.prototype = Object.create(Curve.prototype);\n  SplineCurve.prototype.constructor = SplineCurve;\n  SplineCurve.prototype.isSplineCurve = true;\n\n  SplineCurve.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector2();\n    var points = this.points;\n    var p = (points.length - 1) * t;\n    var intPoint = Math.floor(p);\n    var weight = p - intPoint;\n    var p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n    var p1 = points[intPoint];\n    var p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n    var p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n    point.set(CatmullRom(weight, p0.x, p1.x, p2.x, p3.x), CatmullRom(weight, p0.y, p1.y, p2.y, p3.y));\n    return point;\n  };\n\n  SplineCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.points = [];\n\n    for (var i = 0, l = source.points.length; i < l; i++) {\n      var point = source.points[i];\n      this.points.push(point.clone());\n    }\n\n    return this;\n  };\n\n  SplineCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.points = [];\n\n    for (var i = 0, l = this.points.length; i < l; i++) {\n      var point = this.points[i];\n      data.points.push(point.toArray());\n    }\n\n    return data;\n  };\n\n  SplineCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.points = [];\n\n    for (var i = 0, l = json.points.length; i < l; i++) {\n      var point = json.points[i];\n      this.points.push(new Vector2().fromArray(point));\n    }\n\n    return this;\n  };\n\n  var Curves =\n  /*#__PURE__*/\n  Object.freeze({\n    ArcCurve: ArcCurve,\n    CatmullRomCurve3: CatmullRomCurve3,\n    CubicBezierCurve: CubicBezierCurve,\n    CubicBezierCurve3: CubicBezierCurve3,\n    EllipseCurve: EllipseCurve,\n    LineCurve: LineCurve,\n    LineCurve3: LineCurve3,\n    QuadraticBezierCurve: QuadraticBezierCurve,\n    QuadraticBezierCurve3: QuadraticBezierCurve3,\n    SplineCurve: SplineCurve\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   *\n   **/\n\n  /**************************************************************\n   *\tCurved Path - a curve path is simply a array of connected\n   *  curves, but retains the api of a curve\n   **************************************************************/\n\n  function CurvePath() {\n    Curve.call(this);\n    this.type = 'CurvePath';\n    this.curves = [];\n    this.autoClose = false; // Automatically closes the path\n  }\n\n  CurvePath.prototype = Object.assign(Object.create(Curve.prototype), {\n    constructor: CurvePath,\n    add: function add(curve) {\n      this.curves.push(curve);\n    },\n    closePath: function closePath() {\n      // Add a line curve if start and end of lines are not connected\n      var startPoint = this.curves[0].getPoint(0);\n      var endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n      if (!startPoint.equals(endPoint)) {\n        this.curves.push(new LineCurve(endPoint, startPoint));\n      }\n    },\n    // To get accurate point with reference to\n    // entire path distance at time t,\n    // following has to be done:\n    // 1. Length of each sub path have to be known\n    // 2. Locate and identify type of curve\n    // 3. Get t for the curve\n    // 4. Return curve.getPointAt(t')\n    getPoint: function getPoint(t) {\n      var d = t * this.getLength();\n      var curveLengths = this.getCurveLengths();\n      var i = 0; // To think about boundaries points.\n\n      while (i < curveLengths.length) {\n        if (curveLengths[i] >= d) {\n          var diff = curveLengths[i] - d;\n          var curve = this.curves[i];\n          var segmentLength = curve.getLength();\n          var u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n          return curve.getPointAt(u);\n        }\n\n        i++;\n      }\n\n      return null; // loop where sum != 0, sum > d , sum+1 <d\n    },\n    // We cannot use the default THREE.Curve getPoint() with getLength() because in\n    // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n    // getPoint() depends on getLength\n    getLength: function getLength() {\n      var lens = this.getCurveLengths();\n      return lens[lens.length - 1];\n    },\n    // cacheLengths must be recalculated.\n    updateArcLengths: function updateArcLengths() {\n      this.needsUpdate = true;\n      this.cacheLengths = null;\n      this.getCurveLengths();\n    },\n    // Compute lengths and cache them\n    // We cannot overwrite getLengths() because UtoT mapping uses it.\n    getCurveLengths: function getCurveLengths() {\n      // We use cache values if curves and cache array are same length\n      if (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n        return this.cacheLengths;\n      } // Get length of sub-curve\n      // Push sums into cached array\n\n\n      var lengths = [],\n          sums = 0;\n\n      for (var i = 0, l = this.curves.length; i < l; i++) {\n        sums += this.curves[i].getLength();\n        lengths.push(sums);\n      }\n\n      this.cacheLengths = lengths;\n      return lengths;\n    },\n    getSpacedPoints: function getSpacedPoints(divisions) {\n      if (divisions === undefined) divisions = 40;\n      var points = [];\n\n      for (var i = 0; i <= divisions; i++) {\n        points.push(this.getPoint(i / divisions));\n      }\n\n      if (this.autoClose) {\n        points.push(points[0]);\n      }\n\n      return points;\n    },\n    getPoints: function getPoints(divisions) {\n      divisions = divisions || 12;\n      var points = [],\n          last;\n\n      for (var i = 0, curves = this.curves; i < curves.length; i++) {\n        var curve = curves[i];\n        var resolution = curve && curve.isEllipseCurve ? divisions * 2 : curve && (curve.isLineCurve || curve.isLineCurve3) ? 1 : curve && curve.isSplineCurve ? divisions * curve.points.length : divisions;\n        var pts = curve.getPoints(resolution);\n\n        for (var j = 0; j < pts.length; j++) {\n          var point = pts[j];\n          if (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n\n          points.push(point);\n          last = point;\n        }\n      }\n\n      if (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n        points.push(points[0]);\n      }\n\n      return points;\n    },\n    copy: function copy(source) {\n      Curve.prototype.copy.call(this, source);\n      this.curves = [];\n\n      for (var i = 0, l = source.curves.length; i < l; i++) {\n        var curve = source.curves[i];\n        this.curves.push(curve.clone());\n      }\n\n      this.autoClose = source.autoClose;\n      return this;\n    },\n    toJSON: function toJSON() {\n      var data = Curve.prototype.toJSON.call(this);\n      data.autoClose = this.autoClose;\n      data.curves = [];\n\n      for (var i = 0, l = this.curves.length; i < l; i++) {\n        var curve = this.curves[i];\n        data.curves.push(curve.toJSON());\n      }\n\n      return data;\n    },\n    fromJSON: function fromJSON(json) {\n      Curve.prototype.fromJSON.call(this, json);\n      this.autoClose = json.autoClose;\n      this.curves = [];\n\n      for (var i = 0, l = json.curves.length; i < l; i++) {\n        var curve = json.curves[i];\n        this.curves.push(new Curves[curve.type]().fromJSON(curve));\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * Creates free form 2d path using series of points, lines or curves.\n   **/\n\n  function Path(points) {\n    CurvePath.call(this);\n    this.type = 'Path';\n    this.currentPoint = new Vector2();\n\n    if (points) {\n      this.setFromPoints(points);\n    }\n  }\n\n  Path.prototype = Object.assign(Object.create(CurvePath.prototype), {\n    constructor: Path,\n    setFromPoints: function setFromPoints(points) {\n      this.moveTo(points[0].x, points[0].y);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        this.lineTo(points[i].x, points[i].y);\n      }\n    },\n    moveTo: function moveTo(x, y) {\n      this.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n    },\n    lineTo: function lineTo(x, y) {\n      var curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n      this.curves.push(curve);\n      this.currentPoint.set(x, y);\n    },\n    quadraticCurveTo: function quadraticCurveTo(aCPx, aCPy, aX, aY) {\n      var curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\n      this.curves.push(curve);\n      this.currentPoint.set(aX, aY);\n    },\n    bezierCurveTo: function bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n      var curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\n      this.curves.push(curve);\n      this.currentPoint.set(aX, aY);\n    },\n    splineThru: function splineThru(pts\n    /*Array of Vector*/\n    ) {\n      var npts = [this.currentPoint.clone()].concat(pts);\n      var curve = new SplineCurve(npts);\n      this.curves.push(curve);\n      this.currentPoint.copy(pts[pts.length - 1]);\n    },\n    arc: function arc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n      var x0 = this.currentPoint.x;\n      var y0 = this.currentPoint.y;\n      this.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n    },\n    absarc: function absarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n      this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n    },\n    ellipse: function ellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n      var x0 = this.currentPoint.x;\n      var y0 = this.currentPoint.y;\n      this.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n    },\n    absellipse: function absellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n      var curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\n      if (this.curves.length > 0) {\n        // if a previous curve is present, attempt to join\n        var firstPoint = curve.getPoint(0);\n\n        if (!firstPoint.equals(this.currentPoint)) {\n          this.lineTo(firstPoint.x, firstPoint.y);\n        }\n      }\n\n      this.curves.push(curve);\n      var lastPoint = curve.getPoint(1);\n      this.currentPoint.copy(lastPoint);\n    },\n    copy: function copy(source) {\n      CurvePath.prototype.copy.call(this, source);\n      this.currentPoint.copy(source.currentPoint);\n      return this;\n    },\n    toJSON: function toJSON() {\n      var data = CurvePath.prototype.toJSON.call(this);\n      data.currentPoint = this.currentPoint.toArray();\n      return data;\n    },\n    fromJSON: function fromJSON(json) {\n      CurvePath.prototype.fromJSON.call(this, json);\n      this.currentPoint.fromArray(json.currentPoint);\n      return this;\n    }\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * Defines a 2d shape plane using paths.\n   **/\n  // STEP 1 Create a path.\n  // STEP 2 Turn path into shape.\n  // STEP 3 ExtrudeGeometry takes in Shape/Shapes\n  // STEP 3a - Extract points from each shape, turn to vertices\n  // STEP 3b - Triangulate each shape, add faces.\n\n  function Shape(points) {\n    Path.call(this, points);\n    this.uuid = _Math.generateUUID();\n    this.type = 'Shape';\n    this.holes = [];\n  }\n\n  Shape.prototype = Object.assign(Object.create(Path.prototype), {\n    constructor: Shape,\n    getPointsHoles: function getPointsHoles(divisions) {\n      var holesPts = [];\n\n      for (var i = 0, l = this.holes.length; i < l; i++) {\n        holesPts[i] = this.holes[i].getPoints(divisions);\n      }\n\n      return holesPts;\n    },\n    // get points of shape and holes (keypoints based on segments parameter)\n    extractPoints: function extractPoints(divisions) {\n      return {\n        shape: this.getPoints(divisions),\n        holes: this.getPointsHoles(divisions)\n      };\n    },\n    copy: function copy(source) {\n      Path.prototype.copy.call(this, source);\n      this.holes = [];\n\n      for (var i = 0, l = source.holes.length; i < l; i++) {\n        var hole = source.holes[i];\n        this.holes.push(hole.clone());\n      }\n\n      return this;\n    },\n    toJSON: function toJSON() {\n      var data = Path.prototype.toJSON.call(this);\n      data.uuid = this.uuid;\n      data.holes = [];\n\n      for (var i = 0, l = this.holes.length; i < l; i++) {\n        var hole = this.holes[i];\n        data.holes.push(hole.toJSON());\n      }\n\n      return data;\n    },\n    fromJSON: function fromJSON(json) {\n      Path.prototype.fromJSON.call(this, json);\n      this.uuid = json.uuid;\n      this.holes = [];\n\n      for (var i = 0, l = json.holes.length; i < l; i++) {\n        var hole = json.holes[i];\n        this.holes.push(new Path().fromJSON(hole));\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function Light(color, intensity) {\n    Object3D.call(this);\n    this.type = 'Light';\n    this.color = new Color(color);\n    this.intensity = intensity !== undefined ? intensity : 1;\n    this.receiveShadow = undefined;\n  }\n\n  Light.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Light,\n    isLight: true,\n    copy: function copy(source) {\n      Object3D.prototype.copy.call(this, source);\n      this.color.copy(source.color);\n      this.intensity = source.intensity;\n      return this;\n    },\n    toJSON: function toJSON(meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      data.object.color = this.color.getHex();\n      data.object.intensity = this.intensity;\n      if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n      if (this.distance !== undefined) data.object.distance = this.distance;\n      if (this.angle !== undefined) data.object.angle = this.angle;\n      if (this.decay !== undefined) data.object.decay = this.decay;\n      if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n      if (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n      return data;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function HemisphereLight(skyColor, groundColor, intensity) {\n    Light.call(this, skyColor, intensity);\n    this.type = 'HemisphereLight';\n    this.castShadow = undefined;\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n    this.groundColor = new Color(groundColor);\n  }\n\n  HemisphereLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: HemisphereLight,\n    isHemisphereLight: true,\n    copy: function copy(source) {\n      Light.prototype.copy.call(this, source);\n      this.groundColor.copy(source.groundColor);\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function LightShadow(camera) {\n    this.camera = camera;\n    this.bias = 0;\n    this.radius = 1;\n    this.mapSize = new Vector2(512, 512);\n    this.map = null;\n    this.matrix = new Matrix4();\n  }\n\n  Object.assign(LightShadow.prototype, {\n    copy: function copy(source) {\n      this.camera = source.camera.clone();\n      this.bias = source.bias;\n      this.radius = source.radius;\n      this.mapSize.copy(source.mapSize);\n      return this;\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    toJSON: function toJSON() {\n      var object = {};\n      if (this.bias !== 0) object.bias = this.bias;\n      if (this.radius !== 1) object.radius = this.radius;\n      if (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n      object.camera = this.camera.toJSON(false).object;\n      delete object.camera.matrix;\n      return object;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function SpotLightShadow() {\n    LightShadow.call(this, new PerspectiveCamera(50, 1, 0.5, 500));\n  }\n\n  SpotLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n    constructor: SpotLightShadow,\n    isSpotLightShadow: true,\n    update: function update(light) {\n      var camera = this.camera;\n      var fov = _Math.RAD2DEG * 2 * light.angle;\n      var aspect = this.mapSize.width / this.mapSize.height;\n      var far = light.distance || camera.far;\n\n      if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n        camera.fov = fov;\n        camera.aspect = aspect;\n        camera.far = far;\n        camera.updateProjectionMatrix();\n      }\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function SpotLight(color, intensity, distance, angle, penumbra, decay) {\n    Light.call(this, color, intensity);\n    this.type = 'SpotLight';\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n    this.target = new Object3D();\n    Object.defineProperty(this, 'power', {\n      get: function get() {\n        // intensity = power per solid angle.\n        // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n        return this.intensity * Math.PI;\n      },\n      set: function set(power) {\n        // intensity = power per solid angle.\n        // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n        this.intensity = power / Math.PI;\n      }\n    });\n    this.distance = distance !== undefined ? distance : 0;\n    this.angle = angle !== undefined ? angle : Math.PI / 3;\n    this.penumbra = penumbra !== undefined ? penumbra : 0;\n    this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n    this.shadow = new SpotLightShadow();\n  }\n\n  SpotLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: SpotLight,\n    isSpotLight: true,\n    copy: function copy(source) {\n      Light.prototype.copy.call(this, source);\n      this.distance = source.distance;\n      this.angle = source.angle;\n      this.penumbra = source.penumbra;\n      this.decay = source.decay;\n      this.target = source.target.clone();\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function PointLight(color, intensity, distance, decay) {\n    Light.call(this, color, intensity);\n    this.type = 'PointLight';\n    Object.defineProperty(this, 'power', {\n      get: function get() {\n        // intensity = power per solid angle.\n        // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n        return this.intensity * 4 * Math.PI;\n      },\n      set: function set(power) {\n        // intensity = power per solid angle.\n        // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n        this.intensity = power / (4 * Math.PI);\n      }\n    });\n    this.distance = distance !== undefined ? distance : 0;\n    this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n    this.shadow = new LightShadow(new PerspectiveCamera(90, 1, 0.5, 500));\n  }\n\n  PointLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: PointLight,\n    isPointLight: true,\n    copy: function copy(source) {\n      Light.prototype.copy.call(this, source);\n      this.distance = source.distance;\n      this.decay = source.decay;\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author arose / http://github.com/arose\n   */\n\n  function OrthographicCamera(left, right, top, bottom, near, far) {\n    Camera.call(this);\n    this.type = 'OrthographicCamera';\n    this.zoom = 1;\n    this.view = null;\n    this.left = left !== undefined ? left : -1;\n    this.right = right !== undefined ? right : 1;\n    this.top = top !== undefined ? top : 1;\n    this.bottom = bottom !== undefined ? bottom : -1;\n    this.near = near !== undefined ? near : 0.1;\n    this.far = far !== undefined ? far : 2000;\n    this.updateProjectionMatrix();\n  }\n\n  OrthographicCamera.prototype = Object.assign(Object.create(Camera.prototype), {\n    constructor: OrthographicCamera,\n    isOrthographicCamera: true,\n    copy: function copy(source, recursive) {\n      Camera.prototype.copy.call(this, source, recursive);\n      this.left = source.left;\n      this.right = source.right;\n      this.top = source.top;\n      this.bottom = source.bottom;\n      this.near = source.near;\n      this.far = source.far;\n      this.zoom = source.zoom;\n      this.view = source.view === null ? null : Object.assign({}, source.view);\n      return this;\n    },\n    setViewOffset: function setViewOffset(fullWidth, fullHeight, x, y, width, height) {\n      if (this.view === null) {\n        this.view = {\n          enabled: true,\n          fullWidth: 1,\n          fullHeight: 1,\n          offsetX: 0,\n          offsetY: 0,\n          width: 1,\n          height: 1\n        };\n      }\n\n      this.view.enabled = true;\n      this.view.fullWidth = fullWidth;\n      this.view.fullHeight = fullHeight;\n      this.view.offsetX = x;\n      this.view.offsetY = y;\n      this.view.width = width;\n      this.view.height = height;\n      this.updateProjectionMatrix();\n    },\n    clearViewOffset: function clearViewOffset() {\n      if (this.view !== null) {\n        this.view.enabled = false;\n      }\n\n      this.updateProjectionMatrix();\n    },\n    updateProjectionMatrix: function updateProjectionMatrix() {\n      var dx = (this.right - this.left) / (2 * this.zoom);\n      var dy = (this.top - this.bottom) / (2 * this.zoom);\n      var cx = (this.right + this.left) / 2;\n      var cy = (this.top + this.bottom) / 2;\n      var left = cx - dx;\n      var right = cx + dx;\n      var top = cy + dy;\n      var bottom = cy - dy;\n\n      if (this.view !== null && this.view.enabled) {\n        var zoomW = this.zoom / (this.view.width / this.view.fullWidth);\n        var zoomH = this.zoom / (this.view.height / this.view.fullHeight);\n        var scaleW = (this.right - this.left) / this.view.width;\n        var scaleH = (this.top - this.bottom) / this.view.height;\n        left += scaleW * (this.view.offsetX / zoomW);\n        right = left + scaleW * (this.view.width / zoomW);\n        top -= scaleH * (this.view.offsetY / zoomH);\n        bottom = top - scaleH * (this.view.height / zoomH);\n      }\n\n      this.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n      this.projectionMatrixInverse.getInverse(this.projectionMatrix);\n    },\n    toJSON: function toJSON(meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      data.object.zoom = this.zoom;\n      data.object.left = this.left;\n      data.object.right = this.right;\n      data.object.top = this.top;\n      data.object.bottom = this.bottom;\n      data.object.near = this.near;\n      data.object.far = this.far;\n      if (this.view !== null) data.object.view = Object.assign({}, this.view);\n      return data;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function DirectionalLightShadow() {\n    LightShadow.call(this, new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n  }\n\n  DirectionalLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n    constructor: DirectionalLightShadow\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function DirectionalLight(color, intensity) {\n    Light.call(this, color, intensity);\n    this.type = 'DirectionalLight';\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n    this.target = new Object3D();\n    this.shadow = new DirectionalLightShadow();\n  }\n\n  DirectionalLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: DirectionalLight,\n    isDirectionalLight: true,\n    copy: function copy(source) {\n      Light.prototype.copy.call(this, source);\n      this.target = source.target.clone();\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function AmbientLight(color, intensity) {\n    Light.call(this, color, intensity);\n    this.type = 'AmbientLight';\n    this.castShadow = undefined;\n  }\n\n  AmbientLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: AmbientLight,\n    isAmbientLight: true\n  });\n  /**\n   * @author abelnation / http://github.com/abelnation\n   */\n\n  function RectAreaLight(color, intensity, width, height) {\n    Light.call(this, color, intensity);\n    this.type = 'RectAreaLight';\n    this.width = width !== undefined ? width : 10;\n    this.height = height !== undefined ? height : 10;\n  }\n\n  RectAreaLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: RectAreaLight,\n    isRectAreaLight: true,\n    copy: function copy(source) {\n      Light.prototype.copy.call(this, source);\n      this.width = source.width;\n      this.height = source.height;\n      return this;\n    },\n    toJSON: function toJSON(meta) {\n      var data = Light.prototype.toJSON.call(this, meta);\n      data.object.width = this.width;\n      data.object.height = this.height;\n      return data;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function MaterialLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.textures = {};\n  }\n\n  Object.assign(MaterialLoader.prototype, {\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.load(url, function (text) {\n        onLoad(scope.parse(JSON.parse(text)));\n      }, onProgress, onError);\n    },\n    parse: function parse(json) {\n      var textures = this.textures;\n\n      function getTexture(name) {\n        if (textures[name] === undefined) {\n          console.warn('THREE.MaterialLoader: Undefined texture', name);\n        }\n\n        return textures[name];\n      }\n\n      var material = new Materials[json.type]();\n      if (json.uuid !== undefined) material.uuid = json.uuid;\n      if (json.name !== undefined) material.name = json.name;\n      if (json.color !== undefined) material.color.setHex(json.color);\n      if (json.roughness !== undefined) material.roughness = json.roughness;\n      if (json.metalness !== undefined) material.metalness = json.metalness;\n      if (json.emissive !== undefined) material.emissive.setHex(json.emissive);\n      if (json.specular !== undefined) material.specular.setHex(json.specular);\n      if (json.shininess !== undefined) material.shininess = json.shininess;\n      if (json.clearCoat !== undefined) material.clearCoat = json.clearCoat;\n      if (json.clearCoatRoughness !== undefined) material.clearCoatRoughness = json.clearCoatRoughness;\n      if (json.vertexColors !== undefined) material.vertexColors = json.vertexColors;\n      if (json.fog !== undefined) material.fog = json.fog;\n      if (json.flatShading !== undefined) material.flatShading = json.flatShading;\n      if (json.blending !== undefined) material.blending = json.blending;\n      if (json.combine !== undefined) material.combine = json.combine;\n      if (json.side !== undefined) material.side = json.side;\n      if (json.opacity !== undefined) material.opacity = json.opacity;\n      if (json.transparent !== undefined) material.transparent = json.transparent;\n      if (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n      if (json.depthTest !== undefined) material.depthTest = json.depthTest;\n      if (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n      if (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n      if (json.wireframe !== undefined) material.wireframe = json.wireframe;\n      if (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n      if (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n      if (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n      if (json.rotation !== undefined) material.rotation = json.rotation;\n      if (json.linewidth !== 1) material.linewidth = json.linewidth;\n      if (json.dashSize !== undefined) material.dashSize = json.dashSize;\n      if (json.gapSize !== undefined) material.gapSize = json.gapSize;\n      if (json.scale !== undefined) material.scale = json.scale;\n      if (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\n      if (json.polygonOffsetFactor !== undefined) material.polygonOffsetFactor = json.polygonOffsetFactor;\n      if (json.polygonOffsetUnits !== undefined) material.polygonOffsetUnits = json.polygonOffsetUnits;\n      if (json.skinning !== undefined) material.skinning = json.skinning;\n      if (json.morphTargets !== undefined) material.morphTargets = json.morphTargets;\n      if (json.dithering !== undefined) material.dithering = json.dithering;\n      if (json.visible !== undefined) material.visible = json.visible;\n      if (json.userData !== undefined) material.userData = json.userData; // Shader Material\n\n      if (json.uniforms !== undefined) {\n        for (var name in json.uniforms) {\n          var uniform = json.uniforms[name];\n          material.uniforms[name] = {};\n\n          switch (uniform.type) {\n            case 't':\n              material.uniforms[name].value = getTexture(uniform.value);\n              break;\n\n            case 'c':\n              material.uniforms[name].value = new Color().setHex(uniform.value);\n              break;\n\n            case 'v2':\n              material.uniforms[name].value = new Vector2().fromArray(uniform.value);\n              break;\n\n            case 'v3':\n              material.uniforms[name].value = new Vector3().fromArray(uniform.value);\n              break;\n\n            case 'v4':\n              material.uniforms[name].value = new Vector4().fromArray(uniform.value);\n              break;\n\n            case 'm4':\n              material.uniforms[name].value = new Matrix4().fromArray(uniform.value);\n              break;\n\n            default:\n              material.uniforms[name].value = uniform.value;\n          }\n        }\n      }\n\n      if (json.defines !== undefined) material.defines = json.defines;\n      if (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n      if (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n\n      if (json.extensions !== undefined) {\n        for (var key in json.extensions) {\n          material.extensions[key] = json.extensions[key];\n        }\n      } // Deprecated\n\n\n      if (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\n      // for PointsMaterial\n\n      if (json.size !== undefined) material.size = json.size;\n      if (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n      if (json.map !== undefined) material.map = getTexture(json.map);\n\n      if (json.alphaMap !== undefined) {\n        material.alphaMap = getTexture(json.alphaMap);\n        material.transparent = true;\n      }\n\n      if (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n      if (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n      if (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n      if (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\n\n      if (json.normalScale !== undefined) {\n        var normalScale = json.normalScale;\n\n        if (Array.isArray(normalScale) === false) {\n          // Blender exporter used to export a scalar. See #7459\n          normalScale = [normalScale, normalScale];\n        }\n\n        material.normalScale = new Vector2().fromArray(normalScale);\n      }\n\n      if (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n      if (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n      if (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n      if (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n      if (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n      if (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n      if (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n      if (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n      if (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n      if (json.envMapIntensity !== undefined) material.envMapIntensity = json.envMapIntensity;\n      if (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n      if (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n      if (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n      if (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n      if (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n      if (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\n      return material;\n    },\n    setPath: function setPath(value) {\n      this.path = value;\n      return this;\n    },\n    setTextures: function setTextures(value) {\n      this.textures = value;\n      return this;\n    }\n  });\n  /**\n   * @author Don McCurdy / https://www.donmccurdy.com\n   */\n\n  var LoaderUtils = {\n    decodeText: function decodeText(array) {\n      if (typeof TextDecoder !== 'undefined') {\n        return new TextDecoder().decode(array);\n      } // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n      // throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\n      var s = '';\n\n      for (var i = 0, il = array.length; i < il; i++) {\n        // Implicitly assumes little-endian.\n        s += String.fromCharCode(array[i]);\n      } // Merges multi-byte utf-8 characters.\n\n\n      return decodeURIComponent(escape(s));\n    },\n    extractUrlBase: function extractUrlBase(url) {\n      var index = url.lastIndexOf('/');\n      if (index === -1) return './';\n      return url.substr(0, index + 1);\n    }\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function BufferGeometryLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(BufferGeometryLoader.prototype, {\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.load(url, function (text) {\n        onLoad(scope.parse(JSON.parse(text)));\n      }, onProgress, onError);\n    },\n    parse: function parse(json) {\n      var geometry = new BufferGeometry();\n      var index = json.data.index;\n\n      if (index !== undefined) {\n        var typedArray = new TYPED_ARRAYS[index.type](index.array);\n        geometry.setIndex(new BufferAttribute(typedArray, 1));\n      }\n\n      var attributes = json.data.attributes;\n\n      for (var key in attributes) {\n        var attribute = attributes[key];\n        var typedArray = new TYPED_ARRAYS[attribute.type](attribute.array);\n        geometry.addAttribute(key, new BufferAttribute(typedArray, attribute.itemSize, attribute.normalized));\n      }\n\n      var groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n      if (groups !== undefined) {\n        for (var i = 0, n = groups.length; i !== n; ++i) {\n          var group = groups[i];\n          geometry.addGroup(group.start, group.count, group.materialIndex);\n        }\n      }\n\n      var boundingSphere = json.data.boundingSphere;\n\n      if (boundingSphere !== undefined) {\n        var center = new Vector3();\n\n        if (boundingSphere.center !== undefined) {\n          center.fromArray(boundingSphere.center);\n        }\n\n        geometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n      }\n\n      if (json.name) geometry.name = json.name;\n      if (json.userData) geometry.userData = json.userData;\n      return geometry;\n    },\n    setPath: function setPath(value) {\n      this.path = value;\n      return this;\n    }\n  });\n  var TYPED_ARRAYS = {\n    Int8Array: Int8Array,\n    Uint8Array: Uint8Array,\n    // Workaround for IE11 pre KB2929437. See #11440\n    Uint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n    Int16Array: Int16Array,\n    Uint16Array: Uint16Array,\n    Int32Array: Int32Array,\n    Uint32Array: Uint32Array,\n    Float32Array: Float32Array,\n    Float64Array: Float64Array\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function ObjectLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.resourcePath = '';\n  }\n\n  Object.assign(ObjectLoader.prototype, {\n    crossOrigin: 'anonymous',\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var path = this.path === undefined ? LoaderUtils.extractUrlBase(url) : this.path;\n      this.resourcePath = this.resourcePath || path;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(this.path);\n      loader.load(url, function (text) {\n        var json = null;\n\n        try {\n          json = JSON.parse(text);\n        } catch (error) {\n          if (onError !== undefined) onError(error);\n          console.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n          return;\n        }\n\n        var metadata = json.metadata;\n\n        if (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n          console.error('THREE.ObjectLoader: Can\\'t load ' + url);\n          return;\n        }\n\n        scope.parse(json, onLoad);\n      }, onProgress, onError);\n    },\n    setPath: function setPath(value) {\n      this.path = value;\n      return this;\n    },\n    setResourcePath: function setResourcePath(value) {\n      this.resourcePath = value;\n      return this;\n    },\n    setCrossOrigin: function setCrossOrigin(value) {\n      this.crossOrigin = value;\n      return this;\n    },\n    parse: function parse(json, onLoad) {\n      var shapes = this.parseShape(json.shapes);\n      var geometries = this.parseGeometries(json.geometries, shapes);\n      var images = this.parseImages(json.images, function () {\n        if (onLoad !== undefined) onLoad(object);\n      });\n      var textures = this.parseTextures(json.textures, images);\n      var materials = this.parseMaterials(json.materials, textures);\n      var object = this.parseObject(json.object, geometries, materials);\n\n      if (json.animations) {\n        object.animations = this.parseAnimations(json.animations);\n      }\n\n      if (json.images === undefined || json.images.length === 0) {\n        if (onLoad !== undefined) onLoad(object);\n      }\n\n      return object;\n    },\n    parseShape: function parseShape(json) {\n      var shapes = {};\n\n      if (json !== undefined) {\n        for (var i = 0, l = json.length; i < l; i++) {\n          var shape = new Shape().fromJSON(json[i]);\n          shapes[shape.uuid] = shape;\n        }\n      }\n\n      return shapes;\n    },\n    parseGeometries: function parseGeometries(json, shapes) {\n      var geometries = {};\n\n      if (json !== undefined) {\n        var bufferGeometryLoader = new BufferGeometryLoader();\n\n        for (var i = 0, l = json.length; i < l; i++) {\n          var geometry;\n          var data = json[i];\n\n          switch (data.type) {\n            case 'PlaneGeometry':\n            case 'PlaneBufferGeometry':\n              geometry = new Geometries[data.type](data.width, data.height, data.widthSegments, data.heightSegments);\n              break;\n\n            case 'BoxGeometry':\n            case 'BoxBufferGeometry':\n            case 'CubeGeometry':\n              // backwards compatible\n              geometry = new Geometries[data.type](data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n              break;\n\n            case 'CircleGeometry':\n            case 'CircleBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.segments, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'CylinderGeometry':\n            case 'CylinderBufferGeometry':\n              geometry = new Geometries[data.type](data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'ConeGeometry':\n            case 'ConeBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'SphereGeometry':\n            case 'SphereBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'DodecahedronGeometry':\n            case 'DodecahedronBufferGeometry':\n            case 'IcosahedronGeometry':\n            case 'IcosahedronBufferGeometry':\n            case 'OctahedronGeometry':\n            case 'OctahedronBufferGeometry':\n            case 'TetrahedronGeometry':\n            case 'TetrahedronBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.detail);\n              break;\n\n            case 'RingGeometry':\n            case 'RingBufferGeometry':\n              geometry = new Geometries[data.type](data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'TorusGeometry':\n            case 'TorusBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n              break;\n\n            case 'TorusKnotGeometry':\n            case 'TorusKnotBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n              break;\n\n            case 'LatheGeometry':\n            case 'LatheBufferGeometry':\n              geometry = new Geometries[data.type](data.points, data.segments, data.phiStart, data.phiLength);\n              break;\n\n            case 'PolyhedronGeometry':\n            case 'PolyhedronBufferGeometry':\n              geometry = new Geometries[data.type](data.vertices, data.indices, data.radius, data.details);\n              break;\n\n            case 'ShapeGeometry':\n            case 'ShapeBufferGeometry':\n              var geometryShapes = [];\n\n              for (var j = 0, jl = data.shapes.length; j < jl; j++) {\n                var shape = shapes[data.shapes[j]];\n                geometryShapes.push(shape);\n              }\n\n              geometry = new Geometries[data.type](geometryShapes, data.curveSegments);\n              break;\n\n            case 'ExtrudeGeometry':\n            case 'ExtrudeBufferGeometry':\n              var geometryShapes = [];\n\n              for (var j = 0, jl = data.shapes.length; j < jl; j++) {\n                var shape = shapes[data.shapes[j]];\n                geometryShapes.push(shape);\n              }\n\n              var extrudePath = data.options.extrudePath;\n\n              if (extrudePath !== undefined) {\n                data.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\n              }\n\n              geometry = new Geometries[data.type](geometryShapes, data.options);\n              break;\n\n            case 'BufferGeometry':\n              geometry = bufferGeometryLoader.parse(data);\n              break;\n\n            case 'Geometry':\n              if ('THREE' in window && 'LegacyJSONLoader' in THREE) {\n                var geometryLoader = new THREE.LegacyJSONLoader();\n                geometry = geometryLoader.parse(data, this.resourcePath).geometry;\n              } else {\n                console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type \"Geometry\".');\n              }\n\n              break;\n\n            default:\n              console.warn('THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"');\n              continue;\n          }\n\n          geometry.uuid = data.uuid;\n          if (data.name !== undefined) geometry.name = data.name;\n          if (geometry.isBufferGeometry === true && data.userData !== undefined) geometry.userData = data.userData;\n          geometries[data.uuid] = geometry;\n        }\n      }\n\n      return geometries;\n    },\n    parseMaterials: function parseMaterials(json, textures) {\n      var cache = {}; // MultiMaterial\n\n      var materials = {};\n\n      if (json !== undefined) {\n        var loader = new MaterialLoader();\n        loader.setTextures(textures);\n\n        for (var i = 0, l = json.length; i < l; i++) {\n          var data = json[i];\n\n          if (data.type === 'MultiMaterial') {\n            // Deprecated\n            var array = [];\n\n            for (var j = 0; j < data.materials.length; j++) {\n              var material = data.materials[j];\n\n              if (cache[material.uuid] === undefined) {\n                cache[material.uuid] = loader.parse(material);\n              }\n\n              array.push(cache[material.uuid]);\n            }\n\n            materials[data.uuid] = array;\n          } else {\n            materials[data.uuid] = loader.parse(data);\n            cache[data.uuid] = materials[data.uuid];\n          }\n        }\n      }\n\n      return materials;\n    },\n    parseAnimations: function parseAnimations(json) {\n      var animations = [];\n\n      for (var i = 0; i < json.length; i++) {\n        var data = json[i];\n        var clip = AnimationClip.parse(data);\n        if (data.uuid !== undefined) clip.uuid = data.uuid;\n        animations.push(clip);\n      }\n\n      return animations;\n    },\n    parseImages: function parseImages(json, onLoad) {\n      var scope = this;\n      var images = {};\n\n      function loadImage(url) {\n        scope.manager.itemStart(url);\n        return loader.load(url, function () {\n          scope.manager.itemEnd(url);\n        }, undefined, function () {\n          scope.manager.itemError(url);\n          scope.manager.itemEnd(url);\n        });\n      }\n\n      if (json !== undefined && json.length > 0) {\n        var manager = new LoadingManager(onLoad);\n        var loader = new ImageLoader(manager);\n        loader.setCrossOrigin(this.crossOrigin);\n\n        for (var i = 0, il = json.length; i < il; i++) {\n          var image = json[i];\n          var url = image.url;\n\n          if (Array.isArray(url)) {\n            // load array of images e.g CubeTexture\n            images[image.uuid] = [];\n\n            for (var j = 0, jl = url.length; j < jl; j++) {\n              var currentUrl = url[j];\n              var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(currentUrl) ? currentUrl : scope.resourcePath + currentUrl;\n              images[image.uuid].push(loadImage(path));\n            }\n          } else {\n            // load single image\n            var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(image.url) ? image.url : scope.resourcePath + image.url;\n            images[image.uuid] = loadImage(path);\n          }\n        }\n      }\n\n      return images;\n    },\n    parseTextures: function parseTextures(json, images) {\n      function parseConstant(value, type) {\n        if (typeof value === 'number') return value;\n        console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n        return type[value];\n      }\n\n      var textures = {};\n\n      if (json !== undefined) {\n        for (var i = 0, l = json.length; i < l; i++) {\n          var data = json[i];\n\n          if (data.image === undefined) {\n            console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n          }\n\n          if (images[data.image] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined image', data.image);\n          }\n\n          var texture;\n\n          if (Array.isArray(images[data.image])) {\n            texture = new CubeTexture(images[data.image]);\n          } else {\n            texture = new Texture(images[data.image]);\n          }\n\n          texture.needsUpdate = true;\n          texture.uuid = data.uuid;\n          if (data.name !== undefined) texture.name = data.name;\n          if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n          if (data.offset !== undefined) texture.offset.fromArray(data.offset);\n          if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n          if (data.center !== undefined) texture.center.fromArray(data.center);\n          if (data.rotation !== undefined) texture.rotation = data.rotation;\n\n          if (data.wrap !== undefined) {\n            texture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n            texture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n          }\n\n          if (data.format !== undefined) texture.format = data.format;\n          if (data.type !== undefined) texture.type = data.type;\n          if (data.encoding !== undefined) texture.encoding = data.encoding;\n          if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n          if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n          if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n          if (data.flipY !== undefined) texture.flipY = data.flipY;\n          if (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\n          if (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\n          textures[data.uuid] = texture;\n        }\n      }\n\n      return textures;\n    },\n    parseObject: function parseObject(data, geometries, materials) {\n      var object;\n\n      function getGeometry(name) {\n        if (geometries[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined geometry', name);\n        }\n\n        return geometries[name];\n      }\n\n      function getMaterial(name) {\n        if (name === undefined) return undefined;\n\n        if (Array.isArray(name)) {\n          var array = [];\n\n          for (var i = 0, l = name.length; i < l; i++) {\n            var uuid = name[i];\n\n            if (materials[uuid] === undefined) {\n              console.warn('THREE.ObjectLoader: Undefined material', uuid);\n            }\n\n            array.push(materials[uuid]);\n          }\n\n          return array;\n        }\n\n        if (materials[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined material', name);\n        }\n\n        return materials[name];\n      }\n\n      switch (data.type) {\n        case 'Scene':\n          object = new Scene();\n\n          if (data.background !== undefined) {\n            if (Number.isInteger(data.background)) {\n              object.background = new Color(data.background);\n            }\n          }\n\n          if (data.fog !== undefined) {\n            if (data.fog.type === 'Fog') {\n              object.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n            } else if (data.fog.type === 'FogExp2') {\n              object.fog = new FogExp2(data.fog.color, data.fog.density);\n            }\n          }\n\n          break;\n\n        case 'PerspectiveCamera':\n          object = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n          if (data.focus !== undefined) object.focus = data.focus;\n          if (data.zoom !== undefined) object.zoom = data.zoom;\n          if (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n          if (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n          if (data.view !== undefined) object.view = Object.assign({}, data.view);\n          break;\n\n        case 'OrthographicCamera':\n          object = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n          if (data.zoom !== undefined) object.zoom = data.zoom;\n          if (data.view !== undefined) object.view = Object.assign({}, data.view);\n          break;\n\n        case 'AmbientLight':\n          object = new AmbientLight(data.color, data.intensity);\n          break;\n\n        case 'DirectionalLight':\n          object = new DirectionalLight(data.color, data.intensity);\n          break;\n\n        case 'PointLight':\n          object = new PointLight(data.color, data.intensity, data.distance, data.decay);\n          break;\n\n        case 'RectAreaLight':\n          object = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n          break;\n\n        case 'SpotLight':\n          object = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n          break;\n\n        case 'HemisphereLight':\n          object = new HemisphereLight(data.color, data.groundColor, data.intensity);\n          break;\n\n        case 'SkinnedMesh':\n          console.warn('THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.');\n\n        case 'Mesh':\n          var geometry = getGeometry(data.geometry);\n          var material = getMaterial(data.material);\n\n          if (geometry.bones && geometry.bones.length > 0) {\n            object = new SkinnedMesh(geometry, material);\n          } else {\n            object = new Mesh(geometry, material);\n          }\n\n          break;\n\n        case 'LOD':\n          object = new LOD();\n          break;\n\n        case 'Line':\n          object = new Line(getGeometry(data.geometry), getMaterial(data.material), data.mode);\n          break;\n\n        case 'LineLoop':\n          object = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'LineSegments':\n          object = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'PointCloud':\n        case 'Points':\n          object = new Points(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'Sprite':\n          object = new Sprite(getMaterial(data.material));\n          break;\n\n        case 'Group':\n          object = new Group();\n          break;\n\n        default:\n          object = new Object3D();\n      }\n\n      object.uuid = data.uuid;\n      if (data.name !== undefined) object.name = data.name;\n\n      if (data.matrix !== undefined) {\n        object.matrix.fromArray(data.matrix);\n        if (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n        if (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n      } else {\n        if (data.position !== undefined) object.position.fromArray(data.position);\n        if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n        if (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n        if (data.scale !== undefined) object.scale.fromArray(data.scale);\n      }\n\n      if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n      if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n\n      if (data.shadow) {\n        if (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n        if (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n        if (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n        if (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n      }\n\n      if (data.visible !== undefined) object.visible = data.visible;\n      if (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n      if (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n      if (data.userData !== undefined) object.userData = data.userData;\n      if (data.layers !== undefined) object.layers.mask = data.layers;\n\n      if (data.children !== undefined) {\n        var children = data.children;\n\n        for (var i = 0; i < children.length; i++) {\n          object.add(this.parseObject(children[i], geometries, materials));\n        }\n      }\n\n      if (data.type === 'LOD') {\n        var levels = data.levels;\n\n        for (var l = 0; l < levels.length; l++) {\n          var level = levels[l];\n          var child = object.getObjectByProperty('uuid', level.object);\n\n          if (child !== undefined) {\n            object.addLevel(child, level.distance);\n          }\n        }\n      }\n\n      return object;\n    }\n  });\n  var TEXTURE_MAPPING = {\n    UVMapping: UVMapping,\n    CubeReflectionMapping: CubeReflectionMapping,\n    CubeRefractionMapping: CubeRefractionMapping,\n    EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n    EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n    SphericalReflectionMapping: SphericalReflectionMapping,\n    CubeUVReflectionMapping: CubeUVReflectionMapping,\n    CubeUVRefractionMapping: CubeUVRefractionMapping\n  };\n  var TEXTURE_WRAPPING = {\n    RepeatWrapping: RepeatWrapping,\n    ClampToEdgeWrapping: ClampToEdgeWrapping,\n    MirroredRepeatWrapping: MirroredRepeatWrapping\n  };\n  var TEXTURE_FILTER = {\n    NearestFilter: NearestFilter,\n    NearestMipMapNearestFilter: NearestMipMapNearestFilter,\n    NearestMipMapLinearFilter: NearestMipMapLinearFilter,\n    LinearFilter: LinearFilter,\n    LinearMipMapNearestFilter: LinearMipMapNearestFilter,\n    LinearMipMapLinearFilter: LinearMipMapLinearFilter\n  };\n  /**\n   * @author thespite / http://clicktorelease.com/\n   */\n\n  function ImageBitmapLoader(manager) {\n    if (typeof createImageBitmap === 'undefined') {\n      console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\n    }\n\n    if (typeof fetch === 'undefined') {\n      console.warn('THREE.ImageBitmapLoader: fetch() not supported.');\n    }\n\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.options = undefined;\n  }\n\n  ImageBitmapLoader.prototype = {\n    constructor: ImageBitmapLoader,\n    setOptions: function setOptions(options) {\n      this.options = options;\n      return this;\n    },\n    load: function load(url, onLoad, onProgress, onError) {\n      if (url === undefined) url = '';\n      if (this.path !== undefined) url = this.path + url;\n      url = this.manager.resolveURL(url);\n      var scope = this;\n      var cached = Cache.get(url);\n\n      if (cached !== undefined) {\n        scope.manager.itemStart(url);\n        setTimeout(function () {\n          if (onLoad) onLoad(cached);\n          scope.manager.itemEnd(url);\n        }, 0);\n        return cached;\n      }\n\n      fetch(url).then(function (res) {\n        return res.blob();\n      }).then(function (blob) {\n        return createImageBitmap(blob, scope.options);\n      }).then(function (imageBitmap) {\n        Cache.add(url, imageBitmap);\n        if (onLoad) onLoad(imageBitmap);\n        scope.manager.itemEnd(url);\n      }).catch(function (e) {\n        if (onError) onError(e);\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      });\n    },\n    setCrossOrigin: function setCrossOrigin()\n    /* value */\n    {\n      return this;\n    },\n    setPath: function setPath(value) {\n      this.path = value;\n      return this;\n    }\n  };\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n   **/\n\n  function ShapePath() {\n    this.type = 'ShapePath';\n    this.color = new Color();\n    this.subPaths = [];\n    this.currentPath = null;\n  }\n\n  Object.assign(ShapePath.prototype, {\n    moveTo: function moveTo(x, y) {\n      this.currentPath = new Path();\n      this.subPaths.push(this.currentPath);\n      this.currentPath.moveTo(x, y);\n    },\n    lineTo: function lineTo(x, y) {\n      this.currentPath.lineTo(x, y);\n    },\n    quadraticCurveTo: function quadraticCurveTo(aCPx, aCPy, aX, aY) {\n      this.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n    },\n    bezierCurveTo: function bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n      this.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n    },\n    splineThru: function splineThru(pts) {\n      this.currentPath.splineThru(pts);\n    },\n    toShapes: function toShapes(isCCW, noHoles) {\n      function toShapesNoHoles(inSubpaths) {\n        var shapes = [];\n\n        for (var i = 0, l = inSubpaths.length; i < l; i++) {\n          var tmpPath = inSubpaths[i];\n          var tmpShape = new Shape();\n          tmpShape.curves = tmpPath.curves;\n          shapes.push(tmpShape);\n        }\n\n        return shapes;\n      }\n\n      function isPointInsidePolygon(inPt, inPolygon) {\n        var polyLen = inPolygon.length; // inPt on polygon contour => immediate success    or\n        // toggling of inside/outside at every single! intersection point of an edge\n        //  with the horizontal line through inPt, left of inPt\n        //  not counting lowerY endpoints of edges and whole edges on that line\n\n        var inside = false;\n\n        for (var p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n          var edgeLowPt = inPolygon[p];\n          var edgeHighPt = inPolygon[q];\n          var edgeDx = edgeHighPt.x - edgeLowPt.x;\n          var edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n          if (Math.abs(edgeDy) > Number.EPSILON) {\n            // not parallel\n            if (edgeDy < 0) {\n              edgeLowPt = inPolygon[q];\n              edgeDx = -edgeDx;\n              edgeHighPt = inPolygon[p];\n              edgeDy = -edgeDy;\n            }\n\n            if (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n            if (inPt.y === edgeLowPt.y) {\n              if (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n              // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n            } else {\n              var perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n              if (perpEdge === 0) return true; // inPt is on contour ?\n\n              if (perpEdge < 0) continue;\n              inside = !inside; // true intersection left of inPt\n            }\n          } else {\n            // parallel or collinear\n            if (inPt.y !== edgeLowPt.y) continue; // parallel\n            // edge lies on the same horizontal line as inPt\n\n            if (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n            // continue;\n          }\n        }\n\n        return inside;\n      }\n\n      var isClockWise = ShapeUtils.isClockWise;\n      var subPaths = this.subPaths;\n      if (subPaths.length === 0) return [];\n      if (noHoles === true) return toShapesNoHoles(subPaths);\n      var solid,\n          tmpPath,\n          tmpShape,\n          shapes = [];\n\n      if (subPaths.length === 1) {\n        tmpPath = subPaths[0];\n        tmpShape = new Shape();\n        tmpShape.curves = tmpPath.curves;\n        shapes.push(tmpShape);\n        return shapes;\n      }\n\n      var holesFirst = !isClockWise(subPaths[0].getPoints());\n      holesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n      var betterShapeHoles = [];\n      var newShapes = [];\n      var newShapeHoles = [];\n      var mainIdx = 0;\n      var tmpPoints;\n      newShapes[mainIdx] = undefined;\n      newShapeHoles[mainIdx] = [];\n\n      for (var i = 0, l = subPaths.length; i < l; i++) {\n        tmpPath = subPaths[i];\n        tmpPoints = tmpPath.getPoints();\n        solid = isClockWise(tmpPoints);\n        solid = isCCW ? !solid : solid;\n\n        if (solid) {\n          if (!holesFirst && newShapes[mainIdx]) mainIdx++;\n          newShapes[mainIdx] = {\n            s: new Shape(),\n            p: tmpPoints\n          };\n          newShapes[mainIdx].s.curves = tmpPath.curves;\n          if (holesFirst) mainIdx++;\n          newShapeHoles[mainIdx] = []; //console.log('cw', i);\n        } else {\n          newShapeHoles[mainIdx].push({\n            h: tmpPath,\n            p: tmpPoints[0]\n          }); //console.log('ccw', i);\n        }\n      } // only Holes? -> probably all Shapes with wrong orientation\n\n\n      if (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n      if (newShapes.length > 1) {\n        var ambiguous = false;\n        var toChange = [];\n\n        for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n          betterShapeHoles[sIdx] = [];\n        }\n\n        for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n          var sho = newShapeHoles[sIdx];\n\n          for (var hIdx = 0; hIdx < sho.length; hIdx++) {\n            var ho = sho[hIdx];\n            var hole_unassigned = true;\n\n            for (var s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n              if (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n                if (sIdx !== s2Idx) toChange.push({\n                  froms: sIdx,\n                  tos: s2Idx,\n                  hole: hIdx\n                });\n\n                if (hole_unassigned) {\n                  hole_unassigned = false;\n                  betterShapeHoles[s2Idx].push(ho);\n                } else {\n                  ambiguous = true;\n                }\n              }\n            }\n\n            if (hole_unassigned) {\n              betterShapeHoles[sIdx].push(ho);\n            }\n          }\n        } // console.log(\"ambiguous: \", ambiguous);\n\n\n        if (toChange.length > 0) {\n          // console.log(\"to change: \", toChange);\n          if (!ambiguous) newShapeHoles = betterShapeHoles;\n        }\n      }\n\n      var tmpHoles;\n\n      for (var i = 0, il = newShapes.length; i < il; i++) {\n        tmpShape = newShapes[i].s;\n        shapes.push(tmpShape);\n        tmpHoles = newShapeHoles[i];\n\n        for (var j = 0, jl = tmpHoles.length; j < jl; j++) {\n          tmpShape.holes.push(tmpHoles[j].h);\n        }\n      } //console.log(\"shape\", shapes);\n\n\n      return shapes;\n    }\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Font(data) {\n    this.type = 'Font';\n    this.data = data;\n  }\n\n  Object.assign(Font.prototype, {\n    isFont: true,\n    generateShapes: function generateShapes(text, size) {\n      if (size === undefined) size = 100;\n      var shapes = [];\n      var paths = createPaths(text, size, this.data);\n\n      for (var p = 0, pl = paths.length; p < pl; p++) {\n        Array.prototype.push.apply(shapes, paths[p].toShapes());\n      }\n\n      return shapes;\n    }\n  });\n\n  function createPaths(text, size, data) {\n    var chars = Array.from ? Array.from(text) : String(text).split(''); // see #13988\n\n    var scale = size / data.resolution;\n    var line_height = (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale;\n    var paths = [];\n    var offsetX = 0,\n        offsetY = 0;\n\n    for (var i = 0; i < chars.length; i++) {\n      var char = chars[i];\n\n      if (char === '\\n') {\n        offsetX = 0;\n        offsetY -= line_height;\n      } else {\n        var ret = createPath(char, scale, offsetX, offsetY, data);\n        offsetX += ret.offsetX;\n        paths.push(ret.path);\n      }\n    }\n\n    return paths;\n  }\n\n  function createPath(char, scale, offsetX, offsetY, data) {\n    var glyph = data.glyphs[char] || data.glyphs['?'];\n    if (!glyph) return;\n    var path = new ShapePath();\n    var x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n    if (glyph.o) {\n      var outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n\n      for (var i = 0, l = outline.length; i < l;) {\n        var action = outline[i++];\n\n        switch (action) {\n          case 'm':\n            // moveTo\n            x = outline[i++] * scale + offsetX;\n            y = outline[i++] * scale + offsetY;\n            path.moveTo(x, y);\n            break;\n\n          case 'l':\n            // lineTo\n            x = outline[i++] * scale + offsetX;\n            y = outline[i++] * scale + offsetY;\n            path.lineTo(x, y);\n            break;\n\n          case 'q':\n            // quadraticCurveTo\n            cpx = outline[i++] * scale + offsetX;\n            cpy = outline[i++] * scale + offsetY;\n            cpx1 = outline[i++] * scale + offsetX;\n            cpy1 = outline[i++] * scale + offsetY;\n            path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n            break;\n\n          case 'b':\n            // bezierCurveTo\n            cpx = outline[i++] * scale + offsetX;\n            cpy = outline[i++] * scale + offsetY;\n            cpx1 = outline[i++] * scale + offsetX;\n            cpy1 = outline[i++] * scale + offsetY;\n            cpx2 = outline[i++] * scale + offsetX;\n            cpy2 = outline[i++] * scale + offsetY;\n            path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n            break;\n        }\n      }\n    }\n\n    return {\n      offsetX: glyph.ha * scale,\n      path: path\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function FontLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(FontLoader.prototype, {\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.load(url, function (text) {\n        var json;\n\n        try {\n          json = JSON.parse(text);\n        } catch (e) {\n          console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');\n          json = JSON.parse(text.substring(65, text.length - 2));\n        }\n\n        var font = scope.parse(json);\n        if (onLoad) onLoad(font);\n      }, onProgress, onError);\n    },\n    parse: function parse(json) {\n      return new Font(json);\n    },\n    setPath: function setPath(value) {\n      this.path = value;\n      return this;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function Loader() {}\n\n  Loader.Handlers = {\n    handlers: [],\n    add: function add(regex, loader) {\n      this.handlers.push(regex, loader);\n    },\n    get: function get(file) {\n      var handlers = this.handlers;\n\n      for (var i = 0, l = handlers.length; i < l; i += 2) {\n        var regex = handlers[i];\n        var loader = handlers[i + 1];\n\n        if (regex.test(file)) {\n          return loader;\n        }\n      }\n\n      return null;\n    }\n  };\n  Object.assign(Loader.prototype, {\n    crossOrigin: 'anonymous',\n    onLoadStart: function onLoadStart() {},\n    onLoadProgress: function onLoadProgress() {},\n    onLoadComplete: function onLoadComplete() {},\n    initMaterials: function initMaterials(materials, texturePath, crossOrigin) {\n      var array = [];\n\n      for (var i = 0; i < materials.length; ++i) {\n        array[i] = this.createMaterial(materials[i], texturePath, crossOrigin);\n      }\n\n      return array;\n    },\n    createMaterial: function () {\n      var BlendingMode = {\n        NoBlending: NoBlending,\n        NormalBlending: NormalBlending,\n        AdditiveBlending: AdditiveBlending,\n        SubtractiveBlending: SubtractiveBlending,\n        MultiplyBlending: MultiplyBlending,\n        CustomBlending: CustomBlending\n      };\n      var color = new Color();\n      var textureLoader = new TextureLoader();\n      var materialLoader = new MaterialLoader();\n      return function createMaterial(m, texturePath, crossOrigin) {\n        // convert from old material format\n        var textures = {};\n\n        function loadTexture(path, repeat, offset, wrap, anisotropy) {\n          var fullPath = texturePath + path;\n          var loader = Loader.Handlers.get(fullPath);\n          var texture;\n\n          if (loader !== null) {\n            texture = loader.load(fullPath);\n          } else {\n            textureLoader.setCrossOrigin(crossOrigin);\n            texture = textureLoader.load(fullPath);\n          }\n\n          if (repeat !== undefined) {\n            texture.repeat.fromArray(repeat);\n            if (repeat[0] !== 1) texture.wrapS = RepeatWrapping;\n            if (repeat[1] !== 1) texture.wrapT = RepeatWrapping;\n          }\n\n          if (offset !== undefined) {\n            texture.offset.fromArray(offset);\n          }\n\n          if (wrap !== undefined) {\n            if (wrap[0] === 'repeat') texture.wrapS = RepeatWrapping;\n            if (wrap[0] === 'mirror') texture.wrapS = MirroredRepeatWrapping;\n            if (wrap[1] === 'repeat') texture.wrapT = RepeatWrapping;\n            if (wrap[1] === 'mirror') texture.wrapT = MirroredRepeatWrapping;\n          }\n\n          if (anisotropy !== undefined) {\n            texture.anisotropy = anisotropy;\n          }\n\n          var uuid = _Math.generateUUID();\n\n          textures[uuid] = texture;\n          return uuid;\n        } //\n\n\n        var json = {\n          uuid: _Math.generateUUID(),\n          type: 'MeshLambertMaterial'\n        };\n\n        for (var name in m) {\n          var value = m[name];\n\n          switch (name) {\n            case 'DbgColor':\n            case 'DbgIndex':\n            case 'opticalDensity':\n            case 'illumination':\n              break;\n\n            case 'DbgName':\n              json.name = value;\n              break;\n\n            case 'blending':\n              json.blending = BlendingMode[value];\n              break;\n\n            case 'colorAmbient':\n            case 'mapAmbient':\n              console.warn('THREE.Loader.createMaterial:', name, 'is no longer supported.');\n              break;\n\n            case 'colorDiffuse':\n              json.color = color.fromArray(value).getHex();\n              break;\n\n            case 'colorSpecular':\n              json.specular = color.fromArray(value).getHex();\n              break;\n\n            case 'colorEmissive':\n              json.emissive = color.fromArray(value).getHex();\n              break;\n\n            case 'specularCoef':\n              json.shininess = value;\n              break;\n\n            case 'shading':\n              if (value.toLowerCase() === 'basic') json.type = 'MeshBasicMaterial';\n              if (value.toLowerCase() === 'phong') json.type = 'MeshPhongMaterial';\n              if (value.toLowerCase() === 'standard') json.type = 'MeshStandardMaterial';\n              break;\n\n            case 'mapDiffuse':\n              json.map = loadTexture(value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy);\n              break;\n\n            case 'mapDiffuseRepeat':\n            case 'mapDiffuseOffset':\n            case 'mapDiffuseWrap':\n            case 'mapDiffuseAnisotropy':\n              break;\n\n            case 'mapEmissive':\n              json.emissiveMap = loadTexture(value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy);\n              break;\n\n            case 'mapEmissiveRepeat':\n            case 'mapEmissiveOffset':\n            case 'mapEmissiveWrap':\n            case 'mapEmissiveAnisotropy':\n              break;\n\n            case 'mapLight':\n              json.lightMap = loadTexture(value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy);\n              break;\n\n            case 'mapLightRepeat':\n            case 'mapLightOffset':\n            case 'mapLightWrap':\n            case 'mapLightAnisotropy':\n              break;\n\n            case 'mapAO':\n              json.aoMap = loadTexture(value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy);\n              break;\n\n            case 'mapAORepeat':\n            case 'mapAOOffset':\n            case 'mapAOWrap':\n            case 'mapAOAnisotropy':\n              break;\n\n            case 'mapBump':\n              json.bumpMap = loadTexture(value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy);\n              break;\n\n            case 'mapBumpScale':\n              json.bumpScale = value;\n              break;\n\n            case 'mapBumpRepeat':\n            case 'mapBumpOffset':\n            case 'mapBumpWrap':\n            case 'mapBumpAnisotropy':\n              break;\n\n            case 'mapNormal':\n              json.normalMap = loadTexture(value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy);\n              break;\n\n            case 'mapNormalFactor':\n              json.normalScale = value;\n              break;\n\n            case 'mapNormalRepeat':\n            case 'mapNormalOffset':\n            case 'mapNormalWrap':\n            case 'mapNormalAnisotropy':\n              break;\n\n            case 'mapSpecular':\n              json.specularMap = loadTexture(value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy);\n              break;\n\n            case 'mapSpecularRepeat':\n            case 'mapSpecularOffset':\n            case 'mapSpecularWrap':\n            case 'mapSpecularAnisotropy':\n              break;\n\n            case 'mapMetalness':\n              json.metalnessMap = loadTexture(value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy);\n              break;\n\n            case 'mapMetalnessRepeat':\n            case 'mapMetalnessOffset':\n            case 'mapMetalnessWrap':\n            case 'mapMetalnessAnisotropy':\n              break;\n\n            case 'mapRoughness':\n              json.roughnessMap = loadTexture(value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy);\n              break;\n\n            case 'mapRoughnessRepeat':\n            case 'mapRoughnessOffset':\n            case 'mapRoughnessWrap':\n            case 'mapRoughnessAnisotropy':\n              break;\n\n            case 'mapAlpha':\n              json.alphaMap = loadTexture(value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy);\n              break;\n\n            case 'mapAlphaRepeat':\n            case 'mapAlphaOffset':\n            case 'mapAlphaWrap':\n            case 'mapAlphaAnisotropy':\n              break;\n\n            case 'flipSided':\n              json.side = BackSide;\n              break;\n\n            case 'doubleSided':\n              json.side = DoubleSide;\n              break;\n\n            case 'transparency':\n              console.warn('THREE.Loader.createMaterial: transparency has been renamed to opacity');\n              json.opacity = value;\n              break;\n\n            case 'depthTest':\n            case 'depthWrite':\n            case 'colorWrite':\n            case 'opacity':\n            case 'reflectivity':\n            case 'transparent':\n            case 'visible':\n            case 'wireframe':\n              json[name] = value;\n              break;\n\n            case 'vertexColors':\n              if (value === true) json.vertexColors = VertexColors;\n              if (value === 'face') json.vertexColors = FaceColors;\n              break;\n\n            default:\n              console.error('THREE.Loader.createMaterial: Unsupported', name, value);\n              break;\n          }\n        }\n\n        if (json.type === 'MeshBasicMaterial') delete json.emissive;\n        if (json.type !== 'MeshPhongMaterial') delete json.specular;\n        if (json.opacity < 1) json.transparent = true;\n        materialLoader.setTextures(textures);\n        return materialLoader.parse(json);\n      };\n    }()\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var context;\n  var AudioContext = {\n    getContext: function getContext() {\n      if (context === undefined) {\n        context = new (window.AudioContext || window.webkitAudioContext)();\n      }\n\n      return context;\n    },\n    setContext: function setContext(value) {\n      context = value;\n    }\n  };\n  /**\n   * @author Reece Aaron Lecrivain / http://reecenotes.com/\n   */\n\n  function AudioLoader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  }\n\n  Object.assign(AudioLoader.prototype, {\n    load: function load(url, onLoad, onProgress, onError) {\n      var loader = new FileLoader(this.manager);\n      loader.setResponseType('arraybuffer');\n      loader.setPath(this.path);\n      loader.load(url, function (buffer) {\n        // Create a copy of the buffer. The `decodeAudioData` method\n        // detaches the buffer when complete, preventing reuse.\n        var bufferCopy = buffer.slice(0);\n        var context = AudioContext.getContext();\n        context.decodeAudioData(bufferCopy, function (audioBuffer) {\n          onLoad(audioBuffer);\n        });\n      }, onProgress, onError);\n    },\n    setPath: function setPath(value) {\n      this.path = value;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function StereoCamera() {\n    this.type = 'StereoCamera';\n    this.aspect = 1;\n    this.eyeSep = 0.064;\n    this.cameraL = new PerspectiveCamera();\n    this.cameraL.layers.enable(1);\n    this.cameraL.matrixAutoUpdate = false;\n    this.cameraR = new PerspectiveCamera();\n    this.cameraR.layers.enable(2);\n    this.cameraR.matrixAutoUpdate = false;\n  }\n\n  Object.assign(StereoCamera.prototype, {\n    update: function () {\n      var instance, focus, fov, aspect, near, far, zoom, eyeSep;\n      var eyeRight = new Matrix4();\n      var eyeLeft = new Matrix4();\n      return function update(camera) {\n        var needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov || aspect !== camera.aspect * this.aspect || near !== camera.near || far !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n        if (needsUpdate) {\n          instance = this;\n          focus = camera.focus;\n          fov = camera.fov;\n          aspect = camera.aspect * this.aspect;\n          near = camera.near;\n          far = camera.far;\n          zoom = camera.zoom; // Off-axis stereoscopic effect based on\n          // http://paulbourke.net/stereographics/stereorender/\n\n          var projectionMatrix = camera.projectionMatrix.clone();\n          eyeSep = this.eyeSep / 2;\n          var eyeSepOnProjection = eyeSep * near / focus;\n          var ymax = near * Math.tan(_Math.DEG2RAD * fov * 0.5) / zoom;\n          var xmin, xmax; // translate xOffset\n\n          eyeLeft.elements[12] = -eyeSep;\n          eyeRight.elements[12] = eyeSep; // for left eye\n\n          xmin = -ymax * aspect + eyeSepOnProjection;\n          xmax = ymax * aspect + eyeSepOnProjection;\n          projectionMatrix.elements[0] = 2 * near / (xmax - xmin);\n          projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n          this.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\n\n          xmin = -ymax * aspect - eyeSepOnProjection;\n          xmax = ymax * aspect - eyeSepOnProjection;\n          projectionMatrix.elements[0] = 2 * near / (xmax - xmin);\n          projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n          this.cameraR.projectionMatrix.copy(projectionMatrix);\n        }\n\n        this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(eyeLeft);\n        this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(eyeRight);\n      };\n    }()\n  });\n  /**\n   * Camera for rendering cube maps\n   *\t- renders scene into axis-aligned cube\n   *\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function CubeCamera(near, far, cubeResolution, options) {\n    Object3D.call(this);\n    this.type = 'CubeCamera';\n    var fov = 90,\n        aspect = 1;\n    var cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPX.up.set(0, -1, 0);\n    cameraPX.lookAt(new Vector3(1, 0, 0));\n    this.add(cameraPX);\n    var cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNX.up.set(0, -1, 0);\n    cameraNX.lookAt(new Vector3(-1, 0, 0));\n    this.add(cameraNX);\n    var cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPY.up.set(0, 0, 1);\n    cameraPY.lookAt(new Vector3(0, 1, 0));\n    this.add(cameraPY);\n    var cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNY.up.set(0, 0, -1);\n    cameraNY.lookAt(new Vector3(0, -1, 0));\n    this.add(cameraNY);\n    var cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPZ.up.set(0, -1, 0);\n    cameraPZ.lookAt(new Vector3(0, 0, 1));\n    this.add(cameraPZ);\n    var cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNZ.up.set(0, -1, 0);\n    cameraNZ.lookAt(new Vector3(0, 0, -1));\n    this.add(cameraNZ);\n    options = options || {\n      format: RGBFormat,\n      magFilter: LinearFilter,\n      minFilter: LinearFilter\n    };\n    this.renderTarget = new WebGLRenderTargetCube(cubeResolution, cubeResolution, options);\n    this.renderTarget.texture.name = \"CubeCamera\";\n\n    this.update = function (renderer, scene) {\n      if (this.parent === null) this.updateMatrixWorld();\n      var renderTarget = this.renderTarget;\n      var generateMipmaps = renderTarget.texture.generateMipmaps;\n      renderTarget.texture.generateMipmaps = false;\n      renderTarget.activeCubeFace = 0;\n      renderer.render(scene, cameraPX, renderTarget);\n      renderTarget.activeCubeFace = 1;\n      renderer.render(scene, cameraNX, renderTarget);\n      renderTarget.activeCubeFace = 2;\n      renderer.render(scene, cameraPY, renderTarget);\n      renderTarget.activeCubeFace = 3;\n      renderer.render(scene, cameraNY, renderTarget);\n      renderTarget.activeCubeFace = 4;\n      renderer.render(scene, cameraPZ, renderTarget);\n      renderTarget.texture.generateMipmaps = generateMipmaps;\n      renderTarget.activeCubeFace = 5;\n      renderer.render(scene, cameraNZ, renderTarget);\n      renderer.setRenderTarget(null);\n    };\n\n    this.clear = function (renderer, color, depth, stencil) {\n      var renderTarget = this.renderTarget;\n\n      for (var i = 0; i < 6; i++) {\n        renderTarget.activeCubeFace = i;\n        renderer.setRenderTarget(renderTarget);\n        renderer.clear(color, depth, stencil);\n      }\n\n      renderer.setRenderTarget(null);\n    };\n  }\n\n  CubeCamera.prototype = Object.create(Object3D.prototype);\n  CubeCamera.prototype.constructor = CubeCamera;\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function Clock(autoStart) {\n    this.autoStart = autoStart !== undefined ? autoStart : true;\n    this.startTime = 0;\n    this.oldTime = 0;\n    this.elapsedTime = 0;\n    this.running = false;\n  }\n\n  Object.assign(Clock.prototype, {\n    start: function start() {\n      this.startTime = (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\n\n      this.oldTime = this.startTime;\n      this.elapsedTime = 0;\n      this.running = true;\n    },\n    stop: function stop() {\n      this.getElapsedTime();\n      this.running = false;\n      this.autoStart = false;\n    },\n    getElapsedTime: function getElapsedTime() {\n      this.getDelta();\n      return this.elapsedTime;\n    },\n    getDelta: function getDelta() {\n      var diff = 0;\n\n      if (this.autoStart && !this.running) {\n        this.start();\n        return 0;\n      }\n\n      if (this.running) {\n        var newTime = (typeof performance === 'undefined' ? Date : performance).now();\n        diff = (newTime - this.oldTime) / 1000;\n        this.oldTime = newTime;\n        this.elapsedTime += diff;\n      }\n\n      return diff;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function AudioListener() {\n    Object3D.call(this);\n    this.type = 'AudioListener';\n    this.context = AudioContext.getContext();\n    this.gain = this.context.createGain();\n    this.gain.connect(this.context.destination);\n    this.filter = null;\n    this.timeDelta = 0;\n  }\n\n  AudioListener.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: AudioListener,\n    getInput: function getInput() {\n      return this.gain;\n    },\n    removeFilter: function removeFilter() {\n      if (this.filter !== null) {\n        this.gain.disconnect(this.filter);\n        this.filter.disconnect(this.context.destination);\n        this.gain.connect(this.context.destination);\n        this.filter = null;\n      }\n\n      return this;\n    },\n    getFilter: function getFilter() {\n      return this.filter;\n    },\n    setFilter: function setFilter(value) {\n      if (this.filter !== null) {\n        this.gain.disconnect(this.filter);\n        this.filter.disconnect(this.context.destination);\n      } else {\n        this.gain.disconnect(this.context.destination);\n      }\n\n      this.filter = value;\n      this.gain.connect(this.filter);\n      this.filter.connect(this.context.destination);\n      return this;\n    },\n    getMasterVolume: function getMasterVolume() {\n      return this.gain.gain.value;\n    },\n    setMasterVolume: function setMasterVolume(value) {\n      this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n      return this;\n    },\n    updateMatrixWorld: function () {\n      var position = new Vector3();\n      var quaternion = new Quaternion();\n      var scale = new Vector3();\n      var orientation = new Vector3();\n      var clock = new Clock();\n      return function updateMatrixWorld(force) {\n        Object3D.prototype.updateMatrixWorld.call(this, force);\n        var listener = this.context.listener;\n        var up = this.up;\n        this.timeDelta = clock.getDelta();\n        this.matrixWorld.decompose(position, quaternion, scale);\n        orientation.set(0, 0, -1).applyQuaternion(quaternion);\n\n        if (listener.positionX) {\n          // code path for Chrome (see #14393)\n          var endTime = this.context.currentTime + this.timeDelta;\n          listener.positionX.linearRampToValueAtTime(position.x, endTime);\n          listener.positionY.linearRampToValueAtTime(position.y, endTime);\n          listener.positionZ.linearRampToValueAtTime(position.z, endTime);\n          listener.forwardX.linearRampToValueAtTime(orientation.x, endTime);\n          listener.forwardY.linearRampToValueAtTime(orientation.y, endTime);\n          listener.forwardZ.linearRampToValueAtTime(orientation.z, endTime);\n          listener.upX.linearRampToValueAtTime(up.x, endTime);\n          listener.upY.linearRampToValueAtTime(up.y, endTime);\n          listener.upZ.linearRampToValueAtTime(up.z, endTime);\n        } else {\n          listener.setPosition(position.x, position.y, position.z);\n          listener.setOrientation(orientation.x, orientation.y, orientation.z, up.x, up.y, up.z);\n        }\n      };\n    }()\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Reece Aaron Lecrivain / http://reecenotes.com/\n   */\n\n  function Audio(listener) {\n    Object3D.call(this);\n    this.type = 'Audio';\n    this.listener = listener;\n    this.context = listener.context;\n    this.gain = this.context.createGain();\n    this.gain.connect(listener.getInput());\n    this.autoplay = false;\n    this.buffer = null;\n    this.detune = 0;\n    this.loop = false;\n    this.startTime = 0;\n    this.offset = 0;\n    this.playbackRate = 1;\n    this.isPlaying = false;\n    this.hasPlaybackControl = true;\n    this.sourceType = 'empty';\n    this.filters = [];\n  }\n\n  Audio.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Audio,\n    getOutput: function getOutput() {\n      return this.gain;\n    },\n    setNodeSource: function setNodeSource(audioNode) {\n      this.hasPlaybackControl = false;\n      this.sourceType = 'audioNode';\n      this.source = audioNode;\n      this.connect();\n      return this;\n    },\n    setMediaElementSource: function setMediaElementSource(mediaElement) {\n      this.hasPlaybackControl = false;\n      this.sourceType = 'mediaNode';\n      this.source = this.context.createMediaElementSource(mediaElement);\n      this.connect();\n      return this;\n    },\n    setBuffer: function setBuffer(audioBuffer) {\n      this.buffer = audioBuffer;\n      this.sourceType = 'buffer';\n      if (this.autoplay) this.play();\n      return this;\n    },\n    play: function play() {\n      if (this.isPlaying === true) {\n        console.warn('THREE.Audio: Audio is already playing.');\n        return;\n      }\n\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      var source = this.context.createBufferSource();\n      source.buffer = this.buffer;\n      source.detune.value = this.detune;\n      source.loop = this.loop;\n      source.onended = this.onEnded.bind(this);\n      source.playbackRate.setValueAtTime(this.playbackRate, this.startTime);\n      this.startTime = this.context.currentTime;\n      source.start(this.startTime, this.offset);\n      this.isPlaying = true;\n      this.source = source;\n      return this.connect();\n    },\n    pause: function pause() {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      if (this.isPlaying === true) {\n        this.source.stop();\n        this.source.onended = null;\n        this.offset += (this.context.currentTime - this.startTime) * this.playbackRate;\n        this.isPlaying = false;\n      }\n\n      return this;\n    },\n    stop: function stop() {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.source.stop();\n      this.source.onended = null;\n      this.offset = 0;\n      this.isPlaying = false;\n      return this;\n    },\n    connect: function connect() {\n      if (this.filters.length > 0) {\n        this.source.connect(this.filters[0]);\n\n        for (var i = 1, l = this.filters.length; i < l; i++) {\n          this.filters[i - 1].connect(this.filters[i]);\n        }\n\n        this.filters[this.filters.length - 1].connect(this.getOutput());\n      } else {\n        this.source.connect(this.getOutput());\n      }\n\n      return this;\n    },\n    disconnect: function disconnect() {\n      if (this.filters.length > 0) {\n        this.source.disconnect(this.filters[0]);\n\n        for (var i = 1, l = this.filters.length; i < l; i++) {\n          this.filters[i - 1].disconnect(this.filters[i]);\n        }\n\n        this.filters[this.filters.length - 1].disconnect(this.getOutput());\n      } else {\n        this.source.disconnect(this.getOutput());\n      }\n\n      return this;\n    },\n    getFilters: function getFilters() {\n      return this.filters;\n    },\n    setFilters: function setFilters(value) {\n      if (!value) value = [];\n\n      if (this.isPlaying === true) {\n        this.disconnect();\n        this.filters = value;\n        this.connect();\n      } else {\n        this.filters = value;\n      }\n\n      return this;\n    },\n    setDetune: function setDetune(value) {\n      this.detune = value;\n\n      if (this.isPlaying === true) {\n        this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01);\n      }\n\n      return this;\n    },\n    getDetune: function getDetune() {\n      return this.detune;\n    },\n    getFilter: function getFilter() {\n      return this.getFilters()[0];\n    },\n    setFilter: function setFilter(filter) {\n      return this.setFilters(filter ? [filter] : []);\n    },\n    setPlaybackRate: function setPlaybackRate(value) {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.playbackRate = value;\n\n      if (this.isPlaying === true) {\n        this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01);\n      }\n\n      return this;\n    },\n    getPlaybackRate: function getPlaybackRate() {\n      return this.playbackRate;\n    },\n    onEnded: function onEnded() {\n      this.isPlaying = false;\n    },\n    getLoop: function getLoop() {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return false;\n      }\n\n      return this.loop;\n    },\n    setLoop: function setLoop(value) {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.loop = value;\n\n      if (this.isPlaying === true) {\n        this.source.loop = this.loop;\n      }\n\n      return this;\n    },\n    getVolume: function getVolume() {\n      return this.gain.gain.value;\n    },\n    setVolume: function setVolume(value) {\n      this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function PositionalAudio(listener) {\n    Audio.call(this, listener);\n    this.panner = this.context.createPanner();\n    this.panner.connect(this.gain);\n  }\n\n  PositionalAudio.prototype = Object.assign(Object.create(Audio.prototype), {\n    constructor: PositionalAudio,\n    getOutput: function getOutput() {\n      return this.panner;\n    },\n    getRefDistance: function getRefDistance() {\n      return this.panner.refDistance;\n    },\n    setRefDistance: function setRefDistance(value) {\n      this.panner.refDistance = value;\n      return this;\n    },\n    getRolloffFactor: function getRolloffFactor() {\n      return this.panner.rolloffFactor;\n    },\n    setRolloffFactor: function setRolloffFactor(value) {\n      this.panner.rolloffFactor = value;\n      return this;\n    },\n    getDistanceModel: function getDistanceModel() {\n      return this.panner.distanceModel;\n    },\n    setDistanceModel: function setDistanceModel(value) {\n      this.panner.distanceModel = value;\n      return this;\n    },\n    getMaxDistance: function getMaxDistance() {\n      return this.panner.maxDistance;\n    },\n    setMaxDistance: function setMaxDistance(value) {\n      this.panner.maxDistance = value;\n      return this;\n    },\n    setDirectionalCone: function setDirectionalCone(coneInnerAngle, coneOuterAngle, coneOuterGain) {\n      this.panner.coneInnerAngle = coneInnerAngle;\n      this.panner.coneOuterAngle = coneOuterAngle;\n      this.panner.coneOuterGain = coneOuterGain;\n      return this;\n    },\n    updateMatrixWorld: function () {\n      var position = new Vector3();\n      var quaternion = new Quaternion();\n      var scale = new Vector3();\n      var orientation = new Vector3();\n      return function updateMatrixWorld(force) {\n        Object3D.prototype.updateMatrixWorld.call(this, force);\n        if (this.isPlaying === false) return;\n        this.matrixWorld.decompose(position, quaternion, scale);\n        orientation.set(0, 0, 1).applyQuaternion(quaternion);\n        var panner = this.panner;\n\n        if (panner.positionX) {\n          // code path for Chrome and Firefox (see #14393)\n          var endTime = this.context.currentTime + this.listener.timeDelta;\n          panner.positionX.linearRampToValueAtTime(position.x, endTime);\n          panner.positionY.linearRampToValueAtTime(position.y, endTime);\n          panner.positionZ.linearRampToValueAtTime(position.z, endTime);\n          panner.orientationX.linearRampToValueAtTime(orientation.x, endTime);\n          panner.orientationY.linearRampToValueAtTime(orientation.y, endTime);\n          panner.orientationZ.linearRampToValueAtTime(orientation.z, endTime);\n        } else {\n          panner.setPosition(position.x, position.y, position.z);\n          panner.setOrientation(orientation.x, orientation.y, orientation.z);\n        }\n      };\n    }()\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function AudioAnalyser(audio, fftSize) {\n    this.analyser = audio.context.createAnalyser();\n    this.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n    this.data = new Uint8Array(this.analyser.frequencyBinCount);\n    audio.getOutput().connect(this.analyser);\n  }\n\n  Object.assign(AudioAnalyser.prototype, {\n    getFrequencyData: function getFrequencyData() {\n      this.analyser.getByteFrequencyData(this.data);\n      return this.data;\n    },\n    getAverageFrequency: function getAverageFrequency() {\n      var value = 0,\n          data = this.getFrequencyData();\n\n      for (var i = 0; i < data.length; i++) {\n        value += data[i];\n      }\n\n      return value / data.length;\n    }\n  });\n  /**\n   *\n   * Buffered scene graph property that allows weighted accumulation.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function PropertyMixer(binding, typeName, valueSize) {\n    this.binding = binding;\n    this.valueSize = valueSize;\n    var bufferType = Float64Array,\n        mixFunction;\n\n    switch (typeName) {\n      case 'quaternion':\n        mixFunction = this._slerp;\n        break;\n\n      case 'string':\n      case 'bool':\n        bufferType = Array;\n        mixFunction = this._select;\n        break;\n\n      default:\n        mixFunction = this._lerp;\n    }\n\n    this.buffer = new bufferType(valueSize * 4); // layout: [ incoming | accu0 | accu1 | orig ]\n    //\n    // interpolators can use .buffer as their .result\n    // the data then goes to 'incoming'\n    //\n    // 'accu0' and 'accu1' are used frame-interleaved for\n    // the cumulative result and are compared to detect\n    // changes\n    //\n    // 'orig' stores the original state of the property\n\n    this._mixBufferRegion = mixFunction;\n    this.cumulativeWeight = 0;\n    this.useCount = 0;\n    this.referenceCount = 0;\n  }\n\n  Object.assign(PropertyMixer.prototype, {\n    // accumulate data in the 'incoming' region into 'accu<i>'\n    accumulate: function accumulate(accuIndex, weight) {\n      // note: happily accumulating nothing when weight = 0, the caller knows\n      // the weight and shouldn't have made the call in the first place\n      var buffer = this.buffer,\n          stride = this.valueSize,\n          offset = accuIndex * stride + stride,\n          currentWeight = this.cumulativeWeight;\n\n      if (currentWeight === 0) {\n        // accuN := incoming * weight\n        for (var i = 0; i !== stride; ++i) {\n          buffer[offset + i] = buffer[i];\n        }\n\n        currentWeight = weight;\n      } else {\n        // accuN := accuN + incoming * weight\n        currentWeight += weight;\n        var mix = weight / currentWeight;\n\n        this._mixBufferRegion(buffer, offset, 0, mix, stride);\n      }\n\n      this.cumulativeWeight = currentWeight;\n    },\n    // apply the state of 'accu<i>' to the binding when accus differ\n    apply: function apply(accuIndex) {\n      var stride = this.valueSize,\n          buffer = this.buffer,\n          offset = accuIndex * stride + stride,\n          weight = this.cumulativeWeight,\n          binding = this.binding;\n      this.cumulativeWeight = 0;\n\n      if (weight < 1) {\n        // accuN := accuN + original * ( 1 - cumulativeWeight )\n        var originalValueOffset = stride * 3;\n\n        this._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n      }\n\n      for (var i = stride, e = stride + stride; i !== e; ++i) {\n        if (buffer[i] !== buffer[i + stride]) {\n          // value has changed -> update scene graph\n          binding.setValue(buffer, offset);\n          break;\n        }\n      }\n    },\n    // remember the state of the bound property and copy it to both accus\n    saveOriginalState: function saveOriginalState() {\n      var binding = this.binding;\n      var buffer = this.buffer,\n          stride = this.valueSize,\n          originalValueOffset = stride * 3;\n      binding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n      for (var i = stride, e = originalValueOffset; i !== e; ++i) {\n        buffer[i] = buffer[originalValueOffset + i % stride];\n      }\n\n      this.cumulativeWeight = 0;\n    },\n    // apply the state previously taken via 'saveOriginalState' to the binding\n    restoreOriginalState: function restoreOriginalState() {\n      var originalValueOffset = this.valueSize * 3;\n      this.binding.setValue(this.buffer, originalValueOffset);\n    },\n    // mix functions\n    _select: function _select(buffer, dstOffset, srcOffset, t, stride) {\n      if (t >= 0.5) {\n        for (var i = 0; i !== stride; ++i) {\n          buffer[dstOffset + i] = buffer[srcOffset + i];\n        }\n      }\n    },\n    _slerp: function _slerp(buffer, dstOffset, srcOffset, t) {\n      Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n    },\n    _lerp: function _lerp(buffer, dstOffset, srcOffset, t, stride) {\n      var s = 1 - t;\n\n      for (var i = 0; i !== stride; ++i) {\n        var j = dstOffset + i;\n        buffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n      }\n    }\n  });\n  /**\n   *\n   * A reference to a real property in the scene graph.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n  // Characters [].:/ are reserved for track binding syntax.\n\n  var RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\n  function Composite(targetGroup, path, optionalParsedPath) {\n    var parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\n    this._targetGroup = targetGroup;\n    this._bindings = targetGroup.subscribe_(path, parsedPath);\n  }\n\n  Object.assign(Composite.prototype, {\n    getValue: function getValue(array, offset) {\n      this.bind(); // bind all binding\n\n      var firstValidIndex = this._targetGroup.nCachedObjects_,\n          binding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n      if (binding !== undefined) binding.getValue(array, offset);\n    },\n    setValue: function setValue(array, offset) {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].setValue(array, offset);\n      }\n    },\n    bind: function bind() {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].bind();\n      }\n    },\n    unbind: function unbind() {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].unbind();\n      }\n    }\n  });\n\n  function PropertyBinding(rootNode, path, parsedPath) {\n    this.path = path;\n    this.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n    this.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n    this.rootNode = rootNode;\n  }\n\n  Object.assign(PropertyBinding, {\n    Composite: Composite,\n    create: function create(root, path, parsedPath) {\n      if (!(root && root.isAnimationObjectGroup)) {\n        return new PropertyBinding(root, path, parsedPath);\n      } else {\n        return new PropertyBinding.Composite(root, path, parsedPath);\n      }\n    },\n\n    /**\n     * Replaces spaces with underscores and removes unsupported characters from\n     * node names, to ensure compatibility with parseTrackName().\n     *\n     * @param  {string} name Node name to be sanitized.\n     * @return {string}\n     */\n    sanitizeNodeName: function () {\n      var reservedRe = new RegExp('[' + RESERVED_CHARS_RE + ']', 'g');\n      return function sanitizeNodeName(name) {\n        return name.replace(/\\s/g, '_').replace(reservedRe, '');\n      };\n    }(),\n    parseTrackName: function () {\n      // Attempts to allow node names from any language. ES5's `\\w` regexp matches\n      // only latin characters, and the unicode \\p{L} is not yet supported. So\n      // instead, we exclude reserved characters and match everything else.\n      var wordChar = '[^' + RESERVED_CHARS_RE + ']';\n      var wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace('\\\\.', '') + ']'; // Parent directories, delimited by '/' or ':'. Currently unused, but must\n      // be matched to parse the rest of the track name.\n\n      var directoryRe = /((?:WC+[\\/:])*)/.source.replace('WC', wordChar); // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\n      var nodeRe = /(WCOD+)?/.source.replace('WCOD', wordCharOrDot); // Object on target node, and accessor. May not contain reserved\n      // characters. Accessor may contain any character except closing bracket.\n\n      var objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC', wordChar); // Property and accessor. May not contain reserved characters. Accessor may\n      // contain any non-bracket characters.\n\n      var propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC', wordChar);\n      var trackRe = new RegExp('' + '^' + directoryRe + nodeRe + objectRe + propertyRe + '$');\n      var supportedObjectNames = ['material', 'materials', 'bones'];\n      return function parseTrackName(trackName) {\n        var matches = trackRe.exec(trackName);\n\n        if (!matches) {\n          throw new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\n        }\n\n        var results = {\n          // directoryName: matches[ 1 ], // (tschw) currently unused\n          nodeName: matches[2],\n          objectName: matches[3],\n          objectIndex: matches[4],\n          propertyName: matches[5],\n          // required\n          propertyIndex: matches[6]\n        };\n        var lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\n\n        if (lastDot !== undefined && lastDot !== -1) {\n          var objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against a whitelist. Otherwise, there\n          // is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n          // 'bar' could be the objectName, or part of a nodeName (which can\n          // include '.' characters).\n\n          if (supportedObjectNames.indexOf(objectName) !== -1) {\n            results.nodeName = results.nodeName.substring(0, lastDot);\n            results.objectName = objectName;\n          }\n        }\n\n        if (results.propertyName === null || results.propertyName.length === 0) {\n          throw new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\n        }\n\n        return results;\n      };\n    }(),\n    findNode: function findNode(root, nodeName) {\n      if (!nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n        return root;\n      } // search into skeleton bones.\n\n\n      if (root.skeleton) {\n        var bone = root.skeleton.getBoneByName(nodeName);\n\n        if (bone !== undefined) {\n          return bone;\n        }\n      } // search into node subtree.\n\n\n      if (root.children) {\n        var searchNodeSubtree = function searchNodeSubtree(children) {\n          for (var i = 0; i < children.length; i++) {\n            var childNode = children[i];\n\n            if (childNode.name === nodeName || childNode.uuid === nodeName) {\n              return childNode;\n            }\n\n            var result = searchNodeSubtree(childNode.children);\n            if (result) return result;\n          }\n\n          return null;\n        };\n\n        var subTreeNode = searchNodeSubtree(root.children);\n\n        if (subTreeNode) {\n          return subTreeNode;\n        }\n      }\n\n      return null;\n    }\n  });\n  Object.assign(PropertyBinding.prototype, {\n    // prototype, continued\n    // these are used to \"bind\" a nonexistent property\n    _getValue_unavailable: function _getValue_unavailable() {},\n    _setValue_unavailable: function _setValue_unavailable() {},\n    BindingType: {\n      Direct: 0,\n      EntireArray: 1,\n      ArrayElement: 2,\n      HasFromToArray: 3\n    },\n    Versioning: {\n      None: 0,\n      NeedsUpdate: 1,\n      MatrixWorldNeedsUpdate: 2\n    },\n    GetterByBindingType: [function getValue_direct(buffer, offset) {\n      buffer[offset] = this.node[this.propertyName];\n    }, function getValue_array(buffer, offset) {\n      var source = this.resolvedProperty;\n\n      for (var i = 0, n = source.length; i !== n; ++i) {\n        buffer[offset++] = source[i];\n      }\n    }, function getValue_arrayElement(buffer, offset) {\n      buffer[offset] = this.resolvedProperty[this.propertyIndex];\n    }, function getValue_toArray(buffer, offset) {\n      this.resolvedProperty.toArray(buffer, offset);\n    }],\n    SetterByBindingTypeAndVersioning: [[// Direct\n    function setValue_direct(buffer, offset) {\n      this.targetObject[this.propertyName] = buffer[offset];\n    }, function setValue_direct_setNeedsUpdate(buffer, offset) {\n      this.targetObject[this.propertyName] = buffer[offset];\n      this.targetObject.needsUpdate = true;\n    }, function setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.targetObject[this.propertyName] = buffer[offset];\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }], [// EntireArray\n    function setValue_array(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n    }, function setValue_array_setNeedsUpdate(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n\n      this.targetObject.needsUpdate = true;\n    }, function setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }], [// ArrayElement\n    function setValue_arrayElement(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    }, function setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n      this.targetObject.needsUpdate = true;\n    }, function setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }], [// HasToFromArray\n    function setValue_fromArray(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n    }, function setValue_fromArray_setNeedsUpdate(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n      this.targetObject.needsUpdate = true;\n    }, function setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }]],\n    getValue: function getValue_unbound(targetArray, offset) {\n      this.bind();\n      this.getValue(targetArray, offset); // Note: This class uses a State pattern on a per-method basis:\n      // 'bind' sets 'this.getValue' / 'setValue' and shadows the\n      // prototype version of these methods with one that represents\n      // the bound state. When the property is not found, the methods\n      // become no-ops.\n    },\n    setValue: function getValue_unbound(sourceArray, offset) {\n      this.bind();\n      this.setValue(sourceArray, offset);\n    },\n    // create getter / setter pair for a property in the scene graph\n    bind: function bind() {\n      var targetObject = this.node,\n          parsedPath = this.parsedPath,\n          objectName = parsedPath.objectName,\n          propertyName = parsedPath.propertyName,\n          propertyIndex = parsedPath.propertyIndex;\n\n      if (!targetObject) {\n        targetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n        this.node = targetObject;\n      } // set fail state so we can just 'return' on error\n\n\n      this.getValue = this._getValue_unavailable;\n      this.setValue = this._setValue_unavailable; // ensure there is a value node\n\n      if (!targetObject) {\n        console.error('THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.');\n        return;\n      }\n\n      if (objectName) {\n        var objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n        switch (objectName) {\n          case 'materials':\n            if (!targetObject.material) {\n              console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\n              return;\n            }\n\n            if (!targetObject.material.materials) {\n              console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\n              return;\n            }\n\n            targetObject = targetObject.material.materials;\n            break;\n\n          case 'bones':\n            if (!targetObject.skeleton) {\n              console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\n              return;\n            } // potential future optimization: skip this if propertyIndex is already an integer\n            // and convert the integer string to a true integer.\n\n\n            targetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n            for (var i = 0; i < targetObject.length; i++) {\n              if (targetObject[i].name === objectIndex) {\n                objectIndex = i;\n                break;\n              }\n            }\n\n            break;\n\n          default:\n            if (targetObject[objectName] === undefined) {\n              console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\n              return;\n            }\n\n            targetObject = targetObject[objectName];\n        }\n\n        if (objectIndex !== undefined) {\n          if (targetObject[objectIndex] === undefined) {\n            console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\n            return;\n          }\n\n          targetObject = targetObject[objectIndex];\n        }\n      } // resolve property\n\n\n      var nodeProperty = targetObject[propertyName];\n\n      if (nodeProperty === undefined) {\n        var nodeName = parsedPath.nodeName;\n        console.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\n        return;\n      } // determine versioning scheme\n\n\n      var versioning = this.Versioning.None;\n      this.targetObject = targetObject;\n\n      if (targetObject.needsUpdate !== undefined) {\n        // material\n        versioning = this.Versioning.NeedsUpdate;\n      } else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n        // node transform\n        versioning = this.Versioning.MatrixWorldNeedsUpdate;\n      } // determine how the property gets bound\n\n\n      var bindingType = this.BindingType.Direct;\n\n      if (propertyIndex !== undefined) {\n        // access a sub element of the property array (only primitives are supported right now)\n        if (propertyName === \"morphTargetInfluences\") {\n          // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n          // support resolving morphTarget names into indices.\n          if (!targetObject.geometry) {\n            console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\n            return;\n          }\n\n          if (targetObject.geometry.isBufferGeometry) {\n            if (!targetObject.geometry.morphAttributes) {\n              console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\n              return;\n            }\n\n            for (var i = 0; i < this.node.geometry.morphAttributes.position.length; i++) {\n              if (targetObject.geometry.morphAttributes.position[i].name === propertyIndex) {\n                propertyIndex = i;\n                break;\n              }\n            }\n          } else {\n            if (!targetObject.geometry.morphTargets) {\n              console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this);\n              return;\n            }\n\n            for (var i = 0; i < this.node.geometry.morphTargets.length; i++) {\n              if (targetObject.geometry.morphTargets[i].name === propertyIndex) {\n                propertyIndex = i;\n                break;\n              }\n            }\n          }\n        }\n\n        bindingType = this.BindingType.ArrayElement;\n        this.resolvedProperty = nodeProperty;\n        this.propertyIndex = propertyIndex;\n      } else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n        // must use copy for Object3D.Euler/Quaternion\n        bindingType = this.BindingType.HasFromToArray;\n        this.resolvedProperty = nodeProperty;\n      } else if (Array.isArray(nodeProperty)) {\n        bindingType = this.BindingType.EntireArray;\n        this.resolvedProperty = nodeProperty;\n      } else {\n        this.propertyName = propertyName;\n      } // select getter / setter\n\n\n      this.getValue = this.GetterByBindingType[bindingType];\n      this.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n    },\n    unbind: function unbind() {\n      this.node = null; // back to the prototype version of getValue / setValue\n      // note: avoiding to mutate the shape of 'this' via 'delete'\n\n      this.getValue = this._getValue_unbound;\n      this.setValue = this._setValue_unbound;\n    }\n  }); //!\\ DECLARE ALIAS AFTER assign prototype !\n\n  Object.assign(PropertyBinding.prototype, {\n    // initial state of these methods that calls 'bind'\n    _getValue_unbound: PropertyBinding.prototype.getValue,\n    _setValue_unbound: PropertyBinding.prototype.setValue\n  });\n  /**\n   *\n   * A group of objects that receives a shared animation state.\n   *\n   * Usage:\n   *\n   *  - Add objects you would otherwise pass as 'root' to the\n   *    constructor or the .clipAction method of AnimationMixer.\n   *\n   *  - Instead pass this object as 'root'.\n   *\n   *  - You can also add and remove objects later when the mixer\n   *    is running.\n   *\n   * Note:\n   *\n   *    Objects of this class appear as one object to the mixer,\n   *    so cache control of the individual objects must be done\n   *    on the group.\n   *\n   * Limitation:\n   *\n   *  - The animated properties must be compatible among the\n   *    all objects in the group.\n   *\n   *  - A single property can either be controlled through a\n   *    target group or directly, but not both.\n   *\n   * @author tschw\n   */\n\n  function AnimationObjectGroup() {\n    this.uuid = _Math.generateUUID(); // cached objects followed by the active ones\n\n    this._objects = Array.prototype.slice.call(arguments);\n    this.nCachedObjects_ = 0; // threshold\n    // note: read by PropertyBinding.Composite\n\n    var indices = {};\n    this._indicesByUUID = indices; // for bookkeeping\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      indices[arguments[i].uuid] = i;\n    }\n\n    this._paths = []; // inside: string\n\n    this._parsedPaths = []; // inside: { we don't care, here }\n\n    this._bindings = []; // inside: Array< PropertyBinding >\n\n    this._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n    var scope = this;\n    this.stats = {\n      objects: {\n        get total() {\n          return scope._objects.length;\n        },\n\n        get inUse() {\n          return this.total - scope.nCachedObjects_;\n        }\n\n      },\n\n      get bindingsPerObject() {\n        return scope._bindings.length;\n      }\n\n    };\n  }\n\n  Object.assign(AnimationObjectGroup.prototype, {\n    isAnimationObjectGroup: true,\n    add: function add() {\n      var objects = this._objects,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_,\n          indicesByUUID = this._indicesByUUID,\n          paths = this._paths,\n          parsedPaths = this._parsedPaths,\n          bindings = this._bindings,\n          nBindings = bindings.length,\n          knownObject = undefined;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid];\n\n        if (index === undefined) {\n          // unknown object -> add it to the ACTIVE region\n          index = nObjects++;\n          indicesByUUID[uuid] = index;\n          objects.push(object); // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            bindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\n          }\n        } else if (index < nCachedObjects) {\n          knownObject = objects[index]; // move existing object to the ACTIVE region\n\n          var firstActiveIndex = --nCachedObjects,\n              lastCachedObject = objects[firstActiveIndex];\n          indicesByUUID[lastCachedObject.uuid] = index;\n          objects[index] = lastCachedObject;\n          indicesByUUID[uuid] = firstActiveIndex;\n          objects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j],\n                lastCached = bindingsForPath[firstActiveIndex],\n                binding = bindingsForPath[index];\n            bindingsForPath[index] = lastCached;\n\n            if (binding === undefined) {\n              // since we do not bother to create new bindings\n              // for objects that are cached, the binding may\n              // or may not exist\n              binding = new PropertyBinding(object, paths[j], parsedPaths[j]);\n            }\n\n            bindingsForPath[firstActiveIndex] = binding;\n          }\n        } else if (objects[index] !== knownObject) {\n          console.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\n        } // else the object is already where we want it to be\n\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    },\n    remove: function remove() {\n      var objects = this._objects,\n          nCachedObjects = this.nCachedObjects_,\n          indicesByUUID = this._indicesByUUID,\n          bindings = this._bindings,\n          nBindings = bindings.length;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid];\n\n        if (index !== undefined && index >= nCachedObjects) {\n          // move existing object into the CACHED region\n          var lastCachedIndex = nCachedObjects++,\n              firstActiveObject = objects[lastCachedIndex];\n          indicesByUUID[firstActiveObject.uuid] = index;\n          objects[index] = firstActiveObject;\n          indicesByUUID[uuid] = lastCachedIndex;\n          objects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j],\n                firstActive = bindingsForPath[lastCachedIndex],\n                binding = bindingsForPath[index];\n            bindingsForPath[index] = firstActive;\n            bindingsForPath[lastCachedIndex] = binding;\n          }\n        }\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    },\n    // remove & forget\n    uncache: function uncache() {\n      var objects = this._objects,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_,\n          indicesByUUID = this._indicesByUUID,\n          bindings = this._bindings,\n          nBindings = bindings.length;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid];\n\n        if (index !== undefined) {\n          delete indicesByUUID[uuid];\n\n          if (index < nCachedObjects) {\n            // object is cached, shrink the CACHED region\n            var firstActiveIndex = --nCachedObjects,\n                lastCachedObject = objects[firstActiveIndex],\n                lastIndex = --nObjects,\n                lastObject = objects[lastIndex]; // last cached object takes this object's place\n\n            indicesByUUID[lastCachedObject.uuid] = index;\n            objects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n            indicesByUUID[lastObject.uuid] = firstActiveIndex;\n            objects[firstActiveIndex] = lastObject;\n            objects.pop(); // accounting is done, now do the same for all bindings\n\n            for (var j = 0, m = nBindings; j !== m; ++j) {\n              var bindingsForPath = bindings[j],\n                  lastCached = bindingsForPath[firstActiveIndex],\n                  last = bindingsForPath[lastIndex];\n              bindingsForPath[index] = lastCached;\n              bindingsForPath[firstActiveIndex] = last;\n              bindingsForPath.pop();\n            }\n          } else {\n            // object is active, just swap with the last and pop\n            var lastIndex = --nObjects,\n                lastObject = objects[lastIndex];\n            indicesByUUID[lastObject.uuid] = index;\n            objects[index] = lastObject;\n            objects.pop(); // accounting is done, now do the same for all bindings\n\n            for (var j = 0, m = nBindings; j !== m; ++j) {\n              var bindingsForPath = bindings[j];\n              bindingsForPath[index] = bindingsForPath[lastIndex];\n              bindingsForPath.pop();\n            }\n          } // cached or active\n\n        } // if object is known\n\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    },\n    // Internal interface used by befriended PropertyBinding.Composite:\n    subscribe_: function subscribe_(path, parsedPath) {\n      // returns an array of bindings for the given path that is changed\n      // according to the contained objects in the group\n      var indicesByPath = this._bindingsIndicesByPath,\n          index = indicesByPath[path],\n          bindings = this._bindings;\n      if (index !== undefined) return bindings[index];\n      var paths = this._paths,\n          parsedPaths = this._parsedPaths,\n          objects = this._objects,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_,\n          bindingsForPath = new Array(nObjects);\n      index = bindings.length;\n      indicesByPath[path] = index;\n      paths.push(path);\n      parsedPaths.push(parsedPath);\n      bindings.push(bindingsForPath);\n\n      for (var i = nCachedObjects, n = objects.length; i !== n; ++i) {\n        var object = objects[i];\n        bindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\n      }\n\n      return bindingsForPath;\n    },\n    unsubscribe_: function unsubscribe_(path) {\n      // tells the group to forget about a property path and no longer\n      // update the array previously obtained with 'subscribe_'\n      var indicesByPath = this._bindingsIndicesByPath,\n          index = indicesByPath[path];\n\n      if (index !== undefined) {\n        var paths = this._paths,\n            parsedPaths = this._parsedPaths,\n            bindings = this._bindings,\n            lastBindingsIndex = bindings.length - 1,\n            lastBindings = bindings[lastBindingsIndex],\n            lastBindingsPath = path[lastBindingsIndex];\n        indicesByPath[lastBindingsPath] = index;\n        bindings[index] = lastBindings;\n        bindings.pop();\n        parsedPaths[index] = parsedPaths[lastBindingsIndex];\n        parsedPaths.pop();\n        paths[index] = paths[lastBindingsIndex];\n        paths.pop();\n      }\n    }\n  });\n  /**\n   *\n   * Action provided by AnimationMixer for scheduling clip playback on specific\n   * objects.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   *\n   */\n\n  function AnimationAction(mixer, clip, localRoot) {\n    this._mixer = mixer;\n    this._clip = clip;\n    this._localRoot = localRoot || null;\n    var tracks = clip.tracks,\n        nTracks = tracks.length,\n        interpolants = new Array(nTracks);\n    var interpolantSettings = {\n      endingStart: ZeroCurvatureEnding,\n      endingEnd: ZeroCurvatureEnding\n    };\n\n    for (var i = 0; i !== nTracks; ++i) {\n      var interpolant = tracks[i].createInterpolant(null);\n      interpolants[i] = interpolant;\n      interpolant.settings = interpolantSettings;\n    }\n\n    this._interpolantSettings = interpolantSettings;\n    this._interpolants = interpolants; // bound by the mixer\n    // inside: PropertyMixer (managed by the mixer)\n\n    this._propertyBindings = new Array(nTracks);\n    this._cacheIndex = null; // for the memory manager\n\n    this._byClipCacheIndex = null; // for the memory manager\n\n    this._timeScaleInterpolant = null;\n    this._weightInterpolant = null;\n    this.loop = LoopRepeat;\n    this._loopCount = -1; // global mixer time when the action is to be started\n    // it's set back to 'null' upon start of the action\n\n    this._startTime = null; // scaled local time of the action\n    // gets clamped or wrapped to 0..clip.duration according to loop\n\n    this.time = 0;\n    this.timeScale = 1;\n    this._effectiveTimeScale = 1;\n    this.weight = 1;\n    this._effectiveWeight = 1;\n    this.repetitions = Infinity; // no. of repetitions when looping\n\n    this.paused = false; // true -> zero effective time scale\n\n    this.enabled = true; // false -> zero effective weight\n\n    this.clampWhenFinished = false; // keep feeding the last frame?\n\n    this.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n    this.zeroSlopeAtEnd = true; // clips for start, loop and end\n  }\n\n  Object.assign(AnimationAction.prototype, {\n    // State & Scheduling\n    play: function play() {\n      this._mixer._activateAction(this);\n\n      return this;\n    },\n    stop: function stop() {\n      this._mixer._deactivateAction(this);\n\n      return this.reset();\n    },\n    reset: function reset() {\n      this.paused = false;\n      this.enabled = true;\n      this.time = 0; // restart clip\n\n      this._loopCount = -1; // forget previous loops\n\n      this._startTime = null; // forget scheduling\n\n      return this.stopFading().stopWarping();\n    },\n    isRunning: function isRunning() {\n      return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n    },\n    // return true when play has been called\n    isScheduled: function isScheduled() {\n      return this._mixer._isActiveAction(this);\n    },\n    startAt: function startAt(time) {\n      this._startTime = time;\n      return this;\n    },\n    setLoop: function setLoop(mode, repetitions) {\n      this.loop = mode;\n      this.repetitions = repetitions;\n      return this;\n    },\n    // Weight\n    // set the weight stopping any scheduled fading\n    // although .enabled = false yields an effective weight of zero, this\n    // method does *not* change .enabled, because it would be confusing\n    setEffectiveWeight: function setEffectiveWeight(weight) {\n      this.weight = weight; // note: same logic as when updated at runtime\n\n      this._effectiveWeight = this.enabled ? weight : 0;\n      return this.stopFading();\n    },\n    // return the weight considering fading and .enabled\n    getEffectiveWeight: function getEffectiveWeight() {\n      return this._effectiveWeight;\n    },\n    fadeIn: function fadeIn(duration) {\n      return this._scheduleFading(duration, 0, 1);\n    },\n    fadeOut: function fadeOut(duration) {\n      return this._scheduleFading(duration, 1, 0);\n    },\n    crossFadeFrom: function crossFadeFrom(fadeOutAction, duration, warp) {\n      fadeOutAction.fadeOut(duration);\n      this.fadeIn(duration);\n\n      if (warp) {\n        var fadeInDuration = this._clip.duration,\n            fadeOutDuration = fadeOutAction._clip.duration,\n            startEndRatio = fadeOutDuration / fadeInDuration,\n            endStartRatio = fadeInDuration / fadeOutDuration;\n        fadeOutAction.warp(1.0, startEndRatio, duration);\n        this.warp(endStartRatio, 1.0, duration);\n      }\n\n      return this;\n    },\n    crossFadeTo: function crossFadeTo(fadeInAction, duration, warp) {\n      return fadeInAction.crossFadeFrom(this, duration, warp);\n    },\n    stopFading: function stopFading() {\n      var weightInterpolant = this._weightInterpolant;\n\n      if (weightInterpolant !== null) {\n        this._weightInterpolant = null;\n\n        this._mixer._takeBackControlInterpolant(weightInterpolant);\n      }\n\n      return this;\n    },\n    // Time Scale Control\n    // set the time scale stopping any scheduled warping\n    // although .paused = true yields an effective time scale of zero, this\n    // method does *not* change .paused, because it would be confusing\n    setEffectiveTimeScale: function setEffectiveTimeScale(timeScale) {\n      this.timeScale = timeScale;\n      this._effectiveTimeScale = this.paused ? 0 : timeScale;\n      return this.stopWarping();\n    },\n    // return the time scale considering warping and .paused\n    getEffectiveTimeScale: function getEffectiveTimeScale() {\n      return this._effectiveTimeScale;\n    },\n    setDuration: function setDuration(duration) {\n      this.timeScale = this._clip.duration / duration;\n      return this.stopWarping();\n    },\n    syncWith: function syncWith(action) {\n      this.time = action.time;\n      this.timeScale = action.timeScale;\n      return this.stopWarping();\n    },\n    halt: function halt(duration) {\n      return this.warp(this._effectiveTimeScale, 0, duration);\n    },\n    warp: function warp(startTimeScale, endTimeScale, duration) {\n      var mixer = this._mixer,\n          now = mixer.time,\n          interpolant = this._timeScaleInterpolant,\n          timeScale = this.timeScale;\n\n      if (interpolant === null) {\n        interpolant = mixer._lendControlInterpolant();\n        this._timeScaleInterpolant = interpolant;\n      }\n\n      var times = interpolant.parameterPositions,\n          values = interpolant.sampleValues;\n      times[0] = now;\n      times[1] = now + duration;\n      values[0] = startTimeScale / timeScale;\n      values[1] = endTimeScale / timeScale;\n      return this;\n    },\n    stopWarping: function stopWarping() {\n      var timeScaleInterpolant = this._timeScaleInterpolant;\n\n      if (timeScaleInterpolant !== null) {\n        this._timeScaleInterpolant = null;\n\n        this._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n      }\n\n      return this;\n    },\n    // Object Accessors\n    getMixer: function getMixer() {\n      return this._mixer;\n    },\n    getClip: function getClip() {\n      return this._clip;\n    },\n    getRoot: function getRoot() {\n      return this._localRoot || this._mixer._root;\n    },\n    // Interna\n    _update: function _update(time, deltaTime, timeDirection, accuIndex) {\n      // called by the mixer\n      if (!this.enabled) {\n        // call ._updateWeight() to update ._effectiveWeight\n        this._updateWeight(time);\n\n        return;\n      }\n\n      var startTime = this._startTime;\n\n      if (startTime !== null) {\n        // check for scheduled start of action\n        var timeRunning = (time - startTime) * timeDirection;\n\n        if (timeRunning < 0 || timeDirection === 0) {\n          return; // yet to come / don't decide when delta = 0\n        } // start\n\n\n        this._startTime = null; // unschedule\n\n        deltaTime = timeDirection * timeRunning;\n      } // apply time scale and advance time\n\n\n      deltaTime *= this._updateTimeScale(time);\n\n      var clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n      // an effective weight of 0\n\n\n      var weight = this._updateWeight(time);\n\n      if (weight > 0) {\n        var interpolants = this._interpolants;\n        var propertyMixers = this._propertyBindings;\n\n        for (var j = 0, m = interpolants.length; j !== m; ++j) {\n          interpolants[j].evaluate(clipTime);\n          propertyMixers[j].accumulate(accuIndex, weight);\n        }\n      }\n    },\n    _updateWeight: function _updateWeight(time) {\n      var weight = 0;\n\n      if (this.enabled) {\n        weight = this.weight;\n        var interpolant = this._weightInterpolant;\n\n        if (interpolant !== null) {\n          var interpolantValue = interpolant.evaluate(time)[0];\n          weight *= interpolantValue;\n\n          if (time > interpolant.parameterPositions[1]) {\n            this.stopFading();\n\n            if (interpolantValue === 0) {\n              // faded out, disable\n              this.enabled = false;\n            }\n          }\n        }\n      }\n\n      this._effectiveWeight = weight;\n      return weight;\n    },\n    _updateTimeScale: function _updateTimeScale(time) {\n      var timeScale = 0;\n\n      if (!this.paused) {\n        timeScale = this.timeScale;\n        var interpolant = this._timeScaleInterpolant;\n\n        if (interpolant !== null) {\n          var interpolantValue = interpolant.evaluate(time)[0];\n          timeScale *= interpolantValue;\n\n          if (time > interpolant.parameterPositions[1]) {\n            this.stopWarping();\n\n            if (timeScale === 0) {\n              // motion has halted, pause\n              this.paused = true;\n            } else {\n              // warp done - apply final time scale\n              this.timeScale = timeScale;\n            }\n          }\n        }\n      }\n\n      this._effectiveTimeScale = timeScale;\n      return timeScale;\n    },\n    _updateTime: function _updateTime(deltaTime) {\n      var time = this.time + deltaTime;\n      var duration = this._clip.duration;\n      var loop = this.loop;\n      var loopCount = this._loopCount;\n      var pingPong = loop === LoopPingPong;\n\n      if (deltaTime === 0) {\n        if (loopCount === -1) return time;\n        return pingPong && (loopCount & 1) === 1 ? duration - time : time;\n      }\n\n      if (loop === LoopOnce) {\n        if (loopCount === -1) {\n          // just started\n          this._loopCount = 0;\n\n          this._setEndings(true, true, false);\n        }\n\n        handle_stop: {\n          if (time >= duration) {\n            time = duration;\n          } else if (time < 0) {\n            time = 0;\n          } else break handle_stop;\n\n          if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\n          this._mixer.dispatchEvent({\n            type: 'finished',\n            action: this,\n            direction: deltaTime < 0 ? -1 : 1\n          });\n        }\n      } else {\n        // repetitive Repeat or PingPong\n        if (loopCount === -1) {\n          // just started\n          if (deltaTime >= 0) {\n            loopCount = 0;\n\n            this._setEndings(true, this.repetitions === 0, pingPong);\n          } else {\n            // when looping in reverse direction, the initial\n            // transition through zero counts as a repetition,\n            // so leave loopCount at -1\n            this._setEndings(this.repetitions === 0, true, pingPong);\n          }\n        }\n\n        if (time >= duration || time < 0) {\n          // wrap around\n          var loopDelta = Math.floor(time / duration); // signed\n\n          time -= duration * loopDelta;\n          loopCount += Math.abs(loopDelta);\n          var pending = this.repetitions - loopCount;\n\n          if (pending <= 0) {\n            // have to stop (switch state, clamp time, fire event)\n            if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n            time = deltaTime > 0 ? duration : 0;\n\n            this._mixer.dispatchEvent({\n              type: 'finished',\n              action: this,\n              direction: deltaTime > 0 ? 1 : -1\n            });\n          } else {\n            // keep running\n            if (pending === 1) {\n              // entering the last round\n              var atStart = deltaTime < 0;\n\n              this._setEndings(atStart, !atStart, pingPong);\n            } else {\n              this._setEndings(false, false, pingPong);\n            }\n\n            this._loopCount = loopCount;\n\n            this._mixer.dispatchEvent({\n              type: 'loop',\n              action: this,\n              loopDelta: loopDelta\n            });\n          }\n        }\n\n        if (pingPong && (loopCount & 1) === 1) {\n          // invert time for the \"pong round\"\n          this.time = time;\n          return duration - time;\n        }\n      }\n\n      this.time = time;\n      return time;\n    },\n    _setEndings: function _setEndings(atStart, atEnd, pingPong) {\n      var settings = this._interpolantSettings;\n\n      if (pingPong) {\n        settings.endingStart = ZeroSlopeEnding;\n        settings.endingEnd = ZeroSlopeEnding;\n      } else {\n        // assuming for LoopOnce atStart == atEnd == true\n        if (atStart) {\n          settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n        } else {\n          settings.endingStart = WrapAroundEnding;\n        }\n\n        if (atEnd) {\n          settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n        } else {\n          settings.endingEnd = WrapAroundEnding;\n        }\n      }\n    },\n    _scheduleFading: function _scheduleFading(duration, weightNow, weightThen) {\n      var mixer = this._mixer,\n          now = mixer.time,\n          interpolant = this._weightInterpolant;\n\n      if (interpolant === null) {\n        interpolant = mixer._lendControlInterpolant();\n        this._weightInterpolant = interpolant;\n      }\n\n      var times = interpolant.parameterPositions,\n          values = interpolant.sampleValues;\n      times[0] = now;\n      values[0] = weightNow;\n      times[1] = now + duration;\n      values[1] = weightThen;\n      return this;\n    }\n  });\n  /**\n   *\n   * Player for AnimationClips.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function AnimationMixer(root) {\n    this._root = root;\n\n    this._initMemoryManager();\n\n    this._accuIndex = 0;\n    this.time = 0;\n    this.timeScale = 1.0;\n  }\n\n  AnimationMixer.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: AnimationMixer,\n    _bindAction: function _bindAction(action, prototypeAction) {\n      var root = action._localRoot || this._root,\n          tracks = action._clip.tracks,\n          nTracks = tracks.length,\n          bindings = action._propertyBindings,\n          interpolants = action._interpolants,\n          rootUuid = root.uuid,\n          bindingsByRoot = this._bindingsByRootAndName,\n          bindingsByName = bindingsByRoot[rootUuid];\n\n      if (bindingsByName === undefined) {\n        bindingsByName = {};\n        bindingsByRoot[rootUuid] = bindingsByName;\n      }\n\n      for (var i = 0; i !== nTracks; ++i) {\n        var track = tracks[i],\n            trackName = track.name,\n            binding = bindingsByName[trackName];\n\n        if (binding !== undefined) {\n          bindings[i] = binding;\n        } else {\n          binding = bindings[i];\n\n          if (binding !== undefined) {\n            // existing binding, make sure the cache knows\n            if (binding._cacheIndex === null) {\n              ++binding.referenceCount;\n\n              this._addInactiveBinding(binding, rootUuid, trackName);\n            }\n\n            continue;\n          }\n\n          var path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n          binding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n          ++binding.referenceCount;\n\n          this._addInactiveBinding(binding, rootUuid, trackName);\n\n          bindings[i] = binding;\n        }\n\n        interpolants[i].resultBuffer = binding.buffer;\n      }\n    },\n    _activateAction: function _activateAction(action) {\n      if (!this._isActiveAction(action)) {\n        if (action._cacheIndex === null) {\n          // this action has been forgotten by the cache, but the user\n          // appears to be still using it -> rebind\n          var rootUuid = (action._localRoot || this._root).uuid,\n              clipUuid = action._clip.uuid,\n              actionsForClip = this._actionsByClip[clipUuid];\n\n          this._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n          this._addInactiveAction(action, clipUuid, rootUuid);\n        }\n\n        var bindings = action._propertyBindings; // increment reference counts / sort out state\n\n        for (var i = 0, n = bindings.length; i !== n; ++i) {\n          var binding = bindings[i];\n\n          if (binding.useCount++ === 0) {\n            this._lendBinding(binding);\n\n            binding.saveOriginalState();\n          }\n        }\n\n        this._lendAction(action);\n      }\n    },\n    _deactivateAction: function _deactivateAction(action) {\n      if (this._isActiveAction(action)) {\n        var bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n        for (var i = 0, n = bindings.length; i !== n; ++i) {\n          var binding = bindings[i];\n\n          if (--binding.useCount === 0) {\n            binding.restoreOriginalState();\n\n            this._takeBackBinding(binding);\n          }\n        }\n\n        this._takeBackAction(action);\n      }\n    },\n    // Memory manager\n    _initMemoryManager: function _initMemoryManager() {\n      this._actions = []; // 'nActiveActions' followed by inactive ones\n\n      this._nActiveActions = 0;\n      this._actionsByClip = {}; // inside:\n      // {\n      // \tknownActions: Array< AnimationAction > - used as prototypes\n      // \tactionByRoot: AnimationAction - lookup\n      // }\n\n      this._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n      this._nActiveBindings = 0;\n      this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n      this._controlInterpolants = []; // same game as above\n\n      this._nActiveControlInterpolants = 0;\n      var scope = this;\n      this.stats = {\n        actions: {\n          get total() {\n            return scope._actions.length;\n          },\n\n          get inUse() {\n            return scope._nActiveActions;\n          }\n\n        },\n        bindings: {\n          get total() {\n            return scope._bindings.length;\n          },\n\n          get inUse() {\n            return scope._nActiveBindings;\n          }\n\n        },\n        controlInterpolants: {\n          get total() {\n            return scope._controlInterpolants.length;\n          },\n\n          get inUse() {\n            return scope._nActiveControlInterpolants;\n          }\n\n        }\n      };\n    },\n    // Memory management for AnimationAction objects\n    _isActiveAction: function _isActiveAction(action) {\n      var index = action._cacheIndex;\n      return index !== null && index < this._nActiveActions;\n    },\n    _addInactiveAction: function _addInactiveAction(action, clipUuid, rootUuid) {\n      var actions = this._actions,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid];\n\n      if (actionsForClip === undefined) {\n        actionsForClip = {\n          knownActions: [action],\n          actionByRoot: {}\n        };\n        action._byClipCacheIndex = 0;\n        actionsByClip[clipUuid] = actionsForClip;\n      } else {\n        var knownActions = actionsForClip.knownActions;\n        action._byClipCacheIndex = knownActions.length;\n        knownActions.push(action);\n      }\n\n      action._cacheIndex = actions.length;\n      actions.push(action);\n      actionsForClip.actionByRoot[rootUuid] = action;\n    },\n    _removeInactiveAction: function _removeInactiveAction(action) {\n      var actions = this._actions,\n          lastInactiveAction = actions[actions.length - 1],\n          cacheIndex = action._cacheIndex;\n      lastInactiveAction._cacheIndex = cacheIndex;\n      actions[cacheIndex] = lastInactiveAction;\n      actions.pop();\n      action._cacheIndex = null;\n      var clipUuid = action._clip.uuid,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid],\n          knownActionsForClip = actionsForClip.knownActions,\n          lastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n          byClipCacheIndex = action._byClipCacheIndex;\n      lastKnownAction._byClipCacheIndex = byClipCacheIndex;\n      knownActionsForClip[byClipCacheIndex] = lastKnownAction;\n      knownActionsForClip.pop();\n      action._byClipCacheIndex = null;\n      var actionByRoot = actionsForClip.actionByRoot,\n          rootUuid = (action._localRoot || this._root).uuid;\n      delete actionByRoot[rootUuid];\n\n      if (knownActionsForClip.length === 0) {\n        delete actionsByClip[clipUuid];\n      }\n\n      this._removeInactiveBindingsForAction(action);\n    },\n    _removeInactiveBindingsForAction: function _removeInactiveBindingsForAction(action) {\n      var bindings = action._propertyBindings;\n\n      for (var i = 0, n = bindings.length; i !== n; ++i) {\n        var binding = bindings[i];\n\n        if (--binding.referenceCount === 0) {\n          this._removeInactiveBinding(binding);\n        }\n      }\n    },\n    _lendAction: function _lendAction(action) {\n      // [ active actions |  inactive actions  ]\n      // [  active actions >| inactive actions ]\n      //                 s        a\n      //                  <-swap->\n      //                 a        s\n      var actions = this._actions,\n          prevIndex = action._cacheIndex,\n          lastActiveIndex = this._nActiveActions++,\n          firstInactiveAction = actions[lastActiveIndex];\n      action._cacheIndex = lastActiveIndex;\n      actions[lastActiveIndex] = action;\n      firstInactiveAction._cacheIndex = prevIndex;\n      actions[prevIndex] = firstInactiveAction;\n    },\n    _takeBackAction: function _takeBackAction(action) {\n      // [  active actions  | inactive actions ]\n      // [ active actions |< inactive actions  ]\n      //        a        s\n      //         <-swap->\n      //        s        a\n      var actions = this._actions,\n          prevIndex = action._cacheIndex,\n          firstInactiveIndex = --this._nActiveActions,\n          lastActiveAction = actions[firstInactiveIndex];\n      action._cacheIndex = firstInactiveIndex;\n      actions[firstInactiveIndex] = action;\n      lastActiveAction._cacheIndex = prevIndex;\n      actions[prevIndex] = lastActiveAction;\n    },\n    // Memory management for PropertyMixer objects\n    _addInactiveBinding: function _addInactiveBinding(binding, rootUuid, trackName) {\n      var bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid],\n          bindings = this._bindings;\n\n      if (bindingByName === undefined) {\n        bindingByName = {};\n        bindingsByRoot[rootUuid] = bindingByName;\n      }\n\n      bindingByName[trackName] = binding;\n      binding._cacheIndex = bindings.length;\n      bindings.push(binding);\n    },\n    _removeInactiveBinding: function _removeInactiveBinding(binding) {\n      var bindings = this._bindings,\n          propBinding = binding.binding,\n          rootUuid = propBinding.rootNode.uuid,\n          trackName = propBinding.path,\n          bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid],\n          lastInactiveBinding = bindings[bindings.length - 1],\n          cacheIndex = binding._cacheIndex;\n      lastInactiveBinding._cacheIndex = cacheIndex;\n      bindings[cacheIndex] = lastInactiveBinding;\n      bindings.pop();\n      delete bindingByName[trackName];\n\n      remove_empty_map: {\n        for (var _ in bindingByName) {\n          break remove_empty_map;\n        } // eslint-disable-line no-unused-vars\n\n\n        delete bindingsByRoot[rootUuid];\n      }\n    },\n    _lendBinding: function _lendBinding(binding) {\n      var bindings = this._bindings,\n          prevIndex = binding._cacheIndex,\n          lastActiveIndex = this._nActiveBindings++,\n          firstInactiveBinding = bindings[lastActiveIndex];\n      binding._cacheIndex = lastActiveIndex;\n      bindings[lastActiveIndex] = binding;\n      firstInactiveBinding._cacheIndex = prevIndex;\n      bindings[prevIndex] = firstInactiveBinding;\n    },\n    _takeBackBinding: function _takeBackBinding(binding) {\n      var bindings = this._bindings,\n          prevIndex = binding._cacheIndex,\n          firstInactiveIndex = --this._nActiveBindings,\n          lastActiveBinding = bindings[firstInactiveIndex];\n      binding._cacheIndex = firstInactiveIndex;\n      bindings[firstInactiveIndex] = binding;\n      lastActiveBinding._cacheIndex = prevIndex;\n      bindings[prevIndex] = lastActiveBinding;\n    },\n    // Memory management of Interpolants for weight and time scale\n    _lendControlInterpolant: function _lendControlInterpolant() {\n      var interpolants = this._controlInterpolants,\n          lastActiveIndex = this._nActiveControlInterpolants++,\n          interpolant = interpolants[lastActiveIndex];\n\n      if (interpolant === undefined) {\n        interpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\n        interpolant.__cacheIndex = lastActiveIndex;\n        interpolants[lastActiveIndex] = interpolant;\n      }\n\n      return interpolant;\n    },\n    _takeBackControlInterpolant: function _takeBackControlInterpolant(interpolant) {\n      var interpolants = this._controlInterpolants,\n          prevIndex = interpolant.__cacheIndex,\n          firstInactiveIndex = --this._nActiveControlInterpolants,\n          lastActiveInterpolant = interpolants[firstInactiveIndex];\n      interpolant.__cacheIndex = firstInactiveIndex;\n      interpolants[firstInactiveIndex] = interpolant;\n      lastActiveInterpolant.__cacheIndex = prevIndex;\n      interpolants[prevIndex] = lastActiveInterpolant;\n    },\n    _controlInterpolantsResultBuffer: new Float32Array(1),\n    // return an action for a clip optionally using a custom root target\n    // object (this method allocates a lot of dynamic memory in case a\n    // previously unknown clip/root combination is specified)\n    clipAction: function clipAction(clip, optionalRoot) {\n      var root = optionalRoot || this._root,\n          rootUuid = root.uuid,\n          clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n          clipUuid = clipObject !== null ? clipObject.uuid : clip,\n          actionsForClip = this._actionsByClip[clipUuid],\n          prototypeAction = null;\n\n      if (actionsForClip !== undefined) {\n        var existingAction = actionsForClip.actionByRoot[rootUuid];\n\n        if (existingAction !== undefined) {\n          return existingAction;\n        } // we know the clip, so we don't have to parse all\n        // the bindings again but can just copy\n\n\n        prototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n        if (clipObject === null) clipObject = prototypeAction._clip;\n      } // clip must be known when specified via string\n\n\n      if (clipObject === null) return null; // allocate all resources required to run it\n\n      var newAction = new AnimationAction(this, clipObject, optionalRoot);\n\n      this._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n      this._addInactiveAction(newAction, clipUuid, rootUuid);\n\n      return newAction;\n    },\n    // get an existing action\n    existingAction: function existingAction(clip, optionalRoot) {\n      var root = optionalRoot || this._root,\n          rootUuid = root.uuid,\n          clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n          clipUuid = clipObject ? clipObject.uuid : clip,\n          actionsForClip = this._actionsByClip[clipUuid];\n\n      if (actionsForClip !== undefined) {\n        return actionsForClip.actionByRoot[rootUuid] || null;\n      }\n\n      return null;\n    },\n    // deactivates all previously scheduled actions\n    stopAllAction: function stopAllAction() {\n      var actions = this._actions,\n          nActions = this._nActiveActions,\n          bindings = this._bindings,\n          nBindings = this._nActiveBindings;\n      this._nActiveActions = 0;\n      this._nActiveBindings = 0;\n\n      for (var i = 0; i !== nActions; ++i) {\n        actions[i].reset();\n      }\n\n      for (var i = 0; i !== nBindings; ++i) {\n        bindings[i].useCount = 0;\n      }\n\n      return this;\n    },\n    // advance the time and update apply the animation\n    update: function update(deltaTime) {\n      deltaTime *= this.timeScale;\n      var actions = this._actions,\n          nActions = this._nActiveActions,\n          time = this.time += deltaTime,\n          timeDirection = Math.sign(deltaTime),\n          accuIndex = this._accuIndex ^= 1; // run active actions\n\n      for (var i = 0; i !== nActions; ++i) {\n        var action = actions[i];\n\n        action._update(time, deltaTime, timeDirection, accuIndex);\n      } // update scene graph\n\n\n      var bindings = this._bindings,\n          nBindings = this._nActiveBindings;\n\n      for (var i = 0; i !== nBindings; ++i) {\n        bindings[i].apply(accuIndex);\n      }\n\n      return this;\n    },\n    // return this mixer's root target object\n    getRoot: function getRoot() {\n      return this._root;\n    },\n    // free all resources specific to a particular clip\n    uncacheClip: function uncacheClip(clip) {\n      var actions = this._actions,\n          clipUuid = clip.uuid,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid];\n\n      if (actionsForClip !== undefined) {\n        // note: just calling _removeInactiveAction would mess up the\n        // iteration state and also require updating the state we can\n        // just throw away\n        var actionsToRemove = actionsForClip.knownActions;\n\n        for (var i = 0, n = actionsToRemove.length; i !== n; ++i) {\n          var action = actionsToRemove[i];\n\n          this._deactivateAction(action);\n\n          var cacheIndex = action._cacheIndex,\n              lastInactiveAction = actions[actions.length - 1];\n          action._cacheIndex = null;\n          action._byClipCacheIndex = null;\n          lastInactiveAction._cacheIndex = cacheIndex;\n          actions[cacheIndex] = lastInactiveAction;\n          actions.pop();\n\n          this._removeInactiveBindingsForAction(action);\n        }\n\n        delete actionsByClip[clipUuid];\n      }\n    },\n    // free all resources specific to a particular root target object\n    uncacheRoot: function uncacheRoot(root) {\n      var rootUuid = root.uuid,\n          actionsByClip = this._actionsByClip;\n\n      for (var clipUuid in actionsByClip) {\n        var actionByRoot = actionsByClip[clipUuid].actionByRoot,\n            action = actionByRoot[rootUuid];\n\n        if (action !== undefined) {\n          this._deactivateAction(action);\n\n          this._removeInactiveAction(action);\n        }\n      }\n\n      var bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid];\n\n      if (bindingByName !== undefined) {\n        for (var trackName in bindingByName) {\n          var binding = bindingByName[trackName];\n          binding.restoreOriginalState();\n\n          this._removeInactiveBinding(binding);\n        }\n      }\n    },\n    // remove a targeted clip from the cache\n    uncacheAction: function uncacheAction(clip, optionalRoot) {\n      var action = this.existingAction(clip, optionalRoot);\n\n      if (action !== null) {\n        this._deactivateAction(action);\n\n        this._removeInactiveAction(action);\n      }\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Uniform(value) {\n    if (typeof value === 'string') {\n      console.warn('THREE.Uniform: Type parameter is no longer needed.');\n      value = arguments[1];\n    }\n\n    this.value = value;\n  }\n\n  Uniform.prototype.clone = function () {\n    return new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\n  };\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n\n  function InstancedBufferGeometry() {\n    BufferGeometry.call(this);\n    this.type = 'InstancedBufferGeometry';\n    this.maxInstancedCount = undefined;\n  }\n\n  InstancedBufferGeometry.prototype = Object.assign(Object.create(BufferGeometry.prototype), {\n    constructor: InstancedBufferGeometry,\n    isInstancedBufferGeometry: true,\n    copy: function copy(source) {\n      BufferGeometry.prototype.copy.call(this, source);\n      this.maxInstancedCount = source.maxInstancedCount;\n      return this;\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    }\n  });\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  function InstancedInterleavedBuffer(array, stride, meshPerAttribute) {\n    InterleavedBuffer.call(this, array, stride);\n    this.meshPerAttribute = meshPerAttribute || 1;\n  }\n\n  InstancedInterleavedBuffer.prototype = Object.assign(Object.create(InterleavedBuffer.prototype), {\n    constructor: InstancedInterleavedBuffer,\n    isInstancedInterleavedBuffer: true,\n    copy: function copy(source) {\n      InterleavedBuffer.prototype.copy.call(this, source);\n      this.meshPerAttribute = source.meshPerAttribute;\n      return this;\n    }\n  });\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  function InstancedBufferAttribute(array, itemSize, normalized, meshPerAttribute) {\n    if (typeof normalized === 'number') {\n      meshPerAttribute = normalized;\n      normalized = false;\n      console.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');\n    }\n\n    BufferAttribute.call(this, array, itemSize, normalized);\n    this.meshPerAttribute = meshPerAttribute || 1;\n  }\n\n  InstancedBufferAttribute.prototype = Object.assign(Object.create(BufferAttribute.prototype), {\n    constructor: InstancedBufferAttribute,\n    isInstancedBufferAttribute: true,\n    copy: function copy(source) {\n      BufferAttribute.prototype.copy.call(this, source);\n      this.meshPerAttribute = source.meshPerAttribute;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author bhouston / http://clara.io/\n   * @author stephomi / http://stephaneginier.com/\n   */\n\n  function Raycaster(origin, direction, near, far) {\n    this.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n    this.near = near || 0;\n    this.far = far || Infinity;\n    this.params = {\n      Mesh: {},\n      Line: {},\n      LOD: {},\n      Points: {\n        threshold: 1\n      },\n      Sprite: {}\n    };\n    Object.defineProperties(this.params, {\n      PointCloud: {\n        get: function get() {\n          console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.');\n          return this.Points;\n        }\n      }\n    });\n  }\n\n  function ascSort(a, b) {\n    return a.distance - b.distance;\n  }\n\n  function _intersectObject(object, raycaster, intersects, recursive) {\n    if (object.visible === false) return;\n    object.raycast(raycaster, intersects);\n\n    if (recursive === true) {\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        _intersectObject(children[i], raycaster, intersects, true);\n      }\n    }\n  }\n\n  Object.assign(Raycaster.prototype, {\n    linePrecision: 1,\n    set: function set(origin, direction) {\n      // direction is assumed to be normalized (for accurate distance calculations)\n      this.ray.set(origin, direction);\n    },\n    setFromCamera: function setFromCamera(coords, camera) {\n      if (camera && camera.isPerspectiveCamera) {\n        this.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n        this.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n      } else if (camera && camera.isOrthographicCamera) {\n        this.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n\n        this.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n      } else {\n        console.error('THREE.Raycaster: Unsupported camera type.');\n      }\n    },\n    intersectObject: function intersectObject(object, recursive, optionalTarget) {\n      var intersects = optionalTarget || [];\n\n      _intersectObject(object, this, intersects, recursive);\n\n      intersects.sort(ascSort);\n      return intersects;\n    },\n    intersectObjects: function intersectObjects(objects, recursive, optionalTarget) {\n      var intersects = optionalTarget || [];\n\n      if (Array.isArray(objects) === false) {\n        console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.');\n        return intersects;\n      }\n\n      for (var i = 0, l = objects.length; i < l; i++) {\n        _intersectObject(objects[i], this, intersects, recursive);\n      }\n\n      intersects.sort(ascSort);\n      return intersects;\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n   *\n   * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n   * The azimuthal angle (theta) is measured from the positive z-axiz.\n   */\n\n  function Spherical(radius, phi, theta) {\n    this.radius = radius !== undefined ? radius : 1.0;\n    this.phi = phi !== undefined ? phi : 0; // polar angle\n\n    this.theta = theta !== undefined ? theta : 0; // azimuthal angle\n\n    return this;\n  }\n\n  Object.assign(Spherical.prototype, {\n    set: function set(radius, phi, theta) {\n      this.radius = radius;\n      this.phi = phi;\n      this.theta = theta;\n      return this;\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    copy: function copy(other) {\n      this.radius = other.radius;\n      this.phi = other.phi;\n      this.theta = other.theta;\n      return this;\n    },\n    // restrict phi to be betwee EPS and PI-EPS\n    makeSafe: function makeSafe() {\n      var EPS = 0.000001;\n      this.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n      return this;\n    },\n    setFromVector3: function setFromVector3(v) {\n      return this.setFromCartesianCoords(v.x, v.y, v.z);\n    },\n    setFromCartesianCoords: function setFromCartesianCoords(x, y, z) {\n      this.radius = Math.sqrt(x * x + y * y + z * z);\n\n      if (this.radius === 0) {\n        this.theta = 0;\n        this.phi = 0;\n      } else {\n        this.theta = Math.atan2(x, z);\n        this.phi = Math.acos(_Math.clamp(y / this.radius, -1, 1));\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n   *\n   */\n\n  function Cylindrical(radius, theta, y) {\n    this.radius = radius !== undefined ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\n    this.theta = theta !== undefined ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\n    this.y = y !== undefined ? y : 0; // height above the x-z plane\n\n    return this;\n  }\n\n  Object.assign(Cylindrical.prototype, {\n    set: function set(radius, theta, y) {\n      this.radius = radius;\n      this.theta = theta;\n      this.y = y;\n      return this;\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    copy: function copy(other) {\n      this.radius = other.radius;\n      this.theta = other.theta;\n      this.y = other.y;\n      return this;\n    },\n    setFromVector3: function setFromVector3(v) {\n      return this.setFromCartesianCoords(v.x, v.y, v.z);\n    },\n    setFromCartesianCoords: function setFromCartesianCoords(x, y, z) {\n      this.radius = Math.sqrt(x * x + z * z);\n      this.theta = Math.atan2(x, z);\n      this.y = y;\n      return this;\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n  function Box2(min, max) {\n    this.min = min !== undefined ? min : new Vector2(+Infinity, +Infinity);\n    this.max = max !== undefined ? max : new Vector2(-Infinity, -Infinity);\n  }\n\n  Object.assign(Box2.prototype, {\n    set: function set(min, max) {\n      this.min.copy(min);\n      this.max.copy(max);\n      return this;\n    },\n    setFromPoints: function setFromPoints(points) {\n      this.makeEmpty();\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        this.expandByPoint(points[i]);\n      }\n\n      return this;\n    },\n    setFromCenterAndSize: function () {\n      var v1 = new Vector2();\n      return function setFromCenterAndSize(center, size) {\n        var halfSize = v1.copy(size).multiplyScalar(0.5);\n        this.min.copy(center).sub(halfSize);\n        this.max.copy(center).add(halfSize);\n        return this;\n      };\n    }(),\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    copy: function copy(box) {\n      this.min.copy(box.min);\n      this.max.copy(box.max);\n      return this;\n    },\n    makeEmpty: function makeEmpty() {\n      this.min.x = this.min.y = +Infinity;\n      this.max.x = this.max.y = -Infinity;\n      return this;\n    },\n    isEmpty: function isEmpty() {\n      // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n      return this.max.x < this.min.x || this.max.y < this.min.y;\n    },\n    getCenter: function getCenter(target) {\n      if (target === undefined) {\n        console.warn('THREE.Box2: .getCenter() target is now required');\n        target = new Vector2();\n      }\n\n      return this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n    },\n    getSize: function getSize(target) {\n      if (target === undefined) {\n        console.warn('THREE.Box2: .getSize() target is now required');\n        target = new Vector2();\n      }\n\n      return this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\n    },\n    expandByPoint: function expandByPoint(point) {\n      this.min.min(point);\n      this.max.max(point);\n      return this;\n    },\n    expandByVector: function expandByVector(vector) {\n      this.min.sub(vector);\n      this.max.add(vector);\n      return this;\n    },\n    expandByScalar: function expandByScalar(scalar) {\n      this.min.addScalar(-scalar);\n      this.max.addScalar(scalar);\n      return this;\n    },\n    containsPoint: function containsPoint(point) {\n      return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n    },\n    containsBox: function containsBox(box) {\n      return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n    },\n    getParameter: function getParameter(point, target) {\n      // This can potentially have a divide by zero if the box\n      // has a size dimension of 0.\n      if (target === undefined) {\n        console.warn('THREE.Box2: .getParameter() target is now required');\n        target = new Vector2();\n      }\n\n      return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n    },\n    intersectsBox: function intersectsBox(box) {\n      // using 4 splitting planes to rule out intersections\n      return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n    },\n    clampPoint: function clampPoint(point, target) {\n      if (target === undefined) {\n        console.warn('THREE.Box2: .clampPoint() target is now required');\n        target = new Vector2();\n      }\n\n      return target.copy(point).clamp(this.min, this.max);\n    },\n    distanceToPoint: function () {\n      var v1 = new Vector2();\n      return function distanceToPoint(point) {\n        var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n        return clampedPoint.sub(point).length();\n      };\n    }(),\n    intersect: function intersect(box) {\n      this.min.max(box.min);\n      this.max.min(box.max);\n      return this;\n    },\n    union: function union(box) {\n      this.min.min(box.min);\n      this.max.max(box.max);\n      return this;\n    },\n    translate: function translate(offset) {\n      this.min.add(offset);\n      this.max.add(offset);\n      return this;\n    },\n    equals: function equals(box) {\n      return box.min.equals(this.min) && box.max.equals(this.max);\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n  function Line3(start, end) {\n    this.start = start !== undefined ? start : new Vector3();\n    this.end = end !== undefined ? end : new Vector3();\n  }\n\n  Object.assign(Line3.prototype, {\n    set: function set(start, end) {\n      this.start.copy(start);\n      this.end.copy(end);\n      return this;\n    },\n    clone: function clone() {\n      return new this.constructor().copy(this);\n    },\n    copy: function copy(line) {\n      this.start.copy(line.start);\n      this.end.copy(line.end);\n      return this;\n    },\n    getCenter: function getCenter(target) {\n      if (target === undefined) {\n        console.warn('THREE.Line3: .getCenter() target is now required');\n        target = new Vector3();\n      }\n\n      return target.addVectors(this.start, this.end).multiplyScalar(0.5);\n    },\n    delta: function delta(target) {\n      if (target === undefined) {\n        console.warn('THREE.Line3: .delta() target is now required');\n        target = new Vector3();\n      }\n\n      return target.subVectors(this.end, this.start);\n    },\n    distanceSq: function distanceSq() {\n      return this.start.distanceToSquared(this.end);\n    },\n    distance: function distance() {\n      return this.start.distanceTo(this.end);\n    },\n    at: function at(t, target) {\n      if (target === undefined) {\n        console.warn('THREE.Line3: .at() target is now required');\n        target = new Vector3();\n      }\n\n      return this.delta(target).multiplyScalar(t).add(this.start);\n    },\n    closestPointToPointParameter: function () {\n      var startP = new Vector3();\n      var startEnd = new Vector3();\n      return function closestPointToPointParameter(point, clampToLine) {\n        startP.subVectors(point, this.start);\n        startEnd.subVectors(this.end, this.start);\n        var startEnd2 = startEnd.dot(startEnd);\n        var startEnd_startP = startEnd.dot(startP);\n        var t = startEnd_startP / startEnd2;\n\n        if (clampToLine) {\n          t = _Math.clamp(t, 0, 1);\n        }\n\n        return t;\n      };\n    }(),\n    closestPointToPoint: function closestPointToPoint(point, clampToLine, target) {\n      var t = this.closestPointToPointParameter(point, clampToLine);\n\n      if (target === undefined) {\n        console.warn('THREE.Line3: .closestPointToPoint() target is now required');\n        target = new Vector3();\n      }\n\n      return this.delta(target).multiplyScalar(t).add(this.start);\n    },\n    applyMatrix4: function applyMatrix4(matrix) {\n      this.start.applyMatrix4(matrix);\n      this.end.applyMatrix4(matrix);\n      return this;\n    },\n    equals: function equals(line) {\n      return line.start.equals(this.start) && line.end.equals(this.end);\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function ImmediateRenderObject(material) {\n    Object3D.call(this);\n    this.material = material;\n\n    this.render = function ()\n    /* renderCallback */\n    {};\n  }\n\n  ImmediateRenderObject.prototype = Object.create(Object3D.prototype);\n  ImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n  ImmediateRenderObject.prototype.isImmediateRenderObject = true;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function VertexNormalsHelper(object, size, hex, linewidth) {\n    this.object = object;\n    this.size = size !== undefined ? size : 1;\n    var color = hex !== undefined ? hex : 0xff0000;\n    var width = linewidth !== undefined ? linewidth : 1; //\n\n    var nNormals = 0;\n    var objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n      nNormals = objGeometry.faces.length * 3;\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n      nNormals = objGeometry.attributes.normal.count;\n    } //\n\n\n    var geometry = new BufferGeometry();\n    var positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n    geometry.addAttribute('position', positions);\n    LineSegments.call(this, geometry, new LineBasicMaterial({\n      color: color,\n      linewidth: width\n    })); //\n\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n\n  VertexNormalsHelper.prototype = Object.create(LineSegments.prototype);\n  VertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\n  VertexNormalsHelper.prototype.update = function () {\n    var v1 = new Vector3();\n    var v2 = new Vector3();\n    var normalMatrix = new Matrix3();\n    return function update() {\n      var keys = ['a', 'b', 'c'];\n      this.object.updateMatrixWorld(true);\n      normalMatrix.getNormalMatrix(this.object.matrixWorld);\n      var matrixWorld = this.object.matrixWorld;\n      var position = this.geometry.attributes.position; //\n\n      var objGeometry = this.object.geometry;\n\n      if (objGeometry && objGeometry.isGeometry) {\n        var vertices = objGeometry.vertices;\n        var faces = objGeometry.faces;\n        var idx = 0;\n\n        for (var i = 0, l = faces.length; i < l; i++) {\n          var face = faces[i];\n\n          for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n            var vertex = vertices[face[keys[j]]];\n            var normal = face.vertexNormals[j];\n            v1.copy(vertex).applyMatrix4(matrixWorld);\n            v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n            position.setXYZ(idx, v1.x, v1.y, v1.z);\n            idx = idx + 1;\n            position.setXYZ(idx, v2.x, v2.y, v2.z);\n            idx = idx + 1;\n          }\n        }\n      } else if (objGeometry && objGeometry.isBufferGeometry) {\n        var objPos = objGeometry.attributes.position;\n        var objNorm = objGeometry.attributes.normal;\n        var idx = 0; // for simplicity, ignore index and drawcalls, and render every normal\n\n        for (var j = 0, jl = objPos.count; j < jl; j++) {\n          v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n          v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n          v2.applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n          position.setXYZ(idx, v1.x, v1.y, v1.z);\n          idx = idx + 1;\n          position.setXYZ(idx, v2.x, v2.y, v2.z);\n          idx = idx + 1;\n        }\n      }\n\n      position.needsUpdate = true;\n    };\n  }();\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  function SpotLightHelper(light, color) {\n    Object3D.call(this);\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.color = color;\n    var geometry = new BufferGeometry();\n    var positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n    for (var i = 0, j = 1, l = 32; i < l; i++, j++) {\n      var p1 = i / l * Math.PI * 2;\n      var p2 = j / l * Math.PI * 2;\n      positions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n    }\n\n    geometry.addAttribute('position', new Float32BufferAttribute(positions, 3));\n    var material = new LineBasicMaterial({\n      fog: false\n    });\n    this.cone = new LineSegments(geometry, material);\n    this.add(this.cone);\n    this.update();\n  }\n\n  SpotLightHelper.prototype = Object.create(Object3D.prototype);\n  SpotLightHelper.prototype.constructor = SpotLightHelper;\n\n  SpotLightHelper.prototype.dispose = function () {\n    this.cone.geometry.dispose();\n    this.cone.material.dispose();\n  };\n\n  SpotLightHelper.prototype.update = function () {\n    var vector = new Vector3();\n    return function update() {\n      this.light.updateMatrixWorld();\n      var coneLength = this.light.distance ? this.light.distance : 1000;\n      var coneWidth = coneLength * Math.tan(this.light.angle);\n      this.cone.scale.set(coneWidth, coneWidth, coneLength);\n      vector.setFromMatrixPosition(this.light.target.matrixWorld);\n      this.cone.lookAt(vector);\n\n      if (this.color !== undefined) {\n        this.cone.material.color.set(this.color);\n      } else {\n        this.cone.material.color.copy(this.light.color);\n      }\n    };\n  }();\n  /**\n   * @author Sean Griffin / http://twitter.com/sgrif\n   * @author Michael Guerrero / http://realitymeltdown.com\n   * @author mrdoob / http://mrdoob.com/\n   * @author ikerr / http://verold.com\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n\n  function getBoneList(object) {\n    var boneList = [];\n\n    if (object && object.isBone) {\n      boneList.push(object);\n    }\n\n    for (var i = 0; i < object.children.length; i++) {\n      boneList.push.apply(boneList, getBoneList(object.children[i]));\n    }\n\n    return boneList;\n  }\n\n  function SkeletonHelper(object) {\n    var bones = getBoneList(object);\n    var geometry = new BufferGeometry();\n    var vertices = [];\n    var colors = [];\n    var color1 = new Color(0, 0, 1);\n    var color2 = new Color(0, 1, 0);\n\n    for (var i = 0; i < bones.length; i++) {\n      var bone = bones[i];\n\n      if (bone.parent && bone.parent.isBone) {\n        vertices.push(0, 0, 0);\n        vertices.push(0, 0, 0);\n        colors.push(color1.r, color1.g, color1.b);\n        colors.push(color2.r, color2.g, color2.b);\n      }\n    }\n\n    geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: VertexColors,\n      depthTest: false,\n      depthWrite: false,\n      transparent: true\n    });\n    LineSegments.call(this, geometry, material);\n    this.root = object;\n    this.bones = bones;\n    this.matrix = object.matrixWorld;\n    this.matrixAutoUpdate = false;\n  }\n\n  SkeletonHelper.prototype = Object.create(LineSegments.prototype);\n  SkeletonHelper.prototype.constructor = SkeletonHelper;\n\n  SkeletonHelper.prototype.updateMatrixWorld = function () {\n    var vector = new Vector3();\n    var boneMatrix = new Matrix4();\n    var matrixWorldInv = new Matrix4();\n    return function updateMatrixWorld(force) {\n      var bones = this.bones;\n      var geometry = this.geometry;\n      var position = geometry.getAttribute('position');\n      matrixWorldInv.getInverse(this.root.matrixWorld);\n\n      for (var i = 0, j = 0; i < bones.length; i++) {\n        var bone = bones[i];\n\n        if (bone.parent && bone.parent.isBone) {\n          boneMatrix.multiplyMatrices(matrixWorldInv, bone.matrixWorld);\n          vector.setFromMatrixPosition(boneMatrix);\n          position.setXYZ(j, vector.x, vector.y, vector.z);\n          boneMatrix.multiplyMatrices(matrixWorldInv, bone.parent.matrixWorld);\n          vector.setFromMatrixPosition(boneMatrix);\n          position.setXYZ(j + 1, vector.x, vector.y, vector.z);\n          j += 2;\n        }\n      }\n\n      geometry.getAttribute('position').needsUpdate = true;\n      Object3D.prototype.updateMatrixWorld.call(this, force);\n    };\n  }();\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function PointLightHelper(light, sphereSize, color) {\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.color = color;\n    var geometry = new SphereBufferGeometry(sphereSize, 4, 2);\n    var material = new MeshBasicMaterial({\n      wireframe: true,\n      fog: false\n    });\n    Mesh.call(this, geometry, material);\n    this.matrix = this.light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.update();\n    /*\n    var distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n    var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n    \tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n    this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n    \tvar d = light.distance;\n    \tif ( d === 0.0 ) {\n    \t\tthis.lightDistance.visible = false;\n    \t} else {\n    \t\tthis.lightDistance.scale.set( d, d, d );\n    \t}\n    \tthis.add( this.lightDistance );\n    */\n  }\n\n  PointLightHelper.prototype = Object.create(Mesh.prototype);\n  PointLightHelper.prototype.constructor = PointLightHelper;\n\n  PointLightHelper.prototype.dispose = function () {\n    this.geometry.dispose();\n    this.material.dispose();\n  };\n\n  PointLightHelper.prototype.update = function () {\n    if (this.color !== undefined) {\n      this.material.color.set(this.color);\n    } else {\n      this.material.color.copy(this.light.color);\n    }\n    /*\n    var d = this.light.distance;\n    \tif ( d === 0.0 ) {\n    \t\tthis.lightDistance.visible = false;\n    \t} else {\n    \t\tthis.lightDistance.visible = true;\n    \tthis.lightDistance.scale.set( d, d, d );\n    \t}\n    */\n\n  };\n  /**\n   * @author abelnation / http://github.com/abelnation\n   * @author Mugen87 / http://github.com/Mugen87\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   *  This helper must be added as a child of the light\n   */\n\n\n  function RectAreaLightHelper(light, color) {\n    this.type = 'RectAreaLightHelper';\n    this.light = light;\n    this.color = color; // optional hardwired color for the helper\n\n    var positions = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0, 1, 1, 0];\n    var geometry = new BufferGeometry();\n    geometry.addAttribute('position', new Float32BufferAttribute(positions, 3));\n    geometry.computeBoundingSphere();\n    var material = new LineBasicMaterial({\n      fog: false\n    });\n    Line.call(this, geometry, material); //\n\n    var positions2 = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0];\n    var geometry2 = new BufferGeometry();\n    geometry2.addAttribute('position', new Float32BufferAttribute(positions2, 3));\n    geometry2.computeBoundingSphere();\n    this.add(new Mesh(geometry2, new MeshBasicMaterial({\n      side: THREE.BackSide,\n      fog: false\n    })));\n    this.update();\n  }\n\n  RectAreaLightHelper.prototype = Object.create(Line.prototype);\n  RectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\n  RectAreaLightHelper.prototype.update = function () {\n    this.scale.set(0.5 * this.light.width, 0.5 * this.light.height, 1);\n\n    if (this.color !== undefined) {\n      this.material.color.set(this.color);\n      this.children[0].material.color.set(this.color);\n    } else {\n      this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity); // prevent hue shift\n\n      var c = this.material.color;\n      var max = Math.max(c.r, c.g, c.b);\n      if (max > 1) c.multiplyScalar(1 / max);\n      this.children[0].material.color.copy(this.material.color);\n    }\n  };\n\n  RectAreaLightHelper.prototype.dispose = function () {\n    this.geometry.dispose();\n    this.material.dispose();\n    this.children[0].geometry.dispose();\n    this.children[0].material.dispose();\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n\n  function HemisphereLightHelper(light, size, color) {\n    Object3D.call(this);\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.color = color;\n    var geometry = new OctahedronBufferGeometry(size);\n    geometry.rotateY(Math.PI * 0.5);\n    this.material = new MeshBasicMaterial({\n      wireframe: true,\n      fog: false\n    });\n    if (this.color === undefined) this.material.vertexColors = VertexColors;\n    var position = geometry.getAttribute('position');\n    var colors = new Float32Array(position.count * 3);\n    geometry.addAttribute('color', new BufferAttribute(colors, 3));\n    this.add(new Mesh(geometry, this.material));\n    this.update();\n  }\n\n  HemisphereLightHelper.prototype = Object.create(Object3D.prototype);\n  HemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\n  HemisphereLightHelper.prototype.dispose = function () {\n    this.children[0].geometry.dispose();\n    this.children[0].material.dispose();\n  };\n\n  HemisphereLightHelper.prototype.update = function () {\n    var vector = new Vector3();\n    var color1 = new Color();\n    var color2 = new Color();\n    return function update() {\n      var mesh = this.children[0];\n\n      if (this.color !== undefined) {\n        this.material.color.set(this.color);\n      } else {\n        var colors = mesh.geometry.getAttribute('color');\n        color1.copy(this.light.color);\n        color2.copy(this.light.groundColor);\n\n        for (var i = 0, l = colors.count; i < l; i++) {\n          var color = i < l / 2 ? color1 : color2;\n          colors.setXYZ(i, color.r, color.g, color.b);\n        }\n\n        colors.needsUpdate = true;\n      }\n\n      mesh.lookAt(vector.setFromMatrixPosition(this.light.matrixWorld).negate());\n    };\n  }();\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function GridHelper(size, divisions, color1, color2) {\n    size = size || 10;\n    divisions = divisions || 10;\n    color1 = new Color(color1 !== undefined ? color1 : 0x444444);\n    color2 = new Color(color2 !== undefined ? color2 : 0x888888);\n    var center = divisions / 2;\n    var step = size / divisions;\n    var halfSize = size / 2;\n    var vertices = [],\n        colors = [];\n\n    for (var i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n      vertices.push(-halfSize, 0, k, halfSize, 0, k);\n      vertices.push(k, 0, -halfSize, k, 0, halfSize);\n      var color = i === center ? color1 : color2;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n    }\n\n    var geometry = new BufferGeometry();\n    geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: VertexColors\n    });\n    LineSegments.call(this, geometry, material);\n  }\n\n  GridHelper.prototype = Object.create(LineSegments.prototype);\n  GridHelper.prototype.constructor = GridHelper;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / http://github.com/Mugen87\n   * @author Hectate / http://www.github.com/Hectate\n   */\n\n  function PolarGridHelper(radius, radials, circles, divisions, color1, color2) {\n    radius = radius || 10;\n    radials = radials || 16;\n    circles = circles || 8;\n    divisions = divisions || 64;\n    color1 = new Color(color1 !== undefined ? color1 : 0x444444);\n    color2 = new Color(color2 !== undefined ? color2 : 0x888888);\n    var vertices = [];\n    var colors = [];\n    var x, z;\n    var v, i, j, r, color; // create the radials\n\n    for (i = 0; i <= radials; i++) {\n      v = i / radials * (Math.PI * 2);\n      x = Math.sin(v) * radius;\n      z = Math.cos(v) * radius;\n      vertices.push(0, 0, 0);\n      vertices.push(x, 0, z);\n      color = i & 1 ? color1 : color2;\n      colors.push(color.r, color.g, color.b);\n      colors.push(color.r, color.g, color.b);\n    } // create the circles\n\n\n    for (i = 0; i <= circles; i++) {\n      color = i & 1 ? color1 : color2;\n      r = radius - radius / circles * i;\n\n      for (j = 0; j < divisions; j++) {\n        // first vertex\n        v = j / divisions * (Math.PI * 2);\n        x = Math.sin(v) * r;\n        z = Math.cos(v) * r;\n        vertices.push(x, 0, z);\n        colors.push(color.r, color.g, color.b); // second vertex\n\n        v = (j + 1) / divisions * (Math.PI * 2);\n        x = Math.sin(v) * r;\n        z = Math.cos(v) * r;\n        vertices.push(x, 0, z);\n        colors.push(color.r, color.g, color.b);\n      }\n    }\n\n    var geometry = new BufferGeometry();\n    geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: VertexColors\n    });\n    LineSegments.call(this, geometry, material);\n  }\n\n  PolarGridHelper.prototype = Object.create(LineSegments.prototype);\n  PolarGridHelper.prototype.constructor = PolarGridHelper;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function FaceNormalsHelper(object, size, hex, linewidth) {\n    // FaceNormalsHelper only supports THREE.Geometry\n    this.object = object;\n    this.size = size !== undefined ? size : 1;\n    var color = hex !== undefined ? hex : 0xffff00;\n    var width = linewidth !== undefined ? linewidth : 1; //\n\n    var nNormals = 0;\n    var objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n      nNormals = objGeometry.faces.length;\n    } else {\n      console.warn('THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.');\n    } //\n\n\n    var geometry = new BufferGeometry();\n    var positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n    geometry.addAttribute('position', positions);\n    LineSegments.call(this, geometry, new LineBasicMaterial({\n      color: color,\n      linewidth: width\n    })); //\n\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n\n  FaceNormalsHelper.prototype = Object.create(LineSegments.prototype);\n  FaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\n  FaceNormalsHelper.prototype.update = function () {\n    var v1 = new Vector3();\n    var v2 = new Vector3();\n    var normalMatrix = new Matrix3();\n    return function update() {\n      this.object.updateMatrixWorld(true);\n      normalMatrix.getNormalMatrix(this.object.matrixWorld);\n      var matrixWorld = this.object.matrixWorld;\n      var position = this.geometry.attributes.position; //\n\n      var objGeometry = this.object.geometry;\n      var vertices = objGeometry.vertices;\n      var faces = objGeometry.faces;\n      var idx = 0;\n\n      for (var i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n        var normal = face.normal;\n        v1.copy(vertices[face.a]).add(vertices[face.b]).add(vertices[face.c]).divideScalar(3).applyMatrix4(matrixWorld);\n        v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n        position.setXYZ(idx, v1.x, v1.y, v1.z);\n        idx = idx + 1;\n        position.setXYZ(idx, v2.x, v2.y, v2.z);\n        idx = idx + 1;\n      }\n\n      position.needsUpdate = true;\n    };\n  }();\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  function DirectionalLightHelper(light, size, color) {\n    Object3D.call(this);\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.color = color;\n    if (size === undefined) size = 1;\n    var geometry = new BufferGeometry();\n    geometry.addAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n    var material = new LineBasicMaterial({\n      fog: false\n    });\n    this.lightPlane = new Line(geometry, material);\n    this.add(this.lightPlane);\n    geometry = new BufferGeometry();\n    geometry.addAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n    this.targetLine = new Line(geometry, material);\n    this.add(this.targetLine);\n    this.update();\n  }\n\n  DirectionalLightHelper.prototype = Object.create(Object3D.prototype);\n  DirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\n  DirectionalLightHelper.prototype.dispose = function () {\n    this.lightPlane.geometry.dispose();\n    this.lightPlane.material.dispose();\n    this.targetLine.geometry.dispose();\n    this.targetLine.material.dispose();\n  };\n\n  DirectionalLightHelper.prototype.update = function () {\n    var v1 = new Vector3();\n    var v2 = new Vector3();\n    var v3 = new Vector3();\n    return function update() {\n      v1.setFromMatrixPosition(this.light.matrixWorld);\n      v2.setFromMatrixPosition(this.light.target.matrixWorld);\n      v3.subVectors(v2, v1);\n      this.lightPlane.lookAt(v2);\n\n      if (this.color !== undefined) {\n        this.lightPlane.material.color.set(this.color);\n        this.targetLine.material.color.set(this.color);\n      } else {\n        this.lightPlane.material.color.copy(this.light.color);\n        this.targetLine.material.color.copy(this.light.color);\n      }\n\n      this.targetLine.lookAt(v2);\n      this.targetLine.scale.z = v3.length();\n    };\n  }();\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   *\t- shows frustum, line of sight and up of the camera\n   *\t- suitable for fast updates\n   * \t- based on frustum visualization in lightgl.js shadowmap example\n   *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n   */\n\n\n  function CameraHelper(camera) {\n    var geometry = new BufferGeometry();\n    var material = new LineBasicMaterial({\n      color: 0xffffff,\n      vertexColors: FaceColors\n    });\n    var vertices = [];\n    var colors = [];\n    var pointMap = {}; // colors\n\n    var colorFrustum = new Color(0xffaa00);\n    var colorCone = new Color(0xff0000);\n    var colorUp = new Color(0x00aaff);\n    var colorTarget = new Color(0xffffff);\n    var colorCross = new Color(0x333333); // near\n\n    addLine('n1', 'n2', colorFrustum);\n    addLine('n2', 'n4', colorFrustum);\n    addLine('n4', 'n3', colorFrustum);\n    addLine('n3', 'n1', colorFrustum); // far\n\n    addLine('f1', 'f2', colorFrustum);\n    addLine('f2', 'f4', colorFrustum);\n    addLine('f4', 'f3', colorFrustum);\n    addLine('f3', 'f1', colorFrustum); // sides\n\n    addLine('n1', 'f1', colorFrustum);\n    addLine('n2', 'f2', colorFrustum);\n    addLine('n3', 'f3', colorFrustum);\n    addLine('n4', 'f4', colorFrustum); // cone\n\n    addLine('p', 'n1', colorCone);\n    addLine('p', 'n2', colorCone);\n    addLine('p', 'n3', colorCone);\n    addLine('p', 'n4', colorCone); // up\n\n    addLine('u1', 'u2', colorUp);\n    addLine('u2', 'u3', colorUp);\n    addLine('u3', 'u1', colorUp); // target\n\n    addLine('c', 't', colorTarget);\n    addLine('p', 'c', colorCross); // cross\n\n    addLine('cn1', 'cn2', colorCross);\n    addLine('cn3', 'cn4', colorCross);\n    addLine('cf1', 'cf2', colorCross);\n    addLine('cf3', 'cf4', colorCross);\n\n    function addLine(a, b, color) {\n      addPoint(a, color);\n      addPoint(b, color);\n    }\n\n    function addPoint(id, color) {\n      vertices.push(0, 0, 0);\n      colors.push(color.r, color.g, color.b);\n\n      if (pointMap[id] === undefined) {\n        pointMap[id] = [];\n      }\n\n      pointMap[id].push(vertices.length / 3 - 1);\n    }\n\n    geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n    LineSegments.call(this, geometry, material);\n    this.camera = camera;\n    if (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\n    this.matrix = camera.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.pointMap = pointMap;\n    this.update();\n  }\n\n  CameraHelper.prototype = Object.create(LineSegments.prototype);\n  CameraHelper.prototype.constructor = CameraHelper;\n\n  CameraHelper.prototype.update = function () {\n    var geometry, pointMap;\n    var vector = new Vector3();\n    var camera = new Camera();\n\n    function setPoint(point, x, y, z) {\n      vector.set(x, y, z).unproject(camera);\n      var points = pointMap[point];\n\n      if (points !== undefined) {\n        var position = geometry.getAttribute('position');\n\n        for (var i = 0, l = points.length; i < l; i++) {\n          position.setXYZ(points[i], vector.x, vector.y, vector.z);\n        }\n      }\n    }\n\n    return function update() {\n      geometry = this.geometry;\n      pointMap = this.pointMap;\n      var w = 1,\n          h = 1; // we need just camera projection matrix\n      // world matrix must be identity\n\n      camera.projectionMatrix.copy(this.camera.projectionMatrix); // center / target\n\n      setPoint('c', 0, 0, -1);\n      setPoint('t', 0, 0, 1); // near\n\n      setPoint('n1', -w, -h, -1);\n      setPoint('n2', w, -h, -1);\n      setPoint('n3', -w, h, -1);\n      setPoint('n4', w, h, -1); // far\n\n      setPoint('f1', -w, -h, 1);\n      setPoint('f2', w, -h, 1);\n      setPoint('f3', -w, h, 1);\n      setPoint('f4', w, h, 1); // up\n\n      setPoint('u1', w * 0.7, h * 1.1, -1);\n      setPoint('u2', -w * 0.7, h * 1.1, -1);\n      setPoint('u3', 0, h * 2, -1); // cross\n\n      setPoint('cf1', -w, 0, 1);\n      setPoint('cf2', w, 0, 1);\n      setPoint('cf3', 0, -h, 1);\n      setPoint('cf4', 0, h, 1);\n      setPoint('cn1', -w, 0, -1);\n      setPoint('cn2', w, 0, -1);\n      setPoint('cn3', 0, -h, -1);\n      setPoint('cn4', 0, h, -1);\n      geometry.getAttribute('position').needsUpdate = true;\n    };\n  }();\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / http://github.com/Mugen87\n   */\n\n\n  function BoxHelper(object, color) {\n    this.object = object;\n    if (color === undefined) color = 0xffff00;\n    var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    var positions = new Float32Array(8 * 3);\n    var geometry = new BufferGeometry();\n    geometry.setIndex(new BufferAttribute(indices, 1));\n    geometry.addAttribute('position', new BufferAttribute(positions, 3));\n    LineSegments.call(this, geometry, new LineBasicMaterial({\n      color: color\n    }));\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n\n  BoxHelper.prototype = Object.create(LineSegments.prototype);\n  BoxHelper.prototype.constructor = BoxHelper;\n\n  BoxHelper.prototype.update = function () {\n    var box = new Box3();\n    return function update(object) {\n      if (object !== undefined) {\n        console.warn('THREE.BoxHelper: .update() has no longer arguments.');\n      }\n\n      if (this.object !== undefined) {\n        box.setFromObject(this.object);\n      }\n\n      if (box.isEmpty()) return;\n      var min = box.min;\n      var max = box.max;\n      /*\n        5____4\n      1/___0/|\n      | 6__|_7\n      2/___3/\n      \t0: max.x, max.y, max.z\n      1: min.x, max.y, max.z\n      2: min.x, min.y, max.z\n      3: max.x, min.y, max.z\n      4: max.x, max.y, min.z\n      5: min.x, max.y, min.z\n      6: min.x, min.y, min.z\n      7: max.x, min.y, min.z\n      */\n\n      var position = this.geometry.attributes.position;\n      var array = position.array;\n      array[0] = max.x;\n      array[1] = max.y;\n      array[2] = max.z;\n      array[3] = min.x;\n      array[4] = max.y;\n      array[5] = max.z;\n      array[6] = min.x;\n      array[7] = min.y;\n      array[8] = max.z;\n      array[9] = max.x;\n      array[10] = min.y;\n      array[11] = max.z;\n      array[12] = max.x;\n      array[13] = max.y;\n      array[14] = min.z;\n      array[15] = min.x;\n      array[16] = max.y;\n      array[17] = min.z;\n      array[18] = min.x;\n      array[19] = min.y;\n      array[20] = min.z;\n      array[21] = max.x;\n      array[22] = min.y;\n      array[23] = min.z;\n      position.needsUpdate = true;\n      this.geometry.computeBoundingSphere();\n    };\n  }();\n\n  BoxHelper.prototype.setFromObject = function (object) {\n    this.object = object;\n    this.update();\n    return this;\n  };\n\n  BoxHelper.prototype.copy = function (source) {\n    LineSegments.prototype.copy.call(this, source);\n    this.object = source.object;\n    return this;\n  };\n\n  BoxHelper.prototype.clone = function () {\n    return new this.constructor().copy(this);\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  function Box3Helper(box, hex) {\n    this.type = 'Box3Helper';\n    this.box = box;\n    var color = hex !== undefined ? hex : 0xffff00;\n    var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    var positions = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1];\n    var geometry = new BufferGeometry();\n    geometry.setIndex(new BufferAttribute(indices, 1));\n    geometry.addAttribute('position', new Float32BufferAttribute(positions, 3));\n    LineSegments.call(this, geometry, new LineBasicMaterial({\n      color: color\n    }));\n    this.geometry.computeBoundingSphere();\n  }\n\n  Box3Helper.prototype = Object.create(LineSegments.prototype);\n  Box3Helper.prototype.constructor = Box3Helper;\n\n  Box3Helper.prototype.updateMatrixWorld = function (force) {\n    var box = this.box;\n    if (box.isEmpty()) return;\n    box.getCenter(this.position);\n    box.getSize(this.scale);\n    this.scale.multiplyScalar(0.5);\n    Object3D.prototype.updateMatrixWorld.call(this, force);\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  function PlaneHelper(plane, size, hex) {\n    this.type = 'PlaneHelper';\n    this.plane = plane;\n    this.size = size === undefined ? 1 : size;\n    var color = hex !== undefined ? hex : 0xffff00;\n    var positions = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0];\n    var geometry = new BufferGeometry();\n    geometry.addAttribute('position', new Float32BufferAttribute(positions, 3));\n    geometry.computeBoundingSphere();\n    Line.call(this, geometry, new LineBasicMaterial({\n      color: color\n    })); //\n\n    var positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\n    var geometry2 = new BufferGeometry();\n    geometry2.addAttribute('position', new Float32BufferAttribute(positions2, 3));\n    geometry2.computeBoundingSphere();\n    this.add(new Mesh(geometry2, new MeshBasicMaterial({\n      color: color,\n      opacity: 0.2,\n      transparent: true,\n      depthWrite: false\n    })));\n  }\n\n  PlaneHelper.prototype = Object.create(Line.prototype);\n  PlaneHelper.prototype.constructor = PlaneHelper;\n\n  PlaneHelper.prototype.updateMatrixWorld = function (force) {\n    var scale = -this.plane.constant;\n    if (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\n\n    this.scale.set(0.5 * this.size, 0.5 * this.size, scale);\n    this.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n    this.lookAt(this.plane.normal);\n    Object3D.prototype.updateMatrixWorld.call(this, force);\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   * @author zz85 / http://github.com/zz85\n   * @author bhouston / http://clara.io\n   *\n   * Creates an arrow for visualizing directions\n   *\n   * Parameters:\n   *  dir - Vector3\n   *  origin - Vector3\n   *  length - Number\n   *  color - color in hex value\n   *  headLength - Number\n   *  headWidth - Number\n   */\n\n\n  var lineGeometry, coneGeometry;\n\n  function ArrowHelper(dir, origin, length, color, headLength, headWidth) {\n    // dir is assumed to be normalized\n    Object3D.call(this);\n    if (dir === undefined) dir = new THREE.Vector3(0, 0, 1);\n    if (origin === undefined) origin = new THREE.Vector3(0, 0, 0);\n    if (length === undefined) length = 1;\n    if (color === undefined) color = 0xffff00;\n    if (headLength === undefined) headLength = 0.2 * length;\n    if (headWidth === undefined) headWidth = 0.2 * headLength;\n\n    if (lineGeometry === undefined) {\n      lineGeometry = new BufferGeometry();\n      lineGeometry.addAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n      coneGeometry = new CylinderBufferGeometry(0, 0.5, 1, 5, 1);\n      coneGeometry.translate(0, -0.5, 0);\n    }\n\n    this.position.copy(origin);\n    this.line = new Line(lineGeometry, new LineBasicMaterial({\n      color: color\n    }));\n    this.line.matrixAutoUpdate = false;\n    this.add(this.line);\n    this.cone = new Mesh(coneGeometry, new MeshBasicMaterial({\n      color: color\n    }));\n    this.cone.matrixAutoUpdate = false;\n    this.add(this.cone);\n    this.setDirection(dir);\n    this.setLength(length, headLength, headWidth);\n  }\n\n  ArrowHelper.prototype = Object.create(Object3D.prototype);\n  ArrowHelper.prototype.constructor = ArrowHelper;\n\n  ArrowHelper.prototype.setDirection = function () {\n    var axis = new Vector3();\n    var radians;\n    return function setDirection(dir) {\n      // dir is assumed to be normalized\n      if (dir.y > 0.99999) {\n        this.quaternion.set(0, 0, 0, 1);\n      } else if (dir.y < -0.99999) {\n        this.quaternion.set(1, 0, 0, 0);\n      } else {\n        axis.set(dir.z, 0, -dir.x).normalize();\n        radians = Math.acos(dir.y);\n        this.quaternion.setFromAxisAngle(axis, radians);\n      }\n    };\n  }();\n\n  ArrowHelper.prototype.setLength = function (length, headLength, headWidth) {\n    if (headLength === undefined) headLength = 0.2 * length;\n    if (headWidth === undefined) headWidth = 0.2 * headLength;\n    this.line.scale.set(1, Math.max(0, length - headLength), 1);\n    this.line.updateMatrix();\n    this.cone.scale.set(headWidth, headLength, headWidth);\n    this.cone.position.y = length;\n    this.cone.updateMatrix();\n  };\n\n  ArrowHelper.prototype.setColor = function (color) {\n    this.line.material.color.copy(color);\n    this.cone.material.color.copy(color);\n  };\n\n  ArrowHelper.prototype.copy = function (source) {\n    Object3D.prototype.copy.call(this, source, false);\n    this.line.copy(source.line);\n    this.cone.copy(source.cone);\n    return this;\n  };\n\n  ArrowHelper.prototype.clone = function () {\n    return new this.constructor().copy(this);\n  };\n  /**\n   * @author sroucheray / http://sroucheray.org/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function AxesHelper(size) {\n    size = size || 1;\n    var vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\n    var colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\n    var geometry = new BufferGeometry();\n    geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: VertexColors\n    });\n    LineSegments.call(this, geometry, material);\n  }\n\n  AxesHelper.prototype = Object.create(LineSegments.prototype);\n  AxesHelper.prototype.constructor = AxesHelper;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Face4(a, b, c, d, normal, color, materialIndex) {\n    console.warn('THREE.Face4 has been removed. A THREE.Face3 will be created instead.');\n    return new Face3(a, b, c, normal, color, materialIndex);\n  }\n\n  var LineStrip = 0;\n  var LinePieces = 1;\n\n  function MeshFaceMaterial(materials) {\n    console.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');\n    return materials;\n  }\n\n  function MultiMaterial(materials) {\n    if (materials === undefined) materials = [];\n    console.warn('THREE.MultiMaterial has been removed. Use an Array instead.');\n    materials.isMultiMaterial = true;\n    materials.materials = materials;\n\n    materials.clone = function () {\n      return materials.slice();\n    };\n\n    return materials;\n  }\n\n  function PointCloud(geometry, material) {\n    console.warn('THREE.PointCloud has been renamed to THREE.Points.');\n    return new Points(geometry, material);\n  }\n\n  function Particle(material) {\n    console.warn('THREE.Particle has been renamed to THREE.Sprite.');\n    return new Sprite(material);\n  }\n\n  function ParticleSystem(geometry, material) {\n    console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n    return new Points(geometry, material);\n  }\n\n  function PointCloudMaterial(parameters) {\n    console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n    return new PointsMaterial(parameters);\n  }\n\n  function ParticleBasicMaterial(parameters) {\n    console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n    return new PointsMaterial(parameters);\n  }\n\n  function ParticleSystemMaterial(parameters) {\n    console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n    return new PointsMaterial(parameters);\n  }\n\n  function Vertex(x, y, z) {\n    console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\n    return new Vector3(x, y, z);\n  } //\n\n\n  function DynamicBufferAttribute(array, itemSize) {\n    console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.');\n    return new BufferAttribute(array, itemSize).setDynamic(true);\n  }\n\n  function Int8Attribute(array, itemSize) {\n    console.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');\n    return new Int8BufferAttribute(array, itemSize);\n  }\n\n  function Uint8Attribute(array, itemSize) {\n    console.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');\n    return new Uint8BufferAttribute(array, itemSize);\n  }\n\n  function Uint8ClampedAttribute(array, itemSize) {\n    console.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');\n    return new Uint8ClampedBufferAttribute(array, itemSize);\n  }\n\n  function Int16Attribute(array, itemSize) {\n    console.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');\n    return new Int16BufferAttribute(array, itemSize);\n  }\n\n  function Uint16Attribute(array, itemSize) {\n    console.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');\n    return new Uint16BufferAttribute(array, itemSize);\n  }\n\n  function Int32Attribute(array, itemSize) {\n    console.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');\n    return new Int32BufferAttribute(array, itemSize);\n  }\n\n  function Uint32Attribute(array, itemSize) {\n    console.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');\n    return new Uint32BufferAttribute(array, itemSize);\n  }\n\n  function Float32Attribute(array, itemSize) {\n    console.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');\n    return new Float32BufferAttribute(array, itemSize);\n  }\n\n  function Float64Attribute(array, itemSize) {\n    console.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');\n    return new Float64BufferAttribute(array, itemSize);\n  } //\n\n\n  Curve.create = function (construct, getPoint) {\n    console.log('THREE.Curve.create() has been deprecated');\n    construct.prototype = Object.create(Curve.prototype);\n    construct.prototype.constructor = construct;\n    construct.prototype.getPoint = getPoint;\n    return construct;\n  }; //\n\n\n  Object.assign(CurvePath.prototype, {\n    createPointsGeometry: function createPointsGeometry(divisions) {\n      console.warn('THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.'); // generate geometry from path points (for Line or Points objects)\n\n      var pts = this.getPoints(divisions);\n      return this.createGeometry(pts);\n    },\n    createSpacedPointsGeometry: function createSpacedPointsGeometry(divisions) {\n      console.warn('THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.'); // generate geometry from equidistant sampling along the path\n\n      var pts = this.getSpacedPoints(divisions);\n      return this.createGeometry(pts);\n    },\n    createGeometry: function createGeometry(points) {\n      console.warn('THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.');\n      var geometry = new Geometry();\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        var point = points[i];\n        geometry.vertices.push(new Vector3(point.x, point.y, point.z || 0));\n      }\n\n      return geometry;\n    }\n  }); //\n\n  Object.assign(Path.prototype, {\n    fromPoints: function fromPoints(points) {\n      console.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');\n      this.setFromPoints(points);\n    }\n  }); //\n\n  function ClosedSplineCurve3(points) {\n    console.warn('THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');\n    CatmullRomCurve3.call(this, points);\n    this.type = 'catmullrom';\n    this.closed = true;\n  }\n\n  ClosedSplineCurve3.prototype = Object.create(CatmullRomCurve3.prototype); //\n\n  function SplineCurve3(points) {\n    console.warn('THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');\n    CatmullRomCurve3.call(this, points);\n    this.type = 'catmullrom';\n  }\n\n  SplineCurve3.prototype = Object.create(CatmullRomCurve3.prototype); //\n\n  function Spline(points) {\n    console.warn('THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.');\n    CatmullRomCurve3.call(this, points);\n    this.type = 'catmullrom';\n  }\n\n  Spline.prototype = Object.create(CatmullRomCurve3.prototype);\n  Object.assign(Spline.prototype, {\n    initFromArray: function initFromArray()\n    /* a */\n    {\n      console.error('THREE.Spline: .initFromArray() has been removed.');\n    },\n    getControlPointsArray: function getControlPointsArray()\n    /* optionalTarget */\n    {\n      console.error('THREE.Spline: .getControlPointsArray() has been removed.');\n    },\n    reparametrizeByArcLength: function reparametrizeByArcLength()\n    /* samplingCoef */\n    {\n      console.error('THREE.Spline: .reparametrizeByArcLength() has been removed.');\n    }\n  }); //\n\n  function AxisHelper(size) {\n    console.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');\n    return new AxesHelper(size);\n  }\n\n  function BoundingBoxHelper(object, color) {\n    console.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');\n    return new BoxHelper(object, color);\n  }\n\n  function EdgesHelper(object, hex) {\n    console.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');\n    return new LineSegments(new EdgesGeometry(object.geometry), new LineBasicMaterial({\n      color: hex !== undefined ? hex : 0xffffff\n    }));\n  }\n\n  GridHelper.prototype.setColors = function () {\n    console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n  };\n\n  SkeletonHelper.prototype.update = function () {\n    console.error('THREE.SkeletonHelper: update() no longer needs to be called.');\n  };\n\n  function WireframeHelper(object, hex) {\n    console.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');\n    return new LineSegments(new WireframeGeometry(object.geometry), new LineBasicMaterial({\n      color: hex !== undefined ? hex : 0xffffff\n    }));\n  } //\n\n\n  Object.assign(Loader.prototype, {\n    extractUrlBase: function extractUrlBase(url) {\n      console.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');\n      return LoaderUtils.extractUrlBase(url);\n    }\n  });\n\n  function XHRLoader(manager) {\n    console.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');\n    return new FileLoader(manager);\n  }\n\n  function BinaryTextureLoader(manager) {\n    console.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');\n    return new DataTextureLoader(manager);\n  }\n\n  Object.assign(ObjectLoader.prototype, {\n    setTexturePath: function setTexturePath(value) {\n      console.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');\n      return this.setResourcePath(value);\n    }\n  }); //\n\n  Object.assign(Box2.prototype, {\n    center: function center(optionalTarget) {\n      console.warn('THREE.Box2: .center() has been renamed to .getCenter().');\n      return this.getCenter(optionalTarget);\n    },\n    empty: function empty() {\n      console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\n      return this.isEmpty();\n    },\n    isIntersectionBox: function isIntersectionBox(box) {\n      console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\n      return this.intersectsBox(box);\n    },\n    size: function size(optionalTarget) {\n      console.warn('THREE.Box2: .size() has been renamed to .getSize().');\n      return this.getSize(optionalTarget);\n    }\n  });\n  Object.assign(Box3.prototype, {\n    center: function center(optionalTarget) {\n      console.warn('THREE.Box3: .center() has been renamed to .getCenter().');\n      return this.getCenter(optionalTarget);\n    },\n    empty: function empty() {\n      console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\n      return this.isEmpty();\n    },\n    isIntersectionBox: function isIntersectionBox(box) {\n      console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\n      return this.intersectsBox(box);\n    },\n    isIntersectionSphere: function isIntersectionSphere(sphere) {\n      console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n      return this.intersectsSphere(sphere);\n    },\n    size: function size(optionalTarget) {\n      console.warn('THREE.Box3: .size() has been renamed to .getSize().');\n      return this.getSize(optionalTarget);\n    }\n  });\n\n  Line3.prototype.center = function (optionalTarget) {\n    console.warn('THREE.Line3: .center() has been renamed to .getCenter().');\n    return this.getCenter(optionalTarget);\n  };\n\n  Object.assign(_Math, {\n    random16: function random16() {\n      console.warn('THREE.Math: .random16() has been deprecated. Use Math.random() instead.');\n      return Math.random();\n    },\n    nearestPowerOfTwo: function nearestPowerOfTwo(value) {\n      console.warn('THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().');\n      return _Math.floorPowerOfTwo(value);\n    },\n    nextPowerOfTwo: function nextPowerOfTwo(value) {\n      console.warn('THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().');\n      return _Math.ceilPowerOfTwo(value);\n    }\n  });\n  Object.assign(Matrix3.prototype, {\n    flattenToArrayOffset: function flattenToArrayOffset(array, offset) {\n      console.warn(\"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\");\n      return this.toArray(array, offset);\n    },\n    multiplyVector3: function multiplyVector3(vector) {\n      console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n      return vector.applyMatrix3(this);\n    },\n    multiplyVector3Array: function multiplyVector3Array()\n    /* a */\n    {\n      console.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');\n    },\n    applyToBuffer: function applyToBuffer(buffer\n    /*, offset, length */\n    ) {\n      console.warn('THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.');\n      return this.applyToBufferAttribute(buffer);\n    },\n    applyToVector3Array: function applyToVector3Array()\n    /* array, offset, length */\n    {\n      console.error('THREE.Matrix3: .applyToVector3Array() has been removed.');\n    }\n  });\n  Object.assign(Matrix4.prototype, {\n    extractPosition: function extractPosition(m) {\n      console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n      return this.copyPosition(m);\n    },\n    flattenToArrayOffset: function flattenToArrayOffset(array, offset) {\n      console.warn(\"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\");\n      return this.toArray(array, offset);\n    },\n    getPosition: function () {\n      var v1;\n      return function getPosition() {\n        if (v1 === undefined) v1 = new Vector3();\n        console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n        return v1.setFromMatrixColumn(this, 3);\n      };\n    }(),\n    setRotationFromQuaternion: function setRotationFromQuaternion(q) {\n      console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n      return this.makeRotationFromQuaternion(q);\n    },\n    multiplyToArray: function multiplyToArray() {\n      console.warn('THREE.Matrix4: .multiplyToArray() has been removed.');\n    },\n    multiplyVector3: function multiplyVector3(vector) {\n      console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n      return vector.applyMatrix4(this);\n    },\n    multiplyVector4: function multiplyVector4(vector) {\n      console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n      return vector.applyMatrix4(this);\n    },\n    multiplyVector3Array: function multiplyVector3Array()\n    /* a */\n    {\n      console.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');\n    },\n    rotateAxis: function rotateAxis(v) {\n      console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n      v.transformDirection(this);\n    },\n    crossVector: function crossVector(vector) {\n      console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n      return vector.applyMatrix4(this);\n    },\n    translate: function translate() {\n      console.error('THREE.Matrix4: .translate() has been removed.');\n    },\n    rotateX: function rotateX() {\n      console.error('THREE.Matrix4: .rotateX() has been removed.');\n    },\n    rotateY: function rotateY() {\n      console.error('THREE.Matrix4: .rotateY() has been removed.');\n    },\n    rotateZ: function rotateZ() {\n      console.error('THREE.Matrix4: .rotateZ() has been removed.');\n    },\n    rotateByAxis: function rotateByAxis() {\n      console.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n    },\n    applyToBuffer: function applyToBuffer(buffer\n    /*, offset, length */\n    ) {\n      console.warn('THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.');\n      return this.applyToBufferAttribute(buffer);\n    },\n    applyToVector3Array: function applyToVector3Array()\n    /* array, offset, length */\n    {\n      console.error('THREE.Matrix4: .applyToVector3Array() has been removed.');\n    },\n    makeFrustum: function makeFrustum(left, right, bottom, top, near, far) {\n      console.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');\n      return this.makePerspective(left, right, top, bottom, near, far);\n    }\n  });\n\n  Plane.prototype.isIntersectionLine = function (line) {\n    console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\n    return this.intersectsLine(line);\n  };\n\n  Quaternion.prototype.multiplyVector3 = function (vector) {\n    console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n    return vector.applyQuaternion(this);\n  };\n\n  Object.assign(Ray.prototype, {\n    isIntersectionBox: function isIntersectionBox(box) {\n      console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\n      return this.intersectsBox(box);\n    },\n    isIntersectionPlane: function isIntersectionPlane(plane) {\n      console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\n      return this.intersectsPlane(plane);\n    },\n    isIntersectionSphere: function isIntersectionSphere(sphere) {\n      console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n      return this.intersectsSphere(sphere);\n    }\n  });\n  Object.assign(Triangle.prototype, {\n    area: function area() {\n      console.warn('THREE.Triangle: .area() has been renamed to .getArea().');\n      return this.getArea();\n    },\n    barycoordFromPoint: function barycoordFromPoint(point, target) {\n      console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n      return this.getBarycoord(point, target);\n    },\n    midpoint: function midpoint(target) {\n      console.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');\n      return this.getMidpoint(target);\n    },\n    normal: function normal(target) {\n      console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n      return this.getNormal(target);\n    },\n    plane: function plane(target) {\n      console.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');\n      return this.getPlane(target);\n    }\n  });\n  Object.assign(Triangle, {\n    barycoordFromPoint: function barycoordFromPoint(point, a, b, c, target) {\n      console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n      return Triangle.getBarycoord(point, a, b, c, target);\n    },\n    normal: function normal(a, b, c, target) {\n      console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n      return Triangle.getNormal(a, b, c, target);\n    }\n  });\n  Object.assign(Shape.prototype, {\n    extractAllPoints: function extractAllPoints(divisions) {\n      console.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');\n      return this.extractPoints(divisions);\n    },\n    extrude: function extrude(options) {\n      console.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');\n      return new ExtrudeGeometry(this, options);\n    },\n    makeGeometry: function makeGeometry(options) {\n      console.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');\n      return new ShapeGeometry(this, options);\n    }\n  });\n  Object.assign(Vector2.prototype, {\n    fromAttribute: function fromAttribute(attribute, index, offset) {\n      console.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');\n      return this.fromBufferAttribute(attribute, index, offset);\n    },\n    distanceToManhattan: function distanceToManhattan(v) {\n      console.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n      return this.manhattanDistanceTo(v);\n    },\n    lengthManhattan: function lengthManhattan() {\n      console.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');\n      return this.manhattanLength();\n    }\n  });\n  Object.assign(Vector3.prototype, {\n    setEulerFromRotationMatrix: function setEulerFromRotationMatrix() {\n      console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n    },\n    setEulerFromQuaternion: function setEulerFromQuaternion() {\n      console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n    },\n    getPositionFromMatrix: function getPositionFromMatrix(m) {\n      console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n      return this.setFromMatrixPosition(m);\n    },\n    getScaleFromMatrix: function getScaleFromMatrix(m) {\n      console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n      return this.setFromMatrixScale(m);\n    },\n    getColumnFromMatrix: function getColumnFromMatrix(index, matrix) {\n      console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n      return this.setFromMatrixColumn(matrix, index);\n    },\n    applyProjection: function applyProjection(m) {\n      console.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');\n      return this.applyMatrix4(m);\n    },\n    fromAttribute: function fromAttribute(attribute, index, offset) {\n      console.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');\n      return this.fromBufferAttribute(attribute, index, offset);\n    },\n    distanceToManhattan: function distanceToManhattan(v) {\n      console.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n      return this.manhattanDistanceTo(v);\n    },\n    lengthManhattan: function lengthManhattan() {\n      console.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');\n      return this.manhattanLength();\n    }\n  });\n  Object.assign(Vector4.prototype, {\n    fromAttribute: function fromAttribute(attribute, index, offset) {\n      console.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');\n      return this.fromBufferAttribute(attribute, index, offset);\n    },\n    lengthManhattan: function lengthManhattan() {\n      console.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');\n      return this.manhattanLength();\n    }\n  }); //\n\n  Object.assign(Geometry.prototype, {\n    computeTangents: function computeTangents() {\n      console.error('THREE.Geometry: .computeTangents() has been removed.');\n    },\n    computeLineDistances: function computeLineDistances() {\n      console.error('THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.');\n    }\n  });\n  Object.assign(Object3D.prototype, {\n    getChildByName: function getChildByName(name) {\n      console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n      return this.getObjectByName(name);\n    },\n    renderDepth: function renderDepth() {\n      console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n    },\n    translate: function translate(distance, axis) {\n      console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n      return this.translateOnAxis(axis, distance);\n    },\n    getWorldRotation: function getWorldRotation() {\n      console.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');\n    }\n  });\n  Object.defineProperties(Object3D.prototype, {\n    eulerOrder: {\n      get: function get() {\n        console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n        return this.rotation.order;\n      },\n      set: function set(value) {\n        console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n        this.rotation.order = value;\n      }\n    },\n    useQuaternion: {\n      get: function get() {\n        console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n      },\n      set: function set() {\n        console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n      }\n    }\n  });\n  Object.defineProperties(LOD.prototype, {\n    objects: {\n      get: function get() {\n        console.warn('THREE.LOD: .objects has been renamed to .levels.');\n        return this.levels;\n      }\n    }\n  });\n  Object.defineProperty(Skeleton.prototype, 'useVertexTexture', {\n    get: function get() {\n      console.warn('THREE.Skeleton: useVertexTexture has been removed.');\n    },\n    set: function set() {\n      console.warn('THREE.Skeleton: useVertexTexture has been removed.');\n    }\n  });\n\n  SkinnedMesh.prototype.initBones = function () {\n    console.error('THREE.SkinnedMesh: initBones() has been removed.');\n  };\n\n  Object.defineProperty(Curve.prototype, '__arcLengthDivisions', {\n    get: function get() {\n      console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');\n      return this.arcLengthDivisions;\n    },\n    set: function set(value) {\n      console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');\n      this.arcLengthDivisions = value;\n    }\n  }); //\n\n  PerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n    console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. \" + \"Use .setFocalLength and .filmGauge for a photographic setup.\");\n    if (filmGauge !== undefined) this.filmGauge = filmGauge;\n    this.setFocalLength(focalLength);\n  }; //\n\n\n  Object.defineProperties(Light.prototype, {\n    onlyShadow: {\n      set: function set() {\n        console.warn('THREE.Light: .onlyShadow has been removed.');\n      }\n    },\n    shadowCameraFov: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\n        this.shadow.camera.fov = value;\n      }\n    },\n    shadowCameraLeft: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\n        this.shadow.camera.left = value;\n      }\n    },\n    shadowCameraRight: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\n        this.shadow.camera.right = value;\n      }\n    },\n    shadowCameraTop: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\n        this.shadow.camera.top = value;\n      }\n    },\n    shadowCameraBottom: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\n        this.shadow.camera.bottom = value;\n      }\n    },\n    shadowCameraNear: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\n        this.shadow.camera.near = value;\n      }\n    },\n    shadowCameraFar: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\n        this.shadow.camera.far = value;\n      }\n    },\n    shadowCameraVisible: {\n      set: function set() {\n        console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\n      }\n    },\n    shadowBias: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowBias is now .shadow.bias.');\n        this.shadow.bias = value;\n      }\n    },\n    shadowDarkness: {\n      set: function set() {\n        console.warn('THREE.Light: .shadowDarkness has been removed.');\n      }\n    },\n    shadowMapWidth: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\n        this.shadow.mapSize.width = value;\n      }\n    },\n    shadowMapHeight: {\n      set: function set(value) {\n        console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\n        this.shadow.mapSize.height = value;\n      }\n    }\n  }); //\n\n  Object.defineProperties(BufferAttribute.prototype, {\n    length: {\n      get: function get() {\n        console.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');\n        return this.array.length;\n      }\n    },\n    copyIndicesArray: function copyIndicesArray()\n    /* indices */\n    {\n      console.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');\n    }\n  });\n  Object.assign(BufferGeometry.prototype, {\n    addIndex: function addIndex(index) {\n      console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n      this.setIndex(index);\n    },\n    addDrawCall: function addDrawCall(start, count, indexOffset) {\n      if (indexOffset !== undefined) {\n        console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n      }\n\n      console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n      this.addGroup(start, count);\n    },\n    clearDrawCalls: function clearDrawCalls() {\n      console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n      this.clearGroups();\n    },\n    computeTangents: function computeTangents() {\n      console.warn('THREE.BufferGeometry: .computeTangents() has been removed.');\n    },\n    computeOffsets: function computeOffsets() {\n      console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n    }\n  });\n  Object.defineProperties(BufferGeometry.prototype, {\n    drawcalls: {\n      get: function get() {\n        console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n        return this.groups;\n      }\n    },\n    offsets: {\n      get: function get() {\n        console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n        return this.groups;\n      }\n    }\n  }); //\n\n  Object.assign(ExtrudeBufferGeometry.prototype, {\n    getArrays: function getArrays() {\n      console.error('THREE.ExtrudeBufferGeometry: .getArrays() has been removed.');\n    },\n    addShapeList: function addShapeList() {\n      console.error('THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.');\n    },\n    addShape: function addShape() {\n      console.error('THREE.ExtrudeBufferGeometry: .addShape() has been removed.');\n    }\n  }); //\n\n  Object.defineProperties(Uniform.prototype, {\n    dynamic: {\n      set: function set() {\n        console.warn('THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.');\n      }\n    },\n    onUpdate: {\n      value: function value() {\n        console.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');\n        return this;\n      }\n    }\n  }); //\n\n  Object.defineProperties(Material.prototype, {\n    wrapAround: {\n      get: function get() {\n        console.warn('THREE.Material: .wrapAround has been removed.');\n      },\n      set: function set() {\n        console.warn('THREE.Material: .wrapAround has been removed.');\n      }\n    },\n    overdraw: {\n      get: function get() {\n        console.warn('THREE.Material: .overdraw has been removed.');\n      },\n      set: function set() {\n        console.warn('THREE.Material: .overdraw has been removed.');\n      }\n    },\n    wrapRGB: {\n      get: function get() {\n        console.warn('THREE.Material: .wrapRGB has been removed.');\n        return new Color();\n      }\n    },\n    shading: {\n      get: function get() {\n        console.error('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n      },\n      set: function set(value) {\n        console.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n        this.flatShading = value === FlatShading;\n      }\n    }\n  });\n  Object.defineProperties(MeshPhongMaterial.prototype, {\n    metal: {\n      get: function get() {\n        console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.');\n        return false;\n      },\n      set: function set() {\n        console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead');\n      }\n    }\n  });\n  Object.defineProperties(ShaderMaterial.prototype, {\n    derivatives: {\n      get: function get() {\n        console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n        return this.extensions.derivatives;\n      },\n      set: function set(value) {\n        console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n        this.extensions.derivatives = value;\n      }\n    }\n  }); //\n\n  Object.assign(WebGLRenderer.prototype, {\n    clearTarget: function clearTarget(renderTarget, color, depth, stencil) {\n      console.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');\n      this.setRenderTarget(renderTarget);\n      this.clear(color, depth, stencil);\n    },\n    animate: function animate(callback) {\n      console.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');\n      this.setAnimationLoop(callback);\n    },\n    getCurrentRenderTarget: function getCurrentRenderTarget() {\n      console.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');\n      return this.getRenderTarget();\n    },\n    getMaxAnisotropy: function getMaxAnisotropy() {\n      console.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');\n      return this.capabilities.getMaxAnisotropy();\n    },\n    getPrecision: function getPrecision() {\n      console.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');\n      return this.capabilities.precision;\n    },\n    resetGLState: function resetGLState() {\n      console.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');\n      return this.state.reset();\n    },\n    supportsFloatTextures: function supportsFloatTextures() {\n      console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n      return this.extensions.get('OES_texture_float');\n    },\n    supportsHalfFloatTextures: function supportsHalfFloatTextures() {\n      console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n      return this.extensions.get('OES_texture_half_float');\n    },\n    supportsStandardDerivatives: function supportsStandardDerivatives() {\n      console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n      return this.extensions.get('OES_standard_derivatives');\n    },\n    supportsCompressedTextureS3TC: function supportsCompressedTextureS3TC() {\n      console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n      return this.extensions.get('WEBGL_compressed_texture_s3tc');\n    },\n    supportsCompressedTexturePVRTC: function supportsCompressedTexturePVRTC() {\n      console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n      return this.extensions.get('WEBGL_compressed_texture_pvrtc');\n    },\n    supportsBlendMinMax: function supportsBlendMinMax() {\n      console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n      return this.extensions.get('EXT_blend_minmax');\n    },\n    supportsVertexTextures: function supportsVertexTextures() {\n      console.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');\n      return this.capabilities.vertexTextures;\n    },\n    supportsInstancedArrays: function supportsInstancedArrays() {\n      console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n      return this.extensions.get('ANGLE_instanced_arrays');\n    },\n    enableScissorTest: function enableScissorTest(boolean) {\n      console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\n      this.setScissorTest(boolean);\n    },\n    initMaterial: function initMaterial() {\n      console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n    },\n    addPrePlugin: function addPrePlugin() {\n      console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n    },\n    addPostPlugin: function addPostPlugin() {\n      console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n    },\n    updateShadowMap: function updateShadowMap() {\n      console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n    },\n    setFaceCulling: function setFaceCulling() {\n      console.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');\n    }\n  });\n  Object.defineProperties(WebGLRenderer.prototype, {\n    shadowMapEnabled: {\n      get: function get() {\n        return this.shadowMap.enabled;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n        this.shadowMap.enabled = value;\n      }\n    },\n    shadowMapType: {\n      get: function get() {\n        return this.shadowMap.type;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n        this.shadowMap.type = value;\n      }\n    },\n    shadowMapCullFace: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function set()\n      /* value */\n      {\n        console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n      }\n    }\n  });\n  Object.defineProperties(WebGLShadowMap.prototype, {\n    cullFace: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function set()\n      /* cullFace */\n      {\n        console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n      }\n    },\n    renderReverseSided: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function set() {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n      }\n    },\n    renderSingleSided: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function set() {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n      }\n    }\n  }); //\n\n  Object.defineProperties(WebGLRenderTarget.prototype, {\n    wrapS: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n        return this.texture.wrapS;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n        this.texture.wrapS = value;\n      }\n    },\n    wrapT: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n        return this.texture.wrapT;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n        this.texture.wrapT = value;\n      }\n    },\n    magFilter: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n        return this.texture.magFilter;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n        this.texture.magFilter = value;\n      }\n    },\n    minFilter: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n        return this.texture.minFilter;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n        this.texture.minFilter = value;\n      }\n    },\n    anisotropy: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n        return this.texture.anisotropy;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n        this.texture.anisotropy = value;\n      }\n    },\n    offset: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n        return this.texture.offset;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n        this.texture.offset = value;\n      }\n    },\n    repeat: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n        return this.texture.repeat;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n        this.texture.repeat = value;\n      }\n    },\n    format: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n        return this.texture.format;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n        this.texture.format = value;\n      }\n    },\n    type: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n        return this.texture.type;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n        this.texture.type = value;\n      }\n    },\n    generateMipmaps: {\n      get: function get() {\n        console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n        return this.texture.generateMipmaps;\n      },\n      set: function set(value) {\n        console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n        this.texture.generateMipmaps = value;\n      }\n    }\n  }); //\n\n  Object.defineProperties(WebVRManager.prototype, {\n    standing: {\n      set: function set()\n      /* value */\n      {\n        console.warn('THREE.WebVRManager: .standing has been removed.');\n      }\n    },\n    userHeight: {\n      set: function set()\n      /* value */\n      {\n        console.warn('THREE.WebVRManager: .userHeight has been removed.');\n      }\n    }\n  }); //\n\n  Audio.prototype.load = function (file) {\n    console.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');\n    var scope = this;\n    var audioLoader = new AudioLoader();\n    audioLoader.load(file, function (buffer) {\n      scope.setBuffer(buffer);\n    });\n    return this;\n  };\n\n  AudioAnalyser.prototype.getData = function () {\n    console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\n    return this.getFrequencyData();\n  }; //\n\n\n  CubeCamera.prototype.updateCubeMap = function (renderer, scene) {\n    console.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');\n    return this.update(renderer, scene);\n  }; //\n\n\n  var GeometryUtils = {\n    merge: function merge(geometry1, geometry2, materialIndexOffset) {\n      console.warn('THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.');\n      var matrix;\n\n      if (geometry2.isMesh) {\n        geometry2.matrixAutoUpdate && geometry2.updateMatrix();\n        matrix = geometry2.matrix;\n        geometry2 = geometry2.geometry;\n      }\n\n      geometry1.merge(geometry2, matrix, materialIndexOffset);\n    },\n    center: function center(geometry) {\n      console.warn('THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.');\n      return geometry.center();\n    }\n  };\n  ImageUtils.crossOrigin = undefined;\n\n  ImageUtils.loadTexture = function (url, mapping, onLoad, onError) {\n    console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\n    var loader = new TextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    var texture = loader.load(url, onLoad, undefined, onError);\n    if (mapping) texture.mapping = mapping;\n    return texture;\n  };\n\n  ImageUtils.loadTextureCube = function (urls, mapping, onLoad, onError) {\n    console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\n    var loader = new CubeTextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    var texture = loader.load(urls, onLoad, undefined, onError);\n    if (mapping) texture.mapping = mapping;\n    return texture;\n  };\n\n  ImageUtils.loadCompressedTexture = function () {\n    console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n  };\n\n  ImageUtils.loadCompressedTextureCube = function () {\n    console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n  }; //\n\n\n  function Projector() {\n    console.error('THREE.Projector has been moved to /examples/js/renderers/Projector.js.');\n\n    this.projectVector = function (vector, camera) {\n      console.warn('THREE.Projector: .projectVector() is now vector.project().');\n      vector.project(camera);\n    };\n\n    this.unprojectVector = function (vector, camera) {\n      console.warn('THREE.Projector: .unprojectVector() is now vector.unproject().');\n      vector.unproject(camera);\n    };\n\n    this.pickingRay = function () {\n      console.error('THREE.Projector: .pickingRay() is now raycaster.setFromCamera().');\n    };\n  } //\n\n\n  function CanvasRenderer() {\n    console.error('THREE.CanvasRenderer has been removed');\n  } //\n\n\n  function JSONLoader() {\n    console.error('THREE.JSONLoader has been removed.');\n  } //\n\n\n  var SceneUtils = {\n    createMultiMaterialObject: function createMultiMaterialObject()\n    /* geometry, materials */\n    {\n      console.error('THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js');\n    },\n    detach: function detach()\n    /* child, parent, scene */\n    {\n      console.error('THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js');\n    },\n    attach: function attach()\n    /* child, scene, parent */\n    {\n      console.error('THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js');\n    }\n  }; //\n\n  function LensFlare() {\n    console.error('THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js');\n  }\n  /***/\n\n},\n/* 13 */\n\n/***/\nfunction (module, exports) {\n  module.exports = function (THREE) {\n    /**\n     * @author qiao / https://github.com/qiao\n     * @author mrdoob / http://mrdoob.com\n     * @author alteredq / http://alteredqualia.com/\n     * @author WestLangley / http://github.com/WestLangley\n     * @author erich666 / http://erichaines.com\n     */\n    // This set of controls performs orbiting, dollying (zooming), and panning.\n    // Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n    //\n    //    Orbit - left mouse / touch: one finger move\n    //    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n    //    Pan - right mouse, or arrow keys / touch: three finter swipe\n    function OrbitControls(object, domElement) {\n      this.object = object;\n      this.domElement = domElement !== undefined ? domElement : document; // Set to false to disable this control\n\n      this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n      this.target = new THREE.Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n      this.minDistance = 0;\n      this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n      this.minZoom = 0;\n      this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n      // Range is 0 to Math.PI radians.\n\n      this.minPolarAngle = 0; // radians\n\n      this.maxPolarAngle = Math.PI; // radians\n      // How far you can orbit horizontally, upper and lower limits.\n      // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\n      this.minAzimuthAngle = -Infinity; // radians\n\n      this.maxAzimuthAngle = Infinity; // radians\n      // Set to true to enable damping (inertia)\n      // If damping is enabled, you must call controls.update() in your animation loop\n\n      this.enableDamping = false;\n      this.dampingFactor = 0.25; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n      // Set to false to disable zooming\n\n      this.enableZoom = true;\n      this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n      this.enableRotate = true;\n      this.rotateSpeed = 1.0; // Set to false to disable panning\n\n      this.enablePan = true;\n      this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n      // Set to true to automatically rotate around the target\n      // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n      this.autoRotate = false;\n      this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n      // Set to false to disable use of the keys\n\n      this.enableKeys = true; // The four arrow keys\n\n      this.keys = {\n        LEFT: 37,\n        UP: 38,\n        RIGHT: 39,\n        BOTTOM: 40\n      }; // Mouse buttons\n\n      this.mouseButtons = {\n        ORBIT: THREE.MOUSE.LEFT,\n        ZOOM: THREE.MOUSE.MIDDLE,\n        PAN: THREE.MOUSE.RIGHT\n      }; // for reset\n\n      this.target0 = this.target.clone();\n      this.position0 = this.object.position.clone();\n      this.zoom0 = this.object.zoom; //\n      // public methods\n      //\n\n      this.getPolarAngle = function () {\n        return spherical.phi;\n      };\n\n      this.getAzimuthalAngle = function () {\n        return spherical.theta;\n      };\n\n      this.reset = function () {\n        scope.target.copy(scope.target0);\n        scope.object.position.copy(scope.position0);\n        scope.object.zoom = scope.zoom0;\n        scope.object.updateProjectionMatrix();\n        scope.dispatchEvent(changeEvent);\n        scope.update();\n        state = STATE.NONE;\n      }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n      this.update = function () {\n        var offset = new THREE.Vector3(); // so camera.up is the orbit axis\n\n        var quat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n        var quatInverse = quat.clone().inverse();\n        var lastPosition = new THREE.Vector3();\n        var lastQuaternion = new THREE.Quaternion();\n        return function update() {\n          var position = scope.object.position;\n          offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n          offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n          spherical.setFromVector3(offset);\n\n          if (scope.autoRotate && state === STATE.NONE) {\n            rotateLeft(getAutoRotationAngle());\n          }\n\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi; // restrict theta to be between desired limits\n\n          spherical.theta = Math.max(scope.minAzimuthAngle, Math.min(scope.maxAzimuthAngle, spherical.theta)); // restrict phi to be between desired limits\n\n          spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n          spherical.makeSafe();\n          spherical.radius *= scale; // restrict radius to be between desired limits\n\n          spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n          scope.target.add(panOffset);\n          offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n          offset.applyQuaternion(quatInverse);\n          position.copy(scope.target).add(offset);\n          scope.object.lookAt(scope.target);\n\n          if (scope.enableDamping === true) {\n            sphericalDelta.theta *= 1 - scope.dampingFactor;\n            sphericalDelta.phi *= 1 - scope.dampingFactor;\n          } else {\n            sphericalDelta.set(0, 0, 0);\n          }\n\n          scale = 1;\n          panOffset.set(0, 0, 0); // update condition is:\n          // min(camera displacement, camera rotation in radians)^2 > EPS\n          // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n          if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n            scope.dispatchEvent(changeEvent);\n            lastPosition.copy(scope.object.position);\n            lastQuaternion.copy(scope.object.quaternion);\n            zoomChanged = false;\n            return true;\n          }\n\n          return false;\n        };\n      }();\n\n      this.dispose = function () {\n        scope.domElement.removeEventListener('contextmenu', onContextMenu, false);\n        scope.domElement.removeEventListener('mousedown', onMouseDown, false);\n        scope.domElement.removeEventListener('wheel', onMouseWheel, false);\n        scope.domElement.removeEventListener('touchstart', onTouchStart, false);\n        scope.domElement.removeEventListener('touchend', onTouchEnd, false);\n        scope.domElement.removeEventListener('touchmove', onTouchMove, false);\n        document.removeEventListener('mousemove', onMouseMove, false);\n        document.removeEventListener('mouseup', onMouseUp, false);\n        window.removeEventListener('keydown', onKeyDown, false); //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n      }; //\n      // internals\n      //\n\n\n      var scope = this;\n      var changeEvent = {\n        type: 'change'\n      };\n      var startEvent = {\n        type: 'start'\n      };\n      var endEvent = {\n        type: 'end'\n      };\n      var STATE = {\n        NONE: -1,\n        ROTATE: 0,\n        DOLLY: 1,\n        PAN: 2,\n        TOUCH_ROTATE: 3,\n        TOUCH_DOLLY: 4,\n        TOUCH_PAN: 5\n      };\n      var state = STATE.NONE;\n      var EPS = 0.000001; // current position in spherical coordinates\n\n      var spherical = new THREE.Spherical();\n      var sphericalDelta = new THREE.Spherical();\n      var scale = 1;\n      var panOffset = new THREE.Vector3();\n      var zoomChanged = false;\n      var rotateStart = new THREE.Vector2();\n      var rotateEnd = new THREE.Vector2();\n      var rotateDelta = new THREE.Vector2();\n      var panStart = new THREE.Vector2();\n      var panEnd = new THREE.Vector2();\n      var panDelta = new THREE.Vector2();\n      var dollyStart = new THREE.Vector2();\n      var dollyEnd = new THREE.Vector2();\n      var dollyDelta = new THREE.Vector2();\n\n      function getAutoRotationAngle() {\n        return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n      }\n\n      function getZoomScale() {\n        return Math.pow(0.95, scope.zoomSpeed);\n      }\n\n      function rotateLeft(angle) {\n        sphericalDelta.theta -= angle;\n      }\n\n      function rotateUp(angle) {\n        sphericalDelta.phi -= angle;\n      }\n\n      var panLeft = function () {\n        var v = new THREE.Vector3();\n        return function panLeft(distance, objectMatrix) {\n          v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n          v.multiplyScalar(-distance);\n          panOffset.add(v);\n        };\n      }();\n\n      var panUp = function () {\n        var v = new THREE.Vector3();\n        return function panUp(distance, objectMatrix) {\n          v.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\n\n          v.multiplyScalar(distance);\n          panOffset.add(v);\n        };\n      }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n      var pan = function () {\n        var offset = new THREE.Vector3();\n        return function pan(deltaX, deltaY) {\n          var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n          if (scope.object instanceof THREE.PerspectiveCamera) {\n            // perspective\n            var position = scope.object.position;\n            offset.copy(position).sub(scope.target);\n            var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n            targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we actually don't use screenWidth, since perspective camera is fixed to screen height\n\n            panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n            panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n          } else if (scope.object instanceof THREE.OrthographicCamera) {\n            // orthographic\n            panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n            panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n          } else {\n            // camera neither orthographic nor perspective\n            console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n            scope.enablePan = false;\n          }\n        };\n      }();\n\n      function dollyIn(dollyScale) {\n        if (scope.object instanceof THREE.PerspectiveCamera) {\n          scale /= dollyScale;\n        } else if (scope.object instanceof THREE.OrthographicCamera) {\n          scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n          scope.object.updateProjectionMatrix();\n          zoomChanged = true;\n        } else {\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n          scope.enableZoom = false;\n        }\n      }\n\n      function dollyOut(dollyScale) {\n        if (scope.object instanceof THREE.PerspectiveCamera) {\n          scale *= dollyScale;\n        } else if (scope.object instanceof THREE.OrthographicCamera) {\n          scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n          scope.object.updateProjectionMatrix();\n          zoomChanged = true;\n        } else {\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n          scope.enableZoom = false;\n        }\n      } //\n      // event callbacks - update the object state\n      //\n\n\n      function handleMouseDownRotate(event) {\n        //console.log( 'handleMouseDownRotate' );\n        rotateStart.set(event.clientX, event.clientY);\n      }\n\n      function handleMouseDownDolly(event) {\n        //console.log( 'handleMouseDownDolly' );\n        dollyStart.set(event.clientX, event.clientY);\n      }\n\n      function handleMouseDownPan(event) {\n        //console.log( 'handleMouseDownPan' );\n        panStart.set(event.clientX, event.clientY);\n      }\n\n      function handleMouseMoveRotate(event) {\n        //console.log( 'handleMouseMoveRotate' );\n        rotateEnd.set(event.clientX, event.clientY);\n        rotateDelta.subVectors(rotateEnd, rotateStart);\n        var element = scope.domElement === document ? scope.domElement.body : scope.domElement; // rotating across whole screen goes 360 degrees around\n\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed); // rotating up and down along whole screen attempts to go 360, but limited to 180\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);\n        rotateStart.copy(rotateEnd);\n        scope.update();\n      }\n\n      function handleMouseMoveDolly(event) {\n        //console.log( 'handleMouseMoveDolly' );\n        dollyEnd.set(event.clientX, event.clientY);\n        dollyDelta.subVectors(dollyEnd, dollyStart);\n\n        if (dollyDelta.y > 0) {\n          dollyIn(getZoomScale());\n        } else if (dollyDelta.y < 0) {\n          dollyOut(getZoomScale());\n        }\n\n        dollyStart.copy(dollyEnd);\n        scope.update();\n      }\n\n      function handleMouseMovePan(event) {\n        //console.log( 'handleMouseMovePan' );\n        panEnd.set(event.clientX, event.clientY);\n        panDelta.subVectors(panEnd, panStart);\n        pan(panDelta.x, panDelta.y);\n        panStart.copy(panEnd);\n        scope.update();\n      }\n\n      function handleMouseUp(event) {//console.log( 'handleMouseUp' );\n      }\n\n      function handleMouseWheel(event) {\n        //console.log( 'handleMouseWheel' );\n        if (event.deltaY < 0) {\n          dollyOut(getZoomScale());\n        } else if (event.deltaY > 0) {\n          dollyIn(getZoomScale());\n        }\n\n        scope.update();\n      }\n\n      function handleKeyDown(event) {\n        //console.log( 'handleKeyDown' );\n        switch (event.keyCode) {\n          case scope.keys.UP:\n            pan(0, scope.keyPanSpeed);\n            scope.update();\n            break;\n\n          case scope.keys.BOTTOM:\n            pan(0, -scope.keyPanSpeed);\n            scope.update();\n            break;\n\n          case scope.keys.LEFT:\n            pan(scope.keyPanSpeed, 0);\n            scope.update();\n            break;\n\n          case scope.keys.RIGHT:\n            pan(-scope.keyPanSpeed, 0);\n            scope.update();\n            break;\n        }\n      }\n\n      function handleTouchStartRotate(event) {\n        //console.log( 'handleTouchStartRotate' );\n        rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      }\n\n      function handleTouchStartDolly(event) {\n        //console.log( 'handleTouchStartDolly' );\n        var dx = event.touches[0].pageX - event.touches[1].pageX;\n        var dy = event.touches[0].pageY - event.touches[1].pageY;\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        dollyStart.set(0, distance);\n      }\n\n      function handleTouchStartPan(event) {\n        //console.log( 'handleTouchStartPan' );\n        panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      }\n\n      function handleTouchMoveRotate(event) {\n        //console.log( 'handleTouchMoveRotate' );\n        rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n        rotateDelta.subVectors(rotateEnd, rotateStart);\n        var element = scope.domElement === document ? scope.domElement.body : scope.domElement; // rotating across whole screen goes 360 degrees around\n\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed); // rotating up and down along whole screen attempts to go 360, but limited to 180\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);\n        rotateStart.copy(rotateEnd);\n        scope.update();\n      }\n\n      function handleTouchMoveDolly(event) {\n        //console.log( 'handleTouchMoveDolly' );\n        var dx = event.touches[0].pageX - event.touches[1].pageX;\n        var dy = event.touches[0].pageY - event.touches[1].pageY;\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        dollyEnd.set(0, distance);\n        dollyDelta.subVectors(dollyEnd, dollyStart);\n\n        if (dollyDelta.y > 0) {\n          dollyOut(getZoomScale());\n        } else if (dollyDelta.y < 0) {\n          dollyIn(getZoomScale());\n        }\n\n        dollyStart.copy(dollyEnd);\n        scope.update();\n      }\n\n      function handleTouchMovePan(event) {\n        //console.log( 'handleTouchMovePan' );\n        panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n        panDelta.subVectors(panEnd, panStart);\n        pan(panDelta.x, panDelta.y);\n        panStart.copy(panEnd);\n        scope.update();\n      }\n\n      function handleTouchEnd(event) {} //console.log( 'handleTouchEnd' );\n      //\n      // event handlers - FSM: listen for events and reset state\n      //\n\n\n      function onMouseDown(event) {\n        if (scope.enabled === false) return;\n        event.preventDefault();\n\n        if (event.button === scope.mouseButtons.ORBIT) {\n          if (scope.enableRotate === false) return;\n          handleMouseDownRotate(event);\n          state = STATE.ROTATE;\n        } else if (event.button === scope.mouseButtons.ZOOM) {\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n        } else if (event.button === scope.mouseButtons.PAN) {\n          if (scope.enablePan === false) return;\n          handleMouseDownPan(event);\n          state = STATE.PAN;\n        }\n\n        if (state !== STATE.NONE) {\n          document.addEventListener('mousemove', onMouseMove, false);\n          document.addEventListener('mouseup', onMouseUp, false);\n          scope.dispatchEvent(startEvent);\n        }\n      }\n\n      function onMouseMove(event) {\n        if (scope.enabled === false) return;\n        event.preventDefault();\n\n        if (state === STATE.ROTATE) {\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n        } else if (state === STATE.DOLLY) {\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n        } else if (state === STATE.PAN) {\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n        }\n      }\n\n      function onMouseUp(event) {\n        if (scope.enabled === false) return;\n        handleMouseUp(event);\n        document.removeEventListener('mousemove', onMouseMove, false);\n        document.removeEventListener('mouseup', onMouseUp, false);\n        scope.dispatchEvent(endEvent);\n        state = STATE.NONE;\n      }\n\n      function onMouseWheel(event) {\n        if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n        event.preventDefault();\n        event.stopPropagation();\n        handleMouseWheel(event);\n        scope.dispatchEvent(startEvent); // not sure why these are here...\n\n        scope.dispatchEvent(endEvent);\n      }\n\n      function onKeyDown(event) {\n        if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n        handleKeyDown(event);\n      }\n\n      function onTouchStart(event) {\n        if (scope.enabled === false) return;\n\n        switch (event.touches.length) {\n          case 1:\n            // one-fingered touch: rotate\n            if (scope.enableRotate === false) return;\n            handleTouchStartRotate(event);\n            state = STATE.TOUCH_ROTATE;\n            break;\n\n          case 2:\n            // two-fingered touch: dolly\n            if (scope.enableZoom === false) return;\n            handleTouchStartDolly(event);\n            state = STATE.TOUCH_DOLLY;\n            break;\n\n          case 3:\n            // three-fingered touch: pan\n            if (scope.enablePan === false) return;\n            handleTouchStartPan(event);\n            state = STATE.TOUCH_PAN;\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        if (state !== STATE.NONE) {\n          scope.dispatchEvent(startEvent);\n        }\n      }\n\n      function onTouchMove(event) {\n        if (scope.enabled === false) return;\n        event.preventDefault();\n        event.stopPropagation();\n\n        switch (event.touches.length) {\n          case 1:\n            // one-fingered touch: rotate\n            if (scope.enableRotate === false) return;\n            if (state !== STATE.TOUCH_ROTATE) return; // is this needed?...\n\n            handleTouchMoveRotate(event);\n            break;\n\n          case 2:\n            // two-fingered touch: dolly\n            if (scope.enableZoom === false) return;\n            if (state !== STATE.TOUCH_DOLLY) return; // is this needed?...\n\n            handleTouchMoveDolly(event);\n            break;\n\n          case 3:\n            // three-fingered touch: pan\n            if (scope.enablePan === false) return;\n            if (state !== STATE.TOUCH_PAN) return; // is this needed?...\n\n            handleTouchMovePan(event);\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n      }\n\n      function onTouchEnd(event) {\n        if (scope.enabled === false) return;\n        handleTouchEnd(event);\n        scope.dispatchEvent(endEvent);\n        state = STATE.NONE;\n      }\n\n      function onContextMenu(event) {\n        event.preventDefault();\n      } //\n\n\n      scope.domElement.addEventListener('contextmenu', onContextMenu, false);\n      scope.domElement.addEventListener('mousedown', onMouseDown, false);\n      scope.domElement.addEventListener('wheel', onMouseWheel, false);\n      scope.domElement.addEventListener('touchstart', onTouchStart, false);\n      scope.domElement.addEventListener('touchend', onTouchEnd, false);\n      scope.domElement.addEventListener('touchmove', onTouchMove, false);\n      window.addEventListener('keydown', onKeyDown, false); // force an update at start\n\n      this.update();\n    }\n\n    ;\n    OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\n    OrbitControls.prototype.constructor = OrbitControls;\n    Object.defineProperties(OrbitControls.prototype, {\n      center: {\n        get: function get() {\n          console.warn('THREE.OrbitControls: .center has been renamed to .target');\n          return this.target;\n        }\n      },\n      // backward compatibility\n      noZoom: {\n        get: function get() {\n          console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n          return !this.enableZoom;\n        },\n        set: function set(value) {\n          console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n          this.enableZoom = !value;\n        }\n      },\n      noRotate: {\n        get: function get() {\n          console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n          return !this.enableRotate;\n        },\n        set: function set(value) {\n          console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n          this.enableRotate = !value;\n        }\n      },\n      noPan: {\n        get: function get() {\n          console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n          return !this.enablePan;\n        },\n        set: function set(value) {\n          console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n          this.enablePan = !value;\n        }\n      },\n      noKeys: {\n        get: function get() {\n          console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n          return !this.enableKeys;\n        },\n        set: function set(value) {\n          console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n          this.enableKeys = !value;\n        }\n      },\n      staticMoving: {\n        get: function get() {\n          console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n          return !this.enableDamping;\n        },\n        set: function set(value) {\n          console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n          this.enableDamping = !value;\n        }\n      },\n      dynamicDampingFactor: {\n        get: function get() {\n          console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n          return this.dampingFactor;\n        },\n        set: function set(value) {\n          console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n          this.dampingFactor = value;\n        }\n      }\n    });\n    return OrbitControls;\n  };\n  /***/\n\n},\n/* 14 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n  (function (global, factory) {\n    if (true) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [module, __webpack_require__(33), __webpack_require__(48), __webpack_require__(49), __webpack_require__(50), __webpack_require__(51), __webpack_require__(52), __webpack_require__(53), __webpack_require__(54), __webpack_require__(55), __webpack_require__(65), __webpack_require__(56), __webpack_require__(57), __webpack_require__(58), __webpack_require__(59), __webpack_require__(60), __webpack_require__(61), __webpack_require__(62), __webpack_require__(63), __webpack_require__(64)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports !== \"undefined\") {\n      factory(module, require('./BarLoader'), require('./BeatLoader'), require('./BounceLoader'), require('./CircleLoader'), require('./ClipLoader'), require('./ClimbingBoxLoader'), require('./DotLoader'), require('./FadeLoader'), require('./GridLoader'), require('./HashLoader'), require('./MoonLoader'), require('./PacmanLoader'), require('./PropagateLoader'), require('./PulseLoader'), require('./RingLoader'), require('./RiseLoader'), require('./RotateLoader'), require('./ScaleLoader'), require('./SyncLoader'));\n    } else {\n      var mod = {\n        exports: {}\n      };\n      factory(mod, global.BarLoader, global.BeatLoader, global.BounceLoader, global.CircleLoader, global.ClipLoader, global.ClimbingBoxLoader, global.DotLoader, global.FadeLoader, global.GridLoader, global.HashLoader, global.MoonLoader, global.PacmanLoader, global.PropagateLoader, global.PulseLoader, global.RingLoader, global.RiseLoader, global.RotateLoader, global.ScaleLoader, global.SyncLoader);\n      global.index = mod.exports;\n    }\n  })(this, function (module, _BarLoader, _BeatLoader, _BounceLoader, _CircleLoader, _ClipLoader, _ClimbingBoxLoader, _DotLoader, _FadeLoader, _GridLoader, _HashLoader, _MoonLoader, _PacmanLoader, _PropagateLoader, _PulseLoader, _RingLoader, _RiseLoader, _RotateLoader, _ScaleLoader, _SyncLoader) {\n    'use strict';\n\n    var _BarLoader2 = _interopRequireDefault(_BarLoader);\n\n    var _BeatLoader2 = _interopRequireDefault(_BeatLoader);\n\n    var _BounceLoader2 = _interopRequireDefault(_BounceLoader);\n\n    var _CircleLoader2 = _interopRequireDefault(_CircleLoader);\n\n    var _ClipLoader2 = _interopRequireDefault(_ClipLoader);\n\n    var _ClimbingBoxLoader2 = _interopRequireDefault(_ClimbingBoxLoader);\n\n    var _DotLoader2 = _interopRequireDefault(_DotLoader);\n\n    var _FadeLoader2 = _interopRequireDefault(_FadeLoader);\n\n    var _GridLoader2 = _interopRequireDefault(_GridLoader);\n\n    var _HashLoader2 = _interopRequireDefault(_HashLoader);\n\n    var _MoonLoader2 = _interopRequireDefault(_MoonLoader);\n\n    var _PacmanLoader2 = _interopRequireDefault(_PacmanLoader);\n\n    var _PropagateLoader2 = _interopRequireDefault(_PropagateLoader);\n\n    var _PulseLoader2 = _interopRequireDefault(_PulseLoader);\n\n    var _RingLoader2 = _interopRequireDefault(_RingLoader);\n\n    var _RiseLoader2 = _interopRequireDefault(_RiseLoader);\n\n    var _RotateLoader2 = _interopRequireDefault(_RotateLoader);\n\n    var _ScaleLoader2 = _interopRequireDefault(_ScaleLoader);\n\n    var _SyncLoader2 = _interopRequireDefault(_SyncLoader);\n\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : {\n        default: obj\n      };\n    }\n\n    module.exports = {\n      BarLoader: _BarLoader2.default,\n      BeatLoader: _BeatLoader2.default,\n      BounceLoader: _BounceLoader2.default,\n      CircleLoader: _CircleLoader2.default,\n      ClipLoader: _ClipLoader2.default,\n      ClimbingBoxLoader: _ClimbingBoxLoader2.default,\n      DotLoader: _DotLoader2.default,\n      FadeLoader: _FadeLoader2.default,\n      GridLoader: _GridLoader2.default,\n      HashLoader: _HashLoader2.default,\n      MoonLoader: _MoonLoader2.default,\n      PacmanLoader: _PacmanLoader2.default,\n      PropagateLoader: _PropagateLoader2.default,\n      PulseLoader: _PulseLoader2.default,\n      RingLoader: _RingLoader2.default,\n      RiseLoader: _RiseLoader2.default,\n      RotateLoader: _RotateLoader2.default,\n      ScaleLoader: _ScaleLoader2.default,\n      SyncLoader: _SyncLoader2.default\n    };\n  });\n  /***/\n\n},\n/* 15 */\n\n/***/\nfunction (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    /* harmony export (binding) */\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return StyleSheet;\n    });\n    /*\n    \n    Based off glamor's StyleSheet, thanks Sunil ❤️\n    \n    high performance StyleSheet for css-in-js systems\n    \n    - uses multiple style tags behind the scenes for millions of rules\n    - uses `insertRule` for appending in production for *much* faster performance\n    \n    // usage\n    \n    import { StyleSheet } from '@emotion/sheet'\n    \n    let styleSheet = new StyleSheet({ key: '', container: document.head })\n    \n    styleSheet.insert('#box { border: 1px solid red; }')\n    - appends a css rule into the stylesheet\n    \n    styleSheet.flush()\n    - empties the stylesheet of all its contents\n    \n    */\n    // $FlowFixMe\n\n\n    function sheetForTag(tag) {\n      if (tag.sheet) {\n        // $FlowFixMe\n        return tag.sheet;\n      } // this weirdness brought to you by firefox\n\n      /* istanbul ignore next */\n\n\n      for (var i = 0; i < document.styleSheets.length; i++) {\n        if (document.styleSheets[i].ownerNode === tag) {\n          // $FlowFixMe\n          return document.styleSheets[i];\n        }\n      }\n    }\n\n    function createStyleElement(options) {\n      var tag = document.createElement('style');\n      tag.setAttribute('data-emotion', options.key);\n\n      if (options.nonce !== undefined) {\n        tag.setAttribute('nonce', options.nonce);\n      }\n\n      tag.appendChild(document.createTextNode(''));\n      return tag;\n    }\n\n    var StyleSheet =\n    /*#__PURE__*/\n    function () {\n      function StyleSheet(options) {\n        this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;\n        this.tags = [];\n        this.ctr = 0;\n        this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n        this.key = options.key;\n        this.container = options.container;\n        this.before = null;\n      }\n\n      var _proto = StyleSheet.prototype;\n\n      _proto.insert = function insert(rule) {\n        // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n        // it's 1 in dev because we insert source maps that map a single rule to a location\n        // and you can only have one source map per style tag\n        if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n          var _tag = createStyleElement(this);\n\n          var before;\n\n          if (this.tags.length === 0) {\n            before = this.before;\n          } else {\n            before = this.tags[this.tags.length - 1].nextSibling;\n          }\n\n          this.container.insertBefore(_tag, before);\n          this.tags.push(_tag);\n        }\n\n        var tag = this.tags[this.tags.length - 1];\n\n        if (this.isSpeedy) {\n          var sheet = sheetForTag(tag);\n\n          try {\n            // this is a really hot path\n            // we check the second character first because having \"i\"\n            // as the second character will happen less often than\n            // having \"@\" as the first character\n            var isImportRule = rule.charCodeAt(1) === 105 && rule.charCodeAt(0) === 64; // this is the ultrafast version, works across browsers\n            // the big drawback is that the css won't be editable in devtools\n\n            sheet.insertRule(rule, // we need to insert @import rules before anything else\n            // otherwise there will be an error\n            // technically this means that the @import rules will\n            // _usually_(not always since there could be multiple style tags)\n            // be the first ones in prod and generally later in dev\n            // this shouldn't really matter in the real world though\n            // @import is generally only used for font faces from google fonts and etc.\n            // so while this could be technically correct then it would be slower and larger\n            // for a tiny bit of correctness that won't matter in the real world\n            isImportRule ? 0 : sheet.cssRules.length);\n          } catch (e) {\n            if (process.env.NODE_ENV !== 'production') {\n              console.warn(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n            }\n          }\n        } else {\n          tag.appendChild(document.createTextNode(rule));\n        }\n\n        this.ctr++;\n      };\n\n      _proto.flush = function flush() {\n        // $FlowFixMe\n        this.tags.forEach(function (tag) {\n          return tag.parentNode.removeChild(tag);\n        });\n        this.tags = [];\n        this.ctr = 0;\n      };\n\n      return StyleSheet;\n    }();\n    /* WEBPACK VAR INJECTION */\n\n  }).call(__webpack_exports__, __webpack_require__(0));\n  /***/\n},\n/* 16 */\n\n/***/\nfunction (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    /* harmony export (binding) */\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return serializeStyles;\n    });\n    /* harmony import */\n\n\n    var __WEBPACK_IMPORTED_MODULE_0__emotion_hash__ = __webpack_require__(38);\n    /* harmony import */\n\n\n    var __WEBPACK_IMPORTED_MODULE_1__emotion_unitless__ = __webpack_require__(39);\n    /* harmony import */\n\n\n    var __WEBPACK_IMPORTED_MODULE_2__emotion_memoize__ = __webpack_require__(40);\n\n    var hyphenateRegex = /[A-Z]|^ms/g;\n    var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n    var processStyleName = Object(__WEBPACK_IMPORTED_MODULE_2__emotion_memoize__[\"a\"\n    /* default */\n    ])(function (styleName) {\n      return styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n    });\n\n    var processStyleValue = function processStyleValue(key, value) {\n      if (value == null || typeof value === 'boolean') {\n        return '';\n      }\n\n      switch (key) {\n        case 'animation':\n        case 'animationName':\n          {\n            if (typeof value === 'string') {\n              value = value.replace(animationRegex, function (match, p1, p2) {\n                cursor = {\n                  name: p1,\n                  styles: p2,\n                  next: cursor\n                };\n                return p1;\n              });\n            }\n          }\n      }\n\n      if (__WEBPACK_IMPORTED_MODULE_1__emotion_unitless__[\"a\"\n      /* default */\n      ][key] !== 1 && key.charCodeAt(1) !== 45 && // custom properties\n      typeof value === 'number' && value !== 0) {\n        return value + 'px';\n      }\n\n      return value;\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n      var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n      var oldProcessStyleValue = processStyleValue;\n      var msPattern = /^-ms-/;\n      var hyphenPattern = /-(.)/g;\n      var hyphenatedCache = {};\n\n      processStyleValue = function processStyleValue(key, value) {\n        if (key === 'content') {\n          if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n            console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n          }\n        }\n\n        if (key.charCodeAt(1) !== 45 && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n          hyphenatedCache[key] = true;\n          console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, char) {\n            return char.toUpperCase();\n          }) + \"?\");\n        }\n\n        return oldProcessStyleValue(key, value);\n      };\n    }\n\n    var shouldWarnAboutInterpolatingClassNameFromCss = true;\n\n    function handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {\n      if (interpolation == null) {\n        return '';\n      }\n\n      if (interpolation.__emotion_styles !== undefined) {\n        if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n        }\n\n        return interpolation;\n      }\n\n      switch (typeof interpolation) {\n        case 'boolean':\n          {\n            return '';\n          }\n\n        case 'object':\n          {\n            if (interpolation.anim === 1) {\n              cursor = {\n                name: interpolation.name,\n                styles: interpolation.styles,\n                next: cursor\n              };\n              return interpolation.name;\n            }\n\n            if (interpolation.styles !== undefined) {\n              var next = interpolation.next;\n\n              if (next !== undefined) {\n                // not the most efficient thing ever but this is a pretty rare case\n                // and there will be very few iterations of this generally\n                while (next !== undefined) {\n                  cursor = {\n                    name: next.name,\n                    styles: next.styles,\n                    next: cursor\n                  };\n                  next = next.next;\n                }\n              }\n\n              var styles = interpolation.styles;\n\n              if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n                styles += interpolation.map;\n              }\n\n              return styles;\n            }\n\n            return createStringFromObject(mergedProps, registered, interpolation);\n          }\n\n        case 'function':\n          {\n            if (mergedProps !== undefined) {\n              var previousCursor = cursor;\n              var result = interpolation(mergedProps);\n              cursor = previousCursor;\n              return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);\n            } else if (process.env.NODE_ENV !== 'production') {\n              console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n            }\n          }\n        // eslint-disable-next-line no-fallthrough\n\n        default:\n          {\n            if (registered == null) {\n              return interpolation;\n            }\n\n            var cached = registered[interpolation];\n\n            if (process.env.NODE_ENV !== 'production' && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {\n              console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');\n              shouldWarnAboutInterpolatingClassNameFromCss = false;\n            }\n\n            return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;\n          }\n      }\n    }\n\n    function createStringFromObject(mergedProps, registered, obj) {\n      var string = '';\n\n      if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n          string += handleInterpolation(mergedProps, registered, obj[i], false);\n        }\n      } else {\n        for (var _key in obj) {\n          var value = obj[_key];\n\n          if (typeof value !== 'object') {\n            if (registered != null && registered[value] !== undefined) {\n              string += _key + \"{\" + registered[value] + \"}\";\n            } else {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n            }\n          } else {\n            if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n              throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n            }\n\n            if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n              for (var _i = 0; _i < value.length; _i++) {\n                string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n              }\n            } else {\n              string += _key + \"{\" + handleInterpolation(mergedProps, registered, value, false) + \"}\";\n            }\n          }\n        }\n      }\n\n      return string;\n    }\n\n    var labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\n    var sourceMapPattern;\n\n    if (process.env.NODE_ENV !== 'production') {\n      sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//;\n    } // this is the cursor for keyframes\n    // keyframes are stored on the SerializedStyles object as a linked list\n\n\n    var cursor;\n\n    var serializeStyles = function serializeStyles(args, registered, mergedProps) {\n      if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n        return args[0];\n      }\n\n      var stringMode = true;\n      var styles = '';\n      cursor = undefined;\n      var strings = args[0];\n\n      if (strings == null || strings.raw === undefined) {\n        stringMode = false;\n        styles += handleInterpolation(mergedProps, registered, strings, false);\n      } else {\n        styles += strings[0];\n      } // we start at 1 since we've already handled the first arg\n\n\n      for (var i = 1; i < args.length; i++) {\n        styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);\n\n        if (stringMode) {\n          styles += strings[i];\n        }\n      }\n\n      var sourceMap;\n\n      if (process.env.NODE_ENV !== 'production') {\n        styles = styles.replace(sourceMapPattern, function (match) {\n          sourceMap = match;\n          return '';\n        });\n      } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n      labelPattern.lastIndex = 0;\n      var identifierName = '';\n      var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n      while ((match = labelPattern.exec(styles)) !== null) {\n        identifierName += '-' + // $FlowFixMe we know it's not null\n        match[1];\n      }\n\n      var name = Object(__WEBPACK_IMPORTED_MODULE_0__emotion_hash__[\"a\"\n      /* default */\n      ])(styles) + identifierName;\n\n      if (process.env.NODE_ENV !== 'production') {\n        return {\n          name: name,\n          styles: styles,\n          map: sourceMap,\n          next: cursor\n        };\n      }\n\n      return {\n        name: name,\n        styles: styles,\n        next: cursor\n      };\n    };\n    /* WEBPACK VAR INJECTION */\n\n  }).call(__webpack_exports__, __webpack_require__(0));\n  /***/\n},\n/* 17 */\n\n/***/\nfunction (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n  /* harmony import */\n\n  var __WEBPACK_IMPORTED_MODULE_0__emotion_serialize__ = __webpack_require__(16);\n\n  function css() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return Object(__WEBPACK_IMPORTED_MODULE_0__emotion_serialize__[\"a\"\n    /* serializeStyles */\n    ])(args);\n  }\n  /* harmony default export */\n\n\n  __webpack_exports__[\"a\"] = css;\n  /***/\n},\n/* 18 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var _interopRequireDefault = __webpack_require__(5);\n\n  exports.__esModule = true;\n  exports.default = void 0;\n\n  var _setStatic = _interopRequireDefault(__webpack_require__(43));\n\n  var setDisplayName = function setDisplayName(displayName) {\n    return (0, _setStatic.default)('displayName', displayName);\n  };\n\n  var _default = setDisplayName;\n  exports.default = _default;\n  /***/\n},\n/* 19 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var _interopRequireDefault = __webpack_require__(5);\n\n  exports.__esModule = true;\n  exports.default = void 0;\n\n  var _getDisplayName = _interopRequireDefault(__webpack_require__(44));\n\n  var wrapDisplayName = function wrapDisplayName(BaseComponent, hocName) {\n    return hocName + \"(\" + (0, _getDisplayName.default)(BaseComponent) + \")\";\n  };\n\n  var _default = wrapDisplayName;\n  exports.default = _default;\n  /***/\n},\n/* 20 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n  (function (global, factory) {\n    if (true) {\n      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports !== \"undefined\") {\n      factory(exports);\n    } else {\n      var mod = {\n        exports: {}\n      };\n      factory(mod.exports);\n      global.index = mod.exports;\n    }\n  })(this, function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var calculateRgba = exports.calculateRgba = function calculateRgba(color, opacity) {\n      if (color[0] === '#') {\n        color = color.slice(1);\n      }\n\n      if (color.length === 3) {\n        var res = '';\n        color.split('').forEach(function (c) {\n          res += c;\n          res += c;\n        });\n        color = res;\n      }\n\n      var rgbValues = color.match(/.{2}/g).map(function (hex) {\n        return parseInt(hex, 16);\n      }).join(', ');\n      return 'rgba(' + rgbValues + ', ' + opacity + ')';\n    };\n  });\n  /***/\n\n},\n/* 21 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.STLViewer = exports.OBJViewer = undefined;\n\n  var _OBJViewer = __webpack_require__(22);\n\n  var _OBJViewer2 = _interopRequireDefault(_OBJViewer);\n\n  var _STLViewer = __webpack_require__(66);\n\n  var _STLViewer2 = _interopRequireDefault(_STLViewer);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  exports.OBJViewer = _OBJViewer2.default;\n  exports.STLViewer = _STLViewer2.default;\n  /***/\n},\n/* 22 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var _react = __webpack_require__(1);\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _propTypes = __webpack_require__(2);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  var _reactDom = __webpack_require__(9);\n\n  var _reactDom2 = _interopRequireDefault(_reactDom);\n\n  var _three = __webpack_require__(12);\n\n  var THREE = _interopRequireWildcard(_three);\n\n  var _threeOrbitControls = __webpack_require__(13);\n\n  var _threeOrbitControls2 = _interopRequireDefault(_threeOrbitControls);\n\n  var _threeAddons = __webpack_require__(32);\n\n  var _reactSpinners = __webpack_require__(14);\n\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    } else {\n      var newObj = {};\n\n      if (obj != null) {\n        for (var key in obj) {\n          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n        }\n      }\n\n      newObj.default = obj;\n      return newObj;\n    }\n  }\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var OrbitControls = (0, _threeOrbitControls2.default)(THREE);\n\n  var OBJViewer = function (_Component) {\n    _inherits(OBJViewer, _Component);\n\n    function OBJViewer(props) {\n      _classCallCheck(this, OBJViewer);\n\n      return _possibleConstructorReturn(this, (OBJViewer.__proto__ || Object.getPrototypeOf(OBJViewer)).call(this, props));\n    }\n\n    _createClass(OBJViewer, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        this.renderModel(this.props);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate(nextProps) {\n        this.renderModel(nextProps);\n      }\n    }, {\n      key: 'renderModel',\n      value: function renderModel(props) {\n        var _this2 = this;\n\n        var camera = void 0,\n            scene = void 0,\n            renderer = void 0,\n            controls = void 0;\n        var url = props.url,\n            file = props.file,\n            width = props.width,\n            height = props.height,\n            modelColor = props.modelColor,\n            backgroundColor = props.backgroundColor,\n            orbitControls = props.orbitControls,\n            onSceneRendered = props.onSceneRendered,\n            sceneClassName = props.sceneClassName;\n        var xDims = void 0,\n            yDims = void 0,\n            zDims = void 0;\n        camera = new THREE.PerspectiveCamera(30, width / height, 1, 10000);\n        scene = new THREE.Scene();\n        var directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n        directionalLight.position.x = 0;\n        directionalLight.position.y = 1;\n        directionalLight.position.z = 0;\n        directionalLight.position.normalize();\n        scene.add(directionalLight);\n        var ambientLight = new THREE.AmbientLight(0x404040); // soft white light\n\n        scene.add(ambientLight);\n        scene.add(camera);\n        var loader = new _threeAddons.OBJLoader();\n\n        var onProgress = function onProgress(xhr) {\n          if (xhr.lengthComputable) {// var percentComplete = xhr.loaded / xhr.total * 100;\n          }\n        };\n\n        var onLoad = function onLoad(object) {\n          var bbox = new THREE.Box3().setFromObject(object);\n          xDims = bbox.max.x - bbox.min.x;\n          yDims = bbox.max.y - bbox.min.y;\n          zDims = bbox.max.z - bbox.min.z;\n          camera.position.set(0, 0, Math.max(xDims * 3, yDims * 3, zDims * 3));\n          object.traverse(function (child) {\n            if (child.isMesh) {\n              child.material.color.setStyle(modelColor);\n            }\n          });\n          object.position.y = -95;\n          scene.add(object);\n          renderer = new THREE.WebGLRenderer({\n            preserveDrawingBuffer: true,\n            antialias: true\n          });\n          renderer.setPixelRatio(window.devicePixelRatio);\n          renderer.setClearColor(backgroundColor, 1);\n          renderer.setSize(width, height);\n          renderer.domElement.className = sceneClassName;\n\n          if (orbitControls) {\n            controls = new OrbitControls(camera, _reactDom2.default.findDOMNode(_this2));\n            controls.enableKeys = false;\n            controls.addEventListener('change', orbitRender);\n          }\n\n          _reactDom2.default.findDOMNode(_this2).replaceChild(renderer.domElement, _reactDom2.default.findDOMNode(_this2).firstChild);\n\n          render();\n\n          if (typeof onSceneRendered === \"function\") {\n            onSceneRendered(_reactDom2.default.findDOMNode(renderer.domElement));\n          }\n        };\n\n        var onError = function onError(xhr) {};\n\n        if (file) {\n          var reader = new FileReader();\n\n          reader.onload = function (evt) {\n            if (evt.target.readyState != 2) return;\n\n            if (evt.target.error) {\n              alert('Error while reading file');\n              return;\n            }\n\n            onLoad(loader.parse(evt.target.result));\n          };\n\n          reader.readAsText(file);\n        } else {\n          loader.load(url, onLoad, onProgress, onError);\n        }\n\n        var render = function render() {\n          renderer.render(scene, camera);\n        };\n\n        var orbitRender = function orbitRender() {\n          render();\n        };\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        this.setState({\n          allowUpdate: true\n        });\n      }\n    }, {\n      key: 'shouldComponentUpdate',\n      value: function shouldComponentUpdate(nextProps, nextState) {\n        if (JSON.stringify(nextProps) === JSON.stringify(this.props)) {\n          return false;\n        }\n\n        return true;\n      }\n    }, {\n      key: 'componentDidCatch',\n      value: function componentDidCatch(error, info) {\n        console.log(error, info);\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        return _react2.default.createElement('div', {\n          className: this.props.className,\n          style: {\n            width: this.props.width,\n            height: this.props.height,\n            overflow: 'hidden'\n          }\n        }, _react2.default.createElement('div', {\n          style: {\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          }\n        }, _react2.default.createElement(_reactSpinners.ScaleLoader, {\n          color: '#123abc',\n          loading: true\n        })));\n      }\n    }]);\n\n    return OBJViewer;\n  }(_react.Component);\n\n  OBJViewer.propTypes = {\n    className: _propTypes2.default.string,\n    url: _propTypes2.default.string,\n    file: _propTypes2.default.object,\n    width: _propTypes2.default.number,\n    height: _propTypes2.default.number,\n    backgroundColor: _propTypes2.default.string,\n    modelColor: _propTypes2.default.string,\n    sceneClassName: _propTypes2.default.string,\n    onSceneRendered: _propTypes2.default.func\n  };\n  OBJViewer.defaultProps = {\n    backgroundColor: '#EAEAEA',\n    modelColor: '#B92C2C',\n    height: 400,\n    width: 400,\n    orbitControls: true,\n    sceneClassName: ''\n  };\n  ;\n  module.exports = OBJViewer;\n  /***/\n},\n/* 23 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    /**\n    * Copyright (c) 2013-present, Facebook, Inc.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    */\n    var assign = __webpack_require__(6);\n\n    var ReactPropTypesSecret = __webpack_require__(7);\n\n    var checkPropTypes = __webpack_require__(8);\n\n    var printWarning = function printWarning() {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      printWarning = function printWarning(text) {\n        var message = 'Warning: ' + text;\n\n        if (typeof console !== 'undefined') {\n          console.error(message);\n        }\n\n        try {\n          // --- Welcome to debugging React ---\n          // This error was thrown as a convenience so that you can use this stack\n          // to find the callsite that caused this warning to fire.\n          throw new Error(message);\n        } catch (x) {}\n      };\n    }\n\n    function emptyFunctionThatReturnsNull() {\n      return null;\n    }\n\n    module.exports = function (isValidElement, throwOnDirectAccess) {\n      /* global Symbol */\n      var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n      var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n      /**\n       * Returns the iterator method function contained on the iterable object.\n       *\n       * Be sure to invoke the function with the iterable as context:\n       *\n       *     var iteratorFn = getIteratorFn(myIterable);\n       *     if (iteratorFn) {\n       *       var iterator = iteratorFn.call(myIterable);\n       *       ...\n       *     }\n       *\n       * @param {?object} maybeIterable\n       * @return {?function}\n       */\n\n      function getIteratorFn(maybeIterable) {\n        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\n        if (typeof iteratorFn === 'function') {\n          return iteratorFn;\n        }\n      }\n      /**\n       * Collection of methods that allow declaration and validation of props that are\n       * supplied to React components. Example usage:\n       *\n       *   var Props = require('ReactPropTypes');\n       *   var MyArticle = React.createClass({\n       *     propTypes: {\n       *       // An optional string prop named \"description\".\n       *       description: Props.string,\n       *\n       *       // A required enum prop named \"category\".\n       *       category: Props.oneOf(['News','Photos']).isRequired,\n       *\n       *       // A prop named \"dialog\" that requires an instance of Dialog.\n       *       dialog: Props.instanceOf(Dialog).isRequired\n       *     },\n       *     render: function() { ... }\n       *   });\n       *\n       * A more formal specification of how these methods are used:\n       *\n       *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n       *   decl := ReactPropTypes.{type}(.isRequired)?\n       *\n       * Each and every declaration produces a function with the same signature. This\n       * allows the creation of custom validation functions. For example:\n       *\n       *  var MyLink = React.createClass({\n       *    propTypes: {\n       *      // An optional string or URI prop named \"href\".\n       *      href: function(props, propName, componentName) {\n       *        var propValue = props[propName];\n       *        if (propValue != null && typeof propValue !== 'string' &&\n       *            !(propValue instanceof URI)) {\n       *          return new Error(\n       *            'Expected a string or an URI for ' + propName + ' in ' +\n       *            componentName\n       *          );\n       *        }\n       *      }\n       *    },\n       *    render: function() {...}\n       *  });\n       *\n       * @internal\n       */\n\n\n      var ANONYMOUS = '<<anonymous>>'; // Important!\n      // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\n      var ReactPropTypes = {\n        array: createPrimitiveTypeChecker('array'),\n        bool: createPrimitiveTypeChecker('boolean'),\n        func: createPrimitiveTypeChecker('function'),\n        number: createPrimitiveTypeChecker('number'),\n        object: createPrimitiveTypeChecker('object'),\n        string: createPrimitiveTypeChecker('string'),\n        symbol: createPrimitiveTypeChecker('symbol'),\n        any: createAnyTypeChecker(),\n        arrayOf: createArrayOfTypeChecker,\n        element: createElementTypeChecker(),\n        instanceOf: createInstanceTypeChecker,\n        node: createNodeChecker(),\n        objectOf: createObjectOfTypeChecker,\n        oneOf: createEnumTypeChecker,\n        oneOfType: createUnionTypeChecker,\n        shape: createShapeTypeChecker,\n        exact: createStrictShapeTypeChecker\n      };\n      /**\n       * inlined Object.is polyfill to avoid requiring consumers ship their own\n       * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n       */\n\n      /*eslint-disable no-self-compare*/\n\n      function is(x, y) {\n        // SameValue algorithm\n        if (x === y) {\n          // Steps 1-5, 7-10\n          // Steps 6.b-6.e: +0 != -0\n          return x !== 0 || 1 / x === 1 / y;\n        } else {\n          // Step 6.a: NaN == NaN\n          return x !== x && y !== y;\n        }\n      }\n      /*eslint-enable no-self-compare*/\n\n      /**\n       * We use an Error-like object for backward compatibility as people may call\n       * PropTypes directly and inspect their output. However, we don't use real\n       * Errors anymore. We don't inspect their stack anyway, and creating them\n       * is prohibitively expensive if they are created too often, such as what\n       * happens in oneOfType() for any type before the one that matched.\n       */\n\n\n      function PropTypeError(message) {\n        this.message = message;\n        this.stack = '';\n      } // Make `instanceof Error` still work for returned errors.\n\n\n      PropTypeError.prototype = Error.prototype;\n\n      function createChainableTypeChecker(validate) {\n        if (process.env.NODE_ENV !== 'production') {\n          var manualPropTypeCallCache = {};\n          var manualPropTypeWarningCount = 0;\n        }\n\n        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n          componentName = componentName || ANONYMOUS;\n          propFullName = propFullName || propName;\n\n          if (secret !== ReactPropTypesSecret) {\n            if (throwOnDirectAccess) {\n              // New behavior only for users of `prop-types` package\n              var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n              err.name = 'Invariant Violation';\n              throw err;\n            } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n              // Old behavior for people using React.PropTypes\n              var cacheKey = componentName + ':' + propName;\n\n              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors\n              manualPropTypeWarningCount < 3) {\n                printWarning('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');\n                manualPropTypeCallCache[cacheKey] = true;\n                manualPropTypeWarningCount++;\n              }\n            }\n          }\n\n          if (props[propName] == null) {\n            if (isRequired) {\n              if (props[propName] === null) {\n                return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n              }\n\n              return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n            }\n\n            return null;\n          } else {\n            return validate(props, propName, componentName, location, propFullName);\n          }\n        }\n\n        var chainedCheckType = checkType.bind(null, false);\n        chainedCheckType.isRequired = checkType.bind(null, true);\n        return chainedCheckType;\n      }\n\n      function createPrimitiveTypeChecker(expectedType) {\n        function validate(props, propName, componentName, location, propFullName, secret) {\n          var propValue = props[propName];\n          var propType = getPropType(propValue);\n\n          if (propType !== expectedType) {\n            // `propValue` being instance of, say, date/regexp, pass the 'object'\n            // check, but we can offer a more precise error message here rather than\n            // 'of type `object`'.\n            var preciseType = getPreciseType(propValue);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createAnyTypeChecker() {\n        return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n      }\n\n      function createArrayOfTypeChecker(typeChecker) {\n        function validate(props, propName, componentName, location, propFullName) {\n          if (typeof typeChecker !== 'function') {\n            return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n          }\n\n          var propValue = props[propName];\n\n          if (!Array.isArray(propValue)) {\n            var propType = getPropType(propValue);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n          }\n\n          for (var i = 0; i < propValue.length; i++) {\n            var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n\n            if (error instanceof Error) {\n              return error;\n            }\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createElementTypeChecker() {\n        function validate(props, propName, componentName, location, propFullName) {\n          var propValue = props[propName];\n\n          if (!isValidElement(propValue)) {\n            var propType = getPropType(propValue);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createInstanceTypeChecker(expectedClass) {\n        function validate(props, propName, componentName, location, propFullName) {\n          if (!(props[propName] instanceof expectedClass)) {\n            var expectedClassName = expectedClass.name || ANONYMOUS;\n            var actualClassName = getClassName(props[propName]);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createEnumTypeChecker(expectedValues) {\n        if (!Array.isArray(expectedValues)) {\n          process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n          return emptyFunctionThatReturnsNull;\n        }\n\n        function validate(props, propName, componentName, location, propFullName) {\n          var propValue = props[propName];\n\n          for (var i = 0; i < expectedValues.length; i++) {\n            if (is(propValue, expectedValues[i])) {\n              return null;\n            }\n          }\n\n          var valuesString = JSON.stringify(expectedValues);\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createObjectOfTypeChecker(typeChecker) {\n        function validate(props, propName, componentName, location, propFullName) {\n          if (typeof typeChecker !== 'function') {\n            return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n          }\n\n          var propValue = props[propName];\n          var propType = getPropType(propValue);\n\n          if (propType !== 'object') {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n          }\n\n          for (var key in propValue) {\n            if (propValue.hasOwnProperty(key)) {\n              var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n              if (error instanceof Error) {\n                return error;\n              }\n            }\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createUnionTypeChecker(arrayOfTypeCheckers) {\n        if (!Array.isArray(arrayOfTypeCheckers)) {\n          process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n          return emptyFunctionThatReturnsNull;\n        }\n\n        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n          var checker = arrayOfTypeCheckers[i];\n\n          if (typeof checker !== 'function') {\n            printWarning('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');\n            return emptyFunctionThatReturnsNull;\n          }\n        }\n\n        function validate(props, propName, componentName, location, propFullName) {\n          for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n            var checker = arrayOfTypeCheckers[i];\n\n            if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n              return null;\n            }\n          }\n\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createNodeChecker() {\n        function validate(props, propName, componentName, location, propFullName) {\n          if (!isNode(props[propName])) {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createShapeTypeChecker(shapeTypes) {\n        function validate(props, propName, componentName, location, propFullName) {\n          var propValue = props[propName];\n          var propType = getPropType(propValue);\n\n          if (propType !== 'object') {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n          }\n\n          for (var key in shapeTypes) {\n            var checker = shapeTypes[key];\n\n            if (!checker) {\n              continue;\n            }\n\n            var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n            if (error) {\n              return error;\n            }\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createStrictShapeTypeChecker(shapeTypes) {\n        function validate(props, propName, componentName, location, propFullName) {\n          var propValue = props[propName];\n          var propType = getPropType(propValue);\n\n          if (propType !== 'object') {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n          } // We need to check all keys in case some are required but missing from\n          // props.\n\n\n          var allKeys = assign({}, props[propName], shapeTypes);\n\n          for (var key in allKeys) {\n            var checker = shapeTypes[key];\n\n            if (!checker) {\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n            }\n\n            var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n            if (error) {\n              return error;\n            }\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function isNode(propValue) {\n        switch (typeof propValue) {\n          case 'number':\n          case 'string':\n          case 'undefined':\n            return true;\n\n          case 'boolean':\n            return !propValue;\n\n          case 'object':\n            if (Array.isArray(propValue)) {\n              return propValue.every(isNode);\n            }\n\n            if (propValue === null || isValidElement(propValue)) {\n              return true;\n            }\n\n            var iteratorFn = getIteratorFn(propValue);\n\n            if (iteratorFn) {\n              var iterator = iteratorFn.call(propValue);\n              var step;\n\n              if (iteratorFn !== propValue.entries) {\n                while (!(step = iterator.next()).done) {\n                  if (!isNode(step.value)) {\n                    return false;\n                  }\n                }\n              } else {\n                // Iterator will provide entry [k,v] tuples rather than values.\n                while (!(step = iterator.next()).done) {\n                  var entry = step.value;\n\n                  if (entry) {\n                    if (!isNode(entry[1])) {\n                      return false;\n                    }\n                  }\n                }\n              }\n            } else {\n              return false;\n            }\n\n            return true;\n\n          default:\n            return false;\n        }\n      }\n\n      function isSymbol(propType, propValue) {\n        // Native Symbol.\n        if (propType === 'symbol') {\n          return true;\n        } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\n\n        if (propValue['@@toStringTag'] === 'Symbol') {\n          return true;\n        } // Fallback for non-spec compliant Symbols which are polyfilled.\n\n\n        if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n          return true;\n        }\n\n        return false;\n      } // Equivalent of `typeof` but with special handling for array and regexp.\n\n\n      function getPropType(propValue) {\n        var propType = typeof propValue;\n\n        if (Array.isArray(propValue)) {\n          return 'array';\n        }\n\n        if (propValue instanceof RegExp) {\n          // Old webkits (at least until Android 4.0) return 'function' rather than\n          // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n          // passes PropTypes.object.\n          return 'object';\n        }\n\n        if (isSymbol(propType, propValue)) {\n          return 'symbol';\n        }\n\n        return propType;\n      } // This handles more types than `getPropType`. Only used for error messages.\n      // See `createPrimitiveTypeChecker`.\n\n\n      function getPreciseType(propValue) {\n        if (typeof propValue === 'undefined' || propValue === null) {\n          return '' + propValue;\n        }\n\n        var propType = getPropType(propValue);\n\n        if (propType === 'object') {\n          if (propValue instanceof Date) {\n            return 'date';\n          } else if (propValue instanceof RegExp) {\n            return 'regexp';\n          }\n        }\n\n        return propType;\n      } // Returns a string that is postfixed to a warning about an invalid type.\n      // For example, \"undefined\" or \"of type array\"\n\n\n      function getPostfixForTypeWarning(value) {\n        var type = getPreciseType(value);\n\n        switch (type) {\n          case 'array':\n          case 'object':\n            return 'an ' + type;\n\n          case 'boolean':\n          case 'date':\n          case 'regexp':\n            return 'a ' + type;\n\n          default:\n            return type;\n        }\n      } // Returns class name of the object, if any.\n\n\n      function getClassName(propValue) {\n        if (!propValue.constructor || !propValue.constructor.name) {\n          return ANONYMOUS;\n        }\n\n        return propValue.constructor.name;\n      }\n\n      ReactPropTypes.checkPropTypes = checkPropTypes;\n      ReactPropTypes.PropTypes = ReactPropTypes;\n      return ReactPropTypes;\n    };\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 24 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var ReactPropTypesSecret = __webpack_require__(7);\n\n  function emptyFunction() {}\n\n  module.exports = function () {\n    function shim(props, propName, componentName, location, propFullName, secret) {\n      if (secret === ReactPropTypesSecret) {\n        // It is still safe when called from React.\n        return;\n      }\n\n      var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n      err.name = 'Invariant Violation';\n      throw err;\n    }\n\n    ;\n    shim.isRequired = shim;\n\n    function getShim() {\n      return shim;\n    }\n\n    ; // Important!\n    // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n    var ReactPropTypes = {\n      array: shim,\n      bool: shim,\n      func: shim,\n      number: shim,\n      object: shim,\n      string: shim,\n      symbol: shim,\n      any: shim,\n      arrayOf: getShim,\n      element: shim,\n      instanceOf: getShim,\n      node: shim,\n      objectOf: getShim,\n      oneOf: getShim,\n      oneOfType: getShim,\n      shape: getShim,\n      exact: getShim\n    };\n    ReactPropTypes.checkPropTypes = emptyFunction;\n    ReactPropTypes.PropTypes = ReactPropTypes;\n    return ReactPropTypes;\n  };\n  /***/\n\n},\n/* 25 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /** @license React v16.7.0\n   * react-dom.production.min.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  /*\n   Modernizr 3.0.0pre (Custom Build) | MIT\n  */\n\n  var aa = __webpack_require__(1),\n      n = __webpack_require__(6),\n      ba = __webpack_require__(10);\n\n  function ca(a, b, c, d, e, f, g, h) {\n    if (!a) {\n      a = void 0;\n      if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n        var k = [c, d, e, f, g, h],\n            l = 0;\n        a = Error(b.replace(/%s/g, function () {\n          return k[l++];\n        }));\n        a.name = \"Invariant Violation\";\n      }\n      a.framesToPop = 1;\n      throw a;\n    }\n  }\n\n  function t(a) {\n    for (var b = arguments.length - 1, c = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, d = 0; d < b; d++) {\n      c += \"&args[]=\" + encodeURIComponent(arguments[d + 1]);\n    }\n\n    ca(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", c);\n  }\n\n  aa ? void 0 : t(\"227\");\n\n  function da(a, b, c, d, e, f, g, h, k) {\n    var l = Array.prototype.slice.call(arguments, 3);\n\n    try {\n      b.apply(c, l);\n    } catch (m) {\n      this.onError(m);\n    }\n  }\n\n  var ea = !1,\n      fa = null,\n      ha = !1,\n      ia = null,\n      ja = {\n    onError: function onError(a) {\n      ea = !0;\n      fa = a;\n    }\n  };\n\n  function ka(a, b, c, d, e, f, g, h, k) {\n    ea = !1;\n    fa = null;\n    da.apply(ja, arguments);\n  }\n\n  function la(a, b, c, d, e, f, g, h, k) {\n    ka.apply(this, arguments);\n\n    if (ea) {\n      if (ea) {\n        var l = fa;\n        ea = !1;\n        fa = null;\n      } else t(\"198\"), l = void 0;\n\n      ha || (ha = !0, ia = l);\n    }\n  }\n\n  var ma = null,\n      na = {};\n\n  function oa() {\n    if (ma) for (var a in na) {\n      var b = na[a],\n          c = ma.indexOf(a);\n      -1 < c ? void 0 : t(\"96\", a);\n\n      if (!pa[c]) {\n        b.extractEvents ? void 0 : t(\"97\", a);\n        pa[c] = b;\n        c = b.eventTypes;\n\n        for (var d in c) {\n          var e = void 0;\n          var f = c[d],\n              g = b,\n              h = d;\n          qa.hasOwnProperty(h) ? t(\"99\", h) : void 0;\n          qa[h] = f;\n          var k = f.phasedRegistrationNames;\n\n          if (k) {\n            for (e in k) {\n              k.hasOwnProperty(e) && ra(k[e], g, h);\n            }\n\n            e = !0;\n          } else f.registrationName ? (ra(f.registrationName, g, h), e = !0) : e = !1;\n\n          e ? void 0 : t(\"98\", d, a);\n        }\n      }\n    }\n  }\n\n  function ra(a, b, c) {\n    sa[a] ? t(\"100\", a) : void 0;\n    sa[a] = b;\n    ta[a] = b.eventTypes[c].dependencies;\n  }\n\n  var pa = [],\n      qa = {},\n      sa = {},\n      ta = {},\n      ua = null,\n      va = null,\n      wa = null;\n\n  function xa(a, b, c) {\n    var d = a.type || \"unknown-event\";\n    a.currentTarget = wa(c);\n    la(d, b, void 0, a);\n    a.currentTarget = null;\n  }\n\n  function ya(a, b) {\n    null == b ? t(\"30\") : void 0;\n    if (null == a) return b;\n\n    if (Array.isArray(a)) {\n      if (Array.isArray(b)) return a.push.apply(a, b), a;\n      a.push(b);\n      return a;\n    }\n\n    return Array.isArray(b) ? [a].concat(b) : [a, b];\n  }\n\n  function za(a, b, c) {\n    Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);\n  }\n\n  var Aa = null;\n\n  function Ba(a) {\n    if (a) {\n      var b = a._dispatchListeners,\n          c = a._dispatchInstances;\n      if (Array.isArray(b)) for (var d = 0; d < b.length && !a.isPropagationStopped(); d++) {\n        xa(a, b[d], c[d]);\n      } else b && xa(a, b, c);\n      a._dispatchListeners = null;\n      a._dispatchInstances = null;\n      a.isPersistent() || a.constructor.release(a);\n    }\n  }\n\n  var Ca = {\n    injectEventPluginOrder: function injectEventPluginOrder(a) {\n      ma ? t(\"101\") : void 0;\n      ma = Array.prototype.slice.call(a);\n      oa();\n    },\n    injectEventPluginsByName: function injectEventPluginsByName(a) {\n      var b = !1,\n          c;\n\n      for (c in a) {\n        if (a.hasOwnProperty(c)) {\n          var d = a[c];\n          na.hasOwnProperty(c) && na[c] === d || (na[c] ? t(\"102\", c) : void 0, na[c] = d, b = !0);\n        }\n      }\n\n      b && oa();\n    }\n  };\n\n  function Da(a, b) {\n    var c = a.stateNode;\n    if (!c) return null;\n    var d = ua(c);\n    if (!d) return null;\n    c = d[b];\n\n    a: switch (b) {\n      case \"onClick\":\n      case \"onClickCapture\":\n      case \"onDoubleClick\":\n      case \"onDoubleClickCapture\":\n      case \"onMouseDown\":\n      case \"onMouseDownCapture\":\n      case \"onMouseMove\":\n      case \"onMouseMoveCapture\":\n      case \"onMouseUp\":\n      case \"onMouseUpCapture\":\n        (d = !d.disabled) || (a = a.type, d = !(\"button\" === a || \"input\" === a || \"select\" === a || \"textarea\" === a));\n        a = !d;\n        break a;\n\n      default:\n        a = !1;\n    }\n\n    if (a) return null;\n    c && \"function\" !== typeof c ? t(\"231\", b, typeof c) : void 0;\n    return c;\n  }\n\n  function Ea(a) {\n    null !== a && (Aa = ya(Aa, a));\n    a = Aa;\n    Aa = null;\n    if (a && (za(a, Ba), Aa ? t(\"95\") : void 0, ha)) throw a = ia, ha = !1, ia = null, a;\n  }\n\n  var Fa = Math.random().toString(36).slice(2),\n      Ga = \"__reactInternalInstance$\" + Fa,\n      Ha = \"__reactEventHandlers$\" + Fa;\n\n  function Ia(a) {\n    if (a[Ga]) return a[Ga];\n\n    for (; !a[Ga];) {\n      if (a.parentNode) a = a.parentNode;else return null;\n    }\n\n    a = a[Ga];\n    return 5 === a.tag || 6 === a.tag ? a : null;\n  }\n\n  function Ja(a) {\n    a = a[Ga];\n    return !a || 5 !== a.tag && 6 !== a.tag ? null : a;\n  }\n\n  function Ka(a) {\n    if (5 === a.tag || 6 === a.tag) return a.stateNode;\n    t(\"33\");\n  }\n\n  function La(a) {\n    return a[Ha] || null;\n  }\n\n  function Ma(a) {\n    do {\n      a = a.return;\n    } while (a && 5 !== a.tag);\n\n    return a ? a : null;\n  }\n\n  function Na(a, b, c) {\n    if (b = Da(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = ya(c._dispatchListeners, b), c._dispatchInstances = ya(c._dispatchInstances, a);\n  }\n\n  function Oa(a) {\n    if (a && a.dispatchConfig.phasedRegistrationNames) {\n      for (var b = a._targetInst, c = []; b;) {\n        c.push(b), b = Ma(b);\n      }\n\n      for (b = c.length; 0 < b--;) {\n        Na(c[b], \"captured\", a);\n      }\n\n      for (b = 0; b < c.length; b++) {\n        Na(c[b], \"bubbled\", a);\n      }\n    }\n  }\n\n  function Pa(a, b, c) {\n    a && c && c.dispatchConfig.registrationName && (b = Da(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = ya(c._dispatchListeners, b), c._dispatchInstances = ya(c._dispatchInstances, a));\n  }\n\n  function Qa(a) {\n    a && a.dispatchConfig.registrationName && Pa(a._targetInst, null, a);\n  }\n\n  function Ra(a) {\n    za(a, Oa);\n  }\n\n  var Sa = !(\"undefined\" === typeof window || !window.document || !window.document.createElement);\n\n  function Ta(a, b) {\n    var c = {};\n    c[a.toLowerCase()] = b.toLowerCase();\n    c[\"Webkit\" + a] = \"webkit\" + b;\n    c[\"Moz\" + a] = \"moz\" + b;\n    return c;\n  }\n\n  var Ua = {\n    animationend: Ta(\"Animation\", \"AnimationEnd\"),\n    animationiteration: Ta(\"Animation\", \"AnimationIteration\"),\n    animationstart: Ta(\"Animation\", \"AnimationStart\"),\n    transitionend: Ta(\"Transition\", \"TransitionEnd\")\n  },\n      Va = {},\n      Wa = {};\n  Sa && (Wa = document.createElement(\"div\").style, \"AnimationEvent\" in window || (delete Ua.animationend.animation, delete Ua.animationiteration.animation, delete Ua.animationstart.animation), \"TransitionEvent\" in window || delete Ua.transitionend.transition);\n\n  function Xa(a) {\n    if (Va[a]) return Va[a];\n    if (!Ua[a]) return a;\n    var b = Ua[a],\n        c;\n\n    for (c in b) {\n      if (b.hasOwnProperty(c) && c in Wa) return Va[a] = b[c];\n    }\n\n    return a;\n  }\n\n  var Ya = Xa(\"animationend\"),\n      Za = Xa(\"animationiteration\"),\n      $a = Xa(\"animationstart\"),\n      ab = Xa(\"transitionend\"),\n      bb = \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),\n      cb = null,\n      eb = null,\n      fb = null;\n\n  function gb() {\n    if (fb) return fb;\n    var a,\n        b = eb,\n        c = b.length,\n        d,\n        e = \"value\" in cb ? cb.value : cb.textContent,\n        f = e.length;\n\n    for (a = 0; a < c && b[a] === e[a]; a++) {\n      ;\n    }\n\n    var g = c - a;\n\n    for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {\n      ;\n    }\n\n    return fb = e.slice(a, 1 < d ? 1 - d : void 0);\n  }\n\n  function hb() {\n    return !0;\n  }\n\n  function ib() {\n    return !1;\n  }\n\n  function z(a, b, c, d) {\n    this.dispatchConfig = a;\n    this._targetInst = b;\n    this.nativeEvent = c;\n    a = this.constructor.Interface;\n\n    for (var e in a) {\n      a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : \"target\" === e ? this.target = d : this[e] = c[e]);\n    }\n\n    this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? hb : ib;\n    this.isPropagationStopped = ib;\n    return this;\n  }\n\n  n(z.prototype, {\n    preventDefault: function preventDefault() {\n      this.defaultPrevented = !0;\n      var a = this.nativeEvent;\n      a && (a.preventDefault ? a.preventDefault() : \"unknown\" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = hb);\n    },\n    stopPropagation: function stopPropagation() {\n      var a = this.nativeEvent;\n      a && (a.stopPropagation ? a.stopPropagation() : \"unknown\" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = hb);\n    },\n    persist: function persist() {\n      this.isPersistent = hb;\n    },\n    isPersistent: ib,\n    destructor: function destructor() {\n      var a = this.constructor.Interface,\n          b;\n\n      for (b in a) {\n        this[b] = null;\n      }\n\n      this.nativeEvent = this._targetInst = this.dispatchConfig = null;\n      this.isPropagationStopped = this.isDefaultPrevented = ib;\n      this._dispatchInstances = this._dispatchListeners = null;\n    }\n  });\n  z.Interface = {\n    type: null,\n    target: null,\n    currentTarget: function currentTarget() {\n      return null;\n    },\n    eventPhase: null,\n    bubbles: null,\n    cancelable: null,\n    timeStamp: function timeStamp(a) {\n      return a.timeStamp || Date.now();\n    },\n    defaultPrevented: null,\n    isTrusted: null\n  };\n\n  z.extend = function (a) {\n    function b() {}\n\n    function c() {\n      return d.apply(this, arguments);\n    }\n\n    var d = this;\n    b.prototype = d.prototype;\n    var e = new b();\n    n(e, c.prototype);\n    c.prototype = e;\n    c.prototype.constructor = c;\n    c.Interface = n({}, d.Interface, a);\n    c.extend = d.extend;\n    jb(c);\n    return c;\n  };\n\n  jb(z);\n\n  function kb(a, b, c, d) {\n    if (this.eventPool.length) {\n      var e = this.eventPool.pop();\n      this.call(e, a, b, c, d);\n      return e;\n    }\n\n    return new this(a, b, c, d);\n  }\n\n  function lb(a) {\n    a instanceof this ? void 0 : t(\"279\");\n    a.destructor();\n    10 > this.eventPool.length && this.eventPool.push(a);\n  }\n\n  function jb(a) {\n    a.eventPool = [];\n    a.getPooled = kb;\n    a.release = lb;\n  }\n\n  var mb = z.extend({\n    data: null\n  }),\n      nb = z.extend({\n    data: null\n  }),\n      ob = [9, 13, 27, 32],\n      pb = Sa && \"CompositionEvent\" in window,\n      qb = null;\n  Sa && \"documentMode\" in document && (qb = document.documentMode);\n  var rb = Sa && \"TextEvent\" in window && !qb,\n      sb = Sa && (!pb || qb && 8 < qb && 11 >= qb),\n      tb = String.fromCharCode(32),\n      ub = {\n    beforeInput: {\n      phasedRegistrationNames: {\n        bubbled: \"onBeforeInput\",\n        captured: \"onBeforeInputCapture\"\n      },\n      dependencies: [\"compositionend\", \"keypress\", \"textInput\", \"paste\"]\n    },\n    compositionEnd: {\n      phasedRegistrationNames: {\n        bubbled: \"onCompositionEnd\",\n        captured: \"onCompositionEndCapture\"\n      },\n      dependencies: \"blur compositionend keydown keypress keyup mousedown\".split(\" \")\n    },\n    compositionStart: {\n      phasedRegistrationNames: {\n        bubbled: \"onCompositionStart\",\n        captured: \"onCompositionStartCapture\"\n      },\n      dependencies: \"blur compositionstart keydown keypress keyup mousedown\".split(\" \")\n    },\n    compositionUpdate: {\n      phasedRegistrationNames: {\n        bubbled: \"onCompositionUpdate\",\n        captured: \"onCompositionUpdateCapture\"\n      },\n      dependencies: \"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")\n    }\n  },\n      vb = !1;\n\n  function wb(a, b) {\n    switch (a) {\n      case \"keyup\":\n        return -1 !== ob.indexOf(b.keyCode);\n\n      case \"keydown\":\n        return 229 !== b.keyCode;\n\n      case \"keypress\":\n      case \"mousedown\":\n      case \"blur\":\n        return !0;\n\n      default:\n        return !1;\n    }\n  }\n\n  function xb(a) {\n    a = a.detail;\n    return \"object\" === typeof a && \"data\" in a ? a.data : null;\n  }\n\n  var yb = !1;\n\n  function zb(a, b) {\n    switch (a) {\n      case \"compositionend\":\n        return xb(b);\n\n      case \"keypress\":\n        if (32 !== b.which) return null;\n        vb = !0;\n        return tb;\n\n      case \"textInput\":\n        return a = b.data, a === tb && vb ? null : a;\n\n      default:\n        return null;\n    }\n  }\n\n  function Ab(a, b) {\n    if (yb) return \"compositionend\" === a || !pb && wb(a, b) ? (a = gb(), fb = eb = cb = null, yb = !1, a) : null;\n\n    switch (a) {\n      case \"paste\":\n        return null;\n\n      case \"keypress\":\n        if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {\n          if (b.char && 1 < b.char.length) return b.char;\n          if (b.which) return String.fromCharCode(b.which);\n        }\n\n        return null;\n\n      case \"compositionend\":\n        return sb && \"ko\" !== b.locale ? null : b.data;\n\n      default:\n        return null;\n    }\n  }\n\n  var Bb = {\n    eventTypes: ub,\n    extractEvents: function extractEvents(a, b, c, d) {\n      var e = void 0;\n      var f = void 0;\n      if (pb) b: {\n        switch (a) {\n          case \"compositionstart\":\n            e = ub.compositionStart;\n            break b;\n\n          case \"compositionend\":\n            e = ub.compositionEnd;\n            break b;\n\n          case \"compositionupdate\":\n            e = ub.compositionUpdate;\n            break b;\n        }\n\n        e = void 0;\n      } else yb ? wb(a, c) && (e = ub.compositionEnd) : \"keydown\" === a && 229 === c.keyCode && (e = ub.compositionStart);\n      e ? (sb && \"ko\" !== c.locale && (yb || e !== ub.compositionStart ? e === ub.compositionEnd && yb && (f = gb()) : (cb = d, eb = \"value\" in cb ? cb.value : cb.textContent, yb = !0)), e = mb.getPooled(e, b, c, d), f ? e.data = f : (f = xb(c), null !== f && (e.data = f)), Ra(e), f = e) : f = null;\n      (a = rb ? zb(a, c) : Ab(a, c)) ? (b = nb.getPooled(ub.beforeInput, b, c, d), b.data = a, Ra(b)) : b = null;\n      return null === f ? b : null === b ? f : [f, b];\n    }\n  },\n      Cb = null,\n      Db = null,\n      Eb = null;\n\n  function Hb(a) {\n    if (a = va(a)) {\n      \"function\" !== typeof Cb ? t(\"280\") : void 0;\n      var b = ua(a.stateNode);\n      Cb(a.stateNode, a.type, b);\n    }\n  }\n\n  function Ib(a) {\n    Db ? Eb ? Eb.push(a) : Eb = [a] : Db = a;\n  }\n\n  function Jb() {\n    if (Db) {\n      var a = Db,\n          b = Eb;\n      Eb = Db = null;\n      Hb(a);\n      if (b) for (a = 0; a < b.length; a++) {\n        Hb(b[a]);\n      }\n    }\n  }\n\n  function Kb(a, b) {\n    return a(b);\n  }\n\n  function Lb(a, b, c) {\n    return a(b, c);\n  }\n\n  function Mb() {}\n\n  var Nb = !1;\n\n  function Ob(a, b) {\n    if (Nb) return a(b);\n    Nb = !0;\n\n    try {\n      return Kb(a, b);\n    } finally {\n      if (Nb = !1, null !== Db || null !== Eb) Mb(), Jb();\n    }\n  }\n\n  var Pb = {\n    color: !0,\n    date: !0,\n    datetime: !0,\n    \"datetime-local\": !0,\n    email: !0,\n    month: !0,\n    number: !0,\n    password: !0,\n    range: !0,\n    search: !0,\n    tel: !0,\n    text: !0,\n    time: !0,\n    url: !0,\n    week: !0\n  };\n\n  function Qb(a) {\n    var b = a && a.nodeName && a.nodeName.toLowerCase();\n    return \"input\" === b ? !!Pb[a.type] : \"textarea\" === b ? !0 : !1;\n  }\n\n  function Rb(a) {\n    a = a.target || a.srcElement || window;\n    a.correspondingUseElement && (a = a.correspondingUseElement);\n    return 3 === a.nodeType ? a.parentNode : a;\n  }\n\n  function Sb(a) {\n    if (!Sa) return !1;\n    a = \"on\" + a;\n    var b = a in document;\n    b || (b = document.createElement(\"div\"), b.setAttribute(a, \"return;\"), b = \"function\" === typeof b[a]);\n    return b;\n  }\n\n  function Tb(a) {\n    var b = a.type;\n    return (a = a.nodeName) && \"input\" === a.toLowerCase() && (\"checkbox\" === b || \"radio\" === b);\n  }\n\n  function Ub(a) {\n    var b = Tb(a) ? \"checked\" : \"value\",\n        c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),\n        d = \"\" + a[b];\n\n    if (!a.hasOwnProperty(b) && \"undefined\" !== typeof c && \"function\" === typeof c.get && \"function\" === typeof c.set) {\n      var e = c.get,\n          f = c.set;\n      Object.defineProperty(a, b, {\n        configurable: !0,\n        get: function get() {\n          return e.call(this);\n        },\n        set: function set(a) {\n          d = \"\" + a;\n          f.call(this, a);\n        }\n      });\n      Object.defineProperty(a, b, {\n        enumerable: c.enumerable\n      });\n      return {\n        getValue: function getValue() {\n          return d;\n        },\n        setValue: function setValue(a) {\n          d = \"\" + a;\n        },\n        stopTracking: function stopTracking() {\n          a._valueTracker = null;\n          delete a[b];\n        }\n      };\n    }\n  }\n\n  function Vb(a) {\n    a._valueTracker || (a._valueTracker = Ub(a));\n  }\n\n  function Wb(a) {\n    if (!a) return !1;\n    var b = a._valueTracker;\n    if (!b) return !0;\n    var c = b.getValue();\n    var d = \"\";\n    a && (d = Tb(a) ? a.checked ? \"true\" : \"false\" : a.value);\n    a = d;\n    return a !== c ? (b.setValue(a), !0) : !1;\n  }\n\n  var Xb = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\n      Yb = /^(.*)[\\\\\\/]/,\n      D = \"function\" === typeof Symbol && Symbol.for,\n      Zb = D ? Symbol.for(\"react.element\") : 60103,\n      $b = D ? Symbol.for(\"react.portal\") : 60106,\n      ac = D ? Symbol.for(\"react.fragment\") : 60107,\n      bc = D ? Symbol.for(\"react.strict_mode\") : 60108,\n      cc = D ? Symbol.for(\"react.profiler\") : 60114,\n      dc = D ? Symbol.for(\"react.provider\") : 60109,\n      ec = D ? Symbol.for(\"react.context\") : 60110,\n      fc = D ? Symbol.for(\"react.concurrent_mode\") : 60111,\n      gc = D ? Symbol.for(\"react.forward_ref\") : 60112,\n      hc = D ? Symbol.for(\"react.suspense\") : 60113,\n      ic = D ? Symbol.for(\"react.memo\") : 60115,\n      jc = D ? Symbol.for(\"react.lazy\") : 60116,\n      kc = \"function\" === typeof Symbol && Symbol.iterator;\n\n  function lc(a) {\n    if (null === a || \"object\" !== typeof a) return null;\n    a = kc && a[kc] || a[\"@@iterator\"];\n    return \"function\" === typeof a ? a : null;\n  }\n\n  function mc(a) {\n    if (null == a) return null;\n    if (\"function\" === typeof a) return a.displayName || a.name || null;\n    if (\"string\" === typeof a) return a;\n\n    switch (a) {\n      case fc:\n        return \"ConcurrentMode\";\n\n      case ac:\n        return \"Fragment\";\n\n      case $b:\n        return \"Portal\";\n\n      case cc:\n        return \"Profiler\";\n\n      case bc:\n        return \"StrictMode\";\n\n      case hc:\n        return \"Suspense\";\n    }\n\n    if (\"object\" === typeof a) switch (a.$$typeof) {\n      case ec:\n        return \"Context.Consumer\";\n\n      case dc:\n        return \"Context.Provider\";\n\n      case gc:\n        var b = a.render;\n        b = b.displayName || b.name || \"\";\n        return a.displayName || (\"\" !== b ? \"ForwardRef(\" + b + \")\" : \"ForwardRef\");\n\n      case ic:\n        return mc(a.type);\n\n      case jc:\n        if (a = 1 === a._status ? a._result : null) return mc(a);\n    }\n    return null;\n  }\n\n  function nc(a) {\n    var b = \"\";\n\n    do {\n      a: switch (a.tag) {\n        case 3:\n        case 4:\n        case 6:\n        case 7:\n        case 10:\n        case 9:\n          var c = \"\";\n          break a;\n\n        default:\n          var d = a._debugOwner,\n              e = a._debugSource,\n              f = mc(a.type);\n          c = null;\n          d && (c = mc(d.type));\n          d = f;\n          f = \"\";\n          e ? f = \" (at \" + e.fileName.replace(Yb, \"\") + \":\" + e.lineNumber + \")\" : c && (f = \" (created by \" + c + \")\");\n          c = \"\\n    in \" + (d || \"Unknown\") + f;\n      }\n\n      b += c;\n      a = a.return;\n    } while (a);\n\n    return b;\n  }\n\n  var oc = /^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,\n      pc = Object.prototype.hasOwnProperty,\n      qc = {},\n      rc = {};\n\n  function sc(a) {\n    if (pc.call(rc, a)) return !0;\n    if (pc.call(qc, a)) return !1;\n    if (oc.test(a)) return rc[a] = !0;\n    qc[a] = !0;\n    return !1;\n  }\n\n  function tc(a, b, c, d) {\n    if (null !== c && 0 === c.type) return !1;\n\n    switch (typeof b) {\n      case \"function\":\n      case \"symbol\":\n        return !0;\n\n      case \"boolean\":\n        if (d) return !1;\n        if (null !== c) return !c.acceptsBooleans;\n        a = a.toLowerCase().slice(0, 5);\n        return \"data-\" !== a && \"aria-\" !== a;\n\n      default:\n        return !1;\n    }\n  }\n\n  function uc(a, b, c, d) {\n    if (null === b || \"undefined\" === typeof b || tc(a, b, c, d)) return !0;\n    if (d) return !1;\n    if (null !== c) switch (c.type) {\n      case 3:\n        return !b;\n\n      case 4:\n        return !1 === b;\n\n      case 5:\n        return isNaN(b);\n\n      case 6:\n        return isNaN(b) || 1 > b;\n    }\n    return !1;\n  }\n\n  function E(a, b, c, d, e) {\n    this.acceptsBooleans = 2 === b || 3 === b || 4 === b;\n    this.attributeName = d;\n    this.attributeNamespace = e;\n    this.mustUseProperty = c;\n    this.propertyName = a;\n    this.type = b;\n  }\n\n  var F = {};\n  \"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function (a) {\n    F[a] = new E(a, 0, !1, a, null);\n  });\n  [[\"acceptCharset\", \"accept-charset\"], [\"className\", \"class\"], [\"htmlFor\", \"for\"], [\"httpEquiv\", \"http-equiv\"]].forEach(function (a) {\n    var b = a[0];\n    F[b] = new E(b, 1, !1, a[1], null);\n  });\n  [\"contentEditable\", \"draggable\", \"spellCheck\", \"value\"].forEach(function (a) {\n    F[a] = new E(a, 2, !1, a.toLowerCase(), null);\n  });\n  [\"autoReverse\", \"externalResourcesRequired\", \"focusable\", \"preserveAlpha\"].forEach(function (a) {\n    F[a] = new E(a, 2, !1, a, null);\n  });\n  \"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function (a) {\n    F[a] = new E(a, 3, !1, a.toLowerCase(), null);\n  });\n  [\"checked\", \"multiple\", \"muted\", \"selected\"].forEach(function (a) {\n    F[a] = new E(a, 3, !0, a, null);\n  });\n  [\"capture\", \"download\"].forEach(function (a) {\n    F[a] = new E(a, 4, !1, a, null);\n  });\n  [\"cols\", \"rows\", \"size\", \"span\"].forEach(function (a) {\n    F[a] = new E(a, 6, !1, a, null);\n  });\n  [\"rowSpan\", \"start\"].forEach(function (a) {\n    F[a] = new E(a, 5, !1, a.toLowerCase(), null);\n  });\n  var vc = /[\\-:]([a-z])/g;\n\n  function wc(a) {\n    return a[1].toUpperCase();\n  }\n\n  \"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function (a) {\n    var b = a.replace(vc, wc);\n    F[b] = new E(b, 1, !1, a, null);\n  });\n  \"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function (a) {\n    var b = a.replace(vc, wc);\n    F[b] = new E(b, 1, !1, a, \"http://www.w3.org/1999/xlink\");\n  });\n  [\"xml:base\", \"xml:lang\", \"xml:space\"].forEach(function (a) {\n    var b = a.replace(vc, wc);\n    F[b] = new E(b, 1, !1, a, \"http://www.w3.org/XML/1998/namespace\");\n  });\n  F.tabIndex = new E(\"tabIndex\", 1, !1, \"tabindex\", null);\n\n  function xc(a, b, c, d) {\n    var e = F.hasOwnProperty(b) ? F[b] : null;\n    var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || \"o\" !== b[0] && \"O\" !== b[0] || \"n\" !== b[1] && \"N\" !== b[1] ? !1 : !0;\n    f || (uc(b, c, e, d) && (c = null), d || null === e ? sc(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, \"\" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : \"\" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? \"\" : \"\" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));\n  }\n\n  function yc(a) {\n    switch (typeof a) {\n      case \"boolean\":\n      case \"number\":\n      case \"object\":\n      case \"string\":\n      case \"undefined\":\n        return a;\n\n      default:\n        return \"\";\n    }\n  }\n\n  function zc(a, b) {\n    var c = b.checked;\n    return n({}, b, {\n      defaultChecked: void 0,\n      defaultValue: void 0,\n      value: void 0,\n      checked: null != c ? c : a._wrapperState.initialChecked\n    });\n  }\n\n  function Ac(a, b) {\n    var c = null == b.defaultValue ? \"\" : b.defaultValue,\n        d = null != b.checked ? b.checked : b.defaultChecked;\n    c = yc(null != b.value ? b.value : c);\n    a._wrapperState = {\n      initialChecked: d,\n      initialValue: c,\n      controlled: \"checkbox\" === b.type || \"radio\" === b.type ? null != b.checked : null != b.value\n    };\n  }\n\n  function Bc(a, b) {\n    b = b.checked;\n    null != b && xc(a, \"checked\", b, !1);\n  }\n\n  function Cc(a, b) {\n    Bc(a, b);\n    var c = yc(b.value),\n        d = b.type;\n    if (null != c) {\n      if (\"number\" === d) {\n        if (0 === c && \"\" === a.value || a.value != c) a.value = \"\" + c;\n      } else a.value !== \"\" + c && (a.value = \"\" + c);\n    } else if (\"submit\" === d || \"reset\" === d) {\n      a.removeAttribute(\"value\");\n      return;\n    }\n    b.hasOwnProperty(\"value\") ? Dc(a, b.type, c) : b.hasOwnProperty(\"defaultValue\") && Dc(a, b.type, yc(b.defaultValue));\n    null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);\n  }\n\n  function Ec(a, b, c) {\n    if (b.hasOwnProperty(\"value\") || b.hasOwnProperty(\"defaultValue\")) {\n      var d = b.type;\n      if (!(\"submit\" !== d && \"reset\" !== d || void 0 !== b.value && null !== b.value)) return;\n      b = \"\" + a._wrapperState.initialValue;\n      c || b === a.value || (a.value = b);\n      a.defaultValue = b;\n    }\n\n    c = a.name;\n    \"\" !== c && (a.name = \"\");\n    a.defaultChecked = !a.defaultChecked;\n    a.defaultChecked = !!a._wrapperState.initialChecked;\n    \"\" !== c && (a.name = c);\n  }\n\n  function Dc(a, b, c) {\n    if (\"number\" !== b || a.ownerDocument.activeElement !== a) null == c ? a.defaultValue = \"\" + a._wrapperState.initialValue : a.defaultValue !== \"\" + c && (a.defaultValue = \"\" + c);\n  }\n\n  var Fc = {\n    change: {\n      phasedRegistrationNames: {\n        bubbled: \"onChange\",\n        captured: \"onChangeCapture\"\n      },\n      dependencies: \"blur change click focus input keydown keyup selectionchange\".split(\" \")\n    }\n  };\n\n  function Gc(a, b, c) {\n    a = z.getPooled(Fc.change, a, b, c);\n    a.type = \"change\";\n    Ib(c);\n    Ra(a);\n    return a;\n  }\n\n  var Jc = null,\n      Kc = null;\n\n  function Lc(a) {\n    Ea(a);\n  }\n\n  function Mc(a) {\n    var b = Ka(a);\n    if (Wb(b)) return a;\n  }\n\n  function Nc(a, b) {\n    if (\"change\" === a) return b;\n  }\n\n  var Oc = !1;\n  Sa && (Oc = Sb(\"input\") && (!document.documentMode || 9 < document.documentMode));\n\n  function Pc() {\n    Jc && (Jc.detachEvent(\"onpropertychange\", Qc), Kc = Jc = null);\n  }\n\n  function Qc(a) {\n    \"value\" === a.propertyName && Mc(Kc) && (a = Gc(Kc, a, Rb(a)), Ob(Lc, a));\n  }\n\n  function Rc(a, b, c) {\n    \"focus\" === a ? (Pc(), Jc = b, Kc = c, Jc.attachEvent(\"onpropertychange\", Qc)) : \"blur\" === a && Pc();\n  }\n\n  function Sc(a) {\n    if (\"selectionchange\" === a || \"keyup\" === a || \"keydown\" === a) return Mc(Kc);\n  }\n\n  function Tc(a, b) {\n    if (\"click\" === a) return Mc(b);\n  }\n\n  function Uc(a, b) {\n    if (\"input\" === a || \"change\" === a) return Mc(b);\n  }\n\n  var Vc = {\n    eventTypes: Fc,\n    _isInputEventSupported: Oc,\n    extractEvents: function extractEvents(a, b, c, d) {\n      var e = b ? Ka(b) : window,\n          f = void 0,\n          g = void 0,\n          h = e.nodeName && e.nodeName.toLowerCase();\n      \"select\" === h || \"input\" === h && \"file\" === e.type ? f = Nc : Qb(e) ? Oc ? f = Uc : (f = Sc, g = Rc) : (h = e.nodeName) && \"input\" === h.toLowerCase() && (\"checkbox\" === e.type || \"radio\" === e.type) && (f = Tc);\n      if (f && (f = f(a, b))) return Gc(f, c, d);\n      g && g(a, e, b);\n      \"blur\" === a && (a = e._wrapperState) && a.controlled && \"number\" === e.type && Dc(e, \"number\", e.value);\n    }\n  },\n      Wc = z.extend({\n    view: null,\n    detail: null\n  }),\n      Xc = {\n    Alt: \"altKey\",\n    Control: \"ctrlKey\",\n    Meta: \"metaKey\",\n    Shift: \"shiftKey\"\n  };\n\n  function Yc(a) {\n    var b = this.nativeEvent;\n    return b.getModifierState ? b.getModifierState(a) : (a = Xc[a]) ? !!b[a] : !1;\n  }\n\n  function Zc() {\n    return Yc;\n  }\n\n  var $c = 0,\n      ad = 0,\n      bd = !1,\n      cd = !1,\n      dd = Wc.extend({\n    screenX: null,\n    screenY: null,\n    clientX: null,\n    clientY: null,\n    pageX: null,\n    pageY: null,\n    ctrlKey: null,\n    shiftKey: null,\n    altKey: null,\n    metaKey: null,\n    getModifierState: Zc,\n    button: null,\n    buttons: null,\n    relatedTarget: function relatedTarget(a) {\n      return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);\n    },\n    movementX: function movementX(a) {\n      if (\"movementX\" in a) return a.movementX;\n      var b = $c;\n      $c = a.screenX;\n      return bd ? \"mousemove\" === a.type ? a.screenX - b : 0 : (bd = !0, 0);\n    },\n    movementY: function movementY(a) {\n      if (\"movementY\" in a) return a.movementY;\n      var b = ad;\n      ad = a.screenY;\n      return cd ? \"mousemove\" === a.type ? a.screenY - b : 0 : (cd = !0, 0);\n    }\n  }),\n      ed = dd.extend({\n    pointerId: null,\n    width: null,\n    height: null,\n    pressure: null,\n    tangentialPressure: null,\n    tiltX: null,\n    tiltY: null,\n    twist: null,\n    pointerType: null,\n    isPrimary: null\n  }),\n      fd = {\n    mouseEnter: {\n      registrationName: \"onMouseEnter\",\n      dependencies: [\"mouseout\", \"mouseover\"]\n    },\n    mouseLeave: {\n      registrationName: \"onMouseLeave\",\n      dependencies: [\"mouseout\", \"mouseover\"]\n    },\n    pointerEnter: {\n      registrationName: \"onPointerEnter\",\n      dependencies: [\"pointerout\", \"pointerover\"]\n    },\n    pointerLeave: {\n      registrationName: \"onPointerLeave\",\n      dependencies: [\"pointerout\", \"pointerover\"]\n    }\n  },\n      gd = {\n    eventTypes: fd,\n    extractEvents: function extractEvents(a, b, c, d) {\n      var e = \"mouseover\" === a || \"pointerover\" === a,\n          f = \"mouseout\" === a || \"pointerout\" === a;\n      if (e && (c.relatedTarget || c.fromElement) || !f && !e) return null;\n      e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window;\n      f ? (f = b, b = (b = c.relatedTarget || c.toElement) ? Ia(b) : null) : f = null;\n      if (f === b) return null;\n      var g = void 0,\n          h = void 0,\n          k = void 0,\n          l = void 0;\n      if (\"mouseout\" === a || \"mouseover\" === a) g = dd, h = fd.mouseLeave, k = fd.mouseEnter, l = \"mouse\";else if (\"pointerout\" === a || \"pointerover\" === a) g = ed, h = fd.pointerLeave, k = fd.pointerEnter, l = \"pointer\";\n      var m = null == f ? e : Ka(f);\n      e = null == b ? e : Ka(b);\n      a = g.getPooled(h, f, c, d);\n      a.type = l + \"leave\";\n      a.target = m;\n      a.relatedTarget = e;\n      c = g.getPooled(k, b, c, d);\n      c.type = l + \"enter\";\n      c.target = e;\n      c.relatedTarget = m;\n      d = b;\n      if (f && d) a: {\n        b = f;\n        e = d;\n        l = 0;\n\n        for (g = b; g; g = Ma(g)) {\n          l++;\n        }\n\n        g = 0;\n\n        for (k = e; k; k = Ma(k)) {\n          g++;\n        }\n\n        for (; 0 < l - g;) {\n          b = Ma(b), l--;\n        }\n\n        for (; 0 < g - l;) {\n          e = Ma(e), g--;\n        }\n\n        for (; l--;) {\n          if (b === e || b === e.alternate) break a;\n          b = Ma(b);\n          e = Ma(e);\n        }\n\n        b = null;\n      } else b = null;\n      e = b;\n\n      for (b = []; f && f !== e;) {\n        l = f.alternate;\n        if (null !== l && l === e) break;\n        b.push(f);\n        f = Ma(f);\n      }\n\n      for (f = []; d && d !== e;) {\n        l = d.alternate;\n        if (null !== l && l === e) break;\n        f.push(d);\n        d = Ma(d);\n      }\n\n      for (d = 0; d < b.length; d++) {\n        Pa(b[d], \"bubbled\", a);\n      }\n\n      for (d = f.length; 0 < d--;) {\n        Pa(f[d], \"captured\", c);\n      }\n\n      return [a, c];\n    }\n  },\n      hd = Object.prototype.hasOwnProperty;\n\n  function id(a, b) {\n    return a === b ? 0 !== a || 0 !== b || 1 / a === 1 / b : a !== a && b !== b;\n  }\n\n  function jd(a, b) {\n    if (id(a, b)) return !0;\n    if (\"object\" !== typeof a || null === a || \"object\" !== typeof b || null === b) return !1;\n    var c = Object.keys(a),\n        d = Object.keys(b);\n    if (c.length !== d.length) return !1;\n\n    for (d = 0; d < c.length; d++) {\n      if (!hd.call(b, c[d]) || !id(a[c[d]], b[c[d]])) return !1;\n    }\n\n    return !0;\n  }\n\n  function kd(a) {\n    var b = a;\n    if (a.alternate) for (; b.return;) {\n      b = b.return;\n    } else {\n      if (0 !== (b.effectTag & 2)) return 1;\n\n      for (; b.return;) {\n        if (b = b.return, 0 !== (b.effectTag & 2)) return 1;\n      }\n    }\n    return 3 === b.tag ? 2 : 3;\n  }\n\n  function ld(a) {\n    2 !== kd(a) ? t(\"188\") : void 0;\n  }\n\n  function md(a) {\n    var b = a.alternate;\n    if (!b) return b = kd(a), 3 === b ? t(\"188\") : void 0, 1 === b ? null : a;\n\n    for (var c = a, d = b;;) {\n      var e = c.return,\n          f = e ? e.alternate : null;\n      if (!e || !f) break;\n\n      if (e.child === f.child) {\n        for (var g = e.child; g;) {\n          if (g === c) return ld(e), a;\n          if (g === d) return ld(e), b;\n          g = g.sibling;\n        }\n\n        t(\"188\");\n      }\n\n      if (c.return !== d.return) c = e, d = f;else {\n        g = !1;\n\n        for (var h = e.child; h;) {\n          if (h === c) {\n            g = !0;\n            c = e;\n            d = f;\n            break;\n          }\n\n          if (h === d) {\n            g = !0;\n            d = e;\n            c = f;\n            break;\n          }\n\n          h = h.sibling;\n        }\n\n        if (!g) {\n          for (h = f.child; h;) {\n            if (h === c) {\n              g = !0;\n              c = f;\n              d = e;\n              break;\n            }\n\n            if (h === d) {\n              g = !0;\n              d = f;\n              c = e;\n              break;\n            }\n\n            h = h.sibling;\n          }\n\n          g ? void 0 : t(\"189\");\n        }\n      }\n      c.alternate !== d ? t(\"190\") : void 0;\n    }\n\n    3 !== c.tag ? t(\"188\") : void 0;\n    return c.stateNode.current === c ? a : b;\n  }\n\n  function nd(a) {\n    a = md(a);\n    if (!a) return null;\n\n    for (var b = a;;) {\n      if (5 === b.tag || 6 === b.tag) return b;\n      if (b.child) b.child.return = b, b = b.child;else {\n        if (b === a) break;\n\n        for (; !b.sibling;) {\n          if (!b.return || b.return === a) return null;\n          b = b.return;\n        }\n\n        b.sibling.return = b.return;\n        b = b.sibling;\n      }\n    }\n\n    return null;\n  }\n\n  var od = z.extend({\n    animationName: null,\n    elapsedTime: null,\n    pseudoElement: null\n  }),\n      pd = z.extend({\n    clipboardData: function clipboardData(a) {\n      return \"clipboardData\" in a ? a.clipboardData : window.clipboardData;\n    }\n  }),\n      qd = Wc.extend({\n    relatedTarget: null\n  });\n\n  function rd(a) {\n    var b = a.keyCode;\n    \"charCode\" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;\n    10 === a && (a = 13);\n    return 32 <= a || 13 === a ? a : 0;\n  }\n\n  var sd = {\n    Esc: \"Escape\",\n    Spacebar: \" \",\n    Left: \"ArrowLeft\",\n    Up: \"ArrowUp\",\n    Right: \"ArrowRight\",\n    Down: \"ArrowDown\",\n    Del: \"Delete\",\n    Win: \"OS\",\n    Menu: \"ContextMenu\",\n    Apps: \"ContextMenu\",\n    Scroll: \"ScrollLock\",\n    MozPrintableKey: \"Unidentified\"\n  },\n      td = {\n    8: \"Backspace\",\n    9: \"Tab\",\n    12: \"Clear\",\n    13: \"Enter\",\n    16: \"Shift\",\n    17: \"Control\",\n    18: \"Alt\",\n    19: \"Pause\",\n    20: \"CapsLock\",\n    27: \"Escape\",\n    32: \" \",\n    33: \"PageUp\",\n    34: \"PageDown\",\n    35: \"End\",\n    36: \"Home\",\n    37: \"ArrowLeft\",\n    38: \"ArrowUp\",\n    39: \"ArrowRight\",\n    40: \"ArrowDown\",\n    45: \"Insert\",\n    46: \"Delete\",\n    112: \"F1\",\n    113: \"F2\",\n    114: \"F3\",\n    115: \"F4\",\n    116: \"F5\",\n    117: \"F6\",\n    118: \"F7\",\n    119: \"F8\",\n    120: \"F9\",\n    121: \"F10\",\n    122: \"F11\",\n    123: \"F12\",\n    144: \"NumLock\",\n    145: \"ScrollLock\",\n    224: \"Meta\"\n  },\n      ud = Wc.extend({\n    key: function key(a) {\n      if (a.key) {\n        var b = sd[a.key] || a.key;\n        if (\"Unidentified\" !== b) return b;\n      }\n\n      return \"keypress\" === a.type ? (a = rd(a), 13 === a ? \"Enter\" : String.fromCharCode(a)) : \"keydown\" === a.type || \"keyup\" === a.type ? td[a.keyCode] || \"Unidentified\" : \"\";\n    },\n    location: null,\n    ctrlKey: null,\n    shiftKey: null,\n    altKey: null,\n    metaKey: null,\n    repeat: null,\n    locale: null,\n    getModifierState: Zc,\n    charCode: function charCode(a) {\n      return \"keypress\" === a.type ? rd(a) : 0;\n    },\n    keyCode: function keyCode(a) {\n      return \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n    },\n    which: function which(a) {\n      return \"keypress\" === a.type ? rd(a) : \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n    }\n  }),\n      vd = dd.extend({\n    dataTransfer: null\n  }),\n      wd = Wc.extend({\n    touches: null,\n    targetTouches: null,\n    changedTouches: null,\n    altKey: null,\n    metaKey: null,\n    ctrlKey: null,\n    shiftKey: null,\n    getModifierState: Zc\n  }),\n      xd = z.extend({\n    propertyName: null,\n    elapsedTime: null,\n    pseudoElement: null\n  }),\n      yd = dd.extend({\n    deltaX: function deltaX(a) {\n      return \"deltaX\" in a ? a.deltaX : \"wheelDeltaX\" in a ? -a.wheelDeltaX : 0;\n    },\n    deltaY: function deltaY(a) {\n      return \"deltaY\" in a ? a.deltaY : \"wheelDeltaY\" in a ? -a.wheelDeltaY : \"wheelDelta\" in a ? -a.wheelDelta : 0;\n    },\n    deltaZ: null,\n    deltaMode: null\n  }),\n      zd = [[\"abort\", \"abort\"], [Ya, \"animationEnd\"], [Za, \"animationIteration\"], [$a, \"animationStart\"], [\"canplay\", \"canPlay\"], [\"canplaythrough\", \"canPlayThrough\"], [\"drag\", \"drag\"], [\"dragenter\", \"dragEnter\"], [\"dragexit\", \"dragExit\"], [\"dragleave\", \"dragLeave\"], [\"dragover\", \"dragOver\"], [\"durationchange\", \"durationChange\"], [\"emptied\", \"emptied\"], [\"encrypted\", \"encrypted\"], [\"ended\", \"ended\"], [\"error\", \"error\"], [\"gotpointercapture\", \"gotPointerCapture\"], [\"load\", \"load\"], [\"loadeddata\", \"loadedData\"], [\"loadedmetadata\", \"loadedMetadata\"], [\"loadstart\", \"loadStart\"], [\"lostpointercapture\", \"lostPointerCapture\"], [\"mousemove\", \"mouseMove\"], [\"mouseout\", \"mouseOut\"], [\"mouseover\", \"mouseOver\"], [\"playing\", \"playing\"], [\"pointermove\", \"pointerMove\"], [\"pointerout\", \"pointerOut\"], [\"pointerover\", \"pointerOver\"], [\"progress\", \"progress\"], [\"scroll\", \"scroll\"], [\"seeking\", \"seeking\"], [\"stalled\", \"stalled\"], [\"suspend\", \"suspend\"], [\"timeupdate\", \"timeUpdate\"], [\"toggle\", \"toggle\"], [\"touchmove\", \"touchMove\"], [ab, \"transitionEnd\"], [\"waiting\", \"waiting\"], [\"wheel\", \"wheel\"]],\n      Ad = {},\n      Bd = {};\n\n  function Cd(a, b) {\n    var c = a[0];\n    a = a[1];\n    var d = \"on\" + (a[0].toUpperCase() + a.slice(1));\n    b = {\n      phasedRegistrationNames: {\n        bubbled: d,\n        captured: d + \"Capture\"\n      },\n      dependencies: [c],\n      isInteractive: b\n    };\n    Ad[a] = b;\n    Bd[c] = b;\n  }\n\n  [[\"blur\", \"blur\"], [\"cancel\", \"cancel\"], [\"click\", \"click\"], [\"close\", \"close\"], [\"contextmenu\", \"contextMenu\"], [\"copy\", \"copy\"], [\"cut\", \"cut\"], [\"auxclick\", \"auxClick\"], [\"dblclick\", \"doubleClick\"], [\"dragend\", \"dragEnd\"], [\"dragstart\", \"dragStart\"], [\"drop\", \"drop\"], [\"focus\", \"focus\"], [\"input\", \"input\"], [\"invalid\", \"invalid\"], [\"keydown\", \"keyDown\"], [\"keypress\", \"keyPress\"], [\"keyup\", \"keyUp\"], [\"mousedown\", \"mouseDown\"], [\"mouseup\", \"mouseUp\"], [\"paste\", \"paste\"], [\"pause\", \"pause\"], [\"play\", \"play\"], [\"pointercancel\", \"pointerCancel\"], [\"pointerdown\", \"pointerDown\"], [\"pointerup\", \"pointerUp\"], [\"ratechange\", \"rateChange\"], [\"reset\", \"reset\"], [\"seeked\", \"seeked\"], [\"submit\", \"submit\"], [\"touchcancel\", \"touchCancel\"], [\"touchend\", \"touchEnd\"], [\"touchstart\", \"touchStart\"], [\"volumechange\", \"volumeChange\"]].forEach(function (a) {\n    Cd(a, !0);\n  });\n  zd.forEach(function (a) {\n    Cd(a, !1);\n  });\n  var Dd = {\n    eventTypes: Ad,\n    isInteractiveTopLevelEventType: function isInteractiveTopLevelEventType(a) {\n      a = Bd[a];\n      return void 0 !== a && !0 === a.isInteractive;\n    },\n    extractEvents: function extractEvents(a, b, c, d) {\n      var e = Bd[a];\n      if (!e) return null;\n\n      switch (a) {\n        case \"keypress\":\n          if (0 === rd(c)) return null;\n\n        case \"keydown\":\n        case \"keyup\":\n          a = ud;\n          break;\n\n        case \"blur\":\n        case \"focus\":\n          a = qd;\n          break;\n\n        case \"click\":\n          if (2 === c.button) return null;\n\n        case \"auxclick\":\n        case \"dblclick\":\n        case \"mousedown\":\n        case \"mousemove\":\n        case \"mouseup\":\n        case \"mouseout\":\n        case \"mouseover\":\n        case \"contextmenu\":\n          a = dd;\n          break;\n\n        case \"drag\":\n        case \"dragend\":\n        case \"dragenter\":\n        case \"dragexit\":\n        case \"dragleave\":\n        case \"dragover\":\n        case \"dragstart\":\n        case \"drop\":\n          a = vd;\n          break;\n\n        case \"touchcancel\":\n        case \"touchend\":\n        case \"touchmove\":\n        case \"touchstart\":\n          a = wd;\n          break;\n\n        case Ya:\n        case Za:\n        case $a:\n          a = od;\n          break;\n\n        case ab:\n          a = xd;\n          break;\n\n        case \"scroll\":\n          a = Wc;\n          break;\n\n        case \"wheel\":\n          a = yd;\n          break;\n\n        case \"copy\":\n        case \"cut\":\n        case \"paste\":\n          a = pd;\n          break;\n\n        case \"gotpointercapture\":\n        case \"lostpointercapture\":\n        case \"pointercancel\":\n        case \"pointerdown\":\n        case \"pointermove\":\n        case \"pointerout\":\n        case \"pointerover\":\n        case \"pointerup\":\n          a = ed;\n          break;\n\n        default:\n          a = z;\n      }\n\n      b = a.getPooled(e, b, c, d);\n      Ra(b);\n      return b;\n    }\n  },\n      Ed = Dd.isInteractiveTopLevelEventType,\n      Fd = [];\n\n  function Gd(a) {\n    var b = a.targetInst,\n        c = b;\n\n    do {\n      if (!c) {\n        a.ancestors.push(c);\n        break;\n      }\n\n      var d;\n\n      for (d = c; d.return;) {\n        d = d.return;\n      }\n\n      d = 3 !== d.tag ? null : d.stateNode.containerInfo;\n      if (!d) break;\n      a.ancestors.push(c);\n      c = Ia(d);\n    } while (c);\n\n    for (c = 0; c < a.ancestors.length; c++) {\n      b = a.ancestors[c];\n      var e = Rb(a.nativeEvent);\n      d = a.topLevelType;\n\n      for (var f = a.nativeEvent, g = null, h = 0; h < pa.length; h++) {\n        var k = pa[h];\n        k && (k = k.extractEvents(d, b, f, e)) && (g = ya(g, k));\n      }\n\n      Ea(g);\n    }\n  }\n\n  var Hd = !0;\n\n  function H(a, b) {\n    if (!b) return null;\n    var c = (Ed(a) ? Id : Jd).bind(null, a);\n    b.addEventListener(a, c, !1);\n  }\n\n  function Kd(a, b) {\n    if (!b) return null;\n    var c = (Ed(a) ? Id : Jd).bind(null, a);\n    b.addEventListener(a, c, !0);\n  }\n\n  function Id(a, b) {\n    Lb(Jd, a, b);\n  }\n\n  function Jd(a, b) {\n    if (Hd) {\n      var c = Rb(b);\n      c = Ia(c);\n      null === c || \"number\" !== typeof c.tag || 2 === kd(c) || (c = null);\n\n      if (Fd.length) {\n        var d = Fd.pop();\n        d.topLevelType = a;\n        d.nativeEvent = b;\n        d.targetInst = c;\n        a = d;\n      } else a = {\n        topLevelType: a,\n        nativeEvent: b,\n        targetInst: c,\n        ancestors: []\n      };\n\n      try {\n        Ob(Gd, a);\n      } finally {\n        a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 10 > Fd.length && Fd.push(a);\n      }\n    }\n  }\n\n  var Ld = {},\n      Md = 0,\n      Nd = \"_reactListenersID\" + (\"\" + Math.random()).slice(2);\n\n  function Od(a) {\n    Object.prototype.hasOwnProperty.call(a, Nd) || (a[Nd] = Md++, Ld[a[Nd]] = {});\n    return Ld[a[Nd]];\n  }\n\n  function Pd(a) {\n    a = a || (\"undefined\" !== typeof document ? document : void 0);\n    if (\"undefined\" === typeof a) return null;\n\n    try {\n      return a.activeElement || a.body;\n    } catch (b) {\n      return a.body;\n    }\n  }\n\n  function Qd(a) {\n    for (; a && a.firstChild;) {\n      a = a.firstChild;\n    }\n\n    return a;\n  }\n\n  function Rd(a, b) {\n    var c = Qd(a);\n    a = 0;\n\n    for (var d; c;) {\n      if (3 === c.nodeType) {\n        d = a + c.textContent.length;\n        if (a <= b && d >= b) return {\n          node: c,\n          offset: b - a\n        };\n        a = d;\n      }\n\n      a: {\n        for (; c;) {\n          if (c.nextSibling) {\n            c = c.nextSibling;\n            break a;\n          }\n\n          c = c.parentNode;\n        }\n\n        c = void 0;\n      }\n\n      c = Qd(c);\n    }\n  }\n\n  function Sd(a, b) {\n    return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Sd(a, b.parentNode) : \"contains\" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;\n  }\n\n  function Td() {\n    for (var a = window, b = Pd(); b instanceof a.HTMLIFrameElement;) {\n      try {\n        a = b.contentDocument.defaultView;\n      } catch (c) {\n        break;\n      }\n\n      b = Pd(a.document);\n    }\n\n    return b;\n  }\n\n  function Ud(a) {\n    var b = a && a.nodeName && a.nodeName.toLowerCase();\n    return b && (\"input\" === b && (\"text\" === a.type || \"search\" === a.type || \"tel\" === a.type || \"url\" === a.type || \"password\" === a.type) || \"textarea\" === b || \"true\" === a.contentEditable);\n  }\n\n  var Vd = Sa && \"documentMode\" in document && 11 >= document.documentMode,\n      Wd = {\n    select: {\n      phasedRegistrationNames: {\n        bubbled: \"onSelect\",\n        captured: \"onSelectCapture\"\n      },\n      dependencies: \"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")\n    }\n  },\n      Xd = null,\n      Yd = null,\n      Zd = null,\n      $d = !1;\n\n  function ae(a, b) {\n    var c = b.window === b ? b.document : 9 === b.nodeType ? b : b.ownerDocument;\n    if ($d || null == Xd || Xd !== Pd(c)) return null;\n    c = Xd;\n    \"selectionStart\" in c && Ud(c) ? c = {\n      start: c.selectionStart,\n      end: c.selectionEnd\n    } : (c = (c.ownerDocument && c.ownerDocument.defaultView || window).getSelection(), c = {\n      anchorNode: c.anchorNode,\n      anchorOffset: c.anchorOffset,\n      focusNode: c.focusNode,\n      focusOffset: c.focusOffset\n    });\n    return Zd && jd(Zd, c) ? null : (Zd = c, a = z.getPooled(Wd.select, Yd, a, b), a.type = \"select\", a.target = Xd, Ra(a), a);\n  }\n\n  var be = {\n    eventTypes: Wd,\n    extractEvents: function extractEvents(a, b, c, d) {\n      var e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument,\n          f;\n\n      if (!(f = !e)) {\n        a: {\n          e = Od(e);\n          f = ta.onSelect;\n\n          for (var g = 0; g < f.length; g++) {\n            var h = f[g];\n\n            if (!e.hasOwnProperty(h) || !e[h]) {\n              e = !1;\n              break a;\n            }\n          }\n\n          e = !0;\n        }\n\n        f = !e;\n      }\n\n      if (f) return null;\n      e = b ? Ka(b) : window;\n\n      switch (a) {\n        case \"focus\":\n          if (Qb(e) || \"true\" === e.contentEditable) Xd = e, Yd = b, Zd = null;\n          break;\n\n        case \"blur\":\n          Zd = Yd = Xd = null;\n          break;\n\n        case \"mousedown\":\n          $d = !0;\n          break;\n\n        case \"contextmenu\":\n        case \"mouseup\":\n        case \"dragend\":\n          return $d = !1, ae(c, d);\n\n        case \"selectionchange\":\n          if (Vd) break;\n\n        case \"keydown\":\n        case \"keyup\":\n          return ae(c, d);\n      }\n\n      return null;\n    }\n  };\n  Ca.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\n  ua = La;\n  va = Ja;\n  wa = Ka;\n  Ca.injectEventPluginsByName({\n    SimpleEventPlugin: Dd,\n    EnterLeaveEventPlugin: gd,\n    ChangeEventPlugin: Vc,\n    SelectEventPlugin: be,\n    BeforeInputEventPlugin: Bb\n  });\n\n  function de(a) {\n    var b = \"\";\n    aa.Children.forEach(a, function (a) {\n      null != a && (b += a);\n    });\n    return b;\n  }\n\n  function ee(a, b) {\n    a = n({\n      children: void 0\n    }, b);\n    if (b = de(b.children)) a.children = b;\n    return a;\n  }\n\n  function fe(a, b, c, d) {\n    a = a.options;\n\n    if (b) {\n      b = {};\n\n      for (var e = 0; e < c.length; e++) {\n        b[\"$\" + c[e]] = !0;\n      }\n\n      for (c = 0; c < a.length; c++) {\n        e = b.hasOwnProperty(\"$\" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);\n      }\n    } else {\n      c = \"\" + yc(c);\n      b = null;\n\n      for (e = 0; e < a.length; e++) {\n        if (a[e].value === c) {\n          a[e].selected = !0;\n          d && (a[e].defaultSelected = !0);\n          return;\n        }\n\n        null !== b || a[e].disabled || (b = a[e]);\n      }\n\n      null !== b && (b.selected = !0);\n    }\n  }\n\n  function ge(a, b) {\n    null != b.dangerouslySetInnerHTML ? t(\"91\") : void 0;\n    return n({}, b, {\n      value: void 0,\n      defaultValue: void 0,\n      children: \"\" + a._wrapperState.initialValue\n    });\n  }\n\n  function he(a, b) {\n    var c = b.value;\n    null == c && (c = b.defaultValue, b = b.children, null != b && (null != c ? t(\"92\") : void 0, Array.isArray(b) && (1 >= b.length ? void 0 : t(\"93\"), b = b[0]), c = b), null == c && (c = \"\"));\n    a._wrapperState = {\n      initialValue: yc(c)\n    };\n  }\n\n  function ie(a, b) {\n    var c = yc(b.value),\n        d = yc(b.defaultValue);\n    null != c && (c = \"\" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));\n    null != d && (a.defaultValue = \"\" + d);\n  }\n\n  function je(a) {\n    var b = a.textContent;\n    b === a._wrapperState.initialValue && (a.value = b);\n  }\n\n  var ke = {\n    html: \"http://www.w3.org/1999/xhtml\",\n    mathml: \"http://www.w3.org/1998/Math/MathML\",\n    svg: \"http://www.w3.org/2000/svg\"\n  };\n\n  function le(a) {\n    switch (a) {\n      case \"svg\":\n        return \"http://www.w3.org/2000/svg\";\n\n      case \"math\":\n        return \"http://www.w3.org/1998/Math/MathML\";\n\n      default:\n        return \"http://www.w3.org/1999/xhtml\";\n    }\n  }\n\n  function me(a, b) {\n    return null == a || \"http://www.w3.org/1999/xhtml\" === a ? le(b) : \"http://www.w3.org/2000/svg\" === a && \"foreignObject\" === b ? \"http://www.w3.org/1999/xhtml\" : a;\n  }\n\n  var ne = void 0,\n      oe = function (a) {\n    return \"undefined\" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {\n      MSApp.execUnsafeLocalFunction(function () {\n        return a(b, c, d, e);\n      });\n    } : a;\n  }(function (a, b) {\n    if (a.namespaceURI !== ke.svg || \"innerHTML\" in a) a.innerHTML = b;else {\n      ne = ne || document.createElement(\"div\");\n      ne.innerHTML = \"<svg>\" + b + \"</svg>\";\n\n      for (b = ne.firstChild; a.firstChild;) {\n        a.removeChild(a.firstChild);\n      }\n\n      for (; b.firstChild;) {\n        a.appendChild(b.firstChild);\n      }\n    }\n  });\n\n  function pe(a, b) {\n    if (b) {\n      var c = a.firstChild;\n\n      if (c && c === a.lastChild && 3 === c.nodeType) {\n        c.nodeValue = b;\n        return;\n      }\n    }\n\n    a.textContent = b;\n  }\n\n  var qe = {\n    animationIterationCount: !0,\n    borderImageOutset: !0,\n    borderImageSlice: !0,\n    borderImageWidth: !0,\n    boxFlex: !0,\n    boxFlexGroup: !0,\n    boxOrdinalGroup: !0,\n    columnCount: !0,\n    columns: !0,\n    flex: !0,\n    flexGrow: !0,\n    flexPositive: !0,\n    flexShrink: !0,\n    flexNegative: !0,\n    flexOrder: !0,\n    gridArea: !0,\n    gridRow: !0,\n    gridRowEnd: !0,\n    gridRowSpan: !0,\n    gridRowStart: !0,\n    gridColumn: !0,\n    gridColumnEnd: !0,\n    gridColumnSpan: !0,\n    gridColumnStart: !0,\n    fontWeight: !0,\n    lineClamp: !0,\n    lineHeight: !0,\n    opacity: !0,\n    order: !0,\n    orphans: !0,\n    tabSize: !0,\n    widows: !0,\n    zIndex: !0,\n    zoom: !0,\n    fillOpacity: !0,\n    floodOpacity: !0,\n    stopOpacity: !0,\n    strokeDasharray: !0,\n    strokeDashoffset: !0,\n    strokeMiterlimit: !0,\n    strokeOpacity: !0,\n    strokeWidth: !0\n  },\n      re = [\"Webkit\", \"ms\", \"Moz\", \"O\"];\n  Object.keys(qe).forEach(function (a) {\n    re.forEach(function (b) {\n      b = b + a.charAt(0).toUpperCase() + a.substring(1);\n      qe[b] = qe[a];\n    });\n  });\n\n  function se(a, b, c) {\n    return null == b || \"boolean\" === typeof b || \"\" === b ? \"\" : c || \"number\" !== typeof b || 0 === b || qe.hasOwnProperty(a) && qe[a] ? (\"\" + b).trim() : b + \"px\";\n  }\n\n  function te(a, b) {\n    a = a.style;\n\n    for (var c in b) {\n      if (b.hasOwnProperty(c)) {\n        var d = 0 === c.indexOf(\"--\"),\n            e = se(c, b[c], d);\n        \"float\" === c && (c = \"cssFloat\");\n        d ? a.setProperty(c, e) : a[c] = e;\n      }\n    }\n  }\n\n  var ue = n({\n    menuitem: !0\n  }, {\n    area: !0,\n    base: !0,\n    br: !0,\n    col: !0,\n    embed: !0,\n    hr: !0,\n    img: !0,\n    input: !0,\n    keygen: !0,\n    link: !0,\n    meta: !0,\n    param: !0,\n    source: !0,\n    track: !0,\n    wbr: !0\n  });\n\n  function ve(a, b) {\n    b && (ue[a] && (null != b.children || null != b.dangerouslySetInnerHTML ? t(\"137\", a, \"\") : void 0), null != b.dangerouslySetInnerHTML && (null != b.children ? t(\"60\") : void 0, \"object\" === typeof b.dangerouslySetInnerHTML && \"__html\" in b.dangerouslySetInnerHTML ? void 0 : t(\"61\")), null != b.style && \"object\" !== typeof b.style ? t(\"62\", \"\") : void 0);\n  }\n\n  function we(a, b) {\n    if (-1 === a.indexOf(\"-\")) return \"string\" === typeof b.is;\n\n    switch (a) {\n      case \"annotation-xml\":\n      case \"color-profile\":\n      case \"font-face\":\n      case \"font-face-src\":\n      case \"font-face-uri\":\n      case \"font-face-format\":\n      case \"font-face-name\":\n      case \"missing-glyph\":\n        return !1;\n\n      default:\n        return !0;\n    }\n  }\n\n  function xe(a, b) {\n    a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;\n    var c = Od(a);\n    b = ta[b];\n\n    for (var d = 0; d < b.length; d++) {\n      var e = b[d];\n\n      if (!c.hasOwnProperty(e) || !c[e]) {\n        switch (e) {\n          case \"scroll\":\n            Kd(\"scroll\", a);\n            break;\n\n          case \"focus\":\n          case \"blur\":\n            Kd(\"focus\", a);\n            Kd(\"blur\", a);\n            c.blur = !0;\n            c.focus = !0;\n            break;\n\n          case \"cancel\":\n          case \"close\":\n            Sb(e) && Kd(e, a);\n            break;\n\n          case \"invalid\":\n          case \"submit\":\n          case \"reset\":\n            break;\n\n          default:\n            -1 === bb.indexOf(e) && H(e, a);\n        }\n\n        c[e] = !0;\n      }\n    }\n  }\n\n  function ye() {}\n\n  var ze = null,\n      Ae = null;\n\n  function Be(a, b) {\n    switch (a) {\n      case \"button\":\n      case \"input\":\n      case \"select\":\n      case \"textarea\":\n        return !!b.autoFocus;\n    }\n\n    return !1;\n  }\n\n  function Ce(a, b) {\n    return \"textarea\" === a || \"option\" === a || \"noscript\" === a || \"string\" === typeof b.children || \"number\" === typeof b.children || \"object\" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;\n  }\n\n  var De = \"function\" === typeof setTimeout ? setTimeout : void 0,\n      Ee = \"function\" === typeof clearTimeout ? clearTimeout : void 0;\n\n  function Fe(a, b, c, d, e) {\n    a[Ha] = e;\n    \"input\" === c && \"radio\" === e.type && null != e.name && Bc(a, e);\n    we(c, d);\n    d = we(c, e);\n\n    for (var f = 0; f < b.length; f += 2) {\n      var g = b[f],\n          h = b[f + 1];\n      \"style\" === g ? te(a, h) : \"dangerouslySetInnerHTML\" === g ? oe(a, h) : \"children\" === g ? pe(a, h) : xc(a, g, h, d);\n    }\n\n    switch (c) {\n      case \"input\":\n        Cc(a, e);\n        break;\n\n      case \"textarea\":\n        ie(a, e);\n        break;\n\n      case \"select\":\n        b = a._wrapperState.wasMultiple, a._wrapperState.wasMultiple = !!e.multiple, c = e.value, null != c ? fe(a, !!e.multiple, c, !1) : b !== !!e.multiple && (null != e.defaultValue ? fe(a, !!e.multiple, e.defaultValue, !0) : fe(a, !!e.multiple, e.multiple ? [] : \"\", !1));\n    }\n  }\n\n  function Ge(a) {\n    for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n      a = a.nextSibling;\n    }\n\n    return a;\n  }\n\n  function He(a) {\n    for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n      a = a.nextSibling;\n    }\n\n    return a;\n  }\n\n  new Set();\n  var Ie = [],\n      Je = -1;\n\n  function I(a) {\n    0 > Je || (a.current = Ie[Je], Ie[Je] = null, Je--);\n  }\n\n  function J(a, b) {\n    Je++;\n    Ie[Je] = a.current;\n    a.current = b;\n  }\n\n  var Ke = {},\n      K = {\n    current: Ke\n  },\n      L = {\n    current: !1\n  },\n      Le = Ke;\n\n  function Me(a, b) {\n    var c = a.type.contextTypes;\n    if (!c) return Ke;\n    var d = a.stateNode;\n    if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;\n    var e = {},\n        f;\n\n    for (f in c) {\n      e[f] = b[f];\n    }\n\n    d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);\n    return e;\n  }\n\n  function M(a) {\n    a = a.childContextTypes;\n    return null !== a && void 0 !== a;\n  }\n\n  function Ne(a) {\n    I(L, a);\n    I(K, a);\n  }\n\n  function Oe(a) {\n    I(L, a);\n    I(K, a);\n  }\n\n  function Pe(a, b, c) {\n    K.current !== Ke ? t(\"168\") : void 0;\n    J(K, b, a);\n    J(L, c, a);\n  }\n\n  function Qe(a, b, c) {\n    var d = a.stateNode;\n    a = b.childContextTypes;\n    if (\"function\" !== typeof d.getChildContext) return c;\n    d = d.getChildContext();\n\n    for (var e in d) {\n      e in a ? void 0 : t(\"108\", mc(b) || \"Unknown\", e);\n    }\n\n    return n({}, c, d);\n  }\n\n  function Re(a) {\n    var b = a.stateNode;\n    b = b && b.__reactInternalMemoizedMergedChildContext || Ke;\n    Le = K.current;\n    J(K, b, a);\n    J(L, L.current, a);\n    return !0;\n  }\n\n  function Se(a, b, c) {\n    var d = a.stateNode;\n    d ? void 0 : t(\"169\");\n    c ? (b = Qe(a, b, Le), d.__reactInternalMemoizedMergedChildContext = b, I(L, a), I(K, a), J(K, b, a)) : I(L, a);\n    J(L, c, a);\n  }\n\n  var Te = null,\n      Ue = null;\n\n  function Ve(a) {\n    return function (b) {\n      try {\n        return a(b);\n      } catch (c) {}\n    };\n  }\n\n  function We(a) {\n    if (\"undefined\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;\n    var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n    if (b.isDisabled || !b.supportsFiber) return !0;\n\n    try {\n      var c = b.inject(a);\n      Te = Ve(function (a) {\n        return b.onCommitFiberRoot(c, a);\n      });\n      Ue = Ve(function (a) {\n        return b.onCommitFiberUnmount(c, a);\n      });\n    } catch (d) {}\n\n    return !0;\n  }\n\n  function Xe(a, b, c, d) {\n    this.tag = a;\n    this.key = c;\n    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;\n    this.index = 0;\n    this.ref = null;\n    this.pendingProps = b;\n    this.firstContextDependency = this.memoizedState = this.updateQueue = this.memoizedProps = null;\n    this.mode = d;\n    this.effectTag = 0;\n    this.lastEffect = this.firstEffect = this.nextEffect = null;\n    this.childExpirationTime = this.expirationTime = 0;\n    this.alternate = null;\n  }\n\n  function N(a, b, c, d) {\n    return new Xe(a, b, c, d);\n  }\n\n  function Ye(a) {\n    a = a.prototype;\n    return !(!a || !a.isReactComponent);\n  }\n\n  function Ze(a) {\n    if (\"function\" === typeof a) return Ye(a) ? 1 : 0;\n\n    if (void 0 !== a && null !== a) {\n      a = a.$$typeof;\n      if (a === gc) return 11;\n      if (a === ic) return 14;\n    }\n\n    return 2;\n  }\n\n  function $e(a, b) {\n    var c = a.alternate;\n    null === c ? (c = N(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.effectTag = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);\n    c.childExpirationTime = a.childExpirationTime;\n    c.expirationTime = a.expirationTime;\n    c.child = a.child;\n    c.memoizedProps = a.memoizedProps;\n    c.memoizedState = a.memoizedState;\n    c.updateQueue = a.updateQueue;\n    c.firstContextDependency = a.firstContextDependency;\n    c.sibling = a.sibling;\n    c.index = a.index;\n    c.ref = a.ref;\n    return c;\n  }\n\n  function af(a, b, c, d, e, f) {\n    var g = 2;\n    d = a;\n    if (\"function\" === typeof a) Ye(a) && (g = 1);else if (\"string\" === typeof a) g = 5;else a: switch (a) {\n      case ac:\n        return bf(c.children, e, f, b);\n\n      case fc:\n        return cf(c, e | 3, f, b);\n\n      case bc:\n        return cf(c, e | 2, f, b);\n\n      case cc:\n        return a = N(12, c, b, e | 4), a.elementType = cc, a.type = cc, a.expirationTime = f, a;\n\n      case hc:\n        return a = N(13, c, b, e), a.elementType = hc, a.type = hc, a.expirationTime = f, a;\n\n      default:\n        if (\"object\" === typeof a && null !== a) switch (a.$$typeof) {\n          case dc:\n            g = 10;\n            break a;\n\n          case ec:\n            g = 9;\n            break a;\n\n          case gc:\n            g = 11;\n            break a;\n\n          case ic:\n            g = 14;\n            break a;\n\n          case jc:\n            g = 16;\n            d = null;\n            break a;\n        }\n        t(\"130\", null == a ? a : typeof a, \"\");\n    }\n    b = N(g, c, b, e);\n    b.elementType = a;\n    b.type = d;\n    b.expirationTime = f;\n    return b;\n  }\n\n  function bf(a, b, c, d) {\n    a = N(7, a, d, b);\n    a.expirationTime = c;\n    return a;\n  }\n\n  function cf(a, b, c, d) {\n    a = N(8, a, d, b);\n    b = 0 === (b & 1) ? bc : fc;\n    a.elementType = b;\n    a.type = b;\n    a.expirationTime = c;\n    return a;\n  }\n\n  function df(a, b, c) {\n    a = N(6, a, null, b);\n    a.expirationTime = c;\n    return a;\n  }\n\n  function ef(a, b, c) {\n    b = N(4, null !== a.children ? a.children : [], a.key, b);\n    b.expirationTime = c;\n    b.stateNode = {\n      containerInfo: a.containerInfo,\n      pendingChildren: null,\n      implementation: a.implementation\n    };\n    return b;\n  }\n\n  function ff(a, b) {\n    a.didError = !1;\n    var c = a.earliestPendingTime;\n    0 === c ? a.earliestPendingTime = a.latestPendingTime = b : c < b ? a.earliestPendingTime = b : a.latestPendingTime > b && (a.latestPendingTime = b);\n    gf(b, a);\n  }\n\n  function hf(a, b) {\n    a.didError = !1;\n    a.latestPingedTime >= b && (a.latestPingedTime = 0);\n    var c = a.earliestPendingTime,\n        d = a.latestPendingTime;\n    c === b ? a.earliestPendingTime = d === b ? a.latestPendingTime = 0 : d : d === b && (a.latestPendingTime = c);\n    c = a.earliestSuspendedTime;\n    d = a.latestSuspendedTime;\n    0 === c ? a.earliestSuspendedTime = a.latestSuspendedTime = b : c < b ? a.earliestSuspendedTime = b : d > b && (a.latestSuspendedTime = b);\n    gf(b, a);\n  }\n\n  function jf(a, b) {\n    var c = a.earliestPendingTime;\n    a = a.earliestSuspendedTime;\n    c > b && (b = c);\n    a > b && (b = a);\n    return b;\n  }\n\n  function gf(a, b) {\n    var c = b.earliestSuspendedTime,\n        d = b.latestSuspendedTime,\n        e = b.earliestPendingTime,\n        f = b.latestPingedTime;\n    e = 0 !== e ? e : f;\n    0 === e && (0 === a || d < a) && (e = d);\n    a = e;\n    0 !== a && c > a && (a = c);\n    b.nextExpirationTimeToWorkOn = e;\n    b.expirationTime = a;\n  }\n\n  var kf = !1;\n\n  function lf(a) {\n    return {\n      baseState: a,\n      firstUpdate: null,\n      lastUpdate: null,\n      firstCapturedUpdate: null,\n      lastCapturedUpdate: null,\n      firstEffect: null,\n      lastEffect: null,\n      firstCapturedEffect: null,\n      lastCapturedEffect: null\n    };\n  }\n\n  function mf(a) {\n    return {\n      baseState: a.baseState,\n      firstUpdate: a.firstUpdate,\n      lastUpdate: a.lastUpdate,\n      firstCapturedUpdate: null,\n      lastCapturedUpdate: null,\n      firstEffect: null,\n      lastEffect: null,\n      firstCapturedEffect: null,\n      lastCapturedEffect: null\n    };\n  }\n\n  function nf(a) {\n    return {\n      expirationTime: a,\n      tag: 0,\n      payload: null,\n      callback: null,\n      next: null,\n      nextEffect: null\n    };\n  }\n\n  function of(a, b) {\n    null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, a.lastUpdate = b);\n  }\n\n  function pf(a, b) {\n    var c = a.alternate;\n\n    if (null === c) {\n      var d = a.updateQueue;\n      var e = null;\n      null === d && (d = a.updateQueue = lf(a.memoizedState));\n    } else d = a.updateQueue, e = c.updateQueue, null === d ? null === e ? (d = a.updateQueue = lf(a.memoizedState), e = c.updateQueue = lf(c.memoizedState)) : d = a.updateQueue = mf(e) : null === e && (e = c.updateQueue = mf(d));\n\n    null === e || d === e ? of(d, b) : null === d.lastUpdate || null === e.lastUpdate ? (of(d, b), of(e, b)) : (of(d, b), e.lastUpdate = b);\n  }\n\n  function qf(a, b) {\n    var c = a.updateQueue;\n    c = null === c ? a.updateQueue = lf(a.memoizedState) : rf(a, c);\n    null === c.lastCapturedUpdate ? c.firstCapturedUpdate = c.lastCapturedUpdate = b : (c.lastCapturedUpdate.next = b, c.lastCapturedUpdate = b);\n  }\n\n  function rf(a, b) {\n    var c = a.alternate;\n    null !== c && b === c.updateQueue && (b = a.updateQueue = mf(b));\n    return b;\n  }\n\n  function sf(a, b, c, d, e, f) {\n    switch (c.tag) {\n      case 1:\n        return a = c.payload, \"function\" === typeof a ? a.call(f, d, e) : a;\n\n      case 3:\n        a.effectTag = a.effectTag & -2049 | 64;\n\n      case 0:\n        a = c.payload;\n        e = \"function\" === typeof a ? a.call(f, d, e) : a;\n        if (null === e || void 0 === e) break;\n        return n({}, d, e);\n\n      case 2:\n        kf = !0;\n    }\n\n    return d;\n  }\n\n  function tf(a, b, c, d, e) {\n    kf = !1;\n    b = rf(a, b);\n\n    for (var f = b.baseState, g = null, h = 0, k = b.firstUpdate, l = f; null !== k;) {\n      var m = k.expirationTime;\n      m < e ? (null === g && (g = k, f = l), h < m && (h = m)) : (l = sf(a, b, k, l, c, d), null !== k.callback && (a.effectTag |= 32, k.nextEffect = null, null === b.lastEffect ? b.firstEffect = b.lastEffect = k : (b.lastEffect.nextEffect = k, b.lastEffect = k)));\n      k = k.next;\n    }\n\n    m = null;\n\n    for (k = b.firstCapturedUpdate; null !== k;) {\n      var r = k.expirationTime;\n      r < e ? (null === m && (m = k, null === g && (f = l)), h < r && (h = r)) : (l = sf(a, b, k, l, c, d), null !== k.callback && (a.effectTag |= 32, k.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = k : (b.lastCapturedEffect.nextEffect = k, b.lastCapturedEffect = k)));\n      k = k.next;\n    }\n\n    null === g && (b.lastUpdate = null);\n    null === m ? b.lastCapturedUpdate = null : a.effectTag |= 32;\n    null === g && null === m && (f = l);\n    b.baseState = f;\n    b.firstUpdate = g;\n    b.firstCapturedUpdate = m;\n    a.expirationTime = h;\n    a.memoizedState = l;\n  }\n\n  function uf(a, b, c) {\n    null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null);\n    vf(b.firstEffect, c);\n    b.firstEffect = b.lastEffect = null;\n    vf(b.firstCapturedEffect, c);\n    b.firstCapturedEffect = b.lastCapturedEffect = null;\n  }\n\n  function vf(a, b) {\n    for (; null !== a;) {\n      var c = a.callback;\n\n      if (null !== c) {\n        a.callback = null;\n        var d = b;\n        \"function\" !== typeof c ? t(\"191\", c) : void 0;\n        c.call(d);\n      }\n\n      a = a.nextEffect;\n    }\n  }\n\n  function wf(a, b) {\n    return {\n      value: a,\n      source: b,\n      stack: nc(b)\n    };\n  }\n\n  var xf = {\n    current: null\n  },\n      yf = null,\n      zf = null,\n      Af = null;\n\n  function Bf(a, b) {\n    var c = a.type._context;\n    J(xf, c._currentValue, a);\n    c._currentValue = b;\n  }\n\n  function Cf(a) {\n    var b = xf.current;\n    I(xf, a);\n    a.type._context._currentValue = b;\n  }\n\n  function Df(a) {\n    yf = a;\n    Af = zf = null;\n    a.firstContextDependency = null;\n  }\n\n  function Ef(a, b) {\n    if (Af !== a && !1 !== b && 0 !== b) {\n      if (\"number\" !== typeof b || 1073741823 === b) Af = a, b = 1073741823;\n      b = {\n        context: a,\n        observedBits: b,\n        next: null\n      };\n      null === zf ? (null === yf ? t(\"293\") : void 0, yf.firstContextDependency = zf = b) : zf = zf.next = b;\n    }\n\n    return a._currentValue;\n  }\n\n  var Ff = {},\n      O = {\n    current: Ff\n  },\n      Gf = {\n    current: Ff\n  },\n      Hf = {\n    current: Ff\n  };\n\n  function If(a) {\n    a === Ff ? t(\"174\") : void 0;\n    return a;\n  }\n\n  function Jf(a, b) {\n    J(Hf, b, a);\n    J(Gf, a, a);\n    J(O, Ff, a);\n    var c = b.nodeType;\n\n    switch (c) {\n      case 9:\n      case 11:\n        b = (b = b.documentElement) ? b.namespaceURI : me(null, \"\");\n        break;\n\n      default:\n        c = 8 === c ? b.parentNode : b, b = c.namespaceURI || null, c = c.tagName, b = me(b, c);\n    }\n\n    I(O, a);\n    J(O, b, a);\n  }\n\n  function Kf(a) {\n    I(O, a);\n    I(Gf, a);\n    I(Hf, a);\n  }\n\n  function Lf(a) {\n    If(Hf.current);\n    var b = If(O.current);\n    var c = me(b, a.type);\n    b !== c && (J(Gf, a, a), J(O, c, a));\n  }\n\n  function Mf(a) {\n    Gf.current === a && (I(O, a), I(Gf, a));\n  }\n\n  function P(a, b) {\n    if (a && a.defaultProps) {\n      b = n({}, b);\n      a = a.defaultProps;\n\n      for (var c in a) {\n        void 0 === b[c] && (b[c] = a[c]);\n      }\n    }\n\n    return b;\n  }\n\n  function Nf(a) {\n    var b = a._result;\n\n    switch (a._status) {\n      case 1:\n        return b;\n\n      case 2:\n        throw b;\n\n      case 0:\n        throw b;\n\n      default:\n        throw a._status = 0, b = a._ctor, b = b(), b.then(function (b) {\n          0 === a._status && (b = b.default, a._status = 1, a._result = b);\n        }, function (b) {\n          0 === a._status && (a._status = 2, a._result = b);\n        }), a._result = b, b;\n    }\n  }\n\n  var Of = Xb.ReactCurrentOwner,\n      Pf = new aa.Component().refs;\n\n  function Qf(a, b, c, d) {\n    b = a.memoizedState;\n    c = c(d, b);\n    c = null === c || void 0 === c ? b : n({}, b, c);\n    a.memoizedState = c;\n    d = a.updateQueue;\n    null !== d && 0 === a.expirationTime && (d.baseState = c);\n  }\n\n  var Vf = {\n    isMounted: function isMounted(a) {\n      return (a = a._reactInternalFiber) ? 2 === kd(a) : !1;\n    },\n    enqueueSetState: function enqueueSetState(a, b, c) {\n      a = a._reactInternalFiber;\n      var d = Rf();\n      d = Sf(d, a);\n      var e = nf(d);\n      e.payload = b;\n      void 0 !== c && null !== c && (e.callback = c);\n      Tf();\n      pf(a, e);\n      Uf(a, d);\n    },\n    enqueueReplaceState: function enqueueReplaceState(a, b, c) {\n      a = a._reactInternalFiber;\n      var d = Rf();\n      d = Sf(d, a);\n      var e = nf(d);\n      e.tag = 1;\n      e.payload = b;\n      void 0 !== c && null !== c && (e.callback = c);\n      Tf();\n      pf(a, e);\n      Uf(a, d);\n    },\n    enqueueForceUpdate: function enqueueForceUpdate(a, b) {\n      a = a._reactInternalFiber;\n      var c = Rf();\n      c = Sf(c, a);\n      var d = nf(c);\n      d.tag = 2;\n      void 0 !== b && null !== b && (d.callback = b);\n      Tf();\n      pf(a, d);\n      Uf(a, c);\n    }\n  };\n\n  function Wf(a, b, c, d, e, f, g) {\n    a = a.stateNode;\n    return \"function\" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !jd(c, d) || !jd(e, f) : !0;\n  }\n\n  function Xf(a, b, c) {\n    var d = !1,\n        e = Ke;\n    var f = b.contextType;\n    \"object\" === typeof f && null !== f ? f = Of.currentDispatcher.readContext(f) : (e = M(b) ? Le : K.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Me(a, e) : Ke);\n    b = new b(c, f);\n    a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;\n    b.updater = Vf;\n    a.stateNode = b;\n    b._reactInternalFiber = a;\n    d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);\n    return b;\n  }\n\n  function Zf(a, b, c, d) {\n    a = b.state;\n    \"function\" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);\n    \"function\" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);\n    b.state !== a && Vf.enqueueReplaceState(b, b.state, null);\n  }\n\n  function $f(a, b, c, d) {\n    var e = a.stateNode;\n    e.props = c;\n    e.state = a.memoizedState;\n    e.refs = Pf;\n    var f = b.contextType;\n    \"object\" === typeof f && null !== f ? e.context = Of.currentDispatcher.readContext(f) : (f = M(b) ? Le : K.current, e.context = Me(a, f));\n    f = a.updateQueue;\n    null !== f && (tf(a, f, c, e, d), e.state = a.memoizedState);\n    f = b.getDerivedStateFromProps;\n    \"function\" === typeof f && (Qf(a, b, f, c), e.state = a.memoizedState);\n    \"function\" === typeof b.getDerivedStateFromProps || \"function\" === typeof e.getSnapshotBeforeUpdate || \"function\" !== typeof e.UNSAFE_componentWillMount && \"function\" !== typeof e.componentWillMount || (b = e.state, \"function\" === typeof e.componentWillMount && e.componentWillMount(), \"function\" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && Vf.enqueueReplaceState(e, e.state, null), f = a.updateQueue, null !== f && (tf(a, f, c, e, d), e.state = a.memoizedState));\n    \"function\" === typeof e.componentDidMount && (a.effectTag |= 4);\n  }\n\n  var ag = Array.isArray;\n\n  function bg(a, b, c) {\n    a = c.ref;\n\n    if (null !== a && \"function\" !== typeof a && \"object\" !== typeof a) {\n      if (c._owner) {\n        c = c._owner;\n        var d = void 0;\n        c && (1 !== c.tag ? t(\"289\") : void 0, d = c.stateNode);\n        d ? void 0 : t(\"147\", a);\n        var e = \"\" + a;\n        if (null !== b && null !== b.ref && \"function\" === typeof b.ref && b.ref._stringRef === e) return b.ref;\n\n        b = function b(a) {\n          var b = d.refs;\n          b === Pf && (b = d.refs = {});\n          null === a ? delete b[e] : b[e] = a;\n        };\n\n        b._stringRef = e;\n        return b;\n      }\n\n      \"string\" !== typeof a ? t(\"284\") : void 0;\n      c._owner ? void 0 : t(\"290\", a);\n    }\n\n    return a;\n  }\n\n  function cg(a, b) {\n    \"textarea\" !== a.type && t(\"31\", \"[object Object]\" === Object.prototype.toString.call(b) ? \"object with keys {\" + Object.keys(b).join(\", \") + \"}\" : b, \"\");\n  }\n\n  function dg(a) {\n    function b(b, c) {\n      if (a) {\n        var d = b.lastEffect;\n        null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;\n        c.nextEffect = null;\n        c.effectTag = 8;\n      }\n    }\n\n    function c(c, d) {\n      if (!a) return null;\n\n      for (; null !== d;) {\n        b(c, d), d = d.sibling;\n      }\n\n      return null;\n    }\n\n    function d(a, b) {\n      for (a = new Map(); null !== b;) {\n        null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;\n      }\n\n      return a;\n    }\n\n    function e(a, b, c) {\n      a = $e(a, b, c);\n      a.index = 0;\n      a.sibling = null;\n      return a;\n    }\n\n    function f(b, c, d) {\n      b.index = d;\n      if (!a) return c;\n      d = b.alternate;\n      if (null !== d) return d = d.index, d < c ? (b.effectTag = 2, c) : d;\n      b.effectTag = 2;\n      return c;\n    }\n\n    function g(b) {\n      a && null === b.alternate && (b.effectTag = 2);\n      return b;\n    }\n\n    function h(a, b, c, d) {\n      if (null === b || 6 !== b.tag) return b = df(c, a.mode, d), b.return = a, b;\n      b = e(b, c, d);\n      b.return = a;\n      return b;\n    }\n\n    function k(a, b, c, d) {\n      if (null !== b && b.elementType === c.type) return d = e(b, c.props, d), d.ref = bg(a, b, c), d.return = a, d;\n      d = af(c.type, c.key, c.props, null, a.mode, d);\n      d.ref = bg(a, b, c);\n      d.return = a;\n      return d;\n    }\n\n    function l(a, b, c, d) {\n      if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = ef(c, a.mode, d), b.return = a, b;\n      b = e(b, c.children || [], d);\n      b.return = a;\n      return b;\n    }\n\n    function m(a, b, c, d, g) {\n      if (null === b || 7 !== b.tag) return b = bf(c, a.mode, d, g), b.return = a, b;\n      b = e(b, c, d);\n      b.return = a;\n      return b;\n    }\n\n    function r(a, b, c) {\n      if (\"string\" === typeof b || \"number\" === typeof b) return b = df(\"\" + b, a.mode, c), b.return = a, b;\n\n      if (\"object\" === typeof b && null !== b) {\n        switch (b.$$typeof) {\n          case Zb:\n            return c = af(b.type, b.key, b.props, null, a.mode, c), c.ref = bg(a, null, b), c.return = a, c;\n\n          case $b:\n            return b = ef(b, a.mode, c), b.return = a, b;\n        }\n\n        if (ag(b) || lc(b)) return b = bf(b, a.mode, c, null), b.return = a, b;\n        cg(a, b);\n      }\n\n      return null;\n    }\n\n    function w(a, b, c, d) {\n      var e = null !== b ? b.key : null;\n      if (\"string\" === typeof c || \"number\" === typeof c) return null !== e ? null : h(a, b, \"\" + c, d);\n\n      if (\"object\" === typeof c && null !== c) {\n        switch (c.$$typeof) {\n          case Zb:\n            return c.key === e ? c.type === ac ? m(a, b, c.props.children, d, e) : k(a, b, c, d) : null;\n\n          case $b:\n            return c.key === e ? l(a, b, c, d) : null;\n        }\n\n        if (ag(c) || lc(c)) return null !== e ? null : m(a, b, c, d, null);\n        cg(a, c);\n      }\n\n      return null;\n    }\n\n    function y(a, b, c, d, e) {\n      if (\"string\" === typeof d || \"number\" === typeof d) return a = a.get(c) || null, h(b, a, \"\" + d, e);\n\n      if (\"object\" === typeof d && null !== d) {\n        switch (d.$$typeof) {\n          case Zb:\n            return a = a.get(null === d.key ? c : d.key) || null, d.type === ac ? m(b, a, d.props.children, e, d.key) : k(b, a, d, e);\n\n          case $b:\n            return a = a.get(null === d.key ? c : d.key) || null, l(b, a, d, e);\n        }\n\n        if (ag(d) || lc(d)) return a = a.get(c) || null, m(b, a, d, e, null);\n        cg(b, d);\n      }\n\n      return null;\n    }\n\n    function B(e, g, h, k) {\n      for (var l = null, q = null, m = g, u = g = 0, p = null; null !== m && u < h.length; u++) {\n        m.index > u ? (p = m, m = null) : p = m.sibling;\n        var v = w(e, m, h[u], k);\n\n        if (null === v) {\n          null === m && (m = p);\n          break;\n        }\n\n        a && m && null === v.alternate && b(e, m);\n        g = f(v, g, u);\n        null === q ? l = v : q.sibling = v;\n        q = v;\n        m = p;\n      }\n\n      if (u === h.length) return c(e, m), l;\n\n      if (null === m) {\n        for (; u < h.length; u++) {\n          if (m = r(e, h[u], k)) g = f(m, g, u), null === q ? l = m : q.sibling = m, q = m;\n        }\n\n        return l;\n      }\n\n      for (m = d(e, m); u < h.length; u++) {\n        if (p = y(m, e, u, h[u], k)) a && null !== p.alternate && m.delete(null === p.key ? u : p.key), g = f(p, g, u), null === q ? l = p : q.sibling = p, q = p;\n      }\n\n      a && m.forEach(function (a) {\n        return b(e, a);\n      });\n      return l;\n    }\n\n    function R(e, g, h, k) {\n      var l = lc(h);\n      \"function\" !== typeof l ? t(\"150\") : void 0;\n      h = l.call(h);\n      null == h ? t(\"151\") : void 0;\n\n      for (var m = l = null, q = g, u = g = 0, p = null, v = h.next(); null !== q && !v.done; u++, v = h.next()) {\n        q.index > u ? (p = q, q = null) : p = q.sibling;\n        var A = w(e, q, v.value, k);\n\n        if (null === A) {\n          q || (q = p);\n          break;\n        }\n\n        a && q && null === A.alternate && b(e, q);\n        g = f(A, g, u);\n        null === m ? l = A : m.sibling = A;\n        m = A;\n        q = p;\n      }\n\n      if (v.done) return c(e, q), l;\n\n      if (null === q) {\n        for (; !v.done; u++, v = h.next()) {\n          v = r(e, v.value, k), null !== v && (g = f(v, g, u), null === m ? l = v : m.sibling = v, m = v);\n        }\n\n        return l;\n      }\n\n      for (q = d(e, q); !v.done; u++, v = h.next()) {\n        v = y(q, e, u, v.value, k), null !== v && (a && null !== v.alternate && q.delete(null === v.key ? u : v.key), g = f(v, g, u), null === m ? l = v : m.sibling = v, m = v);\n      }\n\n      a && q.forEach(function (a) {\n        return b(e, a);\n      });\n      return l;\n    }\n\n    return function (a, d, f, h) {\n      var k = \"object\" === typeof f && null !== f && f.type === ac && null === f.key;\n      k && (f = f.props.children);\n      var l = \"object\" === typeof f && null !== f;\n      if (l) switch (f.$$typeof) {\n        case Zb:\n          a: {\n            l = f.key;\n\n            for (k = d; null !== k;) {\n              if (k.key === l) {\n                if (7 === k.tag ? f.type === ac : k.elementType === f.type) {\n                  c(a, k.sibling);\n                  d = e(k, f.type === ac ? f.props.children : f.props, h);\n                  d.ref = bg(a, k, f);\n                  d.return = a;\n                  a = d;\n                  break a;\n                } else {\n                  c(a, k);\n                  break;\n                }\n              } else b(a, k);\n              k = k.sibling;\n            }\n\n            f.type === ac ? (d = bf(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = af(f.type, f.key, f.props, null, a.mode, h), h.ref = bg(a, d, f), h.return = a, a = h);\n          }\n\n          return g(a);\n\n        case $b:\n          a: {\n            for (k = f.key; null !== d;) {\n              if (d.key === k) {\n                if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {\n                  c(a, d.sibling);\n                  d = e(d, f.children || [], h);\n                  d.return = a;\n                  a = d;\n                  break a;\n                } else {\n                  c(a, d);\n                  break;\n                }\n              } else b(a, d);\n              d = d.sibling;\n            }\n\n            d = ef(f, a.mode, h);\n            d.return = a;\n            a = d;\n          }\n\n          return g(a);\n      }\n      if (\"string\" === typeof f || \"number\" === typeof f) return f = \"\" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f, h), d.return = a, a = d) : (c(a, d), d = df(f, a.mode, h), d.return = a, a = d), g(a);\n      if (ag(f)) return B(a, d, f, h);\n      if (lc(f)) return R(a, d, f, h);\n      l && cg(a, f);\n      if (\"undefined\" === typeof f && !k) switch (a.tag) {\n        case 1:\n        case 0:\n          h = a.type, t(\"152\", h.displayName || h.name || \"Component\");\n      }\n      return c(a, d);\n    };\n  }\n\n  var eg = dg(!0),\n      fg = dg(!1),\n      gg = null,\n      hg = null,\n      ig = !1;\n\n  function jg(a, b) {\n    var c = N(5, null, null, 0);\n    c.elementType = \"DELETED\";\n    c.type = \"DELETED\";\n    c.stateNode = b;\n    c.return = a;\n    c.effectTag = 8;\n    null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;\n  }\n\n  function kg(a, b) {\n    switch (a.tag) {\n      case 5:\n        var c = a.type;\n        b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;\n        return null !== b ? (a.stateNode = b, !0) : !1;\n\n      case 6:\n        return b = \"\" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;\n\n      default:\n        return !1;\n    }\n  }\n\n  function lg(a) {\n    if (ig) {\n      var b = hg;\n\n      if (b) {\n        var c = b;\n\n        if (!kg(a, b)) {\n          b = Ge(c);\n\n          if (!b || !kg(a, b)) {\n            a.effectTag |= 2;\n            ig = !1;\n            gg = a;\n            return;\n          }\n\n          jg(gg, c);\n        }\n\n        gg = a;\n        hg = He(b);\n      } else a.effectTag |= 2, ig = !1, gg = a;\n    }\n  }\n\n  function mg(a) {\n    for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag;) {\n      a = a.return;\n    }\n\n    gg = a;\n  }\n\n  function ng(a) {\n    if (a !== gg) return !1;\n    if (!ig) return mg(a), ig = !0, !1;\n    var b = a.type;\n    if (5 !== a.tag || \"head\" !== b && \"body\" !== b && !Ce(b, a.memoizedProps)) for (b = hg; b;) {\n      jg(a, b), b = Ge(b);\n    }\n    mg(a);\n    hg = gg ? Ge(a.stateNode) : null;\n    return !0;\n  }\n\n  function og() {\n    hg = gg = null;\n    ig = !1;\n  }\n\n  var pg = Xb.ReactCurrentOwner;\n\n  function Q(a, b, c, d) {\n    b.child = null === a ? fg(b, null, c, d) : eg(b, a.child, c, d);\n  }\n\n  function qg(a, b, c, d, e) {\n    c = c.render;\n    var f = b.ref;\n    Df(b, e);\n    d = c(d, f);\n    b.effectTag |= 1;\n    Q(a, b, d, e);\n    return b.child;\n  }\n\n  function rg(a, b, c, d, e, f) {\n    if (null === a) {\n      var g = c.type;\n      if (\"function\" === typeof g && !Ye(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = g, sg(a, b, g, d, e, f);\n      a = af(c.type, null, d, null, b.mode, f);\n      a.ref = b.ref;\n      a.return = b;\n      return b.child = a;\n    }\n\n    g = a.child;\n    if (e < f && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : jd, c(e, d) && a.ref === b.ref)) return tg(a, b, f);\n    b.effectTag |= 1;\n    a = $e(g, d, f);\n    a.ref = b.ref;\n    a.return = b;\n    return b.child = a;\n  }\n\n  function sg(a, b, c, d, e, f) {\n    return null !== a && e < f && jd(a.memoizedProps, d) && a.ref === b.ref ? tg(a, b, f) : ug(a, b, c, d, f);\n  }\n\n  function vg(a, b) {\n    var c = b.ref;\n    if (null === a && null !== c || null !== a && a.ref !== c) b.effectTag |= 128;\n  }\n\n  function ug(a, b, c, d, e) {\n    var f = M(c) ? Le : K.current;\n    f = Me(b, f);\n    Df(b, e);\n    c = c(d, f);\n    b.effectTag |= 1;\n    Q(a, b, c, e);\n    return b.child;\n  }\n\n  function wg(a, b, c, d, e) {\n    if (M(c)) {\n      var f = !0;\n      Re(b);\n    } else f = !1;\n\n    Df(b, e);\n    if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), Xf(b, c, d, e), $f(b, c, d, e), d = !0;else if (null === a) {\n      var g = b.stateNode,\n          h = b.memoizedProps;\n      g.props = h;\n      var k = g.context,\n          l = c.contextType;\n      \"object\" === typeof l && null !== l ? l = Of.currentDispatcher.readContext(l) : (l = M(c) ? Le : K.current, l = Me(b, l));\n      var m = c.getDerivedStateFromProps,\n          r = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate;\n      r || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && Zf(b, g, d, l);\n      kf = !1;\n      var w = b.memoizedState;\n      k = g.state = w;\n      var y = b.updateQueue;\n      null !== y && (tf(b, y, d, g, e), k = b.memoizedState);\n      h !== d || w !== k || L.current || kf ? (\"function\" === typeof m && (Qf(b, c, m, d), k = b.memoizedState), (h = kf || Wf(b, c, h, d, w, k, l)) ? (r || \"function\" !== typeof g.UNSAFE_componentWillMount && \"function\" !== typeof g.componentWillMount || (\"function\" === typeof g.componentWillMount && g.componentWillMount(), \"function\" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), \"function\" === typeof g.componentDidMount && (b.effectTag |= 4)) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), b.memoizedProps = d, b.memoizedState = k), g.props = d, g.state = k, g.context = l, d = h) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), d = !1);\n    } else g = b.stateNode, h = b.memoizedProps, g.props = b.type === b.elementType ? h : P(b.type, h), k = g.context, l = c.contextType, \"object\" === typeof l && null !== l ? l = Of.currentDispatcher.readContext(l) : (l = M(c) ? Le : K.current, l = Me(b, l)), m = c.getDerivedStateFromProps, (r = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate) || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && Zf(b, g, d, l), kf = !1, k = b.memoizedState, w = g.state = k, y = b.updateQueue, null !== y && (tf(b, y, d, g, e), w = b.memoizedState), h !== d || k !== w || L.current || kf ? (\"function\" === typeof m && (Qf(b, c, m, d), w = b.memoizedState), (m = kf || Wf(b, c, h, d, k, w, l)) ? (r || \"function\" !== typeof g.UNSAFE_componentWillUpdate && \"function\" !== typeof g.componentWillUpdate || (\"function\" === typeof g.componentWillUpdate && g.componentWillUpdate(d, w, l), \"function\" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, w, l)), \"function\" === typeof g.componentDidUpdate && (b.effectTag |= 4), \"function\" === typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = d, b.memoizedState = w), g.props = d, g.state = w, g.context = l, d = m) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 256), d = !1);\n    return xg(a, b, c, d, f, e);\n  }\n\n  function xg(a, b, c, d, e, f) {\n    vg(a, b);\n    var g = 0 !== (b.effectTag & 64);\n    if (!d && !g) return e && Se(b, c, !1), tg(a, b, f);\n    d = b.stateNode;\n    pg.current = b;\n    var h = g && \"function\" !== typeof c.getDerivedStateFromError ? null : d.render();\n    b.effectTag |= 1;\n    null !== a && g ? (b.child = eg(b, a.child, null, f), b.child = eg(b, null, h, f)) : Q(a, b, h, f);\n    b.memoizedState = d.state;\n    e && Se(b, c, !0);\n    return b.child;\n  }\n\n  function yg(a) {\n    var b = a.stateNode;\n    b.pendingContext ? Pe(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Pe(a, b.context, !1);\n    Jf(a, b.containerInfo);\n  }\n\n  function zg(a, b, c) {\n    var d = b.mode,\n        e = b.pendingProps,\n        f = b.memoizedState;\n\n    if (0 === (b.effectTag & 64)) {\n      f = null;\n      var g = !1;\n    } else f = {\n      timedOutAt: null !== f ? f.timedOutAt : 0\n    }, g = !0, b.effectTag &= -65;\n\n    if (null === a) {\n      if (g) {\n        var h = e.fallback;\n        a = bf(null, d, 0, null);\n        0 === (b.mode & 1) && (a.child = null !== b.memoizedState ? b.child.child : b.child);\n        d = bf(h, d, c, null);\n        a.sibling = d;\n        c = a;\n        c.return = d.return = b;\n      } else c = d = fg(b, null, e.children, c);\n    } else null !== a.memoizedState ? (d = a.child, h = d.sibling, g ? (c = e.fallback, e = $e(d, d.pendingProps, 0), 0 === (b.mode & 1) && (g = null !== b.memoizedState ? b.child.child : b.child, g !== d.child && (e.child = g)), d = e.sibling = $e(h, c, h.expirationTime), c = e, e.childExpirationTime = 0, c.return = d.return = b) : c = d = eg(b, d.child, e.children, c)) : (h = a.child, g ? (g = e.fallback, e = bf(null, d, 0, null), e.child = h, 0 === (b.mode & 1) && (e.child = null !== b.memoizedState ? b.child.child : b.child), d = e.sibling = bf(g, d, c, null), d.effectTag |= 2, c = e, e.childExpirationTime = 0, c.return = d.return = b) : d = c = eg(b, h, e.children, c)), b.stateNode = a.stateNode;\n    b.memoizedState = f;\n    b.child = c;\n    return d;\n  }\n\n  function tg(a, b, c) {\n    null !== a && (b.firstContextDependency = a.firstContextDependency);\n    if (b.childExpirationTime < c) return null;\n    null !== a && b.child !== a.child ? t(\"153\") : void 0;\n\n    if (null !== b.child) {\n      a = b.child;\n      c = $e(a, a.pendingProps, a.expirationTime);\n      b.child = c;\n\n      for (c.return = b; null !== a.sibling;) {\n        a = a.sibling, c = c.sibling = $e(a, a.pendingProps, a.expirationTime), c.return = b;\n      }\n\n      c.sibling = null;\n    }\n\n    return b.child;\n  }\n\n  function Ag(a, b, c) {\n    var d = b.expirationTime;\n\n    if (null !== a && a.memoizedProps === b.pendingProps && !L.current && d < c) {\n      switch (b.tag) {\n        case 3:\n          yg(b);\n          og();\n          break;\n\n        case 5:\n          Lf(b);\n          break;\n\n        case 1:\n          M(b.type) && Re(b);\n          break;\n\n        case 4:\n          Jf(b, b.stateNode.containerInfo);\n          break;\n\n        case 10:\n          Bf(b, b.memoizedProps.value);\n          break;\n\n        case 13:\n          if (null !== b.memoizedState) {\n            d = b.child.childExpirationTime;\n            if (0 !== d && d >= c) return zg(a, b, c);\n            b = tg(a, b, c);\n            return null !== b ? b.sibling : null;\n          }\n\n      }\n\n      return tg(a, b, c);\n    }\n\n    b.expirationTime = 0;\n\n    switch (b.tag) {\n      case 2:\n        d = b.elementType;\n        null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n        a = b.pendingProps;\n        var e = Me(b, K.current);\n        Df(b, c);\n        e = d(a, e);\n        b.effectTag |= 1;\n\n        if (\"object\" === typeof e && null !== e && \"function\" === typeof e.render && void 0 === e.$$typeof) {\n          b.tag = 1;\n\n          if (M(d)) {\n            var f = !0;\n            Re(b);\n          } else f = !1;\n\n          b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;\n          var g = d.getDerivedStateFromProps;\n          \"function\" === typeof g && Qf(b, d, g, a);\n          e.updater = Vf;\n          b.stateNode = e;\n          e._reactInternalFiber = b;\n          $f(b, d, a, c);\n          b = xg(null, b, d, !0, f, c);\n        } else b.tag = 0, Q(null, b, e, c), b = b.child;\n\n        return b;\n\n      case 16:\n        e = b.elementType;\n        null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n        f = b.pendingProps;\n        a = Nf(e);\n        b.type = a;\n        e = b.tag = Ze(a);\n        f = P(a, f);\n        g = void 0;\n\n        switch (e) {\n          case 0:\n            g = ug(null, b, a, f, c);\n            break;\n\n          case 1:\n            g = wg(null, b, a, f, c);\n            break;\n\n          case 11:\n            g = qg(null, b, a, f, c);\n            break;\n\n          case 14:\n            g = rg(null, b, a, P(a.type, f), d, c);\n            break;\n\n          default:\n            t(\"306\", a, \"\");\n        }\n\n        return g;\n\n      case 0:\n        return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), ug(a, b, d, e, c);\n\n      case 1:\n        return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), wg(a, b, d, e, c);\n\n      case 3:\n        yg(b);\n        d = b.updateQueue;\n        null === d ? t(\"282\") : void 0;\n        e = b.memoizedState;\n        e = null !== e ? e.element : null;\n        tf(b, d, b.pendingProps, null, c);\n        d = b.memoizedState.element;\n        if (d === e) og(), b = tg(a, b, c);else {\n          e = b.stateNode;\n          if (e = (null === a || null === a.child) && e.hydrate) hg = He(b.stateNode.containerInfo), gg = b, e = ig = !0;\n          e ? (b.effectTag |= 2, b.child = fg(b, null, d, c)) : (Q(a, b, d, c), og());\n          b = b.child;\n        }\n        return b;\n\n      case 5:\n        return Lf(b), null === a && lg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, Ce(d, e) ? g = null : null !== f && Ce(d, f) && (b.effectTag |= 16), vg(a, b), 1 !== c && b.mode & 1 && e.hidden ? (b.expirationTime = 1, b = null) : (Q(a, b, g, c), b = b.child), b;\n\n      case 6:\n        return null === a && lg(b), null;\n\n      case 13:\n        return zg(a, b, c);\n\n      case 4:\n        return Jf(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = eg(b, null, d, c) : Q(a, b, d, c), b.child;\n\n      case 11:\n        return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), qg(a, b, d, e, c);\n\n      case 7:\n        return Q(a, b, b.pendingProps, c), b.child;\n\n      case 8:\n        return Q(a, b, b.pendingProps.children, c), b.child;\n\n      case 12:\n        return Q(a, b, b.pendingProps.children, c), b.child;\n\n      case 10:\n        a: {\n          d = b.type._context;\n          e = b.pendingProps;\n          g = b.memoizedProps;\n          f = e.value;\n          Bf(b, f);\n\n          if (null !== g) {\n            var h = g.value;\n            f = h === f && (0 !== h || 1 / h === 1 / f) || h !== h && f !== f ? 0 : (\"function\" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0;\n\n            if (0 === f) {\n              if (g.children === e.children && !L.current) {\n                b = tg(a, b, c);\n                break a;\n              }\n            } else for (g = b.child, null !== g && (g.return = b); null !== g;) {\n              h = g.firstContextDependency;\n\n              if (null !== h) {\n                do {\n                  if (h.context === d && 0 !== (h.observedBits & f)) {\n                    if (1 === g.tag) {\n                      var k = nf(c);\n                      k.tag = 2;\n                      pf(g, k);\n                    }\n\n                    g.expirationTime < c && (g.expirationTime = c);\n                    k = g.alternate;\n                    null !== k && k.expirationTime < c && (k.expirationTime = c);\n\n                    for (var l = g.return; null !== l;) {\n                      k = l.alternate;\n                      if (l.childExpirationTime < c) l.childExpirationTime = c, null !== k && k.childExpirationTime < c && (k.childExpirationTime = c);else if (null !== k && k.childExpirationTime < c) k.childExpirationTime = c;else break;\n                      l = l.return;\n                    }\n                  }\n\n                  k = g.child;\n                  h = h.next;\n                } while (null !== h);\n              } else k = 10 === g.tag ? g.type === b.type ? null : g.child : g.child;\n\n              if (null !== k) k.return = g;else for (k = g; null !== k;) {\n                if (k === b) {\n                  k = null;\n                  break;\n                }\n\n                g = k.sibling;\n\n                if (null !== g) {\n                  g.return = k.return;\n                  k = g;\n                  break;\n                }\n\n                k = k.return;\n              }\n              g = k;\n            }\n          }\n\n          Q(a, b, e.children, c);\n          b = b.child;\n        }\n\n        return b;\n\n      case 9:\n        return e = b.type, f = b.pendingProps, d = f.children, Df(b, c), e = Ef(e, f.unstable_observedBits), d = d(e), b.effectTag |= 1, Q(a, b, d, c), b.child;\n\n      case 14:\n        return e = b.type, f = P(e, b.pendingProps), f = P(e.type, f), rg(a, b, e, f, d, c);\n\n      case 15:\n        return sg(a, b, b.type, b.pendingProps, d, c);\n\n      case 17:\n        return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), b.tag = 1, M(d) ? (a = !0, Re(b)) : a = !1, Df(b, c), Xf(b, d, e, c), $f(b, d, e, c), xg(null, b, d, !0, a, c);\n\n      default:\n        t(\"156\");\n    }\n  }\n\n  function Bg(a) {\n    a.effectTag |= 4;\n  }\n\n  var Cg = void 0,\n      Gg = void 0,\n      Hg = void 0,\n      Ig = void 0;\n\n  Cg = function Cg(a, b) {\n    for (var c = b.child; null !== c;) {\n      if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {\n        c.child.return = c;\n        c = c.child;\n        continue;\n      }\n      if (c === b) break;\n\n      for (; null === c.sibling;) {\n        if (null === c.return || c.return === b) return;\n        c = c.return;\n      }\n\n      c.sibling.return = c.return;\n      c = c.sibling;\n    }\n  };\n\n  Gg = function Gg() {};\n\n  Hg = function Hg(a, b, c, d, e) {\n    var f = a.memoizedProps;\n\n    if (f !== d) {\n      var g = b.stateNode;\n      If(O.current);\n      a = null;\n\n      switch (c) {\n        case \"input\":\n          f = zc(g, f);\n          d = zc(g, d);\n          a = [];\n          break;\n\n        case \"option\":\n          f = ee(g, f);\n          d = ee(g, d);\n          a = [];\n          break;\n\n        case \"select\":\n          f = n({}, f, {\n            value: void 0\n          });\n          d = n({}, d, {\n            value: void 0\n          });\n          a = [];\n          break;\n\n        case \"textarea\":\n          f = ge(g, f);\n          d = ge(g, d);\n          a = [];\n          break;\n\n        default:\n          \"function\" !== typeof f.onClick && \"function\" === typeof d.onClick && (g.onclick = ye);\n      }\n\n      ve(c, d);\n      g = c = void 0;\n      var h = null;\n\n      for (c in f) {\n        if (!d.hasOwnProperty(c) && f.hasOwnProperty(c) && null != f[c]) if (\"style\" === c) {\n          var k = f[c];\n\n          for (g in k) {\n            k.hasOwnProperty(g) && (h || (h = {}), h[g] = \"\");\n          }\n        } else \"dangerouslySetInnerHTML\" !== c && \"children\" !== c && \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && \"autoFocus\" !== c && (sa.hasOwnProperty(c) ? a || (a = []) : (a = a || []).push(c, null));\n      }\n\n      for (c in d) {\n        var l = d[c];\n        k = null != f ? f[c] : void 0;\n        if (d.hasOwnProperty(c) && l !== k && (null != l || null != k)) if (\"style\" === c) {\n          if (k) {\n            for (g in k) {\n              !k.hasOwnProperty(g) || l && l.hasOwnProperty(g) || (h || (h = {}), h[g] = \"\");\n            }\n\n            for (g in l) {\n              l.hasOwnProperty(g) && k[g] !== l[g] && (h || (h = {}), h[g] = l[g]);\n            }\n          } else h || (a || (a = []), a.push(c, h)), h = l;\n        } else \"dangerouslySetInnerHTML\" === c ? (l = l ? l.__html : void 0, k = k ? k.__html : void 0, null != l && k !== l && (a = a || []).push(c, \"\" + l)) : \"children\" === c ? k === l || \"string\" !== typeof l && \"number\" !== typeof l || (a = a || []).push(c, \"\" + l) : \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && (sa.hasOwnProperty(c) ? (null != l && xe(e, c), a || k === l || (a = [])) : (a = a || []).push(c, l));\n      }\n\n      h && (a = a || []).push(\"style\", h);\n      e = a;\n      (b.updateQueue = e) && Bg(b);\n    }\n  };\n\n  Ig = function Ig(a, b, c, d) {\n    c !== d && Bg(b);\n  };\n\n  var Jg = \"function\" === typeof WeakSet ? WeakSet : Set;\n\n  function Kg(a, b) {\n    var c = b.source,\n        d = b.stack;\n    null === d && null !== c && (d = nc(c));\n    null !== c && mc(c.type);\n    b = b.value;\n    null !== a && 1 === a.tag && mc(a.type);\n\n    try {\n      console.error(b);\n    } catch (e) {\n      setTimeout(function () {\n        throw e;\n      });\n    }\n  }\n\n  function Lg(a) {\n    var b = a.ref;\n    if (null !== b) if (\"function\" === typeof b) try {\n      b(null);\n    } catch (c) {\n      Mg(a, c);\n    } else b.current = null;\n  }\n\n  function Ng(a, b) {\n    for (var c = a;;) {\n      if (5 === c.tag) {\n        var d = c.stateNode;\n        if (b) d.style.display = \"none\";else {\n          d = c.stateNode;\n          var e = c.memoizedProps.style;\n          e = void 0 !== e && null !== e && e.hasOwnProperty(\"display\") ? e.display : null;\n          d.style.display = se(\"display\", e);\n        }\n      } else if (6 === c.tag) c.stateNode.nodeValue = b ? \"\" : c.memoizedProps;else if (13 === c.tag && null !== c.memoizedState) {\n        d = c.child.sibling;\n        d.return = c;\n        c = d;\n        continue;\n      } else if (null !== c.child) {\n        c.child.return = c;\n        c = c.child;\n        continue;\n      }\n\n      if (c === a) break;\n\n      for (; null === c.sibling;) {\n        if (null === c.return || c.return === a) return;\n        c = c.return;\n      }\n\n      c.sibling.return = c.return;\n      c = c.sibling;\n    }\n  }\n\n  function Og(a) {\n    \"function\" === typeof Ue && Ue(a);\n\n    switch (a.tag) {\n      case 0:\n      case 11:\n      case 14:\n      case 15:\n        var b = a.updateQueue;\n\n        if (null !== b && (b = b.lastEffect, null !== b)) {\n          var c = b = b.next;\n\n          do {\n            var d = c.destroy;\n\n            if (null !== d) {\n              var e = a;\n\n              try {\n                d();\n              } catch (f) {\n                Mg(e, f);\n              }\n            }\n\n            c = c.next;\n          } while (c !== b);\n        }\n\n        break;\n\n      case 1:\n        Lg(a);\n        b = a.stateNode;\n        if (\"function\" === typeof b.componentWillUnmount) try {\n          b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();\n        } catch (f) {\n          Mg(a, f);\n        }\n        break;\n\n      case 5:\n        Lg(a);\n        break;\n\n      case 4:\n        Pg(a);\n    }\n  }\n\n  function Qg(a) {\n    return 5 === a.tag || 3 === a.tag || 4 === a.tag;\n  }\n\n  function Rg(a) {\n    a: {\n      for (var b = a.return; null !== b;) {\n        if (Qg(b)) {\n          var c = b;\n          break a;\n        }\n\n        b = b.return;\n      }\n\n      t(\"160\");\n      c = void 0;\n    }\n\n    var d = b = void 0;\n\n    switch (c.tag) {\n      case 5:\n        b = c.stateNode;\n        d = !1;\n        break;\n\n      case 3:\n        b = c.stateNode.containerInfo;\n        d = !0;\n        break;\n\n      case 4:\n        b = c.stateNode.containerInfo;\n        d = !0;\n        break;\n\n      default:\n        t(\"161\");\n    }\n\n    c.effectTag & 16 && (pe(b, \"\"), c.effectTag &= -17);\n\n    a: b: for (c = a;;) {\n      for (; null === c.sibling;) {\n        if (null === c.return || Qg(c.return)) {\n          c = null;\n          break a;\n        }\n\n        c = c.return;\n      }\n\n      c.sibling.return = c.return;\n\n      for (c = c.sibling; 5 !== c.tag && 6 !== c.tag;) {\n        if (c.effectTag & 2) continue b;\n        if (null === c.child || 4 === c.tag) continue b;else c.child.return = c, c = c.child;\n      }\n\n      if (!(c.effectTag & 2)) {\n        c = c.stateNode;\n        break a;\n      }\n    }\n\n    for (var e = a;;) {\n      if (5 === e.tag || 6 === e.tag) {\n        if (c) {\n          if (d) {\n            var f = b,\n                g = e.stateNode,\n                h = c;\n            8 === f.nodeType ? f.parentNode.insertBefore(g, h) : f.insertBefore(g, h);\n          } else b.insertBefore(e.stateNode, c);\n        } else d ? (g = b, h = e.stateNode, 8 === g.nodeType ? (f = g.parentNode, f.insertBefore(h, g)) : (f = g, f.appendChild(h)), g = g._reactRootContainer, null !== g && void 0 !== g || null !== f.onclick || (f.onclick = ye)) : b.appendChild(e.stateNode);\n      } else if (4 !== e.tag && null !== e.child) {\n        e.child.return = e;\n        e = e.child;\n        continue;\n      }\n      if (e === a) break;\n\n      for (; null === e.sibling;) {\n        if (null === e.return || e.return === a) return;\n        e = e.return;\n      }\n\n      e.sibling.return = e.return;\n      e = e.sibling;\n    }\n  }\n\n  function Pg(a) {\n    for (var b = a, c = !1, d = void 0, e = void 0;;) {\n      if (!c) {\n        c = b.return;\n\n        a: for (;;) {\n          null === c ? t(\"160\") : void 0;\n\n          switch (c.tag) {\n            case 5:\n              d = c.stateNode;\n              e = !1;\n              break a;\n\n            case 3:\n              d = c.stateNode.containerInfo;\n              e = !0;\n              break a;\n\n            case 4:\n              d = c.stateNode.containerInfo;\n              e = !0;\n              break a;\n          }\n\n          c = c.return;\n        }\n\n        c = !0;\n      }\n\n      if (5 === b.tag || 6 === b.tag) {\n        a: for (var f = b, g = f;;) {\n          if (Og(g), null !== g.child && 4 !== g.tag) g.child.return = g, g = g.child;else {\n            if (g === f) break;\n\n            for (; null === g.sibling;) {\n              if (null === g.return || g.return === f) break a;\n              g = g.return;\n            }\n\n            g.sibling.return = g.return;\n            g = g.sibling;\n          }\n        }\n\n        e ? (f = d, g = b.stateNode, 8 === f.nodeType ? f.parentNode.removeChild(g) : f.removeChild(g)) : d.removeChild(b.stateNode);\n      } else if (4 === b.tag ? (d = b.stateNode.containerInfo, e = !0) : Og(b), null !== b.child) {\n        b.child.return = b;\n        b = b.child;\n        continue;\n      }\n\n      if (b === a) break;\n\n      for (; null === b.sibling;) {\n        if (null === b.return || b.return === a) return;\n        b = b.return;\n        4 === b.tag && (c = !1);\n      }\n\n      b.sibling.return = b.return;\n      b = b.sibling;\n    }\n  }\n\n  function Sg(a, b) {\n    switch (b.tag) {\n      case 0:\n      case 11:\n      case 14:\n      case 15:\n        break;\n\n      case 1:\n        break;\n\n      case 5:\n        var c = b.stateNode;\n\n        if (null != c) {\n          var d = b.memoizedProps;\n          a = null !== a ? a.memoizedProps : d;\n          var e = b.type,\n              f = b.updateQueue;\n          b.updateQueue = null;\n          null !== f && Fe(c, f, e, a, d, b);\n        }\n\n        break;\n\n      case 6:\n        null === b.stateNode ? t(\"162\") : void 0;\n        b.stateNode.nodeValue = b.memoizedProps;\n        break;\n\n      case 3:\n        break;\n\n      case 12:\n        break;\n\n      case 13:\n        c = b.memoizedState;\n        d = void 0;\n        a = b;\n        null === c ? d = !1 : (d = !0, a = b.child, 0 === c.timedOutAt && (c.timedOutAt = Rf()));\n        null !== a && Ng(a, d);\n        c = b.updateQueue;\n\n        if (null !== c) {\n          b.updateQueue = null;\n          var g = b.stateNode;\n          null === g && (g = b.stateNode = new Jg());\n          c.forEach(function (a) {\n            var c = Tg.bind(null, b, a);\n            g.has(a) || (g.add(a), a.then(c, c));\n          });\n        }\n\n        break;\n\n      case 17:\n        break;\n\n      default:\n        t(\"163\");\n    }\n  }\n\n  var Ug = \"function\" === typeof WeakMap ? WeakMap : Map;\n\n  function Vg(a, b, c) {\n    c = nf(c);\n    c.tag = 3;\n    c.payload = {\n      element: null\n    };\n    var d = b.value;\n\n    c.callback = function () {\n      Wg(d);\n      Kg(a, b);\n    };\n\n    return c;\n  }\n\n  function Xg(a, b, c) {\n    c = nf(c);\n    c.tag = 3;\n    var d = a.type.getDerivedStateFromError;\n\n    if (\"function\" === typeof d) {\n      var e = b.value;\n\n      c.payload = function () {\n        return d(e);\n      };\n    }\n\n    var f = a.stateNode;\n    null !== f && \"function\" === typeof f.componentDidCatch && (c.callback = function () {\n      \"function\" !== typeof d && (null === Yg ? Yg = new Set([this]) : Yg.add(this));\n      var c = b.value,\n          e = b.stack;\n      Kg(a, b);\n      this.componentDidCatch(c, {\n        componentStack: null !== e ? e : \"\"\n      });\n    });\n    return c;\n  }\n\n  function Zg(a) {\n    switch (a.tag) {\n      case 1:\n        M(a.type) && Ne(a);\n        var b = a.effectTag;\n        return b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n      case 3:\n        return Kf(a), Oe(a), b = a.effectTag, 0 !== (b & 64) ? t(\"285\") : void 0, a.effectTag = b & -2049 | 64, a;\n\n      case 5:\n        return Mf(a), null;\n\n      case 13:\n        return b = a.effectTag, b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n      case 4:\n        return Kf(a), null;\n\n      case 10:\n        return Cf(a), null;\n\n      default:\n        return null;\n    }\n  }\n\n  var $g = {\n    readContext: Ef\n  },\n      ah = Xb.ReactCurrentOwner,\n      bh = 1073741822,\n      ch = 0,\n      dh = !1,\n      S = null,\n      T = null,\n      U = 0,\n      eh = -1,\n      fh = !1,\n      V = null,\n      gh = !1,\n      hh = null,\n      ih = null,\n      Yg = null;\n\n  function jh() {\n    if (null !== S) for (var a = S.return; null !== a;) {\n      var b = a;\n\n      switch (b.tag) {\n        case 1:\n          var c = b.type.childContextTypes;\n          null !== c && void 0 !== c && Ne(b);\n          break;\n\n        case 3:\n          Kf(b);\n          Oe(b);\n          break;\n\n        case 5:\n          Mf(b);\n          break;\n\n        case 4:\n          Kf(b);\n          break;\n\n        case 10:\n          Cf(b);\n      }\n\n      a = a.return;\n    }\n    T = null;\n    U = 0;\n    eh = -1;\n    fh = !1;\n    S = null;\n  }\n\n  function Tf() {\n    null !== ih && (ba.unstable_cancelCallback(hh), ih());\n  }\n\n  function kh(a) {\n    for (;;) {\n      var b = a.alternate,\n          c = a.return,\n          d = a.sibling;\n\n      if (0 === (a.effectTag & 1024)) {\n        S = a;\n\n        a: {\n          var e = b;\n          b = a;\n          var f = U;\n          var g = b.pendingProps;\n\n          switch (b.tag) {\n            case 2:\n              break;\n\n            case 16:\n              break;\n\n            case 15:\n            case 0:\n              break;\n\n            case 1:\n              M(b.type) && Ne(b);\n              break;\n\n            case 3:\n              Kf(b);\n              Oe(b);\n              g = b.stateNode;\n              g.pendingContext && (g.context = g.pendingContext, g.pendingContext = null);\n              if (null === e || null === e.child) ng(b), b.effectTag &= -3;\n              Gg(b);\n              break;\n\n            case 5:\n              Mf(b);\n              var h = If(Hf.current);\n              f = b.type;\n              if (null !== e && null != b.stateNode) Hg(e, b, f, g, h), e.ref !== b.ref && (b.effectTag |= 128);else if (g) {\n                var k = If(O.current);\n\n                if (ng(b)) {\n                  g = b;\n                  e = g.stateNode;\n                  var l = g.type,\n                      m = g.memoizedProps,\n                      r = h;\n                  e[Ga] = g;\n                  e[Ha] = m;\n                  f = void 0;\n                  h = l;\n\n                  switch (h) {\n                    case \"iframe\":\n                    case \"object\":\n                      H(\"load\", e);\n                      break;\n\n                    case \"video\":\n                    case \"audio\":\n                      for (l = 0; l < bb.length; l++) {\n                        H(bb[l], e);\n                      }\n\n                      break;\n\n                    case \"source\":\n                      H(\"error\", e);\n                      break;\n\n                    case \"img\":\n                    case \"image\":\n                    case \"link\":\n                      H(\"error\", e);\n                      H(\"load\", e);\n                      break;\n\n                    case \"form\":\n                      H(\"reset\", e);\n                      H(\"submit\", e);\n                      break;\n\n                    case \"details\":\n                      H(\"toggle\", e);\n                      break;\n\n                    case \"input\":\n                      Ac(e, m);\n                      H(\"invalid\", e);\n                      xe(r, \"onChange\");\n                      break;\n\n                    case \"select\":\n                      e._wrapperState = {\n                        wasMultiple: !!m.multiple\n                      };\n                      H(\"invalid\", e);\n                      xe(r, \"onChange\");\n                      break;\n\n                    case \"textarea\":\n                      he(e, m), H(\"invalid\", e), xe(r, \"onChange\");\n                  }\n\n                  ve(h, m);\n                  l = null;\n\n                  for (f in m) {\n                    m.hasOwnProperty(f) && (k = m[f], \"children\" === f ? \"string\" === typeof k ? e.textContent !== k && (l = [\"children\", k]) : \"number\" === typeof k && e.textContent !== \"\" + k && (l = [\"children\", \"\" + k]) : sa.hasOwnProperty(f) && null != k && xe(r, f));\n                  }\n\n                  switch (h) {\n                    case \"input\":\n                      Vb(e);\n                      Ec(e, m, !0);\n                      break;\n\n                    case \"textarea\":\n                      Vb(e);\n                      je(e, m);\n                      break;\n\n                    case \"select\":\n                    case \"option\":\n                      break;\n\n                    default:\n                      \"function\" === typeof m.onClick && (e.onclick = ye);\n                  }\n\n                  f = l;\n                  g.updateQueue = f;\n                  g = null !== f ? !0 : !1;\n                  g && Bg(b);\n                } else {\n                  m = b;\n                  e = f;\n                  r = g;\n                  l = 9 === h.nodeType ? h : h.ownerDocument;\n                  k === ke.html && (k = le(e));\n                  k === ke.html ? \"script\" === e ? (e = l.createElement(\"div\"), e.innerHTML = \"<script>\\x3c/script>\", l = e.removeChild(e.firstChild)) : \"string\" === typeof r.is ? l = l.createElement(e, {\n                    is: r.is\n                  }) : (l = l.createElement(e), \"select\" === e && r.multiple && (l.multiple = !0)) : l = l.createElementNS(k, e);\n                  e = l;\n                  e[Ga] = m;\n                  e[Ha] = g;\n                  Cg(e, b, !1, !1);\n                  r = e;\n                  l = f;\n                  m = g;\n                  var w = h,\n                      y = we(l, m);\n\n                  switch (l) {\n                    case \"iframe\":\n                    case \"object\":\n                      H(\"load\", r);\n                      h = m;\n                      break;\n\n                    case \"video\":\n                    case \"audio\":\n                      for (h = 0; h < bb.length; h++) {\n                        H(bb[h], r);\n                      }\n\n                      h = m;\n                      break;\n\n                    case \"source\":\n                      H(\"error\", r);\n                      h = m;\n                      break;\n\n                    case \"img\":\n                    case \"image\":\n                    case \"link\":\n                      H(\"error\", r);\n                      H(\"load\", r);\n                      h = m;\n                      break;\n\n                    case \"form\":\n                      H(\"reset\", r);\n                      H(\"submit\", r);\n                      h = m;\n                      break;\n\n                    case \"details\":\n                      H(\"toggle\", r);\n                      h = m;\n                      break;\n\n                    case \"input\":\n                      Ac(r, m);\n                      h = zc(r, m);\n                      H(\"invalid\", r);\n                      xe(w, \"onChange\");\n                      break;\n\n                    case \"option\":\n                      h = ee(r, m);\n                      break;\n\n                    case \"select\":\n                      r._wrapperState = {\n                        wasMultiple: !!m.multiple\n                      };\n                      h = n({}, m, {\n                        value: void 0\n                      });\n                      H(\"invalid\", r);\n                      xe(w, \"onChange\");\n                      break;\n\n                    case \"textarea\":\n                      he(r, m);\n                      h = ge(r, m);\n                      H(\"invalid\", r);\n                      xe(w, \"onChange\");\n                      break;\n\n                    default:\n                      h = m;\n                  }\n\n                  ve(l, h);\n                  k = void 0;\n                  var B = l,\n                      R = r,\n                      v = h;\n\n                  for (k in v) {\n                    if (v.hasOwnProperty(k)) {\n                      var q = v[k];\n                      \"style\" === k ? te(R, q) : \"dangerouslySetInnerHTML\" === k ? (q = q ? q.__html : void 0, null != q && oe(R, q)) : \"children\" === k ? \"string\" === typeof q ? (\"textarea\" !== B || \"\" !== q) && pe(R, q) : \"number\" === typeof q && pe(R, \"\" + q) : \"suppressContentEditableWarning\" !== k && \"suppressHydrationWarning\" !== k && \"autoFocus\" !== k && (sa.hasOwnProperty(k) ? null != q && xe(w, k) : null != q && xc(R, k, q, y));\n                    }\n                  }\n\n                  switch (l) {\n                    case \"input\":\n                      Vb(r);\n                      Ec(r, m, !1);\n                      break;\n\n                    case \"textarea\":\n                      Vb(r);\n                      je(r, m);\n                      break;\n\n                    case \"option\":\n                      null != m.value && r.setAttribute(\"value\", \"\" + yc(m.value));\n                      break;\n\n                    case \"select\":\n                      h = r;\n                      h.multiple = !!m.multiple;\n                      r = m.value;\n                      null != r ? fe(h, !!m.multiple, r, !1) : null != m.defaultValue && fe(h, !!m.multiple, m.defaultValue, !0);\n                      break;\n\n                    default:\n                      \"function\" === typeof h.onClick && (r.onclick = ye);\n                  }\n\n                  (g = Be(f, g)) && Bg(b);\n                  b.stateNode = e;\n                }\n\n                null !== b.ref && (b.effectTag |= 128);\n              } else null === b.stateNode ? t(\"166\") : void 0;\n              break;\n\n            case 6:\n              e && null != b.stateNode ? Ig(e, b, e.memoizedProps, g) : (\"string\" !== typeof g && (null === b.stateNode ? t(\"166\") : void 0), e = If(Hf.current), If(O.current), ng(b) ? (g = b, f = g.stateNode, e = g.memoizedProps, f[Ga] = g, (g = f.nodeValue !== e) && Bg(b)) : (f = b, g = (9 === e.nodeType ? e : e.ownerDocument).createTextNode(g), g[Ga] = b, f.stateNode = g));\n              break;\n\n            case 11:\n              break;\n\n            case 13:\n              g = b.memoizedState;\n\n              if (0 !== (b.effectTag & 64)) {\n                b.expirationTime = f;\n                S = b;\n                break a;\n              }\n\n              g = null !== g;\n              f = null !== e && null !== e.memoizedState;\n              null !== e && !g && f && (e = e.child.sibling, null !== e && (h = b.firstEffect, null !== h ? (b.firstEffect = e, e.nextEffect = h) : (b.firstEffect = b.lastEffect = e, e.nextEffect = null), e.effectTag = 8));\n              if (g !== f || 0 === (b.effectTag & 1) && g) b.effectTag |= 4;\n              break;\n\n            case 7:\n              break;\n\n            case 8:\n              break;\n\n            case 12:\n              break;\n\n            case 4:\n              Kf(b);\n              Gg(b);\n              break;\n\n            case 10:\n              Cf(b);\n              break;\n\n            case 9:\n              break;\n\n            case 14:\n              break;\n\n            case 17:\n              M(b.type) && Ne(b);\n              break;\n\n            default:\n              t(\"156\");\n          }\n\n          S = null;\n        }\n\n        b = a;\n\n        if (1 === U || 1 !== b.childExpirationTime) {\n          g = 0;\n\n          for (f = b.child; null !== f;) {\n            e = f.expirationTime, h = f.childExpirationTime, e > g && (g = e), h > g && (g = h), f = f.sibling;\n          }\n\n          b.childExpirationTime = g;\n        }\n\n        if (null !== S) return S;\n        null !== c && 0 === (c.effectTag & 1024) && (null === c.firstEffect && (c.firstEffect = a.firstEffect), null !== a.lastEffect && (null !== c.lastEffect && (c.lastEffect.nextEffect = a.firstEffect), c.lastEffect = a.lastEffect), 1 < a.effectTag && (null !== c.lastEffect ? c.lastEffect.nextEffect = a : c.firstEffect = a, c.lastEffect = a));\n      } else {\n        a = Zg(a, U);\n        if (null !== a) return a.effectTag &= 1023, a;\n        null !== c && (c.firstEffect = c.lastEffect = null, c.effectTag |= 1024);\n      }\n\n      if (null !== d) return d;\n      if (null !== c) a = c;else break;\n    }\n\n    return null;\n  }\n\n  function lh(a) {\n    var b = Ag(a.alternate, a, U);\n    a.memoizedProps = a.pendingProps;\n    null === b && (b = kh(a));\n    ah.current = null;\n    return b;\n  }\n\n  function mh(a, b) {\n    dh ? t(\"243\") : void 0;\n    Tf();\n    dh = !0;\n    ah.currentDispatcher = $g;\n    var c = a.nextExpirationTimeToWorkOn;\n    if (c !== U || a !== T || null === S) jh(), T = a, U = c, S = $e(T.current, null, U), a.pendingCommitExpirationTime = 0;\n    var d = !1;\n\n    do {\n      try {\n        if (b) for (; null !== S && !nh();) {\n          S = lh(S);\n        } else for (; null !== S;) {\n          S = lh(S);\n        }\n      } catch (B) {\n        if (Af = zf = yf = null, null === S) d = !0, Wg(B);else {\n          null === S ? t(\"271\") : void 0;\n          var e = S,\n              f = e.return;\n          if (null === f) d = !0, Wg(B);else {\n            a: {\n              var g = a,\n                  h = f,\n                  k = e,\n                  l = B;\n              f = U;\n              k.effectTag |= 1024;\n              k.firstEffect = k.lastEffect = null;\n\n              if (null !== l && \"object\" === typeof l && \"function\" === typeof l.then) {\n                var m = l;\n                l = h;\n                var r = -1,\n                    w = -1;\n\n                do {\n                  if (13 === l.tag) {\n                    var y = l.alternate;\n\n                    if (null !== y && (y = y.memoizedState, null !== y)) {\n                      w = 10 * (1073741822 - y.timedOutAt);\n                      break;\n                    }\n\n                    y = l.pendingProps.maxDuration;\n                    if (\"number\" === typeof y) if (0 >= y) r = 0;else if (-1 === r || y < r) r = y;\n                  }\n\n                  l = l.return;\n                } while (null !== l);\n\n                l = h;\n\n                do {\n                  if (y = 13 === l.tag) y = void 0 === l.memoizedProps.fallback ? !1 : null === l.memoizedState;\n\n                  if (y) {\n                    h = l.updateQueue;\n                    null === h ? l.updateQueue = new Set([m]) : h.add(m);\n\n                    if (0 === (l.mode & 1)) {\n                      l.effectTag |= 64;\n                      k.effectTag &= -1957;\n                      1 === k.tag && (null === k.alternate ? k.tag = 17 : (f = nf(1073741823), f.tag = 2, pf(k, f)));\n                      k.expirationTime = 1073741823;\n                      break a;\n                    }\n\n                    k = g.pingCache;\n                    null === k ? (k = g.pingCache = new Ug(), h = new Set(), k.set(m, h)) : (h = k.get(m), void 0 === h && (h = new Set(), k.set(m, h)));\n                    h.has(f) || (h.add(f), k = oh.bind(null, g, m, f), m.then(k, k));\n                    -1 === r ? g = 1073741823 : (-1 === w && (w = 10 * (1073741822 - jf(g, f)) - 5E3), g = w + r);\n                    0 <= g && eh < g && (eh = g);\n                    l.effectTag |= 2048;\n                    l.expirationTime = f;\n                    break a;\n                  }\n\n                  l = l.return;\n                } while (null !== l);\n\n                l = Error((mc(k.type) || \"A React component\") + \" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\" + nc(k));\n              }\n\n              fh = !0;\n              l = wf(l, k);\n              g = h;\n\n              do {\n                switch (g.tag) {\n                  case 3:\n                    g.effectTag |= 2048;\n                    g.expirationTime = f;\n                    f = Vg(g, l, f);\n                    qf(g, f);\n                    break a;\n\n                  case 1:\n                    if (m = l, r = g.type, w = g.stateNode, 0 === (g.effectTag & 64) && (\"function\" === typeof r.getDerivedStateFromError || null !== w && \"function\" === typeof w.componentDidCatch && (null === Yg || !Yg.has(w)))) {\n                      g.effectTag |= 2048;\n                      g.expirationTime = f;\n                      f = Xg(g, m, f);\n                      qf(g, f);\n                      break a;\n                    }\n\n                }\n\n                g = g.return;\n              } while (null !== g);\n            }\n\n            S = kh(e);\n            continue;\n          }\n        }\n      }\n\n      break;\n    } while (1);\n\n    dh = !1;\n    Af = zf = yf = ah.currentDispatcher = null;\n    if (d) T = null, a.finishedWork = null;else if (null !== S) a.finishedWork = null;else {\n      d = a.current.alternate;\n      null === d ? t(\"281\") : void 0;\n      T = null;\n\n      if (fh) {\n        e = a.latestPendingTime;\n        f = a.latestSuspendedTime;\n        g = a.latestPingedTime;\n\n        if (0 !== e && e < c || 0 !== f && f < c || 0 !== g && g < c) {\n          hf(a, c);\n          ph(a, d, c, a.expirationTime, -1);\n          return;\n        }\n\n        if (!a.didError && b) {\n          a.didError = !0;\n          c = a.nextExpirationTimeToWorkOn = c;\n          b = a.expirationTime = 1073741823;\n          ph(a, d, c, b, -1);\n          return;\n        }\n      }\n\n      b && -1 !== eh ? (hf(a, c), b = 10 * (1073741822 - jf(a, c)), b < eh && (eh = b), b = 10 * (1073741822 - Rf()), b = eh - b, ph(a, d, c, a.expirationTime, 0 > b ? 0 : b)) : (a.pendingCommitExpirationTime = c, a.finishedWork = d);\n    }\n  }\n\n  function Mg(a, b) {\n    for (var c = a.return; null !== c;) {\n      switch (c.tag) {\n        case 1:\n          var d = c.stateNode;\n\n          if (\"function\" === typeof c.type.getDerivedStateFromError || \"function\" === typeof d.componentDidCatch && (null === Yg || !Yg.has(d))) {\n            a = wf(b, a);\n            a = Xg(c, a, 1073741823);\n            pf(c, a);\n            Uf(c, 1073741823);\n            return;\n          }\n\n          break;\n\n        case 3:\n          a = wf(b, a);\n          a = Vg(c, a, 1073741823);\n          pf(c, a);\n          Uf(c, 1073741823);\n          return;\n      }\n\n      c = c.return;\n    }\n\n    3 === a.tag && (c = wf(b, a), c = Vg(a, c, 1073741823), pf(a, c), Uf(a, 1073741823));\n  }\n\n  function Sf(a, b) {\n    0 !== ch ? a = ch : dh ? a = gh ? 1073741823 : U : b.mode & 1 ? (a = qh ? 1073741822 - 10 * (((1073741822 - a + 15) / 10 | 0) + 1) : 1073741822 - 25 * (((1073741822 - a + 500) / 25 | 0) + 1), null !== T && a === U && --a) : a = 1073741823;\n    qh && (0 === rh || a < rh) && (rh = a);\n    return a;\n  }\n\n  function oh(a, b, c) {\n    var d = a.pingCache;\n    null !== d && d.delete(b);\n    if (null !== T && U === c) T = null;else if (b = a.earliestSuspendedTime, d = a.latestSuspendedTime, 0 !== b && c <= b && c >= d) {\n      a.didError = !1;\n      b = a.latestPingedTime;\n      if (0 === b || b > c) a.latestPingedTime = c;\n      gf(c, a);\n      c = a.expirationTime;\n      0 !== c && sh(a, c);\n    }\n  }\n\n  function Tg(a, b) {\n    var c = a.stateNode;\n    null !== c && c.delete(b);\n    b = Rf();\n    b = Sf(b, a);\n    a = th(a, b);\n    null !== a && (ff(a, b), b = a.expirationTime, 0 !== b && sh(a, b));\n  }\n\n  function th(a, b) {\n    a.expirationTime < b && (a.expirationTime = b);\n    var c = a.alternate;\n    null !== c && c.expirationTime < b && (c.expirationTime = b);\n    var d = a.return,\n        e = null;\n    if (null === d && 3 === a.tag) e = a.stateNode;else for (; null !== d;) {\n      c = d.alternate;\n      d.childExpirationTime < b && (d.childExpirationTime = b);\n      null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);\n\n      if (null === d.return && 3 === d.tag) {\n        e = d.stateNode;\n        break;\n      }\n\n      d = d.return;\n    }\n    return e;\n  }\n\n  function Uf(a, b) {\n    a = th(a, b);\n    null !== a && (!dh && 0 !== U && b > U && jh(), ff(a, b), dh && !gh && T === a || sh(a, a.expirationTime), uh > vh && (uh = 0, t(\"185\")));\n  }\n\n  function wh(a, b, c, d, e) {\n    var f = ch;\n    ch = 1073741823;\n\n    try {\n      return a(b, c, d, e);\n    } finally {\n      ch = f;\n    }\n  }\n\n  var xh = null,\n      W = null,\n      yh = 0,\n      zh = void 0,\n      X = !1,\n      Ah = null,\n      Y = 0,\n      rh = 0,\n      Bh = !1,\n      Ch = null,\n      Z = !1,\n      Dh = !1,\n      qh = !1,\n      Eh = null,\n      Fh = ba.unstable_now(),\n      Gh = 1073741822 - (Fh / 10 | 0),\n      Hh = Gh,\n      vh = 50,\n      uh = 0,\n      Ih = null;\n\n  function Jh() {\n    Gh = 1073741822 - ((ba.unstable_now() - Fh) / 10 | 0);\n  }\n\n  function Kh(a, b) {\n    if (0 !== yh) {\n      if (b < yh) return;\n      null !== zh && ba.unstable_cancelCallback(zh);\n    }\n\n    yh = b;\n    a = ba.unstable_now() - Fh;\n    zh = ba.unstable_scheduleCallback(Lh, {\n      timeout: 10 * (1073741822 - b) - a\n    });\n  }\n\n  function ph(a, b, c, d, e) {\n    a.expirationTime = d;\n    0 !== e || nh() ? 0 < e && (a.timeoutHandle = De(Mh.bind(null, a, b, c), e)) : (a.pendingCommitExpirationTime = c, a.finishedWork = b);\n  }\n\n  function Mh(a, b, c) {\n    a.pendingCommitExpirationTime = c;\n    a.finishedWork = b;\n    Jh();\n    Hh = Gh;\n    Nh(a, c);\n  }\n\n  function Rf() {\n    if (X) return Hh;\n    Oh();\n    if (0 === Y || 1 === Y) Jh(), Hh = Gh;\n    return Hh;\n  }\n\n  function sh(a, b) {\n    null === a.nextScheduledRoot ? (a.expirationTime = b, null === W ? (xh = W = a, a.nextScheduledRoot = a) : (W = W.nextScheduledRoot = a, W.nextScheduledRoot = xh)) : b > a.expirationTime && (a.expirationTime = b);\n    X || (Z ? Dh && (Ah = a, Y = 1073741823, Ph(a, 1073741823, !1)) : 1073741823 === b ? Qh(1073741823, !1) : Kh(a, b));\n  }\n\n  function Oh() {\n    var a = 0,\n        b = null;\n    if (null !== W) for (var c = W, d = xh; null !== d;) {\n      var e = d.expirationTime;\n\n      if (0 === e) {\n        null === c || null === W ? t(\"244\") : void 0;\n\n        if (d === d.nextScheduledRoot) {\n          xh = W = d.nextScheduledRoot = null;\n          break;\n        } else if (d === xh) xh = e = d.nextScheduledRoot, W.nextScheduledRoot = e, d.nextScheduledRoot = null;else if (d === W) {\n          W = c;\n          W.nextScheduledRoot = xh;\n          d.nextScheduledRoot = null;\n          break;\n        } else c.nextScheduledRoot = d.nextScheduledRoot, d.nextScheduledRoot = null;\n\n        d = c.nextScheduledRoot;\n      } else {\n        e > a && (a = e, b = d);\n        if (d === W) break;\n        if (1073741823 === a) break;\n        c = d;\n        d = d.nextScheduledRoot;\n      }\n    }\n    Ah = b;\n    Y = a;\n  }\n\n  var Rh = !1;\n\n  function nh() {\n    return Rh ? !0 : ba.unstable_shouldYield() ? Rh = !0 : !1;\n  }\n\n  function Lh() {\n    try {\n      if (!nh() && null !== xh) {\n        Jh();\n        var a = xh;\n\n        do {\n          var b = a.expirationTime;\n          0 !== b && Gh <= b && (a.nextExpirationTimeToWorkOn = Gh);\n          a = a.nextScheduledRoot;\n        } while (a !== xh);\n      }\n\n      Qh(0, !0);\n    } finally {\n      Rh = !1;\n    }\n  }\n\n  function Qh(a, b) {\n    Oh();\n    if (b) for (Jh(), Hh = Gh; null !== Ah && 0 !== Y && a <= Y && !(Rh && Gh > Y);) {\n      Ph(Ah, Y, Gh > Y), Oh(), Jh(), Hh = Gh;\n    } else for (; null !== Ah && 0 !== Y && a <= Y;) {\n      Ph(Ah, Y, !1), Oh();\n    }\n    b && (yh = 0, zh = null);\n    0 !== Y && Kh(Ah, Y);\n    uh = 0;\n    Ih = null;\n    if (null !== Eh) for (a = Eh, Eh = null, b = 0; b < a.length; b++) {\n      var c = a[b];\n\n      try {\n        c._onComplete();\n      } catch (d) {\n        Bh || (Bh = !0, Ch = d);\n      }\n    }\n    if (Bh) throw a = Ch, Ch = null, Bh = !1, a;\n  }\n\n  function Nh(a, b) {\n    X ? t(\"253\") : void 0;\n    Ah = a;\n    Y = b;\n    Ph(a, b, !1);\n    Qh(1073741823, !1);\n  }\n\n  function Ph(a, b, c) {\n    X ? t(\"245\") : void 0;\n    X = !0;\n\n    if (c) {\n      var d = a.finishedWork;\n      null !== d ? Sh(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, Ee(d)), mh(a, c), d = a.finishedWork, null !== d && (nh() ? a.finishedWork = d : Sh(a, d, b)));\n    } else d = a.finishedWork, null !== d ? Sh(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, Ee(d)), mh(a, c), d = a.finishedWork, null !== d && Sh(a, d, b));\n\n    X = !1;\n  }\n\n  function Sh(a, b, c) {\n    var d = a.firstBatch;\n\n    if (null !== d && d._expirationTime >= c && (null === Eh ? Eh = [d] : Eh.push(d), d._defer)) {\n      a.finishedWork = b;\n      a.expirationTime = 0;\n      return;\n    }\n\n    a.finishedWork = null;\n    a === Ih ? uh++ : (Ih = a, uh = 0);\n    gh = dh = !0;\n    a.current === b ? t(\"177\") : void 0;\n    c = a.pendingCommitExpirationTime;\n    0 === c ? t(\"261\") : void 0;\n    a.pendingCommitExpirationTime = 0;\n    d = b.expirationTime;\n    var e = b.childExpirationTime;\n    d = e > d ? e : d;\n    a.didError = !1;\n    0 === d ? (a.earliestPendingTime = 0, a.latestPendingTime = 0, a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0) : (d < a.latestPingedTime && (a.latestPingedTime = 0), e = a.latestPendingTime, 0 !== e && (e > d ? a.earliestPendingTime = a.latestPendingTime = 0 : a.earliestPendingTime > d && (a.earliestPendingTime = a.latestPendingTime)), e = a.earliestSuspendedTime, 0 === e ? ff(a, d) : d < a.latestSuspendedTime ? (a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0, ff(a, d)) : d > e && ff(a, d));\n    gf(0, a);\n    ah.current = null;\n    1 < b.effectTag ? null !== b.lastEffect ? (b.lastEffect.nextEffect = b, d = b.firstEffect) : d = b : d = b.firstEffect;\n    ze = Hd;\n    e = Td();\n\n    if (Ud(e)) {\n      if (\"selectionStart\" in e) var f = {\n        start: e.selectionStart,\n        end: e.selectionEnd\n      };else a: {\n        f = (f = e.ownerDocument) && f.defaultView || window;\n        var g = f.getSelection && f.getSelection();\n\n        if (g && 0 !== g.rangeCount) {\n          f = g.anchorNode;\n          var h = g.anchorOffset,\n              k = g.focusNode;\n          g = g.focusOffset;\n\n          try {\n            f.nodeType, k.nodeType;\n          } catch (db) {\n            f = null;\n            break a;\n          }\n\n          var l = 0,\n              m = -1,\n              r = -1,\n              w = 0,\n              y = 0,\n              B = e,\n              R = null;\n\n          b: for (;;) {\n            for (var v;;) {\n              B !== f || 0 !== h && 3 !== B.nodeType || (m = l + h);\n              B !== k || 0 !== g && 3 !== B.nodeType || (r = l + g);\n              3 === B.nodeType && (l += B.nodeValue.length);\n              if (null === (v = B.firstChild)) break;\n              R = B;\n              B = v;\n            }\n\n            for (;;) {\n              if (B === e) break b;\n              R === f && ++w === h && (m = l);\n              R === k && ++y === g && (r = l);\n              if (null !== (v = B.nextSibling)) break;\n              B = R;\n              R = B.parentNode;\n            }\n\n            B = v;\n          }\n\n          f = -1 === m || -1 === r ? null : {\n            start: m,\n            end: r\n          };\n        } else f = null;\n      }\n      f = f || {\n        start: 0,\n        end: 0\n      };\n    } else f = null;\n\n    Ae = {\n      focusedElem: e,\n      selectionRange: f\n    };\n    Hd = !1;\n\n    for (V = d; null !== V;) {\n      e = !1;\n      f = void 0;\n\n      try {\n        for (; null !== V;) {\n          if (V.effectTag & 256) a: {\n            var q = V.alternate;\n            h = V;\n\n            switch (h.tag) {\n              case 0:\n              case 11:\n              case 15:\n                break a;\n\n              case 1:\n                if (h.effectTag & 256 && null !== q) {\n                  var u = q.memoizedProps,\n                      A = q.memoizedState,\n                      Yf = h.stateNode,\n                      Vh = Yf.getSnapshotBeforeUpdate(h.elementType === h.type ? u : P(h.type, u), A);\n                  Yf.__reactInternalSnapshotBeforeUpdate = Vh;\n                }\n\n                break a;\n\n              case 3:\n              case 5:\n              case 6:\n              case 4:\n              case 17:\n                break a;\n\n              default:\n                t(\"163\");\n            }\n          }\n          V = V.nextEffect;\n        }\n      } catch (db) {\n        e = !0, f = db;\n      }\n\n      e && (null === V ? t(\"178\") : void 0, Mg(V, f), null !== V && (V = V.nextEffect));\n    }\n\n    for (V = d; null !== V;) {\n      q = !1;\n      u = void 0;\n\n      try {\n        for (; null !== V;) {\n          var x = V.effectTag;\n          x & 16 && pe(V.stateNode, \"\");\n\n          if (x & 128) {\n            var C = V.alternate;\n\n            if (null !== C) {\n              var p = C.ref;\n              null !== p && (\"function\" === typeof p ? p(null) : p.current = null);\n            }\n          }\n\n          switch (x & 14) {\n            case 2:\n              Rg(V);\n              V.effectTag &= -3;\n              break;\n\n            case 6:\n              Rg(V);\n              V.effectTag &= -3;\n              Sg(V.alternate, V);\n              break;\n\n            case 4:\n              Sg(V.alternate, V);\n              break;\n\n            case 8:\n              A = V;\n              Pg(A);\n              A.return = null;\n              A.child = null;\n              A.memoizedState = null;\n              A.updateQueue = null;\n              var G = A.alternate;\n              null !== G && (G.return = null, G.child = null, G.memoizedState = null, G.updateQueue = null);\n          }\n\n          V = V.nextEffect;\n        }\n      } catch (db) {\n        q = !0, u = db;\n      }\n\n      q && (null === V ? t(\"178\") : void 0, Mg(V, u), null !== V && (V = V.nextEffect));\n    }\n\n    p = Ae;\n    C = Td();\n    x = p.focusedElem;\n    q = p.selectionRange;\n\n    if (C !== x && x && x.ownerDocument && Sd(x.ownerDocument.documentElement, x)) {\n      null !== q && Ud(x) && (C = q.start, p = q.end, void 0 === p && (p = C), \"selectionStart\" in x ? (x.selectionStart = C, x.selectionEnd = Math.min(p, x.value.length)) : (p = (C = x.ownerDocument || document) && C.defaultView || window, p.getSelection && (p = p.getSelection(), u = x.textContent.length, G = Math.min(q.start, u), q = void 0 === q.end ? G : Math.min(q.end, u), !p.extend && G > q && (u = q, q = G, G = u), u = Rd(x, G), A = Rd(x, q), u && A && (1 !== p.rangeCount || p.anchorNode !== u.node || p.anchorOffset !== u.offset || p.focusNode !== A.node || p.focusOffset !== A.offset) && (C = C.createRange(), C.setStart(u.node, u.offset), p.removeAllRanges(), G > q ? (p.addRange(C), p.extend(A.node, A.offset)) : (C.setEnd(A.node, A.offset), p.addRange(C))))));\n      C = [];\n\n      for (p = x; p = p.parentNode;) {\n        1 === p.nodeType && C.push({\n          element: p,\n          left: p.scrollLeft,\n          top: p.scrollTop\n        });\n      }\n\n      \"function\" === typeof x.focus && x.focus();\n\n      for (x = 0; x < C.length; x++) {\n        p = C[x], p.element.scrollLeft = p.left, p.element.scrollTop = p.top;\n      }\n    }\n\n    Ae = null;\n    Hd = !!ze;\n    ze = null;\n    a.current = b;\n\n    for (V = d; null !== V;) {\n      d = !1;\n      x = void 0;\n\n      try {\n        for (C = c; null !== V;) {\n          var Fb = V.effectTag;\n\n          if (Fb & 36) {\n            var Gb = V.alternate;\n            p = V;\n            G = C;\n\n            switch (p.tag) {\n              case 0:\n              case 11:\n              case 15:\n                break;\n\n              case 1:\n                var Hc = p.stateNode;\n                if (p.effectTag & 4) if (null === Gb) Hc.componentDidMount();else {\n                  var ii = p.elementType === p.type ? Gb.memoizedProps : P(p.type, Gb.memoizedProps);\n                  Hc.componentDidUpdate(ii, Gb.memoizedState, Hc.__reactInternalSnapshotBeforeUpdate);\n                }\n                var Dg = p.updateQueue;\n                null !== Dg && uf(p, Dg, Hc, G);\n                break;\n\n              case 3:\n                var Eg = p.updateQueue;\n\n                if (null !== Eg) {\n                  q = null;\n                  if (null !== p.child) switch (p.child.tag) {\n                    case 5:\n                      q = p.child.stateNode;\n                      break;\n\n                    case 1:\n                      q = p.child.stateNode;\n                  }\n                  uf(p, Eg, q, G);\n                }\n\n                break;\n\n              case 5:\n                var ji = p.stateNode;\n                null === Gb && p.effectTag & 4 && Be(p.type, p.memoizedProps) && ji.focus();\n                break;\n\n              case 6:\n                break;\n\n              case 4:\n                break;\n\n              case 12:\n                break;\n\n              case 13:\n                break;\n\n              case 17:\n                break;\n\n              default:\n                t(\"163\");\n            }\n          }\n\n          if (Fb & 128) {\n            var Ic = V.ref;\n\n            if (null !== Ic) {\n              var Fg = V.stateNode;\n\n              switch (V.tag) {\n                case 5:\n                  var ce = Fg;\n                  break;\n\n                default:\n                  ce = Fg;\n              }\n\n              \"function\" === typeof Ic ? Ic(ce) : Ic.current = ce;\n            }\n          }\n\n          V = V.nextEffect;\n        }\n      } catch (db) {\n        d = !0, x = db;\n      }\n\n      d && (null === V ? t(\"178\") : void 0, Mg(V, x), null !== V && (V = V.nextEffect));\n    }\n\n    dh = gh = !1;\n    \"function\" === typeof Te && Te(b.stateNode);\n    Fb = b.expirationTime;\n    b = b.childExpirationTime;\n    b = b > Fb ? b : Fb;\n    0 === b && (Yg = null);\n    a.expirationTime = b;\n    a.finishedWork = null;\n  }\n\n  function Wg(a) {\n    null === Ah ? t(\"246\") : void 0;\n    Ah.expirationTime = 0;\n    Bh || (Bh = !0, Ch = a);\n  }\n\n  function Th(a, b) {\n    var c = Z;\n    Z = !0;\n\n    try {\n      return a(b);\n    } finally {\n      (Z = c) || X || Qh(1073741823, !1);\n    }\n  }\n\n  function Uh(a, b) {\n    if (Z && !Dh) {\n      Dh = !0;\n\n      try {\n        return a(b);\n      } finally {\n        Dh = !1;\n      }\n    }\n\n    return a(b);\n  }\n\n  function Wh(a, b, c) {\n    if (qh) return a(b, c);\n    Z || X || 0 === rh || (Qh(rh, !1), rh = 0);\n    var d = qh,\n        e = Z;\n    Z = qh = !0;\n\n    try {\n      return a(b, c);\n    } finally {\n      qh = d, (Z = e) || X || Qh(1073741823, !1);\n    }\n  }\n\n  function Xh(a, b, c, d, e) {\n    var f = b.current;\n\n    a: if (c) {\n      c = c._reactInternalFiber;\n\n      b: {\n        2 === kd(c) && 1 === c.tag ? void 0 : t(\"170\");\n        var g = c;\n\n        do {\n          switch (g.tag) {\n            case 3:\n              g = g.stateNode.context;\n              break b;\n\n            case 1:\n              if (M(g.type)) {\n                g = g.stateNode.__reactInternalMemoizedMergedChildContext;\n                break b;\n              }\n\n          }\n\n          g = g.return;\n        } while (null !== g);\n\n        t(\"171\");\n        g = void 0;\n      }\n\n      if (1 === c.tag) {\n        var h = c.type;\n\n        if (M(h)) {\n          c = Qe(c, h, g);\n          break a;\n        }\n      }\n\n      c = g;\n    } else c = Ke;\n\n    null === b.context ? b.context = c : b.pendingContext = c;\n    b = e;\n    e = nf(d);\n    e.payload = {\n      element: a\n    };\n    b = void 0 === b ? null : b;\n    null !== b && (e.callback = b);\n    Tf();\n    pf(f, e);\n    Uf(f, d);\n    return d;\n  }\n\n  function Yh(a, b, c, d) {\n    var e = b.current,\n        f = Rf();\n    e = Sf(f, e);\n    return Xh(a, b, c, e, d);\n  }\n\n  function Zh(a) {\n    a = a.current;\n    if (!a.child) return null;\n\n    switch (a.child.tag) {\n      case 5:\n        return a.child.stateNode;\n\n      default:\n        return a.child.stateNode;\n    }\n  }\n\n  function $h(a, b, c) {\n    var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n    return {\n      $$typeof: $b,\n      key: null == d ? null : \"\" + d,\n      children: a,\n      containerInfo: b,\n      implementation: c\n    };\n  }\n\n  Cb = function Cb(a, b, c) {\n    switch (b) {\n      case \"input\":\n        Cc(a, c);\n        b = c.name;\n\n        if (\"radio\" === c.type && null != b) {\n          for (c = a; c.parentNode;) {\n            c = c.parentNode;\n          }\n\n          c = c.querySelectorAll(\"input[name=\" + JSON.stringify(\"\" + b) + '][type=\"radio\"]');\n\n          for (b = 0; b < c.length; b++) {\n            var d = c[b];\n\n            if (d !== a && d.form === a.form) {\n              var e = La(d);\n              e ? void 0 : t(\"90\");\n              Wb(d);\n              Cc(d, e);\n            }\n          }\n        }\n\n        break;\n\n      case \"textarea\":\n        ie(a, c);\n        break;\n\n      case \"select\":\n        b = c.value, null != b && fe(a, !!c.multiple, b, !1);\n    }\n  };\n\n  function ai(a) {\n    var b = 1073741822 - 25 * (((1073741822 - Rf() + 500) / 25 | 0) + 1);\n    b >= bh && (b = bh - 1);\n    this._expirationTime = bh = b;\n    this._root = a;\n    this._callbacks = this._next = null;\n    this._hasChildren = this._didComplete = !1;\n    this._children = null;\n    this._defer = !0;\n  }\n\n  ai.prototype.render = function (a) {\n    this._defer ? void 0 : t(\"250\");\n    this._hasChildren = !0;\n    this._children = a;\n    var b = this._root._internalRoot,\n        c = this._expirationTime,\n        d = new bi();\n    Xh(a, b, null, c, d._onCommit);\n    return d;\n  };\n\n  ai.prototype.then = function (a) {\n    if (this._didComplete) a();else {\n      var b = this._callbacks;\n      null === b && (b = this._callbacks = []);\n      b.push(a);\n    }\n  };\n\n  ai.prototype.commit = function () {\n    var a = this._root._internalRoot,\n        b = a.firstBatch;\n    this._defer && null !== b ? void 0 : t(\"251\");\n\n    if (this._hasChildren) {\n      var c = this._expirationTime;\n\n      if (b !== this) {\n        this._hasChildren && (c = this._expirationTime = b._expirationTime, this.render(this._children));\n\n        for (var d = null, e = b; e !== this;) {\n          d = e, e = e._next;\n        }\n\n        null === d ? t(\"251\") : void 0;\n        d._next = e._next;\n        this._next = b;\n        a.firstBatch = this;\n      }\n\n      this._defer = !1;\n      Nh(a, c);\n      b = this._next;\n      this._next = null;\n      b = a.firstBatch = b;\n      null !== b && b._hasChildren && b.render(b._children);\n    } else this._next = null, this._defer = !1;\n  };\n\n  ai.prototype._onComplete = function () {\n    if (!this._didComplete) {\n      this._didComplete = !0;\n      var a = this._callbacks;\n      if (null !== a) for (var b = 0; b < a.length; b++) {\n        (0, a[b])();\n      }\n    }\n  };\n\n  function bi() {\n    this._callbacks = null;\n    this._didCommit = !1;\n    this._onCommit = this._onCommit.bind(this);\n  }\n\n  bi.prototype.then = function (a) {\n    if (this._didCommit) a();else {\n      var b = this._callbacks;\n      null === b && (b = this._callbacks = []);\n      b.push(a);\n    }\n  };\n\n  bi.prototype._onCommit = function () {\n    if (!this._didCommit) {\n      this._didCommit = !0;\n      var a = this._callbacks;\n      if (null !== a) for (var b = 0; b < a.length; b++) {\n        var c = a[b];\n        \"function\" !== typeof c ? t(\"191\", c) : void 0;\n        c();\n      }\n    }\n  };\n\n  function ci(a, b, c) {\n    b = N(3, null, null, b ? 3 : 0);\n    a = {\n      current: b,\n      containerInfo: a,\n      pendingChildren: null,\n      pingCache: null,\n      earliestPendingTime: 0,\n      latestPendingTime: 0,\n      earliestSuspendedTime: 0,\n      latestSuspendedTime: 0,\n      latestPingedTime: 0,\n      didError: !1,\n      pendingCommitExpirationTime: 0,\n      finishedWork: null,\n      timeoutHandle: -1,\n      context: null,\n      pendingContext: null,\n      hydrate: c,\n      nextExpirationTimeToWorkOn: 0,\n      expirationTime: 0,\n      firstBatch: null,\n      nextScheduledRoot: null\n    };\n    this._internalRoot = b.stateNode = a;\n  }\n\n  ci.prototype.render = function (a, b) {\n    var c = this._internalRoot,\n        d = new bi();\n    b = void 0 === b ? null : b;\n    null !== b && d.then(b);\n    Yh(a, c, null, d._onCommit);\n    return d;\n  };\n\n  ci.prototype.unmount = function (a) {\n    var b = this._internalRoot,\n        c = new bi();\n    a = void 0 === a ? null : a;\n    null !== a && c.then(a);\n    Yh(null, b, null, c._onCommit);\n    return c;\n  };\n\n  ci.prototype.legacy_renderSubtreeIntoContainer = function (a, b, c) {\n    var d = this._internalRoot,\n        e = new bi();\n    c = void 0 === c ? null : c;\n    null !== c && e.then(c);\n    Yh(b, d, a, e._onCommit);\n    return e;\n  };\n\n  ci.prototype.createBatch = function () {\n    var a = new ai(this),\n        b = a._expirationTime,\n        c = this._internalRoot,\n        d = c.firstBatch;\n    if (null === d) c.firstBatch = a, a._next = null;else {\n      for (c = null; null !== d && d._expirationTime >= b;) {\n        c = d, d = d._next;\n      }\n\n      a._next = d;\n      null !== c && (c._next = a);\n    }\n    return a;\n  };\n\n  function di(a) {\n    return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || \" react-mount-point-unstable \" !== a.nodeValue));\n  }\n\n  Kb = Th;\n  Lb = Wh;\n\n  Mb = function Mb() {\n    X || 0 === rh || (Qh(rh, !1), rh = 0);\n  };\n\n  function ei(a, b) {\n    b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute(\"data-reactroot\")));\n    if (!b) for (var c; c = a.lastChild;) {\n      a.removeChild(c);\n    }\n    return new ci(a, !1, b);\n  }\n\n  function fi(a, b, c, d, e) {\n    di(c) ? void 0 : t(\"200\");\n    var f = c._reactRootContainer;\n\n    if (f) {\n      if (\"function\" === typeof e) {\n        var g = e;\n\n        e = function e() {\n          var a = Zh(f._internalRoot);\n          g.call(a);\n        };\n      }\n\n      null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n    } else {\n      f = c._reactRootContainer = ei(c, d);\n\n      if (\"function\" === typeof e) {\n        var h = e;\n\n        e = function e() {\n          var a = Zh(f._internalRoot);\n          h.call(a);\n        };\n      }\n\n      Uh(function () {\n        null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n      });\n    }\n\n    return Zh(f._internalRoot);\n  }\n\n  function gi(a, b) {\n    var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n    di(b) ? void 0 : t(\"200\");\n    return $h(a, b, null, c);\n  }\n\n  var ki = {\n    createPortal: gi,\n    findDOMNode: function findDOMNode(a) {\n      if (null == a) return null;\n      if (1 === a.nodeType) return a;\n      var b = a._reactInternalFiber;\n      void 0 === b && (\"function\" === typeof a.render ? t(\"188\") : t(\"268\", Object.keys(a)));\n      a = nd(b);\n      a = null === a ? null : a.stateNode;\n      return a;\n    },\n    hydrate: function hydrate(a, b, c) {\n      return fi(null, a, b, !0, c);\n    },\n    render: function render(a, b, c) {\n      return fi(null, a, b, !1, c);\n    },\n    unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(a, b, c, d) {\n      null == a || void 0 === a._reactInternalFiber ? t(\"38\") : void 0;\n      return fi(a, b, c, !1, d);\n    },\n    unmountComponentAtNode: function unmountComponentAtNode(a) {\n      di(a) ? void 0 : t(\"40\");\n      return a._reactRootContainer ? (Uh(function () {\n        fi(null, null, a, !1, function () {\n          a._reactRootContainer = null;\n        });\n      }), !0) : !1;\n    },\n    unstable_createPortal: function unstable_createPortal() {\n      return gi.apply(void 0, arguments);\n    },\n    unstable_batchedUpdates: Th,\n    unstable_interactiveUpdates: Wh,\n    flushSync: function flushSync(a, b) {\n      X ? t(\"187\") : void 0;\n      var c = Z;\n      Z = !0;\n\n      try {\n        return wh(a, b);\n      } finally {\n        Z = c, Qh(1073741823, !1);\n      }\n    },\n    unstable_createRoot: hi,\n    unstable_flushControlled: function unstable_flushControlled(a) {\n      var b = Z;\n      Z = !0;\n\n      try {\n        wh(a);\n      } finally {\n        (Z = b) || X || Qh(1073741823, !1);\n      }\n    },\n    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n      Events: [Ja, Ka, La, Ca.injectEventPluginsByName, qa, Ra, function (a) {\n        za(a, Qa);\n      }, Ib, Jb, Jd, Ea]\n    }\n  };\n\n  function hi(a, b) {\n    di(a) ? void 0 : t(\"299\", \"unstable_createRoot\");\n    return new ci(a, !0, null != b && !0 === b.hydrate);\n  }\n\n  (function (a) {\n    var b = a.findFiberByHostInstance;\n    return We(n({}, a, {\n      overrideProps: null,\n      findHostInstanceByFiber: function findHostInstanceByFiber(a) {\n        a = nd(a);\n        return null === a ? null : a.stateNode;\n      },\n      findFiberByHostInstance: function findFiberByHostInstance(a) {\n        return b ? b(a) : null;\n      }\n    }));\n  })({\n    findFiberByHostInstance: Ia,\n    bundleType: 0,\n    version: \"16.7.0\",\n    rendererPackageName: \"react-dom\"\n  });\n\n  var li = {\n    default: ki\n  },\n      mi = li && ki || li;\n  module.exports = mi.default || mi;\n  /***/\n},\n/* 26 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (global) {\n    /** @license React v0.12.0\n    * scheduler.production.min.js\n    *\n    * Copyright (c) Facebook, Inc. and its affiliates.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    */\n    Object.defineProperty(exports, \"__esModule\", {\n      value: !0\n    });\n    var c = null,\n        f = !1,\n        h = 3,\n        k = -1,\n        l = -1,\n        m = !1,\n        n = !1;\n\n    function p() {\n      if (!m) {\n        var a = c.expirationTime;\n        n ? q() : n = !0;\n\n        _r2(t, a);\n      }\n    }\n\n    function u() {\n      var a = c,\n          b = c.next;\n      if (c === b) c = null;else {\n        var d = c.previous;\n        c = d.next = b;\n        b.previous = d;\n      }\n      a.next = a.previous = null;\n      d = a.callback;\n      b = a.expirationTime;\n      a = a.priorityLevel;\n      var e = h,\n          Q = l;\n      h = a;\n      l = b;\n\n      try {\n        var g = d();\n      } finally {\n        h = e, l = Q;\n      }\n\n      if (\"function\" === typeof g) if (g = {\n        callback: g,\n        priorityLevel: a,\n        expirationTime: b,\n        next: null,\n        previous: null\n      }, null === c) c = g.next = g.previous = g;else {\n        d = null;\n        a = c;\n\n        do {\n          if (a.expirationTime >= b) {\n            d = a;\n            break;\n          }\n\n          a = a.next;\n        } while (a !== c);\n\n        null === d ? d = c : d === c && (c = g, p());\n        b = d.previous;\n        b.next = d.previous = g;\n        g.next = d;\n        g.previous = b;\n      }\n    }\n\n    function v() {\n      if (-1 === k && null !== c && 1 === c.priorityLevel) {\n        m = !0;\n\n        try {\n          do {\n            u();\n          } while (null !== c && 1 === c.priorityLevel);\n        } finally {\n          m = !1, null !== c ? p() : n = !1;\n        }\n      }\n    }\n\n    function t(a) {\n      m = !0;\n      var b = f;\n      f = a;\n\n      try {\n        if (a) for (; null !== c;) {\n          var d = exports.unstable_now();\n\n          if (c.expirationTime <= d) {\n            do {\n              u();\n            } while (null !== c && c.expirationTime <= d);\n          } else break;\n        } else if (null !== c) {\n          do {\n            u();\n          } while (null !== c && !w());\n        }\n      } finally {\n        m = !1, f = b, null !== c ? p() : n = !1, v();\n      }\n    }\n\n    var x = Date,\n        y = \"function\" === typeof setTimeout ? setTimeout : void 0,\n        z = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n        A = \"function\" === typeof requestAnimationFrame ? requestAnimationFrame : void 0,\n        B = \"function\" === typeof cancelAnimationFrame ? cancelAnimationFrame : void 0,\n        C,\n        D;\n\n    function E(a) {\n      C = A(function (b) {\n        z(D);\n        a(b);\n      });\n      D = y(function () {\n        B(C);\n        a(exports.unstable_now());\n      }, 100);\n    }\n\n    if (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n      var F = performance;\n\n      exports.unstable_now = function () {\n        return F.now();\n      };\n    } else exports.unstable_now = function () {\n      return x.now();\n    };\n\n    var _r2,\n        q,\n        w,\n        G = null;\n\n    \"undefined\" !== typeof window ? G = window : \"undefined\" !== typeof global && (G = global);\n\n    if (G && G._schedMock) {\n      var H = G._schedMock;\n      _r2 = H[0];\n      q = H[1];\n      w = H[2];\n      exports.unstable_now = H[3];\n    } else if (\"undefined\" === typeof window || \"function\" !== typeof MessageChannel) {\n      var I = null,\n          J = function J(a) {\n        if (null !== I) try {\n          I(a);\n        } finally {\n          I = null;\n        }\n      };\n\n      _r2 = function r(a) {\n        null !== I ? setTimeout(_r2, 0, a) : (I = a, setTimeout(J, 0, !1));\n      };\n\n      q = function q() {\n        I = null;\n      };\n\n      w = function w() {\n        return !1;\n      };\n    } else {\n      \"undefined\" !== typeof console && (\"function\" !== typeof A && console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"), \"function\" !== typeof B && console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));\n      var K = null,\n          L = !1,\n          M = -1,\n          N = !1,\n          O = !1,\n          P = 0,\n          R = 33,\n          S = 33;\n\n      w = function w() {\n        return P <= exports.unstable_now();\n      };\n\n      var T = new MessageChannel(),\n          U = T.port2;\n\n      T.port1.onmessage = function () {\n        L = !1;\n        var a = K,\n            b = M;\n        K = null;\n        M = -1;\n        var d = exports.unstable_now(),\n            e = !1;\n        if (0 >= P - d) if (-1 !== b && b <= d) e = !0;else {\n          N || (N = !0, E(V));\n          K = a;\n          M = b;\n          return;\n        }\n\n        if (null !== a) {\n          O = !0;\n\n          try {\n            a(e);\n          } finally {\n            O = !1;\n          }\n        }\n      };\n\n      var V = function V(a) {\n        if (null !== K) {\n          E(V);\n          var b = a - P + S;\n          b < S && R < S ? (8 > b && (b = 8), S = b < R ? R : b) : R = b;\n          P = a + S;\n          L || (L = !0, U.postMessage(void 0));\n        } else N = !1;\n      };\n\n      _r2 = function _r2(a, b) {\n        K = a;\n        M = b;\n        O || 0 > b ? U.postMessage(void 0) : N || (N = !0, E(V));\n      };\n\n      q = function q() {\n        K = null;\n        L = !1;\n        M = -1;\n      };\n    }\n\n    exports.unstable_ImmediatePriority = 1;\n    exports.unstable_UserBlockingPriority = 2;\n    exports.unstable_NormalPriority = 3;\n    exports.unstable_IdlePriority = 5;\n    exports.unstable_LowPriority = 4;\n\n    exports.unstable_runWithPriority = function (a, b) {\n      switch (a) {\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n          break;\n\n        default:\n          a = 3;\n      }\n\n      var d = h,\n          e = k;\n      h = a;\n      k = exports.unstable_now();\n\n      try {\n        return b();\n      } finally {\n        h = d, k = e, v();\n      }\n    };\n\n    exports.unstable_scheduleCallback = function (a, b) {\n      var d = -1 !== k ? k : exports.unstable_now();\n      if (\"object\" === typeof b && null !== b && \"number\" === typeof b.timeout) b = d + b.timeout;else switch (h) {\n        case 1:\n          b = d + -1;\n          break;\n\n        case 2:\n          b = d + 250;\n          break;\n\n        case 5:\n          b = d + 1073741823;\n          break;\n\n        case 4:\n          b = d + 1E4;\n          break;\n\n        default:\n          b = d + 5E3;\n      }\n      a = {\n        callback: a,\n        priorityLevel: h,\n        expirationTime: b,\n        next: null,\n        previous: null\n      };\n      if (null === c) c = a.next = a.previous = a, p();else {\n        d = null;\n        var e = c;\n\n        do {\n          if (e.expirationTime > b) {\n            d = e;\n            break;\n          }\n\n          e = e.next;\n        } while (e !== c);\n\n        null === d ? d = c : d === c && (c = a, p());\n        b = d.previous;\n        b.next = d.previous = a;\n        a.next = d;\n        a.previous = b;\n      }\n      return a;\n    };\n\n    exports.unstable_cancelCallback = function (a) {\n      var b = a.next;\n\n      if (null !== b) {\n        if (b === a) c = null;else {\n          a === c && (c = b);\n          var d = a.previous;\n          d.next = b;\n          b.previous = d;\n        }\n        a.next = a.previous = null;\n      }\n    };\n\n    exports.unstable_wrapCallback = function (a) {\n      var b = h;\n      return function () {\n        var d = h,\n            e = k;\n        h = b;\n        k = exports.unstable_now();\n\n        try {\n          return a.apply(this, arguments);\n        } finally {\n          h = d, k = e, v();\n        }\n      };\n    };\n\n    exports.unstable_getCurrentPriorityLevel = function () {\n      return h;\n    };\n\n    exports.unstable_shouldYield = function () {\n      return !f && (null !== c && c.expirationTime < l || w());\n    };\n\n    exports.unstable_continueExecution = function () {\n      null !== c && p();\n    };\n\n    exports.unstable_pauseExecution = function () {};\n\n    exports.unstable_getFirstCallbackNode = function () {\n      return c;\n    };\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(11));\n  /***/\n},\n/* 27 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process, global) {\n    /** @license React v0.12.0\n    * scheduler.development.js\n    *\n    * Copyright (c) Facebook, Inc. and its affiliates.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    */\n    if (process.env.NODE_ENV !== \"production\") {\n      (function () {\n        'use strict';\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        }); // Helps identify side effects in begin-phase lifecycle hooks and setState reducers:\n        // In some cases, StrictMode should also double-render lifecycles.\n        // This can be confusing for tests though,\n        // And it can be bad for performance in production.\n        // This feature flag can be used to control the behavior:\n        // To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n        // replay the begin phase of a failed component inside invokeGuardedCallback.\n        // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\n        // Gather advanced timing metrics for Profiler subtrees.\n        // Trace which interactions trigger each commit.\n        // Only used in www builds.\n        // TODO: true? Here it might just be false.\n        // Only used in www builds.\n\n        var enableSchedulerDebugging = true; // Only used in www builds.\n        // React Fire: prevent the value and checked attributes from syncing\n        // with their related DOM properties\n        // These APIs will no longer be \"unstable\" in the upcoming 16.7 release,\n        // Control this behavior with a flag to support 16.6 minor releases in the meanwhile.\n\n        /* eslint-disable no-var */\n        // TODO: Use symbols?\n\n        var ImmediatePriority = 1;\n        var UserBlockingPriority = 2;\n        var NormalPriority = 3;\n        var LowPriority = 4;\n        var IdlePriority = 5; // Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n        // Math.pow(2, 30) - 1\n        // 0b111111111111111111111111111111\n\n        var maxSigned31BitInt = 1073741823; // Times out immediately\n\n        var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out\n\n        var USER_BLOCKING_PRIORITY = 250;\n        var NORMAL_PRIORITY_TIMEOUT = 5000;\n        var LOW_PRIORITY_TIMEOUT = 10000; // Never times out\n\n        var IDLE_PRIORITY = maxSigned31BitInt; // Callbacks are stored as a circular, doubly linked list.\n\n        var firstCallbackNode = null;\n        var currentDidTimeout = false; // Pausing the scheduler is useful for debugging.\n\n        var isSchedulerPaused = false;\n        var currentPriorityLevel = NormalPriority;\n        var currentEventStartTime = -1;\n        var currentExpirationTime = -1; // This is set when a callback is being executed, to prevent re-entrancy.\n\n        var isExecutingCallback = false;\n        var isHostCallbackScheduled = false;\n        var hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\n\n        function ensureHostCallbackIsScheduled() {\n          if (isExecutingCallback) {\n            // Don't schedule work yet; wait until the next time we yield.\n            return;\n          } // Schedule the host callback using the earliest expiration in the list.\n\n\n          var expirationTime = firstCallbackNode.expirationTime;\n\n          if (!isHostCallbackScheduled) {\n            isHostCallbackScheduled = true;\n          } else {\n            // Cancel the existing host callback.\n            cancelHostCallback();\n          }\n\n          _requestHostCallback(flushWork, expirationTime);\n        }\n\n        function flushFirstCallback() {\n          var flushedNode = firstCallbackNode; // Remove the node from the list before calling the callback. That way the\n          // list is in a consistent state even if the callback throws.\n\n          var next = firstCallbackNode.next;\n\n          if (firstCallbackNode === next) {\n            // This is the last callback in the list.\n            firstCallbackNode = null;\n            next = null;\n          } else {\n            var lastCallbackNode = firstCallbackNode.previous;\n            firstCallbackNode = lastCallbackNode.next = next;\n            next.previous = lastCallbackNode;\n          }\n\n          flushedNode.next = flushedNode.previous = null; // Now it's safe to call the callback.\n\n          var callback = flushedNode.callback;\n          var expirationTime = flushedNode.expirationTime;\n          var priorityLevel = flushedNode.priorityLevel;\n          var previousPriorityLevel = currentPriorityLevel;\n          var previousExpirationTime = currentExpirationTime;\n          currentPriorityLevel = priorityLevel;\n          currentExpirationTime = expirationTime;\n          var continuationCallback;\n\n          try {\n            continuationCallback = callback();\n          } finally {\n            currentPriorityLevel = previousPriorityLevel;\n            currentExpirationTime = previousExpirationTime;\n          } // A callback may return a continuation. The continuation should be scheduled\n          // with the same priority and expiration as the just-finished callback.\n\n\n          if (typeof continuationCallback === 'function') {\n            var continuationNode = {\n              callback: continuationCallback,\n              priorityLevel: priorityLevel,\n              expirationTime: expirationTime,\n              next: null,\n              previous: null\n            }; // Insert the new callback into the list, sorted by its expiration. This is\n            // almost the same as the code in `scheduleCallback`, except the callback\n            // is inserted into the list *before* callbacks of equal expiration instead\n            // of after.\n\n            if (firstCallbackNode === null) {\n              // This is the first callback in the list.\n              firstCallbackNode = continuationNode.next = continuationNode.previous = continuationNode;\n            } else {\n              var nextAfterContinuation = null;\n              var node = firstCallbackNode;\n\n              do {\n                if (node.expirationTime >= expirationTime) {\n                  // This callback expires at or after the continuation. We will insert\n                  // the continuation *before* this callback.\n                  nextAfterContinuation = node;\n                  break;\n                }\n\n                node = node.next;\n              } while (node !== firstCallbackNode);\n\n              if (nextAfterContinuation === null) {\n                // No equal or lower priority callback was found, which means the new\n                // callback is the lowest priority callback in the list.\n                nextAfterContinuation = firstCallbackNode;\n              } else if (nextAfterContinuation === firstCallbackNode) {\n                // The new callback is the highest priority callback in the list.\n                firstCallbackNode = continuationNode;\n                ensureHostCallbackIsScheduled();\n              }\n\n              var previous = nextAfterContinuation.previous;\n              previous.next = nextAfterContinuation.previous = continuationNode;\n              continuationNode.next = nextAfterContinuation;\n              continuationNode.previous = previous;\n            }\n          }\n        }\n\n        function flushImmediateWork() {\n          if ( // Confirm we've exited the outer most event handler\n          currentEventStartTime === -1 && firstCallbackNode !== null && firstCallbackNode.priorityLevel === ImmediatePriority) {\n            isExecutingCallback = true;\n\n            try {\n              do {\n                flushFirstCallback();\n              } while ( // Keep flushing until there are no more immediate callbacks\n              firstCallbackNode !== null && firstCallbackNode.priorityLevel === ImmediatePriority);\n            } finally {\n              isExecutingCallback = false;\n\n              if (firstCallbackNode !== null) {\n                // There's still work remaining. Request another callback.\n                ensureHostCallbackIsScheduled();\n              } else {\n                isHostCallbackScheduled = false;\n              }\n            }\n          }\n        }\n\n        function flushWork(didTimeout) {\n          // Exit right away if we're currently paused\n          if (enableSchedulerDebugging && isSchedulerPaused) {\n            return;\n          }\n\n          isExecutingCallback = true;\n          var previousDidTimeout = currentDidTimeout;\n          currentDidTimeout = didTimeout;\n\n          try {\n            if (didTimeout) {\n              // Flush all the expired callbacks without yielding.\n              while (firstCallbackNode !== null && !(enableSchedulerDebugging && isSchedulerPaused)) {\n                // TODO Wrap i nfeature flag\n                // Read the current time. Flush all the callbacks that expire at or\n                // earlier than that time. Then read the current time again and repeat.\n                // This optimizes for as few performance.now calls as possible.\n                var currentTime = exports.unstable_now();\n\n                if (firstCallbackNode.expirationTime <= currentTime) {\n                  do {\n                    flushFirstCallback();\n                  } while (firstCallbackNode !== null && firstCallbackNode.expirationTime <= currentTime && !(enableSchedulerDebugging && isSchedulerPaused));\n\n                  continue;\n                }\n\n                break;\n              }\n            } else {\n              // Keep flushing callbacks until we run out of time in the frame.\n              if (firstCallbackNode !== null) {\n                do {\n                  if (enableSchedulerDebugging && isSchedulerPaused) {\n                    break;\n                  }\n\n                  flushFirstCallback();\n                } while (firstCallbackNode !== null && !shouldYieldToHost());\n              }\n            }\n          } finally {\n            isExecutingCallback = false;\n            currentDidTimeout = previousDidTimeout;\n\n            if (firstCallbackNode !== null) {\n              // There's still work remaining. Request another callback.\n              ensureHostCallbackIsScheduled();\n            } else {\n              isHostCallbackScheduled = false;\n            } // Before exiting, flush all the immediate work that was scheduled.\n\n\n            flushImmediateWork();\n          }\n        }\n\n        function unstable_runWithPriority(priorityLevel, eventHandler) {\n          switch (priorityLevel) {\n            case ImmediatePriority:\n            case UserBlockingPriority:\n            case NormalPriority:\n            case LowPriority:\n            case IdlePriority:\n              break;\n\n            default:\n              priorityLevel = NormalPriority;\n          }\n\n          var previousPriorityLevel = currentPriorityLevel;\n          var previousEventStartTime = currentEventStartTime;\n          currentPriorityLevel = priorityLevel;\n          currentEventStartTime = exports.unstable_now();\n\n          try {\n            return eventHandler();\n          } finally {\n            currentPriorityLevel = previousPriorityLevel;\n            currentEventStartTime = previousEventStartTime; // Before exiting, flush all the immediate work that was scheduled.\n\n            flushImmediateWork();\n          }\n        }\n\n        function unstable_wrapCallback(callback) {\n          var parentPriorityLevel = currentPriorityLevel;\n          return function () {\n            // This is a fork of runWithPriority, inlined for performance.\n            var previousPriorityLevel = currentPriorityLevel;\n            var previousEventStartTime = currentEventStartTime;\n            currentPriorityLevel = parentPriorityLevel;\n            currentEventStartTime = exports.unstable_now();\n\n            try {\n              return callback.apply(this, arguments);\n            } finally {\n              currentPriorityLevel = previousPriorityLevel;\n              currentEventStartTime = previousEventStartTime;\n              flushImmediateWork();\n            }\n          };\n        }\n\n        function unstable_scheduleCallback(callback, deprecated_options) {\n          var startTime = currentEventStartTime !== -1 ? currentEventStartTime : exports.unstable_now();\n          var expirationTime;\n\n          if (typeof deprecated_options === 'object' && deprecated_options !== null && typeof deprecated_options.timeout === 'number') {\n            // FIXME: Remove this branch once we lift expiration times out of React.\n            expirationTime = startTime + deprecated_options.timeout;\n          } else {\n            switch (currentPriorityLevel) {\n              case ImmediatePriority:\n                expirationTime = startTime + IMMEDIATE_PRIORITY_TIMEOUT;\n                break;\n\n              case UserBlockingPriority:\n                expirationTime = startTime + USER_BLOCKING_PRIORITY;\n                break;\n\n              case IdlePriority:\n                expirationTime = startTime + IDLE_PRIORITY;\n                break;\n\n              case LowPriority:\n                expirationTime = startTime + LOW_PRIORITY_TIMEOUT;\n                break;\n\n              case NormalPriority:\n              default:\n                expirationTime = startTime + NORMAL_PRIORITY_TIMEOUT;\n            }\n          }\n\n          var newNode = {\n            callback: callback,\n            priorityLevel: currentPriorityLevel,\n            expirationTime: expirationTime,\n            next: null,\n            previous: null\n          }; // Insert the new callback into the list, ordered first by expiration, then\n          // by insertion. So the new callback is inserted any other callback with\n          // equal expiration.\n\n          if (firstCallbackNode === null) {\n            // This is the first callback in the list.\n            firstCallbackNode = newNode.next = newNode.previous = newNode;\n            ensureHostCallbackIsScheduled();\n          } else {\n            var next = null;\n            var node = firstCallbackNode;\n\n            do {\n              if (node.expirationTime > expirationTime) {\n                // The new callback expires before this one.\n                next = node;\n                break;\n              }\n\n              node = node.next;\n            } while (node !== firstCallbackNode);\n\n            if (next === null) {\n              // No callback with a later expiration was found, which means the new\n              // callback has the latest expiration in the list.\n              next = firstCallbackNode;\n            } else if (next === firstCallbackNode) {\n              // The new callback has the earliest expiration in the entire list.\n              firstCallbackNode = newNode;\n              ensureHostCallbackIsScheduled();\n            }\n\n            var previous = next.previous;\n            previous.next = next.previous = newNode;\n            newNode.next = next;\n            newNode.previous = previous;\n          }\n\n          return newNode;\n        }\n\n        function unstable_pauseExecution() {\n          isSchedulerPaused = true;\n        }\n\n        function unstable_continueExecution() {\n          isSchedulerPaused = false;\n\n          if (firstCallbackNode !== null) {\n            ensureHostCallbackIsScheduled();\n          }\n        }\n\n        function unstable_getFirstCallbackNode() {\n          return firstCallbackNode;\n        }\n\n        function unstable_cancelCallback(callbackNode) {\n          var next = callbackNode.next;\n\n          if (next === null) {\n            // Already cancelled.\n            return;\n          }\n\n          if (next === callbackNode) {\n            // This is the only scheduled callback. Clear the list.\n            firstCallbackNode = null;\n          } else {\n            // Remove the callback from its position in the list.\n            if (callbackNode === firstCallbackNode) {\n              firstCallbackNode = next;\n            }\n\n            var previous = callbackNode.previous;\n            previous.next = next;\n            next.previous = previous;\n          }\n\n          callbackNode.next = callbackNode.previous = null;\n        }\n\n        function unstable_getCurrentPriorityLevel() {\n          return currentPriorityLevel;\n        }\n\n        function unstable_shouldYield() {\n          return !currentDidTimeout && (firstCallbackNode !== null && firstCallbackNode.expirationTime < currentExpirationTime || shouldYieldToHost());\n        } // The remaining code is essentially a polyfill for requestIdleCallback. It\n        // works by scheduling a requestAnimationFrame, storing the time for the start\n        // of the frame, then scheduling a postMessage which gets scheduled after paint.\n        // Within the postMessage handler do as much work as possible until time + frame\n        // rate. By separating the idle call into a separate event tick we ensure that\n        // layout, paint and other browser work is counted against the available time.\n        // The frame rate is dynamically adjusted.\n        // We capture a local reference to any global, in case it gets polyfilled after\n        // this module is initially evaluated. We want to be using a\n        // consistent implementation.\n\n\n        var localDate = Date; // This initialization code may run even on server environments if a component\n        // just imports ReactDOM (e.g. for findDOMNode). Some environments might not\n        // have setTimeout or clearTimeout. However, we always expect them to be defined\n        // on the client. https://github.com/facebook/react/pull/13088\n\n        var localSetTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;\n        var localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined; // We don't expect either of these to necessarily be defined, but we will error\n        // later if they are missing on the client.\n\n        var localRequestAnimationFrame = typeof requestAnimationFrame === 'function' ? requestAnimationFrame : undefined;\n        var localCancelAnimationFrame = typeof cancelAnimationFrame === 'function' ? cancelAnimationFrame : undefined; // requestAnimationFrame does not run when the tab is in the background. If\n        // we're backgrounded we prefer for that work to happen so that the page\n        // continues to load in the background. So we also schedule a 'setTimeout' as\n        // a fallback.\n        // TODO: Need a better heuristic for backgrounded work.\n\n        var ANIMATION_FRAME_TIMEOUT = 100;\n        var rAFID;\n        var rAFTimeoutID;\n\n        var requestAnimationFrameWithTimeout = function requestAnimationFrameWithTimeout(callback) {\n          // schedule rAF and also a setTimeout\n          rAFID = localRequestAnimationFrame(function (timestamp) {\n            // cancel the setTimeout\n            localClearTimeout(rAFTimeoutID);\n            callback(timestamp);\n          });\n          rAFTimeoutID = localSetTimeout(function () {\n            // cancel the requestAnimationFrame\n            localCancelAnimationFrame(rAFID);\n            callback(exports.unstable_now());\n          }, ANIMATION_FRAME_TIMEOUT);\n        };\n\n        if (hasNativePerformanceNow) {\n          var Performance = performance;\n\n          exports.unstable_now = function () {\n            return Performance.now();\n          };\n        } else {\n          exports.unstable_now = function () {\n            return localDate.now();\n          };\n        }\n\n        var _requestHostCallback;\n\n        var cancelHostCallback;\n        var shouldYieldToHost;\n        var globalValue = null;\n\n        if (typeof window !== 'undefined') {\n          globalValue = window;\n        } else if (typeof global !== 'undefined') {\n          globalValue = global;\n        }\n\n        if (globalValue && globalValue._schedMock) {\n          // Dynamic injection, only for testing purposes.\n          var globalImpl = globalValue._schedMock;\n          _requestHostCallback = globalImpl[0];\n          cancelHostCallback = globalImpl[1];\n          shouldYieldToHost = globalImpl[2];\n          exports.unstable_now = globalImpl[3];\n        } else if ( // If Scheduler runs in a non-DOM environment, it falls back to a naive\n        // implementation using setTimeout.\n        typeof window === 'undefined' || // Check if MessageChannel is supported, too.\n        typeof MessageChannel !== 'function') {\n          // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,\n          // fallback to a naive implementation.\n          var _callback = null;\n\n          var _flushCallback = function _flushCallback(didTimeout) {\n            if (_callback !== null) {\n              try {\n                _callback(didTimeout);\n              } finally {\n                _callback = null;\n              }\n            }\n          };\n\n          _requestHostCallback = function requestHostCallback(cb, ms) {\n            if (_callback !== null) {\n              // Protect against re-entrancy.\n              setTimeout(_requestHostCallback, 0, cb);\n            } else {\n              _callback = cb;\n              setTimeout(_flushCallback, 0, false);\n            }\n          };\n\n          cancelHostCallback = function cancelHostCallback() {\n            _callback = null;\n          };\n\n          shouldYieldToHost = function shouldYieldToHost() {\n            return false;\n          };\n        } else {\n          if (typeof console !== 'undefined') {\n            // TODO: Remove fb.me link\n            if (typeof localRequestAnimationFrame !== 'function') {\n              console.error(\"This browser doesn't support requestAnimationFrame. \" + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');\n            }\n\n            if (typeof localCancelAnimationFrame !== 'function') {\n              console.error(\"This browser doesn't support cancelAnimationFrame. \" + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');\n            }\n          }\n\n          var scheduledHostCallback = null;\n          var isMessageEventScheduled = false;\n          var timeoutTime = -1;\n          var isAnimationFrameScheduled = false;\n          var isFlushingHostCallback = false;\n          var frameDeadline = 0; // We start out assuming that we run at 30fps but then the heuristic tracking\n          // will adjust this value to a faster fps if we get more frequent animation\n          // frames.\n\n          var previousFrameTime = 33;\n          var activeFrameTime = 33;\n\n          shouldYieldToHost = function shouldYieldToHost() {\n            return frameDeadline <= exports.unstable_now();\n          }; // We use the postMessage trick to defer idle work until after the repaint.\n\n\n          var channel = new MessageChannel();\n          var port = channel.port2;\n\n          channel.port1.onmessage = function (event) {\n            isMessageEventScheduled = false;\n            var prevScheduledCallback = scheduledHostCallback;\n            var prevTimeoutTime = timeoutTime;\n            scheduledHostCallback = null;\n            timeoutTime = -1;\n            var currentTime = exports.unstable_now();\n            var didTimeout = false;\n\n            if (frameDeadline - currentTime <= 0) {\n              // There's no time left in this idle period. Check if the callback has\n              // a timeout and whether it's been exceeded.\n              if (prevTimeoutTime !== -1 && prevTimeoutTime <= currentTime) {\n                // Exceeded the timeout. Invoke the callback even though there's no\n                // time left.\n                didTimeout = true;\n              } else {\n                // No timeout.\n                if (!isAnimationFrameScheduled) {\n                  // Schedule another animation callback so we retry later.\n                  isAnimationFrameScheduled = true;\n                  requestAnimationFrameWithTimeout(animationTick);\n                } // Exit without invoking the callback.\n\n\n                scheduledHostCallback = prevScheduledCallback;\n                timeoutTime = prevTimeoutTime;\n                return;\n              }\n            }\n\n            if (prevScheduledCallback !== null) {\n              isFlushingHostCallback = true;\n\n              try {\n                prevScheduledCallback(didTimeout);\n              } finally {\n                isFlushingHostCallback = false;\n              }\n            }\n          };\n\n          var animationTick = function animationTick(rafTime) {\n            if (scheduledHostCallback !== null) {\n              // Eagerly schedule the next animation callback at the beginning of the\n              // frame. If the scheduler queue is not empty at the end of the frame, it\n              // will continue flushing inside that callback. If the queue *is* empty,\n              // then it will exit immediately. Posting the callback at the start of the\n              // frame ensures it's fired within the earliest possible frame. If we\n              // waited until the end of the frame to post the callback, we risk the\n              // browser skipping a frame and not firing the callback until the frame\n              // after that.\n              requestAnimationFrameWithTimeout(animationTick);\n            } else {\n              // No pending work. Exit.\n              isAnimationFrameScheduled = false;\n              return;\n            }\n\n            var nextFrameTime = rafTime - frameDeadline + activeFrameTime;\n\n            if (nextFrameTime < activeFrameTime && previousFrameTime < activeFrameTime) {\n              if (nextFrameTime < 8) {\n                // Defensive coding. We don't support higher frame rates than 120hz.\n                // If the calculated frame time gets lower than 8, it is probably a bug.\n                nextFrameTime = 8;\n              } // If one frame goes long, then the next one can be short to catch up.\n              // If two frames are short in a row, then that's an indication that we\n              // actually have a higher frame rate than what we're currently optimizing.\n              // We adjust our heuristic dynamically accordingly. For example, if we're\n              // running on 120hz display or 90hz VR display.\n              // Take the max of the two in case one of them was an anomaly due to\n              // missed frame deadlines.\n\n\n              activeFrameTime = nextFrameTime < previousFrameTime ? previousFrameTime : nextFrameTime;\n            } else {\n              previousFrameTime = nextFrameTime;\n            }\n\n            frameDeadline = rafTime + activeFrameTime;\n\n            if (!isMessageEventScheduled) {\n              isMessageEventScheduled = true;\n              port.postMessage(undefined);\n            }\n          };\n\n          _requestHostCallback = function _requestHostCallback(callback, absoluteTimeout) {\n            scheduledHostCallback = callback;\n            timeoutTime = absoluteTimeout;\n\n            if (isFlushingHostCallback || absoluteTimeout < 0) {\n              // Don't wait for the next frame. Continue working ASAP, in a new event.\n              port.postMessage(undefined);\n            } else if (!isAnimationFrameScheduled) {\n              // If rAF didn't already schedule one, we need to schedule a frame.\n              // TODO: If this rAF doesn't materialize because the browser throttles, we\n              // might want to still have setTimeout trigger rIC as a backup to ensure\n              // that we keep performing work.\n              isAnimationFrameScheduled = true;\n              requestAnimationFrameWithTimeout(animationTick);\n            }\n          };\n\n          cancelHostCallback = function cancelHostCallback() {\n            scheduledHostCallback = null;\n            isMessageEventScheduled = false;\n            timeoutTime = -1;\n          };\n        }\n\n        exports.unstable_ImmediatePriority = ImmediatePriority;\n        exports.unstable_UserBlockingPriority = UserBlockingPriority;\n        exports.unstable_NormalPriority = NormalPriority;\n        exports.unstable_IdlePriority = IdlePriority;\n        exports.unstable_LowPriority = LowPriority;\n        exports.unstable_runWithPriority = unstable_runWithPriority;\n        exports.unstable_scheduleCallback = unstable_scheduleCallback;\n        exports.unstable_cancelCallback = unstable_cancelCallback;\n        exports.unstable_wrapCallback = unstable_wrapCallback;\n        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;\n        exports.unstable_shouldYield = unstable_shouldYield;\n        exports.unstable_continueExecution = unstable_continueExecution;\n        exports.unstable_pauseExecution = unstable_pauseExecution;\n        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;\n      })();\n    }\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0), __webpack_require__(11));\n  /***/\n},\n/* 28 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    /** @license React v16.7.0\n    * react-dom.development.js\n    *\n    * Copyright (c) Facebook, Inc. and its affiliates.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    */\n    if (process.env.NODE_ENV !== \"production\") {\n      (function () {\n        'use strict';\n\n        var React = __webpack_require__(1);\n\n        var _assign = __webpack_require__(6);\n\n        var checkPropTypes = __webpack_require__(8);\n\n        var scheduler = __webpack_require__(10);\n\n        var tracing = __webpack_require__(29);\n        /**\n         * Use invariant() to assert state which your program assumes to be true.\n         *\n         * Provide sprintf-style format (only %s is supported) and arguments\n         * to provide information about what broke and what you were\n         * expecting.\n         *\n         * The invariant message will be stripped in production, but the invariant\n         * will remain to ensure logic does not differ in production.\n         */\n\n\n        var validateFormat = function validateFormat() {};\n\n        {\n          validateFormat = function validateFormat(format) {\n            if (format === undefined) {\n              throw new Error('invariant requires an error message argument');\n            }\n          };\n        }\n\n        function invariant(condition, format, a, b, c, d, e, f) {\n          validateFormat(format);\n\n          if (!condition) {\n            var error = void 0;\n\n            if (format === undefined) {\n              error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n            } else {\n              var args = [a, b, c, d, e, f];\n              var argIndex = 0;\n              error = new Error(format.replace(/%s/g, function () {\n                return args[argIndex++];\n              }));\n              error.name = 'Invariant Violation';\n            }\n\n            error.framesToPop = 1; // we don't care about invariant's own frame\n\n            throw error;\n          }\n        } // Relying on the `invariant()` implementation lets us\n        // preserve the format and params in the www builds.\n\n\n        !React ? invariant(false, 'ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.') : void 0;\n\n        var invokeGuardedCallbackImpl = function invokeGuardedCallbackImpl(name, func, context, a, b, c, d, e, f) {\n          var funcArgs = Array.prototype.slice.call(arguments, 3);\n\n          try {\n            func.apply(context, funcArgs);\n          } catch (error) {\n            this.onError(error);\n          }\n        };\n\n        {\n          // In DEV mode, we swap out invokeGuardedCallback for a special version\n          // that plays more nicely with the browser's DevTools. The idea is to preserve\n          // \"Pause on exceptions\" behavior. Because React wraps all user-provided\n          // functions in invokeGuardedCallback, and the production version of\n          // invokeGuardedCallback uses a try-catch, all user exceptions are treated\n          // like caught exceptions, and the DevTools won't pause unless the developer\n          // takes the extra step of enabling pause on caught exceptions. This is\n          // untintuitive, though, because even though React has caught the error, from\n          // the developer's perspective, the error is uncaught.\n          //\n          // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n          // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n          // DOM node, and call the user-provided callback from inside an event handler\n          // for that fake event. If the callback throws, the error is \"captured\" using\n          // a global event handler. But because the error happens in a different\n          // event loop context, it does not interrupt the normal program flow.\n          // Effectively, this gives us try-catch behavior without actually using\n          // try-catch. Neat!\n          // Check that the browser supports the APIs we need to implement our special\n          // DEV version of invokeGuardedCallback\n          if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n            var fakeNode = document.createElement('react');\n\n            var invokeGuardedCallbackDev = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {\n              // If document doesn't exist we know for sure we will crash in this method\n              // when we call document.createEvent(). However this can cause confusing\n              // errors: https://github.com/facebookincubator/create-react-app/issues/3482\n              // So we preemptively throw with a better message instead.\n              !(typeof document !== 'undefined') ? invariant(false, 'The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.') : void 0;\n              var evt = document.createEvent('Event'); // Keeps track of whether the user-provided callback threw an error. We\n              // set this to true at the beginning, then set it to false right after\n              // calling the function. If the function errors, `didError` will never be\n              // set to false. This strategy works even if the browser is flaky and\n              // fails to call our global error handler, because it doesn't rely on\n              // the error event at all.\n\n              var didError = true; // Keeps track of the value of window.event so that we can reset it\n              // during the callback to let user code access window.event in the\n              // browsers that support it.\n\n              var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event\n              // dispatching: https://github.com/facebook/react/issues/13688\n\n              var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event'); // Create an event handler for our fake event. We will synchronously\n              // dispatch our fake event using `dispatchEvent`. Inside the handler, we\n              // call the user-provided callback.\n\n              var funcArgs = Array.prototype.slice.call(arguments, 3);\n\n              function callCallback() {\n                // We immediately remove the callback from event listeners so that\n                // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\n                // nested call would trigger the fake event handlers of any call higher\n                // in the stack.\n                fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the\n                // window.event assignment in both IE <= 10 as they throw an error\n                // \"Member not found\" in strict mode, and in Firefox which does not\n                // support window.event.\n\n                if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {\n                  window.event = windowEvent;\n                }\n\n                func.apply(context, funcArgs);\n                didError = false;\n              } // Create a global error event handler. We use this to capture the value\n              // that was thrown. It's possible that this error handler will fire more\n              // than once; for example, if non-React code also calls `dispatchEvent`\n              // and a handler for that event throws. We should be resilient to most of\n              // those cases. Even if our error event handler fires more than once, the\n              // last error event is always used. If the callback actually does error,\n              // we know that the last error event is the correct one, because it's not\n              // possible for anything else to have happened in between our callback\n              // erroring and the code that follows the `dispatchEvent` call below. If\n              // the callback doesn't error, but the error event was fired, we know to\n              // ignore it because `didError` will be false, as described above.\n\n\n              var error = void 0; // Use this to track whether the error event is ever called.\n\n              var didSetError = false;\n              var isCrossOriginError = false;\n\n              function handleWindowError(event) {\n                error = event.error;\n                didSetError = true;\n\n                if (error === null && event.colno === 0 && event.lineno === 0) {\n                  isCrossOriginError = true;\n                }\n\n                if (event.defaultPrevented) {\n                  // Some other error handler has prevented default.\n                  // Browsers silence the error report if this happens.\n                  // We'll remember this to later decide whether to log it or not.\n                  if (error != null && typeof error === 'object') {\n                    try {\n                      error._suppressLogging = true;\n                    } catch (inner) {// Ignore.\n                    }\n                  }\n                }\n              } // Create a fake event type.\n\n\n              var evtType = 'react-' + (name ? name : 'invokeguardedcallback'); // Attach our event handlers\n\n              window.addEventListener('error', handleWindowError);\n              fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function\n              // errors, it will trigger our global error handler.\n\n              evt.initEvent(evtType, false, false);\n              fakeNode.dispatchEvent(evt);\n\n              if (windowEventDescriptor) {\n                Object.defineProperty(window, 'event', windowEventDescriptor);\n              }\n\n              if (didError) {\n                if (!didSetError) {\n                  // The callback errored, but the error event never fired.\n                  error = new Error('An error was thrown inside one of your components, but React ' + \"doesn't know what it was. This is likely due to browser \" + 'flakiness. React does its best to preserve the \"Pause on ' + 'exceptions\" behavior of the DevTools, which requires some ' + \"DEV-mode only tricks. It's possible that these don't work in \" + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');\n                } else if (isCrossOriginError) {\n                  error = new Error(\"A cross-origin error was thrown. React doesn't have access to \" + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');\n                }\n\n                this.onError(error);\n              } // Remove our event listeners\n\n\n              window.removeEventListener('error', handleWindowError);\n            };\n\n            invokeGuardedCallbackImpl = invokeGuardedCallbackDev;\n          }\n        }\n        var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl; // Used by Fiber to simulate a try-catch.\n\n        var hasError = false;\n        var caughtError = null; // Used by event system to capture/rethrow the first error.\n\n        var hasRethrowError = false;\n        var rethrowError = null;\n        var reporter = {\n          onError: function onError(error) {\n            hasError = true;\n            caughtError = error;\n          }\n        };\n        /**\n         * Call a function while guarding against errors that happens within it.\n         * Returns an error if it throws, otherwise null.\n         *\n         * In production, this is implemented using a try-catch. The reason we don't\n         * use a try-catch directly is so that we can swap out a different\n         * implementation in DEV mode.\n         *\n         * @param {String} name of the guard to use for logging or debugging\n         * @param {Function} func The function to invoke\n         * @param {*} context The context to use when calling the function\n         * @param {...*} args Arguments for function\n         */\n\n        function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {\n          hasError = false;\n          caughtError = null;\n          invokeGuardedCallbackImpl$1.apply(reporter, arguments);\n        }\n        /**\n         * Same as invokeGuardedCallback, but instead of returning an error, it stores\n         * it in a global so it can be rethrown by `rethrowCaughtError` later.\n         * TODO: See if caughtError and rethrowError can be unified.\n         *\n         * @param {String} name of the guard to use for logging or debugging\n         * @param {Function} func The function to invoke\n         * @param {*} context The context to use when calling the function\n         * @param {...*} args Arguments for function\n         */\n\n\n        function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {\n          invokeGuardedCallback.apply(this, arguments);\n\n          if (hasError) {\n            var error = clearCaughtError();\n\n            if (!hasRethrowError) {\n              hasRethrowError = true;\n              rethrowError = error;\n            }\n          }\n        }\n        /**\n         * During execution of guarded functions we will capture the first error which\n         * we will rethrow to be handled by the top level error handler.\n         */\n\n\n        function rethrowCaughtError() {\n          if (hasRethrowError) {\n            var error = rethrowError;\n            hasRethrowError = false;\n            rethrowError = null;\n            throw error;\n          }\n        }\n\n        function hasCaughtError() {\n          return hasError;\n        }\n\n        function clearCaughtError() {\n          if (hasError) {\n            var error = caughtError;\n            hasError = false;\n            caughtError = null;\n            return error;\n          } else {\n            invariant(false, 'clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.');\n          }\n        }\n        /**\n         * Injectable ordering of event plugins.\n         */\n\n\n        var eventPluginOrder = null;\n        /**\n         * Injectable mapping from names to event plugin modules.\n         */\n\n        var namesToPlugins = {};\n        /**\n         * Recomputes the plugin list using the injected plugins and plugin ordering.\n         *\n         * @private\n         */\n\n        function recomputePluginOrdering() {\n          if (!eventPluginOrder) {\n            // Wait until an `eventPluginOrder` is injected.\n            return;\n          }\n\n          for (var pluginName in namesToPlugins) {\n            var pluginModule = namesToPlugins[pluginName];\n            var pluginIndex = eventPluginOrder.indexOf(pluginName);\n            !(pluginIndex > -1) ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : void 0;\n\n            if (plugins[pluginIndex]) {\n              continue;\n            }\n\n            !pluginModule.extractEvents ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : void 0;\n            plugins[pluginIndex] = pluginModule;\n            var publishedEvents = pluginModule.eventTypes;\n\n            for (var eventName in publishedEvents) {\n              !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : void 0;\n            }\n          }\n        }\n        /**\n         * Publishes an event so that it can be dispatched by the supplied plugin.\n         *\n         * @param {object} dispatchConfig Dispatch configuration for the event.\n         * @param {object} PluginModule Plugin publishing the event.\n         * @return {boolean} True if the event was successfully published.\n         * @private\n         */\n\n\n        function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {\n          !!eventNameDispatchConfigs.hasOwnProperty(eventName) ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : void 0;\n          eventNameDispatchConfigs[eventName] = dispatchConfig;\n          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n\n          if (phasedRegistrationNames) {\n            for (var phaseName in phasedRegistrationNames) {\n              if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n                var phasedRegistrationName = phasedRegistrationNames[phaseName];\n                publishRegistrationName(phasedRegistrationName, pluginModule, eventName);\n              }\n            }\n\n            return true;\n          } else if (dispatchConfig.registrationName) {\n            publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);\n            return true;\n          }\n\n          return false;\n        }\n        /**\n         * Publishes a registration name that is used to identify dispatched events.\n         *\n         * @param {string} registrationName Registration name to add.\n         * @param {object} PluginModule Plugin publishing the event.\n         * @private\n         */\n\n\n        function publishRegistrationName(registrationName, pluginModule, eventName) {\n          !!registrationNameModules[registrationName] ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : void 0;\n          registrationNameModules[registrationName] = pluginModule;\n          registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;\n          {\n            var lowerCasedName = registrationName.toLowerCase();\n            possibleRegistrationNames[lowerCasedName] = registrationName;\n\n            if (registrationName === 'onDoubleClick') {\n              possibleRegistrationNames.ondblclick = registrationName;\n            }\n          }\n        }\n        /**\n         * Registers plugins so that they can extract and dispatch events.\n         *\n         * @see {EventPluginHub}\n         */\n\n        /**\n         * Ordered list of injected plugins.\n         */\n\n\n        var plugins = [];\n        /**\n         * Mapping from event name to dispatch config\n         */\n\n        var eventNameDispatchConfigs = {};\n        /**\n         * Mapping from registration name to plugin module\n         */\n\n        var registrationNameModules = {};\n        /**\n         * Mapping from registration name to event name\n         */\n\n        var registrationNameDependencies = {};\n        /**\n         * Mapping from lowercase registration names to the properly cased version,\n         * used to warn in the case of missing event handlers. Available\n         * only in true.\n         * @type {Object}\n         */\n\n        var possibleRegistrationNames = {}; // Trust the developer to only use possibleRegistrationNames in true\n\n        /**\n         * Injects an ordering of plugins (by plugin name). This allows the ordering\n         * to be decoupled from injection of the actual plugins so that ordering is\n         * always deterministic regardless of packaging, on-the-fly injection, etc.\n         *\n         * @param {array} InjectedEventPluginOrder\n         * @internal\n         * @see {EventPluginHub.injection.injectEventPluginOrder}\n         */\n\n        function injectEventPluginOrder(injectedEventPluginOrder) {\n          !!eventPluginOrder ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : void 0; // Clone the ordering so it cannot be dynamically mutated.\n\n          eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n          recomputePluginOrdering();\n        }\n        /**\n         * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n         * in the ordering injected by `injectEventPluginOrder`.\n         *\n         * Plugins can be injected as part of page initialization or on-the-fly.\n         *\n         * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n         * @internal\n         * @see {EventPluginHub.injection.injectEventPluginsByName}\n         */\n\n\n        function injectEventPluginsByName(injectedNamesToPlugins) {\n          var isOrderingDirty = false;\n\n          for (var pluginName in injectedNamesToPlugins) {\n            if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n              continue;\n            }\n\n            var pluginModule = injectedNamesToPlugins[pluginName];\n\n            if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {\n              !!namesToPlugins[pluginName] ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : void 0;\n              namesToPlugins[pluginName] = pluginModule;\n              isOrderingDirty = true;\n            }\n          }\n\n          if (isOrderingDirty) {\n            recomputePluginOrdering();\n          }\n        }\n        /**\n         * Similar to invariant but only logs a warning if the condition is not met.\n         * This can be used to log issues in development environments in critical\n         * paths. Removing the logging code for production environments will keep the\n         * same logic and follow the same code paths.\n         */\n\n\n        var warningWithoutStack = function warningWithoutStack() {};\n\n        {\n          warningWithoutStack = function warningWithoutStack(condition, format) {\n            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n              args[_key - 2] = arguments[_key];\n            }\n\n            if (format === undefined) {\n              throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');\n            }\n\n            if (args.length > 8) {\n              // Check before the condition to catch violations early.\n              throw new Error('warningWithoutStack() currently supports at most 8 arguments.');\n            }\n\n            if (condition) {\n              return;\n            }\n\n            if (typeof console !== 'undefined') {\n              var argsWithFormat = args.map(function (item) {\n                return '' + item;\n              });\n              argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n              // breaks IE9: https://github.com/facebook/react/issues/13610\n\n              Function.prototype.apply.call(console.error, console, argsWithFormat);\n            }\n\n            try {\n              // --- Welcome to debugging React ---\n              // This error was thrown as a convenience so that you can use this stack\n              // to find the callsite that caused this warning to fire.\n              var argIndex = 0;\n              var message = 'Warning: ' + format.replace(/%s/g, function () {\n                return args[argIndex++];\n              });\n              throw new Error(message);\n            } catch (x) {}\n          };\n        }\n        var warningWithoutStack$1 = warningWithoutStack;\n        var getFiberCurrentPropsFromNode = null;\n        var getInstanceFromNode = null;\n        var getNodeFromInstance = null;\n\n        function setComponentTree(getFiberCurrentPropsFromNodeImpl, getInstanceFromNodeImpl, getNodeFromInstanceImpl) {\n          getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;\n          getInstanceFromNode = getInstanceFromNodeImpl;\n          getNodeFromInstance = getNodeFromInstanceImpl;\n          {\n            !(getNodeFromInstance && getInstanceFromNode) ? warningWithoutStack$1(false, 'EventPluginUtils.setComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;\n          }\n        }\n\n        var validateEventDispatches = void 0;\n        {\n          validateEventDispatches = function validateEventDispatches(event) {\n            var dispatchListeners = event._dispatchListeners;\n            var dispatchInstances = event._dispatchInstances;\n            var listenersIsArr = Array.isArray(dispatchListeners);\n            var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n            var instancesIsArr = Array.isArray(dispatchInstances);\n            var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n            !(instancesIsArr === listenersIsArr && instancesLen === listenersLen) ? warningWithoutStack$1(false, 'EventPluginUtils: Invalid `event`.') : void 0;\n          };\n        }\n        /**\n         * Dispatch the event to the listener.\n         * @param {SyntheticEvent} event SyntheticEvent to handle\n         * @param {function} listener Application-level callback\n         * @param {*} inst Internal component instance\n         */\n\n        function executeDispatch(event, listener, inst) {\n          var type = event.type || 'unknown-event';\n          event.currentTarget = getNodeFromInstance(inst);\n          invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\n          event.currentTarget = null;\n        }\n        /**\n         * Standard/simple iteration through an event's collected dispatches.\n         */\n\n\n        function executeDispatchesInOrder(event) {\n          var dispatchListeners = event._dispatchListeners;\n          var dispatchInstances = event._dispatchInstances;\n          {\n            validateEventDispatches(event);\n          }\n\n          if (Array.isArray(dispatchListeners)) {\n            for (var i = 0; i < dispatchListeners.length; i++) {\n              if (event.isPropagationStopped()) {\n                break;\n              } // Listeners and Instances are two parallel arrays that are always in sync.\n\n\n              executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);\n            }\n          } else if (dispatchListeners) {\n            executeDispatch(event, dispatchListeners, dispatchInstances);\n          }\n\n          event._dispatchListeners = null;\n          event._dispatchInstances = null;\n        }\n        /**\n         * @see executeDispatchesInOrderStopAtTrueImpl\n         */\n\n        /**\n         * Execution of a \"direct\" dispatch - there must be at most one dispatch\n         * accumulated on the event or it is considered an error. It doesn't really make\n         * sense for an event with multiple dispatches (bubbled) to keep track of the\n         * return values at each dispatch execution, but it does tend to make sense when\n         * dealing with \"direct\" dispatches.\n         *\n         * @return {*} The return value of executing the single dispatch.\n         */\n\n        /**\n         * @param {SyntheticEvent} event\n         * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n         */\n\n        /**\n         * Accumulates items that must not be null or undefined into the first one. This\n         * is used to conserve memory by avoiding array allocations, and thus sacrifices\n         * API cleanness. Since `current` can be null before being passed in and not\n         * null after this function, make sure to assign it back to `current`:\n         *\n         * `a = accumulateInto(a, b);`\n         *\n         * This API should be sparingly used. Try `accumulate` for something cleaner.\n         *\n         * @return {*|array<*>} An accumulation of items.\n         */\n\n\n        function accumulateInto(current, next) {\n          !(next != null) ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : void 0;\n\n          if (current == null) {\n            return next;\n          } // Both are not empty. Warning: Never call x.concat(y) when you are not\n          // certain that x is an Array (x could be a string with concat method).\n\n\n          if (Array.isArray(current)) {\n            if (Array.isArray(next)) {\n              current.push.apply(current, next);\n              return current;\n            }\n\n            current.push(next);\n            return current;\n          }\n\n          if (Array.isArray(next)) {\n            // A bit too dangerous to mutate `next`.\n            return [current].concat(next);\n          }\n\n          return [current, next];\n        }\n        /**\n         * @param {array} arr an \"accumulation\" of items which is either an Array or\n         * a single item. Useful when paired with the `accumulate` module. This is a\n         * simple utility that allows us to reason about a collection of items, but\n         * handling the case when there is exactly one item (and we do not need to\n         * allocate an array).\n         * @param {function} cb Callback invoked with each element or a collection.\n         * @param {?} [scope] Scope used as `this` in a callback.\n         */\n\n\n        function forEachAccumulated(arr, cb, scope) {\n          if (Array.isArray(arr)) {\n            arr.forEach(cb, scope);\n          } else if (arr) {\n            cb.call(scope, arr);\n          }\n        }\n        /**\n         * Internal queue of events that have accumulated their dispatches and are\n         * waiting to have their dispatches executed.\n         */\n\n\n        var eventQueue = null;\n        /**\n         * Dispatches an event and releases it back into the pool, unless persistent.\n         *\n         * @param {?object} event Synthetic event to be dispatched.\n         * @private\n         */\n\n        var executeDispatchesAndRelease = function executeDispatchesAndRelease(event) {\n          if (event) {\n            executeDispatchesInOrder(event);\n\n            if (!event.isPersistent()) {\n              event.constructor.release(event);\n            }\n          }\n        };\n\n        var executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {\n          return executeDispatchesAndRelease(e);\n        };\n\n        function isInteractive(tag) {\n          return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n        }\n\n        function shouldPreventMouseEvent(name, type, props) {\n          switch (name) {\n            case 'onClick':\n            case 'onClickCapture':\n            case 'onDoubleClick':\n            case 'onDoubleClickCapture':\n            case 'onMouseDown':\n            case 'onMouseDownCapture':\n            case 'onMouseMove':\n            case 'onMouseMoveCapture':\n            case 'onMouseUp':\n            case 'onMouseUpCapture':\n              return !!(props.disabled && isInteractive(type));\n\n            default:\n              return false;\n          }\n        }\n        /**\n         * This is a unified interface for event plugins to be installed and configured.\n         *\n         * Event plugins can implement the following properties:\n         *\n         *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n         *     Required. When a top-level event is fired, this method is expected to\n         *     extract synthetic events that will in turn be queued and dispatched.\n         *\n         *   `eventTypes` {object}\n         *     Optional, plugins that fire events must publish a mapping of registration\n         *     names that are used to register listeners. Values of this mapping must\n         *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n         *\n         *   `executeDispatch` {function(object, function, string)}\n         *     Optional, allows plugins to override how an event gets dispatched. By\n         *     default, the listener is simply invoked.\n         *\n         * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n         *\n         * @public\n         */\n\n        /**\n         * Methods for injecting dependencies.\n         */\n\n\n        var injection = {\n          /**\n           * @param {array} InjectedEventPluginOrder\n           * @public\n           */\n          injectEventPluginOrder: injectEventPluginOrder,\n\n          /**\n           * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n           */\n          injectEventPluginsByName: injectEventPluginsByName\n        };\n        /**\n         * @param {object} inst The instance, which is the source of events.\n         * @param {string} registrationName Name of listener (e.g. `onClick`).\n         * @return {?function} The stored callback.\n         */\n\n        function getListener(inst, registrationName) {\n          var listener = void 0; // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not\n          // live here; needs to be moved to a better place soon\n\n          var stateNode = inst.stateNode;\n\n          if (!stateNode) {\n            // Work in progress (ex: onload events in incremental mode).\n            return null;\n          }\n\n          var props = getFiberCurrentPropsFromNode(stateNode);\n\n          if (!props) {\n            // Work in progress.\n            return null;\n          }\n\n          listener = props[registrationName];\n\n          if (shouldPreventMouseEvent(registrationName, inst.type, props)) {\n            return null;\n          }\n\n          !(!listener || typeof listener === 'function') ? invariant(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener) : void 0;\n          return listener;\n        }\n        /**\n         * Allows registered plugins an opportunity to extract events from top-level\n         * native browser events.\n         *\n         * @return {*} An accumulation of synthetic events.\n         * @internal\n         */\n\n\n        function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n          var events = null;\n\n          for (var i = 0; i < plugins.length; i++) {\n            // Not every plugin in the ordering may be loaded at runtime.\n            var possiblePlugin = plugins[i];\n\n            if (possiblePlugin) {\n              var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n\n              if (extractedEvents) {\n                events = accumulateInto(events, extractedEvents);\n              }\n            }\n          }\n\n          return events;\n        }\n\n        function runEventsInBatch(events) {\n          if (events !== null) {\n            eventQueue = accumulateInto(eventQueue, events);\n          } // Set `eventQueue` to null before processing it so that we can tell if more\n          // events get enqueued while processing.\n\n\n          var processingEventQueue = eventQueue;\n          eventQueue = null;\n\n          if (!processingEventQueue) {\n            return;\n          }\n\n          forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n          !!eventQueue ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : void 0; // This would be a good time to rethrow if any of the event handlers threw.\n\n          rethrowCaughtError();\n        }\n\n        function runExtractedEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n          var events = extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n          runEventsInBatch(events);\n        }\n\n        var FunctionComponent = 0;\n        var ClassComponent = 1;\n        var IndeterminateComponent = 2; // Before we know whether it is function or class\n\n        var HostRoot = 3; // Root of a host tree. Could be nested inside another node.\n\n        var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\n\n        var HostComponent = 5;\n        var HostText = 6;\n        var Fragment = 7;\n        var Mode = 8;\n        var ContextConsumer = 9;\n        var ContextProvider = 10;\n        var ForwardRef = 11;\n        var Profiler = 12;\n        var SuspenseComponent = 13;\n        var MemoComponent = 14;\n        var SimpleMemoComponent = 15;\n        var LazyComponent = 16;\n        var IncompleteClassComponent = 17;\n        var randomKey = Math.random().toString(36).slice(2);\n        var internalInstanceKey = '__reactInternalInstance$' + randomKey;\n        var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;\n\n        function precacheFiberNode(hostInst, node) {\n          node[internalInstanceKey] = hostInst;\n        }\n        /**\n         * Given a DOM node, return the closest ReactDOMComponent or\n         * ReactDOMTextComponent instance ancestor.\n         */\n\n\n        function getClosestInstanceFromNode(node) {\n          if (node[internalInstanceKey]) {\n            return node[internalInstanceKey];\n          }\n\n          while (!node[internalInstanceKey]) {\n            if (node.parentNode) {\n              node = node.parentNode;\n            } else {\n              // Top of the tree. This node must not be part of a React tree (or is\n              // unmounted, potentially).\n              return null;\n            }\n          }\n\n          var inst = node[internalInstanceKey];\n\n          if (inst.tag === HostComponent || inst.tag === HostText) {\n            // In Fiber, this will always be the deepest root.\n            return inst;\n          }\n\n          return null;\n        }\n        /**\n         * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\n         * instance, or null if the node was not rendered by this React.\n         */\n\n\n        function getInstanceFromNode$1(node) {\n          var inst = node[internalInstanceKey];\n\n          if (inst) {\n            if (inst.tag === HostComponent || inst.tag === HostText) {\n              return inst;\n            } else {\n              return null;\n            }\n          }\n\n          return null;\n        }\n        /**\n         * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\n         * DOM node.\n         */\n\n\n        function getNodeFromInstance$1(inst) {\n          if (inst.tag === HostComponent || inst.tag === HostText) {\n            // In Fiber this, is just the state node right now. We assume it will be\n            // a host component or host text.\n            return inst.stateNode;\n          } // Without this first invariant, passing a non-DOM-component triggers the next\n          // invariant for a missing parent, which is super confusing.\n\n\n          invariant(false, 'getNodeFromInstance: Invalid argument.');\n        }\n\n        function getFiberCurrentPropsFromNode$1(node) {\n          return node[internalEventHandlersKey] || null;\n        }\n\n        function updateFiberProps(node, props) {\n          node[internalEventHandlersKey] = props;\n        }\n\n        function getParent(inst) {\n          do {\n            inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.\n            // That is depending on if we want nested subtrees (layers) to bubble\n            // events to their parent. We could also go through parentNode on the\n            // host node but that wouldn't work for React Native and doesn't let us\n            // do the portal feature.\n          } while (inst && inst.tag !== HostComponent);\n\n          if (inst) {\n            return inst;\n          }\n\n          return null;\n        }\n        /**\n         * Return the lowest common ancestor of A and B, or null if they are in\n         * different trees.\n         */\n\n\n        function getLowestCommonAncestor(instA, instB) {\n          var depthA = 0;\n\n          for (var tempA = instA; tempA; tempA = getParent(tempA)) {\n            depthA++;\n          }\n\n          var depthB = 0;\n\n          for (var tempB = instB; tempB; tempB = getParent(tempB)) {\n            depthB++;\n          } // If A is deeper, crawl up.\n\n\n          while (depthA - depthB > 0) {\n            instA = getParent(instA);\n            depthA--;\n          } // If B is deeper, crawl up.\n\n\n          while (depthB - depthA > 0) {\n            instB = getParent(instB);\n            depthB--;\n          } // Walk in lockstep until we find a match.\n\n\n          var depth = depthA;\n\n          while (depth--) {\n            if (instA === instB || instA === instB.alternate) {\n              return instA;\n            }\n\n            instA = getParent(instA);\n            instB = getParent(instB);\n          }\n\n          return null;\n        }\n        /**\n         * Return if A is an ancestor of B.\n         */\n\n        /**\n         * Return the parent instance of the passed-in instance.\n         */\n\n        /**\n         * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n         */\n\n\n        function traverseTwoPhase(inst, fn, arg) {\n          var path = [];\n\n          while (inst) {\n            path.push(inst);\n            inst = getParent(inst);\n          }\n\n          var i = void 0;\n\n          for (i = path.length; i-- > 0;) {\n            fn(path[i], 'captured', arg);\n          }\n\n          for (i = 0; i < path.length; i++) {\n            fn(path[i], 'bubbled', arg);\n          }\n        }\n        /**\n         * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n         * should would receive a `mouseEnter` or `mouseLeave` event.\n         *\n         * Does not invoke the callback on the nearest common ancestor because nothing\n         * \"entered\" or \"left\" that element.\n         */\n\n\n        function traverseEnterLeave(from, to, fn, argFrom, argTo) {\n          var common = from && to ? getLowestCommonAncestor(from, to) : null;\n          var pathFrom = [];\n\n          while (true) {\n            if (!from) {\n              break;\n            }\n\n            if (from === common) {\n              break;\n            }\n\n            var alternate = from.alternate;\n\n            if (alternate !== null && alternate === common) {\n              break;\n            }\n\n            pathFrom.push(from);\n            from = getParent(from);\n          }\n\n          var pathTo = [];\n\n          while (true) {\n            if (!to) {\n              break;\n            }\n\n            if (to === common) {\n              break;\n            }\n\n            var _alternate = to.alternate;\n\n            if (_alternate !== null && _alternate === common) {\n              break;\n            }\n\n            pathTo.push(to);\n            to = getParent(to);\n          }\n\n          for (var i = 0; i < pathFrom.length; i++) {\n            fn(pathFrom[i], 'bubbled', argFrom);\n          }\n\n          for (var _i = pathTo.length; _i-- > 0;) {\n            fn(pathTo[_i], 'captured', argTo);\n          }\n        }\n        /**\n         * Some event types have a notion of different registration names for different\n         * \"phases\" of propagation. This finds listeners by a given phase.\n         */\n\n\n        function listenerAtPhase(inst, event, propagationPhase) {\n          var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n          return getListener(inst, registrationName);\n        }\n        /**\n         * A small set of propagation patterns, each of which will accept a small amount\n         * of information, and generate a set of \"dispatch ready event objects\" - which\n         * are sets of events that have already been annotated with a set of dispatched\n         * listener functions/ids. The API is designed this way to discourage these\n         * propagation strategies from actually executing the dispatches, since we\n         * always want to collect the entire set of dispatches before executing even a\n         * single one.\n         */\n\n        /**\n         * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n         * here, allows us to not have to bind or create functions for each event.\n         * Mutating the event's members allows us to not have to create a wrapping\n         * \"dispatch\" object that pairs the event with the listener.\n         */\n\n\n        function accumulateDirectionalDispatches(inst, phase, event) {\n          {\n            !inst ? warningWithoutStack$1(false, 'Dispatching inst must not be null') : void 0;\n          }\n          var listener = listenerAtPhase(inst, event, phase);\n\n          if (listener) {\n            event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n            event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n          }\n        }\n        /**\n         * Collect dispatches (must be entirely collected before dispatching - see unit\n         * tests). Lazily allocate the array to conserve memory.  We must loop through\n         * each event and perform the traversal for each one. We cannot perform a\n         * single traversal for the entire collection of events because each event may\n         * have a different target.\n         */\n\n\n        function accumulateTwoPhaseDispatchesSingle(event) {\n          if (event && event.dispatchConfig.phasedRegistrationNames) {\n            traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n          }\n        }\n        /**\n         * Accumulates without regard to direction, does not look for phased\n         * registration names. Same as `accumulateDirectDispatchesSingle` but without\n         * requiring that the `dispatchMarker` be the same as the dispatched ID.\n         */\n\n\n        function accumulateDispatches(inst, ignoredDirection, event) {\n          if (inst && event && event.dispatchConfig.registrationName) {\n            var registrationName = event.dispatchConfig.registrationName;\n            var listener = getListener(inst, registrationName);\n\n            if (listener) {\n              event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n              event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n            }\n          }\n        }\n        /**\n         * Accumulates dispatches on an `SyntheticEvent`, but only for the\n         * `dispatchMarker`.\n         * @param {SyntheticEvent} event\n         */\n\n\n        function accumulateDirectDispatchesSingle(event) {\n          if (event && event.dispatchConfig.registrationName) {\n            accumulateDispatches(event._targetInst, null, event);\n          }\n        }\n\n        function accumulateTwoPhaseDispatches(events) {\n          forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n        }\n\n        function accumulateEnterLeaveDispatches(leave, enter, from, to) {\n          traverseEnterLeave(from, to, accumulateDispatches, leave, enter);\n        }\n\n        function accumulateDirectDispatches(events) {\n          forEachAccumulated(events, accumulateDirectDispatchesSingle);\n        }\n\n        var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement); // Do not uses the below two methods directly!\n        // Instead use constants exported from DOMTopLevelEventTypes in ReactDOM.\n        // (It is the only module that is allowed to access these methods.)\n\n        function unsafeCastStringToDOMTopLevelType(topLevelType) {\n          return topLevelType;\n        }\n\n        function unsafeCastDOMTopLevelTypeToString(topLevelType) {\n          return topLevelType;\n        }\n        /**\n         * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n         *\n         * @param {string} styleProp\n         * @param {string} eventName\n         * @returns {object}\n         */\n\n\n        function makePrefixMap(styleProp, eventName) {\n          var prefixes = {};\n          prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n          prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n          prefixes['Moz' + styleProp] = 'moz' + eventName;\n          return prefixes;\n        }\n        /**\n         * A list of event names to a configurable list of vendor prefixes.\n         */\n\n\n        var vendorPrefixes = {\n          animationend: makePrefixMap('Animation', 'AnimationEnd'),\n          animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n          animationstart: makePrefixMap('Animation', 'AnimationStart'),\n          transitionend: makePrefixMap('Transition', 'TransitionEnd')\n        };\n        /**\n         * Event names that have already been detected and prefixed (if applicable).\n         */\n\n        var prefixedEventNames = {};\n        /**\n         * Element to check for prefixes on.\n         */\n\n        var style = {};\n        /**\n         * Bootstrap if a DOM exists.\n         */\n\n        if (canUseDOM) {\n          style = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,\n          // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n          // style object but the events that fire will still be prefixed, so we need\n          // to check if the un-prefixed events are usable, and if not remove them from the map.\n\n          if (!('AnimationEvent' in window)) {\n            delete vendorPrefixes.animationend.animation;\n            delete vendorPrefixes.animationiteration.animation;\n            delete vendorPrefixes.animationstart.animation;\n          } // Same as above\n\n\n          if (!('TransitionEvent' in window)) {\n            delete vendorPrefixes.transitionend.transition;\n          }\n        }\n        /**\n         * Attempts to determine the correct vendor prefixed event name.\n         *\n         * @param {string} eventName\n         * @returns {string}\n         */\n\n\n        function getVendorPrefixedEventName(eventName) {\n          if (prefixedEventNames[eventName]) {\n            return prefixedEventNames[eventName];\n          } else if (!vendorPrefixes[eventName]) {\n            return eventName;\n          }\n\n          var prefixMap = vendorPrefixes[eventName];\n\n          for (var styleProp in prefixMap) {\n            if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n              return prefixedEventNames[eventName] = prefixMap[styleProp];\n            }\n          }\n\n          return eventName;\n        }\n        /**\n         * To identify top level events in ReactDOM, we use constants defined by this\n         * module. This is the only module that uses the unsafe* methods to express\n         * that the constants actually correspond to the browser event names. This lets\n         * us save some bundle size by avoiding a top level type -> event name map.\n         * The rest of ReactDOM code should import top level types from this file.\n         */\n\n\n        var TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');\n        var TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationend'));\n        var TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationiteration'));\n        var TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationstart'));\n        var TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');\n        var TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');\n        var TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType('canplaythrough');\n        var TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');\n        var TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');\n        var TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');\n        var TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');\n        var TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType('compositionend');\n        var TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType('compositionstart');\n        var TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType('compositionupdate');\n        var TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType('contextmenu');\n        var TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');\n        var TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');\n        var TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');\n        var TOP_AUX_CLICK = unsafeCastStringToDOMTopLevelType('auxclick');\n        var TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');\n        var TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');\n        var TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');\n        var TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');\n        var TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');\n        var TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');\n        var TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');\n        var TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');\n        var TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType('durationchange');\n        var TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');\n        var TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');\n        var TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');\n        var TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');\n        var TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');\n        var TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('gotpointercapture');\n        var TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');\n        var TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');\n        var TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');\n        var TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');\n        var TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');\n        var TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');\n        var TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');\n        var TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');\n        var TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType('loadedmetadata');\n        var TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('lostpointercapture');\n        var TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');\n        var TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');\n        var TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');\n        var TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');\n        var TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');\n        var TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');\n        var TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');\n        var TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');\n        var TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');\n        var TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType('pointercancel');\n        var TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType('pointerdown');\n        var TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType('pointermove');\n        var TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');\n        var TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType('pointerover');\n        var TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');\n        var TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');\n        var TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');\n        var TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');\n        var TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');\n        var TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');\n        var TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');\n        var TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType('selectionchange');\n        var TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');\n        var TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');\n        var TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');\n        var TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');\n        var TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');\n        var TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');\n        var TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType('touchcancel');\n        var TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');\n        var TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');\n        var TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');\n        var TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('transitionend'));\n        var TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType('volumechange');\n        var TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');\n        var TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel'); // List of events that need to be individually attached to media elements.\n        // Note that events in this list will *not* be listened to at the top level\n        // unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.\n\n        var mediaEventTypes = [TOP_ABORT, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_VOLUME_CHANGE, TOP_WAITING];\n\n        function getRawEventName(topLevelType) {\n          return unsafeCastDOMTopLevelTypeToString(topLevelType);\n        }\n        /**\n         * These variables store information about text content of a target node,\n         * allowing comparison of content before and after a given event.\n         *\n         * Identify the node where selection currently begins, then observe\n         * both its text content and its current position in the DOM. Since the\n         * browser may natively replace the target node during composition, we can\n         * use its position to find its replacement.\n         *\n         *\n         */\n\n\n        var root = null;\n        var startText = null;\n        var fallbackText = null;\n\n        function initialize(nativeEventTarget) {\n          root = nativeEventTarget;\n          startText = getText();\n          return true;\n        }\n\n        function reset() {\n          root = null;\n          startText = null;\n          fallbackText = null;\n        }\n\n        function getData() {\n          if (fallbackText) {\n            return fallbackText;\n          }\n\n          var start = void 0;\n          var startValue = startText;\n          var startLength = startValue.length;\n          var end = void 0;\n          var endValue = getText();\n          var endLength = endValue.length;\n\n          for (start = 0; start < startLength; start++) {\n            if (startValue[start] !== endValue[start]) {\n              break;\n            }\n          }\n\n          var minEnd = startLength - start;\n\n          for (end = 1; end <= minEnd; end++) {\n            if (startValue[startLength - end] !== endValue[endLength - end]) {\n              break;\n            }\n          }\n\n          var sliceTail = end > 1 ? 1 - end : undefined;\n          fallbackText = endValue.slice(start, sliceTail);\n          return fallbackText;\n        }\n\n        function getText() {\n          if ('value' in root) {\n            return root.value;\n          }\n\n          return root.textContent;\n        }\n        /* eslint valid-typeof: 0 */\n\n\n        var EVENT_POOL_SIZE = 10;\n        /**\n         * @interface Event\n         * @see http://www.w3.org/TR/DOM-Level-3-Events/\n         */\n\n        var EventInterface = {\n          type: null,\n          target: null,\n          // currentTarget is set when dispatching; no use in copying it here\n          currentTarget: function currentTarget() {\n            return null;\n          },\n          eventPhase: null,\n          bubbles: null,\n          cancelable: null,\n          timeStamp: function timeStamp(event) {\n            return event.timeStamp || Date.now();\n          },\n          defaultPrevented: null,\n          isTrusted: null\n        };\n\n        function functionThatReturnsTrue() {\n          return true;\n        }\n\n        function functionThatReturnsFalse() {\n          return false;\n        }\n        /**\n         * Synthetic events are dispatched by event plugins, typically in response to a\n         * top-level event delegation handler.\n         *\n         * These systems should generally use pooling to reduce the frequency of garbage\n         * collection. The system should check `isPersistent` to determine whether the\n         * event should be released into the pool after being dispatched. Users that\n         * need a persisted event should invoke `persist`.\n         *\n         * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n         * normalizing browser quirks. Subclasses do not necessarily have to implement a\n         * DOM interface; custom application-specific events can also subclass this.\n         *\n         * @param {object} dispatchConfig Configuration used to dispatch this event.\n         * @param {*} targetInst Marker identifying the event target.\n         * @param {object} nativeEvent Native browser event.\n         * @param {DOMEventTarget} nativeEventTarget Target node.\n         */\n\n\n        function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n          {\n            // these have a getter/setter for warnings\n            delete this.nativeEvent;\n            delete this.preventDefault;\n            delete this.stopPropagation;\n            delete this.isDefaultPrevented;\n            delete this.isPropagationStopped;\n          }\n          this.dispatchConfig = dispatchConfig;\n          this._targetInst = targetInst;\n          this.nativeEvent = nativeEvent;\n          var Interface = this.constructor.Interface;\n\n          for (var propName in Interface) {\n            if (!Interface.hasOwnProperty(propName)) {\n              continue;\n            }\n\n            {\n              delete this[propName]; // this has a getter/setter for warnings\n            }\n            var normalize = Interface[propName];\n\n            if (normalize) {\n              this[propName] = normalize(nativeEvent);\n            } else {\n              if (propName === 'target') {\n                this.target = nativeEventTarget;\n              } else {\n                this[propName] = nativeEvent[propName];\n              }\n            }\n          }\n\n          var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n\n          if (defaultPrevented) {\n            this.isDefaultPrevented = functionThatReturnsTrue;\n          } else {\n            this.isDefaultPrevented = functionThatReturnsFalse;\n          }\n\n          this.isPropagationStopped = functionThatReturnsFalse;\n          return this;\n        }\n\n        _assign(SyntheticEvent.prototype, {\n          preventDefault: function preventDefault() {\n            this.defaultPrevented = true;\n            var event = this.nativeEvent;\n\n            if (!event) {\n              return;\n            }\n\n            if (event.preventDefault) {\n              event.preventDefault();\n            } else if (typeof event.returnValue !== 'unknown') {\n              event.returnValue = false;\n            }\n\n            this.isDefaultPrevented = functionThatReturnsTrue;\n          },\n          stopPropagation: function stopPropagation() {\n            var event = this.nativeEvent;\n\n            if (!event) {\n              return;\n            }\n\n            if (event.stopPropagation) {\n              event.stopPropagation();\n            } else if (typeof event.cancelBubble !== 'unknown') {\n              // The ChangeEventPlugin registers a \"propertychange\" event for\n              // IE. This event does not support bubbling or cancelling, and\n              // any references to cancelBubble throw \"Member not found\".  A\n              // typeof check of \"unknown\" circumvents this issue (and is also\n              // IE specific).\n              event.cancelBubble = true;\n            }\n\n            this.isPropagationStopped = functionThatReturnsTrue;\n          },\n\n          /**\n           * We release all dispatched `SyntheticEvent`s after each event loop, adding\n           * them back into the pool. This allows a way to hold onto a reference that\n           * won't be added back into the pool.\n           */\n          persist: function persist() {\n            this.isPersistent = functionThatReturnsTrue;\n          },\n\n          /**\n           * Checks if this event should be released back into the pool.\n           *\n           * @return {boolean} True if this should not be released, false otherwise.\n           */\n          isPersistent: functionThatReturnsFalse,\n\n          /**\n           * `PooledClass` looks for `destructor` on each instance it releases.\n           */\n          destructor: function destructor() {\n            var Interface = this.constructor.Interface;\n\n            for (var propName in Interface) {\n              {\n                Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n              }\n            }\n\n            this.dispatchConfig = null;\n            this._targetInst = null;\n            this.nativeEvent = null;\n            this.isDefaultPrevented = functionThatReturnsFalse;\n            this.isPropagationStopped = functionThatReturnsFalse;\n            this._dispatchListeners = null;\n            this._dispatchInstances = null;\n            {\n              Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\n              Object.defineProperty(this, 'isDefaultPrevented', getPooledWarningPropertyDefinition('isDefaultPrevented', functionThatReturnsFalse));\n              Object.defineProperty(this, 'isPropagationStopped', getPooledWarningPropertyDefinition('isPropagationStopped', functionThatReturnsFalse));\n              Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', function () {}));\n              Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', function () {}));\n            }\n          }\n        });\n\n        SyntheticEvent.Interface = EventInterface;\n        /**\n         * Helper to reduce boilerplate when creating subclasses.\n         */\n\n        SyntheticEvent.extend = function (Interface) {\n          var Super = this;\n\n          var E = function E() {};\n\n          E.prototype = Super.prototype;\n          var prototype = new E();\n\n          function Class() {\n            return Super.apply(this, arguments);\n          }\n\n          _assign(prototype, Class.prototype);\n\n          Class.prototype = prototype;\n          Class.prototype.constructor = Class;\n          Class.Interface = _assign({}, Super.Interface, Interface);\n          Class.extend = Super.extend;\n          addEventPoolingTo(Class);\n          return Class;\n        };\n\n        addEventPoolingTo(SyntheticEvent);\n        /**\n         * Helper to nullify syntheticEvent instance properties when destructing\n         *\n         * @param {String} propName\n         * @param {?object} getVal\n         * @return {object} defineProperty object\n         */\n\n        function getPooledWarningPropertyDefinition(propName, getVal) {\n          var isFunction = typeof getVal === 'function';\n          return {\n            configurable: true,\n            set: set,\n            get: get\n          };\n\n          function set(val) {\n            var action = isFunction ? 'setting the method' : 'setting the property';\n            warn(action, 'This is effectively a no-op');\n            return val;\n          }\n\n          function get() {\n            var action = isFunction ? 'accessing the method' : 'accessing the property';\n            var result = isFunction ? 'This is a no-op function' : 'This is set to null';\n            warn(action, result);\n            return getVal;\n          }\n\n          function warn(action, result) {\n            var warningCondition = false;\n            !warningCondition ? warningWithoutStack$1(false, \"This synthetic event is reused for performance reasons. If you're seeing this, \" + \"you're %s `%s` on a released/nullified synthetic event. %s. \" + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;\n          }\n        }\n\n        function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {\n          var EventConstructor = this;\n\n          if (EventConstructor.eventPool.length) {\n            var instance = EventConstructor.eventPool.pop();\n            EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);\n            return instance;\n          }\n\n          return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);\n        }\n\n        function releasePooledEvent(event) {\n          var EventConstructor = this;\n          !(event instanceof EventConstructor) ? invariant(false, 'Trying to release an event instance into a pool of a different type.') : void 0;\n          event.destructor();\n\n          if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\n            EventConstructor.eventPool.push(event);\n          }\n        }\n\n        function addEventPoolingTo(EventConstructor) {\n          EventConstructor.eventPool = [];\n          EventConstructor.getPooled = getPooledEvent;\n          EventConstructor.release = releasePooledEvent;\n        }\n        /**\n         * @interface Event\n         * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n         */\n\n\n        var SyntheticCompositionEvent = SyntheticEvent.extend({\n          data: null\n        });\n        /**\n         * @interface Event\n         * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n         *      /#events-inputevents\n         */\n\n        var SyntheticInputEvent = SyntheticEvent.extend({\n          data: null\n        });\n        var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\n\n        var START_KEYCODE = 229;\n        var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;\n        var documentMode = null;\n\n        if (canUseDOM && 'documentMode' in document) {\n          documentMode = document.documentMode;\n        } // Webkit offers a very useful `textInput` event that can be used to\n        // directly represent `beforeInput`. The IE `textinput` event is not as\n        // useful, so we don't use it.\n\n\n        var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied\n        // by the native compositionend event may be incorrect. Japanese ideographic\n        // spaces, for instance (\\u3000) are not recorded correctly.\n\n        var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\n        var SPACEBAR_CODE = 32;\n        var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE); // Events and their corresponding property names.\n\n        var eventTypes = {\n          beforeInput: {\n            phasedRegistrationNames: {\n              bubbled: 'onBeforeInput',\n              captured: 'onBeforeInputCapture'\n            },\n            dependencies: [TOP_COMPOSITION_END, TOP_KEY_PRESS, TOP_TEXT_INPUT, TOP_PASTE]\n          },\n          compositionEnd: {\n            phasedRegistrationNames: {\n              bubbled: 'onCompositionEnd',\n              captured: 'onCompositionEndCapture'\n            },\n            dependencies: [TOP_BLUR, TOP_COMPOSITION_END, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]\n          },\n          compositionStart: {\n            phasedRegistrationNames: {\n              bubbled: 'onCompositionStart',\n              captured: 'onCompositionStartCapture'\n            },\n            dependencies: [TOP_BLUR, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]\n          },\n          compositionUpdate: {\n            phasedRegistrationNames: {\n              bubbled: 'onCompositionUpdate',\n              captured: 'onCompositionUpdateCapture'\n            },\n            dependencies: [TOP_BLUR, TOP_COMPOSITION_UPDATE, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]\n          }\n        }; // Track whether we've ever handled a keypress on the space key.\n\n        var hasSpaceKeypress = false;\n        /**\n         * Return whether a native keypress event is assumed to be a command.\n         * This is required because Firefox fires `keypress` events for key commands\n         * (cut, copy, select-all, etc.) even though no character is inserted.\n         */\n\n        function isKeypressCommand(nativeEvent) {\n          return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n          !(nativeEvent.ctrlKey && nativeEvent.altKey);\n        }\n        /**\n         * Translate native top level events into event types.\n         *\n         * @param {string} topLevelType\n         * @return {object}\n         */\n\n\n        function getCompositionEventType(topLevelType) {\n          switch (topLevelType) {\n            case TOP_COMPOSITION_START:\n              return eventTypes.compositionStart;\n\n            case TOP_COMPOSITION_END:\n              return eventTypes.compositionEnd;\n\n            case TOP_COMPOSITION_UPDATE:\n              return eventTypes.compositionUpdate;\n          }\n        }\n        /**\n         * Does our fallback best-guess model think this event signifies that\n         * composition has begun?\n         *\n         * @param {string} topLevelType\n         * @param {object} nativeEvent\n         * @return {boolean}\n         */\n\n\n        function isFallbackCompositionStart(topLevelType, nativeEvent) {\n          return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;\n        }\n        /**\n         * Does our fallback mode think that this event is the end of composition?\n         *\n         * @param {string} topLevelType\n         * @param {object} nativeEvent\n         * @return {boolean}\n         */\n\n\n        function isFallbackCompositionEnd(topLevelType, nativeEvent) {\n          switch (topLevelType) {\n            case TOP_KEY_UP:\n              // Command keys insert or clear IME input.\n              return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n\n            case TOP_KEY_DOWN:\n              // Expect IME keyCode on each keydown. If we get any other\n              // code we must have exited earlier.\n              return nativeEvent.keyCode !== START_KEYCODE;\n\n            case TOP_KEY_PRESS:\n            case TOP_MOUSE_DOWN:\n            case TOP_BLUR:\n              // Events are not possible without cancelling IME.\n              return true;\n\n            default:\n              return false;\n          }\n        }\n        /**\n         * Google Input Tools provides composition data via a CustomEvent,\n         * with the `data` property populated in the `detail` object. If this\n         * is available on the event object, use it. If not, this is a plain\n         * composition event and we have nothing special to extract.\n         *\n         * @param {object} nativeEvent\n         * @return {?string}\n         */\n\n\n        function getDataFromCustomEvent(nativeEvent) {\n          var detail = nativeEvent.detail;\n\n          if (typeof detail === 'object' && 'data' in detail) {\n            return detail.data;\n          }\n\n          return null;\n        }\n        /**\n         * Check if a composition event was triggered by Korean IME.\n         * Our fallback mode does not work well with IE's Korean IME,\n         * so just use native composition events when Korean IME is used.\n         * Although CompositionEvent.locale property is deprecated,\n         * it is available in IE, where our fallback mode is enabled.\n         *\n         * @param {object} nativeEvent\n         * @return {boolean}\n         */\n\n\n        function isUsingKoreanIME(nativeEvent) {\n          return nativeEvent.locale === 'ko';\n        } // Track the current IME composition status, if any.\n\n\n        var isComposing = false;\n        /**\n         * @return {?object} A SyntheticCompositionEvent.\n         */\n\n        function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n          var eventType = void 0;\n          var fallbackData = void 0;\n\n          if (canUseCompositionEvent) {\n            eventType = getCompositionEventType(topLevelType);\n          } else if (!isComposing) {\n            if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n              eventType = eventTypes.compositionStart;\n            }\n          } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n            eventType = eventTypes.compositionEnd;\n          }\n\n          if (!eventType) {\n            return null;\n          }\n\n          if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {\n            // The current composition is stored statically and must not be\n            // overwritten while composition continues.\n            if (!isComposing && eventType === eventTypes.compositionStart) {\n              isComposing = initialize(nativeEventTarget);\n            } else if (eventType === eventTypes.compositionEnd) {\n              if (isComposing) {\n                fallbackData = getData();\n              }\n            }\n          }\n\n          var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);\n\n          if (fallbackData) {\n            // Inject data generated from fallback path into the synthetic event.\n            // This matches the property of native CompositionEventInterface.\n            event.data = fallbackData;\n          } else {\n            var customData = getDataFromCustomEvent(nativeEvent);\n\n            if (customData !== null) {\n              event.data = customData;\n            }\n          }\n\n          accumulateTwoPhaseDispatches(event);\n          return event;\n        }\n        /**\n         * @param {TopLevelType} topLevelType Number from `TopLevelType`.\n         * @param {object} nativeEvent Native browser event.\n         * @return {?string} The string corresponding to this `beforeInput` event.\n         */\n\n\n        function getNativeBeforeInputChars(topLevelType, nativeEvent) {\n          switch (topLevelType) {\n            case TOP_COMPOSITION_END:\n              return getDataFromCustomEvent(nativeEvent);\n\n            case TOP_KEY_PRESS:\n              /**\n               * If native `textInput` events are available, our goal is to make\n               * use of them. However, there is a special case: the spacebar key.\n               * In Webkit, preventing default on a spacebar `textInput` event\n               * cancels character insertion, but it *also* causes the browser\n               * to fall back to its default spacebar behavior of scrolling the\n               * page.\n               *\n               * Tracking at:\n               * https://code.google.com/p/chromium/issues/detail?id=355103\n               *\n               * To avoid this issue, use the keypress event as if no `textInput`\n               * event is available.\n               */\n              var which = nativeEvent.which;\n\n              if (which !== SPACEBAR_CODE) {\n                return null;\n              }\n\n              hasSpaceKeypress = true;\n              return SPACEBAR_CHAR;\n\n            case TOP_TEXT_INPUT:\n              // Record the characters to be added to the DOM.\n              var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled\n              // it at the keypress level and bail immediately. Android Chrome\n              // doesn't give us keycodes, so we need to ignore it.\n\n              if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n                return null;\n              }\n\n              return chars;\n\n            default:\n              // For other native event types, do nothing.\n              return null;\n          }\n        }\n        /**\n         * For browsers that do not provide the `textInput` event, extract the\n         * appropriate string to use for SyntheticInputEvent.\n         *\n         * @param {number} topLevelType Number from `TopLevelEventTypes`.\n         * @param {object} nativeEvent Native browser event.\n         * @return {?string} The fallback string for this `beforeInput` event.\n         */\n\n\n        function getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n          // If we are currently composing (IME) and using a fallback to do so,\n          // try to extract the composed characters from the fallback object.\n          // If composition event is available, we extract a string only at\n          // compositionevent, otherwise extract it at fallback events.\n          if (isComposing) {\n            if (topLevelType === TOP_COMPOSITION_END || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n              var chars = getData();\n              reset();\n              isComposing = false;\n              return chars;\n            }\n\n            return null;\n          }\n\n          switch (topLevelType) {\n            case TOP_PASTE:\n              // If a paste event occurs after a keypress, throw out the input\n              // chars. Paste events should not lead to BeforeInput events.\n              return null;\n\n            case TOP_KEY_PRESS:\n              /**\n               * As of v27, Firefox may fire keypress events even when no character\n               * will be inserted. A few possibilities:\n               *\n               * - `which` is `0`. Arrow keys, Esc key, etc.\n               *\n               * - `which` is the pressed key code, but no char is available.\n               *   Ex: 'AltGr + d` in Polish. There is no modified character for\n               *   this key combination and no character is inserted into the\n               *   document, but FF fires the keypress for char code `100` anyway.\n               *   No `input` event will occur.\n               *\n               * - `which` is the pressed key code, but a command combination is\n               *   being used. Ex: `Cmd+C`. No character is inserted, and no\n               *   `input` event will occur.\n               */\n              if (!isKeypressCommand(nativeEvent)) {\n                // IE fires the `keypress` event when a user types an emoji via\n                // Touch keyboard of Windows.  In such a case, the `char` property\n                // holds an emoji character like `\\uD83D\\uDE0A`.  Because its length\n                // is 2, the property `which` does not represent an emoji correctly.\n                // In such a case, we directly return the `char` property instead of\n                // using `which`.\n                if (nativeEvent.char && nativeEvent.char.length > 1) {\n                  return nativeEvent.char;\n                } else if (nativeEvent.which) {\n                  return String.fromCharCode(nativeEvent.which);\n                }\n              }\n\n              return null;\n\n            case TOP_COMPOSITION_END:\n              return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;\n\n            default:\n              return null;\n          }\n        }\n        /**\n         * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n         * `textInput` or fallback behavior.\n         *\n         * @return {?object} A SyntheticInputEvent.\n         */\n\n\n        function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n          var chars = void 0;\n\n          if (canUseTextInputEvent) {\n            chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n          } else {\n            chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n          } // If no characters are being inserted, no BeforeInput event should\n          // be fired.\n\n\n          if (!chars) {\n            return null;\n          }\n\n          var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);\n          event.data = chars;\n          accumulateTwoPhaseDispatches(event);\n          return event;\n        }\n        /**\n         * Create an `onBeforeInput` event to match\n         * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n         *\n         * This event plugin is based on the native `textInput` event\n         * available in Chrome, Safari, Opera, and IE. This event fires after\n         * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n         *\n         * `beforeInput` is spec'd but not implemented in any browsers, and\n         * the `input` event does not provide any useful information about what has\n         * actually been added, contrary to the spec. Thus, `textInput` is the best\n         * available event to identify the characters that have actually been inserted\n         * into the target node.\n         *\n         * This plugin is also responsible for emitting `composition` events, thus\n         * allowing us to share composition fallback code for both `beforeInput` and\n         * `composition` event types.\n         */\n\n\n        var BeforeInputEventPlugin = {\n          eventTypes: eventTypes,\n          extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n            var composition = extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n            var beforeInput = extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n\n            if (composition === null) {\n              return beforeInput;\n            }\n\n            if (beforeInput === null) {\n              return composition;\n            }\n\n            return [composition, beforeInput];\n          }\n        }; // Use to restore controlled state after a change event has fired.\n\n        var restoreImpl = null;\n        var restoreTarget = null;\n        var restoreQueue = null;\n\n        function restoreStateOfTarget(target) {\n          // We perform this translation at the end of the event loop so that we\n          // always receive the correct fiber here\n          var internalInstance = getInstanceFromNode(target);\n\n          if (!internalInstance) {\n            // Unmounted\n            return;\n          }\n\n          !(typeof restoreImpl === 'function') ? invariant(false, 'setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n          var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);\n          restoreImpl(internalInstance.stateNode, internalInstance.type, props);\n        }\n\n        function setRestoreImplementation(impl) {\n          restoreImpl = impl;\n        }\n\n        function enqueueStateRestore(target) {\n          if (restoreTarget) {\n            if (restoreQueue) {\n              restoreQueue.push(target);\n            } else {\n              restoreQueue = [target];\n            }\n          } else {\n            restoreTarget = target;\n          }\n        }\n\n        function needsStateRestore() {\n          return restoreTarget !== null || restoreQueue !== null;\n        }\n\n        function restoreStateIfNeeded() {\n          if (!restoreTarget) {\n            return;\n          }\n\n          var target = restoreTarget;\n          var queuedTargets = restoreQueue;\n          restoreTarget = null;\n          restoreQueue = null;\n          restoreStateOfTarget(target);\n\n          if (queuedTargets) {\n            for (var i = 0; i < queuedTargets.length; i++) {\n              restoreStateOfTarget(queuedTargets[i]);\n            }\n          }\n        } // Used as a way to call batchedUpdates when we don't have a reference to\n        // the renderer. Such as when we're dispatching events or if third party\n        // libraries need to call batchedUpdates. Eventually, this API will go away when\n        // everything is batched by default. We'll then have a similar API to opt-out of\n        // scheduled work and instead do synchronous work.\n        // Defaults\n\n\n        var _batchedUpdatesImpl = function _batchedUpdatesImpl(fn, bookkeeping) {\n          return fn(bookkeeping);\n        };\n\n        var _interactiveUpdatesImpl = function _interactiveUpdatesImpl(fn, a, b) {\n          return fn(a, b);\n        };\n\n        var _flushInteractiveUpdatesImpl = function _flushInteractiveUpdatesImpl() {};\n\n        var isBatching = false;\n\n        function batchedUpdates(fn, bookkeeping) {\n          if (isBatching) {\n            // If we are currently inside another batch, we need to wait until it\n            // fully completes before restoring state.\n            return fn(bookkeeping);\n          }\n\n          isBatching = true;\n\n          try {\n            return _batchedUpdatesImpl(fn, bookkeeping);\n          } finally {\n            // Here we wait until all updates have propagated, which is important\n            // when using controlled components within layers:\n            // https://github.com/facebook/react/issues/1698\n            // Then we restore state of any controlled component.\n            isBatching = false;\n            var controlledComponentsHavePendingUpdates = needsStateRestore();\n\n            if (controlledComponentsHavePendingUpdates) {\n              // If a controlled event was fired, we may need to restore the state of\n              // the DOM node back to the controlled value. This is necessary when React\n              // bails out of the update without touching the DOM.\n              _flushInteractiveUpdatesImpl();\n\n              restoreStateIfNeeded();\n            }\n          }\n        }\n\n        function interactiveUpdates(fn, a, b) {\n          return _interactiveUpdatesImpl(fn, a, b);\n        }\n\n        function setBatchingImplementation(batchedUpdatesImpl, interactiveUpdatesImpl, flushInteractiveUpdatesImpl) {\n          _batchedUpdatesImpl = batchedUpdatesImpl;\n          _interactiveUpdatesImpl = interactiveUpdatesImpl;\n          _flushInteractiveUpdatesImpl = flushInteractiveUpdatesImpl;\n        }\n        /**\n         * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n         */\n\n\n        var supportedInputTypes = {\n          color: true,\n          date: true,\n          datetime: true,\n          'datetime-local': true,\n          email: true,\n          month: true,\n          number: true,\n          password: true,\n          range: true,\n          search: true,\n          tel: true,\n          text: true,\n          time: true,\n          url: true,\n          week: true\n        };\n\n        function isTextInputElement(elem) {\n          var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\n          if (nodeName === 'input') {\n            return !!supportedInputTypes[elem.type];\n          }\n\n          if (nodeName === 'textarea') {\n            return true;\n          }\n\n          return false;\n        }\n        /**\n         * HTML nodeType values that represent the type of the node\n         */\n\n\n        var ELEMENT_NODE = 1;\n        var TEXT_NODE = 3;\n        var COMMENT_NODE = 8;\n        var DOCUMENT_NODE = 9;\n        var DOCUMENT_FRAGMENT_NODE = 11;\n        /**\n         * Gets the target node from a native browser event by accounting for\n         * inconsistencies in browser DOM APIs.\n         *\n         * @param {object} nativeEvent Native browser event.\n         * @return {DOMEventTarget} Target node.\n         */\n\n        function getEventTarget(nativeEvent) {\n          // Fallback to nativeEvent.srcElement for IE9\n          // https://github.com/facebook/react/issues/12506\n          var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963\n\n          if (target.correspondingUseElement) {\n            target = target.correspondingUseElement;\n          } // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n          // @see http://www.quirksmode.org/js/events_properties.html\n\n\n          return target.nodeType === TEXT_NODE ? target.parentNode : target;\n        }\n        /**\n         * Checks if an event is supported in the current execution environment.\n         *\n         * NOTE: This will not work correctly for non-generic events such as `change`,\n         * `reset`, `load`, `error`, and `select`.\n         *\n         * Borrows from Modernizr.\n         *\n         * @param {string} eventNameSuffix Event name, e.g. \"click\".\n         * @return {boolean} True if the event is supported.\n         * @internal\n         * @license Modernizr 3.0.0pre (Custom Build) | MIT\n         */\n\n\n        function isEventSupported(eventNameSuffix) {\n          if (!canUseDOM) {\n            return false;\n          }\n\n          var eventName = 'on' + eventNameSuffix;\n          var isSupported = eventName in document;\n\n          if (!isSupported) {\n            var element = document.createElement('div');\n            element.setAttribute(eventName, 'return;');\n            isSupported = typeof element[eventName] === 'function';\n          }\n\n          return isSupported;\n        }\n\n        function isCheckable(elem) {\n          var type = elem.type;\n          var nodeName = elem.nodeName;\n          return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');\n        }\n\n        function getTracker(node) {\n          return node._valueTracker;\n        }\n\n        function detachTracker(node) {\n          node._valueTracker = null;\n        }\n\n        function getValueFromNode(node) {\n          var value = '';\n\n          if (!node) {\n            return value;\n          }\n\n          if (isCheckable(node)) {\n            value = node.checked ? 'true' : 'false';\n          } else {\n            value = node.value;\n          }\n\n          return value;\n        }\n\n        function trackValueOnNode(node) {\n          var valueField = isCheckable(node) ? 'checked' : 'value';\n          var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);\n          var currentValue = '' + node[valueField]; // if someone has already defined a value or Safari, then bail\n          // and don't track value will cause over reporting of changes,\n          // but it's better then a hard failure\n          // (needed for certain tests that spyOn input values and Safari)\n\n          if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {\n            return;\n          }\n\n          var _get = descriptor.get,\n              _set = descriptor.set;\n          Object.defineProperty(node, valueField, {\n            configurable: true,\n            get: function get() {\n              return _get.call(this);\n            },\n            set: function set(value) {\n              currentValue = '' + value;\n\n              _set.call(this, value);\n            }\n          }); // We could've passed this the first time\n          // but it triggers a bug in IE11 and Edge 14/15.\n          // Calling defineProperty() again should be equivalent.\n          // https://github.com/facebook/react/issues/11768\n\n          Object.defineProperty(node, valueField, {\n            enumerable: descriptor.enumerable\n          });\n          var tracker = {\n            getValue: function getValue() {\n              return currentValue;\n            },\n            setValue: function setValue(value) {\n              currentValue = '' + value;\n            },\n            stopTracking: function stopTracking() {\n              detachTracker(node);\n              delete node[valueField];\n            }\n          };\n          return tracker;\n        }\n\n        function track(node) {\n          if (getTracker(node)) {\n            return;\n          } // TODO: Once it's just Fiber we can move this to node._wrapperState\n\n\n          node._valueTracker = trackValueOnNode(node);\n        }\n\n        function updateValueIfChanged(node) {\n          if (!node) {\n            return false;\n          }\n\n          var tracker = getTracker(node); // if there is no tracker at this point it's unlikely\n          // that trying again will succeed\n\n          if (!tracker) {\n            return true;\n          }\n\n          var lastValue = tracker.getValue();\n          var nextValue = getValueFromNode(node);\n\n          if (nextValue !== lastValue) {\n            tracker.setValue(nextValue);\n            return true;\n          }\n\n          return false;\n        }\n\n        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n        var BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\n        var describeComponentFrame = function describeComponentFrame(name, source, ownerName) {\n          var sourceInfo = '';\n\n          if (source) {\n            var path = source.fileName;\n            var fileName = path.replace(BEFORE_SLASH_RE, '');\n            {\n              // In DEV, include code for a common special case:\n              // prefer \"folder/index.js\" instead of just \"index.js\".\n              if (/^index\\./.test(fileName)) {\n                var match = path.match(BEFORE_SLASH_RE);\n\n                if (match) {\n                  var pathBeforeSlash = match[1];\n\n                  if (pathBeforeSlash) {\n                    var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n                    fileName = folderName + '/' + fileName;\n                  }\n                }\n              }\n            }\n            sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n          } else if (ownerName) {\n            sourceInfo = ' (created by ' + ownerName + ')';\n          }\n\n          return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n        }; // The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n        // nor polyfill, then a plain number is used for performance.\n\n\n        var hasSymbol = typeof Symbol === 'function' && Symbol.for;\n        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\n        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\n        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\n        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\n        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\n        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\n        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\n        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\n        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\n        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\n        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\n        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\n        var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n        var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n        function getIteratorFn(maybeIterable) {\n          if (maybeIterable === null || typeof maybeIterable !== 'object') {\n            return null;\n          }\n\n          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n          if (typeof maybeIterator === 'function') {\n            return maybeIterator;\n          }\n\n          return null;\n        }\n\n        var Pending = 0;\n        var Resolved = 1;\n        var Rejected = 2;\n\n        function refineResolvedLazyComponent(lazyComponent) {\n          return lazyComponent._status === Resolved ? lazyComponent._result : null;\n        }\n\n        function getWrappedName(outerType, innerType, wrapperName) {\n          var functionName = innerType.displayName || innerType.name || '';\n          return outerType.displayName || (functionName !== '' ? wrapperName + '(' + functionName + ')' : wrapperName);\n        }\n\n        function getComponentName(type) {\n          if (type == null) {\n            // Host root, text node or just invalid type.\n            return null;\n          }\n\n          {\n            if (typeof type.tag === 'number') {\n              warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n            }\n          }\n\n          if (typeof type === 'function') {\n            return type.displayName || type.name || null;\n          }\n\n          if (typeof type === 'string') {\n            return type;\n          }\n\n          switch (type) {\n            case REACT_CONCURRENT_MODE_TYPE:\n              return 'ConcurrentMode';\n\n            case REACT_FRAGMENT_TYPE:\n              return 'Fragment';\n\n            case REACT_PORTAL_TYPE:\n              return 'Portal';\n\n            case REACT_PROFILER_TYPE:\n              return 'Profiler';\n\n            case REACT_STRICT_MODE_TYPE:\n              return 'StrictMode';\n\n            case REACT_SUSPENSE_TYPE:\n              return 'Suspense';\n          }\n\n          if (typeof type === 'object') {\n            switch (type.$$typeof) {\n              case REACT_CONTEXT_TYPE:\n                return 'Context.Consumer';\n\n              case REACT_PROVIDER_TYPE:\n                return 'Context.Provider';\n\n              case REACT_FORWARD_REF_TYPE:\n                return getWrappedName(type, type.render, 'ForwardRef');\n\n              case REACT_MEMO_TYPE:\n                return getComponentName(type.type);\n\n              case REACT_LAZY_TYPE:\n                {\n                  var thenable = type;\n                  var resolvedThenable = refineResolvedLazyComponent(thenable);\n\n                  if (resolvedThenable) {\n                    return getComponentName(resolvedThenable);\n                  }\n                }\n            }\n          }\n\n          return null;\n        }\n\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\n        function describeFiber(fiber) {\n          switch (fiber.tag) {\n            case HostRoot:\n            case HostPortal:\n            case HostText:\n            case Fragment:\n            case ContextProvider:\n            case ContextConsumer:\n              return '';\n\n            default:\n              var owner = fiber._debugOwner;\n              var source = fiber._debugSource;\n              var name = getComponentName(fiber.type);\n              var ownerName = null;\n\n              if (owner) {\n                ownerName = getComponentName(owner.type);\n              }\n\n              return describeComponentFrame(name, source, ownerName);\n          }\n        }\n\n        function getStackByFiberInDevAndProd(workInProgress) {\n          var info = '';\n          var node = workInProgress;\n\n          do {\n            info += describeFiber(node);\n            node = node.return;\n          } while (node);\n\n          return info;\n        }\n\n        var current = null;\n        var phase = null;\n\n        function getCurrentFiberOwnerNameInDevOrNull() {\n          {\n            if (current === null) {\n              return null;\n            }\n\n            var owner = current._debugOwner;\n\n            if (owner !== null && typeof owner !== 'undefined') {\n              return getComponentName(owner.type);\n            }\n          }\n          return null;\n        }\n\n        function getCurrentFiberStackInDev() {\n          {\n            if (current === null) {\n              return '';\n            } // Safe because if current fiber exists, we are reconciling,\n            // and it is guaranteed to be the work-in-progress version.\n\n\n            return getStackByFiberInDevAndProd(current);\n          }\n          return '';\n        }\n\n        function resetCurrentFiber() {\n          {\n            ReactDebugCurrentFrame.getCurrentStack = null;\n            current = null;\n            phase = null;\n          }\n        }\n\n        function setCurrentFiber(fiber) {\n          {\n            ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;\n            current = fiber;\n            phase = null;\n          }\n        }\n\n        function setCurrentPhase(lifeCyclePhase) {\n          {\n            phase = lifeCyclePhase;\n          }\n        }\n        /**\n         * Similar to invariant but only logs a warning if the condition is not met.\n         * This can be used to log issues in development environments in critical\n         * paths. Removing the logging code for production environments will keep the\n         * same logic and follow the same code paths.\n         */\n\n\n        var warning = warningWithoutStack$1;\n        {\n          warning = function warning(condition, format) {\n            if (condition) {\n              return;\n            }\n\n            var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n            var stack = ReactDebugCurrentFrame.getStackAddendum(); // eslint-disable-next-line react-internal/warning-and-invariant-args\n\n            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n              args[_key - 2] = arguments[_key];\n            }\n\n            warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));\n          };\n        }\n        var warning$1 = warning; // A reserved attribute.\n        // It is handled by React separately and shouldn't be written to the DOM.\n\n        var RESERVED = 0; // A simple string attribute.\n        // Attributes that aren't in the whitelist are presumed to have this type.\n\n        var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called\n        // \"enumerated\" attributes with \"true\" and \"false\" as possible values.\n        // When true, it should be set to a \"true\" string.\n        // When false, it should be set to a \"false\" string.\n\n        var BOOLEANISH_STRING = 2; // A real boolean attribute.\n        // When true, it should be present (set either to an empty string or its name).\n        // When false, it should be omitted.\n\n        var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.\n        // When true, it should be present (set either to an empty string or its name).\n        // When false, it should be omitted.\n        // For any other value, should be present with that value.\n\n        var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.\n        // When falsy, it should be removed.\n\n        var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.\n        // When falsy, it should be removed.\n\n        var POSITIVE_NUMERIC = 6;\n        /* eslint-disable max-len */\n\n        var ATTRIBUTE_NAME_START_CHAR = \":A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\";\n        /* eslint-enable max-len */\n\n        var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + \"\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040\";\n        var ROOT_ATTRIBUTE_NAME = 'data-reactroot';\n        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        var illegalAttributeNameCache = {};\n        var validatedAttributeNameCache = {};\n\n        function isAttributeNameSafe(attributeName) {\n          if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {\n            return true;\n          }\n\n          if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {\n            return false;\n          }\n\n          if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n            validatedAttributeNameCache[attributeName] = true;\n            return true;\n          }\n\n          illegalAttributeNameCache[attributeName] = true;\n          {\n            warning$1(false, 'Invalid attribute name: `%s`', attributeName);\n          }\n          return false;\n        }\n\n        function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {\n          if (propertyInfo !== null) {\n            return propertyInfo.type === RESERVED;\n          }\n\n          if (isCustomComponentTag) {\n            return false;\n          }\n\n          if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {\n            return true;\n          }\n\n          return false;\n        }\n\n        function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {\n          if (propertyInfo !== null && propertyInfo.type === RESERVED) {\n            return false;\n          }\n\n          switch (typeof value) {\n            case 'function': // $FlowIssue symbol is perfectly valid here\n\n            case 'symbol':\n              // eslint-disable-line\n              return true;\n\n            case 'boolean':\n              {\n                if (isCustomComponentTag) {\n                  return false;\n                }\n\n                if (propertyInfo !== null) {\n                  return !propertyInfo.acceptsBooleans;\n                } else {\n                  var prefix = name.toLowerCase().slice(0, 5);\n                  return prefix !== 'data-' && prefix !== 'aria-';\n                }\n              }\n\n            default:\n              return false;\n          }\n        }\n\n        function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {\n          if (value === null || typeof value === 'undefined') {\n            return true;\n          }\n\n          if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {\n            return true;\n          }\n\n          if (isCustomComponentTag) {\n            return false;\n          }\n\n          if (propertyInfo !== null) {\n            switch (propertyInfo.type) {\n              case BOOLEAN:\n                return !value;\n\n              case OVERLOADED_BOOLEAN:\n                return value === false;\n\n              case NUMERIC:\n                return isNaN(value);\n\n              case POSITIVE_NUMERIC:\n                return isNaN(value) || value < 1;\n            }\n          }\n\n          return false;\n        }\n\n        function getPropertyInfo(name) {\n          return properties.hasOwnProperty(name) ? properties[name] : null;\n        }\n\n        function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace) {\n          this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;\n          this.attributeName = attributeName;\n          this.attributeNamespace = attributeNamespace;\n          this.mustUseProperty = mustUseProperty;\n          this.propertyName = name;\n          this.type = type;\n        } // When adding attributes to this list, be sure to also add them to\n        // the `possibleStandardNames` module to ensure casing and incorrect\n        // name warnings.\n\n\n        var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.\n\n        ['children', 'dangerouslySetInnerHTML', // TODO: This prevents the assignment of defaultValue to regular\n        // elements (not just inputs). Now that ReactDOMInput assigns to the\n        // defaultValue property -- do we need this?\n        'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {\n          properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty\n          name, // attributeName\n          null);\n        } // attributeNamespace\n        ); // A few React string attributes have a different name.\n        // This is a mapping from React prop names to the attribute names.\n\n        [['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {\n          var name = _ref[0],\n              attributeName = _ref[1];\n          properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n          attributeName, // attributeName\n          null);\n        } // attributeNamespace\n        ); // These are \"enumerated\" HTML attributes that accept \"true\" and \"false\".\n        // In React, we let users pass `true` and `false` even though technically\n        // these aren't boolean attributes (they are coerced to strings).\n\n        ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {\n          properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty\n          name.toLowerCase(), // attributeName\n          null);\n        } // attributeNamespace\n        ); // These are \"enumerated\" SVG attributes that accept \"true\" and \"false\".\n        // In React, we let users pass `true` and `false` even though technically\n        // these aren't boolean attributes (they are coerced to strings).\n        // Since these are SVG attributes, their attribute names are case-sensitive.\n\n        ['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {\n          properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty\n          name, // attributeName\n          null);\n        } // attributeNamespace\n        ); // These are HTML boolean attributes.\n\n        ['allowFullScreen', 'async', // Note: there is a special case that prevents it from being written to the DOM\n        // on the client side because the browsers are inconsistent. Instead we call focus().\n        'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', // Microdata\n        'itemScope'].forEach(function (name) {\n          properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty\n          name.toLowerCase(), // attributeName\n          null);\n        } // attributeNamespace\n        ); // These are the few React props that we set as DOM properties\n        // rather than attributes. These are all booleans.\n\n        ['checked', // Note: `option.selected` is not updated if `select.multiple` is\n        // disabled with `removeAttribute`. We have special logic for handling this.\n        'multiple', 'muted', 'selected'].forEach(function (name) {\n          properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty\n          name, // attributeName\n          null);\n        } // attributeNamespace\n        ); // These are HTML attributes that are \"overloaded booleans\": they behave like\n        // booleans, but can also accept a string value.\n\n        ['capture', 'download'].forEach(function (name) {\n          properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty\n          name, // attributeName\n          null);\n        } // attributeNamespace\n        ); // These are HTML attributes that must be positive numbers.\n\n        ['cols', 'rows', 'size', 'span'].forEach(function (name) {\n          properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty\n          name, // attributeName\n          null);\n        } // attributeNamespace\n        ); // These are HTML attributes that must be numbers.\n\n        ['rowSpan', 'start'].forEach(function (name) {\n          properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty\n          name.toLowerCase(), // attributeName\n          null);\n        } // attributeNamespace\n        );\n        var CAMELIZE = /[\\-\\:]([a-z])/g;\n\n        var capitalize = function capitalize(token) {\n          return token[1].toUpperCase();\n        }; // This is a list of all SVG attributes that need special casing, namespacing,\n        // or boolean value assignment. Regular attributes that just accept strings\n        // and have the same names are omitted, just like in the HTML whitelist.\n        // Some of these attributes can be hard to find. This list was created by\n        // scrapping the MDN documentation.\n\n\n        ['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {\n          var name = attributeName.replace(CAMELIZE, capitalize);\n          properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n          attributeName, null);\n        } // attributeNamespace\n        ); // String SVG attributes with the xlink namespace.\n\n        ['xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {\n          var name = attributeName.replace(CAMELIZE, capitalize);\n          properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n          attributeName, 'http://www.w3.org/1999/xlink');\n        }); // String SVG attributes with the xml namespace.\n\n        ['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {\n          var name = attributeName.replace(CAMELIZE, capitalize);\n          properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty\n          attributeName, 'http://www.w3.org/XML/1998/namespace');\n        }); // Special case: this attribute exists both in HTML and SVG.\n        // Its \"tabindex\" attribute name is case-sensitive in SVG so we can't just use\n        // its React `tabIndex` name, like we do for attributes that exist only in HTML.\n\n        properties.tabIndex = new PropertyInfoRecord('tabIndex', STRING, false, // mustUseProperty\n        'tabindex', // attributeName\n        null);\n        /**\n         * Get the value for a property on a node. Only used in DEV for SSR validation.\n         * The \"expected\" argument is used as a hint of what the expected value is.\n         * Some properties have multiple equivalent values.\n         */\n\n        function getValueForProperty(node, name, expected, propertyInfo) {\n          {\n            if (propertyInfo.mustUseProperty) {\n              var propertyName = propertyInfo.propertyName;\n              return node[propertyName];\n            } else {\n              var attributeName = propertyInfo.attributeName;\n              var stringValue = null;\n\n              if (propertyInfo.type === OVERLOADED_BOOLEAN) {\n                if (node.hasAttribute(attributeName)) {\n                  var value = node.getAttribute(attributeName);\n\n                  if (value === '') {\n                    return true;\n                  }\n\n                  if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\n                    return value;\n                  }\n\n                  if (value === '' + expected) {\n                    return expected;\n                  }\n\n                  return value;\n                }\n              } else if (node.hasAttribute(attributeName)) {\n                if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\n                  // We had an attribute but shouldn't have had one, so read it\n                  // for the error message.\n                  return node.getAttribute(attributeName);\n                }\n\n                if (propertyInfo.type === BOOLEAN) {\n                  // If this was a boolean, it doesn't matter what the value is\n                  // the fact that we have it is the same as the expected.\n                  return expected;\n                } // Even if this property uses a namespace we use getAttribute\n                // because we assume its namespaced name is the same as our config.\n                // To use getAttributeNS we need the local name which we don't have\n                // in our config atm.\n\n\n                stringValue = node.getAttribute(attributeName);\n              }\n\n              if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\n                return stringValue === null ? expected : stringValue;\n              } else if (stringValue === '' + expected) {\n                return expected;\n              } else {\n                return stringValue;\n              }\n            }\n          }\n        }\n        /**\n         * Get the value for a attribute on a node. Only used in DEV for SSR validation.\n         * The third argument is used as a hint of what the expected value is. Some\n         * attributes have multiple equivalent values.\n         */\n\n\n        function getValueForAttribute(node, name, expected) {\n          {\n            if (!isAttributeNameSafe(name)) {\n              return;\n            }\n\n            if (!node.hasAttribute(name)) {\n              return expected === undefined ? undefined : null;\n            }\n\n            var value = node.getAttribute(name);\n\n            if (value === '' + expected) {\n              return expected;\n            }\n\n            return value;\n          }\n        }\n        /**\n         * Sets the value for a property on a node.\n         *\n         * @param {DOMElement} node\n         * @param {string} name\n         * @param {*} value\n         */\n\n\n        function setValueForProperty(node, name, value, isCustomComponentTag) {\n          var propertyInfo = getPropertyInfo(name);\n\n          if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {\n            return;\n          }\n\n          if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {\n            value = null;\n          } // If the prop isn't in the special list, treat it as a simple attribute.\n\n\n          if (isCustomComponentTag || propertyInfo === null) {\n            if (isAttributeNameSafe(name)) {\n              var _attributeName = name;\n\n              if (value === null) {\n                node.removeAttribute(_attributeName);\n              } else {\n                node.setAttribute(_attributeName, '' + value);\n              }\n            }\n\n            return;\n          }\n\n          var mustUseProperty = propertyInfo.mustUseProperty;\n\n          if (mustUseProperty) {\n            var propertyName = propertyInfo.propertyName;\n\n            if (value === null) {\n              var type = propertyInfo.type;\n              node[propertyName] = type === BOOLEAN ? false : '';\n            } else {\n              // Contrary to `setAttribute`, object properties are properly\n              // `toString`ed by IE8/9.\n              node[propertyName] = value;\n            }\n\n            return;\n          } // The rest are treated as attributes with special cases.\n\n\n          var attributeName = propertyInfo.attributeName,\n              attributeNamespace = propertyInfo.attributeNamespace;\n\n          if (value === null) {\n            node.removeAttribute(attributeName);\n          } else {\n            var _type = propertyInfo.type;\n            var attributeValue = void 0;\n\n            if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {\n              attributeValue = '';\n            } else {\n              // `setAttribute` with objects becomes only `[object]` in IE8/9,\n              // ('' + value) makes it output the correct toString()-value.\n              attributeValue = '' + value;\n            }\n\n            if (attributeNamespace) {\n              node.setAttributeNS(attributeNamespace, attributeName, attributeValue);\n            } else {\n              node.setAttribute(attributeName, attributeValue);\n            }\n          }\n        } // Flow does not allow string concatenation of most non-string types. To work\n        // around this limitation, we use an opaque type that can only be obtained by\n        // passing the value through getToStringValue first.\n\n\n        function toString(value) {\n          return '' + value;\n        }\n\n        function getToStringValue(value) {\n          switch (typeof value) {\n            case 'boolean':\n            case 'number':\n            case 'object':\n            case 'string':\n            case 'undefined':\n              return value;\n\n            default:\n              // function, symbol are assigned as empty strings\n              return '';\n          }\n        }\n\n        var ReactDebugCurrentFrame$1 = null;\n        var ReactControlledValuePropTypes = {\n          checkPropTypes: null\n        };\n        {\n          ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n          var hasReadOnlyValue = {\n            button: true,\n            checkbox: true,\n            image: true,\n            hidden: true,\n            radio: true,\n            reset: true,\n            submit: true\n          };\n          var propTypes = {\n            value: function value(props, propName, componentName) {\n              if (hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled || props[propName] == null) {\n                return null;\n              }\n\n              return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n            },\n            checked: function checked(props, propName, componentName) {\n              if (props.onChange || props.readOnly || props.disabled || props[propName] == null) {\n                return null;\n              }\n\n              return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n            }\n          };\n          /**\n           * Provide a linked `value` attribute for controlled forms. You should not use\n           * this outside of the ReactDOM controlled form components.\n           */\n\n          ReactControlledValuePropTypes.checkPropTypes = function (tagName, props) {\n            checkPropTypes(propTypes, props, 'prop', tagName, ReactDebugCurrentFrame$1.getStackAddendum);\n          };\n        }\n        var enableUserTimingAPI = true;\n        var enableHooks = false; // Helps identify side effects in begin-phase lifecycle hooks and setState reducers:\n\n        var debugRenderPhaseSideEffects = false; // In some cases, StrictMode should also double-render lifecycles.\n        // This can be confusing for tests though,\n        // And it can be bad for performance in production.\n        // This feature flag can be used to control the behavior:\n\n        var debugRenderPhaseSideEffectsForStrictMode = true; // To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n        // replay the begin phase of a failed component inside invokeGuardedCallback.\n\n        var replayFailedUnitOfWorkWithInvokeGuardedCallback = true; // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\n\n        var warnAboutDeprecatedLifecycles = false; // Gather advanced timing metrics for Profiler subtrees.\n\n        var enableProfilerTimer = true; // Trace which interactions trigger each commit.\n\n        var enableSchedulerTracing = true; // Only used in www builds.\n        // TODO: true? Here it might just be false.\n        // Only used in www builds.\n        // Only used in www builds.\n        // React Fire: prevent the value and checked attributes from syncing\n        // with their related DOM properties\n\n        var disableInputAttributeSyncing = false; // These APIs will no longer be \"unstable\" in the upcoming 16.7 release,\n        // Control this behavior with a flag to support 16.6 minor releases in the meanwhile.\n\n        var enableStableConcurrentModeAPIs = false;\n        var warnAboutShorthandPropertyCollision = false; // TODO: direct imports like some-package/src/* are bad. Fix me.\n\n        var didWarnValueDefaultValue = false;\n        var didWarnCheckedDefaultChecked = false;\n        var didWarnControlledToUncontrolled = false;\n        var didWarnUncontrolledToControlled = false;\n\n        function isControlled(props) {\n          var usesChecked = props.type === 'checkbox' || props.type === 'radio';\n          return usesChecked ? props.checked != null : props.value != null;\n        }\n        /**\n         * Implements an <input> host component that allows setting these optional\n         * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n         *\n         * If `checked` or `value` are not supplied (or null/undefined), user actions\n         * that affect the checked state or value will trigger updates to the element.\n         *\n         * If they are supplied (and not null/undefined), the rendered element will not\n         * trigger updates to the element. Instead, the props must change in order for\n         * the rendered element to be updated.\n         *\n         * The rendered element will be initialized as unchecked (or `defaultChecked`)\n         * with an empty value (or `defaultValue`).\n         *\n         * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n         */\n\n\n        function getHostProps(element, props) {\n          var node = element;\n          var checked = props.checked;\n\n          var hostProps = _assign({}, props, {\n            defaultChecked: undefined,\n            defaultValue: undefined,\n            value: undefined,\n            checked: checked != null ? checked : node._wrapperState.initialChecked\n          });\n\n          return hostProps;\n        }\n\n        function initWrapperState(element, props) {\n          {\n            ReactControlledValuePropTypes.checkPropTypes('input', props);\n\n            if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {\n              warning$1(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);\n              didWarnCheckedDefaultChecked = true;\n            }\n\n            if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n              warning$1(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);\n              didWarnValueDefaultValue = true;\n            }\n          }\n          var node = element;\n          var defaultValue = props.defaultValue == null ? '' : props.defaultValue;\n          node._wrapperState = {\n            initialChecked: props.checked != null ? props.checked : props.defaultChecked,\n            initialValue: getToStringValue(props.value != null ? props.value : defaultValue),\n            controlled: isControlled(props)\n          };\n        }\n\n        function updateChecked(element, props) {\n          var node = element;\n          var checked = props.checked;\n\n          if (checked != null) {\n            setValueForProperty(node, 'checked', checked, false);\n          }\n        }\n\n        function updateWrapper(element, props) {\n          var node = element;\n          {\n            var _controlled = isControlled(props);\n\n            if (!node._wrapperState.controlled && _controlled && !didWarnUncontrolledToControlled) {\n              warning$1(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);\n              didWarnUncontrolledToControlled = true;\n            }\n\n            if (node._wrapperState.controlled && !_controlled && !didWarnControlledToUncontrolled) {\n              warning$1(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);\n              didWarnControlledToUncontrolled = true;\n            }\n          }\n          updateChecked(element, props);\n          var value = getToStringValue(props.value);\n          var type = props.type;\n\n          if (value != null) {\n            if (type === 'number') {\n              if (value === 0 && node.value === '' || // We explicitly want to coerce to number here if possible.\n              // eslint-disable-next-line\n              node.value != value) {\n                node.value = toString(value);\n              }\n            } else if (node.value !== toString(value)) {\n              node.value = toString(value);\n            }\n          } else if (type === 'submit' || type === 'reset') {\n            // Submit/reset inputs need the attribute removed completely to avoid\n            // blank-text buttons.\n            node.removeAttribute('value');\n            return;\n          }\n\n          if (disableInputAttributeSyncing) {\n            // When not syncing the value attribute, React only assigns a new value\n            // whenever the defaultValue React prop has changed. When not present,\n            // React does nothing\n            if (props.hasOwnProperty('defaultValue')) {\n              setDefaultValue(node, props.type, getToStringValue(props.defaultValue));\n            }\n          } else {\n            // When syncing the value attribute, the value comes from a cascade of\n            // properties:\n            //  1. The value React property\n            //  2. The defaultValue React property\n            //  3. Otherwise there should be no change\n            if (props.hasOwnProperty('value')) {\n              setDefaultValue(node, props.type, value);\n            } else if (props.hasOwnProperty('defaultValue')) {\n              setDefaultValue(node, props.type, getToStringValue(props.defaultValue));\n            }\n          }\n\n          if (disableInputAttributeSyncing) {\n            // When not syncing the checked attribute, the attribute is directly\n            // controllable from the defaultValue React property. It needs to be\n            // updated as new props come in.\n            if (props.defaultChecked == null) {\n              node.removeAttribute('checked');\n            } else {\n              node.defaultChecked = !!props.defaultChecked;\n            }\n          } else {\n            // When syncing the checked attribute, it only changes when it needs\n            // to be removed, such as transitioning from a checkbox into a text input\n            if (props.checked == null && props.defaultChecked != null) {\n              node.defaultChecked = !!props.defaultChecked;\n            }\n          }\n        }\n\n        function postMountWrapper(element, props, isHydrating) {\n          var node = element; // Do not assign value if it is already set. This prevents user text input\n          // from being lost during SSR hydration.\n\n          if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {\n            var type = props.type;\n            var isButton = type === 'submit' || type === 'reset'; // Avoid setting value attribute on submit/reset inputs as it overrides the\n            // default value provided by the browser. See: #12872\n\n            if (isButton && (props.value === undefined || props.value === null)) {\n              return;\n            }\n\n            var _initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input\n            // from being lost during SSR hydration.\n\n\n            if (!isHydrating) {\n              if (disableInputAttributeSyncing) {\n                var value = getToStringValue(props.value); // When not syncing the value attribute, the value property points\n                // directly to the React prop. Only assign it if it exists.\n\n                if (value != null) {\n                  // Always assign on buttons so that it is possible to assign an\n                  // empty string to clear button text.\n                  //\n                  // Otherwise, do not re-assign the value property if is empty. This\n                  // potentially avoids a DOM write and prevents Firefox (~60.0.1) from\n                  // prematurely marking required inputs as invalid. Equality is compared\n                  // to the current value in case the browser provided value is not an\n                  // empty string.\n                  if (isButton || value !== node.value) {\n                    node.value = toString(value);\n                  }\n                }\n              } else {\n                // When syncing the value attribute, the value property should use\n                // the wrapperState._initialValue property. This uses:\n                //\n                //   1. The value React property when present\n                //   2. The defaultValue React property when present\n                //   3. An empty string\n                if (_initialValue !== node.value) {\n                  node.value = _initialValue;\n                }\n              }\n            }\n\n            if (disableInputAttributeSyncing) {\n              // When not syncing the value attribute, assign the value attribute\n              // directly from the defaultValue React property (when present)\n              var defaultValue = getToStringValue(props.defaultValue);\n\n              if (defaultValue != null) {\n                node.defaultValue = toString(defaultValue);\n              }\n            } else {\n              // Otherwise, the value attribute is synchronized to the property,\n              // so we assign defaultValue to the same thing as the value property\n              // assignment step above.\n              node.defaultValue = _initialValue;\n            }\n          } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n          // this is needed to work around a chrome bug where setting defaultChecked\n          // will sometimes influence the value of checked (even after detachment).\n          // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n          // We need to temporarily unset name to avoid disrupting radio button groups.\n\n\n          var name = node.name;\n\n          if (name !== '') {\n            node.name = '';\n          }\n\n          if (disableInputAttributeSyncing) {\n            // When not syncing the checked attribute, the checked property\n            // never gets assigned. It must be manually set. We don't want\n            // to do this when hydrating so that existing user input isn't\n            // modified\n            if (!isHydrating) {\n              updateChecked(element, props);\n            } // Only assign the checked attribute if it is defined. This saves\n            // a DOM write when controlling the checked attribute isn't needed\n            // (text inputs, submit/reset)\n\n\n            if (props.hasOwnProperty('defaultChecked')) {\n              node.defaultChecked = !node.defaultChecked;\n              node.defaultChecked = !!props.defaultChecked;\n            }\n          } else {\n            // When syncing the checked attribute, both the checked property and\n            // attribute are assigned at the same time using defaultChecked. This uses:\n            //\n            //   1. The checked React property when present\n            //   2. The defaultChecked React property when present\n            //   3. Otherwise, false\n            node.defaultChecked = !node.defaultChecked;\n            node.defaultChecked = !!node._wrapperState.initialChecked;\n          }\n\n          if (name !== '') {\n            node.name = name;\n          }\n        }\n\n        function restoreControlledState(element, props) {\n          var node = element;\n          updateWrapper(node, props);\n          updateNamedCousins(node, props);\n        }\n\n        function updateNamedCousins(rootNode, props) {\n          var name = props.name;\n\n          if (props.type === 'radio' && name != null) {\n            var queryRoot = rootNode;\n\n            while (queryRoot.parentNode) {\n              queryRoot = queryRoot.parentNode;\n            } // If `rootNode.form` was non-null, then we could try `form.elements`,\n            // but that sometimes behaves strangely in IE8. We could also try using\n            // `form.getElementsByName`, but that will only return direct children\n            // and won't include inputs that use the HTML5 `form=` attribute. Since\n            // the input might not even be in a form. It might not even be in the\n            // document. Let's just use the local `querySelectorAll` to ensure we don't\n            // miss anything.\n\n\n            var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n            for (var i = 0; i < group.length; i++) {\n              var otherNode = group[i];\n\n              if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n                continue;\n              } // This will throw if radio buttons rendered by different copies of React\n              // and the same name are rendered into the same form (same as #1939).\n              // That's probably okay; we don't support it just as we don't support\n              // mixing React radio buttons with non-React ones.\n\n\n              var otherProps = getFiberCurrentPropsFromNode$1(otherNode);\n              !otherProps ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : void 0; // We need update the tracked value on the named cousin since the value\n              // was changed but the input saw no event or value set\n\n              updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that\n              // was previously checked to update will cause it to be come re-checked\n              // as appropriate.\n\n              updateWrapper(otherNode, otherProps);\n            }\n          }\n        } // In Chrome, assigning defaultValue to certain input types triggers input validation.\n        // For number inputs, the display value loses trailing decimal points. For email inputs,\n        // Chrome raises \"The specified value <x> is not a valid email address\".\n        //\n        // Here we check to see if the defaultValue has actually changed, avoiding these problems\n        // when the user is inputting text\n        //\n        // https://github.com/facebook/react/issues/7253\n\n\n        function setDefaultValue(node, type, value) {\n          if ( // Focused number inputs synchronize on blur. See ChangeEventPlugin.js\n          type !== 'number' || node.ownerDocument.activeElement !== node) {\n            if (value == null) {\n              node.defaultValue = toString(node._wrapperState.initialValue);\n            } else if (node.defaultValue !== toString(value)) {\n              node.defaultValue = toString(value);\n            }\n          }\n        }\n\n        var eventTypes$1 = {\n          change: {\n            phasedRegistrationNames: {\n              bubbled: 'onChange',\n              captured: 'onChangeCapture'\n            },\n            dependencies: [TOP_BLUR, TOP_CHANGE, TOP_CLICK, TOP_FOCUS, TOP_INPUT, TOP_KEY_DOWN, TOP_KEY_UP, TOP_SELECTION_CHANGE]\n          }\n        };\n\n        function createAndAccumulateChangeEvent(inst, nativeEvent, target) {\n          var event = SyntheticEvent.getPooled(eventTypes$1.change, inst, nativeEvent, target);\n          event.type = 'change'; // Flag this event loop as needing state restore.\n\n          enqueueStateRestore(target);\n          accumulateTwoPhaseDispatches(event);\n          return event;\n        }\n        /**\n         * For IE shims\n         */\n\n\n        var activeElement = null;\n        var activeElementInst = null;\n        /**\n         * SECTION: handle `change` event\n         */\n\n        function shouldUseChangeEvent(elem) {\n          var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n          return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n        }\n\n        function manualDispatchChangeEvent(nativeEvent) {\n          var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the\n          // other events and have it go through ReactBrowserEventEmitter. Since it\n          // doesn't, we manually listen for the events and so we have to enqueue and\n          // process the abstract event manually.\n          //\n          // Batching is necessary here in order to ensure that all event handlers run\n          // before the next rerender (including event handlers attached to ancestor\n          // elements instead of directly on the input). Without this, controlled\n          // components don't work properly in conjunction with event bubbling because\n          // the component is rerendered and the value reverted before all the event\n          // handlers can run. See https://github.com/facebook/react/issues/708.\n\n          batchedUpdates(runEventInBatch, event);\n        }\n\n        function runEventInBatch(event) {\n          runEventsInBatch(event);\n        }\n\n        function getInstIfValueChanged(targetInst) {\n          var targetNode = getNodeFromInstance$1(targetInst);\n\n          if (updateValueIfChanged(targetNode)) {\n            return targetInst;\n          }\n        }\n\n        function getTargetInstForChangeEvent(topLevelType, targetInst) {\n          if (topLevelType === TOP_CHANGE) {\n            return targetInst;\n          }\n        }\n        /**\n         * SECTION: handle `input` event\n         */\n\n\n        var isInputEventSupported = false;\n\n        if (canUseDOM) {\n          // IE9 claims to support the input event but fails to trigger it when\n          // deleting text, so we ignore its input events.\n          isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);\n        }\n        /**\n         * (For IE <=9) Starts tracking propertychange events on the passed-in element\n         * and override the value property so that we can distinguish user events from\n         * value changes in JS.\n         */\n\n\n        function startWatchingForValueChange(target, targetInst) {\n          activeElement = target;\n          activeElementInst = targetInst;\n          activeElement.attachEvent('onpropertychange', handlePropertyChange);\n        }\n        /**\n         * (For IE <=9) Removes the event listeners from the currently-tracked element,\n         * if any exists.\n         */\n\n\n        function stopWatchingForValueChange() {\n          if (!activeElement) {\n            return;\n          }\n\n          activeElement.detachEvent('onpropertychange', handlePropertyChange);\n          activeElement = null;\n          activeElementInst = null;\n        }\n        /**\n         * (For IE <=9) Handles a propertychange event, sending a `change` event if\n         * the value of the active element has changed.\n         */\n\n\n        function handlePropertyChange(nativeEvent) {\n          if (nativeEvent.propertyName !== 'value') {\n            return;\n          }\n\n          if (getInstIfValueChanged(activeElementInst)) {\n            manualDispatchChangeEvent(nativeEvent);\n          }\n        }\n\n        function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {\n          if (topLevelType === TOP_FOCUS) {\n            // In IE9, propertychange fires for most input events but is buggy and\n            // doesn't fire when text is deleted, but conveniently, selectionchange\n            // appears to fire in all of the remaining cases so we catch those and\n            // forward the event if the value has changed\n            // In either case, we don't want to call the event handler if the value\n            // is changed from JS so we redefine a setter for `.value` that updates\n            // our activeElementValue variable, allowing us to ignore those changes\n            //\n            // stopWatching() should be a noop here but we call it just in case we\n            // missed a blur event somehow.\n            stopWatchingForValueChange();\n            startWatchingForValueChange(target, targetInst);\n          } else if (topLevelType === TOP_BLUR) {\n            stopWatchingForValueChange();\n          }\n        } // For IE8 and IE9.\n\n\n        function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {\n          if (topLevelType === TOP_SELECTION_CHANGE || topLevelType === TOP_KEY_UP || topLevelType === TOP_KEY_DOWN) {\n            // On the selectionchange event, the target is just document which isn't\n            // helpful for us so just check activeElement instead.\n            //\n            // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n            // propertychange on the first input event after setting `value` from a\n            // script and fires only keydown, keypress, keyup. Catching keyup usually\n            // gets it and catching keydown lets us fire an event for the first\n            // keystroke if user does a key repeat (it'll be a little delayed: right\n            // before the second keystroke). Other input methods (e.g., paste) seem to\n            // fire selectionchange normally.\n            return getInstIfValueChanged(activeElementInst);\n          }\n        }\n        /**\n         * SECTION: handle `click` event\n         */\n\n\n        function shouldUseClickEvent(elem) {\n          // Use the `click` event to detect changes to checkbox and radio inputs.\n          // This approach works across all browsers, whereas `change` does not fire\n          // until `blur` in IE8.\n          var nodeName = elem.nodeName;\n          return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n        }\n\n        function getTargetInstForClickEvent(topLevelType, targetInst) {\n          if (topLevelType === TOP_CLICK) {\n            return getInstIfValueChanged(targetInst);\n          }\n        }\n\n        function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {\n          if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {\n            return getInstIfValueChanged(targetInst);\n          }\n        }\n\n        function handleControlledInputBlur(node) {\n          var state = node._wrapperState;\n\n          if (!state || !state.controlled || node.type !== 'number') {\n            return;\n          }\n\n          if (!disableInputAttributeSyncing) {\n            // If controlled, assign the value attribute to the current value on blur\n            setDefaultValue(node, 'number', node.value);\n          }\n        }\n        /**\n         * This plugin creates an `onChange` event that normalizes change events\n         * across form elements. This event fires at a time when it's possible to\n         * change the element's value without seeing a flicker.\n         *\n         * Supported elements are:\n         * - input (see `isTextInputElement`)\n         * - textarea\n         * - select\n         */\n\n\n        var ChangeEventPlugin = {\n          eventTypes: eventTypes$1,\n          _isInputEventSupported: isInputEventSupported,\n          extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n            var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;\n            var getTargetInstFunc = void 0,\n                handleEventFunc = void 0;\n\n            if (shouldUseChangeEvent(targetNode)) {\n              getTargetInstFunc = getTargetInstForChangeEvent;\n            } else if (isTextInputElement(targetNode)) {\n              if (isInputEventSupported) {\n                getTargetInstFunc = getTargetInstForInputOrChangeEvent;\n              } else {\n                getTargetInstFunc = getTargetInstForInputEventPolyfill;\n                handleEventFunc = handleEventsForInputEventPolyfill;\n              }\n            } else if (shouldUseClickEvent(targetNode)) {\n              getTargetInstFunc = getTargetInstForClickEvent;\n            }\n\n            if (getTargetInstFunc) {\n              var inst = getTargetInstFunc(topLevelType, targetInst);\n\n              if (inst) {\n                var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);\n                return event;\n              }\n            }\n\n            if (handleEventFunc) {\n              handleEventFunc(topLevelType, targetNode, targetInst);\n            } // When blurring, set the value attribute for number inputs\n\n\n            if (topLevelType === TOP_BLUR) {\n              handleControlledInputBlur(targetNode);\n            }\n          }\n        };\n        /**\n         * Module that is injectable into `EventPluginHub`, that specifies a\n         * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n         * plugins, without having to package every one of them. This is better than\n         * having plugins be ordered in the same order that they are injected because\n         * that ordering would be influenced by the packaging order.\n         * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n         * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n         */\n\n        var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];\n        var SyntheticUIEvent = SyntheticEvent.extend({\n          view: null,\n          detail: null\n        });\n        var modifierKeyToProp = {\n          Alt: 'altKey',\n          Control: 'ctrlKey',\n          Meta: 'metaKey',\n          Shift: 'shiftKey'\n        }; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support\n        // getModifierState. If getModifierState is not supported, we map it to a set of\n        // modifier keys exposed by the event. In this case, Lock-keys are not supported.\n\n        /**\n         * Translation from modifier key to the associated property in the event.\n         * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n         */\n\n        function modifierStateGetter(keyArg) {\n          var syntheticEvent = this;\n          var nativeEvent = syntheticEvent.nativeEvent;\n\n          if (nativeEvent.getModifierState) {\n            return nativeEvent.getModifierState(keyArg);\n          }\n\n          var keyProp = modifierKeyToProp[keyArg];\n          return keyProp ? !!nativeEvent[keyProp] : false;\n        }\n\n        function getEventModifierState(nativeEvent) {\n          return modifierStateGetter;\n        }\n\n        var previousScreenX = 0;\n        var previousScreenY = 0; // Use flags to signal movementX/Y has already been set\n\n        var isMovementXSet = false;\n        var isMovementYSet = false;\n        /**\n         * @interface MouseEvent\n         * @see http://www.w3.org/TR/DOM-Level-3-Events/\n         */\n\n        var SyntheticMouseEvent = SyntheticUIEvent.extend({\n          screenX: null,\n          screenY: null,\n          clientX: null,\n          clientY: null,\n          pageX: null,\n          pageY: null,\n          ctrlKey: null,\n          shiftKey: null,\n          altKey: null,\n          metaKey: null,\n          getModifierState: getEventModifierState,\n          button: null,\n          buttons: null,\n          relatedTarget: function relatedTarget(event) {\n            return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n          },\n          movementX: function movementX(event) {\n            if ('movementX' in event) {\n              return event.movementX;\n            }\n\n            var screenX = previousScreenX;\n            previousScreenX = event.screenX;\n\n            if (!isMovementXSet) {\n              isMovementXSet = true;\n              return 0;\n            }\n\n            return event.type === 'mousemove' ? event.screenX - screenX : 0;\n          },\n          movementY: function movementY(event) {\n            if ('movementY' in event) {\n              return event.movementY;\n            }\n\n            var screenY = previousScreenY;\n            previousScreenY = event.screenY;\n\n            if (!isMovementYSet) {\n              isMovementYSet = true;\n              return 0;\n            }\n\n            return event.type === 'mousemove' ? event.screenY - screenY : 0;\n          }\n        });\n        /**\n         * @interface PointerEvent\n         * @see http://www.w3.org/TR/pointerevents/\n         */\n\n        var SyntheticPointerEvent = SyntheticMouseEvent.extend({\n          pointerId: null,\n          width: null,\n          height: null,\n          pressure: null,\n          tangentialPressure: null,\n          tiltX: null,\n          tiltY: null,\n          twist: null,\n          pointerType: null,\n          isPrimary: null\n        });\n        var eventTypes$2 = {\n          mouseEnter: {\n            registrationName: 'onMouseEnter',\n            dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]\n          },\n          mouseLeave: {\n            registrationName: 'onMouseLeave',\n            dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]\n          },\n          pointerEnter: {\n            registrationName: 'onPointerEnter',\n            dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]\n          },\n          pointerLeave: {\n            registrationName: 'onPointerLeave',\n            dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]\n          }\n        };\n        var EnterLeaveEventPlugin = {\n          eventTypes: eventTypes$2,\n\n          /**\n           * For almost every interaction we care about, there will be both a top-level\n           * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n           * we do not extract duplicate events. However, moving the mouse into the\n           * browser from outside will not fire a `mouseout` event. In this case, we use\n           * the `mouseover` top-level event.\n           */\n          extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n            var isOverEvent = topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;\n            var isOutEvent = topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;\n\n            if (isOverEvent && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n              return null;\n            }\n\n            if (!isOutEvent && !isOverEvent) {\n              // Must not be a mouse or pointer in or out - ignoring.\n              return null;\n            }\n\n            var win = void 0;\n\n            if (nativeEventTarget.window === nativeEventTarget) {\n              // `nativeEventTarget` is probably a window object.\n              win = nativeEventTarget;\n            } else {\n              // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n              var doc = nativeEventTarget.ownerDocument;\n\n              if (doc) {\n                win = doc.defaultView || doc.parentWindow;\n              } else {\n                win = window;\n              }\n            }\n\n            var from = void 0;\n            var to = void 0;\n\n            if (isOutEvent) {\n              from = targetInst;\n              var related = nativeEvent.relatedTarget || nativeEvent.toElement;\n              to = related ? getClosestInstanceFromNode(related) : null;\n            } else {\n              // Moving to a node from outside the window.\n              from = null;\n              to = targetInst;\n            }\n\n            if (from === to) {\n              // Nothing pertains to our managed components.\n              return null;\n            }\n\n            var eventInterface = void 0,\n                leaveEventType = void 0,\n                enterEventType = void 0,\n                eventTypePrefix = void 0;\n\n            if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {\n              eventInterface = SyntheticMouseEvent;\n              leaveEventType = eventTypes$2.mouseLeave;\n              enterEventType = eventTypes$2.mouseEnter;\n              eventTypePrefix = 'mouse';\n            } else if (topLevelType === TOP_POINTER_OUT || topLevelType === TOP_POINTER_OVER) {\n              eventInterface = SyntheticPointerEvent;\n              leaveEventType = eventTypes$2.pointerLeave;\n              enterEventType = eventTypes$2.pointerEnter;\n              eventTypePrefix = 'pointer';\n            }\n\n            var fromNode = from == null ? win : getNodeFromInstance$1(from);\n            var toNode = to == null ? win : getNodeFromInstance$1(to);\n            var leave = eventInterface.getPooled(leaveEventType, from, nativeEvent, nativeEventTarget);\n            leave.type = eventTypePrefix + 'leave';\n            leave.target = fromNode;\n            leave.relatedTarget = toNode;\n            var enter = eventInterface.getPooled(enterEventType, to, nativeEvent, nativeEventTarget);\n            enter.type = eventTypePrefix + 'enter';\n            enter.target = toNode;\n            enter.relatedTarget = fromNode;\n            accumulateEnterLeaveDispatches(leave, enter, from, to);\n            return [leave, enter];\n          }\n        };\n        /*eslint-disable no-self-compare */\n\n        var hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n        /**\n         * inlined Object.is polyfill to avoid requiring consumers ship their own\n         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n         */\n\n        function is(x, y) {\n          // SameValue algorithm\n          if (x === y) {\n            // Steps 1-5, 7-10\n            // Steps 6.b-6.e: +0 != -0\n            // Added the nonzero y check to make Flow happy, but it is redundant\n            return x !== 0 || y !== 0 || 1 / x === 1 / y;\n          } else {\n            // Step 6.a: NaN == NaN\n            return x !== x && y !== y;\n          }\n        }\n        /**\n         * Performs equality by iterating through keys on an object and returning false\n         * when any key has values which are not strictly equal between the arguments.\n         * Returns true when the values of all keys are strictly equal.\n         */\n\n\n        function shallowEqual(objA, objB) {\n          if (is(objA, objB)) {\n            return true;\n          }\n\n          if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n            return false;\n          }\n\n          var keysA = Object.keys(objA);\n          var keysB = Object.keys(objB);\n\n          if (keysA.length !== keysB.length) {\n            return false;\n          } // Test for A's keys different from B.\n\n\n          for (var i = 0; i < keysA.length; i++) {\n            if (!hasOwnProperty$1.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n        /**\n         * `ReactInstanceMap` maintains a mapping from a public facing stateful\n         * instance (key) and the internal representation (value). This allows public\n         * methods to accept the user facing instance as an argument and map them back\n         * to internal methods.\n         *\n         * Note that this module is currently shared and assumed to be stateless.\n         * If this becomes an actual Map, that will break.\n         */\n\n        /**\n         * This API should be called `delete` but we'd have to make sure to always\n         * transform these to strings for IE support. When this transform is fully\n         * supported we can rename it.\n         */\n\n\n        function get(key) {\n          return key._reactInternalFiber;\n        }\n\n        function has(key) {\n          return key._reactInternalFiber !== undefined;\n        }\n\n        function set(key, value) {\n          key._reactInternalFiber = value;\n        } // Don't change these two values. They're used by React Dev Tools.\n\n\n        var NoEffect =\n        /*              */\n        0;\n        var PerformedWork =\n        /*         */\n        1; // You can change the rest (and add more).\n\n        var Placement =\n        /*             */\n        2;\n        var Update =\n        /*                */\n        4;\n        var PlacementAndUpdate =\n        /*    */\n        6;\n        var Deletion =\n        /*              */\n        8;\n        var ContentReset =\n        /*          */\n        16;\n        var Callback =\n        /*              */\n        32;\n        var DidCapture =\n        /*            */\n        64;\n        var Ref =\n        /*                   */\n        128;\n        var Snapshot =\n        /*              */\n        256;\n        var Passive =\n        /*               */\n        512; // Passive & Update & Callback & Ref & Snapshot\n\n        var LifecycleEffectMask =\n        /*   */\n        932; // Union of all host effects\n\n        var HostEffectMask =\n        /*        */\n        1023;\n        var Incomplete =\n        /*            */\n        1024;\n        var ShouldCapture =\n        /*         */\n        2048;\n        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n        var MOUNTING = 1;\n        var MOUNTED = 2;\n        var UNMOUNTED = 3;\n\n        function isFiberMountedImpl(fiber) {\n          var node = fiber;\n\n          if (!fiber.alternate) {\n            // If there is no alternate, this might be a new tree that isn't inserted\n            // yet. If it is, then it will have a pending insertion effect on it.\n            if ((node.effectTag & Placement) !== NoEffect) {\n              return MOUNTING;\n            }\n\n            while (node.return) {\n              node = node.return;\n\n              if ((node.effectTag & Placement) !== NoEffect) {\n                return MOUNTING;\n              }\n            }\n          } else {\n            while (node.return) {\n              node = node.return;\n            }\n          }\n\n          if (node.tag === HostRoot) {\n            // TODO: Check if this was a nested HostRoot when used with\n            // renderContainerIntoSubtree.\n            return MOUNTED;\n          } // If we didn't hit the root, that means that we're in an disconnected tree\n          // that has been unmounted.\n\n\n          return UNMOUNTED;\n        }\n\n        function isFiberMounted(fiber) {\n          return isFiberMountedImpl(fiber) === MOUNTED;\n        }\n\n        function isMounted(component) {\n          {\n            var owner = ReactCurrentOwner$1.current;\n\n            if (owner !== null && owner.tag === ClassComponent) {\n              var ownerFiber = owner;\n              var instance = ownerFiber.stateNode;\n              !instance._warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber.type) || 'A component') : void 0;\n              instance._warnedAboutRefsInRender = true;\n            }\n          }\n          var fiber = get(component);\n\n          if (!fiber) {\n            return false;\n          }\n\n          return isFiberMountedImpl(fiber) === MOUNTED;\n        }\n\n        function assertIsMounted(fiber) {\n          !(isFiberMountedImpl(fiber) === MOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;\n        }\n\n        function findCurrentFiberUsingSlowPath(fiber) {\n          var alternate = fiber.alternate;\n\n          if (!alternate) {\n            // If there is no alternate, then we only need to check if it is mounted.\n            var state = isFiberMountedImpl(fiber);\n            !(state !== UNMOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;\n\n            if (state === MOUNTING) {\n              return null;\n            }\n\n            return fiber;\n          } // If we have two possible branches, we'll walk backwards up to the root\n          // to see what path the root points to. On the way we may hit one of the\n          // special cases and we'll deal with them.\n\n\n          var a = fiber;\n          var b = alternate;\n\n          while (true) {\n            var parentA = a.return;\n            var parentB = parentA ? parentA.alternate : null;\n\n            if (!parentA || !parentB) {\n              // We're at the root.\n              break;\n            } // If both copies of the parent fiber point to the same child, we can\n            // assume that the child is current. This happens when we bailout on low\n            // priority: the bailed out fiber's child reuses the current child.\n\n\n            if (parentA.child === parentB.child) {\n              var child = parentA.child;\n\n              while (child) {\n                if (child === a) {\n                  // We've determined that A is the current branch.\n                  assertIsMounted(parentA);\n                  return fiber;\n                }\n\n                if (child === b) {\n                  // We've determined that B is the current branch.\n                  assertIsMounted(parentA);\n                  return alternate;\n                }\n\n                child = child.sibling;\n              } // We should never have an alternate for any mounting node. So the only\n              // way this could possibly happen is if this was unmounted, if at all.\n\n\n              invariant(false, 'Unable to find node on an unmounted component.');\n            }\n\n            if (a.return !== b.return) {\n              // The return pointer of A and the return pointer of B point to different\n              // fibers. We assume that return pointers never criss-cross, so A must\n              // belong to the child set of A.return, and B must belong to the child\n              // set of B.return.\n              a = parentA;\n              b = parentB;\n            } else {\n              // The return pointers point to the same fiber. We'll have to use the\n              // default, slow path: scan the child sets of each parent alternate to see\n              // which child belongs to which set.\n              //\n              // Search parent A's child set\n              var didFindChild = false;\n              var _child = parentA.child;\n\n              while (_child) {\n                if (_child === a) {\n                  didFindChild = true;\n                  a = parentA;\n                  b = parentB;\n                  break;\n                }\n\n                if (_child === b) {\n                  didFindChild = true;\n                  b = parentA;\n                  a = parentB;\n                  break;\n                }\n\n                _child = _child.sibling;\n              }\n\n              if (!didFindChild) {\n                // Search parent B's child set\n                _child = parentB.child;\n\n                while (_child) {\n                  if (_child === a) {\n                    didFindChild = true;\n                    a = parentB;\n                    b = parentA;\n                    break;\n                  }\n\n                  if (_child === b) {\n                    didFindChild = true;\n                    b = parentB;\n                    a = parentA;\n                    break;\n                  }\n\n                  _child = _child.sibling;\n                }\n\n                !didFindChild ? invariant(false, 'Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.') : void 0;\n              }\n            }\n\n            !(a.alternate === b) ? invariant(false, 'Return fibers should always be each others\\' alternates. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n          } // If the root is not a host container, we're in a disconnected tree. I.e.\n          // unmounted.\n\n\n          !(a.tag === HostRoot) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;\n\n          if (a.stateNode.current === a) {\n            // We've determined that A is the current branch.\n            return fiber;\n          } // Otherwise B has to be current branch.\n\n\n          return alternate;\n        }\n\n        function findCurrentHostFiber(parent) {\n          var currentParent = findCurrentFiberUsingSlowPath(parent);\n\n          if (!currentParent) {\n            return null;\n          } // Next we'll drill down this component to find the first HostComponent/Text.\n\n\n          var node = currentParent;\n\n          while (true) {\n            if (node.tag === HostComponent || node.tag === HostText) {\n              return node;\n            } else if (node.child) {\n              node.child.return = node;\n              node = node.child;\n              continue;\n            }\n\n            if (node === currentParent) {\n              return null;\n            }\n\n            while (!node.sibling) {\n              if (!node.return || node.return === currentParent) {\n                return null;\n              }\n\n              node = node.return;\n            }\n\n            node.sibling.return = node.return;\n            node = node.sibling;\n          } // Flow needs the return null here, but ESLint complains about it.\n          // eslint-disable-next-line no-unreachable\n\n\n          return null;\n        }\n\n        function findCurrentHostFiberWithNoPortals(parent) {\n          var currentParent = findCurrentFiberUsingSlowPath(parent);\n\n          if (!currentParent) {\n            return null;\n          } // Next we'll drill down this component to find the first HostComponent/Text.\n\n\n          var node = currentParent;\n\n          while (true) {\n            if (node.tag === HostComponent || node.tag === HostText) {\n              return node;\n            } else if (node.child && node.tag !== HostPortal) {\n              node.child.return = node;\n              node = node.child;\n              continue;\n            }\n\n            if (node === currentParent) {\n              return null;\n            }\n\n            while (!node.sibling) {\n              if (!node.return || node.return === currentParent) {\n                return null;\n              }\n\n              node = node.return;\n            }\n\n            node.sibling.return = node.return;\n            node = node.sibling;\n          } // Flow needs the return null here, but ESLint complains about it.\n          // eslint-disable-next-line no-unreachable\n\n\n          return null;\n        }\n\n        function addEventBubbleListener(element, eventType, listener) {\n          element.addEventListener(eventType, listener, false);\n        }\n\n        function addEventCaptureListener(element, eventType, listener) {\n          element.addEventListener(eventType, listener, true);\n        }\n        /**\n         * @interface Event\n         * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n         */\n\n\n        var SyntheticAnimationEvent = SyntheticEvent.extend({\n          animationName: null,\n          elapsedTime: null,\n          pseudoElement: null\n        });\n        /**\n         * @interface Event\n         * @see http://www.w3.org/TR/clipboard-apis/\n         */\n\n        var SyntheticClipboardEvent = SyntheticEvent.extend({\n          clipboardData: function clipboardData(event) {\n            return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n          }\n        });\n        /**\n         * @interface FocusEvent\n         * @see http://www.w3.org/TR/DOM-Level-3-Events/\n         */\n\n        var SyntheticFocusEvent = SyntheticUIEvent.extend({\n          relatedTarget: null\n        });\n        /**\n         * `charCode` represents the actual \"character code\" and is safe to use with\n         * `String.fromCharCode`. As such, only keys that correspond to printable\n         * characters produce a valid `charCode`, the only exception to this is Enter.\n         * The Tab-key is considered non-printable and does not have a `charCode`,\n         * presumably because it does not produce a tab-character in browsers.\n         *\n         * @param {object} nativeEvent Native browser event.\n         * @return {number} Normalized `charCode` property.\n         */\n\n        function getEventCharCode(nativeEvent) {\n          var charCode = void 0;\n          var keyCode = nativeEvent.keyCode;\n\n          if ('charCode' in nativeEvent) {\n            charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n\n            if (charCode === 0 && keyCode === 13) {\n              charCode = 13;\n            }\n          } else {\n            // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n            charCode = keyCode;\n          } // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)\n          // report Enter as charCode 10 when ctrl is pressed.\n\n\n          if (charCode === 10) {\n            charCode = 13;\n          } // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n          // Must not discard the (non-)printable Enter-key.\n\n\n          if (charCode >= 32 || charCode === 13) {\n            return charCode;\n          }\n\n          return 0;\n        }\n        /**\n         * Normalization of deprecated HTML5 `key` values\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n         */\n\n\n        var normalizeKey = {\n          Esc: 'Escape',\n          Spacebar: ' ',\n          Left: 'ArrowLeft',\n          Up: 'ArrowUp',\n          Right: 'ArrowRight',\n          Down: 'ArrowDown',\n          Del: 'Delete',\n          Win: 'OS',\n          Menu: 'ContextMenu',\n          Apps: 'ContextMenu',\n          Scroll: 'ScrollLock',\n          MozPrintableKey: 'Unidentified'\n        };\n        /**\n         * Translation from legacy `keyCode` to HTML5 `key`\n         * Only special keys supported, all others depend on keyboard layout or browser\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n         */\n\n        var translateToKey = {\n          '8': 'Backspace',\n          '9': 'Tab',\n          '12': 'Clear',\n          '13': 'Enter',\n          '16': 'Shift',\n          '17': 'Control',\n          '18': 'Alt',\n          '19': 'Pause',\n          '20': 'CapsLock',\n          '27': 'Escape',\n          '32': ' ',\n          '33': 'PageUp',\n          '34': 'PageDown',\n          '35': 'End',\n          '36': 'Home',\n          '37': 'ArrowLeft',\n          '38': 'ArrowUp',\n          '39': 'ArrowRight',\n          '40': 'ArrowDown',\n          '45': 'Insert',\n          '46': 'Delete',\n          '112': 'F1',\n          '113': 'F2',\n          '114': 'F3',\n          '115': 'F4',\n          '116': 'F5',\n          '117': 'F6',\n          '118': 'F7',\n          '119': 'F8',\n          '120': 'F9',\n          '121': 'F10',\n          '122': 'F11',\n          '123': 'F12',\n          '144': 'NumLock',\n          '145': 'ScrollLock',\n          '224': 'Meta'\n        };\n        /**\n         * @param {object} nativeEvent Native browser event.\n         * @return {string} Normalized `key` property.\n         */\n\n        function getEventKey(nativeEvent) {\n          if (nativeEvent.key) {\n            // Normalize inconsistent values reported by browsers due to\n            // implementations of a working draft specification.\n            // FireFox implements `key` but returns `MozPrintableKey` for all\n            // printable characters (normalized to `Unidentified`), ignore it.\n            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n\n            if (key !== 'Unidentified') {\n              return key;\n            }\n          } // Browser does not implement `key`, polyfill as much of it as we can.\n\n\n          if (nativeEvent.type === 'keypress') {\n            var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can\n            // thus be captured by `keypress`, no other non-printable key should.\n\n            return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n          }\n\n          if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n            // While user keyboard layout determines the actual meaning of each\n            // `keyCode` value, almost all function keys have a universal value.\n            return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n          }\n\n          return '';\n        }\n        /**\n         * @interface KeyboardEvent\n         * @see http://www.w3.org/TR/DOM-Level-3-Events/\n         */\n\n\n        var SyntheticKeyboardEvent = SyntheticUIEvent.extend({\n          key: getEventKey,\n          location: null,\n          ctrlKey: null,\n          shiftKey: null,\n          altKey: null,\n          metaKey: null,\n          repeat: null,\n          locale: null,\n          getModifierState: getEventModifierState,\n          // Legacy Interface\n          charCode: function charCode(event) {\n            // `charCode` is the result of a KeyPress event and represents the value of\n            // the actual printable character.\n            // KeyPress is deprecated, but its replacement is not yet final and not\n            // implemented in any major browser. Only KeyPress has charCode.\n            if (event.type === 'keypress') {\n              return getEventCharCode(event);\n            }\n\n            return 0;\n          },\n          keyCode: function keyCode(event) {\n            // `keyCode` is the result of a KeyDown/Up event and represents the value of\n            // physical keyboard key.\n            // The actual meaning of the value depends on the users' keyboard layout\n            // which cannot be detected. Assuming that it is a US keyboard layout\n            // provides a surprisingly accurate mapping for US and European users.\n            // Due to this, it is left to the user to implement at this time.\n            if (event.type === 'keydown' || event.type === 'keyup') {\n              return event.keyCode;\n            }\n\n            return 0;\n          },\n          which: function which(event) {\n            // `which` is an alias for either `keyCode` or `charCode` depending on the\n            // type of the event.\n            if (event.type === 'keypress') {\n              return getEventCharCode(event);\n            }\n\n            if (event.type === 'keydown' || event.type === 'keyup') {\n              return event.keyCode;\n            }\n\n            return 0;\n          }\n        });\n        /**\n         * @interface DragEvent\n         * @see http://www.w3.org/TR/DOM-Level-3-Events/\n         */\n\n        var SyntheticDragEvent = SyntheticMouseEvent.extend({\n          dataTransfer: null\n        });\n        /**\n         * @interface TouchEvent\n         * @see http://www.w3.org/TR/touch-events/\n         */\n\n        var SyntheticTouchEvent = SyntheticUIEvent.extend({\n          touches: null,\n          targetTouches: null,\n          changedTouches: null,\n          altKey: null,\n          metaKey: null,\n          ctrlKey: null,\n          shiftKey: null,\n          getModifierState: getEventModifierState\n        });\n        /**\n         * @interface Event\n         * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n         */\n\n        var SyntheticTransitionEvent = SyntheticEvent.extend({\n          propertyName: null,\n          elapsedTime: null,\n          pseudoElement: null\n        });\n        /**\n         * @interface WheelEvent\n         * @see http://www.w3.org/TR/DOM-Level-3-Events/\n         */\n\n        var SyntheticWheelEvent = SyntheticMouseEvent.extend({\n          deltaX: function deltaX(event) {\n            return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n            'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n          },\n          deltaY: function deltaY(event) {\n            return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n            'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n            'wheelDelta' in event ? -event.wheelDelta : 0;\n          },\n          deltaZ: null,\n          // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n          // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n          // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n          // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n          deltaMode: null\n        });\n        /**\n         * Turns\n         * ['abort', ...]\n         * into\n         * eventTypes = {\n         *   'abort': {\n         *     phasedRegistrationNames: {\n         *       bubbled: 'onAbort',\n         *       captured: 'onAbortCapture',\n         *     },\n         *     dependencies: [TOP_ABORT],\n         *   },\n         *   ...\n         * };\n         * topLevelEventsToDispatchConfig = new Map([\n         *   [TOP_ABORT, { sameConfig }],\n         * ]);\n         */\n\n        var interactiveEventTypeNames = [[TOP_BLUR, 'blur'], [TOP_CANCEL, 'cancel'], [TOP_CLICK, 'click'], [TOP_CLOSE, 'close'], [TOP_CONTEXT_MENU, 'contextMenu'], [TOP_COPY, 'copy'], [TOP_CUT, 'cut'], [TOP_AUX_CLICK, 'auxClick'], [TOP_DOUBLE_CLICK, 'doubleClick'], [TOP_DRAG_END, 'dragEnd'], [TOP_DRAG_START, 'dragStart'], [TOP_DROP, 'drop'], [TOP_FOCUS, 'focus'], [TOP_INPUT, 'input'], [TOP_INVALID, 'invalid'], [TOP_KEY_DOWN, 'keyDown'], [TOP_KEY_PRESS, 'keyPress'], [TOP_KEY_UP, 'keyUp'], [TOP_MOUSE_DOWN, 'mouseDown'], [TOP_MOUSE_UP, 'mouseUp'], [TOP_PASTE, 'paste'], [TOP_PAUSE, 'pause'], [TOP_PLAY, 'play'], [TOP_POINTER_CANCEL, 'pointerCancel'], [TOP_POINTER_DOWN, 'pointerDown'], [TOP_POINTER_UP, 'pointerUp'], [TOP_RATE_CHANGE, 'rateChange'], [TOP_RESET, 'reset'], [TOP_SEEKED, 'seeked'], [TOP_SUBMIT, 'submit'], [TOP_TOUCH_CANCEL, 'touchCancel'], [TOP_TOUCH_END, 'touchEnd'], [TOP_TOUCH_START, 'touchStart'], [TOP_VOLUME_CHANGE, 'volumeChange']];\n        var nonInteractiveEventTypeNames = [[TOP_ABORT, 'abort'], [TOP_ANIMATION_END, 'animationEnd'], [TOP_ANIMATION_ITERATION, 'animationIteration'], [TOP_ANIMATION_START, 'animationStart'], [TOP_CAN_PLAY, 'canPlay'], [TOP_CAN_PLAY_THROUGH, 'canPlayThrough'], [TOP_DRAG, 'drag'], [TOP_DRAG_ENTER, 'dragEnter'], [TOP_DRAG_EXIT, 'dragExit'], [TOP_DRAG_LEAVE, 'dragLeave'], [TOP_DRAG_OVER, 'dragOver'], [TOP_DURATION_CHANGE, 'durationChange'], [TOP_EMPTIED, 'emptied'], [TOP_ENCRYPTED, 'encrypted'], [TOP_ENDED, 'ended'], [TOP_ERROR, 'error'], [TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture'], [TOP_LOAD, 'load'], [TOP_LOADED_DATA, 'loadedData'], [TOP_LOADED_METADATA, 'loadedMetadata'], [TOP_LOAD_START, 'loadStart'], [TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture'], [TOP_MOUSE_MOVE, 'mouseMove'], [TOP_MOUSE_OUT, 'mouseOut'], [TOP_MOUSE_OVER, 'mouseOver'], [TOP_PLAYING, 'playing'], [TOP_POINTER_MOVE, 'pointerMove'], [TOP_POINTER_OUT, 'pointerOut'], [TOP_POINTER_OVER, 'pointerOver'], [TOP_PROGRESS, 'progress'], [TOP_SCROLL, 'scroll'], [TOP_SEEKING, 'seeking'], [TOP_STALLED, 'stalled'], [TOP_SUSPEND, 'suspend'], [TOP_TIME_UPDATE, 'timeUpdate'], [TOP_TOGGLE, 'toggle'], [TOP_TOUCH_MOVE, 'touchMove'], [TOP_TRANSITION_END, 'transitionEnd'], [TOP_WAITING, 'waiting'], [TOP_WHEEL, 'wheel']];\n        var eventTypes$4 = {};\n        var topLevelEventsToDispatchConfig = {};\n\n        function addEventTypeNameToConfig(_ref, isInteractive) {\n          var topEvent = _ref[0],\n              event = _ref[1];\n          var capitalizedEvent = event[0].toUpperCase() + event.slice(1);\n          var onEvent = 'on' + capitalizedEvent;\n          var type = {\n            phasedRegistrationNames: {\n              bubbled: onEvent,\n              captured: onEvent + 'Capture'\n            },\n            dependencies: [topEvent],\n            isInteractive: isInteractive\n          };\n          eventTypes$4[event] = type;\n          topLevelEventsToDispatchConfig[topEvent] = type;\n        }\n\n        interactiveEventTypeNames.forEach(function (eventTuple) {\n          addEventTypeNameToConfig(eventTuple, true);\n        });\n        nonInteractiveEventTypeNames.forEach(function (eventTuple) {\n          addEventTypeNameToConfig(eventTuple, false);\n        }); // Only used in DEV for exhaustiveness validation.\n\n        var knownHTMLTopLevelTypes = [TOP_ABORT, TOP_CANCEL, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_CLOSE, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_INPUT, TOP_INVALID, TOP_LOAD, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_RESET, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUBMIT, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_TOGGLE, TOP_VOLUME_CHANGE, TOP_WAITING];\n        var SimpleEventPlugin = {\n          eventTypes: eventTypes$4,\n          isInteractiveTopLevelEventType: function isInteractiveTopLevelEventType(topLevelType) {\n            var config = topLevelEventsToDispatchConfig[topLevelType];\n            return config !== undefined && config.isInteractive === true;\n          },\n          extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n            var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n\n            if (!dispatchConfig) {\n              return null;\n            }\n\n            var EventConstructor = void 0;\n\n            switch (topLevelType) {\n              case TOP_KEY_PRESS:\n                // Firefox creates a keypress event for function keys too. This removes\n                // the unwanted keypress events. Enter is however both printable and\n                // non-printable. One would expect Tab to be as well (but it isn't).\n                if (getEventCharCode(nativeEvent) === 0) {\n                  return null;\n                }\n\n              /* falls through */\n\n              case TOP_KEY_DOWN:\n              case TOP_KEY_UP:\n                EventConstructor = SyntheticKeyboardEvent;\n                break;\n\n              case TOP_BLUR:\n              case TOP_FOCUS:\n                EventConstructor = SyntheticFocusEvent;\n                break;\n\n              case TOP_CLICK:\n                // Firefox creates a click event on right mouse clicks. This removes the\n                // unwanted click events.\n                if (nativeEvent.button === 2) {\n                  return null;\n                }\n\n              /* falls through */\n\n              case TOP_AUX_CLICK:\n              case TOP_DOUBLE_CLICK:\n              case TOP_MOUSE_DOWN:\n              case TOP_MOUSE_MOVE:\n              case TOP_MOUSE_UP: // TODO: Disabled elements should not respond to mouse events\n\n              /* falls through */\n\n              case TOP_MOUSE_OUT:\n              case TOP_MOUSE_OVER:\n              case TOP_CONTEXT_MENU:\n                EventConstructor = SyntheticMouseEvent;\n                break;\n\n              case TOP_DRAG:\n              case TOP_DRAG_END:\n              case TOP_DRAG_ENTER:\n              case TOP_DRAG_EXIT:\n              case TOP_DRAG_LEAVE:\n              case TOP_DRAG_OVER:\n              case TOP_DRAG_START:\n              case TOP_DROP:\n                EventConstructor = SyntheticDragEvent;\n                break;\n\n              case TOP_TOUCH_CANCEL:\n              case TOP_TOUCH_END:\n              case TOP_TOUCH_MOVE:\n              case TOP_TOUCH_START:\n                EventConstructor = SyntheticTouchEvent;\n                break;\n\n              case TOP_ANIMATION_END:\n              case TOP_ANIMATION_ITERATION:\n              case TOP_ANIMATION_START:\n                EventConstructor = SyntheticAnimationEvent;\n                break;\n\n              case TOP_TRANSITION_END:\n                EventConstructor = SyntheticTransitionEvent;\n                break;\n\n              case TOP_SCROLL:\n                EventConstructor = SyntheticUIEvent;\n                break;\n\n              case TOP_WHEEL:\n                EventConstructor = SyntheticWheelEvent;\n                break;\n\n              case TOP_COPY:\n              case TOP_CUT:\n              case TOP_PASTE:\n                EventConstructor = SyntheticClipboardEvent;\n                break;\n\n              case TOP_GOT_POINTER_CAPTURE:\n              case TOP_LOST_POINTER_CAPTURE:\n              case TOP_POINTER_CANCEL:\n              case TOP_POINTER_DOWN:\n              case TOP_POINTER_MOVE:\n              case TOP_POINTER_OUT:\n              case TOP_POINTER_OVER:\n              case TOP_POINTER_UP:\n                EventConstructor = SyntheticPointerEvent;\n                break;\n\n              default:\n                {\n                  if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {\n                    warningWithoutStack$1(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);\n                  }\n                } // HTML Events\n                // @see http://www.w3.org/TR/html5/index.html#events-0\n\n                EventConstructor = SyntheticEvent;\n                break;\n            }\n\n            var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n            accumulateTwoPhaseDispatches(event);\n            return event;\n          }\n        };\n        var isInteractiveTopLevelEventType = SimpleEventPlugin.isInteractiveTopLevelEventType;\n        var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;\n        var callbackBookkeepingPool = [];\n        /**\n         * Find the deepest React component completely containing the root of the\n         * passed-in instance (for use when entire React trees are nested within each\n         * other). If React trees are not nested, returns null.\n         */\n\n        function findRootContainerNode(inst) {\n          // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n          // traversal, but caching is difficult to do correctly without using a\n          // mutation observer to listen for all DOM changes.\n          while (inst.return) {\n            inst = inst.return;\n          }\n\n          if (inst.tag !== HostRoot) {\n            // This can happen if we're in a detached tree.\n            return null;\n          }\n\n          return inst.stateNode.containerInfo;\n        } // Used to store ancestor hierarchy in top level callback\n\n\n        function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst) {\n          if (callbackBookkeepingPool.length) {\n            var instance = callbackBookkeepingPool.pop();\n            instance.topLevelType = topLevelType;\n            instance.nativeEvent = nativeEvent;\n            instance.targetInst = targetInst;\n            return instance;\n          }\n\n          return {\n            topLevelType: topLevelType,\n            nativeEvent: nativeEvent,\n            targetInst: targetInst,\n            ancestors: []\n          };\n        }\n\n        function releaseTopLevelCallbackBookKeeping(instance) {\n          instance.topLevelType = null;\n          instance.nativeEvent = null;\n          instance.targetInst = null;\n          instance.ancestors.length = 0;\n\n          if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {\n            callbackBookkeepingPool.push(instance);\n          }\n        }\n\n        function handleTopLevel(bookKeeping) {\n          var targetInst = bookKeeping.targetInst; // Loop through the hierarchy, in case there's any nested components.\n          // It's important that we build the array of ancestors before calling any\n          // event handlers, because event handlers can modify the DOM, leading to\n          // inconsistencies with ReactMount's node cache. See #1105.\n\n          var ancestor = targetInst;\n\n          do {\n            if (!ancestor) {\n              bookKeeping.ancestors.push(ancestor);\n              break;\n            }\n\n            var root = findRootContainerNode(ancestor);\n\n            if (!root) {\n              break;\n            }\n\n            bookKeeping.ancestors.push(ancestor);\n            ancestor = getClosestInstanceFromNode(root);\n          } while (ancestor);\n\n          for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n            targetInst = bookKeeping.ancestors[i];\n            runExtractedEventsInBatch(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n          }\n        } // TODO: can we stop exporting these?\n\n\n        var _enabled = true;\n\n        function setEnabled(enabled) {\n          _enabled = !!enabled;\n        }\n\n        function isEnabled() {\n          return _enabled;\n        }\n        /**\n         * Traps top-level events by using event bubbling.\n         *\n         * @param {number} topLevelType Number from `TopLevelEventTypes`.\n         * @param {object} element Element on which to attach listener.\n         * @return {?object} An object with a remove function which will forcefully\n         *                  remove the listener.\n         * @internal\n         */\n\n\n        function trapBubbledEvent(topLevelType, element) {\n          if (!element) {\n            return null;\n          }\n\n          var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;\n          addEventBubbleListener(element, getRawEventName(topLevelType), // Check if interactive and wrap in interactiveUpdates\n          dispatch.bind(null, topLevelType));\n        }\n        /**\n         * Traps a top-level event by using event capturing.\n         *\n         * @param {number} topLevelType Number from `TopLevelEventTypes`.\n         * @param {object} element Element on which to attach listener.\n         * @return {?object} An object with a remove function which will forcefully\n         *                  remove the listener.\n         * @internal\n         */\n\n\n        function trapCapturedEvent(topLevelType, element) {\n          if (!element) {\n            return null;\n          }\n\n          var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;\n          addEventCaptureListener(element, getRawEventName(topLevelType), // Check if interactive and wrap in interactiveUpdates\n          dispatch.bind(null, topLevelType));\n        }\n\n        function dispatchInteractiveEvent(topLevelType, nativeEvent) {\n          interactiveUpdates(dispatchEvent, topLevelType, nativeEvent);\n        }\n\n        function dispatchEvent(topLevelType, nativeEvent) {\n          if (!_enabled) {\n            return;\n          }\n\n          var nativeEventTarget = getEventTarget(nativeEvent);\n          var targetInst = getClosestInstanceFromNode(nativeEventTarget);\n\n          if (targetInst !== null && typeof targetInst.tag === 'number' && !isFiberMounted(targetInst)) {\n            // If we get an event (ex: img onload) before committing that\n            // component's mount, ignore it for now (that is, treat it as if it was an\n            // event on a non-React tree). We might also consider queueing events and\n            // dispatching them after the mount.\n            targetInst = null;\n          }\n\n          var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst);\n\n          try {\n            // Event queue being processed in the same cycle allows\n            // `preventDefault`.\n            batchedUpdates(handleTopLevel, bookKeeping);\n          } finally {\n            releaseTopLevelCallbackBookKeeping(bookKeeping);\n          }\n        }\n        /**\n         * Summary of `ReactBrowserEventEmitter` event handling:\n         *\n         *  - Top-level delegation is used to trap most native browser events. This\n         *    may only occur in the main thread and is the responsibility of\n         *    ReactDOMEventListener, which is injected and can therefore support\n         *    pluggable event sources. This is the only work that occurs in the main\n         *    thread.\n         *\n         *  - We normalize and de-duplicate events to account for browser quirks. This\n         *    may be done in the worker thread.\n         *\n         *  - Forward these native events (with the associated top-level type used to\n         *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n         *    to extract any synthetic events.\n         *\n         *  - The `EventPluginHub` will then process each event by annotating them with\n         *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n         *\n         *  - The `EventPluginHub` then dispatches the events.\n         *\n         * Overview of React and the event system:\n         *\n         * +------------+    .\n         * |    DOM     |    .\n         * +------------+    .\n         *       |           .\n         *       v           .\n         * +------------+    .\n         * | ReactEvent |    .\n         * |  Listener  |    .\n         * +------------+    .                         +-----------+\n         *       |           .               +--------+|SimpleEvent|\n         *       |           .               |         |Plugin     |\n         * +-----|------+    .               v         +-----------+\n         * |     |      |    .    +--------------+                    +------------+\n         * |     +-----------.--->|EventPluginHub|                    |    Event   |\n         * |            |    .    |              |     +-----------+  | Propagators|\n         * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n         * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n         * |            |    .    |              |     +-----------+  |  utilities |\n         * |     +-----------.--->|              |                    +------------+\n         * |     |      |    .    +--------------+\n         * +-----|------+    .                ^        +-----------+\n         *       |           .                |        |Enter/Leave|\n         *       +           .                +-------+|Plugin     |\n         * +-------------+   .                         +-----------+\n         * | application |   .\n         * |-------------|   .\n         * |             |   .\n         * |             |   .\n         * +-------------+   .\n         *                   .\n         *    React Core     .  General Purpose Event Plugin System\n         */\n\n\n        var alreadyListeningTo = {};\n        var reactTopListenersCounter = 0;\n        /**\n         * To ensure no conflicts with other potential React instances on the page\n         */\n\n        var topListenersIDKey = '_reactListenersID' + ('' + Math.random()).slice(2);\n\n        function getListeningForDocument(mountAt) {\n          // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n          // directly.\n          if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n            mountAt[topListenersIDKey] = reactTopListenersCounter++;\n            alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n          }\n\n          return alreadyListeningTo[mountAt[topListenersIDKey]];\n        }\n        /**\n         * We listen for bubbled touch events on the document object.\n         *\n         * Firefox v8.01 (and possibly others) exhibited strange behavior when\n         * mounting `onmousemove` events at some node that was not the document\n         * element. The symptoms were that if your mouse is not moving over something\n         * contained within that mount point (for example on the background) the\n         * top-level listeners for `onmousemove` won't be called. However, if you\n         * register the `mousemove` on the document object, then it will of course\n         * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n         * top-level listeners to the document object only, at least for these\n         * movement types of events and possibly all events.\n         *\n         * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n         *\n         * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n         * they bubble to document.\n         *\n         * @param {string} registrationName Name of listener (e.g. `onClick`).\n         * @param {object} mountAt Container where to mount the listener\n         */\n\n\n        function listenTo(registrationName, mountAt) {\n          var isListening = getListeningForDocument(mountAt);\n          var dependencies = registrationNameDependencies[registrationName];\n\n          for (var i = 0; i < dependencies.length; i++) {\n            var dependency = dependencies[i];\n\n            if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n              switch (dependency) {\n                case TOP_SCROLL:\n                  trapCapturedEvent(TOP_SCROLL, mountAt);\n                  break;\n\n                case TOP_FOCUS:\n                case TOP_BLUR:\n                  trapCapturedEvent(TOP_FOCUS, mountAt);\n                  trapCapturedEvent(TOP_BLUR, mountAt); // We set the flag for a single dependency later in this function,\n                  // but this ensures we mark both as attached rather than just one.\n\n                  isListening[TOP_BLUR] = true;\n                  isListening[TOP_FOCUS] = true;\n                  break;\n\n                case TOP_CANCEL:\n                case TOP_CLOSE:\n                  if (isEventSupported(getRawEventName(dependency))) {\n                    trapCapturedEvent(dependency, mountAt);\n                  }\n\n                  break;\n\n                case TOP_INVALID:\n                case TOP_SUBMIT:\n                case TOP_RESET:\n                  // We listen to them on the target DOM elements.\n                  // Some of them bubble so we don't want them to fire twice.\n                  break;\n\n                default:\n                  // By default, listen on the top level to all non-media events.\n                  // Media events don't bubble so adding the listener wouldn't do anything.\n                  var isMediaEvent = mediaEventTypes.indexOf(dependency) !== -1;\n\n                  if (!isMediaEvent) {\n                    trapBubbledEvent(dependency, mountAt);\n                  }\n\n                  break;\n              }\n\n              isListening[dependency] = true;\n            }\n          }\n        }\n\n        function isListeningToAllDependencies(registrationName, mountAt) {\n          var isListening = getListeningForDocument(mountAt);\n          var dependencies = registrationNameDependencies[registrationName];\n\n          for (var i = 0; i < dependencies.length; i++) {\n            var dependency = dependencies[i];\n\n            if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        function getActiveElement(doc) {\n          doc = doc || (typeof document !== 'undefined' ? document : undefined);\n\n          if (typeof doc === 'undefined') {\n            return null;\n          }\n\n          try {\n            return doc.activeElement || doc.body;\n          } catch (e) {\n            return doc.body;\n          }\n        }\n        /**\n         * Given any node return the first leaf node without children.\n         *\n         * @param {DOMElement|DOMTextNode} node\n         * @return {DOMElement|DOMTextNode}\n         */\n\n\n        function getLeafNode(node) {\n          while (node && node.firstChild) {\n            node = node.firstChild;\n          }\n\n          return node;\n        }\n        /**\n         * Get the next sibling within a container. This will walk up the\n         * DOM if a node's siblings have been exhausted.\n         *\n         * @param {DOMElement|DOMTextNode} node\n         * @return {?DOMElement|DOMTextNode}\n         */\n\n\n        function getSiblingNode(node) {\n          while (node) {\n            if (node.nextSibling) {\n              return node.nextSibling;\n            }\n\n            node = node.parentNode;\n          }\n        }\n        /**\n         * Get object describing the nodes which contain characters at offset.\n         *\n         * @param {DOMElement|DOMTextNode} root\n         * @param {number} offset\n         * @return {?object}\n         */\n\n\n        function getNodeForCharacterOffset(root, offset) {\n          var node = getLeafNode(root);\n          var nodeStart = 0;\n          var nodeEnd = 0;\n\n          while (node) {\n            if (node.nodeType === TEXT_NODE) {\n              nodeEnd = nodeStart + node.textContent.length;\n\n              if (nodeStart <= offset && nodeEnd >= offset) {\n                return {\n                  node: node,\n                  offset: offset - nodeStart\n                };\n              }\n\n              nodeStart = nodeEnd;\n            }\n\n            node = getLeafNode(getSiblingNode(node));\n          }\n        }\n        /**\n         * @param {DOMElement} outerNode\n         * @return {?object}\n         */\n\n\n        function getOffsets(outerNode) {\n          var ownerDocument = outerNode.ownerDocument;\n          var win = ownerDocument && ownerDocument.defaultView || window;\n          var selection = win.getSelection && win.getSelection();\n\n          if (!selection || selection.rangeCount === 0) {\n            return null;\n          }\n\n          var anchorNode = selection.anchorNode,\n              anchorOffset = selection.anchorOffset,\n              focusNode = selection.focusNode,\n              focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be \"anonymous divs\", e.g. the\n          // up/down buttons on an <input type=\"number\">. Anonymous divs do not seem to\n          // expose properties, triggering a \"Permission denied error\" if any of its\n          // properties are accessed. The only seemingly possible way to avoid erroring\n          // is to access a property that typically works for non-anonymous divs and\n          // catch any error that may otherwise arise. See\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n\n          try {\n            /* eslint-disable no-unused-expressions */\n            anchorNode.nodeType;\n            focusNode.nodeType;\n            /* eslint-enable no-unused-expressions */\n          } catch (e) {\n            return null;\n          }\n\n          return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);\n        }\n        /**\n         * Returns {start, end} where `start` is the character/codepoint index of\n         * (anchorNode, anchorOffset) within the textContent of `outerNode`, and\n         * `end` is the index of (focusNode, focusOffset).\n         *\n         * Returns null if you pass in garbage input but we should probably just crash.\n         *\n         * Exported only for testing.\n         */\n\n\n        function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {\n          var length = 0;\n          var start = -1;\n          var end = -1;\n          var indexWithinAnchor = 0;\n          var indexWithinFocus = 0;\n          var node = outerNode;\n          var parentNode = null;\n\n          outer: while (true) {\n            var next = null;\n\n            while (true) {\n              if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {\n                start = length + anchorOffset;\n              }\n\n              if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {\n                end = length + focusOffset;\n              }\n\n              if (node.nodeType === TEXT_NODE) {\n                length += node.nodeValue.length;\n              }\n\n              if ((next = node.firstChild) === null) {\n                break;\n              } // Moving from `node` to its first child `next`.\n\n\n              parentNode = node;\n              node = next;\n            }\n\n            while (true) {\n              if (node === outerNode) {\n                // If `outerNode` has children, this is always the second time visiting\n                // it. If it has no children, this is still the first loop, and the only\n                // valid selection is anchorNode and focusNode both equal to this node\n                // and both offsets 0, in which case we will have handled above.\n                break outer;\n              }\n\n              if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {\n                start = length;\n              }\n\n              if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {\n                end = length;\n              }\n\n              if ((next = node.nextSibling) !== null) {\n                break;\n              }\n\n              node = parentNode;\n              parentNode = node.parentNode;\n            } // Moving from `node` to its next sibling `next`.\n\n\n            node = next;\n          }\n\n          if (start === -1 || end === -1) {\n            // This should never happen. (Would happen if the anchor/focus nodes aren't\n            // actually inside the passed-in node.)\n            return null;\n          }\n\n          return {\n            start: start,\n            end: end\n          };\n        }\n        /**\n         * In modern non-IE browsers, we can support both forward and backward\n         * selections.\n         *\n         * Note: IE10+ supports the Selection object, but it does not support\n         * the `extend` method, which means that even in modern IE, it's not possible\n         * to programmatically create a backward selection. Thus, for all IE\n         * versions, we use the old IE API to create our selections.\n         *\n         * @param {DOMElement|DOMTextNode} node\n         * @param {object} offsets\n         */\n\n\n        function setOffsets(node, offsets) {\n          var doc = node.ownerDocument || document;\n          var win = doc && doc.defaultView || window; // Edge fails with \"Object expected\" in some scenarios.\n          // (For instance: TinyMCE editor used in a list component that supports pasting to add more,\n          // fails when pasting 100+ items)\n\n          if (!win.getSelection) {\n            return;\n          }\n\n          var selection = win.getSelection();\n          var length = node.textContent.length;\n          var start = Math.min(offsets.start, length);\n          var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.\n          // Flip backward selections, so we can set with a single range.\n\n          if (!selection.extend && start > end) {\n            var temp = end;\n            end = start;\n            start = temp;\n          }\n\n          var startMarker = getNodeForCharacterOffset(node, start);\n          var endMarker = getNodeForCharacterOffset(node, end);\n\n          if (startMarker && endMarker) {\n            if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {\n              return;\n            }\n\n            var range = doc.createRange();\n            range.setStart(startMarker.node, startMarker.offset);\n            selection.removeAllRanges();\n\n            if (start > end) {\n              selection.addRange(range);\n              selection.extend(endMarker.node, endMarker.offset);\n            } else {\n              range.setEnd(endMarker.node, endMarker.offset);\n              selection.addRange(range);\n            }\n          }\n        }\n\n        function isTextNode(node) {\n          return node && node.nodeType === TEXT_NODE;\n        }\n\n        function containsNode(outerNode, innerNode) {\n          if (!outerNode || !innerNode) {\n            return false;\n          } else if (outerNode === innerNode) {\n            return true;\n          } else if (isTextNode(outerNode)) {\n            return false;\n          } else if (isTextNode(innerNode)) {\n            return containsNode(outerNode, innerNode.parentNode);\n          } else if ('contains' in outerNode) {\n            return outerNode.contains(innerNode);\n          } else if (outerNode.compareDocumentPosition) {\n            return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n          } else {\n            return false;\n          }\n        }\n\n        function isInDocument(node) {\n          return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);\n        }\n\n        function getActiveElementDeep() {\n          var win = window;\n          var element = getActiveElement();\n\n          while (element instanceof win.HTMLIFrameElement) {\n            // Accessing the contentDocument of a HTMLIframeElement can cause the browser\n            // to throw, e.g. if it has a cross-origin src attribute\n            try {\n              win = element.contentDocument.defaultView;\n            } catch (e) {\n              return element;\n            }\n\n            element = getActiveElement(win.document);\n          }\n\n          return element;\n        }\n        /**\n         * @ReactInputSelection: React input selection module. Based on Selection.js,\n         * but modified to be suitable for react and has a couple of bug fixes (doesn't\n         * assume buttons have range selections allowed).\n         * Input selection module for React.\n         */\n\n        /**\n         * @hasSelectionCapabilities: we get the element types that support selection\n         * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`\n         * and `selectionEnd` rows.\n         */\n\n\n        function hasSelectionCapabilities(elem) {\n          var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n          return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');\n        }\n\n        function getSelectionInformation() {\n          var focusedElem = getActiveElementDeep();\n          return {\n            focusedElem: focusedElem,\n            selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection$1(focusedElem) : null\n          };\n        }\n        /**\n         * @restoreSelection: If any selection information was potentially lost,\n         * restore it. This is useful when performing operations that could remove dom\n         * nodes and place them back in, resulting in focus being lost.\n         */\n\n\n        function restoreSelection(priorSelectionInformation) {\n          var curFocusedElem = getActiveElementDeep();\n          var priorFocusedElem = priorSelectionInformation.focusedElem;\n          var priorSelectionRange = priorSelectionInformation.selectionRange;\n\n          if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n            if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {\n              setSelection(priorFocusedElem, priorSelectionRange);\n            } // Focusing a node can change the scroll position, which is undesirable\n\n\n            var ancestors = [];\n            var ancestor = priorFocusedElem;\n\n            while (ancestor = ancestor.parentNode) {\n              if (ancestor.nodeType === ELEMENT_NODE) {\n                ancestors.push({\n                  element: ancestor,\n                  left: ancestor.scrollLeft,\n                  top: ancestor.scrollTop\n                });\n              }\n            }\n\n            if (typeof priorFocusedElem.focus === 'function') {\n              priorFocusedElem.focus();\n            }\n\n            for (var i = 0; i < ancestors.length; i++) {\n              var info = ancestors[i];\n              info.element.scrollLeft = info.left;\n              info.element.scrollTop = info.top;\n            }\n          }\n        }\n        /**\n         * @getSelection: Gets the selection bounds of a focused textarea, input or\n         * contentEditable node.\n         * -@input: Look up selection bounds of this input\n         * -@return {start: selectionStart, end: selectionEnd}\n         */\n\n\n        function getSelection$1(input) {\n          var selection = void 0;\n\n          if ('selectionStart' in input) {\n            // Modern browser with input or textarea.\n            selection = {\n              start: input.selectionStart,\n              end: input.selectionEnd\n            };\n          } else {\n            // Content editable or old IE textarea.\n            selection = getOffsets(input);\n          }\n\n          return selection || {\n            start: 0,\n            end: 0\n          };\n        }\n        /**\n         * @setSelection: Sets the selection bounds of a textarea or input and focuses\n         * the input.\n         * -@input     Set selection bounds of this input or textarea\n         * -@offsets   Object of same form that is returned from get*\n         */\n\n\n        function setSelection(input, offsets) {\n          var start = offsets.start,\n              end = offsets.end;\n\n          if (end === undefined) {\n            end = start;\n          }\n\n          if ('selectionStart' in input) {\n            input.selectionStart = start;\n            input.selectionEnd = Math.min(end, input.value.length);\n          } else {\n            setOffsets(input, offsets);\n          }\n        }\n\n        var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n        var eventTypes$3 = {\n          select: {\n            phasedRegistrationNames: {\n              bubbled: 'onSelect',\n              captured: 'onSelectCapture'\n            },\n            dependencies: [TOP_BLUR, TOP_CONTEXT_MENU, TOP_DRAG_END, TOP_FOCUS, TOP_KEY_DOWN, TOP_KEY_UP, TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_SELECTION_CHANGE]\n          }\n        };\n        var activeElement$1 = null;\n        var activeElementInst$1 = null;\n        var lastSelection = null;\n        var mouseDown = false;\n        /**\n         * Get an object which is a unique representation of the current selection.\n         *\n         * The return value will not be consistent across nodes or browsers, but\n         * two identical selections on the same node will return identical objects.\n         *\n         * @param {DOMElement} node\n         * @return {object}\n         */\n\n        function getSelection(node) {\n          if ('selectionStart' in node && hasSelectionCapabilities(node)) {\n            return {\n              start: node.selectionStart,\n              end: node.selectionEnd\n            };\n          } else {\n            var win = node.ownerDocument && node.ownerDocument.defaultView || window;\n            var selection = win.getSelection();\n            return {\n              anchorNode: selection.anchorNode,\n              anchorOffset: selection.anchorOffset,\n              focusNode: selection.focusNode,\n              focusOffset: selection.focusOffset\n            };\n          }\n        }\n        /**\n         * Get document associated with the event target.\n         *\n         * @param {object} nativeEventTarget\n         * @return {Document}\n         */\n\n\n        function getEventTargetDocument(eventTarget) {\n          return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;\n        }\n        /**\n         * Poll selection to see whether it's changed.\n         *\n         * @param {object} nativeEvent\n         * @param {object} nativeEventTarget\n         * @return {?SyntheticEvent}\n         */\n\n\n        function constructSelectEvent(nativeEvent, nativeEventTarget) {\n          // Ensure we have the right element, and that the user is not dragging a\n          // selection (this matches native `select` event behavior). In HTML5, select\n          // fires only on input and textarea thus if there's no focused element we\n          // won't dispatch.\n          var doc = getEventTargetDocument(nativeEventTarget);\n\n          if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {\n            return null;\n          } // Only fire when selection has actually changed.\n\n\n          var currentSelection = getSelection(activeElement$1);\n\n          if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n            lastSelection = currentSelection;\n            var syntheticEvent = SyntheticEvent.getPooled(eventTypes$3.select, activeElementInst$1, nativeEvent, nativeEventTarget);\n            syntheticEvent.type = 'select';\n            syntheticEvent.target = activeElement$1;\n            accumulateTwoPhaseDispatches(syntheticEvent);\n            return syntheticEvent;\n          }\n\n          return null;\n        }\n        /**\n         * This plugin creates an `onSelect` event that normalizes select events\n         * across form elements.\n         *\n         * Supported elements are:\n         * - input (see `isTextInputElement`)\n         * - textarea\n         * - contentEditable\n         *\n         * This differs from native browser implementations in the following ways:\n         * - Fires on contentEditable fields as well as inputs.\n         * - Fires for collapsed selection.\n         * - Fires after user input.\n         */\n\n\n        var SelectEventPlugin = {\n          eventTypes: eventTypes$3,\n          extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n            var doc = getEventTargetDocument(nativeEventTarget); // Track whether all listeners exists for this plugin. If none exist, we do\n            // not extract events. See #3639.\n\n            if (!doc || !isListeningToAllDependencies('onSelect', doc)) {\n              return null;\n            }\n\n            var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;\n\n            switch (topLevelType) {\n              // Track the input node that has focus.\n              case TOP_FOCUS:\n                if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n                  activeElement$1 = targetNode;\n                  activeElementInst$1 = targetInst;\n                  lastSelection = null;\n                }\n\n                break;\n\n              case TOP_BLUR:\n                activeElement$1 = null;\n                activeElementInst$1 = null;\n                lastSelection = null;\n                break;\n              // Don't fire the event while the user is dragging. This matches the\n              // semantics of the native select event.\n\n              case TOP_MOUSE_DOWN:\n                mouseDown = true;\n                break;\n\n              case TOP_CONTEXT_MENU:\n              case TOP_MOUSE_UP:\n              case TOP_DRAG_END:\n                mouseDown = false;\n                return constructSelectEvent(nativeEvent, nativeEventTarget);\n              // Chrome and IE fire non-standard event when selection is changed (and\n              // sometimes when it hasn't). IE's event fires out of order with respect\n              // to key and input events on deletion, so we discard it.\n              //\n              // Firefox doesn't support selectionchange, so check selection status\n              // after each key entry. The selection changes after keydown and before\n              // keyup, but we check on keydown as well in the case of holding down a\n              // key, when multiple keydown events are fired but only one keyup is.\n              // This is also our approach for IE handling, for the reason above.\n\n              case TOP_SELECTION_CHANGE:\n                if (skipSelectionChangeEvent) {\n                  break;\n                }\n\n              // falls through\n\n              case TOP_KEY_DOWN:\n              case TOP_KEY_UP:\n                return constructSelectEvent(nativeEvent, nativeEventTarget);\n            }\n\n            return null;\n          }\n        };\n        /**\n         * Inject modules for resolving DOM hierarchy and plugin ordering.\n         */\n\n        injection.injectEventPluginOrder(DOMEventPluginOrder);\n        setComponentTree(getFiberCurrentPropsFromNode$1, getInstanceFromNode$1, getNodeFromInstance$1);\n        /**\n         * Some important event plugins included by default (without having to require\n         * them).\n         */\n\n        injection.injectEventPluginsByName({\n          SimpleEventPlugin: SimpleEventPlugin,\n          EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n          ChangeEventPlugin: ChangeEventPlugin,\n          SelectEventPlugin: SelectEventPlugin,\n          BeforeInputEventPlugin: BeforeInputEventPlugin\n        });\n        var didWarnSelectedSetOnOption = false;\n        var didWarnInvalidChild = false;\n\n        function flattenChildren(children) {\n          var content = ''; // Flatten children. We'll warn if they are invalid\n          // during validateProps() which runs for hydration too.\n          // Note that this would throw on non-element objects.\n          // Elements are stringified (which is normally irrelevant\n          // but matters for <fbt>).\n\n          React.Children.forEach(children, function (child) {\n            if (child == null) {\n              return;\n            }\n\n            content += child; // Note: we don't warn about invalid children here.\n            // Instead, this is done separately below so that\n            // it happens during the hydration codepath too.\n          });\n          return content;\n        }\n        /**\n         * Implements an <option> host component that warns when `selected` is set.\n         */\n\n\n        function validateProps(element, props) {\n          {\n            // This mirrors the codepath above, but runs for hydration too.\n            // Warn about invalid children here so that client and hydration are consistent.\n            // TODO: this seems like it could cause a DEV-only throw for hydration\n            // if children contains a non-element object. We should try to avoid that.\n            if (typeof props.children === 'object' && props.children !== null) {\n              React.Children.forEach(props.children, function (child) {\n                if (child == null) {\n                  return;\n                }\n\n                if (typeof child === 'string' || typeof child === 'number') {\n                  return;\n                }\n\n                if (typeof child.type !== 'string') {\n                  return;\n                }\n\n                if (!didWarnInvalidChild) {\n                  didWarnInvalidChild = true;\n                  warning$1(false, 'Only strings and numbers are supported as <option> children.');\n                }\n              });\n            } // TODO: Remove support for `selected` in <option>.\n\n\n            if (props.selected != null && !didWarnSelectedSetOnOption) {\n              warning$1(false, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');\n              didWarnSelectedSetOnOption = true;\n            }\n          }\n        }\n\n        function postMountWrapper$1(element, props) {\n          // value=\"\" should make a value attribute (#6219)\n          if (props.value != null) {\n            element.setAttribute('value', toString(getToStringValue(props.value)));\n          }\n        }\n\n        function getHostProps$1(element, props) {\n          var hostProps = _assign({\n            children: undefined\n          }, props);\n\n          var content = flattenChildren(props.children);\n\n          if (content) {\n            hostProps.children = content;\n          }\n\n          return hostProps;\n        } // TODO: direct imports like some-package/src/* are bad. Fix me.\n\n\n        var didWarnValueDefaultValue$1 = void 0;\n        {\n          didWarnValueDefaultValue$1 = false;\n        }\n\n        function getDeclarationErrorAddendum() {\n          var ownerName = getCurrentFiberOwnerNameInDevOrNull();\n\n          if (ownerName) {\n            return '\\n\\nCheck the render method of `' + ownerName + '`.';\n          }\n\n          return '';\n        }\n\n        var valuePropNames = ['value', 'defaultValue'];\n        /**\n         * Validation function for `value` and `defaultValue`.\n         */\n\n        function checkSelectPropTypes(props) {\n          ReactControlledValuePropTypes.checkPropTypes('select', props);\n\n          for (var i = 0; i < valuePropNames.length; i++) {\n            var propName = valuePropNames[i];\n\n            if (props[propName] == null) {\n              continue;\n            }\n\n            var isArray = Array.isArray(props[propName]);\n\n            if (props.multiple && !isArray) {\n              warning$1(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());\n            } else if (!props.multiple && isArray) {\n              warning$1(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());\n            }\n          }\n        }\n\n        function updateOptions(node, multiple, propValue, setDefaultSelected) {\n          var options = node.options;\n\n          if (multiple) {\n            var selectedValues = propValue;\n            var selectedValue = {};\n\n            for (var i = 0; i < selectedValues.length; i++) {\n              // Prefix to avoid chaos with special keys.\n              selectedValue['$' + selectedValues[i]] = true;\n            }\n\n            for (var _i = 0; _i < options.length; _i++) {\n              var selected = selectedValue.hasOwnProperty('$' + options[_i].value);\n\n              if (options[_i].selected !== selected) {\n                options[_i].selected = selected;\n              }\n\n              if (selected && setDefaultSelected) {\n                options[_i].defaultSelected = true;\n              }\n            }\n          } else {\n            // Do not set `select.value` as exact behavior isn't consistent across all\n            // browsers for all cases.\n            var _selectedValue = toString(getToStringValue(propValue));\n\n            var defaultSelected = null;\n\n            for (var _i2 = 0; _i2 < options.length; _i2++) {\n              if (options[_i2].value === _selectedValue) {\n                options[_i2].selected = true;\n\n                if (setDefaultSelected) {\n                  options[_i2].defaultSelected = true;\n                }\n\n                return;\n              }\n\n              if (defaultSelected === null && !options[_i2].disabled) {\n                defaultSelected = options[_i2];\n              }\n            }\n\n            if (defaultSelected !== null) {\n              defaultSelected.selected = true;\n            }\n          }\n        }\n        /**\n         * Implements a <select> host component that allows optionally setting the\n         * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n         * stringable. If `multiple` is true, the prop must be an array of stringables.\n         *\n         * If `value` is not supplied (or null/undefined), user actions that change the\n         * selected option will trigger updates to the rendered options.\n         *\n         * If it is supplied (and not null/undefined), the rendered options will not\n         * update in response to user actions. Instead, the `value` prop must change in\n         * order for the rendered options to update.\n         *\n         * If `defaultValue` is provided, any options with the supplied values will be\n         * selected.\n         */\n\n\n        function getHostProps$2(element, props) {\n          return _assign({}, props, {\n            value: undefined\n          });\n        }\n\n        function initWrapperState$1(element, props) {\n          var node = element;\n          {\n            checkSelectPropTypes(props);\n          }\n          node._wrapperState = {\n            wasMultiple: !!props.multiple\n          };\n          {\n            if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {\n              warning$1(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');\n              didWarnValueDefaultValue$1 = true;\n            }\n          }\n        }\n\n        function postMountWrapper$2(element, props) {\n          var node = element;\n          node.multiple = !!props.multiple;\n          var value = props.value;\n\n          if (value != null) {\n            updateOptions(node, !!props.multiple, value, false);\n          } else if (props.defaultValue != null) {\n            updateOptions(node, !!props.multiple, props.defaultValue, true);\n          }\n        }\n\n        function postUpdateWrapper(element, props) {\n          var node = element;\n          var wasMultiple = node._wrapperState.wasMultiple;\n          node._wrapperState.wasMultiple = !!props.multiple;\n          var value = props.value;\n\n          if (value != null) {\n            updateOptions(node, !!props.multiple, value, false);\n          } else if (wasMultiple !== !!props.multiple) {\n            // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n            if (props.defaultValue != null) {\n              updateOptions(node, !!props.multiple, props.defaultValue, true);\n            } else {\n              // Revert the select back to its default unselected state.\n              updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);\n            }\n          }\n        }\n\n        function restoreControlledState$2(element, props) {\n          var node = element;\n          var value = props.value;\n\n          if (value != null) {\n            updateOptions(node, !!props.multiple, value, false);\n          }\n        }\n\n        var didWarnValDefaultVal = false;\n        /**\n         * Implements a <textarea> host component that allows setting `value`, and\n         * `defaultValue`. This differs from the traditional DOM API because value is\n         * usually set as PCDATA children.\n         *\n         * If `value` is not supplied (or null/undefined), user actions that affect the\n         * value will trigger updates to the element.\n         *\n         * If `value` is supplied (and not null/undefined), the rendered element will\n         * not trigger updates to the element. Instead, the `value` prop must change in\n         * order for the rendered element to be updated.\n         *\n         * The rendered element will be initialized with an empty value, the prop\n         * `defaultValue` if specified, or the children content (deprecated).\n         */\n\n        function getHostProps$3(element, props) {\n          var node = element;\n          !(props.dangerouslySetInnerHTML == null) ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : void 0; // Always set children to the same thing. In IE9, the selection range will\n          // get reset if `textContent` is mutated.  We could add a check in setTextContent\n          // to only set the value if/when the value differs from the node value (which would\n          // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this\n          // solution. The value can be a boolean or object so that's why it's forced\n          // to be a string.\n\n          var hostProps = _assign({}, props, {\n            value: undefined,\n            defaultValue: undefined,\n            children: toString(node._wrapperState.initialValue)\n          });\n\n          return hostProps;\n        }\n\n        function initWrapperState$2(element, props) {\n          var node = element;\n          {\n            ReactControlledValuePropTypes.checkPropTypes('textarea', props);\n\n            if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {\n              warning$1(false, '%s contains a textarea with both value and defaultValue props. ' + 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component');\n              didWarnValDefaultVal = true;\n            }\n          }\n          var initialValue = props.value; // Only bother fetching default value if we're going to use it\n\n          if (initialValue == null) {\n            var defaultValue = props.defaultValue; // TODO (yungsters): Remove support for children content in <textarea>.\n\n            var children = props.children;\n\n            if (children != null) {\n              {\n                warning$1(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');\n              }\n              !(defaultValue == null) ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : void 0;\n\n              if (Array.isArray(children)) {\n                !(children.length <= 1) ? invariant(false, '<textarea> can only have at most one child.') : void 0;\n                children = children[0];\n              }\n\n              defaultValue = children;\n            }\n\n            if (defaultValue == null) {\n              defaultValue = '';\n            }\n\n            initialValue = defaultValue;\n          }\n\n          node._wrapperState = {\n            initialValue: getToStringValue(initialValue)\n          };\n        }\n\n        function updateWrapper$1(element, props) {\n          var node = element;\n          var value = getToStringValue(props.value);\n          var defaultValue = getToStringValue(props.defaultValue);\n\n          if (value != null) {\n            // Cast `value` to a string to ensure the value is set correctly. While\n            // browsers typically do this as necessary, jsdom doesn't.\n            var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed\n\n            if (newValue !== node.value) {\n              node.value = newValue;\n            }\n\n            if (props.defaultValue == null && node.defaultValue !== newValue) {\n              node.defaultValue = newValue;\n            }\n          }\n\n          if (defaultValue != null) {\n            node.defaultValue = toString(defaultValue);\n          }\n        }\n\n        function postMountWrapper$3(element, props) {\n          var node = element; // This is in postMount because we need access to the DOM node, which is not\n          // available until after the component has mounted.\n\n          var textContent = node.textContent; // Only set node.value if textContent is equal to the expected\n          // initial value. In IE10/IE11 there is a bug where the placeholder attribute\n          // will populate textContent as well.\n          // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/\n\n          if (textContent === node._wrapperState.initialValue) {\n            node.value = textContent;\n          }\n        }\n\n        function restoreControlledState$3(element, props) {\n          // DOM component is still mounted; update\n          updateWrapper$1(element, props);\n        }\n\n        var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';\n        var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n        var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n        var Namespaces = {\n          html: HTML_NAMESPACE$1,\n          mathml: MATH_NAMESPACE,\n          svg: SVG_NAMESPACE\n        }; // Assumes there is no parent namespace.\n\n        function getIntrinsicNamespace(type) {\n          switch (type) {\n            case 'svg':\n              return SVG_NAMESPACE;\n\n            case 'math':\n              return MATH_NAMESPACE;\n\n            default:\n              return HTML_NAMESPACE$1;\n          }\n        }\n\n        function getChildNamespace(parentNamespace, type) {\n          if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {\n            // No (or default) parent namespace: potential entry point.\n            return getIntrinsicNamespace(type);\n          }\n\n          if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {\n            // We're leaving SVG.\n            return HTML_NAMESPACE$1;\n          } // By default, pass namespace below.\n\n\n          return parentNamespace;\n        }\n        /* globals MSApp */\n\n        /**\n         * Create a function which has 'unsafe' privileges (required by windows8 apps)\n         */\n\n\n        var createMicrosoftUnsafeLocalFunction = function createMicrosoftUnsafeLocalFunction(func) {\n          if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n            return function (arg0, arg1, arg2, arg3) {\n              MSApp.execUnsafeLocalFunction(function () {\n                return func(arg0, arg1, arg2, arg3);\n              });\n            };\n          } else {\n            return func;\n          }\n        }; // SVG temp container for IE lacking innerHTML\n\n\n        var reusableSVGContainer = void 0;\n        /**\n         * Set the innerHTML property of a node\n         *\n         * @param {DOMElement} node\n         * @param {string} html\n         * @internal\n         */\n\n        var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {\n          // IE does not have innerHTML for SVG nodes, so instead we inject the\n          // new markup in a temp node and then move the child nodes across into\n          // the target node\n          if (node.namespaceURI === Namespaces.svg && !('innerHTML' in node)) {\n            reusableSVGContainer = reusableSVGContainer || document.createElement('div');\n            reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';\n            var svgNode = reusableSVGContainer.firstChild;\n\n            while (node.firstChild) {\n              node.removeChild(node.firstChild);\n            }\n\n            while (svgNode.firstChild) {\n              node.appendChild(svgNode.firstChild);\n            }\n          } else {\n            node.innerHTML = html;\n          }\n        });\n        /**\n         * Set the textContent property of a node. For text updates, it's faster\n         * to set the `nodeValue` of the Text node directly instead of using\n         * `.textContent` which will remove the existing node and create a new one.\n         *\n         * @param {DOMElement} node\n         * @param {string} text\n         * @internal\n         */\n\n        var setTextContent = function setTextContent(node, text) {\n          if (text) {\n            var firstChild = node.firstChild;\n\n            if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {\n              firstChild.nodeValue = text;\n              return;\n            }\n          }\n\n          node.textContent = text;\n        }; // List derived from Gecko source code:\n        // https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js\n\n\n        var shorthandToLonghand = {\n          animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],\n          background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],\n          backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],\n          border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],\n          borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],\n          borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],\n          borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],\n          borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],\n          borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],\n          borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],\n          borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],\n          borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],\n          borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],\n          borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],\n          borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],\n          borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],\n          borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],\n          columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],\n          columns: ['columnCount', 'columnWidth'],\n          flex: ['flexBasis', 'flexGrow', 'flexShrink'],\n          flexFlow: ['flexDirection', 'flexWrap'],\n          font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],\n          fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],\n          gap: ['columnGap', 'rowGap'],\n          grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],\n          gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],\n          gridColumn: ['gridColumnEnd', 'gridColumnStart'],\n          gridColumnGap: ['columnGap'],\n          gridGap: ['columnGap', 'rowGap'],\n          gridRow: ['gridRowEnd', 'gridRowStart'],\n          gridRowGap: ['rowGap'],\n          gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],\n          listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],\n          margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],\n          marker: ['markerEnd', 'markerMid', 'markerStart'],\n          mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],\n          maskPosition: ['maskPositionX', 'maskPositionY'],\n          outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],\n          overflow: ['overflowX', 'overflowY'],\n          padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],\n          placeContent: ['alignContent', 'justifyContent'],\n          placeItems: ['alignItems', 'justifyItems'],\n          placeSelf: ['alignSelf', 'justifySelf'],\n          textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],\n          textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],\n          transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],\n          wordWrap: ['overflowWrap']\n        };\n        /**\n         * CSS properties which accept numbers but are not in units of \"px\".\n         */\n\n        var isUnitlessNumber = {\n          animationIterationCount: true,\n          borderImageOutset: true,\n          borderImageSlice: true,\n          borderImageWidth: true,\n          boxFlex: true,\n          boxFlexGroup: true,\n          boxOrdinalGroup: true,\n          columnCount: true,\n          columns: true,\n          flex: true,\n          flexGrow: true,\n          flexPositive: true,\n          flexShrink: true,\n          flexNegative: true,\n          flexOrder: true,\n          gridArea: true,\n          gridRow: true,\n          gridRowEnd: true,\n          gridRowSpan: true,\n          gridRowStart: true,\n          gridColumn: true,\n          gridColumnEnd: true,\n          gridColumnSpan: true,\n          gridColumnStart: true,\n          fontWeight: true,\n          lineClamp: true,\n          lineHeight: true,\n          opacity: true,\n          order: true,\n          orphans: true,\n          tabSize: true,\n          widows: true,\n          zIndex: true,\n          zoom: true,\n          // SVG-related properties\n          fillOpacity: true,\n          floodOpacity: true,\n          stopOpacity: true,\n          strokeDasharray: true,\n          strokeDashoffset: true,\n          strokeMiterlimit: true,\n          strokeOpacity: true,\n          strokeWidth: true\n        };\n        /**\n         * @param {string} prefix vendor-specific prefix, eg: Webkit\n         * @param {string} key style name, eg: transitionDuration\n         * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n         * WebkitTransitionDuration\n         */\n\n        function prefixKey(prefix, key) {\n          return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n        }\n        /**\n         * Support style names that may come passed in prefixed by adding permutations\n         * of vendor prefixes.\n         */\n\n\n        var prefixes = ['Webkit', 'ms', 'Moz', 'O']; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n        // infinite loop, because it iterates over the newly added props too.\n\n        Object.keys(isUnitlessNumber).forEach(function (prop) {\n          prefixes.forEach(function (prefix) {\n            isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n          });\n        });\n        /**\n         * Convert a value into the proper css writable value. The style name `name`\n         * should be logical (no hyphens), as specified\n         * in `CSSProperty.isUnitlessNumber`.\n         *\n         * @param {string} name CSS property name such as `topMargin`.\n         * @param {*} value CSS property value such as `10px`.\n         * @return {string} Normalized style value with dimensions applied.\n         */\n\n        function dangerousStyleValue(name, value, isCustomProperty) {\n          // Note that we've removed escapeTextForBrowser() calls here since the\n          // whole string will be escaped when the attribute is injected into\n          // the markup. If you provide unsafe user data here they can inject\n          // arbitrary CSS which may be problematic (I couldn't repro this):\n          // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n          // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n          // This is not an XSS hole but instead a potential CSS injection issue\n          // which has lead to a greater discussion about how we're going to\n          // trust URLs moving forward. See #2115901\n          var isEmpty = value == null || typeof value === 'boolean' || value === '';\n\n          if (isEmpty) {\n            return '';\n          }\n\n          if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {\n            return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n          }\n\n          return ('' + value).trim();\n        }\n\n        var uppercasePattern = /([A-Z])/g;\n        var msPattern = /^ms-/;\n        /**\n         * Hyphenates a camelcased CSS property name, for example:\n         *\n         *   > hyphenateStyleName('backgroundColor')\n         *   < \"background-color\"\n         *   > hyphenateStyleName('MozTransition')\n         *   < \"-moz-transition\"\n         *   > hyphenateStyleName('msTransition')\n         *   < \"-ms-transition\"\n         *\n         * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n         * is converted to `-ms-`.\n         */\n\n        function hyphenateStyleName(name) {\n          return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');\n        }\n\n        var warnValidStyle = function warnValidStyle() {};\n\n        {\n          // 'msTransform' is correct, but the other prefixes should be capitalized\n          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n          var msPattern$1 = /^-ms-/;\n          var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon\n\n          var badStyleValueWithSemicolonPattern = /;\\s*$/;\n          var warnedStyleNames = {};\n          var warnedStyleValues = {};\n          var warnedForNaNValue = false;\n          var warnedForInfinityValue = false;\n\n          var camelize = function camelize(string) {\n            return string.replace(hyphenPattern, function (_, character) {\n              return character.toUpperCase();\n            });\n          };\n\n          var warnHyphenatedStyleName = function warnHyphenatedStyleName(name) {\n            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n              return;\n            }\n\n            warnedStyleNames[name] = true;\n            warning$1(false, 'Unsupported style property %s. Did you mean %s?', name, // As Andi Smith suggests\n            // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n            // is converted to lowercase `ms`.\n            camelize(name.replace(msPattern$1, 'ms-')));\n          };\n\n          var warnBadVendoredStyleName = function warnBadVendoredStyleName(name) {\n            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n              return;\n            }\n\n            warnedStyleNames[name] = true;\n            warning$1(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));\n          };\n\n          var warnStyleValueWithSemicolon = function warnStyleValueWithSemicolon(name, value) {\n            if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n              return;\n            }\n\n            warnedStyleValues[value] = true;\n            warning$1(false, \"Style property values shouldn't contain a semicolon. \" + 'Try \"%s: %s\" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));\n          };\n\n          var warnStyleValueIsNaN = function warnStyleValueIsNaN(name, value) {\n            if (warnedForNaNValue) {\n              return;\n            }\n\n            warnedForNaNValue = true;\n            warning$1(false, '`NaN` is an invalid value for the `%s` css style property.', name);\n          };\n\n          var warnStyleValueIsInfinity = function warnStyleValueIsInfinity(name, value) {\n            if (warnedForInfinityValue) {\n              return;\n            }\n\n            warnedForInfinityValue = true;\n            warning$1(false, '`Infinity` is an invalid value for the `%s` css style property.', name);\n          };\n\n          warnValidStyle = function warnValidStyle(name, value) {\n            if (name.indexOf('-') > -1) {\n              warnHyphenatedStyleName(name);\n            } else if (badVendoredStyleNamePattern.test(name)) {\n              warnBadVendoredStyleName(name);\n            } else if (badStyleValueWithSemicolonPattern.test(value)) {\n              warnStyleValueWithSemicolon(name, value);\n            }\n\n            if (typeof value === 'number') {\n              if (isNaN(value)) {\n                warnStyleValueIsNaN(name, value);\n              } else if (!isFinite(value)) {\n                warnStyleValueIsInfinity(name, value);\n              }\n            }\n          };\n        }\n        var warnValidStyle$1 = warnValidStyle;\n        /**\n         * Operations for dealing with CSS properties.\n         */\n\n        /**\n         * This creates a string that is expected to be equivalent to the style\n         * attribute generated by server-side rendering. It by-passes warnings and\n         * security checks so it's not safe to use this value for anything other than\n         * comparison. It is only used in DEV for SSR validation.\n         */\n\n        function createDangerousStringForStyles(styles) {\n          {\n            var serialized = '';\n            var delimiter = '';\n\n            for (var styleName in styles) {\n              if (!styles.hasOwnProperty(styleName)) {\n                continue;\n              }\n\n              var styleValue = styles[styleName];\n\n              if (styleValue != null) {\n                var isCustomProperty = styleName.indexOf('--') === 0;\n                serialized += delimiter + hyphenateStyleName(styleName) + ':';\n                serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);\n                delimiter = ';';\n              }\n            }\n\n            return serialized || null;\n          }\n        }\n        /**\n         * Sets the value for multiple styles on a node.  If a value is specified as\n         * '' (empty string), the corresponding style property will be unset.\n         *\n         * @param {DOMElement} node\n         * @param {object} styles\n         */\n\n\n        function setValueForStyles(node, styles) {\n          var style = node.style;\n\n          for (var styleName in styles) {\n            if (!styles.hasOwnProperty(styleName)) {\n              continue;\n            }\n\n            var isCustomProperty = styleName.indexOf('--') === 0;\n            {\n              if (!isCustomProperty) {\n                warnValidStyle$1(styleName, styles[styleName]);\n              }\n            }\n            var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);\n\n            if (styleName === 'float') {\n              styleName = 'cssFloat';\n            }\n\n            if (isCustomProperty) {\n              style.setProperty(styleName, styleValue);\n            } else {\n              style[styleName] = styleValue;\n            }\n          }\n        }\n\n        function isValueEmpty(value) {\n          return value == null || typeof value === 'boolean' || value === '';\n        }\n        /**\n         * Given {color: 'red', overflow: 'hidden'} returns {\n         *   color: 'color',\n         *   overflowX: 'overflow',\n         *   overflowY: 'overflow',\n         * }. This can be read as \"the overflowY property was set by the overflow\n         * shorthand\". That is, the values are the property that each was derived from.\n         */\n\n\n        function expandShorthandMap(styles) {\n          var expanded = {};\n\n          for (var key in styles) {\n            var longhands = shorthandToLonghand[key] || [key];\n\n            for (var i = 0; i < longhands.length; i++) {\n              expanded[longhands[i]] = key;\n            }\n          }\n\n          return expanded;\n        }\n        /**\n         * When mixing shorthand and longhand property names, we warn during updates if\n         * we expect an incorrect result to occur. In particular, we warn for:\n         *\n         * Updating a shorthand property (longhand gets overwritten):\n         *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}\n         *   becomes .style.font = 'baz'\n         * Removing a shorthand property (longhand gets lost too):\n         *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}\n         *   becomes .style.font = ''\n         * Removing a longhand property (should revert to shorthand; doesn't):\n         *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}\n         *   becomes .style.fontVariant = ''\n         */\n\n\n        function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {\n          if (!warnAboutShorthandPropertyCollision) {\n            return;\n          }\n\n          if (!nextStyles) {\n            return;\n          }\n\n          var expandedUpdates = expandShorthandMap(styleUpdates);\n          var expandedStyles = expandShorthandMap(nextStyles);\n          var warnedAbout = {};\n\n          for (var key in expandedUpdates) {\n            var originalKey = expandedUpdates[key];\n            var correctOriginalKey = expandedStyles[key];\n\n            if (correctOriginalKey && originalKey !== correctOriginalKey) {\n              var warningKey = originalKey + ',' + correctOriginalKey;\n\n              if (warnedAbout[warningKey]) {\n                continue;\n              }\n\n              warnedAbout[warningKey] = true;\n              warning$1(false, '%s a style property during rerender (%s) when a ' + 'conflicting property is set (%s) can lead to styling bugs. To ' + \"avoid this, don't mix shorthand and non-shorthand properties \" + 'for the same value; instead, replace the shorthand with ' + 'separate values.', isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);\n            }\n          }\n        } // For HTML, certain tags should omit their close tag. We keep a whitelist for\n        // those special-case tags.\n\n\n        var omittedCloseTags = {\n          area: true,\n          base: true,\n          br: true,\n          col: true,\n          embed: true,\n          hr: true,\n          img: true,\n          input: true,\n          keygen: true,\n          link: true,\n          meta: true,\n          param: true,\n          source: true,\n          track: true,\n          wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.\n\n        }; // For HTML, certain tags cannot have children. This has the same purpose as\n        // `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\n        var voidElementTags = _assign({\n          menuitem: true\n        }, omittedCloseTags); // TODO: We can remove this if we add invariantWithStack()\n        // or add stack by default to invariants where possible.\n\n\n        var HTML$1 = '__html';\n        var ReactDebugCurrentFrame$2 = null;\n        {\n          ReactDebugCurrentFrame$2 = ReactSharedInternals.ReactDebugCurrentFrame;\n        }\n\n        function assertValidProps(tag, props) {\n          if (!props) {\n            return;\n          } // Note the use of `==` which checks for null or undefined.\n\n\n          if (voidElementTags[tag]) {\n            !(props.children == null && props.dangerouslySetInnerHTML == null) ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', tag, ReactDebugCurrentFrame$2.getStackAddendum()) : void 0;\n          }\n\n          if (props.dangerouslySetInnerHTML != null) {\n            !(props.children == null) ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : void 0;\n            !(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML) ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : void 0;\n          }\n\n          {\n            !(props.suppressContentEditableWarning || !props.contentEditable || props.children == null) ? warning$1(false, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;\n          }\n          !(props.style == null || typeof props.style === 'object') ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \\'em\\'}} when using JSX.%s', ReactDebugCurrentFrame$2.getStackAddendum()) : void 0;\n        }\n\n        function isCustomComponent(tagName, props) {\n          if (tagName.indexOf('-') === -1) {\n            return typeof props.is === 'string';\n          }\n\n          switch (tagName) {\n            // These are reserved SVG and MathML elements.\n            // We don't mind this whitelist too much because we expect it to never grow.\n            // The alternative is to track the namespace in a few places which is convoluted.\n            // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n            case 'annotation-xml':\n            case 'color-profile':\n            case 'font-face':\n            case 'font-face-src':\n            case 'font-face-uri':\n            case 'font-face-format':\n            case 'font-face-name':\n            case 'missing-glyph':\n              return false;\n\n            default:\n              return true;\n          }\n        } // When adding attributes to the HTML or SVG whitelist, be sure to\n        // also add them to this module to ensure casing and incorrect name\n        // warnings.\n\n\n        var possibleStandardNames = {\n          // HTML\n          accept: 'accept',\n          acceptcharset: 'acceptCharset',\n          'accept-charset': 'acceptCharset',\n          accesskey: 'accessKey',\n          action: 'action',\n          allowfullscreen: 'allowFullScreen',\n          alt: 'alt',\n          as: 'as',\n          async: 'async',\n          autocapitalize: 'autoCapitalize',\n          autocomplete: 'autoComplete',\n          autocorrect: 'autoCorrect',\n          autofocus: 'autoFocus',\n          autoplay: 'autoPlay',\n          autosave: 'autoSave',\n          capture: 'capture',\n          cellpadding: 'cellPadding',\n          cellspacing: 'cellSpacing',\n          challenge: 'challenge',\n          charset: 'charSet',\n          checked: 'checked',\n          children: 'children',\n          cite: 'cite',\n          class: 'className',\n          classid: 'classID',\n          classname: 'className',\n          cols: 'cols',\n          colspan: 'colSpan',\n          content: 'content',\n          contenteditable: 'contentEditable',\n          contextmenu: 'contextMenu',\n          controls: 'controls',\n          controlslist: 'controlsList',\n          coords: 'coords',\n          crossorigin: 'crossOrigin',\n          dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',\n          data: 'data',\n          datetime: 'dateTime',\n          default: 'default',\n          defaultchecked: 'defaultChecked',\n          defaultvalue: 'defaultValue',\n          defer: 'defer',\n          dir: 'dir',\n          disabled: 'disabled',\n          download: 'download',\n          draggable: 'draggable',\n          enctype: 'encType',\n          for: 'htmlFor',\n          form: 'form',\n          formmethod: 'formMethod',\n          formaction: 'formAction',\n          formenctype: 'formEncType',\n          formnovalidate: 'formNoValidate',\n          formtarget: 'formTarget',\n          frameborder: 'frameBorder',\n          headers: 'headers',\n          height: 'height',\n          hidden: 'hidden',\n          high: 'high',\n          href: 'href',\n          hreflang: 'hrefLang',\n          htmlfor: 'htmlFor',\n          httpequiv: 'httpEquiv',\n          'http-equiv': 'httpEquiv',\n          icon: 'icon',\n          id: 'id',\n          innerhtml: 'innerHTML',\n          inputmode: 'inputMode',\n          integrity: 'integrity',\n          is: 'is',\n          itemid: 'itemID',\n          itemprop: 'itemProp',\n          itemref: 'itemRef',\n          itemscope: 'itemScope',\n          itemtype: 'itemType',\n          keyparams: 'keyParams',\n          keytype: 'keyType',\n          kind: 'kind',\n          label: 'label',\n          lang: 'lang',\n          list: 'list',\n          loop: 'loop',\n          low: 'low',\n          manifest: 'manifest',\n          marginwidth: 'marginWidth',\n          marginheight: 'marginHeight',\n          max: 'max',\n          maxlength: 'maxLength',\n          media: 'media',\n          mediagroup: 'mediaGroup',\n          method: 'method',\n          min: 'min',\n          minlength: 'minLength',\n          multiple: 'multiple',\n          muted: 'muted',\n          name: 'name',\n          nomodule: 'noModule',\n          nonce: 'nonce',\n          novalidate: 'noValidate',\n          open: 'open',\n          optimum: 'optimum',\n          pattern: 'pattern',\n          placeholder: 'placeholder',\n          playsinline: 'playsInline',\n          poster: 'poster',\n          preload: 'preload',\n          profile: 'profile',\n          radiogroup: 'radioGroup',\n          readonly: 'readOnly',\n          referrerpolicy: 'referrerPolicy',\n          rel: 'rel',\n          required: 'required',\n          reversed: 'reversed',\n          role: 'role',\n          rows: 'rows',\n          rowspan: 'rowSpan',\n          sandbox: 'sandbox',\n          scope: 'scope',\n          scoped: 'scoped',\n          scrolling: 'scrolling',\n          seamless: 'seamless',\n          selected: 'selected',\n          shape: 'shape',\n          size: 'size',\n          sizes: 'sizes',\n          span: 'span',\n          spellcheck: 'spellCheck',\n          src: 'src',\n          srcdoc: 'srcDoc',\n          srclang: 'srcLang',\n          srcset: 'srcSet',\n          start: 'start',\n          step: 'step',\n          style: 'style',\n          summary: 'summary',\n          tabindex: 'tabIndex',\n          target: 'target',\n          title: 'title',\n          type: 'type',\n          usemap: 'useMap',\n          value: 'value',\n          width: 'width',\n          wmode: 'wmode',\n          wrap: 'wrap',\n          // SVG\n          about: 'about',\n          accentheight: 'accentHeight',\n          'accent-height': 'accentHeight',\n          accumulate: 'accumulate',\n          additive: 'additive',\n          alignmentbaseline: 'alignmentBaseline',\n          'alignment-baseline': 'alignmentBaseline',\n          allowreorder: 'allowReorder',\n          alphabetic: 'alphabetic',\n          amplitude: 'amplitude',\n          arabicform: 'arabicForm',\n          'arabic-form': 'arabicForm',\n          ascent: 'ascent',\n          attributename: 'attributeName',\n          attributetype: 'attributeType',\n          autoreverse: 'autoReverse',\n          azimuth: 'azimuth',\n          basefrequency: 'baseFrequency',\n          baselineshift: 'baselineShift',\n          'baseline-shift': 'baselineShift',\n          baseprofile: 'baseProfile',\n          bbox: 'bbox',\n          begin: 'begin',\n          bias: 'bias',\n          by: 'by',\n          calcmode: 'calcMode',\n          capheight: 'capHeight',\n          'cap-height': 'capHeight',\n          clip: 'clip',\n          clippath: 'clipPath',\n          'clip-path': 'clipPath',\n          clippathunits: 'clipPathUnits',\n          cliprule: 'clipRule',\n          'clip-rule': 'clipRule',\n          color: 'color',\n          colorinterpolation: 'colorInterpolation',\n          'color-interpolation': 'colorInterpolation',\n          colorinterpolationfilters: 'colorInterpolationFilters',\n          'color-interpolation-filters': 'colorInterpolationFilters',\n          colorprofile: 'colorProfile',\n          'color-profile': 'colorProfile',\n          colorrendering: 'colorRendering',\n          'color-rendering': 'colorRendering',\n          contentscripttype: 'contentScriptType',\n          contentstyletype: 'contentStyleType',\n          cursor: 'cursor',\n          cx: 'cx',\n          cy: 'cy',\n          d: 'd',\n          datatype: 'datatype',\n          decelerate: 'decelerate',\n          descent: 'descent',\n          diffuseconstant: 'diffuseConstant',\n          direction: 'direction',\n          display: 'display',\n          divisor: 'divisor',\n          dominantbaseline: 'dominantBaseline',\n          'dominant-baseline': 'dominantBaseline',\n          dur: 'dur',\n          dx: 'dx',\n          dy: 'dy',\n          edgemode: 'edgeMode',\n          elevation: 'elevation',\n          enablebackground: 'enableBackground',\n          'enable-background': 'enableBackground',\n          end: 'end',\n          exponent: 'exponent',\n          externalresourcesrequired: 'externalResourcesRequired',\n          fill: 'fill',\n          fillopacity: 'fillOpacity',\n          'fill-opacity': 'fillOpacity',\n          fillrule: 'fillRule',\n          'fill-rule': 'fillRule',\n          filter: 'filter',\n          filterres: 'filterRes',\n          filterunits: 'filterUnits',\n          floodopacity: 'floodOpacity',\n          'flood-opacity': 'floodOpacity',\n          floodcolor: 'floodColor',\n          'flood-color': 'floodColor',\n          focusable: 'focusable',\n          fontfamily: 'fontFamily',\n          'font-family': 'fontFamily',\n          fontsize: 'fontSize',\n          'font-size': 'fontSize',\n          fontsizeadjust: 'fontSizeAdjust',\n          'font-size-adjust': 'fontSizeAdjust',\n          fontstretch: 'fontStretch',\n          'font-stretch': 'fontStretch',\n          fontstyle: 'fontStyle',\n          'font-style': 'fontStyle',\n          fontvariant: 'fontVariant',\n          'font-variant': 'fontVariant',\n          fontweight: 'fontWeight',\n          'font-weight': 'fontWeight',\n          format: 'format',\n          from: 'from',\n          fx: 'fx',\n          fy: 'fy',\n          g1: 'g1',\n          g2: 'g2',\n          glyphname: 'glyphName',\n          'glyph-name': 'glyphName',\n          glyphorientationhorizontal: 'glyphOrientationHorizontal',\n          'glyph-orientation-horizontal': 'glyphOrientationHorizontal',\n          glyphorientationvertical: 'glyphOrientationVertical',\n          'glyph-orientation-vertical': 'glyphOrientationVertical',\n          glyphref: 'glyphRef',\n          gradienttransform: 'gradientTransform',\n          gradientunits: 'gradientUnits',\n          hanging: 'hanging',\n          horizadvx: 'horizAdvX',\n          'horiz-adv-x': 'horizAdvX',\n          horizoriginx: 'horizOriginX',\n          'horiz-origin-x': 'horizOriginX',\n          ideographic: 'ideographic',\n          imagerendering: 'imageRendering',\n          'image-rendering': 'imageRendering',\n          in2: 'in2',\n          in: 'in',\n          inlist: 'inlist',\n          intercept: 'intercept',\n          k1: 'k1',\n          k2: 'k2',\n          k3: 'k3',\n          k4: 'k4',\n          k: 'k',\n          kernelmatrix: 'kernelMatrix',\n          kernelunitlength: 'kernelUnitLength',\n          kerning: 'kerning',\n          keypoints: 'keyPoints',\n          keysplines: 'keySplines',\n          keytimes: 'keyTimes',\n          lengthadjust: 'lengthAdjust',\n          letterspacing: 'letterSpacing',\n          'letter-spacing': 'letterSpacing',\n          lightingcolor: 'lightingColor',\n          'lighting-color': 'lightingColor',\n          limitingconeangle: 'limitingConeAngle',\n          local: 'local',\n          markerend: 'markerEnd',\n          'marker-end': 'markerEnd',\n          markerheight: 'markerHeight',\n          markermid: 'markerMid',\n          'marker-mid': 'markerMid',\n          markerstart: 'markerStart',\n          'marker-start': 'markerStart',\n          markerunits: 'markerUnits',\n          markerwidth: 'markerWidth',\n          mask: 'mask',\n          maskcontentunits: 'maskContentUnits',\n          maskunits: 'maskUnits',\n          mathematical: 'mathematical',\n          mode: 'mode',\n          numoctaves: 'numOctaves',\n          offset: 'offset',\n          opacity: 'opacity',\n          operator: 'operator',\n          order: 'order',\n          orient: 'orient',\n          orientation: 'orientation',\n          origin: 'origin',\n          overflow: 'overflow',\n          overlineposition: 'overlinePosition',\n          'overline-position': 'overlinePosition',\n          overlinethickness: 'overlineThickness',\n          'overline-thickness': 'overlineThickness',\n          paintorder: 'paintOrder',\n          'paint-order': 'paintOrder',\n          panose1: 'panose1',\n          'panose-1': 'panose1',\n          pathlength: 'pathLength',\n          patterncontentunits: 'patternContentUnits',\n          patterntransform: 'patternTransform',\n          patternunits: 'patternUnits',\n          pointerevents: 'pointerEvents',\n          'pointer-events': 'pointerEvents',\n          points: 'points',\n          pointsatx: 'pointsAtX',\n          pointsaty: 'pointsAtY',\n          pointsatz: 'pointsAtZ',\n          prefix: 'prefix',\n          preservealpha: 'preserveAlpha',\n          preserveaspectratio: 'preserveAspectRatio',\n          primitiveunits: 'primitiveUnits',\n          property: 'property',\n          r: 'r',\n          radius: 'radius',\n          refx: 'refX',\n          refy: 'refY',\n          renderingintent: 'renderingIntent',\n          'rendering-intent': 'renderingIntent',\n          repeatcount: 'repeatCount',\n          repeatdur: 'repeatDur',\n          requiredextensions: 'requiredExtensions',\n          requiredfeatures: 'requiredFeatures',\n          resource: 'resource',\n          restart: 'restart',\n          result: 'result',\n          results: 'results',\n          rotate: 'rotate',\n          rx: 'rx',\n          ry: 'ry',\n          scale: 'scale',\n          security: 'security',\n          seed: 'seed',\n          shaperendering: 'shapeRendering',\n          'shape-rendering': 'shapeRendering',\n          slope: 'slope',\n          spacing: 'spacing',\n          specularconstant: 'specularConstant',\n          specularexponent: 'specularExponent',\n          speed: 'speed',\n          spreadmethod: 'spreadMethod',\n          startoffset: 'startOffset',\n          stddeviation: 'stdDeviation',\n          stemh: 'stemh',\n          stemv: 'stemv',\n          stitchtiles: 'stitchTiles',\n          stopcolor: 'stopColor',\n          'stop-color': 'stopColor',\n          stopopacity: 'stopOpacity',\n          'stop-opacity': 'stopOpacity',\n          strikethroughposition: 'strikethroughPosition',\n          'strikethrough-position': 'strikethroughPosition',\n          strikethroughthickness: 'strikethroughThickness',\n          'strikethrough-thickness': 'strikethroughThickness',\n          string: 'string',\n          stroke: 'stroke',\n          strokedasharray: 'strokeDasharray',\n          'stroke-dasharray': 'strokeDasharray',\n          strokedashoffset: 'strokeDashoffset',\n          'stroke-dashoffset': 'strokeDashoffset',\n          strokelinecap: 'strokeLinecap',\n          'stroke-linecap': 'strokeLinecap',\n          strokelinejoin: 'strokeLinejoin',\n          'stroke-linejoin': 'strokeLinejoin',\n          strokemiterlimit: 'strokeMiterlimit',\n          'stroke-miterlimit': 'strokeMiterlimit',\n          strokewidth: 'strokeWidth',\n          'stroke-width': 'strokeWidth',\n          strokeopacity: 'strokeOpacity',\n          'stroke-opacity': 'strokeOpacity',\n          suppresscontenteditablewarning: 'suppressContentEditableWarning',\n          suppresshydrationwarning: 'suppressHydrationWarning',\n          surfacescale: 'surfaceScale',\n          systemlanguage: 'systemLanguage',\n          tablevalues: 'tableValues',\n          targetx: 'targetX',\n          targety: 'targetY',\n          textanchor: 'textAnchor',\n          'text-anchor': 'textAnchor',\n          textdecoration: 'textDecoration',\n          'text-decoration': 'textDecoration',\n          textlength: 'textLength',\n          textrendering: 'textRendering',\n          'text-rendering': 'textRendering',\n          to: 'to',\n          transform: 'transform',\n          typeof: 'typeof',\n          u1: 'u1',\n          u2: 'u2',\n          underlineposition: 'underlinePosition',\n          'underline-position': 'underlinePosition',\n          underlinethickness: 'underlineThickness',\n          'underline-thickness': 'underlineThickness',\n          unicode: 'unicode',\n          unicodebidi: 'unicodeBidi',\n          'unicode-bidi': 'unicodeBidi',\n          unicoderange: 'unicodeRange',\n          'unicode-range': 'unicodeRange',\n          unitsperem: 'unitsPerEm',\n          'units-per-em': 'unitsPerEm',\n          unselectable: 'unselectable',\n          valphabetic: 'vAlphabetic',\n          'v-alphabetic': 'vAlphabetic',\n          values: 'values',\n          vectoreffect: 'vectorEffect',\n          'vector-effect': 'vectorEffect',\n          version: 'version',\n          vertadvy: 'vertAdvY',\n          'vert-adv-y': 'vertAdvY',\n          vertoriginx: 'vertOriginX',\n          'vert-origin-x': 'vertOriginX',\n          vertoriginy: 'vertOriginY',\n          'vert-origin-y': 'vertOriginY',\n          vhanging: 'vHanging',\n          'v-hanging': 'vHanging',\n          videographic: 'vIdeographic',\n          'v-ideographic': 'vIdeographic',\n          viewbox: 'viewBox',\n          viewtarget: 'viewTarget',\n          visibility: 'visibility',\n          vmathematical: 'vMathematical',\n          'v-mathematical': 'vMathematical',\n          vocab: 'vocab',\n          widths: 'widths',\n          wordspacing: 'wordSpacing',\n          'word-spacing': 'wordSpacing',\n          writingmode: 'writingMode',\n          'writing-mode': 'writingMode',\n          x1: 'x1',\n          x2: 'x2',\n          x: 'x',\n          xchannelselector: 'xChannelSelector',\n          xheight: 'xHeight',\n          'x-height': 'xHeight',\n          xlinkactuate: 'xlinkActuate',\n          'xlink:actuate': 'xlinkActuate',\n          xlinkarcrole: 'xlinkArcrole',\n          'xlink:arcrole': 'xlinkArcrole',\n          xlinkhref: 'xlinkHref',\n          'xlink:href': 'xlinkHref',\n          xlinkrole: 'xlinkRole',\n          'xlink:role': 'xlinkRole',\n          xlinkshow: 'xlinkShow',\n          'xlink:show': 'xlinkShow',\n          xlinktitle: 'xlinkTitle',\n          'xlink:title': 'xlinkTitle',\n          xlinktype: 'xlinkType',\n          'xlink:type': 'xlinkType',\n          xmlbase: 'xmlBase',\n          'xml:base': 'xmlBase',\n          xmllang: 'xmlLang',\n          'xml:lang': 'xmlLang',\n          xmlns: 'xmlns',\n          'xml:space': 'xmlSpace',\n          xmlnsxlink: 'xmlnsXlink',\n          'xmlns:xlink': 'xmlnsXlink',\n          xmlspace: 'xmlSpace',\n          y1: 'y1',\n          y2: 'y2',\n          y: 'y',\n          ychannelselector: 'yChannelSelector',\n          z: 'z',\n          zoomandpan: 'zoomAndPan'\n        };\n        var ariaProperties = {\n          'aria-current': 0,\n          // state\n          'aria-details': 0,\n          'aria-disabled': 0,\n          // state\n          'aria-hidden': 0,\n          // state\n          'aria-invalid': 0,\n          // state\n          'aria-keyshortcuts': 0,\n          'aria-label': 0,\n          'aria-roledescription': 0,\n          // Widget Attributes\n          'aria-autocomplete': 0,\n          'aria-checked': 0,\n          'aria-expanded': 0,\n          'aria-haspopup': 0,\n          'aria-level': 0,\n          'aria-modal': 0,\n          'aria-multiline': 0,\n          'aria-multiselectable': 0,\n          'aria-orientation': 0,\n          'aria-placeholder': 0,\n          'aria-pressed': 0,\n          'aria-readonly': 0,\n          'aria-required': 0,\n          'aria-selected': 0,\n          'aria-sort': 0,\n          'aria-valuemax': 0,\n          'aria-valuemin': 0,\n          'aria-valuenow': 0,\n          'aria-valuetext': 0,\n          // Live Region Attributes\n          'aria-atomic': 0,\n          'aria-busy': 0,\n          'aria-live': 0,\n          'aria-relevant': 0,\n          // Drag-and-Drop Attributes\n          'aria-dropeffect': 0,\n          'aria-grabbed': 0,\n          // Relationship Attributes\n          'aria-activedescendant': 0,\n          'aria-colcount': 0,\n          'aria-colindex': 0,\n          'aria-colspan': 0,\n          'aria-controls': 0,\n          'aria-describedby': 0,\n          'aria-errormessage': 0,\n          'aria-flowto': 0,\n          'aria-labelledby': 0,\n          'aria-owns': 0,\n          'aria-posinset': 0,\n          'aria-rowcount': 0,\n          'aria-rowindex': 0,\n          'aria-rowspan': 0,\n          'aria-setsize': 0\n        };\n        var warnedProperties = {};\n        var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\n        var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\n        var hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\n        function validateProperty(tagName, name) {\n          if (hasOwnProperty$2.call(warnedProperties, name) && warnedProperties[name]) {\n            return true;\n          }\n\n          if (rARIACamel.test(name)) {\n            var ariaName = 'aria-' + name.slice(4).toLowerCase();\n            var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM\n            // DOM properties, then it is an invalid aria-* attribute.\n\n            if (correctName == null) {\n              warning$1(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);\n              warnedProperties[name] = true;\n              return true;\n            } // aria-* attributes should be lowercase; suggest the lowercase version.\n\n\n            if (name !== correctName) {\n              warning$1(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);\n              warnedProperties[name] = true;\n              return true;\n            }\n          }\n\n          if (rARIA.test(name)) {\n            var lowerCasedName = name.toLowerCase();\n            var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM\n            // DOM properties, then it is an invalid aria-* attribute.\n\n            if (standardName == null) {\n              warnedProperties[name] = true;\n              return false;\n            } // aria-* attributes should be lowercase; suggest the lowercase version.\n\n\n            if (name !== standardName) {\n              warning$1(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);\n              warnedProperties[name] = true;\n              return true;\n            }\n          }\n\n          return true;\n        }\n\n        function warnInvalidARIAProps(type, props) {\n          var invalidProps = [];\n\n          for (var key in props) {\n            var isValid = validateProperty(type, key);\n\n            if (!isValid) {\n              invalidProps.push(key);\n            }\n          }\n\n          var unknownPropString = invalidProps.map(function (prop) {\n            return '`' + prop + '`';\n          }).join(', ');\n\n          if (invalidProps.length === 1) {\n            warning$1(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);\n          } else if (invalidProps.length > 1) {\n            warning$1(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);\n          }\n        }\n\n        function validateProperties(type, props) {\n          if (isCustomComponent(type, props)) {\n            return;\n          }\n\n          warnInvalidARIAProps(type, props);\n        }\n\n        var didWarnValueNull = false;\n\n        function validateProperties$1(type, props) {\n          if (type !== 'input' && type !== 'textarea' && type !== 'select') {\n            return;\n          }\n\n          if (props != null && props.value === null && !didWarnValueNull) {\n            didWarnValueNull = true;\n\n            if (type === 'select' && props.multiple) {\n              warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);\n            } else {\n              warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);\n            }\n          }\n        }\n\n        var validateProperty$1 = function validateProperty$1() {};\n\n        {\n          var warnedProperties$1 = {};\n          var _hasOwnProperty = Object.prototype.hasOwnProperty;\n          var EVENT_NAME_REGEX = /^on./;\n          var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;\n          var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\n          var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\n          validateProperty$1 = function validateProperty$1(tagName, name, value, canUseEventSystem) {\n            if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {\n              return true;\n            }\n\n            var lowerCasedName = name.toLowerCase();\n\n            if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {\n              warning$1(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');\n              warnedProperties$1[name] = true;\n              return true;\n            } // We can't rely on the event system being injected on the server.\n\n\n            if (canUseEventSystem) {\n              if (registrationNameModules.hasOwnProperty(name)) {\n                return true;\n              }\n\n              var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;\n\n              if (registrationName != null) {\n                warning$1(false, 'Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);\n                warnedProperties$1[name] = true;\n                return true;\n              }\n\n              if (EVENT_NAME_REGEX.test(name)) {\n                warning$1(false, 'Unknown event handler property `%s`. It will be ignored.', name);\n                warnedProperties$1[name] = true;\n                return true;\n              }\n            } else if (EVENT_NAME_REGEX.test(name)) {\n              // If no event plugins have been injected, we are in a server environment.\n              // So we can't tell if the event name is correct for sure, but we can filter\n              // out known bad ones like `onclick`. We can't suggest a specific replacement though.\n              if (INVALID_EVENT_NAME_REGEX.test(name)) {\n                warning$1(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);\n              }\n\n              warnedProperties$1[name] = true;\n              return true;\n            } // Let the ARIA attribute hook validate ARIA attributes\n\n\n            if (rARIA$1.test(name) || rARIACamel$1.test(name)) {\n              return true;\n            }\n\n            if (lowerCasedName === 'innerhtml') {\n              warning$1(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');\n              warnedProperties$1[name] = true;\n              return true;\n            }\n\n            if (lowerCasedName === 'aria') {\n              warning$1(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');\n              warnedProperties$1[name] = true;\n              return true;\n            }\n\n            if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {\n              warning$1(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);\n              warnedProperties$1[name] = true;\n              return true;\n            }\n\n            if (typeof value === 'number' && isNaN(value)) {\n              warning$1(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);\n              warnedProperties$1[name] = true;\n              return true;\n            }\n\n            var propertyInfo = getPropertyInfo(name);\n            var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.\n\n            if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n              var standardName = possibleStandardNames[lowerCasedName];\n\n              if (standardName !== name) {\n                warning$1(false, 'Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);\n                warnedProperties$1[name] = true;\n                return true;\n              }\n            } else if (!isReserved && name !== lowerCasedName) {\n              // Unknown attributes should have lowercase casing since that's how they\n              // will be cased anyway with server rendering.\n              warning$1(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);\n              warnedProperties$1[name] = true;\n              return true;\n            }\n\n            if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {\n              if (value) {\n                warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\\n\\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s=\"%s\" or %s={value.toString()}.', value, name, name, value, name);\n              } else {\n                warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\\n\\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s=\"%s\" or %s={value.toString()}.\\n\\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);\n              }\n\n              warnedProperties$1[name] = true;\n              return true;\n            } // Now that we've validated casing, do not validate\n            // data types for reserved props\n\n\n            if (isReserved) {\n              return true;\n            } // Warn when a known attribute is a bad type\n\n\n            if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {\n              warnedProperties$1[name] = true;\n              return false;\n            } // Warn when passing the strings 'false' or 'true' into a boolean prop\n\n\n            if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {\n              warning$1(false, 'Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string \"false\".', name, value);\n              warnedProperties$1[name] = true;\n              return true;\n            }\n\n            return true;\n          };\n        }\n\n        var warnUnknownProperties = function warnUnknownProperties(type, props, canUseEventSystem) {\n          var unknownProps = [];\n\n          for (var key in props) {\n            var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);\n\n            if (!isValid) {\n              unknownProps.push(key);\n            }\n          }\n\n          var unknownPropString = unknownProps.map(function (prop) {\n            return '`' + prop + '`';\n          }).join(', ');\n\n          if (unknownProps.length === 1) {\n            warning$1(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);\n          } else if (unknownProps.length > 1) {\n            warning$1(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);\n          }\n        };\n\n        function validateProperties$2(type, props, canUseEventSystem) {\n          if (isCustomComponent(type, props)) {\n            return;\n          }\n\n          warnUnknownProperties(type, props, canUseEventSystem);\n        } // TODO: direct imports like some-package/src/* are bad. Fix me.\n\n\n        var didWarnInvalidHydration = false;\n        var didWarnShadyDOM = false;\n        var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';\n        var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';\n        var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';\n        var AUTOFOCUS = 'autoFocus';\n        var CHILDREN = 'children';\n        var STYLE$1 = 'style';\n        var HTML = '__html';\n        var HTML_NAMESPACE = Namespaces.html;\n        var warnedUnknownTags = void 0;\n        var suppressHydrationWarning = void 0;\n        var validatePropertiesInDevelopment = void 0;\n        var warnForTextDifference = void 0;\n        var warnForPropDifference = void 0;\n        var warnForExtraAttributes = void 0;\n        var warnForInvalidEventListener = void 0;\n        var canDiffStyleForHydrationWarning = void 0;\n        var normalizeMarkupForTextOrAttribute = void 0;\n        var normalizeHTML = void 0;\n        {\n          warnedUnknownTags = {\n            // Chrome is the only major browser not shipping <time>. But as of July\n            // 2017 it intends to ship it due to widespread usage. We intentionally\n            // *don't* warn for <time> even if it's unrecognized by Chrome because\n            // it soon will be, and many apps have been using it anyway.\n            time: true,\n            // There are working polyfills for <dialog>. Let people use it.\n            dialog: true,\n            // Electron ships a custom <webview> tag to display external web content in\n            // an isolated frame and process.\n            // This tag is not present in non Electron environments such as JSDom which\n            // is often used for testing purposes.\n            // @see https://electronjs.org/docs/api/webview-tag\n            webview: true\n          };\n\n          validatePropertiesInDevelopment = function validatePropertiesInDevelopment(type, props) {\n            validateProperties(type, props);\n            validateProperties$1(type, props);\n            validateProperties$2(type, props,\n            /* canUseEventSystem */\n            true);\n          }; // IE 11 parses & normalizes the style attribute as opposed to other\n          // browsers. It adds spaces and sorts the properties in some\n          // non-alphabetical order. Handling that would require sorting CSS\n          // properties in the client & server versions or applying\n          // `expectedStyle` to a temporary DOM node to read its `style` attribute\n          // normalized. Since it only affects IE, we're skipping style warnings\n          // in that browser completely in favor of doing all that work.\n          // See https://github.com/facebook/react/issues/11807\n\n\n          canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode; // HTML parsing normalizes CR and CRLF to LF.\n          // It also can turn \\u0000 into \\uFFFD inside attributes.\n          // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream\n          // If we have a mismatch, it might be caused by that.\n          // We will still patch up in this case but not fire the warning.\n\n          var NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g;\n          var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\n\n          normalizeMarkupForTextOrAttribute = function normalizeMarkupForTextOrAttribute(markup) {\n            var markupString = typeof markup === 'string' ? markup : '' + markup;\n            return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');\n          };\n\n          warnForTextDifference = function warnForTextDifference(serverText, clientText) {\n            if (didWarnInvalidHydration) {\n              return;\n            }\n\n            var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);\n            var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);\n\n            if (normalizedServerText === normalizedClientText) {\n              return;\n            }\n\n            didWarnInvalidHydration = true;\n            warningWithoutStack$1(false, 'Text content did not match. Server: \"%s\" Client: \"%s\"', normalizedServerText, normalizedClientText);\n          };\n\n          warnForPropDifference = function warnForPropDifference(propName, serverValue, clientValue) {\n            if (didWarnInvalidHydration) {\n              return;\n            }\n\n            var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);\n            var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);\n\n            if (normalizedServerValue === normalizedClientValue) {\n              return;\n            }\n\n            didWarnInvalidHydration = true;\n            warningWithoutStack$1(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));\n          };\n\n          warnForExtraAttributes = function warnForExtraAttributes(attributeNames) {\n            if (didWarnInvalidHydration) {\n              return;\n            }\n\n            didWarnInvalidHydration = true;\n            var names = [];\n            attributeNames.forEach(function (name) {\n              names.push(name);\n            });\n            warningWithoutStack$1(false, 'Extra attributes from the server: %s', names);\n          };\n\n          warnForInvalidEventListener = function warnForInvalidEventListener(registrationName, listener) {\n            if (listener === false) {\n              warning$1(false, 'Expected `%s` listener to be a function, instead got `false`.\\n\\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);\n            } else {\n              warning$1(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);\n            }\n          }; // Parse the HTML and read it back to normalize the HTML string so that it\n          // can be used for comparison.\n\n\n          normalizeHTML = function normalizeHTML(parent, html) {\n            // We could have created a separate document here to avoid\n            // re-initializing custom elements if they exist. But this breaks\n            // how <noscript> is being handled. So we use the same document.\n            // See the discussion in https://github.com/facebook/react/pull/11157.\n            var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);\n            testElement.innerHTML = html;\n            return testElement.innerHTML;\n          };\n        }\n\n        function ensureListeningTo(rootContainerElement, registrationName) {\n          var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;\n          var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;\n          listenTo(registrationName, doc);\n        }\n\n        function getOwnerDocumentFromRootContainer(rootContainerElement) {\n          return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;\n        }\n\n        function noop() {}\n\n        function trapClickOnNonInteractiveElement(node) {\n          // Mobile Safari does not fire properly bubble click events on\n          // non-interactive elements, which means delegated click listeners do not\n          // fire. The workaround for this bug involves attaching an empty click\n          // listener on the target node.\n          // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n          // Just set it using the onclick property so that we don't have to manage any\n          // bookkeeping for it. Not sure if we need to clear it when the listener is\n          // removed.\n          // TODO: Only do this for the relevant Safaris maybe?\n          node.onclick = noop;\n        }\n\n        function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {\n          for (var propKey in nextProps) {\n            if (!nextProps.hasOwnProperty(propKey)) {\n              continue;\n            }\n\n            var nextProp = nextProps[propKey];\n\n            if (propKey === STYLE$1) {\n              {\n                if (nextProp) {\n                  // Freeze the next style object so that we can assume it won't be\n                  // mutated. We have already warned for this in the past.\n                  Object.freeze(nextProp);\n                }\n              } // Relies on `updateStylesByID` not mutating `styleUpdates`.\n\n              setValueForStyles(domElement, nextProp);\n            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n              var nextHtml = nextProp ? nextProp[HTML] : undefined;\n\n              if (nextHtml != null) {\n                setInnerHTML(domElement, nextHtml);\n              }\n            } else if (propKey === CHILDREN) {\n              if (typeof nextProp === 'string') {\n                // Avoid setting initial textContent when the text is empty. In IE11 setting\n                // textContent on a <textarea> will cause the placeholder to not\n                // show within the <textarea> until it has been focused and blurred again.\n                // https://github.com/facebook/react/issues/6731#issuecomment-254874553\n                var canSetTextContent = tag !== 'textarea' || nextProp !== '';\n\n                if (canSetTextContent) {\n                  setTextContent(domElement, nextProp);\n                }\n              } else if (typeof nextProp === 'number') {\n                setTextContent(domElement, '' + nextProp);\n              }\n            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {// Noop\n            } else if (propKey === AUTOFOCUS) {// We polyfill it separately on the client during commit.\n              // We could have excluded it in the property list instead of\n              // adding a special case here, but then it wouldn't be emitted\n              // on server rendering (but we *do* want to emit it in SSR).\n            } else if (registrationNameModules.hasOwnProperty(propKey)) {\n              if (nextProp != null) {\n                if (true && typeof nextProp !== 'function') {\n                  warnForInvalidEventListener(propKey, nextProp);\n                }\n\n                ensureListeningTo(rootContainerElement, propKey);\n              }\n            } else if (nextProp != null) {\n              setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);\n            }\n          }\n        }\n\n        function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {\n          // TODO: Handle wasCustomComponentTag\n          for (var i = 0; i < updatePayload.length; i += 2) {\n            var propKey = updatePayload[i];\n            var propValue = updatePayload[i + 1];\n\n            if (propKey === STYLE$1) {\n              setValueForStyles(domElement, propValue);\n            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n              setInnerHTML(domElement, propValue);\n            } else if (propKey === CHILDREN) {\n              setTextContent(domElement, propValue);\n            } else {\n              setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);\n            }\n          }\n        }\n\n        function createElement(type, props, rootContainerElement, parentNamespace) {\n          var isCustomComponentTag = void 0; // We create tags in the namespace of their parent container, except HTML\n          // tags get no namespace.\n\n          var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);\n          var domElement = void 0;\n          var namespaceURI = parentNamespace;\n\n          if (namespaceURI === HTML_NAMESPACE) {\n            namespaceURI = getIntrinsicNamespace(type);\n          }\n\n          if (namespaceURI === HTML_NAMESPACE) {\n            {\n              isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to\n              // allow <SVG> or <mATH>.\n\n              !(isCustomComponentTag || type === type.toLowerCase()) ? warning$1(false, '<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type) : void 0;\n            }\n\n            if (type === 'script') {\n              // Create the script via .innerHTML so its \"parser-inserted\" flag is\n              // set to true and it does not execute\n              var div = ownerDocument.createElement('div');\n              div.innerHTML = '<script><' + '/script>'; // eslint-disable-line\n              // This is guaranteed to yield a script element.\n\n              var firstChild = div.firstChild;\n              domElement = div.removeChild(firstChild);\n            } else if (typeof props.is === 'string') {\n              // $FlowIssue `createElement` should be updated for Web Components\n              domElement = ownerDocument.createElement(type, {\n                is: props.is\n              });\n            } else {\n              // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.\n              // See discussion in https://github.com/facebook/react/pull/6896\n              // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n              domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple`\n              // attribute on `select`s needs to be added before `option`s are inserted. This prevents\n              // a bug where the `select` does not scroll to the correct option because singular\n              // `select` elements automatically pick the first item.\n              // See https://github.com/facebook/react/issues/13222\n\n              if (type === 'select' && props.multiple) {\n                var node = domElement;\n                node.multiple = true;\n              }\n            }\n          } else {\n            domElement = ownerDocument.createElementNS(namespaceURI, type);\n          }\n\n          {\n            if (namespaceURI === HTML_NAMESPACE) {\n              if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {\n                warnedUnknownTags[type] = true;\n                warning$1(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);\n              }\n            }\n          }\n          return domElement;\n        }\n\n        function createTextNode(text, rootContainerElement) {\n          return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);\n        }\n\n        function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {\n          var isCustomComponentTag = isCustomComponent(tag, rawProps);\n          {\n            validatePropertiesInDevelopment(tag, rawProps);\n\n            if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {\n              warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');\n              didWarnShadyDOM = true;\n            }\n          } // TODO: Make sure that we check isMounted before firing any of these events.\n\n          var props = void 0;\n\n          switch (tag) {\n            case 'iframe':\n            case 'object':\n              trapBubbledEvent(TOP_LOAD, domElement);\n              props = rawProps;\n              break;\n\n            case 'video':\n            case 'audio':\n              // Create listener for each media event\n              for (var i = 0; i < mediaEventTypes.length; i++) {\n                trapBubbledEvent(mediaEventTypes[i], domElement);\n              }\n\n              props = rawProps;\n              break;\n\n            case 'source':\n              trapBubbledEvent(TOP_ERROR, domElement);\n              props = rawProps;\n              break;\n\n            case 'img':\n            case 'image':\n            case 'link':\n              trapBubbledEvent(TOP_ERROR, domElement);\n              trapBubbledEvent(TOP_LOAD, domElement);\n              props = rawProps;\n              break;\n\n            case 'form':\n              trapBubbledEvent(TOP_RESET, domElement);\n              trapBubbledEvent(TOP_SUBMIT, domElement);\n              props = rawProps;\n              break;\n\n            case 'details':\n              trapBubbledEvent(TOP_TOGGLE, domElement);\n              props = rawProps;\n              break;\n\n            case 'input':\n              initWrapperState(domElement, rawProps);\n              props = getHostProps(domElement, rawProps);\n              trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening\n              // to onChange. Even if there is no listener.\n\n              ensureListeningTo(rootContainerElement, 'onChange');\n              break;\n\n            case 'option':\n              validateProps(domElement, rawProps);\n              props = getHostProps$1(domElement, rawProps);\n              break;\n\n            case 'select':\n              initWrapperState$1(domElement, rawProps);\n              props = getHostProps$2(domElement, rawProps);\n              trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening\n              // to onChange. Even if there is no listener.\n\n              ensureListeningTo(rootContainerElement, 'onChange');\n              break;\n\n            case 'textarea':\n              initWrapperState$2(domElement, rawProps);\n              props = getHostProps$3(domElement, rawProps);\n              trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening\n              // to onChange. Even if there is no listener.\n\n              ensureListeningTo(rootContainerElement, 'onChange');\n              break;\n\n            default:\n              props = rawProps;\n          }\n\n          assertValidProps(tag, props);\n          setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);\n\n          switch (tag) {\n            case 'input':\n              // TODO: Make sure we check if this is still unmounted or do any clean\n              // up necessary since we never stop tracking anymore.\n              track(domElement);\n              postMountWrapper(domElement, rawProps, false);\n              break;\n\n            case 'textarea':\n              // TODO: Make sure we check if this is still unmounted or do any clean\n              // up necessary since we never stop tracking anymore.\n              track(domElement);\n              postMountWrapper$3(domElement, rawProps);\n              break;\n\n            case 'option':\n              postMountWrapper$1(domElement, rawProps);\n              break;\n\n            case 'select':\n              postMountWrapper$2(domElement, rawProps);\n              break;\n\n            default:\n              if (typeof props.onClick === 'function') {\n                // TODO: This cast may not be sound for SVG, MathML or custom elements.\n                trapClickOnNonInteractiveElement(domElement);\n              }\n\n              break;\n          }\n        } // Calculate the diff between the two objects.\n\n\n        function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {\n          {\n            validatePropertiesInDevelopment(tag, nextRawProps);\n          }\n          var updatePayload = null;\n          var lastProps = void 0;\n          var nextProps = void 0;\n\n          switch (tag) {\n            case 'input':\n              lastProps = getHostProps(domElement, lastRawProps);\n              nextProps = getHostProps(domElement, nextRawProps);\n              updatePayload = [];\n              break;\n\n            case 'option':\n              lastProps = getHostProps$1(domElement, lastRawProps);\n              nextProps = getHostProps$1(domElement, nextRawProps);\n              updatePayload = [];\n              break;\n\n            case 'select':\n              lastProps = getHostProps$2(domElement, lastRawProps);\n              nextProps = getHostProps$2(domElement, nextRawProps);\n              updatePayload = [];\n              break;\n\n            case 'textarea':\n              lastProps = getHostProps$3(domElement, lastRawProps);\n              nextProps = getHostProps$3(domElement, nextRawProps);\n              updatePayload = [];\n              break;\n\n            default:\n              lastProps = lastRawProps;\n              nextProps = nextRawProps;\n\n              if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {\n                // TODO: This cast may not be sound for SVG, MathML or custom elements.\n                trapClickOnNonInteractiveElement(domElement);\n              }\n\n              break;\n          }\n\n          assertValidProps(tag, nextProps);\n          var propKey = void 0;\n          var styleName = void 0;\n          var styleUpdates = null;\n\n          for (propKey in lastProps) {\n            if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n              continue;\n            }\n\n            if (propKey === STYLE$1) {\n              var lastStyle = lastProps[propKey];\n\n              for (styleName in lastStyle) {\n                if (lastStyle.hasOwnProperty(styleName)) {\n                  if (!styleUpdates) {\n                    styleUpdates = {};\n                  }\n\n                  styleUpdates[styleName] = '';\n                }\n              }\n            } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {// Noop. This is handled by the clear text mechanism.\n            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {// Noop\n            } else if (propKey === AUTOFOCUS) {// Noop. It doesn't work on updates anyway.\n            } else if (registrationNameModules.hasOwnProperty(propKey)) {\n              // This is a special case. If any listener updates we need to ensure\n              // that the \"current\" fiber pointer gets updated so we need a commit\n              // to update this element.\n              if (!updatePayload) {\n                updatePayload = [];\n              }\n            } else {\n              // For all other deleted properties we add it to the queue. We use\n              // the whitelist in the commit phase instead.\n              (updatePayload = updatePayload || []).push(propKey, null);\n            }\n          }\n\n          for (propKey in nextProps) {\n            var nextProp = nextProps[propKey];\n            var lastProp = lastProps != null ? lastProps[propKey] : undefined;\n\n            if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n              continue;\n            }\n\n            if (propKey === STYLE$1) {\n              {\n                if (nextProp) {\n                  // Freeze the next style object so that we can assume it won't be\n                  // mutated. We have already warned for this in the past.\n                  Object.freeze(nextProp);\n                }\n              }\n\n              if (lastProp) {\n                // Unset styles on `lastProp` but not on `nextProp`.\n                for (styleName in lastProp) {\n                  if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n                    if (!styleUpdates) {\n                      styleUpdates = {};\n                    }\n\n                    styleUpdates[styleName] = '';\n                  }\n                } // Update styles that changed since `lastProp`.\n\n\n                for (styleName in nextProp) {\n                  if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n                    if (!styleUpdates) {\n                      styleUpdates = {};\n                    }\n\n                    styleUpdates[styleName] = nextProp[styleName];\n                  }\n                }\n              } else {\n                // Relies on `updateStylesByID` not mutating `styleUpdates`.\n                if (!styleUpdates) {\n                  if (!updatePayload) {\n                    updatePayload = [];\n                  }\n\n                  updatePayload.push(propKey, styleUpdates);\n                }\n\n                styleUpdates = nextProp;\n              }\n            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n              var nextHtml = nextProp ? nextProp[HTML] : undefined;\n              var lastHtml = lastProp ? lastProp[HTML] : undefined;\n\n              if (nextHtml != null) {\n                if (lastHtml !== nextHtml) {\n                  (updatePayload = updatePayload || []).push(propKey, '' + nextHtml);\n                }\n              } else {// TODO: It might be too late to clear this if we have children\n                // inserted already.\n              }\n            } else if (propKey === CHILDREN) {\n              if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {\n                (updatePayload = updatePayload || []).push(propKey, '' + nextProp);\n              }\n            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {// Noop\n            } else if (registrationNameModules.hasOwnProperty(propKey)) {\n              if (nextProp != null) {\n                // We eagerly listen to this even though we haven't committed yet.\n                if (true && typeof nextProp !== 'function') {\n                  warnForInvalidEventListener(propKey, nextProp);\n                }\n\n                ensureListeningTo(rootContainerElement, propKey);\n              }\n\n              if (!updatePayload && lastProp !== nextProp) {\n                // This is a special case. If any listener updates we need to ensure\n                // that the \"current\" props pointer gets updated so we need a commit\n                // to update this element.\n                updatePayload = [];\n              }\n            } else {\n              // For any other property we always add it to the queue and then we\n              // filter it out using the whitelist during the commit.\n              (updatePayload = updatePayload || []).push(propKey, nextProp);\n            }\n          }\n\n          if (styleUpdates) {\n            {\n              validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE$1]);\n            }\n            (updatePayload = updatePayload || []).push(STYLE$1, styleUpdates);\n          }\n\n          return updatePayload;\n        } // Apply the diff.\n\n\n        function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {\n          // Update checked *before* name.\n          // In the middle of an update, it is possible to have multiple checked.\n          // When a checked radio tries to change name, browser makes another radio's checked false.\n          if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {\n            updateChecked(domElement, nextRawProps);\n          }\n\n          var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);\n          var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.\n\n          updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props\n          // changed.\n\n          switch (tag) {\n            case 'input':\n              // Update the wrapper around inputs *after* updating props. This has to\n              // happen after `updateDOMProperties`. Otherwise HTML5 input validations\n              // raise warnings and prevent the new value from being assigned.\n              updateWrapper(domElement, nextRawProps);\n              break;\n\n            case 'textarea':\n              updateWrapper$1(domElement, nextRawProps);\n              break;\n\n            case 'select':\n              // <select> value update needs to occur after <option> children\n              // reconciliation\n              postUpdateWrapper(domElement, nextRawProps);\n              break;\n          }\n        }\n\n        function getPossibleStandardName(propName) {\n          {\n            var lowerCasedName = propName.toLowerCase();\n\n            if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n              return null;\n            }\n\n            return possibleStandardNames[lowerCasedName] || null;\n          }\n          return null;\n        }\n\n        function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {\n          var isCustomComponentTag = void 0;\n          var extraAttributeNames = void 0;\n          {\n            suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;\n            isCustomComponentTag = isCustomComponent(tag, rawProps);\n            validatePropertiesInDevelopment(tag, rawProps);\n\n            if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {\n              warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');\n              didWarnShadyDOM = true;\n            }\n          } // TODO: Make sure that we check isMounted before firing any of these events.\n\n          switch (tag) {\n            case 'iframe':\n            case 'object':\n              trapBubbledEvent(TOP_LOAD, domElement);\n              break;\n\n            case 'video':\n            case 'audio':\n              // Create listener for each media event\n              for (var i = 0; i < mediaEventTypes.length; i++) {\n                trapBubbledEvent(mediaEventTypes[i], domElement);\n              }\n\n              break;\n\n            case 'source':\n              trapBubbledEvent(TOP_ERROR, domElement);\n              break;\n\n            case 'img':\n            case 'image':\n            case 'link':\n              trapBubbledEvent(TOP_ERROR, domElement);\n              trapBubbledEvent(TOP_LOAD, domElement);\n              break;\n\n            case 'form':\n              trapBubbledEvent(TOP_RESET, domElement);\n              trapBubbledEvent(TOP_SUBMIT, domElement);\n              break;\n\n            case 'details':\n              trapBubbledEvent(TOP_TOGGLE, domElement);\n              break;\n\n            case 'input':\n              initWrapperState(domElement, rawProps);\n              trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening\n              // to onChange. Even if there is no listener.\n\n              ensureListeningTo(rootContainerElement, 'onChange');\n              break;\n\n            case 'option':\n              validateProps(domElement, rawProps);\n              break;\n\n            case 'select':\n              initWrapperState$1(domElement, rawProps);\n              trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening\n              // to onChange. Even if there is no listener.\n\n              ensureListeningTo(rootContainerElement, 'onChange');\n              break;\n\n            case 'textarea':\n              initWrapperState$2(domElement, rawProps);\n              trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening\n              // to onChange. Even if there is no listener.\n\n              ensureListeningTo(rootContainerElement, 'onChange');\n              break;\n          }\n\n          assertValidProps(tag, rawProps);\n          {\n            extraAttributeNames = new Set();\n            var attributes = domElement.attributes;\n\n            for (var _i = 0; _i < attributes.length; _i++) {\n              var name = attributes[_i].name.toLowerCase();\n\n              switch (name) {\n                // Built-in SSR attribute is whitelisted\n                case 'data-reactroot':\n                  break;\n                // Controlled attributes are not validated\n                // TODO: Only ignore them on controlled tags.\n\n                case 'value':\n                  break;\n\n                case 'checked':\n                  break;\n\n                case 'selected':\n                  break;\n\n                default:\n                  // Intentionally use the original name.\n                  // See discussion in https://github.com/facebook/react/pull/10676.\n                  extraAttributeNames.add(attributes[_i].name);\n              }\n            }\n          }\n          var updatePayload = null;\n\n          for (var propKey in rawProps) {\n            if (!rawProps.hasOwnProperty(propKey)) {\n              continue;\n            }\n\n            var nextProp = rawProps[propKey];\n\n            if (propKey === CHILDREN) {\n              // For text content children we compare against textContent. This\n              // might match additional HTML that is hidden when we read it using\n              // textContent. E.g. \"foo\" will match \"f<span>oo</span>\" but that still\n              // satisfies our requirement. Our requirement is not to produce perfect\n              // HTML and attributes. Ideally we should preserve structure but it's\n              // ok not to if the visible content is still enough to indicate what\n              // even listeners these nodes might be wired up to.\n              // TODO: Warn if there is more than a single textNode as a child.\n              // TODO: Should we use domElement.firstChild.nodeValue to compare?\n              if (typeof nextProp === 'string') {\n                if (domElement.textContent !== nextProp) {\n                  if (true && !suppressHydrationWarning) {\n                    warnForTextDifference(domElement.textContent, nextProp);\n                  }\n\n                  updatePayload = [CHILDREN, nextProp];\n                }\n              } else if (typeof nextProp === 'number') {\n                if (domElement.textContent !== '' + nextProp) {\n                  if (true && !suppressHydrationWarning) {\n                    warnForTextDifference(domElement.textContent, nextProp);\n                  }\n\n                  updatePayload = [CHILDREN, '' + nextProp];\n                }\n              }\n            } else if (registrationNameModules.hasOwnProperty(propKey)) {\n              if (nextProp != null) {\n                if (true && typeof nextProp !== 'function') {\n                  warnForInvalidEventListener(propKey, nextProp);\n                }\n\n                ensureListeningTo(rootContainerElement, propKey);\n              }\n            } else if (true && // Convince Flow we've calculated it (it's DEV-only in this method.)\n            typeof isCustomComponentTag === 'boolean') {\n              // Validate that the properties correspond to their expected values.\n              var serverValue = void 0;\n              var propertyInfo = getPropertyInfo(propKey);\n\n              if (suppressHydrationWarning) {// Don't bother comparing. We're ignoring all these warnings.\n              } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 || // Controlled attributes are not validated\n              // TODO: Only ignore them on controlled tags.\n              propKey === 'value' || propKey === 'checked' || propKey === 'selected') {// Noop\n              } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n                var serverHTML = domElement.innerHTML;\n                var nextHtml = nextProp ? nextProp[HTML] : undefined;\n                var expectedHTML = normalizeHTML(domElement, nextHtml != null ? nextHtml : '');\n\n                if (expectedHTML !== serverHTML) {\n                  warnForPropDifference(propKey, serverHTML, expectedHTML);\n                }\n              } else if (propKey === STYLE$1) {\n                // $FlowFixMe - Should be inferred as not undefined.\n                extraAttributeNames.delete(propKey);\n\n                if (canDiffStyleForHydrationWarning) {\n                  var expectedStyle = createDangerousStringForStyles(nextProp);\n                  serverValue = domElement.getAttribute('style');\n\n                  if (expectedStyle !== serverValue) {\n                    warnForPropDifference(propKey, serverValue, expectedStyle);\n                  }\n                }\n              } else if (isCustomComponentTag) {\n                // $FlowFixMe - Should be inferred as not undefined.\n                extraAttributeNames.delete(propKey.toLowerCase());\n                serverValue = getValueForAttribute(domElement, propKey, nextProp);\n\n                if (nextProp !== serverValue) {\n                  warnForPropDifference(propKey, serverValue, nextProp);\n                }\n              } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {\n                var isMismatchDueToBadCasing = false;\n\n                if (propertyInfo !== null) {\n                  // $FlowFixMe - Should be inferred as not undefined.\n                  extraAttributeNames.delete(propertyInfo.attributeName);\n                  serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);\n                } else {\n                  var ownNamespace = parentNamespace;\n\n                  if (ownNamespace === HTML_NAMESPACE) {\n                    ownNamespace = getIntrinsicNamespace(tag);\n                  }\n\n                  if (ownNamespace === HTML_NAMESPACE) {\n                    // $FlowFixMe - Should be inferred as not undefined.\n                    extraAttributeNames.delete(propKey.toLowerCase());\n                  } else {\n                    var standardName = getPossibleStandardName(propKey);\n\n                    if (standardName !== null && standardName !== propKey) {\n                      // If an SVG prop is supplied with bad casing, it will\n                      // be successfully parsed from HTML, but will produce a mismatch\n                      // (and would be incorrectly rendered on the client).\n                      // However, we already warn about bad casing elsewhere.\n                      // So we'll skip the misleading extra mismatch warning in this case.\n                      isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.\n\n                      extraAttributeNames.delete(standardName);\n                    } // $FlowFixMe - Should be inferred as not undefined.\n\n\n                    extraAttributeNames.delete(propKey);\n                  }\n\n                  serverValue = getValueForAttribute(domElement, propKey, nextProp);\n                }\n\n                if (nextProp !== serverValue && !isMismatchDueToBadCasing) {\n                  warnForPropDifference(propKey, serverValue, nextProp);\n                }\n              }\n            }\n          }\n\n          {\n            // $FlowFixMe - Should be inferred as not undefined.\n            if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {\n              // $FlowFixMe - Should be inferred as not undefined.\n              warnForExtraAttributes(extraAttributeNames);\n            }\n          }\n\n          switch (tag) {\n            case 'input':\n              // TODO: Make sure we check if this is still unmounted or do any clean\n              // up necessary since we never stop tracking anymore.\n              track(domElement);\n              postMountWrapper(domElement, rawProps, true);\n              break;\n\n            case 'textarea':\n              // TODO: Make sure we check if this is still unmounted or do any clean\n              // up necessary since we never stop tracking anymore.\n              track(domElement);\n              postMountWrapper$3(domElement, rawProps);\n              break;\n\n            case 'select':\n            case 'option':\n              // For input and textarea we current always set the value property at\n              // post mount to force it to diverge from attributes. However, for\n              // option and select we don't quite do the same thing and select\n              // is not resilient to the DOM state changing so we don't do that here.\n              // TODO: Consider not doing this for input and textarea.\n              break;\n\n            default:\n              if (typeof rawProps.onClick === 'function') {\n                // TODO: This cast may not be sound for SVG, MathML or custom elements.\n                trapClickOnNonInteractiveElement(domElement);\n              }\n\n              break;\n          }\n\n          return updatePayload;\n        }\n\n        function diffHydratedText(textNode, text) {\n          var isDifferent = textNode.nodeValue !== text;\n          return isDifferent;\n        }\n\n        function warnForUnmatchedText(textNode, text) {\n          {\n            warnForTextDifference(textNode.nodeValue, text);\n          }\n        }\n\n        function warnForDeletedHydratableElement(parentNode, child) {\n          {\n            if (didWarnInvalidHydration) {\n              return;\n            }\n\n            didWarnInvalidHydration = true;\n            warningWithoutStack$1(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());\n          }\n        }\n\n        function warnForDeletedHydratableText(parentNode, child) {\n          {\n            if (didWarnInvalidHydration) {\n              return;\n            }\n\n            didWarnInvalidHydration = true;\n            warningWithoutStack$1(false, 'Did not expect server HTML to contain the text node \"%s\" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());\n          }\n        }\n\n        function warnForInsertedHydratedElement(parentNode, tag, props) {\n          {\n            if (didWarnInvalidHydration) {\n              return;\n            }\n\n            didWarnInvalidHydration = true;\n            warningWithoutStack$1(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());\n          }\n        }\n\n        function warnForInsertedHydratedText(parentNode, text) {\n          {\n            if (text === '') {\n              // We expect to insert empty text nodes since they're not represented in\n              // the HTML.\n              // TODO: Remove this special case if we can just avoid inserting empty\n              // text nodes.\n              return;\n            }\n\n            if (didWarnInvalidHydration) {\n              return;\n            }\n\n            didWarnInvalidHydration = true;\n            warningWithoutStack$1(false, 'Expected server HTML to contain a matching text node for \"%s\" in <%s>.', text, parentNode.nodeName.toLowerCase());\n          }\n        }\n\n        function restoreControlledState$1(domElement, tag, props) {\n          switch (tag) {\n            case 'input':\n              restoreControlledState(domElement, props);\n              return;\n\n            case 'textarea':\n              restoreControlledState$3(domElement, props);\n              return;\n\n            case 'select':\n              restoreControlledState$2(domElement, props);\n              return;\n          }\n        } // TODO: direct imports like some-package/src/* are bad. Fix me.\n\n\n        var validateDOMNesting = function validateDOMNesting() {};\n\n        var updatedAncestorInfo = function updatedAncestorInfo() {};\n\n        {\n          // This validation code was written based on the HTML5 parsing spec:\n          // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n          //\n          // Note: this does not catch all invalid nesting, nor does it try to (as it's\n          // not clear what practical benefit doing so provides); instead, we warn only\n          // for cases where the parser will give a parse tree differing from what React\n          // intended. For example, <b><div></div></b> is invalid but we don't warn\n          // because it still parses correctly; we do warn for other cases like nested\n          // <p> tags where the beginning of the second element implicitly closes the\n          // first, causing a confusing mess.\n          // https://html.spec.whatwg.org/multipage/syntax.html#special\n          var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n\n          var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n          // TODO: Distinguish by namespace here -- for <title>, including it here\n          // errs on the side of fewer warnings\n          'foreignObject', 'desc', 'title']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n\n          var buttonScopeTags = inScopeTags.concat(['button']); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n\n          var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n          var emptyAncestorInfo = {\n            current: null,\n            formTag: null,\n            aTagInScope: null,\n            buttonTagInScope: null,\n            nobrTagInScope: null,\n            pTagInButtonScope: null,\n            listItemTagAutoclosing: null,\n            dlItemTagAutoclosing: null\n          };\n\n          updatedAncestorInfo = function updatedAncestorInfo(oldInfo, tag) {\n            var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);\n\n            var info = {\n              tag: tag\n            };\n\n            if (inScopeTags.indexOf(tag) !== -1) {\n              ancestorInfo.aTagInScope = null;\n              ancestorInfo.buttonTagInScope = null;\n              ancestorInfo.nobrTagInScope = null;\n            }\n\n            if (buttonScopeTags.indexOf(tag) !== -1) {\n              ancestorInfo.pTagInButtonScope = null;\n            } // See rules for 'li', 'dd', 'dt' start tags in\n            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\n\n            if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n              ancestorInfo.listItemTagAutoclosing = null;\n              ancestorInfo.dlItemTagAutoclosing = null;\n            }\n\n            ancestorInfo.current = info;\n\n            if (tag === 'form') {\n              ancestorInfo.formTag = info;\n            }\n\n            if (tag === 'a') {\n              ancestorInfo.aTagInScope = info;\n            }\n\n            if (tag === 'button') {\n              ancestorInfo.buttonTagInScope = info;\n            }\n\n            if (tag === 'nobr') {\n              ancestorInfo.nobrTagInScope = info;\n            }\n\n            if (tag === 'p') {\n              ancestorInfo.pTagInButtonScope = info;\n            }\n\n            if (tag === 'li') {\n              ancestorInfo.listItemTagAutoclosing = info;\n            }\n\n            if (tag === 'dd' || tag === 'dt') {\n              ancestorInfo.dlItemTagAutoclosing = info;\n            }\n\n            return ancestorInfo;\n          };\n          /**\n           * Returns whether\n           */\n\n\n          var isTagValidWithParent = function isTagValidWithParent(tag, parentTag) {\n            // First, let's check if we're in an unusual parsing mode...\n            switch (parentTag) {\n              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n              case 'select':\n                return tag === 'option' || tag === 'optgroup' || tag === '#text';\n\n              case 'optgroup':\n                return tag === 'option' || tag === '#text';\n              // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n              // but\n\n              case 'option':\n                return tag === '#text';\n              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n              // No special behavior since these rules fall back to \"in body\" mode for\n              // all except special table nodes which cause bad parsing behavior anyway.\n              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n\n              case 'tr':\n                return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n\n              case 'tbody':\n              case 'thead':\n              case 'tfoot':\n                return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n\n              case 'colgroup':\n                return tag === 'col' || tag === 'template';\n              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n\n              case 'table':\n                return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n\n              case 'head':\n                return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n              // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n\n              case 'html':\n                return tag === 'head' || tag === 'body';\n\n              case '#document':\n                return tag === 'html';\n            } // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n            // where the parsing rules cause implicit opens or closes to be added.\n            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\n\n            switch (tag) {\n              case 'h1':\n              case 'h2':\n              case 'h3':\n              case 'h4':\n              case 'h5':\n              case 'h6':\n                return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\n              case 'rp':\n              case 'rt':\n                return impliedEndTags.indexOf(parentTag) === -1;\n\n              case 'body':\n              case 'caption':\n              case 'col':\n              case 'colgroup':\n              case 'frame':\n              case 'head':\n              case 'html':\n              case 'tbody':\n              case 'td':\n              case 'tfoot':\n              case 'th':\n              case 'thead':\n              case 'tr':\n                // These tags are only valid with a few parents that have special child\n                // parsing rules -- if we're down here, then none of those matched and\n                // so we allow it only if we don't know what the parent is, as all other\n                // cases are invalid.\n                return parentTag == null;\n            }\n\n            return true;\n          };\n          /**\n           * Returns whether\n           */\n\n\n          var findInvalidAncestorForTag = function findInvalidAncestorForTag(tag, ancestorInfo) {\n            switch (tag) {\n              case 'address':\n              case 'article':\n              case 'aside':\n              case 'blockquote':\n              case 'center':\n              case 'details':\n              case 'dialog':\n              case 'dir':\n              case 'div':\n              case 'dl':\n              case 'fieldset':\n              case 'figcaption':\n              case 'figure':\n              case 'footer':\n              case 'header':\n              case 'hgroup':\n              case 'main':\n              case 'menu':\n              case 'nav':\n              case 'ol':\n              case 'p':\n              case 'section':\n              case 'summary':\n              case 'ul':\n              case 'pre':\n              case 'listing':\n              case 'table':\n              case 'hr':\n              case 'xmp':\n              case 'h1':\n              case 'h2':\n              case 'h3':\n              case 'h4':\n              case 'h5':\n              case 'h6':\n                return ancestorInfo.pTagInButtonScope;\n\n              case 'form':\n                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\n              case 'li':\n                return ancestorInfo.listItemTagAutoclosing;\n\n              case 'dd':\n              case 'dt':\n                return ancestorInfo.dlItemTagAutoclosing;\n\n              case 'button':\n                return ancestorInfo.buttonTagInScope;\n\n              case 'a':\n                // Spec says something about storing a list of markers, but it sounds\n                // equivalent to this check.\n                return ancestorInfo.aTagInScope;\n\n              case 'nobr':\n                return ancestorInfo.nobrTagInScope;\n            }\n\n            return null;\n          };\n\n          var didWarn = {};\n\n          validateDOMNesting = function validateDOMNesting(childTag, childText, ancestorInfo) {\n            ancestorInfo = ancestorInfo || emptyAncestorInfo;\n            var parentInfo = ancestorInfo.current;\n            var parentTag = parentInfo && parentInfo.tag;\n\n            if (childText != null) {\n              !(childTag == null) ? warningWithoutStack$1(false, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;\n              childTag = '#text';\n            }\n\n            var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n            var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n            var invalidParentOrAncestor = invalidParent || invalidAncestor;\n\n            if (!invalidParentOrAncestor) {\n              return;\n            }\n\n            var ancestorTag = invalidParentOrAncestor.tag;\n            var addendum = getCurrentFiberStackInDev();\n            var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;\n\n            if (didWarn[warnKey]) {\n              return;\n            }\n\n            didWarn[warnKey] = true;\n            var tagDisplayName = childTag;\n            var whitespaceInfo = '';\n\n            if (childTag === '#text') {\n              if (/\\S/.test(childText)) {\n                tagDisplayName = 'Text nodes';\n              } else {\n                tagDisplayName = 'Whitespace text nodes';\n                whitespaceInfo = \" Make sure you don't have any extra whitespace between tags on \" + 'each line of your source code.';\n              }\n            } else {\n              tagDisplayName = '<' + childTag + '>';\n            }\n\n            if (invalidParent) {\n              var info = '';\n\n              if (ancestorTag === 'table' && childTag === 'tr') {\n                info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';\n              }\n\n              warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);\n            } else {\n              warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);\n            }\n          };\n        } // Renderers that don't support persistence\n        // can re-export everything from this module.\n\n        function shim() {\n          invariant(false, 'The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue.');\n        } // Persistence (when unsupported)\n\n\n        var supportsPersistence = false;\n        var cloneInstance = shim;\n        var createContainerChildSet = shim;\n        var appendChildToContainerChildSet = shim;\n        var finalizeContainerChildren = shim;\n        var replaceContainerChildren = shim;\n        var cloneHiddenInstance = shim;\n        var cloneUnhiddenInstance = shim;\n        var createHiddenTextInstance = shim;\n        var SUPPRESS_HYDRATION_WARNING = void 0;\n        {\n          SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';\n        }\n        var STYLE = 'style';\n        var eventsEnabled = null;\n        var selectionInformation = null;\n\n        function shouldAutoFocusHostComponent(type, props) {\n          switch (type) {\n            case 'button':\n            case 'input':\n            case 'select':\n            case 'textarea':\n              return !!props.autoFocus;\n          }\n\n          return false;\n        }\n\n        function getRootHostContext(rootContainerInstance) {\n          var type = void 0;\n          var namespace = void 0;\n          var nodeType = rootContainerInstance.nodeType;\n\n          switch (nodeType) {\n            case DOCUMENT_NODE:\n            case DOCUMENT_FRAGMENT_NODE:\n              {\n                type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';\n                var root = rootContainerInstance.documentElement;\n                namespace = root ? root.namespaceURI : getChildNamespace(null, '');\n                break;\n              }\n\n            default:\n              {\n                var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;\n                var ownNamespace = container.namespaceURI || null;\n                type = container.tagName;\n                namespace = getChildNamespace(ownNamespace, type);\n                break;\n              }\n          }\n\n          {\n            var validatedTag = type.toLowerCase();\n\n            var _ancestorInfo = updatedAncestorInfo(null, validatedTag);\n\n            return {\n              namespace: namespace,\n              ancestorInfo: _ancestorInfo\n            };\n          }\n          return namespace;\n        }\n\n        function getChildHostContext(parentHostContext, type, rootContainerInstance) {\n          {\n            var parentHostContextDev = parentHostContext;\n\n            var _namespace = getChildNamespace(parentHostContextDev.namespace, type);\n\n            var _ancestorInfo2 = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);\n\n            return {\n              namespace: _namespace,\n              ancestorInfo: _ancestorInfo2\n            };\n          }\n          var parentNamespace = parentHostContext;\n          return getChildNamespace(parentNamespace, type);\n        }\n\n        function getPublicInstance(instance) {\n          return instance;\n        }\n\n        function prepareForCommit(containerInfo) {\n          eventsEnabled = isEnabled();\n          selectionInformation = getSelectionInformation();\n          setEnabled(false);\n        }\n\n        function resetAfterCommit(containerInfo) {\n          restoreSelection(selectionInformation);\n          selectionInformation = null;\n          setEnabled(eventsEnabled);\n          eventsEnabled = null;\n        }\n\n        function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {\n          var parentNamespace = void 0;\n          {\n            // TODO: take namespace into account when validating.\n            var hostContextDev = hostContext;\n            validateDOMNesting(type, null, hostContextDev.ancestorInfo);\n\n            if (typeof props.children === 'string' || typeof props.children === 'number') {\n              var string = '' + props.children;\n              var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);\n              validateDOMNesting(null, string, ownAncestorInfo);\n            }\n\n            parentNamespace = hostContextDev.namespace;\n          }\n          var domElement = createElement(type, props, rootContainerInstance, parentNamespace);\n          precacheFiberNode(internalInstanceHandle, domElement);\n          updateFiberProps(domElement, props);\n          return domElement;\n        }\n\n        function appendInitialChild(parentInstance, child) {\n          parentInstance.appendChild(child);\n        }\n\n        function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {\n          setInitialProperties(domElement, type, props, rootContainerInstance);\n          return shouldAutoFocusHostComponent(type, props);\n        }\n\n        function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {\n          {\n            var hostContextDev = hostContext;\n\n            if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {\n              var string = '' + newProps.children;\n              var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);\n              validateDOMNesting(null, string, ownAncestorInfo);\n            }\n          }\n          return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);\n        }\n\n        function shouldSetTextContent(type, props) {\n          return type === 'textarea' || type === 'option' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;\n        }\n\n        function shouldDeprioritizeSubtree(type, props) {\n          return !!props.hidden;\n        }\n\n        function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {\n          {\n            var hostContextDev = hostContext;\n            validateDOMNesting(null, text, hostContextDev.ancestorInfo);\n          }\n          var textNode = createTextNode(text, rootContainerInstance);\n          precacheFiberNode(internalInstanceHandle, textNode);\n          return textNode;\n        }\n\n        var isPrimaryRenderer = true; // This initialization code may run even on server environments\n        // if a component just imports ReactDOM (e.g. for findDOMNode).\n        // Some environments might not have setTimeout or clearTimeout.\n\n        var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;\n        var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;\n        var noTimeout = -1; // -------------------\n        //     Mutation\n        // -------------------\n\n        var supportsMutation = true;\n\n        function commitMount(domElement, type, newProps, internalInstanceHandle) {\n          // Despite the naming that might imply otherwise, this method only\n          // fires if there is an `Update` effect scheduled during mounting.\n          // This happens if `finalizeInitialChildren` returns `true` (which it\n          // does to implement the `autoFocus` attribute on the client). But\n          // there are also other cases when this might happen (such as patching\n          // up text content during hydration mismatch). So we'll check this again.\n          if (shouldAutoFocusHostComponent(type, newProps)) {\n            domElement.focus();\n          }\n        }\n\n        function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {\n          // Update the props handle so that we know which props are the ones with\n          // with current event handlers.\n          updateFiberProps(domElement, newProps); // Apply the diff to the DOM node.\n\n          updateProperties(domElement, updatePayload, type, oldProps, newProps);\n        }\n\n        function resetTextContent(domElement) {\n          setTextContent(domElement, '');\n        }\n\n        function commitTextUpdate(textInstance, oldText, newText) {\n          textInstance.nodeValue = newText;\n        }\n\n        function appendChild(parentInstance, child) {\n          parentInstance.appendChild(child);\n        }\n\n        function appendChildToContainer(container, child) {\n          var parentNode = void 0;\n\n          if (container.nodeType === COMMENT_NODE) {\n            parentNode = container.parentNode;\n            parentNode.insertBefore(child, container);\n          } else {\n            parentNode = container;\n            parentNode.appendChild(child);\n          } // This container might be used for a portal.\n          // If something inside a portal is clicked, that click should bubble\n          // through the React tree. However, on Mobile Safari the click would\n          // never bubble through the *DOM* tree unless an ancestor with onclick\n          // event exists. So we wouldn't see it and dispatch it.\n          // This is why we ensure that non React root containers have inline onclick\n          // defined.\n          // https://github.com/facebook/react/issues/11918\n\n\n          var reactRootContainer = container._reactRootContainer;\n\n          if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {\n            // TODO: This cast may not be sound for SVG, MathML or custom elements.\n            trapClickOnNonInteractiveElement(parentNode);\n          }\n        }\n\n        function insertBefore(parentInstance, child, beforeChild) {\n          parentInstance.insertBefore(child, beforeChild);\n        }\n\n        function insertInContainerBefore(container, child, beforeChild) {\n          if (container.nodeType === COMMENT_NODE) {\n            container.parentNode.insertBefore(child, beforeChild);\n          } else {\n            container.insertBefore(child, beforeChild);\n          }\n        }\n\n        function removeChild(parentInstance, child) {\n          parentInstance.removeChild(child);\n        }\n\n        function removeChildFromContainer(container, child) {\n          if (container.nodeType === COMMENT_NODE) {\n            container.parentNode.removeChild(child);\n          } else {\n            container.removeChild(child);\n          }\n        }\n\n        function hideInstance(instance) {\n          // TODO: Does this work for all element types? What about MathML? Should we\n          // pass host context to this method?\n          instance = instance;\n          instance.style.display = 'none';\n        }\n\n        function hideTextInstance(textInstance) {\n          textInstance.nodeValue = '';\n        }\n\n        function unhideInstance(instance, props) {\n          instance = instance;\n          var styleProp = props[STYLE];\n          var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;\n          instance.style.display = dangerousStyleValue('display', display);\n        }\n\n        function unhideTextInstance(textInstance, text) {\n          textInstance.nodeValue = text;\n        } // -------------------\n        //     Hydration\n        // -------------------\n\n\n        var supportsHydration = true;\n\n        function canHydrateInstance(instance, type, props) {\n          if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {\n            return null;\n          } // This has now been refined to an element node.\n\n\n          return instance;\n        }\n\n        function canHydrateTextInstance(instance, text) {\n          if (text === '' || instance.nodeType !== TEXT_NODE) {\n            // Empty strings are not parsed by HTML so there won't be a correct match here.\n            return null;\n          } // This has now been refined to a text node.\n\n\n          return instance;\n        }\n\n        function getNextHydratableSibling(instance) {\n          var node = instance.nextSibling; // Skip non-hydratable nodes.\n\n          while (node && node.nodeType !== ELEMENT_NODE && node.nodeType !== TEXT_NODE) {\n            node = node.nextSibling;\n          }\n\n          return node;\n        }\n\n        function getFirstHydratableChild(parentInstance) {\n          var next = parentInstance.firstChild; // Skip non-hydratable nodes.\n\n          while (next && next.nodeType !== ELEMENT_NODE && next.nodeType !== TEXT_NODE) {\n            next = next.nextSibling;\n          }\n\n          return next;\n        }\n\n        function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {\n          precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events\n          // get attached.\n\n          updateFiberProps(instance, props);\n          var parentNamespace = void 0;\n          {\n            var hostContextDev = hostContext;\n            parentNamespace = hostContextDev.namespace;\n          }\n          return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);\n        }\n\n        function hydrateTextInstance(textInstance, text, internalInstanceHandle) {\n          precacheFiberNode(internalInstanceHandle, textInstance);\n          return diffHydratedText(textInstance, text);\n        }\n\n        function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {\n          {\n            warnForUnmatchedText(textInstance, text);\n          }\n        }\n\n        function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {\n          if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n            warnForUnmatchedText(textInstance, text);\n          }\n        }\n\n        function didNotHydrateContainerInstance(parentContainer, instance) {\n          {\n            if (instance.nodeType === ELEMENT_NODE) {\n              warnForDeletedHydratableElement(parentContainer, instance);\n            } else {\n              warnForDeletedHydratableText(parentContainer, instance);\n            }\n          }\n        }\n\n        function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {\n          if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n            if (instance.nodeType === ELEMENT_NODE) {\n              warnForDeletedHydratableElement(parentInstance, instance);\n            } else {\n              warnForDeletedHydratableText(parentInstance, instance);\n            }\n          }\n        }\n\n        function didNotFindHydratableContainerInstance(parentContainer, type, props) {\n          {\n            warnForInsertedHydratedElement(parentContainer, type, props);\n          }\n        }\n\n        function didNotFindHydratableContainerTextInstance(parentContainer, text) {\n          {\n            warnForInsertedHydratedText(parentContainer, text);\n          }\n        }\n\n        function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {\n          if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n            warnForInsertedHydratedElement(parentInstance, type, props);\n          }\n        }\n\n        function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {\n          if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n            warnForInsertedHydratedText(parentInstance, text);\n          }\n        } // Prefix measurements so that it's possible to filter them.\n        // Longer prefixes are hard to read in DevTools.\n\n\n        var reactEmoji = \"\\u269B\";\n        var warningEmoji = \"\\u26D4\";\n        var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function'; // Keep track of current fiber so that we know the path to unwind on pause.\n        // TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?\n\n        var currentFiber = null; // If we're in the middle of user code, which fiber and method is it?\n        // Reusing `currentFiber` would be confusing for this because user code fiber\n        // can change during commit phase too, but we don't need to unwind it (since\n        // lifecycles in the commit phase don't resemble a tree).\n\n        var currentPhase = null;\n        var currentPhaseFiber = null; // Did lifecycle hook schedule an update? This is often a performance problem,\n        // so we will keep track of it, and include it in the report.\n        // Track commits caused by cascading updates.\n\n        var isCommitting = false;\n        var hasScheduledUpdateInCurrentCommit = false;\n        var hasScheduledUpdateInCurrentPhase = false;\n        var commitCountInCurrentWorkLoop = 0;\n        var effectCountInCurrentCommit = 0;\n        var isWaitingForCallback = false; // During commits, we only show a measurement once per method name\n        // to avoid stretch the commit phase with measurement overhead.\n\n        var labelsInCurrentCommit = new Set();\n\n        var formatMarkName = function formatMarkName(markName) {\n          return reactEmoji + ' ' + markName;\n        };\n\n        var formatLabel = function formatLabel(label, warning) {\n          var prefix = warning ? warningEmoji + ' ' : reactEmoji + ' ';\n          var suffix = warning ? ' Warning: ' + warning : '';\n          return '' + prefix + label + suffix;\n        };\n\n        var beginMark = function beginMark(markName) {\n          performance.mark(formatMarkName(markName));\n        };\n\n        var clearMark = function clearMark(markName) {\n          performance.clearMarks(formatMarkName(markName));\n        };\n\n        var endMark = function endMark(label, markName, warning) {\n          var formattedMarkName = formatMarkName(markName);\n          var formattedLabel = formatLabel(label, warning);\n\n          try {\n            performance.measure(formattedLabel, formattedMarkName);\n          } catch (err) {} // If previous mark was missing for some reason, this will throw.\n          // This could only happen if React crashed in an unexpected place earlier.\n          // Don't pile on with more errors.\n          // Clear marks immediately to avoid growing buffer.\n\n\n          performance.clearMarks(formattedMarkName);\n          performance.clearMeasures(formattedLabel);\n        };\n\n        var getFiberMarkName = function getFiberMarkName(label, debugID) {\n          return label + ' (#' + debugID + ')';\n        };\n\n        var getFiberLabel = function getFiberLabel(componentName, isMounted, phase) {\n          if (phase === null) {\n            // These are composite component total time measurements.\n            return componentName + ' [' + (isMounted ? 'update' : 'mount') + ']';\n          } else {\n            // Composite component methods.\n            return componentName + '.' + phase;\n          }\n        };\n\n        var beginFiberMark = function beginFiberMark(fiber, phase) {\n          var componentName = getComponentName(fiber.type) || 'Unknown';\n          var debugID = fiber._debugID;\n          var isMounted = fiber.alternate !== null;\n          var label = getFiberLabel(componentName, isMounted, phase);\n\n          if (isCommitting && labelsInCurrentCommit.has(label)) {\n            // During the commit phase, we don't show duplicate labels because\n            // there is a fixed overhead for every measurement, and we don't\n            // want to stretch the commit phase beyond necessary.\n            return false;\n          }\n\n          labelsInCurrentCommit.add(label);\n          var markName = getFiberMarkName(label, debugID);\n          beginMark(markName);\n          return true;\n        };\n\n        var clearFiberMark = function clearFiberMark(fiber, phase) {\n          var componentName = getComponentName(fiber.type) || 'Unknown';\n          var debugID = fiber._debugID;\n          var isMounted = fiber.alternate !== null;\n          var label = getFiberLabel(componentName, isMounted, phase);\n          var markName = getFiberMarkName(label, debugID);\n          clearMark(markName);\n        };\n\n        var endFiberMark = function endFiberMark(fiber, phase, warning) {\n          var componentName = getComponentName(fiber.type) || 'Unknown';\n          var debugID = fiber._debugID;\n          var isMounted = fiber.alternate !== null;\n          var label = getFiberLabel(componentName, isMounted, phase);\n          var markName = getFiberMarkName(label, debugID);\n          endMark(label, markName, warning);\n        };\n\n        var shouldIgnoreFiber = function shouldIgnoreFiber(fiber) {\n          // Host components should be skipped in the timeline.\n          // We could check typeof fiber.type, but does this work with RN?\n          switch (fiber.tag) {\n            case HostRoot:\n            case HostComponent:\n            case HostText:\n            case HostPortal:\n            case Fragment:\n            case ContextProvider:\n            case ContextConsumer:\n            case Mode:\n              return true;\n\n            default:\n              return false;\n          }\n        };\n\n        var clearPendingPhaseMeasurement = function clearPendingPhaseMeasurement() {\n          if (currentPhase !== null && currentPhaseFiber !== null) {\n            clearFiberMark(currentPhaseFiber, currentPhase);\n          }\n\n          currentPhaseFiber = null;\n          currentPhase = null;\n          hasScheduledUpdateInCurrentPhase = false;\n        };\n\n        var pauseTimers = function pauseTimers() {\n          // Stops all currently active measurements so that they can be resumed\n          // if we continue in a later deferred loop from the same unit of work.\n          var fiber = currentFiber;\n\n          while (fiber) {\n            if (fiber._debugIsCurrentlyTiming) {\n              endFiberMark(fiber, null, null);\n            }\n\n            fiber = fiber.return;\n          }\n        };\n\n        var resumeTimersRecursively = function resumeTimersRecursively(fiber) {\n          if (fiber.return !== null) {\n            resumeTimersRecursively(fiber.return);\n          }\n\n          if (fiber._debugIsCurrentlyTiming) {\n            beginFiberMark(fiber, null);\n          }\n        };\n\n        var resumeTimers = function resumeTimers() {\n          // Resumes all measurements that were active during the last deferred loop.\n          if (currentFiber !== null) {\n            resumeTimersRecursively(currentFiber);\n          }\n        };\n\n        function recordEffect() {\n          if (enableUserTimingAPI) {\n            effectCountInCurrentCommit++;\n          }\n        }\n\n        function recordScheduleUpdate() {\n          if (enableUserTimingAPI) {\n            if (isCommitting) {\n              hasScheduledUpdateInCurrentCommit = true;\n            }\n\n            if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {\n              hasScheduledUpdateInCurrentPhase = true;\n            }\n          }\n        }\n\n        function startRequestCallbackTimer() {\n          if (enableUserTimingAPI) {\n            if (supportsUserTiming && !isWaitingForCallback) {\n              isWaitingForCallback = true;\n              beginMark('(Waiting for async callback...)');\n            }\n          }\n        }\n\n        function stopRequestCallbackTimer(didExpire, expirationTime) {\n          if (enableUserTimingAPI) {\n            if (supportsUserTiming) {\n              isWaitingForCallback = false;\n              var warning = didExpire ? 'React was blocked by main thread' : null;\n              endMark('(Waiting for async callback... will force flush in ' + expirationTime + ' ms)', '(Waiting for async callback...)', warning);\n            }\n          }\n        }\n\n        function startWorkTimer(fiber) {\n          if (enableUserTimingAPI) {\n            if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\n              return;\n            } // If we pause, this is the fiber to unwind from.\n\n\n            currentFiber = fiber;\n\n            if (!beginFiberMark(fiber, null)) {\n              return;\n            }\n\n            fiber._debugIsCurrentlyTiming = true;\n          }\n        }\n\n        function cancelWorkTimer(fiber) {\n          if (enableUserTimingAPI) {\n            if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\n              return;\n            } // Remember we shouldn't complete measurement for this fiber.\n            // Otherwise flamechart will be deep even for small updates.\n\n\n            fiber._debugIsCurrentlyTiming = false;\n            clearFiberMark(fiber, null);\n          }\n        }\n\n        function stopWorkTimer(fiber) {\n          if (enableUserTimingAPI) {\n            if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\n              return;\n            } // If we pause, its parent is the fiber to unwind from.\n\n\n            currentFiber = fiber.return;\n\n            if (!fiber._debugIsCurrentlyTiming) {\n              return;\n            }\n\n            fiber._debugIsCurrentlyTiming = false;\n            endFiberMark(fiber, null, null);\n          }\n        }\n\n        function stopFailedWorkTimer(fiber) {\n          if (enableUserTimingAPI) {\n            if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\n              return;\n            } // If we pause, its parent is the fiber to unwind from.\n\n\n            currentFiber = fiber.return;\n\n            if (!fiber._debugIsCurrentlyTiming) {\n              return;\n            }\n\n            fiber._debugIsCurrentlyTiming = false;\n            var warning = fiber.tag === SuspenseComponent ? 'Rendering was suspended' : 'An error was thrown inside this error boundary';\n            endFiberMark(fiber, null, warning);\n          }\n        }\n\n        function startPhaseTimer(fiber, phase) {\n          if (enableUserTimingAPI) {\n            if (!supportsUserTiming) {\n              return;\n            }\n\n            clearPendingPhaseMeasurement();\n\n            if (!beginFiberMark(fiber, phase)) {\n              return;\n            }\n\n            currentPhaseFiber = fiber;\n            currentPhase = phase;\n          }\n        }\n\n        function stopPhaseTimer() {\n          if (enableUserTimingAPI) {\n            if (!supportsUserTiming) {\n              return;\n            }\n\n            if (currentPhase !== null && currentPhaseFiber !== null) {\n              var warning = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;\n              endFiberMark(currentPhaseFiber, currentPhase, warning);\n            }\n\n            currentPhase = null;\n            currentPhaseFiber = null;\n          }\n        }\n\n        function startWorkLoopTimer(nextUnitOfWork) {\n          if (enableUserTimingAPI) {\n            currentFiber = nextUnitOfWork;\n\n            if (!supportsUserTiming) {\n              return;\n            }\n\n            commitCountInCurrentWorkLoop = 0; // This is top level call.\n            // Any other measurements are performed within.\n\n            beginMark('(React Tree Reconciliation)'); // Resume any measurements that were in progress during the last loop.\n\n            resumeTimers();\n          }\n        }\n\n        function stopWorkLoopTimer(interruptedBy, didCompleteRoot) {\n          if (enableUserTimingAPI) {\n            if (!supportsUserTiming) {\n              return;\n            }\n\n            var warning = null;\n\n            if (interruptedBy !== null) {\n              if (interruptedBy.tag === HostRoot) {\n                warning = 'A top-level update interrupted the previous render';\n              } else {\n                var componentName = getComponentName(interruptedBy.type) || 'Unknown';\n                warning = 'An update to ' + componentName + ' interrupted the previous render';\n              }\n            } else if (commitCountInCurrentWorkLoop > 1) {\n              warning = 'There were cascading updates';\n            }\n\n            commitCountInCurrentWorkLoop = 0;\n            var label = didCompleteRoot ? '(React Tree Reconciliation: Completed Root)' : '(React Tree Reconciliation: Yielded)'; // Pause any measurements until the next loop.\n\n            pauseTimers();\n            endMark(label, '(React Tree Reconciliation)', warning);\n          }\n        }\n\n        function startCommitTimer() {\n          if (enableUserTimingAPI) {\n            if (!supportsUserTiming) {\n              return;\n            }\n\n            isCommitting = true;\n            hasScheduledUpdateInCurrentCommit = false;\n            labelsInCurrentCommit.clear();\n            beginMark('(Committing Changes)');\n          }\n        }\n\n        function stopCommitTimer() {\n          if (enableUserTimingAPI) {\n            if (!supportsUserTiming) {\n              return;\n            }\n\n            var warning = null;\n\n            if (hasScheduledUpdateInCurrentCommit) {\n              warning = 'Lifecycle hook scheduled a cascading update';\n            } else if (commitCountInCurrentWorkLoop > 0) {\n              warning = 'Caused by a cascading update in earlier commit';\n            }\n\n            hasScheduledUpdateInCurrentCommit = false;\n            commitCountInCurrentWorkLoop++;\n            isCommitting = false;\n            labelsInCurrentCommit.clear();\n            endMark('(Committing Changes)', '(Committing Changes)', warning);\n          }\n        }\n\n        function startCommitSnapshotEffectsTimer() {\n          if (enableUserTimingAPI) {\n            if (!supportsUserTiming) {\n              return;\n            }\n\n            effectCountInCurrentCommit = 0;\n            beginMark('(Committing Snapshot Effects)');\n          }\n        }\n\n        function stopCommitSnapshotEffectsTimer() {\n          if (enableUserTimingAPI) {\n            if (!supportsUserTiming) {\n              return;\n            }\n\n            var count = effectCountInCurrentCommit;\n            effectCountInCurrentCommit = 0;\n            endMark('(Committing Snapshot Effects: ' + count + ' Total)', '(Committing Snapshot Effects)', null);\n          }\n        }\n\n        function startCommitHostEffectsTimer() {\n          if (enableUserTimingAPI) {\n            if (!supportsUserTiming) {\n              return;\n            }\n\n            effectCountInCurrentCommit = 0;\n            beginMark('(Committing Host Effects)');\n          }\n        }\n\n        function stopCommitHostEffectsTimer() {\n          if (enableUserTimingAPI) {\n            if (!supportsUserTiming) {\n              return;\n            }\n\n            var count = effectCountInCurrentCommit;\n            effectCountInCurrentCommit = 0;\n            endMark('(Committing Host Effects: ' + count + ' Total)', '(Committing Host Effects)', null);\n          }\n        }\n\n        function startCommitLifeCyclesTimer() {\n          if (enableUserTimingAPI) {\n            if (!supportsUserTiming) {\n              return;\n            }\n\n            effectCountInCurrentCommit = 0;\n            beginMark('(Calling Lifecycle Methods)');\n          }\n        }\n\n        function stopCommitLifeCyclesTimer() {\n          if (enableUserTimingAPI) {\n            if (!supportsUserTiming) {\n              return;\n            }\n\n            var count = effectCountInCurrentCommit;\n            effectCountInCurrentCommit = 0;\n            endMark('(Calling Lifecycle Methods: ' + count + ' Total)', '(Calling Lifecycle Methods)', null);\n          }\n        }\n\n        var valueStack = [];\n        var fiberStack = void 0;\n        {\n          fiberStack = [];\n        }\n        var index = -1;\n\n        function createCursor(defaultValue) {\n          return {\n            current: defaultValue\n          };\n        }\n\n        function pop(cursor, fiber) {\n          if (index < 0) {\n            {\n              warningWithoutStack$1(false, 'Unexpected pop.');\n            }\n            return;\n          }\n\n          {\n            if (fiber !== fiberStack[index]) {\n              warningWithoutStack$1(false, 'Unexpected Fiber popped.');\n            }\n          }\n          cursor.current = valueStack[index];\n          valueStack[index] = null;\n          {\n            fiberStack[index] = null;\n          }\n          index--;\n        }\n\n        function push(cursor, value, fiber) {\n          index++;\n          valueStack[index] = cursor.current;\n          {\n            fiberStack[index] = fiber;\n          }\n          cursor.current = value;\n        }\n\n        function checkThatStackIsEmpty() {\n          {\n            if (index !== -1) {\n              warningWithoutStack$1(false, 'Expected an empty stack. Something was not reset properly.');\n            }\n          }\n        }\n\n        function resetStackAfterFatalErrorInDev() {\n          {\n            index = -1;\n            valueStack.length = 0;\n            fiberStack.length = 0;\n          }\n        }\n\n        var warnedAboutMissingGetChildContext = void 0;\n        {\n          warnedAboutMissingGetChildContext = {};\n        }\n        var emptyContextObject = {};\n        {\n          Object.freeze(emptyContextObject);\n        } // A cursor to the current merged context object on the stack.\n\n        var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.\n\n        var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.\n        // We use this to get access to the parent context after we have already\n        // pushed the next context provider, and now need to merge their contexts.\n\n        var previousContext = emptyContextObject;\n\n        function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {\n          if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n            // If the fiber is a context provider itself, when we read its context\n            // we may have already pushed its own child context on the stack. A context\n            // provider should not \"see\" its own child context. Therefore we read the\n            // previous (parent) context instead for a context provider.\n            return previousContext;\n          }\n\n          return contextStackCursor.current;\n        }\n\n        function cacheContext(workInProgress, unmaskedContext, maskedContext) {\n          var instance = workInProgress.stateNode;\n          instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n          instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n        }\n\n        function getMaskedContext(workInProgress, unmaskedContext) {\n          var type = workInProgress.type;\n          var contextTypes = type.contextTypes;\n\n          if (!contextTypes) {\n            return emptyContextObject;\n          } // Avoid recreating masked context unless unmasked context has changed.\n          // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n          // This may trigger infinite loops if componentWillReceiveProps calls setState.\n\n\n          var instance = workInProgress.stateNode;\n\n          if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {\n            return instance.__reactInternalMemoizedMaskedChildContext;\n          }\n\n          var context = {};\n\n          for (var key in contextTypes) {\n            context[key] = unmaskedContext[key];\n          }\n\n          {\n            var name = getComponentName(type) || 'Unknown';\n            checkPropTypes(contextTypes, context, 'context', name, getCurrentFiberStackInDev);\n          } // Cache unmasked context so we can avoid recreating masked context unless necessary.\n          // Context is created before the class component is instantiated so check for instance.\n\n          if (instance) {\n            cacheContext(workInProgress, unmaskedContext, context);\n          }\n\n          return context;\n        }\n\n        function hasContextChanged() {\n          return didPerformWorkStackCursor.current;\n        }\n\n        function isContextProvider(type) {\n          var childContextTypes = type.childContextTypes;\n          return childContextTypes !== null && childContextTypes !== undefined;\n        }\n\n        function popContext(fiber) {\n          pop(didPerformWorkStackCursor, fiber);\n          pop(contextStackCursor, fiber);\n        }\n\n        function popTopLevelContextObject(fiber) {\n          pop(didPerformWorkStackCursor, fiber);\n          pop(contextStackCursor, fiber);\n        }\n\n        function pushTopLevelContextObject(fiber, context, didChange) {\n          !(contextStackCursor.current === emptyContextObject) ? invariant(false, 'Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n          push(contextStackCursor, context, fiber);\n          push(didPerformWorkStackCursor, didChange, fiber);\n        }\n\n        function processChildContext(fiber, type, parentContext) {\n          var instance = fiber.stateNode;\n          var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n          // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n\n          if (typeof instance.getChildContext !== 'function') {\n            {\n              var componentName = getComponentName(type) || 'Unknown';\n\n              if (!warnedAboutMissingGetChildContext[componentName]) {\n                warnedAboutMissingGetChildContext[componentName] = true;\n                warningWithoutStack$1(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);\n              }\n            }\n            return parentContext;\n          }\n\n          var childContext = void 0;\n          {\n            setCurrentPhase('getChildContext');\n          }\n          startPhaseTimer(fiber, 'getChildContext');\n          childContext = instance.getChildContext();\n          stopPhaseTimer();\n          {\n            setCurrentPhase(null);\n          }\n\n          for (var contextKey in childContext) {\n            !(contextKey in childContextTypes) ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', getComponentName(type) || 'Unknown', contextKey) : void 0;\n          }\n\n          {\n            var name = getComponentName(type) || 'Unknown';\n            checkPropTypes(childContextTypes, childContext, 'child context', name, // In practice, there is one case in which we won't get a stack. It's when\n            // somebody calls unstable_renderSubtreeIntoContainer() and we process\n            // context from the parent component instance. The stack will be missing\n            // because it's outside of the reconciliation, and so the pointer has not\n            // been set. This is rare and doesn't matter. We'll also remove that API.\n            getCurrentFiberStackInDev);\n          }\n          return _assign({}, parentContext, childContext);\n        }\n\n        function pushContextProvider(workInProgress) {\n          var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.\n          // If the instance does not exist yet, we will push null at first,\n          // and replace it on the stack later when invalidating the context.\n\n          var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.\n          // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\n\n          previousContext = contextStackCursor.current;\n          push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n          push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);\n          return true;\n        }\n\n        function invalidateContextProvider(workInProgress, type, didChange) {\n          var instance = workInProgress.stateNode;\n          !instance ? invariant(false, 'Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n\n          if (didChange) {\n            // Merge parent and own context.\n            // Skip this if we're not updating due to sCU.\n            // This avoids unnecessarily recomputing memoized values.\n            var mergedContext = processChildContext(workInProgress, type, previousContext);\n            instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.\n            // It is important to unwind the context in the reverse order.\n\n            pop(didPerformWorkStackCursor, workInProgress);\n            pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.\n\n            push(contextStackCursor, mergedContext, workInProgress);\n            push(didPerformWorkStackCursor, didChange, workInProgress);\n          } else {\n            pop(didPerformWorkStackCursor, workInProgress);\n            push(didPerformWorkStackCursor, didChange, workInProgress);\n          }\n        }\n\n        function findCurrentUnmaskedContext(fiber) {\n          // Currently this is only used with renderSubtreeIntoContainer; not sure if it\n          // makes sense elsewhere\n          !(isFiberMounted(fiber) && fiber.tag === ClassComponent) ? invariant(false, 'Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n          var node = fiber;\n\n          do {\n            switch (node.tag) {\n              case HostRoot:\n                return node.stateNode.context;\n\n              case ClassComponent:\n                {\n                  var Component = node.type;\n\n                  if (isContextProvider(Component)) {\n                    return node.stateNode.__reactInternalMemoizedMergedChildContext;\n                  }\n\n                  break;\n                }\n            }\n\n            node = node.return;\n          } while (node !== null);\n\n          invariant(false, 'Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.');\n        }\n\n        var onCommitFiberRoot = null;\n        var onCommitFiberUnmount = null;\n        var hasLoggedError = false;\n\n        function catchErrors(fn) {\n          return function (arg) {\n            try {\n              return fn(arg);\n            } catch (err) {\n              if (true && !hasLoggedError) {\n                hasLoggedError = true;\n                warningWithoutStack$1(false, 'React DevTools encountered an error: %s', err);\n              }\n            }\n          };\n        }\n\n        var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\n\n        function injectInternals(internals) {\n          if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n            // No DevTools\n            return false;\n          }\n\n          var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n          if (hook.isDisabled) {\n            // This isn't a real property on the hook, but it can be set to opt out\n            // of DevTools integration and associated warnings and logs.\n            // https://github.com/facebook/react/issues/3877\n            return true;\n          }\n\n          if (!hook.supportsFiber) {\n            {\n              warningWithoutStack$1(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');\n            } // DevTools exists, even though it doesn't support Fiber.\n\n            return true;\n          }\n\n          try {\n            var rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.\n\n            onCommitFiberRoot = catchErrors(function (root) {\n              return hook.onCommitFiberRoot(rendererID, root);\n            });\n            onCommitFiberUnmount = catchErrors(function (fiber) {\n              return hook.onCommitFiberUnmount(rendererID, fiber);\n            });\n          } catch (err) {\n            // Catch all errors because it is unsafe to throw during initialization.\n            {\n              warningWithoutStack$1(false, 'React DevTools encountered an error: %s.', err);\n            }\n          } // DevTools exists\n\n\n          return true;\n        }\n\n        function onCommitRoot(root) {\n          if (typeof onCommitFiberRoot === 'function') {\n            onCommitFiberRoot(root);\n          }\n        }\n\n        function onCommitUnmount(fiber) {\n          if (typeof onCommitFiberUnmount === 'function') {\n            onCommitFiberUnmount(fiber);\n          }\n        } // Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n        // Math.pow(2, 30) - 1\n        // 0b111111111111111111111111111111\n\n\n        var maxSigned31BitInt = 1073741823;\n        var NoWork = 0;\n        var Never = 1;\n        var Sync = maxSigned31BitInt;\n        var UNIT_SIZE = 10;\n        var MAGIC_NUMBER_OFFSET = maxSigned31BitInt - 1; // 1 unit of expiration time represents 10ms.\n\n        function msToExpirationTime(ms) {\n          // Always add an offset so that we don't clash with the magic number for NoWork.\n          return MAGIC_NUMBER_OFFSET - (ms / UNIT_SIZE | 0);\n        }\n\n        function expirationTimeToMs(expirationTime) {\n          return (MAGIC_NUMBER_OFFSET - expirationTime) * UNIT_SIZE;\n        }\n\n        function ceiling(num, precision) {\n          return ((num / precision | 0) + 1) * precision;\n        }\n\n        function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {\n          return MAGIC_NUMBER_OFFSET - ceiling(MAGIC_NUMBER_OFFSET - currentTime + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);\n        }\n\n        var LOW_PRIORITY_EXPIRATION = 5000;\n        var LOW_PRIORITY_BATCH_SIZE = 250;\n\n        function computeAsyncExpiration(currentTime) {\n          return computeExpirationBucket(currentTime, LOW_PRIORITY_EXPIRATION, LOW_PRIORITY_BATCH_SIZE);\n        } // We intentionally set a higher expiration time for interactive updates in\n        // dev than in production.\n        //\n        // If the main thread is being blocked so long that you hit the expiration,\n        // it's a problem that could be solved with better scheduling.\n        //\n        // People will be more likely to notice this and fix it with the long\n        // expiration time in development.\n        //\n        // In production we opt for better UX at the risk of masking scheduling\n        // problems, by expiring fast.\n\n\n        var HIGH_PRIORITY_EXPIRATION = 500;\n        var HIGH_PRIORITY_BATCH_SIZE = 100;\n\n        function computeInteractiveExpiration(currentTime) {\n          return computeExpirationBucket(currentTime, HIGH_PRIORITY_EXPIRATION, HIGH_PRIORITY_BATCH_SIZE);\n        }\n\n        var NoContext = 0;\n        var ConcurrentMode = 1;\n        var StrictMode = 2;\n        var ProfileMode = 4;\n        var hasBadMapPolyfill = void 0;\n        {\n          hasBadMapPolyfill = false;\n\n          try {\n            var nonExtensibleObject = Object.preventExtensions({});\n            var testMap = new Map([[nonExtensibleObject, null]]);\n            var testSet = new Set([nonExtensibleObject]); // This is necessary for Rollup to not consider these unused.\n            // https://github.com/rollup/rollup/issues/1771\n            // TODO: we can remove these if Rollup fixes the bug.\n\n            testMap.set(0, 0);\n            testSet.add(0);\n          } catch (e) {\n            // TODO: Consider warning about bad polyfills\n            hasBadMapPolyfill = true;\n          }\n        } // A Fiber is work on a Component that needs to be done or was done. There can\n        // be more than one per component.\n\n        var debugCounter = void 0;\n        {\n          debugCounter = 1;\n        }\n\n        function FiberNode(tag, pendingProps, key, mode) {\n          // Instance\n          this.tag = tag;\n          this.key = key;\n          this.elementType = null;\n          this.type = null;\n          this.stateNode = null; // Fiber\n\n          this.return = null;\n          this.child = null;\n          this.sibling = null;\n          this.index = 0;\n          this.ref = null;\n          this.pendingProps = pendingProps;\n          this.memoizedProps = null;\n          this.updateQueue = null;\n          this.memoizedState = null;\n          this.firstContextDependency = null;\n          this.mode = mode; // Effects\n\n          this.effectTag = NoEffect;\n          this.nextEffect = null;\n          this.firstEffect = null;\n          this.lastEffect = null;\n          this.expirationTime = NoWork;\n          this.childExpirationTime = NoWork;\n          this.alternate = null;\n\n          if (enableProfilerTimer) {\n            // Note: The following is done to avoid a v8 performance cliff.\n            //\n            // Initializing the fields below to smis and later updating them with\n            // double values will cause Fibers to end up having separate shapes.\n            // This behavior/bug has something to do with Object.preventExtension().\n            // Fortunately this only impacts DEV builds.\n            // Unfortunately it makes React unusably slow for some applications.\n            // To work around this, initialize the fields below with doubles.\n            //\n            // Learn more about this here:\n            // https://github.com/facebook/react/issues/14365\n            // https://bugs.chromium.org/p/v8/issues/detail?id=8538\n            this.actualDuration = Number.NaN;\n            this.actualStartTime = Number.NaN;\n            this.selfBaseDuration = Number.NaN;\n            this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.\n            // This won't trigger the performance cliff mentioned above,\n            // and it simplifies other profiler code (including DevTools).\n\n            this.actualDuration = 0;\n            this.actualStartTime = -1;\n            this.selfBaseDuration = 0;\n            this.treeBaseDuration = 0;\n          }\n\n          {\n            this._debugID = debugCounter++;\n            this._debugSource = null;\n            this._debugOwner = null;\n            this._debugIsCurrentlyTiming = false;\n\n            if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {\n              Object.preventExtensions(this);\n            }\n          }\n        } // This is a constructor function, rather than a POJO constructor, still\n        // please ensure we do the following:\n        // 1) Nobody should add any instance methods on this. Instance methods can be\n        //    more difficult to predict when they get optimized and they are almost\n        //    never inlined properly in static compilers.\n        // 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n        //    always know when it is a fiber.\n        // 3) We might want to experiment with using numeric keys since they are easier\n        //    to optimize in a non-JIT environment.\n        // 4) We can easily go from a constructor to a createFiber object literal if that\n        //    is faster.\n        // 5) It should be easy to port this to a C struct and keep a C implementation\n        //    compatible.\n\n\n        var createFiber = function createFiber(tag, pendingProps, key, mode) {\n          // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\n          return new FiberNode(tag, pendingProps, key, mode);\n        };\n\n        function shouldConstruct(Component) {\n          var prototype = Component.prototype;\n          return !!(prototype && prototype.isReactComponent);\n        }\n\n        function isSimpleFunctionComponent(type) {\n          return typeof type === 'function' && !shouldConstruct(type) && type.defaultProps === undefined;\n        }\n\n        function resolveLazyComponentTag(Component) {\n          if (typeof Component === 'function') {\n            return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n          } else if (Component !== undefined && Component !== null) {\n            var $$typeof = Component.$$typeof;\n\n            if ($$typeof === REACT_FORWARD_REF_TYPE) {\n              return ForwardRef;\n            }\n\n            if ($$typeof === REACT_MEMO_TYPE) {\n              return MemoComponent;\n            }\n          }\n\n          return IndeterminateComponent;\n        } // This is used to create an alternate fiber to do work on.\n\n\n        function createWorkInProgress(current, pendingProps, expirationTime) {\n          var workInProgress = current.alternate;\n\n          if (workInProgress === null) {\n            // We use a double buffering pooling technique because we know that we'll\n            // only ever need at most two versions of a tree. We pool the \"other\" unused\n            // node that we're free to reuse. This is lazily created to avoid allocating\n            // extra objects for things that are never updated. It also allow us to\n            // reclaim the extra memory if needed.\n            workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);\n            workInProgress.elementType = current.elementType;\n            workInProgress.type = current.type;\n            workInProgress.stateNode = current.stateNode;\n            {\n              // DEV-only fields\n              workInProgress._debugID = current._debugID;\n              workInProgress._debugSource = current._debugSource;\n              workInProgress._debugOwner = current._debugOwner;\n            }\n            workInProgress.alternate = current;\n            current.alternate = workInProgress;\n          } else {\n            workInProgress.pendingProps = pendingProps; // We already have an alternate.\n            // Reset the effect tag.\n\n            workInProgress.effectTag = NoEffect; // The effect list is no longer valid.\n\n            workInProgress.nextEffect = null;\n            workInProgress.firstEffect = null;\n            workInProgress.lastEffect = null;\n\n            if (enableProfilerTimer) {\n              // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n              // This prevents time from endlessly accumulating in new commits.\n              // This has the downside of resetting values for different priority renders,\n              // But works for yielding (the common case) and should support resuming.\n              workInProgress.actualDuration = 0;\n              workInProgress.actualStartTime = -1;\n            }\n          }\n\n          workInProgress.childExpirationTime = current.childExpirationTime;\n          workInProgress.expirationTime = current.expirationTime;\n          workInProgress.child = current.child;\n          workInProgress.memoizedProps = current.memoizedProps;\n          workInProgress.memoizedState = current.memoizedState;\n          workInProgress.updateQueue = current.updateQueue;\n          workInProgress.firstContextDependency = current.firstContextDependency; // These will be overridden during the parent's reconciliation\n\n          workInProgress.sibling = current.sibling;\n          workInProgress.index = current.index;\n          workInProgress.ref = current.ref;\n\n          if (enableProfilerTimer) {\n            workInProgress.selfBaseDuration = current.selfBaseDuration;\n            workInProgress.treeBaseDuration = current.treeBaseDuration;\n          }\n\n          return workInProgress;\n        }\n\n        function createHostRootFiber(isConcurrent) {\n          var mode = isConcurrent ? ConcurrentMode | StrictMode : NoContext;\n\n          if (enableProfilerTimer && isDevToolsPresent) {\n            // Always collect profile timings when DevTools are present.\n            // This enables DevTools to start capturing timing at any point–\n            // Without some nodes in the tree having empty base times.\n            mode |= ProfileMode;\n          }\n\n          return createFiber(HostRoot, null, null, mode);\n        }\n\n        function createFiberFromTypeAndProps(type, // React$ElementType\n        key, pendingProps, owner, mode, expirationTime) {\n          var fiber = void 0;\n          var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\n\n          var resolvedType = type;\n\n          if (typeof type === 'function') {\n            if (shouldConstruct(type)) {\n              fiberTag = ClassComponent;\n            }\n          } else if (typeof type === 'string') {\n            fiberTag = HostComponent;\n          } else {\n            getTag: switch (type) {\n              case REACT_FRAGMENT_TYPE:\n                return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);\n\n              case REACT_CONCURRENT_MODE_TYPE:\n                return createFiberFromMode(pendingProps, mode | ConcurrentMode | StrictMode, expirationTime, key);\n\n              case REACT_STRICT_MODE_TYPE:\n                return createFiberFromMode(pendingProps, mode | StrictMode, expirationTime, key);\n\n              case REACT_PROFILER_TYPE:\n                return createFiberFromProfiler(pendingProps, mode, expirationTime, key);\n\n              case REACT_SUSPENSE_TYPE:\n                return createFiberFromSuspense(pendingProps, mode, expirationTime, key);\n\n              default:\n                {\n                  if (typeof type === 'object' && type !== null) {\n                    switch (type.$$typeof) {\n                      case REACT_PROVIDER_TYPE:\n                        fiberTag = ContextProvider;\n                        break getTag;\n\n                      case REACT_CONTEXT_TYPE:\n                        // This is a consumer\n                        fiberTag = ContextConsumer;\n                        break getTag;\n\n                      case REACT_FORWARD_REF_TYPE:\n                        fiberTag = ForwardRef;\n                        break getTag;\n\n                      case REACT_MEMO_TYPE:\n                        fiberTag = MemoComponent;\n                        break getTag;\n\n                      case REACT_LAZY_TYPE:\n                        fiberTag = LazyComponent;\n                        resolvedType = null;\n                        break getTag;\n                    }\n                  }\n\n                  var info = '';\n                  {\n                    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n                      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and \" + 'named imports.';\n                    }\n\n                    var ownerName = owner ? getComponentName(owner.type) : null;\n\n                    if (ownerName) {\n                      info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n                    }\n                  }\n                  invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info);\n                }\n            }\n          }\n\n          fiber = createFiber(fiberTag, pendingProps, key, mode);\n          fiber.elementType = type;\n          fiber.type = resolvedType;\n          fiber.expirationTime = expirationTime;\n          return fiber;\n        }\n\n        function createFiberFromElement(element, mode, expirationTime) {\n          var owner = null;\n          {\n            owner = element._owner;\n          }\n          var type = element.type;\n          var key = element.key;\n          var pendingProps = element.props;\n          var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime);\n          {\n            fiber._debugSource = element._source;\n            fiber._debugOwner = element._owner;\n          }\n          return fiber;\n        }\n\n        function createFiberFromFragment(elements, mode, expirationTime, key) {\n          var fiber = createFiber(Fragment, elements, key, mode);\n          fiber.expirationTime = expirationTime;\n          return fiber;\n        }\n\n        function createFiberFromProfiler(pendingProps, mode, expirationTime, key) {\n          {\n            if (typeof pendingProps.id !== 'string' || typeof pendingProps.onRender !== 'function') {\n              warningWithoutStack$1(false, 'Profiler must specify an \"id\" string and \"onRender\" function as props');\n            }\n          }\n          var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode); // TODO: The Profiler fiber shouldn't have a type. It has a tag.\n\n          fiber.elementType = REACT_PROFILER_TYPE;\n          fiber.type = REACT_PROFILER_TYPE;\n          fiber.expirationTime = expirationTime;\n          return fiber;\n        }\n\n        function createFiberFromMode(pendingProps, mode, expirationTime, key) {\n          var fiber = createFiber(Mode, pendingProps, key, mode); // TODO: The Mode fiber shouldn't have a type. It has a tag.\n\n          var type = (mode & ConcurrentMode) === NoContext ? REACT_STRICT_MODE_TYPE : REACT_CONCURRENT_MODE_TYPE;\n          fiber.elementType = type;\n          fiber.type = type;\n          fiber.expirationTime = expirationTime;\n          return fiber;\n        }\n\n        function createFiberFromSuspense(pendingProps, mode, expirationTime, key) {\n          var fiber = createFiber(SuspenseComponent, pendingProps, key, mode); // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.\n\n          var type = REACT_SUSPENSE_TYPE;\n          fiber.elementType = type;\n          fiber.type = type;\n          fiber.expirationTime = expirationTime;\n          return fiber;\n        }\n\n        function createFiberFromText(content, mode, expirationTime) {\n          var fiber = createFiber(HostText, content, null, mode);\n          fiber.expirationTime = expirationTime;\n          return fiber;\n        }\n\n        function createFiberFromHostInstanceForDeletion() {\n          var fiber = createFiber(HostComponent, null, null, NoContext); // TODO: These should not need a type.\n\n          fiber.elementType = 'DELETED';\n          fiber.type = 'DELETED';\n          return fiber;\n        }\n\n        function createFiberFromPortal(portal, mode, expirationTime) {\n          var pendingProps = portal.children !== null ? portal.children : [];\n          var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n          fiber.expirationTime = expirationTime;\n          fiber.stateNode = {\n            containerInfo: portal.containerInfo,\n            pendingChildren: null,\n            // Used by persistent updates\n            implementation: portal.implementation\n          };\n          return fiber;\n        } // Used for stashing WIP properties to replay failed work in DEV.\n\n\n        function assignFiberPropertiesInDEV(target, source) {\n          if (target === null) {\n            // This Fiber's initial properties will always be overwritten.\n            // We only use a Fiber to ensure the same hidden class so DEV isn't slow.\n            target = createFiber(IndeterminateComponent, null, null, NoContext);\n          } // This is intentionally written as a list of all properties.\n          // We tried to use Object.assign() instead but this is called in\n          // the hottest path, and Object.assign() was too slow:\n          // https://github.com/facebook/react/issues/12502\n          // This code is DEV-only so size is not a concern.\n\n\n          target.tag = source.tag;\n          target.key = source.key;\n          target.elementType = source.elementType;\n          target.type = source.type;\n          target.stateNode = source.stateNode;\n          target.return = source.return;\n          target.child = source.child;\n          target.sibling = source.sibling;\n          target.index = source.index;\n          target.ref = source.ref;\n          target.pendingProps = source.pendingProps;\n          target.memoizedProps = source.memoizedProps;\n          target.updateQueue = source.updateQueue;\n          target.memoizedState = source.memoizedState;\n          target.firstContextDependency = source.firstContextDependency;\n          target.mode = source.mode;\n          target.effectTag = source.effectTag;\n          target.nextEffect = source.nextEffect;\n          target.firstEffect = source.firstEffect;\n          target.lastEffect = source.lastEffect;\n          target.expirationTime = source.expirationTime;\n          target.childExpirationTime = source.childExpirationTime;\n          target.alternate = source.alternate;\n\n          if (enableProfilerTimer) {\n            target.actualDuration = source.actualDuration;\n            target.actualStartTime = source.actualStartTime;\n            target.selfBaseDuration = source.selfBaseDuration;\n            target.treeBaseDuration = source.treeBaseDuration;\n          }\n\n          target._debugID = source._debugID;\n          target._debugSource = source._debugSource;\n          target._debugOwner = source._debugOwner;\n          target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;\n          return target;\n        } // TODO: This should be lifted into the renderer.\n        // The following attributes are only used by interaction tracing builds.\n        // They enable interactions to be associated with their async work,\n        // And expose interaction metadata to the React DevTools Profiler plugin.\n        // Note that these attributes are only defined when the enableSchedulerTracing flag is enabled.\n        // Exported FiberRoot type includes all properties,\n        // To avoid requiring potentially error-prone :any casts throughout the project.\n        // Profiling properties are only safe to access in profiling builds (when enableSchedulerTracing is true).\n        // The types are defined separately within this file to ensure they stay in sync.\n        // (We don't have to use an inline :any cast when enableSchedulerTracing is disabled.)\n\n\n        function createFiberRoot(containerInfo, isConcurrent, hydrate) {\n          // Cyclic construction. This cheats the type system right now because\n          // stateNode is any.\n          var uninitializedFiber = createHostRootFiber(isConcurrent);\n          var root = void 0;\n\n          if (enableSchedulerTracing) {\n            root = {\n              current: uninitializedFiber,\n              containerInfo: containerInfo,\n              pendingChildren: null,\n              earliestPendingTime: NoWork,\n              latestPendingTime: NoWork,\n              earliestSuspendedTime: NoWork,\n              latestSuspendedTime: NoWork,\n              latestPingedTime: NoWork,\n              pingCache: null,\n              didError: false,\n              pendingCommitExpirationTime: NoWork,\n              finishedWork: null,\n              timeoutHandle: noTimeout,\n              context: null,\n              pendingContext: null,\n              hydrate: hydrate,\n              nextExpirationTimeToWorkOn: NoWork,\n              expirationTime: NoWork,\n              firstBatch: null,\n              nextScheduledRoot: null,\n              interactionThreadID: tracing.unstable_getThreadID(),\n              memoizedInteractions: new Set(),\n              pendingInteractionMap: new Map()\n            };\n          } else {\n            root = {\n              current: uninitializedFiber,\n              containerInfo: containerInfo,\n              pendingChildren: null,\n              pingCache: null,\n              earliestPendingTime: NoWork,\n              latestPendingTime: NoWork,\n              earliestSuspendedTime: NoWork,\n              latestSuspendedTime: NoWork,\n              latestPingedTime: NoWork,\n              didError: false,\n              pendingCommitExpirationTime: NoWork,\n              finishedWork: null,\n              timeoutHandle: noTimeout,\n              context: null,\n              pendingContext: null,\n              hydrate: hydrate,\n              nextExpirationTimeToWorkOn: NoWork,\n              expirationTime: NoWork,\n              firstBatch: null,\n              nextScheduledRoot: null\n            };\n          }\n\n          uninitializedFiber.stateNode = root; // The reason for the way the Flow types are structured in this file,\n          // Is to avoid needing :any casts everywhere interaction tracing fields are used.\n          // Unfortunately that requires an :any cast for non-interaction tracing capable builds.\n          // $FlowFixMe Remove this :any cast and replace it with something better.\n\n          return root;\n        }\n        /**\n         * Forked from fbjs/warning:\n         * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n         *\n         * Only change is we use console.warn instead of console.error,\n         * and do nothing when 'console' is not supported.\n         * This really simplifies the code.\n         * ---\n         * Similar to invariant but only logs a warning if the condition is not met.\n         * This can be used to log issues in development environments in critical\n         * paths. Removing the logging code for production environments will keep the\n         * same logic and follow the same code paths.\n         */\n\n\n        var lowPriorityWarning = function lowPriorityWarning() {};\n\n        {\n          var printWarning = function printWarning(format) {\n            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              args[_key - 1] = arguments[_key];\n            }\n\n            var argIndex = 0;\n            var message = 'Warning: ' + format.replace(/%s/g, function () {\n              return args[argIndex++];\n            });\n\n            if (typeof console !== 'undefined') {\n              console.warn(message);\n            }\n\n            try {\n              // --- Welcome to debugging React ---\n              // This error was thrown as a convenience so that you can use this stack\n              // to find the callsite that caused this warning to fire.\n              throw new Error(message);\n            } catch (x) {}\n          };\n\n          lowPriorityWarning = function lowPriorityWarning(condition, format) {\n            if (format === undefined) {\n              throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\n            }\n\n            if (!condition) {\n              for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n                args[_key2 - 2] = arguments[_key2];\n              }\n\n              printWarning.apply(undefined, [format].concat(args));\n            }\n          };\n        }\n        var lowPriorityWarning$1 = lowPriorityWarning;\n        var ReactStrictModeWarnings = {\n          discardPendingWarnings: function discardPendingWarnings() {},\n          flushPendingDeprecationWarnings: function flushPendingDeprecationWarnings() {},\n          flushPendingUnsafeLifecycleWarnings: function flushPendingUnsafeLifecycleWarnings() {},\n          recordDeprecationWarnings: function recordDeprecationWarnings(fiber, instance) {},\n          recordUnsafeLifecycleWarnings: function recordUnsafeLifecycleWarnings(fiber, instance) {},\n          recordLegacyContextWarning: function recordLegacyContextWarning(fiber, instance) {},\n          flushLegacyContextWarning: function flushLegacyContextWarning() {}\n        };\n        {\n          var LIFECYCLE_SUGGESTIONS = {\n            UNSAFE_componentWillMount: 'componentDidMount',\n            UNSAFE_componentWillReceiveProps: 'static getDerivedStateFromProps',\n            UNSAFE_componentWillUpdate: 'componentDidUpdate'\n          };\n          var pendingComponentWillMountWarnings = [];\n          var pendingComponentWillReceivePropsWarnings = [];\n          var pendingComponentWillUpdateWarnings = [];\n          var pendingUnsafeLifecycleWarnings = new Map();\n          var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.\n\n          var didWarnAboutDeprecatedLifecycles = new Set();\n          var didWarnAboutUnsafeLifecycles = new Set();\n          var didWarnAboutLegacyContext = new Set();\n\n          var setToSortedString = function setToSortedString(set) {\n            var array = [];\n            set.forEach(function (value) {\n              array.push(value);\n            });\n            return array.sort().join(', ');\n          };\n\n          ReactStrictModeWarnings.discardPendingWarnings = function () {\n            pendingComponentWillMountWarnings = [];\n            pendingComponentWillReceivePropsWarnings = [];\n            pendingComponentWillUpdateWarnings = [];\n            pendingUnsafeLifecycleWarnings = new Map();\n            pendingLegacyContextWarning = new Map();\n          };\n\n          ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {\n            pendingUnsafeLifecycleWarnings.forEach(function (lifecycleWarningsMap, strictRoot) {\n              var lifecyclesWarningMesages = [];\n              Object.keys(lifecycleWarningsMap).forEach(function (lifecycle) {\n                var lifecycleWarnings = lifecycleWarningsMap[lifecycle];\n\n                if (lifecycleWarnings.length > 0) {\n                  var componentNames = new Set();\n                  lifecycleWarnings.forEach(function (fiber) {\n                    componentNames.add(getComponentName(fiber.type) || 'Component');\n                    didWarnAboutUnsafeLifecycles.add(fiber.type);\n                  });\n                  var formatted = lifecycle.replace('UNSAFE_', '');\n                  var suggestion = LIFECYCLE_SUGGESTIONS[lifecycle];\n                  var sortedComponentNames = setToSortedString(componentNames);\n                  lifecyclesWarningMesages.push(formatted + ': Please update the following components to use ' + (suggestion + ' instead: ' + sortedComponentNames));\n                }\n              });\n\n              if (lifecyclesWarningMesages.length > 0) {\n                var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);\n                warningWithoutStack$1(false, 'Unsafe lifecycle methods were found within a strict-mode tree:%s' + '\\n\\n%s' + '\\n\\nLearn more about this warning here:' + '\\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, lifecyclesWarningMesages.join('\\n\\n'));\n              }\n            });\n            pendingUnsafeLifecycleWarnings = new Map();\n          };\n\n          var findStrictRoot = function findStrictRoot(fiber) {\n            var maybeStrictRoot = null;\n            var node = fiber;\n\n            while (node !== null) {\n              if (node.mode & StrictMode) {\n                maybeStrictRoot = node;\n              }\n\n              node = node.return;\n            }\n\n            return maybeStrictRoot;\n          };\n\n          ReactStrictModeWarnings.flushPendingDeprecationWarnings = function () {\n            if (pendingComponentWillMountWarnings.length > 0) {\n              var uniqueNames = new Set();\n              pendingComponentWillMountWarnings.forEach(function (fiber) {\n                uniqueNames.add(getComponentName(fiber.type) || 'Component');\n                didWarnAboutDeprecatedLifecycles.add(fiber.type);\n              });\n              var sortedNames = setToSortedString(uniqueNames);\n              lowPriorityWarning$1(false, 'componentWillMount is deprecated and will be removed in the next major version. ' + 'Use componentDidMount instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillMount.' + '\\n\\nPlease update the following components: %s' + '\\n\\nLearn more about this warning here:' + '\\nhttps://fb.me/react-async-component-lifecycle-hooks', sortedNames);\n              pendingComponentWillMountWarnings = [];\n            }\n\n            if (pendingComponentWillReceivePropsWarnings.length > 0) {\n              var _uniqueNames = new Set();\n\n              pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {\n                _uniqueNames.add(getComponentName(fiber.type) || 'Component');\n\n                didWarnAboutDeprecatedLifecycles.add(fiber.type);\n              });\n\n              var _sortedNames = setToSortedString(_uniqueNames);\n\n              lowPriorityWarning$1(false, 'componentWillReceiveProps is deprecated and will be removed in the next major version. ' + 'Use static getDerivedStateFromProps instead.' + '\\n\\nPlease update the following components: %s' + '\\n\\nLearn more about this warning here:' + '\\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames);\n              pendingComponentWillReceivePropsWarnings = [];\n            }\n\n            if (pendingComponentWillUpdateWarnings.length > 0) {\n              var _uniqueNames2 = new Set();\n\n              pendingComponentWillUpdateWarnings.forEach(function (fiber) {\n                _uniqueNames2.add(getComponentName(fiber.type) || 'Component');\n\n                didWarnAboutDeprecatedLifecycles.add(fiber.type);\n              });\n\n              var _sortedNames2 = setToSortedString(_uniqueNames2);\n\n              lowPriorityWarning$1(false, 'componentWillUpdate is deprecated and will be removed in the next major version. ' + 'Use componentDidUpdate instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillUpdate.' + '\\n\\nPlease update the following components: %s' + '\\n\\nLearn more about this warning here:' + '\\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames2);\n              pendingComponentWillUpdateWarnings = [];\n            }\n          };\n\n          ReactStrictModeWarnings.recordDeprecationWarnings = function (fiber, instance) {\n            // Dedup strategy: Warn once per component.\n            if (didWarnAboutDeprecatedLifecycles.has(fiber.type)) {\n              return;\n            } // Don't warn about react-lifecycles-compat polyfilled components.\n\n\n            if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {\n              pendingComponentWillMountWarnings.push(fiber);\n            }\n\n            if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n              pendingComponentWillReceivePropsWarnings.push(fiber);\n            }\n\n            if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n              pendingComponentWillUpdateWarnings.push(fiber);\n            }\n          };\n\n          ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {\n            var strictRoot = findStrictRoot(fiber);\n\n            if (strictRoot === null) {\n              warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n              return;\n            } // Dedup strategy: Warn once per component.\n            // This is difficult to track any other way since component names\n            // are often vague and are likely to collide between 3rd party libraries.\n            // An expand property is probably okay to use here since it's DEV-only,\n            // and will only be set in the event of serious warnings.\n\n\n            if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n              return;\n            }\n\n            var warningsForRoot = void 0;\n\n            if (!pendingUnsafeLifecycleWarnings.has(strictRoot)) {\n              warningsForRoot = {\n                UNSAFE_componentWillMount: [],\n                UNSAFE_componentWillReceiveProps: [],\n                UNSAFE_componentWillUpdate: []\n              };\n              pendingUnsafeLifecycleWarnings.set(strictRoot, warningsForRoot);\n            } else {\n              warningsForRoot = pendingUnsafeLifecycleWarnings.get(strictRoot);\n            }\n\n            var unsafeLifecycles = [];\n\n            if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillMount === 'function') {\n              unsafeLifecycles.push('UNSAFE_componentWillMount');\n            }\n\n            if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n              unsafeLifecycles.push('UNSAFE_componentWillReceiveProps');\n            }\n\n            if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillUpdate === 'function') {\n              unsafeLifecycles.push('UNSAFE_componentWillUpdate');\n            }\n\n            if (unsafeLifecycles.length > 0) {\n              unsafeLifecycles.forEach(function (lifecycle) {\n                warningsForRoot[lifecycle].push(fiber);\n              });\n            }\n          };\n\n          ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {\n            var strictRoot = findStrictRoot(fiber);\n\n            if (strictRoot === null) {\n              warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n              return;\n            } // Dedup strategy: Warn once per component.\n\n\n            if (didWarnAboutLegacyContext.has(fiber.type)) {\n              return;\n            }\n\n            var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n\n            if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {\n              if (warningsForRoot === undefined) {\n                warningsForRoot = [];\n                pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n              }\n\n              warningsForRoot.push(fiber);\n            }\n          };\n\n          ReactStrictModeWarnings.flushLegacyContextWarning = function () {\n            pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {\n              var uniqueNames = new Set();\n              fiberArray.forEach(function (fiber) {\n                uniqueNames.add(getComponentName(fiber.type) || 'Component');\n                didWarnAboutLegacyContext.add(fiber.type);\n              });\n              var sortedNames = setToSortedString(uniqueNames);\n              var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);\n              warningWithoutStack$1(false, 'Legacy context API has been detected within a strict-mode tree: %s' + '\\n\\nPlease update the following components: %s' + '\\n\\nLearn more about this warning here:' + '\\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, sortedNames);\n            });\n          };\n        } // This lets us hook into Fiber to debug what it's doing.\n        // See https://github.com/facebook/react/pull/8033.\n        // This is not part of the public API, not even for React DevTools.\n        // You may only inject a debugTool if you work on React Fiber itself.\n\n        var ReactFiberInstrumentation = {\n          debugTool: null\n        };\n        var ReactFiberInstrumentation_1 = ReactFiberInstrumentation; // TODO: Offscreen updates should never suspend. However, a promise that\n        // suspended inside an offscreen subtree should be able to ping at the priority\n        // of the outer render.\n\n        function markPendingPriorityLevel(root, expirationTime) {\n          // If there's a gap between completing a failed root and retrying it,\n          // additional updates may be scheduled. Clear `didError`, in case the update\n          // is sufficient to fix the error.\n          root.didError = false; // Update the latest and earliest pending times\n\n          var earliestPendingTime = root.earliestPendingTime;\n\n          if (earliestPendingTime === NoWork) {\n            // No other pending updates.\n            root.earliestPendingTime = root.latestPendingTime = expirationTime;\n          } else {\n            if (earliestPendingTime < expirationTime) {\n              // This is the earliest pending update.\n              root.earliestPendingTime = expirationTime;\n            } else {\n              var latestPendingTime = root.latestPendingTime;\n\n              if (latestPendingTime > expirationTime) {\n                // This is the latest pending update\n                root.latestPendingTime = expirationTime;\n              }\n            }\n          }\n\n          findNextExpirationTimeToWorkOn(expirationTime, root);\n        }\n\n        function markCommittedPriorityLevels(root, earliestRemainingTime) {\n          root.didError = false;\n\n          if (earliestRemainingTime === NoWork) {\n            // Fast path. There's no remaining work. Clear everything.\n            root.earliestPendingTime = NoWork;\n            root.latestPendingTime = NoWork;\n            root.earliestSuspendedTime = NoWork;\n            root.latestSuspendedTime = NoWork;\n            root.latestPingedTime = NoWork;\n            findNextExpirationTimeToWorkOn(NoWork, root);\n            return;\n          }\n\n          if (earliestRemainingTime < root.latestPingedTime) {\n            root.latestPingedTime = NoWork;\n          } // Let's see if the previous latest known pending level was just flushed.\n\n\n          var latestPendingTime = root.latestPendingTime;\n\n          if (latestPendingTime !== NoWork) {\n            if (latestPendingTime > earliestRemainingTime) {\n              // We've flushed all the known pending levels.\n              root.earliestPendingTime = root.latestPendingTime = NoWork;\n            } else {\n              var earliestPendingTime = root.earliestPendingTime;\n\n              if (earliestPendingTime > earliestRemainingTime) {\n                // We've flushed the earliest known pending level. Set this to the\n                // latest pending time.\n                root.earliestPendingTime = root.latestPendingTime;\n              }\n            }\n          } // Now let's handle the earliest remaining level in the whole tree. We need to\n          // decide whether to treat it as a pending level or as suspended. Check\n          // it falls within the range of known suspended levels.\n\n\n          var earliestSuspendedTime = root.earliestSuspendedTime;\n\n          if (earliestSuspendedTime === NoWork) {\n            // There's no suspended work. Treat the earliest remaining level as a\n            // pending level.\n            markPendingPriorityLevel(root, earliestRemainingTime);\n            findNextExpirationTimeToWorkOn(NoWork, root);\n            return;\n          }\n\n          var latestSuspendedTime = root.latestSuspendedTime;\n\n          if (earliestRemainingTime < latestSuspendedTime) {\n            // The earliest remaining level is later than all the suspended work. That\n            // means we've flushed all the suspended work.\n            root.earliestSuspendedTime = NoWork;\n            root.latestSuspendedTime = NoWork;\n            root.latestPingedTime = NoWork; // There's no suspended work. Treat the earliest remaining level as a\n            // pending level.\n\n            markPendingPriorityLevel(root, earliestRemainingTime);\n            findNextExpirationTimeToWorkOn(NoWork, root);\n            return;\n          }\n\n          if (earliestRemainingTime > earliestSuspendedTime) {\n            // The earliest remaining time is earlier than all the suspended work.\n            // Treat it as a pending update.\n            markPendingPriorityLevel(root, earliestRemainingTime);\n            findNextExpirationTimeToWorkOn(NoWork, root);\n            return;\n          } // The earliest remaining time falls within the range of known suspended\n          // levels. We should treat this as suspended work.\n\n\n          findNextExpirationTimeToWorkOn(NoWork, root);\n        }\n\n        function hasLowerPriorityWork(root, erroredExpirationTime) {\n          var latestPendingTime = root.latestPendingTime;\n          var latestSuspendedTime = root.latestSuspendedTime;\n          var latestPingedTime = root.latestPingedTime;\n          return latestPendingTime !== NoWork && latestPendingTime < erroredExpirationTime || latestSuspendedTime !== NoWork && latestSuspendedTime < erroredExpirationTime || latestPingedTime !== NoWork && latestPingedTime < erroredExpirationTime;\n        }\n\n        function isPriorityLevelSuspended(root, expirationTime) {\n          var earliestSuspendedTime = root.earliestSuspendedTime;\n          var latestSuspendedTime = root.latestSuspendedTime;\n          return earliestSuspendedTime !== NoWork && expirationTime <= earliestSuspendedTime && expirationTime >= latestSuspendedTime;\n        }\n\n        function markSuspendedPriorityLevel(root, suspendedTime) {\n          root.didError = false;\n          clearPing(root, suspendedTime); // First, check the known pending levels and update them if needed.\n\n          var earliestPendingTime = root.earliestPendingTime;\n          var latestPendingTime = root.latestPendingTime;\n\n          if (earliestPendingTime === suspendedTime) {\n            if (latestPendingTime === suspendedTime) {\n              // Both known pending levels were suspended. Clear them.\n              root.earliestPendingTime = root.latestPendingTime = NoWork;\n            } else {\n              // The earliest pending level was suspended. Clear by setting it to the\n              // latest pending level.\n              root.earliestPendingTime = latestPendingTime;\n            }\n          } else if (latestPendingTime === suspendedTime) {\n            // The latest pending level was suspended. Clear by setting it to the\n            // latest pending level.\n            root.latestPendingTime = earliestPendingTime;\n          } // Finally, update the known suspended levels.\n\n\n          var earliestSuspendedTime = root.earliestSuspendedTime;\n          var latestSuspendedTime = root.latestSuspendedTime;\n\n          if (earliestSuspendedTime === NoWork) {\n            // No other suspended levels.\n            root.earliestSuspendedTime = root.latestSuspendedTime = suspendedTime;\n          } else {\n            if (earliestSuspendedTime < suspendedTime) {\n              // This is the earliest suspended level.\n              root.earliestSuspendedTime = suspendedTime;\n            } else if (latestSuspendedTime > suspendedTime) {\n              // This is the latest suspended level\n              root.latestSuspendedTime = suspendedTime;\n            }\n          }\n\n          findNextExpirationTimeToWorkOn(suspendedTime, root);\n        }\n\n        function markPingedPriorityLevel(root, pingedTime) {\n          root.didError = false; // TODO: When we add back resuming, we need to ensure the progressed work\n          // is thrown out and not reused during the restarted render. One way to\n          // invalidate the progressed work is to restart at expirationTime + 1.\n\n          var latestPingedTime = root.latestPingedTime;\n\n          if (latestPingedTime === NoWork || latestPingedTime > pingedTime) {\n            root.latestPingedTime = pingedTime;\n          }\n\n          findNextExpirationTimeToWorkOn(pingedTime, root);\n        }\n\n        function clearPing(root, completedTime) {\n          var latestPingedTime = root.latestPingedTime;\n\n          if (latestPingedTime >= completedTime) {\n            root.latestPingedTime = NoWork;\n          }\n        }\n\n        function findEarliestOutstandingPriorityLevel(root, renderExpirationTime) {\n          var earliestExpirationTime = renderExpirationTime;\n          var earliestPendingTime = root.earliestPendingTime;\n          var earliestSuspendedTime = root.earliestSuspendedTime;\n\n          if (earliestPendingTime > earliestExpirationTime) {\n            earliestExpirationTime = earliestPendingTime;\n          }\n\n          if (earliestSuspendedTime > earliestExpirationTime) {\n            earliestExpirationTime = earliestSuspendedTime;\n          }\n\n          return earliestExpirationTime;\n        }\n\n        function didExpireAtExpirationTime(root, currentTime) {\n          var expirationTime = root.expirationTime;\n\n          if (expirationTime !== NoWork && currentTime <= expirationTime) {\n            // The root has expired. Flush all work up to the current time.\n            root.nextExpirationTimeToWorkOn = currentTime;\n          }\n        }\n\n        function findNextExpirationTimeToWorkOn(completedExpirationTime, root) {\n          var earliestSuspendedTime = root.earliestSuspendedTime;\n          var latestSuspendedTime = root.latestSuspendedTime;\n          var earliestPendingTime = root.earliestPendingTime;\n          var latestPingedTime = root.latestPingedTime; // Work on the earliest pending time. Failing that, work on the latest\n          // pinged time.\n\n          var nextExpirationTimeToWorkOn = earliestPendingTime !== NoWork ? earliestPendingTime : latestPingedTime; // If there is no pending or pinged work, check if there's suspended work\n          // that's lower priority than what we just completed.\n\n          if (nextExpirationTimeToWorkOn === NoWork && (completedExpirationTime === NoWork || latestSuspendedTime < completedExpirationTime)) {\n            // The lowest priority suspended work is the work most likely to be\n            // committed next. Let's start rendering it again, so that if it times out,\n            // it's ready to commit.\n            nextExpirationTimeToWorkOn = latestSuspendedTime;\n          }\n\n          var expirationTime = nextExpirationTimeToWorkOn;\n\n          if (expirationTime !== NoWork && earliestSuspendedTime > expirationTime) {\n            // Expire using the earliest known expiration time.\n            expirationTime = earliestSuspendedTime;\n          }\n\n          root.nextExpirationTimeToWorkOn = nextExpirationTimeToWorkOn;\n          root.expirationTime = expirationTime;\n        } // UpdateQueue is a linked list of prioritized updates.\n        //\n        // Like fibers, update queues come in pairs: a current queue, which represents\n        // the visible state of the screen, and a work-in-progress queue, which is\n        // can be mutated and processed asynchronously before it is committed — a form\n        // of double buffering. If a work-in-progress render is discarded before\n        // finishing, we create a new work-in-progress by cloning the current queue.\n        //\n        // Both queues share a persistent, singly-linked list structure. To schedule an\n        // update, we append it to the end of both queues. Each queue maintains a\n        // pointer to first update in the persistent list that hasn't been processed.\n        // The work-in-progress pointer always has a position equal to or greater than\n        // the current queue, since we always work on that one. The current queue's\n        // pointer is only updated during the commit phase, when we swap in the\n        // work-in-progress.\n        //\n        // For example:\n        //\n        //   Current pointer:           A - B - C - D - E - F\n        //   Work-in-progress pointer:              D - E - F\n        //                                          ^\n        //                                          The work-in-progress queue has\n        //                                          processed more updates than current.\n        //\n        // The reason we append to both queues is because otherwise we might drop\n        // updates without ever processing them. For example, if we only add updates to\n        // the work-in-progress queue, some updates could be lost whenever a work-in\n        // -progress render restarts by cloning from current. Similarly, if we only add\n        // updates to the current queue, the updates will be lost whenever an already\n        // in-progress queue commits and swaps with the current queue. However, by\n        // adding to both queues, we guarantee that the update will be part of the next\n        // work-in-progress. (And because the work-in-progress queue becomes the\n        // current queue once it commits, there's no danger of applying the same\n        // update twice.)\n        //\n        // Prioritization\n        // --------------\n        //\n        // Updates are not sorted by priority, but by insertion; new updates are always\n        // appended to the end of the list.\n        //\n        // The priority is still important, though. When processing the update queue\n        // during the render phase, only the updates with sufficient priority are\n        // included in the result. If we skip an update because it has insufficient\n        // priority, it remains in the queue to be processed later, during a lower\n        // priority render. Crucially, all updates subsequent to a skipped update also\n        // remain in the queue *regardless of their priority*. That means high priority\n        // updates are sometimes processed twice, at two separate priorities. We also\n        // keep track of a base state, that represents the state before the first\n        // update in the queue is applied.\n        //\n        // For example:\n        //\n        //   Given a base state of '', and the following queue of updates\n        //\n        //     A1 - B2 - C1 - D2\n        //\n        //   where the number indicates the priority, and the update is applied to the\n        //   previous state by appending a letter, React will process these updates as\n        //   two separate renders, one per distinct priority level:\n        //\n        //   First render, at priority 1:\n        //     Base state: ''\n        //     Updates: [A1, C1]\n        //     Result state: 'AC'\n        //\n        //   Second render, at priority 2:\n        //     Base state: 'A'            <-  The base state does not include C1,\n        //                                    because B2 was skipped.\n        //     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2\n        //     Result state: 'ABCD'\n        //\n        // Because we process updates in insertion order, and rebase high priority\n        // updates when preceding updates are skipped, the final result is deterministic\n        // regardless of priority. Intermediate state may vary according to system\n        // resources, but the final state is always the same.\n\n\n        var UpdateState = 0;\n        var ReplaceState = 1;\n        var ForceUpdate = 2;\n        var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.\n        // It should only be read right after calling `processUpdateQueue`, via\n        // `checkHasForceUpdateAfterProcessing`.\n\n        var hasForceUpdate = false;\n        var didWarnUpdateInsideUpdate = void 0;\n        var currentlyProcessingQueue = void 0;\n        var resetCurrentlyProcessingQueue = void 0;\n        {\n          didWarnUpdateInsideUpdate = false;\n          currentlyProcessingQueue = null;\n\n          resetCurrentlyProcessingQueue = function resetCurrentlyProcessingQueue() {\n            currentlyProcessingQueue = null;\n          };\n        }\n\n        function createUpdateQueue(baseState) {\n          var queue = {\n            baseState: baseState,\n            firstUpdate: null,\n            lastUpdate: null,\n            firstCapturedUpdate: null,\n            lastCapturedUpdate: null,\n            firstEffect: null,\n            lastEffect: null,\n            firstCapturedEffect: null,\n            lastCapturedEffect: null\n          };\n          return queue;\n        }\n\n        function cloneUpdateQueue(currentQueue) {\n          var queue = {\n            baseState: currentQueue.baseState,\n            firstUpdate: currentQueue.firstUpdate,\n            lastUpdate: currentQueue.lastUpdate,\n            // TODO: With resuming, if we bail out and resuse the child tree, we should\n            // keep these effects.\n            firstCapturedUpdate: null,\n            lastCapturedUpdate: null,\n            firstEffect: null,\n            lastEffect: null,\n            firstCapturedEffect: null,\n            lastCapturedEffect: null\n          };\n          return queue;\n        }\n\n        function createUpdate(expirationTime) {\n          return {\n            expirationTime: expirationTime,\n            tag: UpdateState,\n            payload: null,\n            callback: null,\n            next: null,\n            nextEffect: null\n          };\n        }\n\n        function appendUpdateToQueue(queue, update) {\n          // Append the update to the end of the list.\n          if (queue.lastUpdate === null) {\n            // Queue is empty\n            queue.firstUpdate = queue.lastUpdate = update;\n          } else {\n            queue.lastUpdate.next = update;\n            queue.lastUpdate = update;\n          }\n        }\n\n        function enqueueUpdate(fiber, update) {\n          // Update queues are created lazily.\n          var alternate = fiber.alternate;\n          var queue1 = void 0;\n          var queue2 = void 0;\n\n          if (alternate === null) {\n            // There's only one fiber.\n            queue1 = fiber.updateQueue;\n            queue2 = null;\n\n            if (queue1 === null) {\n              queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);\n            }\n          } else {\n            // There are two owners.\n            queue1 = fiber.updateQueue;\n            queue2 = alternate.updateQueue;\n\n            if (queue1 === null) {\n              if (queue2 === null) {\n                // Neither fiber has an update queue. Create new ones.\n                queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);\n                queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState);\n              } else {\n                // Only one fiber has an update queue. Clone to create a new one.\n                queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);\n              }\n            } else {\n              if (queue2 === null) {\n                // Only one fiber has an update queue. Clone to create a new one.\n                queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);\n              } else {// Both owners have an update queue.\n              }\n            }\n          }\n\n          if (queue2 === null || queue1 === queue2) {\n            // There's only a single queue.\n            appendUpdateToQueue(queue1, update);\n          } else {\n            // There are two queues. We need to append the update to both queues,\n            // while accounting for the persistent structure of the list — we don't\n            // want the same update to be added multiple times.\n            if (queue1.lastUpdate === null || queue2.lastUpdate === null) {\n              // One of the queues is not empty. We must add the update to both queues.\n              appendUpdateToQueue(queue1, update);\n              appendUpdateToQueue(queue2, update);\n            } else {\n              // Both queues are non-empty. The last update is the same in both lists,\n              // because of structural sharing. So, only append to one of the lists.\n              appendUpdateToQueue(queue1, update); // But we still need to update the `lastUpdate` pointer of queue2.\n\n              queue2.lastUpdate = update;\n            }\n          }\n\n          {\n            if (fiber.tag === ClassComponent && (currentlyProcessingQueue === queue1 || queue2 !== null && currentlyProcessingQueue === queue2) && !didWarnUpdateInsideUpdate) {\n              warningWithoutStack$1(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');\n              didWarnUpdateInsideUpdate = true;\n            }\n          }\n        }\n\n        function enqueueCapturedUpdate(workInProgress, update) {\n          // Captured updates go into a separate list, and only on the work-in-\n          // progress queue.\n          var workInProgressQueue = workInProgress.updateQueue;\n\n          if (workInProgressQueue === null) {\n            workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState);\n          } else {\n            // TODO: I put this here rather than createWorkInProgress so that we don't\n            // clone the queue unnecessarily. There's probably a better way to\n            // structure this.\n            workInProgressQueue = ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);\n          } // Append the update to the end of the list.\n\n\n          if (workInProgressQueue.lastCapturedUpdate === null) {\n            // This is the first render phase update\n            workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;\n          } else {\n            workInProgressQueue.lastCapturedUpdate.next = update;\n            workInProgressQueue.lastCapturedUpdate = update;\n          }\n        }\n\n        function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {\n          var current = workInProgress.alternate;\n\n          if (current !== null) {\n            // If the work-in-progress queue is equal to the current queue,\n            // we need to clone it first.\n            if (queue === current.updateQueue) {\n              queue = workInProgress.updateQueue = cloneUpdateQueue(queue);\n            }\n          }\n\n          return queue;\n        }\n\n        function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {\n          switch (update.tag) {\n            case ReplaceState:\n              {\n                var _payload = update.payload;\n\n                if (typeof _payload === 'function') {\n                  // Updater function\n                  {\n                    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\n                      _payload.call(instance, prevState, nextProps);\n                    }\n                  }\n                  return _payload.call(instance, prevState, nextProps);\n                } // State object\n\n\n                return _payload;\n              }\n\n            case CaptureUpdate:\n              {\n                workInProgress.effectTag = workInProgress.effectTag & ~ShouldCapture | DidCapture;\n              }\n            // Intentional fallthrough\n\n            case UpdateState:\n              {\n                var _payload2 = update.payload;\n                var partialState = void 0;\n\n                if (typeof _payload2 === 'function') {\n                  // Updater function\n                  {\n                    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\n                      _payload2.call(instance, prevState, nextProps);\n                    }\n                  }\n                  partialState = _payload2.call(instance, prevState, nextProps);\n                } else {\n                  // Partial state object\n                  partialState = _payload2;\n                }\n\n                if (partialState === null || partialState === undefined) {\n                  // Null and undefined are treated as no-ops.\n                  return prevState;\n                } // Merge the partial state and the previous state.\n\n\n                return _assign({}, prevState, partialState);\n              }\n\n            case ForceUpdate:\n              {\n                hasForceUpdate = true;\n                return prevState;\n              }\n          }\n\n          return prevState;\n        }\n\n        function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {\n          hasForceUpdate = false;\n          queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);\n          {\n            currentlyProcessingQueue = queue;\n          } // These values may change as we process the queue.\n\n          var newBaseState = queue.baseState;\n          var newFirstUpdate = null;\n          var newExpirationTime = NoWork; // Iterate through the list of updates to compute the result.\n\n          var update = queue.firstUpdate;\n          var resultState = newBaseState;\n\n          while (update !== null) {\n            var updateExpirationTime = update.expirationTime;\n\n            if (updateExpirationTime < renderExpirationTime) {\n              // This update does not have sufficient priority. Skip it.\n              if (newFirstUpdate === null) {\n                // This is the first skipped update. It will be the first update in\n                // the new list.\n                newFirstUpdate = update; // Since this is the first update that was skipped, the current result\n                // is the new base state.\n\n                newBaseState = resultState;\n              } // Since this update will remain in the list, update the remaining\n              // expiration time.\n\n\n              if (newExpirationTime < updateExpirationTime) {\n                newExpirationTime = updateExpirationTime;\n              }\n            } else {\n              // This update does have sufficient priority. Process it and compute\n              // a new result.\n              resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);\n              var _callback = update.callback;\n\n              if (_callback !== null) {\n                workInProgress.effectTag |= Callback; // Set this to null, in case it was mutated during an aborted render.\n\n                update.nextEffect = null;\n\n                if (queue.lastEffect === null) {\n                  queue.firstEffect = queue.lastEffect = update;\n                } else {\n                  queue.lastEffect.nextEffect = update;\n                  queue.lastEffect = update;\n                }\n              }\n            } // Continue to the next update.\n\n\n            update = update.next;\n          } // Separately, iterate though the list of captured updates.\n\n\n          var newFirstCapturedUpdate = null;\n          update = queue.firstCapturedUpdate;\n\n          while (update !== null) {\n            var _updateExpirationTime = update.expirationTime;\n\n            if (_updateExpirationTime < renderExpirationTime) {\n              // This update does not have sufficient priority. Skip it.\n              if (newFirstCapturedUpdate === null) {\n                // This is the first skipped captured update. It will be the first\n                // update in the new list.\n                newFirstCapturedUpdate = update; // If this is the first update that was skipped, the current result is\n                // the new base state.\n\n                if (newFirstUpdate === null) {\n                  newBaseState = resultState;\n                }\n              } // Since this update will remain in the list, update the remaining\n              // expiration time.\n\n\n              if (newExpirationTime < _updateExpirationTime) {\n                newExpirationTime = _updateExpirationTime;\n              }\n            } else {\n              // This update does have sufficient priority. Process it and compute\n              // a new result.\n              resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);\n              var _callback2 = update.callback;\n\n              if (_callback2 !== null) {\n                workInProgress.effectTag |= Callback; // Set this to null, in case it was mutated during an aborted render.\n\n                update.nextEffect = null;\n\n                if (queue.lastCapturedEffect === null) {\n                  queue.firstCapturedEffect = queue.lastCapturedEffect = update;\n                } else {\n                  queue.lastCapturedEffect.nextEffect = update;\n                  queue.lastCapturedEffect = update;\n                }\n              }\n            }\n\n            update = update.next;\n          }\n\n          if (newFirstUpdate === null) {\n            queue.lastUpdate = null;\n          }\n\n          if (newFirstCapturedUpdate === null) {\n            queue.lastCapturedUpdate = null;\n          } else {\n            workInProgress.effectTag |= Callback;\n          }\n\n          if (newFirstUpdate === null && newFirstCapturedUpdate === null) {\n            // We processed every update, without skipping. That means the new base\n            // state is the same as the result state.\n            newBaseState = resultState;\n          }\n\n          queue.baseState = newBaseState;\n          queue.firstUpdate = newFirstUpdate;\n          queue.firstCapturedUpdate = newFirstCapturedUpdate; // Set the remaining expiration time to be whatever is remaining in the queue.\n          // This should be fine because the only two other things that contribute to\n          // expiration time are props and context. We're already in the middle of the\n          // begin phase by the time we start processing the queue, so we've already\n          // dealt with the props. Context in components that specify\n          // shouldComponentUpdate is tricky; but we'll have to account for\n          // that regardless.\n\n          workInProgress.expirationTime = newExpirationTime;\n          workInProgress.memoizedState = resultState;\n          {\n            currentlyProcessingQueue = null;\n          }\n        }\n\n        function callCallback(callback, context) {\n          !(typeof callback === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', callback) : void 0;\n          callback.call(context);\n        }\n\n        function resetHasForceUpdateBeforeProcessing() {\n          hasForceUpdate = false;\n        }\n\n        function checkHasForceUpdateAfterProcessing() {\n          return hasForceUpdate;\n        }\n\n        function commitUpdateQueue(finishedWork, finishedQueue, instance, renderExpirationTime) {\n          // If the finished render included captured updates, and there are still\n          // lower priority updates left over, we need to keep the captured updates\n          // in the queue so that they are rebased and not dropped once we process the\n          // queue again at the lower priority.\n          if (finishedQueue.firstCapturedUpdate !== null) {\n            // Join the captured update list to the end of the normal list.\n            if (finishedQueue.lastUpdate !== null) {\n              finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;\n              finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;\n            } // Clear the list of captured updates.\n\n\n            finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;\n          } // Commit the effects\n\n\n          commitUpdateEffects(finishedQueue.firstEffect, instance);\n          finishedQueue.firstEffect = finishedQueue.lastEffect = null;\n          commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);\n          finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;\n        }\n\n        function commitUpdateEffects(effect, instance) {\n          while (effect !== null) {\n            var _callback3 = effect.callback;\n\n            if (_callback3 !== null) {\n              effect.callback = null;\n              callCallback(_callback3, instance);\n            }\n\n            effect = effect.nextEffect;\n          }\n        }\n\n        function createCapturedValue(value, source) {\n          // If the value is an error, call this function immediately after it is thrown\n          // so the stack is accurate.\n          return {\n            value: value,\n            source: source,\n            stack: getStackByFiberInDevAndProd(source)\n          };\n        }\n\n        var valueCursor = createCursor(null);\n        var rendererSigil = void 0;\n        {\n          // Use this to detect multiple renderers using the same context\n          rendererSigil = {};\n        }\n        var currentlyRenderingFiber = null;\n        var lastContextDependency = null;\n        var lastContextWithAllBitsObserved = null;\n\n        function resetContextDependences() {\n          // This is called right before React yields execution, to ensure `readContext`\n          // cannot be called outside the render phase.\n          currentlyRenderingFiber = null;\n          lastContextDependency = null;\n          lastContextWithAllBitsObserved = null;\n        }\n\n        function pushProvider(providerFiber, nextValue) {\n          var context = providerFiber.type._context;\n\n          if (isPrimaryRenderer) {\n            push(valueCursor, context._currentValue, providerFiber);\n            context._currentValue = nextValue;\n            {\n              !(context._currentRenderer === undefined || context._currentRenderer === null || context._currentRenderer === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;\n              context._currentRenderer = rendererSigil;\n            }\n          } else {\n            push(valueCursor, context._currentValue2, providerFiber);\n            context._currentValue2 = nextValue;\n            {\n              !(context._currentRenderer2 === undefined || context._currentRenderer2 === null || context._currentRenderer2 === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;\n              context._currentRenderer2 = rendererSigil;\n            }\n          }\n        }\n\n        function popProvider(providerFiber) {\n          var currentValue = valueCursor.current;\n          pop(valueCursor, providerFiber);\n          var context = providerFiber.type._context;\n\n          if (isPrimaryRenderer) {\n            context._currentValue = currentValue;\n          } else {\n            context._currentValue2 = currentValue;\n          }\n        }\n\n        function calculateChangedBits(context, newValue, oldValue) {\n          // Use Object.is to compare the new context value to the old value. Inlined\n          // Object.is polyfill.\n          // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n          if (oldValue === newValue && (oldValue !== 0 || 1 / oldValue === 1 / newValue) || oldValue !== oldValue && newValue !== newValue // eslint-disable-line no-self-compare\n          ) {\n              // No change\n              return 0;\n            } else {\n            var changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : maxSigned31BitInt;\n            {\n              !((changedBits & maxSigned31BitInt) === changedBits) ? warning$1(false, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits) : void 0;\n            }\n            return changedBits | 0;\n          }\n        }\n\n        function propagateContextChange(workInProgress, context, changedBits, renderExpirationTime) {\n          var fiber = workInProgress.child;\n\n          if (fiber !== null) {\n            // Set the return pointer of the child to the work-in-progress fiber.\n            fiber.return = workInProgress;\n          }\n\n          while (fiber !== null) {\n            var nextFiber = void 0; // Visit this fiber.\n\n            var dependency = fiber.firstContextDependency;\n\n            if (dependency !== null) {\n              do {\n                // Check if the context matches.\n                if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {\n                  // Match! Schedule an update on this fiber.\n                  if (fiber.tag === ClassComponent) {\n                    // Schedule a force update on the work-in-progress.\n                    var update = createUpdate(renderExpirationTime);\n                    update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the\n                    // update to the current fiber, too, which means it will persist even if\n                    // this render is thrown away. Since it's a race condition, not sure it's\n                    // worth fixing.\n\n                    enqueueUpdate(fiber, update);\n                  }\n\n                  if (fiber.expirationTime < renderExpirationTime) {\n                    fiber.expirationTime = renderExpirationTime;\n                  }\n\n                  var alternate = fiber.alternate;\n\n                  if (alternate !== null && alternate.expirationTime < renderExpirationTime) {\n                    alternate.expirationTime = renderExpirationTime;\n                  } // Update the child expiration time of all the ancestors, including\n                  // the alternates.\n\n\n                  var node = fiber.return;\n\n                  while (node !== null) {\n                    alternate = node.alternate;\n\n                    if (node.childExpirationTime < renderExpirationTime) {\n                      node.childExpirationTime = renderExpirationTime;\n\n                      if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {\n                        alternate.childExpirationTime = renderExpirationTime;\n                      }\n                    } else if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {\n                      alternate.childExpirationTime = renderExpirationTime;\n                    } else {\n                      // Neither alternate was updated, which means the rest of the\n                      // ancestor path already has sufficient priority.\n                      break;\n                    }\n\n                    node = node.return;\n                  }\n                }\n\n                nextFiber = fiber.child;\n                dependency = dependency.next;\n              } while (dependency !== null);\n            } else if (fiber.tag === ContextProvider) {\n              // Don't scan deeper if this is a matching provider\n              nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n            } else {\n              // Traverse down.\n              nextFiber = fiber.child;\n            }\n\n            if (nextFiber !== null) {\n              // Set the return pointer of the child to the work-in-progress fiber.\n              nextFiber.return = fiber;\n            } else {\n              // No child. Traverse to next sibling.\n              nextFiber = fiber;\n\n              while (nextFiber !== null) {\n                if (nextFiber === workInProgress) {\n                  // We're back to the root of this subtree. Exit.\n                  nextFiber = null;\n                  break;\n                }\n\n                var sibling = nextFiber.sibling;\n\n                if (sibling !== null) {\n                  // Set the return pointer of the sibling to the work-in-progress fiber.\n                  sibling.return = nextFiber.return;\n                  nextFiber = sibling;\n                  break;\n                } // No more siblings. Traverse up.\n\n\n                nextFiber = nextFiber.return;\n              }\n            }\n\n            fiber = nextFiber;\n          }\n        }\n\n        function prepareToReadContext(workInProgress, renderExpirationTime) {\n          currentlyRenderingFiber = workInProgress;\n          lastContextDependency = null;\n          lastContextWithAllBitsObserved = null; // Reset the work-in-progress list\n\n          workInProgress.firstContextDependency = null;\n        }\n\n        function readContext(context, observedBits) {\n          if (lastContextWithAllBitsObserved === context) {// Nothing to do. We already observe everything in this context.\n          } else if (observedBits === false || observedBits === 0) {// Do not observe any updates.\n          } else {\n            var resolvedObservedBits = void 0; // Avoid deopting on observable arguments or heterogeneous types.\n\n            if (typeof observedBits !== 'number' || observedBits === maxSigned31BitInt) {\n              // Observe all updates.\n              lastContextWithAllBitsObserved = context;\n              resolvedObservedBits = maxSigned31BitInt;\n            } else {\n              resolvedObservedBits = observedBits;\n            }\n\n            var contextItem = {\n              context: context,\n              observedBits: resolvedObservedBits,\n              next: null\n            };\n\n            if (lastContextDependency === null) {\n              !(currentlyRenderingFiber !== null) ? invariant(false, 'Context can only be read while React is rendering, e.g. inside the render method or getDerivedStateFromProps.') : void 0; // This is the first dependency in the list\n\n              currentlyRenderingFiber.firstContextDependency = lastContextDependency = contextItem;\n            } else {\n              // Append a new context item.\n              lastContextDependency = lastContextDependency.next = contextItem;\n            }\n          }\n\n          return isPrimaryRenderer ? context._currentValue : context._currentValue2;\n        }\n\n        var NoEffect$1 =\n        /*             */\n        0;\n        var UnmountSnapshot =\n        /*      */\n        2;\n        var UnmountMutation =\n        /*      */\n        4;\n        var MountMutation =\n        /*        */\n        8;\n        var UnmountLayout =\n        /*        */\n        16;\n        var MountLayout =\n        /*          */\n        32;\n        var MountPassive =\n        /*         */\n        64;\n        var UnmountPassive =\n        /*       */\n        128;\n\n        function areHookInputsEqual(arr1, arr2) {\n          // Don't bother comparing lengths in prod because these arrays should be\n          // passed inline.\n          {\n            !(arr1.length === arr2.length) ? warning$1(false, 'Detected a variable number of hook dependencies. The length of the ' + 'dependencies array should be constant between renders.\\n\\n' + 'Previous: %s\\n' + 'Incoming: %s', arr1.join(', '), arr2.join(', ')) : void 0;\n          }\n\n          for (var i = 0; i < arr1.length; i++) {\n            // Inlined Object.is polyfill.\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n            var val1 = arr1[i];\n            var val2 = arr2[i];\n\n            if (val1 === val2 && (val1 !== 0 || 1 / val1 === 1 / val2) || val1 !== val1 && val2 !== val2 // eslint-disable-line no-self-compare\n            ) {\n                continue;\n              }\n\n            return false;\n          }\n\n          return true;\n        } // These are set right before calling the component.\n\n\n        var renderExpirationTime = NoWork; // The work-in-progress fiber. I've named it differently to distinguish it from\n        // the work-in-progress hook.\n\n        var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The\n        // current hook list is the list that belongs to the current fiber. The\n        // work-in-progress hook list is a new list that will be added to the\n        // work-in-progress fiber.\n\n        var firstCurrentHook = null;\n        var currentHook = null;\n        var firstWorkInProgressHook = null;\n        var workInProgressHook = null;\n        var remainingExpirationTime = NoWork;\n        var componentUpdateQueue = null; // Updates scheduled during render will trigger an immediate re-render at the\n        // end of the current pass. We can't store these updates on the normal queue,\n        // because if the work is aborted, they should be discarded. Because this is\n        // a relatively rare case, we also don't want to add an additional field to\n        // either the hook or queue object types. So we store them in a lazily create\n        // map of queue -> render-phase updates, which are discarded once the component\n        // completes without re-rendering.\n        // Whether the work-in-progress hook is a re-rendered hook\n\n        var isReRender = false; // Whether an update was scheduled during the currently executing render pass.\n\n        var didScheduleRenderPhaseUpdate = false; // Lazily created map of render-phase updates\n\n        var renderPhaseUpdates = null; // Counter to prevent infinite loops.\n\n        var numberOfReRenders = 0;\n        var RE_RENDER_LIMIT = 25;\n\n        function resolveCurrentlyRenderingFiber() {\n          !(currentlyRenderingFiber$1 !== null) ? invariant(false, 'Hooks can only be called inside the body of a function component.') : void 0;\n          return currentlyRenderingFiber$1;\n        }\n\n        function prepareToUseHooks(current, workInProgress, nextRenderExpirationTime) {\n          if (!enableHooks) {\n            return;\n          }\n\n          renderExpirationTime = nextRenderExpirationTime;\n          currentlyRenderingFiber$1 = workInProgress;\n          firstCurrentHook = current !== null ? current.memoizedState : null; // The following should have already been reset\n          // currentHook = null;\n          // workInProgressHook = null;\n          // remainingExpirationTime = NoWork;\n          // componentUpdateQueue = null;\n          // isReRender = false;\n          // didScheduleRenderPhaseUpdate = false;\n          // renderPhaseUpdates = null;\n          // numberOfReRenders = 0;\n        }\n\n        function finishHooks(Component, props, children, refOrContext) {\n          if (!enableHooks) {\n            return children;\n          } // This must be called after every function component to prevent hooks from\n          // being used in classes.\n\n\n          while (didScheduleRenderPhaseUpdate) {\n            // Updates were scheduled during the render phase. They are stored in\n            // the `renderPhaseUpdates` map. Call the component again, reusing the\n            // work-in-progress hooks and applying the additional updates on top. Keep\n            // restarting until no more updates are scheduled.\n            didScheduleRenderPhaseUpdate = false;\n            numberOfReRenders += 1; // Start over from the beginning of the list\n\n            currentHook = null;\n            workInProgressHook = null;\n            componentUpdateQueue = null;\n            children = Component(props, refOrContext);\n          }\n\n          renderPhaseUpdates = null;\n          numberOfReRenders = 0;\n          var renderedWork = currentlyRenderingFiber$1;\n          renderedWork.memoizedState = firstWorkInProgressHook;\n          renderedWork.expirationTime = remainingExpirationTime;\n          renderedWork.updateQueue = componentUpdateQueue;\n          var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;\n          renderExpirationTime = NoWork;\n          currentlyRenderingFiber$1 = null;\n          firstCurrentHook = null;\n          currentHook = null;\n          firstWorkInProgressHook = null;\n          workInProgressHook = null;\n          remainingExpirationTime = NoWork;\n          componentUpdateQueue = null; // Always set during createWorkInProgress\n          // isReRender = false;\n          // These were reset above\n          // didScheduleRenderPhaseUpdate = false;\n          // renderPhaseUpdates = null;\n          // numberOfReRenders = 0;\n\n          !!didRenderTooFewHooks ? invariant(false, 'Rendered fewer hooks than expected. This may be caused by an accidental early return statement.') : void 0;\n          return children;\n        }\n\n        function resetHooks() {\n          if (!enableHooks) {\n            return;\n          } // This is called instead of `finishHooks` if the component throws. It's also\n          // called inside mountIndeterminateComponent if we determine the component\n          // is a module-style component.\n\n\n          renderExpirationTime = NoWork;\n          currentlyRenderingFiber$1 = null;\n          firstCurrentHook = null;\n          currentHook = null;\n          firstWorkInProgressHook = null;\n          workInProgressHook = null;\n          remainingExpirationTime = NoWork;\n          componentUpdateQueue = null; // Always set during createWorkInProgress\n          // isReRender = false;\n\n          didScheduleRenderPhaseUpdate = false;\n          renderPhaseUpdates = null;\n          numberOfReRenders = 0;\n        }\n\n        function createHook() {\n          return {\n            memoizedState: null,\n            baseState: null,\n            queue: null,\n            baseUpdate: null,\n            next: null\n          };\n        }\n\n        function cloneHook(hook) {\n          return {\n            memoizedState: hook.memoizedState,\n            baseState: hook.baseState,\n            queue: hook.queue,\n            baseUpdate: hook.baseUpdate,\n            next: null\n          };\n        }\n\n        function createWorkInProgressHook() {\n          if (workInProgressHook === null) {\n            // This is the first hook in the list\n            if (firstWorkInProgressHook === null) {\n              isReRender = false;\n              currentHook = firstCurrentHook;\n\n              if (currentHook === null) {\n                // This is a newly mounted hook\n                workInProgressHook = createHook();\n              } else {\n                // Clone the current hook.\n                workInProgressHook = cloneHook(currentHook);\n              }\n\n              firstWorkInProgressHook = workInProgressHook;\n            } else {\n              // There's already a work-in-progress. Reuse it.\n              isReRender = true;\n              currentHook = firstCurrentHook;\n              workInProgressHook = firstWorkInProgressHook;\n            }\n          } else {\n            if (workInProgressHook.next === null) {\n              isReRender = false;\n              var hook = void 0;\n\n              if (currentHook === null) {\n                // This is a newly mounted hook\n                hook = createHook();\n              } else {\n                currentHook = currentHook.next;\n\n                if (currentHook === null) {\n                  // This is a newly mounted hook\n                  hook = createHook();\n                } else {\n                  // Clone the current hook.\n                  hook = cloneHook(currentHook);\n                }\n              } // Append to the end of the list\n\n\n              workInProgressHook = workInProgressHook.next = hook;\n            } else {\n              // There's already a work-in-progress. Reuse it.\n              isReRender = true;\n              workInProgressHook = workInProgressHook.next;\n              currentHook = currentHook !== null ? currentHook.next : null;\n            }\n          }\n\n          return workInProgressHook;\n        }\n\n        function createFunctionComponentUpdateQueue() {\n          return {\n            lastEffect: null\n          };\n        }\n\n        function basicStateReducer(state, action) {\n          return typeof action === 'function' ? action(state) : action;\n        }\n\n        function useContext(context, observedBits) {\n          // Ensure we're in a function component (class components support only the\n          // .unstable_read() form)\n          resolveCurrentlyRenderingFiber();\n          return readContext(context, observedBits);\n        }\n\n        function useState(initialState) {\n          return useReducer(basicStateReducer, // useReducer has a special case to support lazy useState initializers\n          initialState);\n        }\n\n        function useReducer(reducer, initialState, initialAction) {\n          currentlyRenderingFiber$1 = resolveCurrentlyRenderingFiber();\n          workInProgressHook = createWorkInProgressHook();\n          var queue = workInProgressHook.queue;\n\n          if (queue !== null) {\n            // Already have a queue, so this is an update.\n            if (isReRender) {\n              // This is a re-render. Apply the new render phase updates to the previous\n              var _dispatch2 = queue.dispatch;\n\n              if (renderPhaseUpdates !== null) {\n                // Render phase updates are stored in a map of queue -> linked list\n                var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);\n\n                if (firstRenderPhaseUpdate !== undefined) {\n                  renderPhaseUpdates.delete(queue);\n                  var newState = workInProgressHook.memoizedState;\n                  var update = firstRenderPhaseUpdate;\n\n                  do {\n                    // Process this render phase update. We don't have to check the\n                    // priority because it will always be the same as the current\n                    // render's.\n                    var _action = update.action;\n                    newState = reducer(newState, _action);\n                    update = update.next;\n                  } while (update !== null);\n\n                  workInProgressHook.memoizedState = newState; // Don't persist the state accumlated from the render phase updates to\n                  // the base state unless the queue is empty.\n                  // TODO: Not sure if this is the desired semantics, but it's what we\n                  // do for gDSFP. I can't remember why.\n\n                  if (workInProgressHook.baseUpdate === queue.last) {\n                    workInProgressHook.baseState = newState;\n                  }\n\n                  return [newState, _dispatch2];\n                }\n              }\n\n              return [workInProgressHook.memoizedState, _dispatch2];\n            } // The last update in the entire queue\n\n\n            var _last = queue.last; // The last update that is part of the base state.\n\n            var _baseUpdate = workInProgressHook.baseUpdate; // Find the first unprocessed update.\n\n            var first = void 0;\n\n            if (_baseUpdate !== null) {\n              if (_last !== null) {\n                // For the first update, the queue is a circular linked list where\n                // `queue.last.next = queue.first`. Once the first update commits, and\n                // the `baseUpdate` is no longer empty, we can unravel the list.\n                _last.next = null;\n              }\n\n              first = _baseUpdate.next;\n            } else {\n              first = _last !== null ? _last.next : null;\n            }\n\n            if (first !== null) {\n              var _newState = workInProgressHook.baseState;\n              var newBaseState = null;\n              var newBaseUpdate = null;\n              var prevUpdate = _baseUpdate;\n              var _update = first;\n              var didSkip = false;\n\n              do {\n                var updateExpirationTime = _update.expirationTime;\n\n                if (updateExpirationTime < renderExpirationTime) {\n                  // Priority is insufficient. Skip this update. If this is the first\n                  // skipped update, the previous update/state is the new base\n                  // update/state.\n                  if (!didSkip) {\n                    didSkip = true;\n                    newBaseUpdate = prevUpdate;\n                    newBaseState = _newState;\n                  } // Update the remaining priority in the queue.\n\n\n                  if (updateExpirationTime > remainingExpirationTime) {\n                    remainingExpirationTime = updateExpirationTime;\n                  }\n                } else {\n                  // Process this update.\n                  var _action2 = _update.action;\n                  _newState = reducer(_newState, _action2);\n                }\n\n                prevUpdate = _update;\n                _update = _update.next;\n              } while (_update !== null && _update !== first);\n\n              if (!didSkip) {\n                newBaseUpdate = prevUpdate;\n                newBaseState = _newState;\n              }\n\n              workInProgressHook.memoizedState = _newState;\n              workInProgressHook.baseUpdate = newBaseUpdate;\n              workInProgressHook.baseState = newBaseState;\n            }\n\n            var _dispatch = queue.dispatch;\n            return [workInProgressHook.memoizedState, _dispatch];\n          } // There's no existing queue, so this is the initial render.\n\n\n          if (reducer === basicStateReducer) {\n            // Special case for `useState`.\n            if (typeof initialState === 'function') {\n              initialState = initialState();\n            }\n          } else if (initialAction !== undefined && initialAction !== null) {\n            initialState = reducer(initialState, initialAction);\n          }\n\n          workInProgressHook.memoizedState = workInProgressHook.baseState = initialState;\n          queue = workInProgressHook.queue = {\n            last: null,\n            dispatch: null\n          };\n          var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);\n          return [workInProgressHook.memoizedState, dispatch];\n        }\n\n        function pushEffect(tag, create, destroy, inputs) {\n          var effect = {\n            tag: tag,\n            create: create,\n            destroy: destroy,\n            inputs: inputs,\n            // Circular\n            next: null\n          };\n\n          if (componentUpdateQueue === null) {\n            componentUpdateQueue = createFunctionComponentUpdateQueue();\n            componentUpdateQueue.lastEffect = effect.next = effect;\n          } else {\n            var _lastEffect = componentUpdateQueue.lastEffect;\n\n            if (_lastEffect === null) {\n              componentUpdateQueue.lastEffect = effect.next = effect;\n            } else {\n              var firstEffect = _lastEffect.next;\n              _lastEffect.next = effect;\n              effect.next = firstEffect;\n              componentUpdateQueue.lastEffect = effect;\n            }\n          }\n\n          return effect;\n        }\n\n        function useRef(initialValue) {\n          currentlyRenderingFiber$1 = resolveCurrentlyRenderingFiber();\n          workInProgressHook = createWorkInProgressHook();\n          var ref = void 0;\n\n          if (workInProgressHook.memoizedState === null) {\n            ref = {\n              current: initialValue\n            };\n            {\n              Object.seal(ref);\n            }\n            workInProgressHook.memoizedState = ref;\n          } else {\n            ref = workInProgressHook.memoizedState;\n          }\n\n          return ref;\n        }\n\n        function useLayoutEffect(create, inputs) {\n          useEffectImpl(Update, UnmountMutation | MountLayout, create, inputs);\n        }\n\n        function useEffect(create, inputs) {\n          useEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, inputs);\n        }\n\n        function useEffectImpl(fiberEffectTag, hookEffectTag, create, inputs) {\n          currentlyRenderingFiber$1 = resolveCurrentlyRenderingFiber();\n          workInProgressHook = createWorkInProgressHook();\n          var nextInputs = inputs !== undefined && inputs !== null ? inputs : [create];\n          var destroy = null;\n\n          if (currentHook !== null) {\n            var prevEffect = currentHook.memoizedState;\n            destroy = prevEffect.destroy;\n\n            if (areHookInputsEqual(nextInputs, prevEffect.inputs)) {\n              pushEffect(NoEffect$1, create, destroy, nextInputs);\n              return;\n            }\n          }\n\n          currentlyRenderingFiber$1.effectTag |= fiberEffectTag;\n          workInProgressHook.memoizedState = pushEffect(hookEffectTag, create, destroy, nextInputs);\n        }\n\n        function useImperativeMethods(ref, create, inputs) {\n          // TODO: If inputs are provided, should we skip comparing the ref itself?\n          var nextInputs = inputs !== null && inputs !== undefined ? inputs.concat([ref]) : [ref, create]; // TODO: I've implemented this on top of useEffect because it's almost the\n          // same thing, and it would require an equal amount of code. It doesn't seem\n          // like a common enough use case to justify the additional size.\n\n          useLayoutEffect(function () {\n            if (typeof ref === 'function') {\n              var refCallback = ref;\n\n              var _inst = create();\n\n              refCallback(_inst);\n              return function () {\n                return refCallback(null);\n              };\n            } else if (ref !== null && ref !== undefined) {\n              var refObject = ref;\n\n              var _inst2 = create();\n\n              refObject.current = _inst2;\n              return function () {\n                refObject.current = null;\n              };\n            }\n          }, nextInputs);\n        }\n\n        function useCallback(callback, inputs) {\n          currentlyRenderingFiber$1 = resolveCurrentlyRenderingFiber();\n          workInProgressHook = createWorkInProgressHook();\n          var nextInputs = inputs !== undefined && inputs !== null ? inputs : [callback];\n          var prevState = workInProgressHook.memoizedState;\n\n          if (prevState !== null) {\n            var prevInputs = prevState[1];\n\n            if (areHookInputsEqual(nextInputs, prevInputs)) {\n              return prevState[0];\n            }\n          }\n\n          workInProgressHook.memoizedState = [callback, nextInputs];\n          return callback;\n        }\n\n        function useMemo(nextCreate, inputs) {\n          currentlyRenderingFiber$1 = resolveCurrentlyRenderingFiber();\n          workInProgressHook = createWorkInProgressHook();\n          var nextInputs = inputs !== undefined && inputs !== null ? inputs : [nextCreate];\n          var prevState = workInProgressHook.memoizedState;\n\n          if (prevState !== null) {\n            var prevInputs = prevState[1];\n\n            if (areHookInputsEqual(nextInputs, prevInputs)) {\n              return prevState[0];\n            }\n          }\n\n          var nextValue = nextCreate();\n          workInProgressHook.memoizedState = [nextValue, nextInputs];\n          return nextValue;\n        }\n\n        function dispatchAction(fiber, queue, action) {\n          !(numberOfReRenders < RE_RENDER_LIMIT) ? invariant(false, 'Too many re-renders. React limits the number of renders to prevent an infinite loop.') : void 0;\n          var alternate = fiber.alternate;\n\n          if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {\n            // This is a render phase update. Stash it in a lazily-created map of\n            // queue -> linked list of updates. After this render pass, we'll restart\n            // and apply the stashed updates on top of the work-in-progress hook.\n            didScheduleRenderPhaseUpdate = true;\n            var update = {\n              expirationTime: renderExpirationTime,\n              action: action,\n              next: null\n            };\n\n            if (renderPhaseUpdates === null) {\n              renderPhaseUpdates = new Map();\n            }\n\n            var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);\n\n            if (firstRenderPhaseUpdate === undefined) {\n              renderPhaseUpdates.set(queue, update);\n            } else {\n              // Append the update to the end of the list.\n              var lastRenderPhaseUpdate = firstRenderPhaseUpdate;\n\n              while (lastRenderPhaseUpdate.next !== null) {\n                lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n              }\n\n              lastRenderPhaseUpdate.next = update;\n            }\n          } else {\n            var currentTime = requestCurrentTime();\n\n            var _expirationTime = computeExpirationForFiber(currentTime, fiber);\n\n            var _update2 = {\n              expirationTime: _expirationTime,\n              action: action,\n              next: null\n            };\n            flushPassiveEffects(); // Append the update to the end of the list.\n\n            var _last2 = queue.last;\n\n            if (_last2 === null) {\n              // This is the first update. Create a circular list.\n              _update2.next = _update2;\n            } else {\n              var first = _last2.next;\n\n              if (first !== null) {\n                // Still circular.\n                _update2.next = first;\n              }\n\n              _last2.next = _update2;\n            }\n\n            queue.last = _update2;\n            scheduleWork(fiber, _expirationTime);\n          }\n        }\n\n        var NO_CONTEXT = {};\n        var contextStackCursor$1 = createCursor(NO_CONTEXT);\n        var contextFiberStackCursor = createCursor(NO_CONTEXT);\n        var rootInstanceStackCursor = createCursor(NO_CONTEXT);\n\n        function requiredContext(c) {\n          !(c !== NO_CONTEXT) ? invariant(false, 'Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n          return c;\n        }\n\n        function getRootHostContainer() {\n          var rootInstance = requiredContext(rootInstanceStackCursor.current);\n          return rootInstance;\n        }\n\n        function pushHostContainer(fiber, nextRootInstance) {\n          // Push current root instance onto the stack;\n          // This allows us to reset root when portals are popped.\n          push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.\n          // This enables us to pop only Fibers that provide unique contexts.\n\n          push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.\n          // However, we can't just call getRootHostContext() and push it because\n          // we'd have a different number of entries on the stack depending on\n          // whether getRootHostContext() throws somewhere in renderer code or not.\n          // So we push an empty value first. This lets us safely unwind on errors.\n\n          push(contextStackCursor$1, NO_CONTEXT, fiber);\n          var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.\n\n          pop(contextStackCursor$1, fiber);\n          push(contextStackCursor$1, nextRootContext, fiber);\n        }\n\n        function popHostContainer(fiber) {\n          pop(contextStackCursor$1, fiber);\n          pop(contextFiberStackCursor, fiber);\n          pop(rootInstanceStackCursor, fiber);\n        }\n\n        function getHostContext() {\n          var context = requiredContext(contextStackCursor$1.current);\n          return context;\n        }\n\n        function pushHostContext(fiber) {\n          var rootInstance = requiredContext(rootInstanceStackCursor.current);\n          var context = requiredContext(contextStackCursor$1.current);\n          var nextContext = getChildHostContext(context, fiber.type, rootInstance); // Don't push this Fiber's context unless it's unique.\n\n          if (context === nextContext) {\n            return;\n          } // Track the context and the Fiber that provided it.\n          // This enables us to pop only Fibers that provide unique contexts.\n\n\n          push(contextFiberStackCursor, fiber, fiber);\n          push(contextStackCursor$1, nextContext, fiber);\n        }\n\n        function popHostContext(fiber) {\n          // Do not pop unless this Fiber provided the current context.\n          // pushHostContext() only pushes Fibers that provide unique contexts.\n          if (contextFiberStackCursor.current !== fiber) {\n            return;\n          }\n\n          pop(contextStackCursor$1, fiber);\n          pop(contextFiberStackCursor, fiber);\n        }\n\n        var commitTime = 0;\n        var profilerStartTime = -1;\n\n        function getCommitTime() {\n          return commitTime;\n        }\n\n        function recordCommitTime() {\n          if (!enableProfilerTimer) {\n            return;\n          }\n\n          commitTime = scheduler.unstable_now();\n        }\n\n        function startProfilerTimer(fiber) {\n          if (!enableProfilerTimer) {\n            return;\n          }\n\n          profilerStartTime = scheduler.unstable_now();\n\n          if (fiber.actualStartTime < 0) {\n            fiber.actualStartTime = scheduler.unstable_now();\n          }\n        }\n\n        function stopProfilerTimerIfRunning(fiber) {\n          if (!enableProfilerTimer) {\n            return;\n          }\n\n          profilerStartTime = -1;\n        }\n\n        function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {\n          if (!enableProfilerTimer) {\n            return;\n          }\n\n          if (profilerStartTime >= 0) {\n            var elapsedTime = scheduler.unstable_now() - profilerStartTime;\n            fiber.actualDuration += elapsedTime;\n\n            if (overrideBaseTime) {\n              fiber.selfBaseDuration = elapsedTime;\n            }\n\n            profilerStartTime = -1;\n          }\n        }\n\n        function resolveDefaultProps(Component, baseProps) {\n          if (Component && Component.defaultProps) {\n            // Resolve default props. Taken from ReactElement\n            var props = _assign({}, baseProps);\n\n            var defaultProps = Component.defaultProps;\n\n            for (var propName in defaultProps) {\n              if (props[propName] === undefined) {\n                props[propName] = defaultProps[propName];\n              }\n            }\n\n            return props;\n          }\n\n          return baseProps;\n        }\n\n        function readLazyComponentType(lazyComponent) {\n          var status = lazyComponent._status;\n          var result = lazyComponent._result;\n\n          switch (status) {\n            case Resolved:\n              {\n                var Component = result;\n                return Component;\n              }\n\n            case Rejected:\n              {\n                var error = result;\n                throw error;\n              }\n\n            case Pending:\n              {\n                var thenable = result;\n                throw thenable;\n              }\n\n            default:\n              {\n                lazyComponent._status = Pending;\n                var ctor = lazyComponent._ctor;\n\n                var _thenable = ctor();\n\n                _thenable.then(function (moduleObject) {\n                  if (lazyComponent._status === Pending) {\n                    var defaultExport = moduleObject.default;\n                    {\n                      if (defaultExport === undefined) {\n                        warning$1(false, 'lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + \"const MyComponent = lazy(() => import('./MyComponent'))\", moduleObject);\n                      }\n                    }\n                    lazyComponent._status = Resolved;\n                    lazyComponent._result = defaultExport;\n                  }\n                }, function (error) {\n                  if (lazyComponent._status === Pending) {\n                    lazyComponent._status = Rejected;\n                    lazyComponent._result = error;\n                  }\n                });\n\n                lazyComponent._result = _thenable;\n                throw _thenable;\n              }\n          }\n        }\n\n        var ReactCurrentOwner$4 = ReactSharedInternals.ReactCurrentOwner;\n\n        function readContext$1(contextType) {\n          var dispatcher = ReactCurrentOwner$4.currentDispatcher;\n          return dispatcher.readContext(contextType);\n        }\n\n        var fakeInternalInstance = {};\n        var isArray$1 = Array.isArray; // React.Component uses a shared frozen object by default.\n        // We'll use it to determine whether we need to initialize legacy refs.\n\n        var emptyRefsObject = new React.Component().refs;\n        var didWarnAboutStateAssignmentForComponent = void 0;\n        var didWarnAboutUninitializedState = void 0;\n        var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = void 0;\n        var didWarnAboutLegacyLifecyclesAndDerivedState = void 0;\n        var didWarnAboutUndefinedDerivedState = void 0;\n        var warnOnUndefinedDerivedState = void 0;\n        var warnOnInvalidCallback$1 = void 0;\n        var didWarnAboutDirectlyAssigningPropsToState = void 0;\n        var didWarnAboutContextTypeAndContextTypes = void 0;\n        var didWarnAboutInvalidateContextType = void 0;\n        {\n          didWarnAboutStateAssignmentForComponent = new Set();\n          didWarnAboutUninitializedState = new Set();\n          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n          didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n          didWarnAboutDirectlyAssigningPropsToState = new Set();\n          didWarnAboutUndefinedDerivedState = new Set();\n          didWarnAboutContextTypeAndContextTypes = new Set();\n          didWarnAboutInvalidateContextType = new Set();\n          var didWarnOnInvalidCallback = new Set();\n\n          warnOnInvalidCallback$1 = function warnOnInvalidCallback$1(callback, callerName) {\n            if (callback === null || typeof callback === 'function') {\n              return;\n            }\n\n            var key = callerName + '_' + callback;\n\n            if (!didWarnOnInvalidCallback.has(key)) {\n              didWarnOnInvalidCallback.add(key);\n              warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);\n            }\n          };\n\n          warnOnUndefinedDerivedState = function warnOnUndefinedDerivedState(type, partialState) {\n            if (partialState === undefined) {\n              var componentName = getComponentName(type) || 'Component';\n\n              if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n                didWarnAboutUndefinedDerivedState.add(componentName);\n                warningWithoutStack$1(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);\n              }\n            }\n          }; // This is so gross but it's at least non-critical and can be removed if\n          // it causes problems. This is meant to give a nicer error message for\n          // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\n          // ...)) which otherwise throws a \"_processChildContext is not a function\"\n          // exception.\n\n\n          Object.defineProperty(fakeInternalInstance, '_processChildContext', {\n            enumerable: false,\n            value: function value() {\n              invariant(false, '_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn\\'t supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).');\n            }\n          });\n          Object.freeze(fakeInternalInstance);\n        }\n\n        function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {\n          var prevState = workInProgress.memoizedState;\n          {\n            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\n              // Invoke the function an extra time to help detect side-effects.\n              getDerivedStateFromProps(nextProps, prevState);\n            }\n          }\n          var partialState = getDerivedStateFromProps(nextProps, prevState);\n          {\n            warnOnUndefinedDerivedState(ctor, partialState);\n          } // Merge the partial state and the previous state.\n\n          var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);\n          workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the\n          // base state.\n\n          var updateQueue = workInProgress.updateQueue;\n\n          if (updateQueue !== null && workInProgress.expirationTime === NoWork) {\n            updateQueue.baseState = memoizedState;\n          }\n        }\n\n        var classComponentUpdater = {\n          isMounted: isMounted,\n          enqueueSetState: function enqueueSetState(inst, payload, callback) {\n            var fiber = get(inst);\n            var currentTime = requestCurrentTime();\n            var expirationTime = computeExpirationForFiber(currentTime, fiber);\n            var update = createUpdate(expirationTime);\n            update.payload = payload;\n\n            if (callback !== undefined && callback !== null) {\n              {\n                warnOnInvalidCallback$1(callback, 'setState');\n              }\n              update.callback = callback;\n            }\n\n            flushPassiveEffects();\n            enqueueUpdate(fiber, update);\n            scheduleWork(fiber, expirationTime);\n          },\n          enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {\n            var fiber = get(inst);\n            var currentTime = requestCurrentTime();\n            var expirationTime = computeExpirationForFiber(currentTime, fiber);\n            var update = createUpdate(expirationTime);\n            update.tag = ReplaceState;\n            update.payload = payload;\n\n            if (callback !== undefined && callback !== null) {\n              {\n                warnOnInvalidCallback$1(callback, 'replaceState');\n              }\n              update.callback = callback;\n            }\n\n            flushPassiveEffects();\n            enqueueUpdate(fiber, update);\n            scheduleWork(fiber, expirationTime);\n          },\n          enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {\n            var fiber = get(inst);\n            var currentTime = requestCurrentTime();\n            var expirationTime = computeExpirationForFiber(currentTime, fiber);\n            var update = createUpdate(expirationTime);\n            update.tag = ForceUpdate;\n\n            if (callback !== undefined && callback !== null) {\n              {\n                warnOnInvalidCallback$1(callback, 'forceUpdate');\n              }\n              update.callback = callback;\n            }\n\n            flushPassiveEffects();\n            enqueueUpdate(fiber, update);\n            scheduleWork(fiber, expirationTime);\n          }\n        };\n\n        function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {\n          var instance = workInProgress.stateNode;\n\n          if (typeof instance.shouldComponentUpdate === 'function') {\n            startPhaseTimer(workInProgress, 'shouldComponentUpdate');\n            var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);\n            stopPhaseTimer();\n            {\n              !(shouldUpdate !== undefined) ? warningWithoutStack$1(false, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(ctor) || 'Component') : void 0;\n            }\n            return shouldUpdate;\n          }\n\n          if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n            return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);\n          }\n\n          return true;\n        }\n\n        function checkClassInstance(workInProgress, ctor, newProps) {\n          var instance = workInProgress.stateNode;\n          {\n            var name = getComponentName(ctor) || 'Component';\n            var renderPresent = instance.render;\n\n            if (!renderPresent) {\n              if (ctor.prototype && typeof ctor.prototype.render === 'function') {\n                warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);\n              } else {\n                warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);\n              }\n            }\n\n            var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;\n            !noGetInitialStateOnES6 ? warningWithoutStack$1(false, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name) : void 0;\n            var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;\n            !noGetDefaultPropsOnES6 ? warningWithoutStack$1(false, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name) : void 0;\n            var noInstancePropTypes = !instance.propTypes;\n            !noInstancePropTypes ? warningWithoutStack$1(false, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name) : void 0;\n            var noInstanceContextType = !instance.contextType;\n            !noInstanceContextType ? warningWithoutStack$1(false, 'contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name) : void 0;\n            var noInstanceContextTypes = !instance.contextTypes;\n            !noInstanceContextTypes ? warningWithoutStack$1(false, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name) : void 0;\n\n            if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {\n              didWarnAboutContextTypeAndContextTypes.add(ctor);\n              warningWithoutStack$1(false, '%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);\n            }\n\n            var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';\n            !noComponentShouldUpdate ? warningWithoutStack$1(false, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name) : void 0;\n\n            if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {\n              warningWithoutStack$1(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(ctor) || 'A pure component');\n            }\n\n            var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';\n            !noComponentDidUnmount ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name) : void 0;\n            var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';\n            !noComponentDidReceiveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name) : void 0;\n            var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';\n            !noComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name) : void 0;\n            var noUnsafeComponentWillRecieveProps = typeof instance.UNSAFE_componentWillRecieveProps !== 'function';\n            !noUnsafeComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name) : void 0;\n            var hasMutatedProps = instance.props !== newProps;\n            !(instance.props === undefined || !hasMutatedProps) ? warningWithoutStack$1(false, '%s(...): When calling super() in `%s`, make sure to pass ' + \"up the same props that your component's constructor was passed.\", name, name) : void 0;\n            var noInstanceDefaultProps = !instance.defaultProps;\n            !noInstanceDefaultProps ? warningWithoutStack$1(false, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name) : void 0;\n\n            if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {\n              didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n              warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(ctor));\n            }\n\n            var noInstanceGetDerivedStateFromProps = typeof instance.getDerivedStateFromProps !== 'function';\n            !noInstanceGetDerivedStateFromProps ? warningWithoutStack$1(false, '%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;\n            var noInstanceGetDerivedStateFromCatch = typeof instance.getDerivedStateFromError !== 'function';\n            !noInstanceGetDerivedStateFromCatch ? warningWithoutStack$1(false, '%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;\n            var noStaticGetSnapshotBeforeUpdate = typeof ctor.getSnapshotBeforeUpdate !== 'function';\n            !noStaticGetSnapshotBeforeUpdate ? warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name) : void 0;\n            var _state = instance.state;\n\n            if (_state && (typeof _state !== 'object' || isArray$1(_state))) {\n              warningWithoutStack$1(false, '%s.state: must be set to an object or null', name);\n            }\n\n            if (typeof instance.getChildContext === 'function') {\n              !(typeof ctor.childContextTypes === 'object') ? warningWithoutStack$1(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name) : void 0;\n            }\n          }\n        }\n\n        function adoptClassInstance(workInProgress, instance) {\n          instance.updater = classComponentUpdater;\n          workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates\n\n          set(instance, workInProgress);\n          {\n            instance._reactInternalInstance = fakeInternalInstance;\n          }\n        }\n\n        function constructClassInstance(workInProgress, ctor, props, renderExpirationTime) {\n          var isLegacyContextConsumer = false;\n          var unmaskedContext = emptyContextObject;\n          var context = null;\n          var contextType = ctor.contextType;\n\n          if (typeof contextType === 'object' && contextType !== null) {\n            {\n              if (contextType.$$typeof !== REACT_CONTEXT_TYPE && !didWarnAboutInvalidateContextType.has(ctor)) {\n                didWarnAboutInvalidateContextType.add(ctor);\n                warningWithoutStack$1(false, '%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext(). ' + 'Did you accidentally pass the Context.Provider instead?', getComponentName(ctor) || 'Component');\n              }\n            }\n            context = readContext$1(contextType);\n          } else {\n            unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n            var contextTypes = ctor.contextTypes;\n            isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;\n            context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;\n          } // Instantiate twice to help detect side-effects.\n\n\n          {\n            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\n              new ctor(props, context); // eslint-disable-line no-new\n            }\n          }\n          var instance = new ctor(props, context);\n          var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;\n          adoptClassInstance(workInProgress, instance);\n          {\n            if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {\n              var componentName = getComponentName(ctor) || 'Component';\n\n              if (!didWarnAboutUninitializedState.has(componentName)) {\n                didWarnAboutUninitializedState.add(componentName);\n                warningWithoutStack$1(false, '`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);\n              }\n            } // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n            // Warn about these lifecycles if they are present.\n            // Don't warn about react-lifecycles-compat polyfilled methods though.\n\n\n            if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {\n              var foundWillMountName = null;\n              var foundWillReceivePropsName = null;\n              var foundWillUpdateName = null;\n\n              if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {\n                foundWillMountName = 'componentWillMount';\n              } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\n                foundWillMountName = 'UNSAFE_componentWillMount';\n              }\n\n              if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n                foundWillReceivePropsName = 'componentWillReceiveProps';\n              } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n                foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n              }\n\n              if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n                foundWillUpdateName = 'componentWillUpdate';\n              } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n                foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n              }\n\n              if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n                var _componentName = getComponentName(ctor) || 'Component';\n\n                var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\n\n                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {\n                  didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);\n                  warningWithoutStack$1(false, 'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' + 'The above lifecycles should be removed. Learn more about this warning here:\\n' + 'https://fb.me/react-async-component-lifecycle-hooks', _componentName, newApiName, foundWillMountName !== null ? '\\n  ' + foundWillMountName : '', foundWillReceivePropsName !== null ? '\\n  ' + foundWillReceivePropsName : '', foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '');\n                }\n              }\n            }\n          } // Cache unmasked context so we can avoid recreating masked context unless necessary.\n          // ReactFiberContext usually updates this cache but can't for newly-created instances.\n\n          if (isLegacyContextConsumer) {\n            cacheContext(workInProgress, unmaskedContext, context);\n          }\n\n          return instance;\n        }\n\n        function callComponentWillMount(workInProgress, instance) {\n          startPhaseTimer(workInProgress, 'componentWillMount');\n          var oldState = instance.state;\n\n          if (typeof instance.componentWillMount === 'function') {\n            instance.componentWillMount();\n          }\n\n          if (typeof instance.UNSAFE_componentWillMount === 'function') {\n            instance.UNSAFE_componentWillMount();\n          }\n\n          stopPhaseTimer();\n\n          if (oldState !== instance.state) {\n            {\n              warningWithoutStack$1(false, '%s.componentWillMount(): Assigning directly to this.state is ' + \"deprecated (except inside a component's \" + 'constructor). Use setState instead.', getComponentName(workInProgress.type) || 'Component');\n            }\n            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n          }\n        }\n\n        function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {\n          var oldState = instance.state;\n          startPhaseTimer(workInProgress, 'componentWillReceiveProps');\n\n          if (typeof instance.componentWillReceiveProps === 'function') {\n            instance.componentWillReceiveProps(newProps, nextContext);\n          }\n\n          if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n            instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n          }\n\n          stopPhaseTimer();\n\n          if (instance.state !== oldState) {\n            {\n              var componentName = getComponentName(workInProgress.type) || 'Component';\n\n              if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n                didWarnAboutStateAssignmentForComponent.add(componentName);\n                warningWithoutStack$1(false, '%s.componentWillReceiveProps(): Assigning directly to ' + \"this.state is deprecated (except inside a component's \" + 'constructor). Use setState instead.', componentName);\n              }\n            }\n            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n          }\n        } // Invokes the mount life-cycles on a previously never rendered instance.\n\n\n        function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {\n          {\n            checkClassInstance(workInProgress, ctor, newProps);\n          }\n          var instance = workInProgress.stateNode;\n          instance.props = newProps;\n          instance.state = workInProgress.memoizedState;\n          instance.refs = emptyRefsObject;\n          var contextType = ctor.contextType;\n\n          if (typeof contextType === 'object' && contextType !== null) {\n            instance.context = readContext$1(contextType);\n          } else {\n            var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n            instance.context = getMaskedContext(workInProgress, unmaskedContext);\n          }\n\n          {\n            if (instance.state === newProps) {\n              var componentName = getComponentName(ctor) || 'Component';\n\n              if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n                didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n                warningWithoutStack$1(false, '%s: It is not recommended to assign props directly to state ' + \"because updates to props won't be reflected in state. \" + 'In most cases, it is better to use props directly.', componentName);\n              }\n            }\n\n            if (workInProgress.mode & StrictMode) {\n              ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);\n              ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);\n            }\n\n            if (warnAboutDeprecatedLifecycles) {\n              ReactStrictModeWarnings.recordDeprecationWarnings(workInProgress, instance);\n            }\n          }\n          var updateQueue = workInProgress.updateQueue;\n\n          if (updateQueue !== null) {\n            processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);\n            instance.state = workInProgress.memoizedState;\n          }\n\n          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n\n          if (typeof getDerivedStateFromProps === 'function') {\n            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n            instance.state = workInProgress.memoizedState;\n          } // In order to support react-lifecycles-compat polyfilled components,\n          // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n\n          if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {\n            callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's\n            // process them now.\n\n            updateQueue = workInProgress.updateQueue;\n\n            if (updateQueue !== null) {\n              processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);\n              instance.state = workInProgress.memoizedState;\n            }\n          }\n\n          if (typeof instance.componentDidMount === 'function') {\n            workInProgress.effectTag |= Update;\n          }\n        }\n\n        function resumeMountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {\n          var instance = workInProgress.stateNode;\n          var oldProps = workInProgress.memoizedProps;\n          instance.props = oldProps;\n          var oldContext = instance.context;\n          var contextType = ctor.contextType;\n          var nextContext = void 0;\n\n          if (typeof contextType === 'object' && contextType !== null) {\n            nextContext = readContext$1(contextType);\n          } else {\n            var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n            nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n          }\n\n          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n          var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what\n          // ever the previously attempted to render - not the \"current\". However,\n          // during componentDidUpdate we pass the \"current\" props.\n          // In order to support react-lifecycles-compat polyfilled components,\n          // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n          if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {\n            if (oldProps !== newProps || oldContext !== nextContext) {\n              callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n            }\n          }\n\n          resetHasForceUpdateBeforeProcessing();\n          var oldState = workInProgress.memoizedState;\n          var newState = instance.state = oldState;\n          var updateQueue = workInProgress.updateQueue;\n\n          if (updateQueue !== null) {\n            processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);\n            newState = workInProgress.memoizedState;\n          }\n\n          if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {\n            // If an update was already in progress, we should schedule an Update\n            // effect even though we're bailing out, so that cWU/cDU are called.\n            if (typeof instance.componentDidMount === 'function') {\n              workInProgress.effectTag |= Update;\n            }\n\n            return false;\n          }\n\n          if (typeof getDerivedStateFromProps === 'function') {\n            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n            newState = workInProgress.memoizedState;\n          }\n\n          var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);\n\n          if (shouldUpdate) {\n            // In order to support react-lifecycles-compat polyfilled components,\n            // Unsafe lifecycles should not be invoked for components using the new APIs.\n            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {\n              startPhaseTimer(workInProgress, 'componentWillMount');\n\n              if (typeof instance.componentWillMount === 'function') {\n                instance.componentWillMount();\n              }\n\n              if (typeof instance.UNSAFE_componentWillMount === 'function') {\n                instance.UNSAFE_componentWillMount();\n              }\n\n              stopPhaseTimer();\n            }\n\n            if (typeof instance.componentDidMount === 'function') {\n              workInProgress.effectTag |= Update;\n            }\n          } else {\n            // If an update was already in progress, we should schedule an Update\n            // effect even though we're bailing out, so that cWU/cDU are called.\n            if (typeof instance.componentDidMount === 'function') {\n              workInProgress.effectTag |= Update;\n            } // If shouldComponentUpdate returned false, we should still update the\n            // memoized state to indicate that this work can be reused.\n\n\n            workInProgress.memoizedProps = newProps;\n            workInProgress.memoizedState = newState;\n          } // Update the existing instance's state, props, and context pointers even\n          // if shouldComponentUpdate returns false.\n\n\n          instance.props = newProps;\n          instance.state = newState;\n          instance.context = nextContext;\n          return shouldUpdate;\n        } // Invokes the update life-cycles and returns false if it shouldn't rerender.\n\n\n        function updateClassInstance(current, workInProgress, ctor, newProps, renderExpirationTime) {\n          var instance = workInProgress.stateNode;\n          var oldProps = workInProgress.memoizedProps;\n          instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps);\n          var oldContext = instance.context;\n          var contextType = ctor.contextType;\n          var nextContext = void 0;\n\n          if (typeof contextType === 'object' && contextType !== null) {\n            nextContext = readContext$1(contextType);\n          } else {\n            var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n            nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n          }\n\n          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n          var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what\n          // ever the previously attempted to render - not the \"current\". However,\n          // during componentDidUpdate we pass the \"current\" props.\n          // In order to support react-lifecycles-compat polyfilled components,\n          // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n          if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {\n            if (oldProps !== newProps || oldContext !== nextContext) {\n              callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n            }\n          }\n\n          resetHasForceUpdateBeforeProcessing();\n          var oldState = workInProgress.memoizedState;\n          var newState = instance.state = oldState;\n          var updateQueue = workInProgress.updateQueue;\n\n          if (updateQueue !== null) {\n            processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);\n            newState = workInProgress.memoizedState;\n          }\n\n          if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {\n            // If an update was already in progress, we should schedule an Update\n            // effect even though we're bailing out, so that cWU/cDU are called.\n            if (typeof instance.componentDidUpdate === 'function') {\n              if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n                workInProgress.effectTag |= Update;\n              }\n            }\n\n            if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n              if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n                workInProgress.effectTag |= Snapshot;\n              }\n            }\n\n            return false;\n          }\n\n          if (typeof getDerivedStateFromProps === 'function') {\n            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n            newState = workInProgress.memoizedState;\n          }\n\n          var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);\n\n          if (shouldUpdate) {\n            // In order to support react-lifecycles-compat polyfilled components,\n            // Unsafe lifecycles should not be invoked for components using the new APIs.\n            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {\n              startPhaseTimer(workInProgress, 'componentWillUpdate');\n\n              if (typeof instance.componentWillUpdate === 'function') {\n                instance.componentWillUpdate(newProps, newState, nextContext);\n              }\n\n              if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n                instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n              }\n\n              stopPhaseTimer();\n            }\n\n            if (typeof instance.componentDidUpdate === 'function') {\n              workInProgress.effectTag |= Update;\n            }\n\n            if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n              workInProgress.effectTag |= Snapshot;\n            }\n          } else {\n            // If an update was already in progress, we should schedule an Update\n            // effect even though we're bailing out, so that cWU/cDU are called.\n            if (typeof instance.componentDidUpdate === 'function') {\n              if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n                workInProgress.effectTag |= Update;\n              }\n            }\n\n            if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n              if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n                workInProgress.effectTag |= Snapshot;\n              }\n            } // If shouldComponentUpdate returned false, we should still update the\n            // memoized props/state to indicate that this work can be reused.\n\n\n            workInProgress.memoizedProps = newProps;\n            workInProgress.memoizedState = newState;\n          } // Update the existing instance's state, props, and context pointers even\n          // if shouldComponentUpdate returns false.\n\n\n          instance.props = newProps;\n          instance.state = newState;\n          instance.context = nextContext;\n          return shouldUpdate;\n        }\n\n        var didWarnAboutMaps = void 0;\n        var didWarnAboutGenerators = void 0;\n        var didWarnAboutStringRefInStrictMode = void 0;\n        var ownerHasKeyUseWarning = void 0;\n        var ownerHasFunctionTypeWarning = void 0;\n\n        var warnForMissingKey = function warnForMissingKey(child) {};\n\n        {\n          didWarnAboutMaps = false;\n          didWarnAboutGenerators = false;\n          didWarnAboutStringRefInStrictMode = {};\n          /**\n           * Warn if there's no key explicitly set on dynamic arrays of children or\n           * object keys are not valid. This allows us to keep track of children between\n           * updates.\n           */\n\n          ownerHasKeyUseWarning = {};\n          ownerHasFunctionTypeWarning = {};\n\n          warnForMissingKey = function warnForMissingKey(child) {\n            if (child === null || typeof child !== 'object') {\n              return;\n            }\n\n            if (!child._store || child._store.validated || child.key != null) {\n              return;\n            }\n\n            !(typeof child._store === 'object') ? invariant(false, 'React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n            child._store.validated = true;\n            var currentComponentErrorInfo = 'Each child in an array or iterator should have a unique ' + '\"key\" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + getCurrentFiberStackInDev();\n\n            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n              return;\n            }\n\n            ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n            warning$1(false, 'Each child in an array or iterator should have a unique ' + '\"key\" prop. See https://fb.me/react-warning-keys for ' + 'more information.');\n          };\n        }\n        var isArray = Array.isArray;\n\n        function coerceRef(returnFiber, current$$1, element) {\n          var mixedRef = element.ref;\n\n          if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {\n            {\n              if (returnFiber.mode & StrictMode) {\n                var componentName = getComponentName(returnFiber.type) || 'Component';\n\n                if (!didWarnAboutStringRefInStrictMode[componentName]) {\n                  warningWithoutStack$1(false, 'A string ref, \"%s\", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using createRef() instead.' + '\\n%s' + '\\n\\nLearn more about using refs safely here:' + '\\nhttps://fb.me/react-strict-mode-string-ref', mixedRef, getStackByFiberInDevAndProd(returnFiber));\n                  didWarnAboutStringRefInStrictMode[componentName] = true;\n                }\n              }\n            }\n\n            if (element._owner) {\n              var owner = element._owner;\n              var inst = void 0;\n\n              if (owner) {\n                var ownerFiber = owner;\n                !(ownerFiber.tag === ClassComponent) ? invariant(false, 'Function components cannot have refs.') : void 0;\n                inst = ownerFiber.stateNode;\n              }\n\n              !inst ? invariant(false, 'Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.', mixedRef) : void 0;\n              var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref\n\n              if (current$$1 !== null && current$$1.ref !== null && typeof current$$1.ref === 'function' && current$$1.ref._stringRef === stringRef) {\n                return current$$1.ref;\n              }\n\n              var ref = function ref(value) {\n                var refs = inst.refs;\n\n                if (refs === emptyRefsObject) {\n                  // This is a lazy pooled frozen object, so we need to initialize.\n                  refs = inst.refs = {};\n                }\n\n                if (value === null) {\n                  delete refs[stringRef];\n                } else {\n                  refs[stringRef] = value;\n                }\n              };\n\n              ref._stringRef = stringRef;\n              return ref;\n            } else {\n              !(typeof mixedRef === 'string') ? invariant(false, 'Expected ref to be a function, a string, an object returned by React.createRef(), or null.') : void 0;\n              !element._owner ? invariant(false, 'Element ref was specified as a string (%s) but no owner was set. This could happen for one of the following reasons:\\n1. You may be adding a ref to a function component\\n2. You may be adding a ref to a component that was not created inside a component\\'s render method\\n3. You have multiple copies of React loaded\\nSee https://fb.me/react-refs-must-have-owner for more information.', mixedRef) : void 0;\n            }\n          }\n\n          return mixedRef;\n        }\n\n        function throwOnInvalidObjectType(returnFiber, newChild) {\n          if (returnFiber.type !== 'textarea') {\n            var addendum = '';\n            {\n              addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + getCurrentFiberStackInDev();\n            }\n            invariant(false, 'Objects are not valid as a React child (found: %s).%s', Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild, addendum);\n          }\n        }\n\n        function warnOnFunctionType() {\n          var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + getCurrentFiberStackInDev();\n\n          if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {\n            return;\n          }\n\n          ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;\n          warning$1(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');\n        } // This wrapper function exists because I expect to clone the code in each path\n        // to be able to optimize each path individually by branching early. This needs\n        // a compiler or we can do it manually. Helpers that don't need this branching\n        // live outside of this function.\n\n\n        function ChildReconciler(shouldTrackSideEffects) {\n          function deleteChild(returnFiber, childToDelete) {\n            if (!shouldTrackSideEffects) {\n              // Noop.\n              return;\n            } // Deletions are added in reversed order so we add it to the front.\n            // At this point, the return fiber's effect list is empty except for\n            // deletions, so we can just append the deletion to the list. The remaining\n            // effects aren't added until the complete phase. Once we implement\n            // resuming, this may not be true.\n\n\n            var last = returnFiber.lastEffect;\n\n            if (last !== null) {\n              last.nextEffect = childToDelete;\n              returnFiber.lastEffect = childToDelete;\n            } else {\n              returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;\n            }\n\n            childToDelete.nextEffect = null;\n            childToDelete.effectTag = Deletion;\n          }\n\n          function deleteRemainingChildren(returnFiber, currentFirstChild) {\n            if (!shouldTrackSideEffects) {\n              // Noop.\n              return null;\n            } // TODO: For the shouldClone case, this could be micro-optimized a bit by\n            // assuming that after the first child we've already added everything.\n\n\n            var childToDelete = currentFirstChild;\n\n            while (childToDelete !== null) {\n              deleteChild(returnFiber, childToDelete);\n              childToDelete = childToDelete.sibling;\n            }\n\n            return null;\n          }\n\n          function mapRemainingChildren(returnFiber, currentFirstChild) {\n            // Add the remaining children to a temporary map so that we can find them by\n            // keys quickly. Implicit (null) keys get added to this set with their index\n            var existingChildren = new Map();\n            var existingChild = currentFirstChild;\n\n            while (existingChild !== null) {\n              if (existingChild.key !== null) {\n                existingChildren.set(existingChild.key, existingChild);\n              } else {\n                existingChildren.set(existingChild.index, existingChild);\n              }\n\n              existingChild = existingChild.sibling;\n            }\n\n            return existingChildren;\n          }\n\n          function useFiber(fiber, pendingProps, expirationTime) {\n            // We currently set sibling to null and index to 0 here because it is easy\n            // to forget to do before returning it. E.g. for the single child case.\n            var clone = createWorkInProgress(fiber, pendingProps, expirationTime);\n            clone.index = 0;\n            clone.sibling = null;\n            return clone;\n          }\n\n          function placeChild(newFiber, lastPlacedIndex, newIndex) {\n            newFiber.index = newIndex;\n\n            if (!shouldTrackSideEffects) {\n              // Noop.\n              return lastPlacedIndex;\n            }\n\n            var current$$1 = newFiber.alternate;\n\n            if (current$$1 !== null) {\n              var oldIndex = current$$1.index;\n\n              if (oldIndex < lastPlacedIndex) {\n                // This is a move.\n                newFiber.effectTag = Placement;\n                return lastPlacedIndex;\n              } else {\n                // This item can stay in place.\n                return oldIndex;\n              }\n            } else {\n              // This is an insertion.\n              newFiber.effectTag = Placement;\n              return lastPlacedIndex;\n            }\n          }\n\n          function placeSingleChild(newFiber) {\n            // This is simpler for the single child case. We only need to do a\n            // placement for inserting new children.\n            if (shouldTrackSideEffects && newFiber.alternate === null) {\n              newFiber.effectTag = Placement;\n            }\n\n            return newFiber;\n          }\n\n          function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {\n            if (current$$1 === null || current$$1.tag !== HostText) {\n              // Insert\n              var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);\n              created.return = returnFiber;\n              return created;\n            } else {\n              // Update\n              var existing = useFiber(current$$1, textContent, expirationTime);\n              existing.return = returnFiber;\n              return existing;\n            }\n          }\n\n          function updateElement(returnFiber, current$$1, element, expirationTime) {\n            if (current$$1 !== null && current$$1.elementType === element.type) {\n              // Move based on index\n              var existing = useFiber(current$$1, element.props, expirationTime);\n              existing.ref = coerceRef(returnFiber, current$$1, element);\n              existing.return = returnFiber;\n              {\n                existing._debugSource = element._source;\n                existing._debugOwner = element._owner;\n              }\n              return existing;\n            } else {\n              // Insert\n              var created = createFiberFromElement(element, returnFiber.mode, expirationTime);\n              created.ref = coerceRef(returnFiber, current$$1, element);\n              created.return = returnFiber;\n              return created;\n            }\n          }\n\n          function updatePortal(returnFiber, current$$1, portal, expirationTime) {\n            if (current$$1 === null || current$$1.tag !== HostPortal || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) {\n              // Insert\n              var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);\n              created.return = returnFiber;\n              return created;\n            } else {\n              // Update\n              var existing = useFiber(current$$1, portal.children || [], expirationTime);\n              existing.return = returnFiber;\n              return existing;\n            }\n          }\n\n          function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {\n            if (current$$1 === null || current$$1.tag !== Fragment) {\n              // Insert\n              var created = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key);\n              created.return = returnFiber;\n              return created;\n            } else {\n              // Update\n              var existing = useFiber(current$$1, fragment, expirationTime);\n              existing.return = returnFiber;\n              return existing;\n            }\n          }\n\n          function createChild(returnFiber, newChild, expirationTime) {\n            if (typeof newChild === 'string' || typeof newChild === 'number') {\n              // Text nodes don't have keys. If the previous node is implicitly keyed\n              // we can continue to replace it without aborting even if it is not a text\n              // node.\n              var created = createFiberFromText('' + newChild, returnFiber.mode, expirationTime);\n              created.return = returnFiber;\n              return created;\n            }\n\n            if (typeof newChild === 'object' && newChild !== null) {\n              switch (newChild.$$typeof) {\n                case REACT_ELEMENT_TYPE:\n                  {\n                    var _created = createFiberFromElement(newChild, returnFiber.mode, expirationTime);\n\n                    _created.ref = coerceRef(returnFiber, null, newChild);\n                    _created.return = returnFiber;\n                    return _created;\n                  }\n\n                case REACT_PORTAL_TYPE:\n                  {\n                    var _created2 = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);\n\n                    _created2.return = returnFiber;\n                    return _created2;\n                  }\n              }\n\n              if (isArray(newChild) || getIteratorFn(newChild)) {\n                var _created3 = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null);\n\n                _created3.return = returnFiber;\n                return _created3;\n              }\n\n              throwOnInvalidObjectType(returnFiber, newChild);\n            }\n\n            {\n              if (typeof newChild === 'function') {\n                warnOnFunctionType();\n              }\n            }\n            return null;\n          }\n\n          function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {\n            // Update the fiber if the keys match, otherwise return null.\n            var key = oldFiber !== null ? oldFiber.key : null;\n\n            if (typeof newChild === 'string' || typeof newChild === 'number') {\n              // Text nodes don't have keys. If the previous node is implicitly keyed\n              // we can continue to replace it without aborting even if it is not a text\n              // node.\n              if (key !== null) {\n                return null;\n              }\n\n              return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);\n            }\n\n            if (typeof newChild === 'object' && newChild !== null) {\n              switch (newChild.$$typeof) {\n                case REACT_ELEMENT_TYPE:\n                  {\n                    if (newChild.key === key) {\n                      if (newChild.type === REACT_FRAGMENT_TYPE) {\n                        return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);\n                      }\n\n                      return updateElement(returnFiber, oldFiber, newChild, expirationTime);\n                    } else {\n                      return null;\n                    }\n                  }\n\n                case REACT_PORTAL_TYPE:\n                  {\n                    if (newChild.key === key) {\n                      return updatePortal(returnFiber, oldFiber, newChild, expirationTime);\n                    } else {\n                      return null;\n                    }\n                  }\n              }\n\n              if (isArray(newChild) || getIteratorFn(newChild)) {\n                if (key !== null) {\n                  return null;\n                }\n\n                return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);\n              }\n\n              throwOnInvalidObjectType(returnFiber, newChild);\n            }\n\n            {\n              if (typeof newChild === 'function') {\n                warnOnFunctionType();\n              }\n            }\n            return null;\n          }\n\n          function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {\n            if (typeof newChild === 'string' || typeof newChild === 'number') {\n              // Text nodes don't have keys, so we neither have to check the old nor\n              // new node for the key. If both are text nodes, they match.\n              var matchedFiber = existingChildren.get(newIdx) || null;\n              return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);\n            }\n\n            if (typeof newChild === 'object' && newChild !== null) {\n              switch (newChild.$$typeof) {\n                case REACT_ELEMENT_TYPE:\n                  {\n                    var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n\n                    if (newChild.type === REACT_FRAGMENT_TYPE) {\n                      return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);\n                    }\n\n                    return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);\n                  }\n\n                case REACT_PORTAL_TYPE:\n                  {\n                    var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n\n                    return updatePortal(returnFiber, _matchedFiber2, newChild, expirationTime);\n                  }\n              }\n\n              if (isArray(newChild) || getIteratorFn(newChild)) {\n                var _matchedFiber3 = existingChildren.get(newIdx) || null;\n\n                return updateFragment(returnFiber, _matchedFiber3, newChild, expirationTime, null);\n              }\n\n              throwOnInvalidObjectType(returnFiber, newChild);\n            }\n\n            {\n              if (typeof newChild === 'function') {\n                warnOnFunctionType();\n              }\n            }\n            return null;\n          }\n          /**\n           * Warns if there is a duplicate or missing key\n           */\n\n\n          function warnOnInvalidKey(child, knownKeys) {\n            {\n              if (typeof child !== 'object' || child === null) {\n                return knownKeys;\n              }\n\n              switch (child.$$typeof) {\n                case REACT_ELEMENT_TYPE:\n                case REACT_PORTAL_TYPE:\n                  warnForMissingKey(child);\n                  var key = child.key;\n\n                  if (typeof key !== 'string') {\n                    break;\n                  }\n\n                  if (knownKeys === null) {\n                    knownKeys = new Set();\n                    knownKeys.add(key);\n                    break;\n                  }\n\n                  if (!knownKeys.has(key)) {\n                    knownKeys.add(key);\n                    break;\n                  }\n\n                  warning$1(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);\n                  break;\n\n                default:\n                  break;\n              }\n            }\n            return knownKeys;\n          }\n\n          function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {\n            // This algorithm can't optimize by searching from boths ends since we\n            // don't have backpointers on fibers. I'm trying to see how far we can get\n            // with that model. If it ends up not being worth the tradeoffs, we can\n            // add it later.\n            // Even with a two ended optimization, we'd want to optimize for the case\n            // where there are few changes and brute force the comparison instead of\n            // going for the Map. It'd like to explore hitting that path first in\n            // forward-only mode and only go for the Map once we notice that we need\n            // lots of look ahead. This doesn't handle reversal as well as two ended\n            // search but that's unusual. Besides, for the two ended optimization to\n            // work on Iterables, we'd need to copy the whole set.\n            // In this first iteration, we'll just live with hitting the bad case\n            // (adding everything to a Map) in for every insert/move.\n            // If you change this code, also update reconcileChildrenIterator() which\n            // uses the same algorithm.\n            {\n              // First, validate keys.\n              var knownKeys = null;\n\n              for (var i = 0; i < newChildren.length; i++) {\n                var child = newChildren[i];\n                knownKeys = warnOnInvalidKey(child, knownKeys);\n              }\n            }\n            var resultingFirstChild = null;\n            var previousNewFiber = null;\n            var oldFiber = currentFirstChild;\n            var lastPlacedIndex = 0;\n            var newIdx = 0;\n            var nextOldFiber = null;\n\n            for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n              if (oldFiber.index > newIdx) {\n                nextOldFiber = oldFiber;\n                oldFiber = null;\n              } else {\n                nextOldFiber = oldFiber.sibling;\n              }\n\n              var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);\n\n              if (newFiber === null) {\n                // TODO: This breaks on empty slots like null children. That's\n                // unfortunate because it triggers the slow path all the time. We need\n                // a better way to communicate whether this was a miss or null,\n                // boolean, undefined, etc.\n                if (oldFiber === null) {\n                  oldFiber = nextOldFiber;\n                }\n\n                break;\n              }\n\n              if (shouldTrackSideEffects) {\n                if (oldFiber && newFiber.alternate === null) {\n                  // We matched the slot, but we didn't reuse the existing fiber, so we\n                  // need to delete the existing child.\n                  deleteChild(returnFiber, oldFiber);\n                }\n              }\n\n              lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n              if (previousNewFiber === null) {\n                // TODO: Move out of the loop. This only happens for the first run.\n                resultingFirstChild = newFiber;\n              } else {\n                // TODO: Defer siblings if we're not at the right index for this slot.\n                // I.e. if we had null values before, then we want to defer this\n                // for each null value. However, we also don't want to call updateSlot\n                // with the previous one.\n                previousNewFiber.sibling = newFiber;\n              }\n\n              previousNewFiber = newFiber;\n              oldFiber = nextOldFiber;\n            }\n\n            if (newIdx === newChildren.length) {\n              // We've reached the end of the new children. We can delete the rest.\n              deleteRemainingChildren(returnFiber, oldFiber);\n              return resultingFirstChild;\n            }\n\n            if (oldFiber === null) {\n              // If we don't have any more existing children we can choose a fast path\n              // since the rest will all be insertions.\n              for (; newIdx < newChildren.length; newIdx++) {\n                var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);\n\n                if (!_newFiber) {\n                  continue;\n                }\n\n                lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);\n\n                if (previousNewFiber === null) {\n                  // TODO: Move out of the loop. This only happens for the first run.\n                  resultingFirstChild = _newFiber;\n                } else {\n                  previousNewFiber.sibling = _newFiber;\n                }\n\n                previousNewFiber = _newFiber;\n              }\n\n              return resultingFirstChild;\n            } // Add all children to a key map for quick lookups.\n\n\n            var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\n\n            for (; newIdx < newChildren.length; newIdx++) {\n              var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);\n\n              if (_newFiber2) {\n                if (shouldTrackSideEffects) {\n                  if (_newFiber2.alternate !== null) {\n                    // The new fiber is a work in progress, but if there exists a\n                    // current, that means that we reused the fiber. We need to delete\n                    // it from the child list so that we don't add it to the deletion\n                    // list.\n                    existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);\n                  }\n                }\n\n                lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);\n\n                if (previousNewFiber === null) {\n                  resultingFirstChild = _newFiber2;\n                } else {\n                  previousNewFiber.sibling = _newFiber2;\n                }\n\n                previousNewFiber = _newFiber2;\n              }\n            }\n\n            if (shouldTrackSideEffects) {\n              // Any existing children that weren't consumed above were deleted. We need\n              // to add them to the deletion list.\n              existingChildren.forEach(function (child) {\n                return deleteChild(returnFiber, child);\n              });\n            }\n\n            return resultingFirstChild;\n          }\n\n          function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {\n            // This is the same implementation as reconcileChildrenArray(),\n            // but using the iterator instead.\n            var iteratorFn = getIteratorFn(newChildrenIterable);\n            !(typeof iteratorFn === 'function') ? invariant(false, 'An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n            {\n              // We don't support rendering Generators because it's a mutation.\n              // See https://github.com/facebook/react/issues/12995\n              if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag\n              newChildrenIterable[Symbol.toStringTag] === 'Generator') {\n                !didWarnAboutGenerators ? warning$1(false, 'Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.') : void 0;\n                didWarnAboutGenerators = true;\n              } // Warn about using Maps as children\n\n\n              if (newChildrenIterable.entries === iteratorFn) {\n                !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;\n                didWarnAboutMaps = true;\n              } // First, validate keys.\n              // We'll get a different iterator later for the main pass.\n\n\n              var _newChildren = iteratorFn.call(newChildrenIterable);\n\n              if (_newChildren) {\n                var knownKeys = null;\n\n                var _step = _newChildren.next();\n\n                for (; !_step.done; _step = _newChildren.next()) {\n                  var child = _step.value;\n                  knownKeys = warnOnInvalidKey(child, knownKeys);\n                }\n              }\n            }\n            var newChildren = iteratorFn.call(newChildrenIterable);\n            !(newChildren != null) ? invariant(false, 'An iterable object provided no iterator.') : void 0;\n            var resultingFirstChild = null;\n            var previousNewFiber = null;\n            var oldFiber = currentFirstChild;\n            var lastPlacedIndex = 0;\n            var newIdx = 0;\n            var nextOldFiber = null;\n            var step = newChildren.next();\n\n            for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {\n              if (oldFiber.index > newIdx) {\n                nextOldFiber = oldFiber;\n                oldFiber = null;\n              } else {\n                nextOldFiber = oldFiber.sibling;\n              }\n\n              var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);\n\n              if (newFiber === null) {\n                // TODO: This breaks on empty slots like null children. That's\n                // unfortunate because it triggers the slow path all the time. We need\n                // a better way to communicate whether this was a miss or null,\n                // boolean, undefined, etc.\n                if (!oldFiber) {\n                  oldFiber = nextOldFiber;\n                }\n\n                break;\n              }\n\n              if (shouldTrackSideEffects) {\n                if (oldFiber && newFiber.alternate === null) {\n                  // We matched the slot, but we didn't reuse the existing fiber, so we\n                  // need to delete the existing child.\n                  deleteChild(returnFiber, oldFiber);\n                }\n              }\n\n              lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n              if (previousNewFiber === null) {\n                // TODO: Move out of the loop. This only happens for the first run.\n                resultingFirstChild = newFiber;\n              } else {\n                // TODO: Defer siblings if we're not at the right index for this slot.\n                // I.e. if we had null values before, then we want to defer this\n                // for each null value. However, we also don't want to call updateSlot\n                // with the previous one.\n                previousNewFiber.sibling = newFiber;\n              }\n\n              previousNewFiber = newFiber;\n              oldFiber = nextOldFiber;\n            }\n\n            if (step.done) {\n              // We've reached the end of the new children. We can delete the rest.\n              deleteRemainingChildren(returnFiber, oldFiber);\n              return resultingFirstChild;\n            }\n\n            if (oldFiber === null) {\n              // If we don't have any more existing children we can choose a fast path\n              // since the rest will all be insertions.\n              for (; !step.done; newIdx++, step = newChildren.next()) {\n                var _newFiber3 = createChild(returnFiber, step.value, expirationTime);\n\n                if (_newFiber3 === null) {\n                  continue;\n                }\n\n                lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);\n\n                if (previousNewFiber === null) {\n                  // TODO: Move out of the loop. This only happens for the first run.\n                  resultingFirstChild = _newFiber3;\n                } else {\n                  previousNewFiber.sibling = _newFiber3;\n                }\n\n                previousNewFiber = _newFiber3;\n              }\n\n              return resultingFirstChild;\n            } // Add all children to a key map for quick lookups.\n\n\n            var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\n\n            for (; !step.done; newIdx++, step = newChildren.next()) {\n              var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);\n\n              if (_newFiber4 !== null) {\n                if (shouldTrackSideEffects) {\n                  if (_newFiber4.alternate !== null) {\n                    // The new fiber is a work in progress, but if there exists a\n                    // current, that means that we reused the fiber. We need to delete\n                    // it from the child list so that we don't add it to the deletion\n                    // list.\n                    existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);\n                  }\n                }\n\n                lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);\n\n                if (previousNewFiber === null) {\n                  resultingFirstChild = _newFiber4;\n                } else {\n                  previousNewFiber.sibling = _newFiber4;\n                }\n\n                previousNewFiber = _newFiber4;\n              }\n            }\n\n            if (shouldTrackSideEffects) {\n              // Any existing children that weren't consumed above were deleted. We need\n              // to add them to the deletion list.\n              existingChildren.forEach(function (child) {\n                return deleteChild(returnFiber, child);\n              });\n            }\n\n            return resultingFirstChild;\n          }\n\n          function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {\n            // There's no need to check for keys on text nodes since we don't have a\n            // way to define them.\n            if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n              // We already have an existing node so let's just update it and delete\n              // the rest.\n              deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n              var existing = useFiber(currentFirstChild, textContent, expirationTime);\n              existing.return = returnFiber;\n              return existing;\n            } // The existing first child is not a text node so we need to create one\n            // and delete the existing ones.\n\n\n            deleteRemainingChildren(returnFiber, currentFirstChild);\n            var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);\n            created.return = returnFiber;\n            return created;\n          }\n\n          function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {\n            var key = element.key;\n            var child = currentFirstChild;\n\n            while (child !== null) {\n              // TODO: If key === null and child.key === null, then this only applies to\n              // the first item in the list.\n              if (child.key === key) {\n                if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.elementType === element.type) {\n                  deleteRemainingChildren(returnFiber, child.sibling);\n                  var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);\n                  existing.ref = coerceRef(returnFiber, child, element);\n                  existing.return = returnFiber;\n                  {\n                    existing._debugSource = element._source;\n                    existing._debugOwner = element._owner;\n                  }\n                  return existing;\n                } else {\n                  deleteRemainingChildren(returnFiber, child);\n                  break;\n                }\n              } else {\n                deleteChild(returnFiber, child);\n              }\n\n              child = child.sibling;\n            }\n\n            if (element.type === REACT_FRAGMENT_TYPE) {\n              var created = createFiberFromFragment(element.props.children, returnFiber.mode, expirationTime, element.key);\n              created.return = returnFiber;\n              return created;\n            } else {\n              var _created4 = createFiberFromElement(element, returnFiber.mode, expirationTime);\n\n              _created4.ref = coerceRef(returnFiber, currentFirstChild, element);\n              _created4.return = returnFiber;\n              return _created4;\n            }\n          }\n\n          function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {\n            var key = portal.key;\n            var child = currentFirstChild;\n\n            while (child !== null) {\n              // TODO: If key === null and child.key === null, then this only applies to\n              // the first item in the list.\n              if (child.key === key) {\n                if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {\n                  deleteRemainingChildren(returnFiber, child.sibling);\n                  var existing = useFiber(child, portal.children || [], expirationTime);\n                  existing.return = returnFiber;\n                  return existing;\n                } else {\n                  deleteRemainingChildren(returnFiber, child);\n                  break;\n                }\n              } else {\n                deleteChild(returnFiber, child);\n              }\n\n              child = child.sibling;\n            }\n\n            var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);\n            created.return = returnFiber;\n            return created;\n          } // This API will tag the children with the side-effect of the reconciliation\n          // itself. They will be added to the side-effect list as we pass through the\n          // children and the parent.\n\n\n          function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {\n            // This function is not recursive.\n            // If the top level item is an array, we treat it as a set of children,\n            // not as a fragment. Nested arrays on the other hand will be treated as\n            // fragment nodes. Recursion happens at the normal flow.\n            // Handle top level unkeyed fragments as if they were arrays.\n            // This leads to an ambiguity between <>{[...]}</> and <>...</>.\n            // We treat the ambiguous cases above the same.\n            var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;\n\n            if (isUnkeyedTopLevelFragment) {\n              newChild = newChild.props.children;\n            } // Handle object types\n\n\n            var isObject = typeof newChild === 'object' && newChild !== null;\n\n            if (isObject) {\n              switch (newChild.$$typeof) {\n                case REACT_ELEMENT_TYPE:\n                  return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));\n\n                case REACT_PORTAL_TYPE:\n                  return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));\n              }\n            }\n\n            if (typeof newChild === 'string' || typeof newChild === 'number') {\n              return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));\n            }\n\n            if (isArray(newChild)) {\n              return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);\n            }\n\n            if (getIteratorFn(newChild)) {\n              return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);\n            }\n\n            if (isObject) {\n              throwOnInvalidObjectType(returnFiber, newChild);\n            }\n\n            {\n              if (typeof newChild === 'function') {\n                warnOnFunctionType();\n              }\n            }\n\n            if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {\n              // If the new child is undefined, and the return fiber is a composite\n              // component, throw an error. If Fiber return types are disabled,\n              // we already threw above.\n              switch (returnFiber.tag) {\n                case ClassComponent:\n                  {\n                    {\n                      var instance = returnFiber.stateNode;\n\n                      if (instance.render._isMockFunction) {\n                        // We allow auto-mocks to proceed as if they're returning null.\n                        break;\n                      }\n                    }\n                  }\n                // Intentionally fall through to the next case, which handles both\n                // functions and classes\n                // eslint-disable-next-lined no-fallthrough\n\n                case FunctionComponent:\n                  {\n                    var Component = returnFiber.type;\n                    invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');\n                  }\n              }\n            } // Remaining cases are all treated as empty.\n\n\n            return deleteRemainingChildren(returnFiber, currentFirstChild);\n          }\n\n          return reconcileChildFibers;\n        }\n\n        var reconcileChildFibers = ChildReconciler(true);\n        var mountChildFibers = ChildReconciler(false);\n\n        function cloneChildFibers(current$$1, workInProgress) {\n          !(current$$1 === null || workInProgress.child === current$$1.child) ? invariant(false, 'Resuming work not yet implemented.') : void 0;\n\n          if (workInProgress.child === null) {\n            return;\n          }\n\n          var currentChild = workInProgress.child;\n          var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);\n          workInProgress.child = newChild;\n          newChild.return = workInProgress;\n\n          while (currentChild.sibling !== null) {\n            currentChild = currentChild.sibling;\n            newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);\n            newChild.return = workInProgress;\n          }\n\n          newChild.sibling = null;\n        } // The deepest Fiber on the stack involved in a hydration context.\n        // This may have been an insertion or a hydration.\n\n\n        var hydrationParentFiber = null;\n        var nextHydratableInstance = null;\n        var isHydrating = false;\n\n        function enterHydrationState(fiber) {\n          if (!supportsHydration) {\n            return false;\n          }\n\n          var parentInstance = fiber.stateNode.containerInfo;\n          nextHydratableInstance = getFirstHydratableChild(parentInstance);\n          hydrationParentFiber = fiber;\n          isHydrating = true;\n          return true;\n        }\n\n        function deleteHydratableInstance(returnFiber, instance) {\n          {\n            switch (returnFiber.tag) {\n              case HostRoot:\n                didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);\n                break;\n\n              case HostComponent:\n                didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);\n                break;\n            }\n          }\n          var childToDelete = createFiberFromHostInstanceForDeletion();\n          childToDelete.stateNode = instance;\n          childToDelete.return = returnFiber;\n          childToDelete.effectTag = Deletion; // This might seem like it belongs on progressedFirstDeletion. However,\n          // these children are not part of the reconciliation list of children.\n          // Even if we abort and rereconcile the children, that will try to hydrate\n          // again and the nodes are still in the host tree so these will be\n          // recreated.\n\n          if (returnFiber.lastEffect !== null) {\n            returnFiber.lastEffect.nextEffect = childToDelete;\n            returnFiber.lastEffect = childToDelete;\n          } else {\n            returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;\n          }\n        }\n\n        function insertNonHydratedInstance(returnFiber, fiber) {\n          fiber.effectTag |= Placement;\n          {\n            switch (returnFiber.tag) {\n              case HostRoot:\n                {\n                  var parentContainer = returnFiber.stateNode.containerInfo;\n\n                  switch (fiber.tag) {\n                    case HostComponent:\n                      var type = fiber.type;\n                      var props = fiber.pendingProps;\n                      didNotFindHydratableContainerInstance(parentContainer, type, props);\n                      break;\n\n                    case HostText:\n                      var text = fiber.pendingProps;\n                      didNotFindHydratableContainerTextInstance(parentContainer, text);\n                      break;\n                  }\n\n                  break;\n                }\n\n              case HostComponent:\n                {\n                  var parentType = returnFiber.type;\n                  var parentProps = returnFiber.memoizedProps;\n                  var parentInstance = returnFiber.stateNode;\n\n                  switch (fiber.tag) {\n                    case HostComponent:\n                      var _type = fiber.type;\n                      var _props = fiber.pendingProps;\n                      didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);\n                      break;\n\n                    case HostText:\n                      var _text = fiber.pendingProps;\n                      didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);\n                      break;\n                  }\n\n                  break;\n                }\n\n              default:\n                return;\n            }\n          }\n        }\n\n        function tryHydrate(fiber, nextInstance) {\n          switch (fiber.tag) {\n            case HostComponent:\n              {\n                var type = fiber.type;\n                var props = fiber.pendingProps;\n                var instance = canHydrateInstance(nextInstance, type, props);\n\n                if (instance !== null) {\n                  fiber.stateNode = instance;\n                  return true;\n                }\n\n                return false;\n              }\n\n            case HostText:\n              {\n                var text = fiber.pendingProps;\n                var textInstance = canHydrateTextInstance(nextInstance, text);\n\n                if (textInstance !== null) {\n                  fiber.stateNode = textInstance;\n                  return true;\n                }\n\n                return false;\n              }\n\n            default:\n              return false;\n          }\n        }\n\n        function tryToClaimNextHydratableInstance(fiber) {\n          if (!isHydrating) {\n            return;\n          }\n\n          var nextInstance = nextHydratableInstance;\n\n          if (!nextInstance) {\n            // Nothing to hydrate. Make it an insertion.\n            insertNonHydratedInstance(hydrationParentFiber, fiber);\n            isHydrating = false;\n            hydrationParentFiber = fiber;\n            return;\n          }\n\n          var firstAttemptedInstance = nextInstance;\n\n          if (!tryHydrate(fiber, nextInstance)) {\n            // If we can't hydrate this instance let's try the next one.\n            // We use this as a heuristic. It's based on intuition and not data so it\n            // might be flawed or unnecessary.\n            nextInstance = getNextHydratableSibling(firstAttemptedInstance);\n\n            if (!nextInstance || !tryHydrate(fiber, nextInstance)) {\n              // Nothing to hydrate. Make it an insertion.\n              insertNonHydratedInstance(hydrationParentFiber, fiber);\n              isHydrating = false;\n              hydrationParentFiber = fiber;\n              return;\n            } // We matched the next one, we'll now assume that the first one was\n            // superfluous and we'll delete it. Since we can't eagerly delete it\n            // we'll have to schedule a deletion. To do that, this node needs a dummy\n            // fiber associated with it.\n\n\n            deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);\n          }\n\n          hydrationParentFiber = fiber;\n          nextHydratableInstance = getFirstHydratableChild(nextInstance);\n        }\n\n        function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {\n          if (!supportsHydration) {\n            invariant(false, 'Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');\n          }\n\n          var instance = fiber.stateNode;\n          var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber); // TODO: Type this specific to this type of component.\n\n          fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there\n          // is a new ref we mark this as an update.\n\n          if (updatePayload !== null) {\n            return true;\n          }\n\n          return false;\n        }\n\n        function prepareToHydrateHostTextInstance(fiber) {\n          if (!supportsHydration) {\n            invariant(false, 'Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');\n          }\n\n          var textInstance = fiber.stateNode;\n          var textContent = fiber.memoizedProps;\n          var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);\n          {\n            if (shouldUpdate) {\n              // We assume that prepareToHydrateHostTextInstance is called in a context where the\n              // hydration parent is the parent host component of this host text.\n              var returnFiber = hydrationParentFiber;\n\n              if (returnFiber !== null) {\n                switch (returnFiber.tag) {\n                  case HostRoot:\n                    {\n                      var parentContainer = returnFiber.stateNode.containerInfo;\n                      didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);\n                      break;\n                    }\n\n                  case HostComponent:\n                    {\n                      var parentType = returnFiber.type;\n                      var parentProps = returnFiber.memoizedProps;\n                      var parentInstance = returnFiber.stateNode;\n                      didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);\n                      break;\n                    }\n                }\n              }\n            }\n          }\n          return shouldUpdate;\n        }\n\n        function popToNextHostParent(fiber) {\n          var parent = fiber.return;\n\n          while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot) {\n            parent = parent.return;\n          }\n\n          hydrationParentFiber = parent;\n        }\n\n        function popHydrationState(fiber) {\n          if (!supportsHydration) {\n            return false;\n          }\n\n          if (fiber !== hydrationParentFiber) {\n            // We're deeper than the current hydration context, inside an inserted\n            // tree.\n            return false;\n          }\n\n          if (!isHydrating) {\n            // If we're not currently hydrating but we're in a hydration context, then\n            // we were an insertion and now need to pop up reenter hydration of our\n            // siblings.\n            popToNextHostParent(fiber);\n            isHydrating = true;\n            return false;\n          }\n\n          var type = fiber.type; // If we have any remaining hydratable nodes, we need to delete them now.\n          // We only do this deeper than head and body since they tend to have random\n          // other nodes in them. We also ignore components with pure text content in\n          // side of them.\n          // TODO: Better heuristic.\n\n          if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {\n            var nextInstance = nextHydratableInstance;\n\n            while (nextInstance) {\n              deleteHydratableInstance(fiber, nextInstance);\n              nextInstance = getNextHydratableSibling(nextInstance);\n            }\n          }\n\n          popToNextHostParent(fiber);\n          nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;\n          return true;\n        }\n\n        function resetHydrationState() {\n          if (!supportsHydration) {\n            return;\n          }\n\n          hydrationParentFiber = null;\n          nextHydratableInstance = null;\n          isHydrating = false;\n        }\n\n        var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;\n        var didWarnAboutBadClass = void 0;\n        var didWarnAboutContextTypeOnFunctionComponent = void 0;\n        var didWarnAboutGetDerivedStateOnFunctionComponent = void 0;\n        var didWarnAboutFunctionRefs = void 0;\n        var didWarnAboutReassigningProps = void 0;\n        {\n          didWarnAboutBadClass = {};\n          didWarnAboutContextTypeOnFunctionComponent = {};\n          didWarnAboutGetDerivedStateOnFunctionComponent = {};\n          didWarnAboutFunctionRefs = {};\n          didWarnAboutReassigningProps = false;\n        }\n\n        function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {\n          if (current$$1 === null) {\n            // If this is a fresh new component that hasn't been rendered yet, we\n            // won't update its child set by applying minimal side-effects. Instead,\n            // we will add them all to the child before it gets rendered. That means\n            // we can optimize this reconciliation pass by not tracking side-effects.\n            workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);\n          } else {\n            // If the current child is the same as the work in progress, it means that\n            // we haven't yet started any work on these children. Therefore, we use\n            // the clone algorithm to create a copy of all the current children.\n            // If we had any progressed work already, that is invalid at this point so\n            // let's throw it out.\n            workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);\n          }\n        }\n\n        function forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime) {\n          // This function is fork of reconcileChildren. It's used in cases where we\n          // want to reconcile without matching against the existing set. This has the\n          // effect of all current children being unmounted; even if the type and key\n          // are the same, the old child is unmounted and a new child is created.\n          //\n          // To do this, we're going to go through the reconcile algorithm twice. In\n          // the first pass, we schedule a deletion for all the current children by\n          // passing null.\n          workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime); // In the second pass, we mount the new children. The trick here is that we\n          // pass null in place of where we usually pass the current child set. This has\n          // the effect of remounting all children regardless of whether their their\n          // identity matches.\n\n          workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);\n        }\n\n        function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {\n          {\n            if (workInProgress.type !== workInProgress.elementType) {\n              // Lazy component props can't be validated in createElement\n              // because they're only guaranteed to be resolved here.\n              var innerPropTypes = Component.propTypes;\n\n              if (innerPropTypes) {\n                checkPropTypes(innerPropTypes, nextProps, // Resolved props\n                'prop', getComponentName(Component), getCurrentFiberStackInDev);\n              }\n            }\n          }\n          var render = Component.render;\n          var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent\n\n          var nextChildren = void 0;\n          prepareToReadContext(workInProgress, renderExpirationTime);\n          prepareToUseHooks(current$$1, workInProgress, renderExpirationTime);\n          {\n            ReactCurrentOwner$3.current = workInProgress;\n            setCurrentPhase('render');\n            nextChildren = render(nextProps, ref);\n            setCurrentPhase(null);\n          }\n          nextChildren = finishHooks(render, nextProps, nextChildren, ref); // React DevTools reads this flag.\n\n          workInProgress.effectTag |= PerformedWork;\n          reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\n          return workInProgress.child;\n        }\n\n        function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {\n          if (current$$1 === null) {\n            var type = Component.type;\n\n            if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.\n            Component.defaultProps === undefined) {\n              // If this is a plain function component without default props,\n              // and with only the default shallow comparison, we upgrade it\n              // to a SimpleMemoComponent to allow fast path updates.\n              workInProgress.tag = SimpleMemoComponent;\n              workInProgress.type = type;\n              {\n                validateFunctionComponentInDev(workInProgress, type);\n              }\n              return updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);\n            }\n\n            {\n              var innerPropTypes = type.propTypes;\n\n              if (innerPropTypes) {\n                // Inner memo component props aren't currently validated in createElement.\n                // We could move it there, but we'd still need this for lazy code path.\n                checkPropTypes(innerPropTypes, nextProps, // Resolved props\n                'prop', getComponentName(type), getCurrentFiberStackInDev);\n              }\n            }\n            var child = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);\n            child.ref = workInProgress.ref;\n            child.return = workInProgress;\n            workInProgress.child = child;\n            return child;\n          }\n\n          {\n            var _type = Component.type;\n            var _innerPropTypes = _type.propTypes;\n\n            if (_innerPropTypes) {\n              // Inner memo component props aren't currently validated in createElement.\n              // We could move it there, but we'd still need this for lazy code path.\n              checkPropTypes(_innerPropTypes, nextProps, // Resolved props\n              'prop', getComponentName(_type), getCurrentFiberStackInDev);\n            }\n          }\n          var currentChild = current$$1.child; // This is always exactly one child\n\n          if (updateExpirationTime < renderExpirationTime) {\n            // This will be the props with resolved defaultProps,\n            // unlike current.memoizedProps which will be the unresolved ones.\n            var prevProps = currentChild.memoizedProps; // Default to shallow comparison\n\n            var compare = Component.compare;\n            compare = compare !== null ? compare : shallowEqual;\n\n            if (compare(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {\n              return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\n            }\n          } // React DevTools reads this flag.\n\n\n          workInProgress.effectTag |= PerformedWork;\n          var newChild = createWorkInProgress(currentChild, nextProps, renderExpirationTime);\n          newChild.ref = workInProgress.ref;\n          newChild.return = workInProgress;\n          workInProgress.child = newChild;\n          return newChild;\n        }\n\n        function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {\n          {\n            if (workInProgress.type !== workInProgress.elementType) {\n              // Lazy component props can't be validated in createElement\n              // because they're only guaranteed to be resolved here.\n              var outerMemoType = workInProgress.elementType;\n\n              if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n                // We warn when you define propTypes on lazy()\n                // so let's just skip over it to find memo() outer wrapper.\n                // Inner props for memo are validated later.\n                outerMemoType = refineResolvedLazyComponent(outerMemoType);\n              }\n\n              var outerPropTypes = outerMemoType && outerMemoType.propTypes;\n\n              if (outerPropTypes) {\n                checkPropTypes(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\n                'prop', getComponentName(outerMemoType), getCurrentFiberStackInDev);\n              } // Inner propTypes will be validated in the function component path.\n\n            }\n          }\n\n          if (current$$1 !== null && updateExpirationTime < renderExpirationTime) {\n            var prevProps = current$$1.memoizedProps;\n\n            if (shallowEqual(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {\n              return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\n            }\n          }\n\n          return updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);\n        }\n\n        function updateFragment(current$$1, workInProgress, renderExpirationTime) {\n          var nextChildren = workInProgress.pendingProps;\n          reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\n          return workInProgress.child;\n        }\n\n        function updateMode(current$$1, workInProgress, renderExpirationTime) {\n          var nextChildren = workInProgress.pendingProps.children;\n          reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\n          return workInProgress.child;\n        }\n\n        function updateProfiler(current$$1, workInProgress, renderExpirationTime) {\n          if (enableProfilerTimer) {\n            workInProgress.effectTag |= Update;\n          }\n\n          var nextProps = workInProgress.pendingProps;\n          var nextChildren = nextProps.children;\n          reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\n          return workInProgress.child;\n        }\n\n        function markRef(current$$1, workInProgress) {\n          var ref = workInProgress.ref;\n\n          if (current$$1 === null && ref !== null || current$$1 !== null && current$$1.ref !== ref) {\n            // Schedule a Ref effect\n            workInProgress.effectTag |= Ref;\n          }\n        }\n\n        function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {\n          {\n            if (workInProgress.type !== workInProgress.elementType) {\n              // Lazy component props can't be validated in createElement\n              // because they're only guaranteed to be resolved here.\n              var innerPropTypes = Component.propTypes;\n\n              if (innerPropTypes) {\n                checkPropTypes(innerPropTypes, nextProps, // Resolved props\n                'prop', getComponentName(Component), getCurrentFiberStackInDev);\n              }\n            }\n          }\n          var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n          var context = getMaskedContext(workInProgress, unmaskedContext);\n          var nextChildren = void 0;\n          prepareToReadContext(workInProgress, renderExpirationTime);\n          prepareToUseHooks(current$$1, workInProgress, renderExpirationTime);\n          {\n            ReactCurrentOwner$3.current = workInProgress;\n            setCurrentPhase('render');\n            nextChildren = Component(nextProps, context);\n            setCurrentPhase(null);\n          }\n          nextChildren = finishHooks(Component, nextProps, nextChildren, context); // React DevTools reads this flag.\n\n          workInProgress.effectTag |= PerformedWork;\n          reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\n          return workInProgress.child;\n        }\n\n        function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {\n          {\n            if (workInProgress.type !== workInProgress.elementType) {\n              // Lazy component props can't be validated in createElement\n              // because they're only guaranteed to be resolved here.\n              var innerPropTypes = Component.propTypes;\n\n              if (innerPropTypes) {\n                checkPropTypes(innerPropTypes, nextProps, // Resolved props\n                'prop', getComponentName(Component), getCurrentFiberStackInDev);\n              }\n            }\n          } // Push context providers early to prevent context stack mismatches.\n          // During mounting we don't know the child context yet as the instance doesn't exist.\n          // We will invalidate the child context in finishClassComponent() right after rendering.\n\n          var hasContext = void 0;\n\n          if (isContextProvider(Component)) {\n            hasContext = true;\n            pushContextProvider(workInProgress);\n          } else {\n            hasContext = false;\n          }\n\n          prepareToReadContext(workInProgress, renderExpirationTime);\n          var instance = workInProgress.stateNode;\n          var shouldUpdate = void 0;\n\n          if (instance === null) {\n            if (current$$1 !== null) {\n              // An class component without an instance only mounts if it suspended\n              // inside a non- concurrent tree, in an inconsistent state. We want to\n              // tree it like a new mount, even though an empty version of it already\n              // committed. Disconnect the alternate pointers.\n              current$$1.alternate = null;\n              workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\n\n              workInProgress.effectTag |= Placement;\n            } // In the initial pass we might need to construct the instance.\n\n\n            constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);\n            mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);\n            shouldUpdate = true;\n          } else if (current$$1 === null) {\n            // In a resume, we'll already have an instance we can reuse.\n            shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);\n          } else {\n            shouldUpdate = updateClassInstance(current$$1, workInProgress, Component, nextProps, renderExpirationTime);\n          }\n\n          var nextUnitOfWork = finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime);\n          {\n            var inst = workInProgress.stateNode;\n\n            if (inst.props !== nextProps) {\n              !didWarnAboutReassigningProps ? warning$1(false, 'It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentName(workInProgress.type) || 'a component') : void 0;\n              didWarnAboutReassigningProps = true;\n            }\n          }\n          return nextUnitOfWork;\n        }\n\n        function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {\n          // Refs should update even if shouldComponentUpdate returns false\n          markRef(current$$1, workInProgress);\n          var didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;\n\n          if (!shouldUpdate && !didCaptureError) {\n            // Context providers should defer to sCU for rendering\n            if (hasContext) {\n              invalidateContextProvider(workInProgress, Component, false);\n            }\n\n            return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\n          }\n\n          var instance = workInProgress.stateNode; // Rerender\n\n          ReactCurrentOwner$3.current = workInProgress;\n          var nextChildren = void 0;\n\n          if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {\n            // If we captured an error, but getDerivedStateFrom catch is not defined,\n            // unmount all the children. componentDidCatch will schedule an update to\n            // re-render a fallback. This is temporary until we migrate everyone to\n            // the new API.\n            // TODO: Warn in a future release.\n            nextChildren = null;\n\n            if (enableProfilerTimer) {\n              stopProfilerTimerIfRunning(workInProgress);\n            }\n          } else {\n            {\n              setCurrentPhase('render');\n              nextChildren = instance.render();\n\n              if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\n                instance.render();\n              }\n\n              setCurrentPhase(null);\n            }\n          } // React DevTools reads this flag.\n\n\n          workInProgress.effectTag |= PerformedWork;\n\n          if (current$$1 !== null && didCaptureError) {\n            // If we're recovering from an error, reconcile without reusing any of\n            // the existing children. Conceptually, the normal children and the children\n            // that are shown on error are two different sets, so we shouldn't reuse\n            // normal children even if their identities match.\n            forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime);\n          } else {\n            reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\n          } // Memoize state using the values we just used to render.\n          // TODO: Restructure so we never read values from the instance.\n\n\n          workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.\n\n          if (hasContext) {\n            invalidateContextProvider(workInProgress, Component, true);\n          }\n\n          return workInProgress.child;\n        }\n\n        function pushHostRootContext(workInProgress) {\n          var root = workInProgress.stateNode;\n\n          if (root.pendingContext) {\n            pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);\n          } else if (root.context) {\n            // Should always be set\n            pushTopLevelContextObject(workInProgress, root.context, false);\n          }\n\n          pushHostContainer(workInProgress, root.containerInfo);\n        }\n\n        function updateHostRoot(current$$1, workInProgress, renderExpirationTime) {\n          pushHostRootContext(workInProgress);\n          var updateQueue = workInProgress.updateQueue;\n          !(updateQueue !== null) ? invariant(false, 'If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n          var nextProps = workInProgress.pendingProps;\n          var prevState = workInProgress.memoizedState;\n          var prevChildren = prevState !== null ? prevState.element : null;\n          processUpdateQueue(workInProgress, updateQueue, nextProps, null, renderExpirationTime);\n          var nextState = workInProgress.memoizedState; // Caution: React DevTools currently depends on this property\n          // being called \"element\".\n\n          var nextChildren = nextState.element;\n\n          if (nextChildren === prevChildren) {\n            // If the state is the same as before, that's a bailout because we had\n            // no work that expires at this time.\n            resetHydrationState();\n            return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\n          }\n\n          var root = workInProgress.stateNode;\n\n          if ((current$$1 === null || current$$1.child === null) && root.hydrate && enterHydrationState(workInProgress)) {\n            // If we don't have any current children this might be the first pass.\n            // We always try to hydrate. If this isn't a hydration pass there won't\n            // be any children to hydrate which is effectively the same thing as\n            // not hydrating.\n            // This is a bit of a hack. We track the host root as a placement to\n            // know that we're currently in a mounting state. That way isMounted\n            // works as expected. We must reset this before committing.\n            // TODO: Delete this when we delete isMounted and findDOMNode.\n            workInProgress.effectTag |= Placement; // Ensure that children mount into this root without tracking\n            // side-effects. This ensures that we don't store Placement effects on\n            // nodes that will be hydrated.\n\n            workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);\n          } else {\n            // Otherwise reset hydration state in case we aborted and resumed another\n            // root.\n            reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\n            resetHydrationState();\n          }\n\n          return workInProgress.child;\n        }\n\n        function updateHostComponent(current$$1, workInProgress, renderExpirationTime) {\n          pushHostContext(workInProgress);\n\n          if (current$$1 === null) {\n            tryToClaimNextHydratableInstance(workInProgress);\n          }\n\n          var type = workInProgress.type;\n          var nextProps = workInProgress.pendingProps;\n          var prevProps = current$$1 !== null ? current$$1.memoizedProps : null;\n          var nextChildren = nextProps.children;\n          var isDirectTextChild = shouldSetTextContent(type, nextProps);\n\n          if (isDirectTextChild) {\n            // We special case a direct text child of a host node. This is a common\n            // case. We won't handle it as a reified child. We will instead handle\n            // this in the host environment that also have access to this prop. That\n            // avoids allocating another HostText fiber and traversing it.\n            nextChildren = null;\n          } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {\n            // If we're switching from a direct text child to a normal child, or to\n            // empty, we need to schedule the text content to be reset.\n            workInProgress.effectTag |= ContentReset;\n          }\n\n          markRef(current$$1, workInProgress); // Check the host config to see if the children are offscreen/hidden.\n\n          if (renderExpirationTime !== Never && workInProgress.mode & ConcurrentMode && shouldDeprioritizeSubtree(type, nextProps)) {\n            // Schedule this fiber to re-render at offscreen priority. Then bailout.\n            workInProgress.expirationTime = Never;\n            return null;\n          }\n\n          reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\n          return workInProgress.child;\n        }\n\n        function updateHostText(current$$1, workInProgress) {\n          if (current$$1 === null) {\n            tryToClaimNextHydratableInstance(workInProgress);\n          } // Nothing to do here. This is terminal. We'll do the completion step\n          // immediately after.\n\n\n          return null;\n        }\n\n        function mountLazyComponent(_current, workInProgress, elementType, updateExpirationTime, renderExpirationTime) {\n          if (_current !== null) {\n            // An lazy component only mounts if it suspended inside a non-\n            // concurrent tree, in an inconsistent state. We want to treat it like\n            // a new mount, even though an empty version of it already committed.\n            // Disconnect the alternate pointers.\n            _current.alternate = null;\n            workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\n\n            workInProgress.effectTag |= Placement;\n          }\n\n          var props = workInProgress.pendingProps; // We can't start a User Timing measurement with correct label yet.\n          // Cancel and resume right after we know the tag.\n\n          cancelWorkTimer(workInProgress);\n          var Component = readLazyComponentType(elementType); // Store the unwrapped component in the type.\n\n          workInProgress.type = Component;\n          var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);\n          startWorkTimer(workInProgress);\n          var resolvedProps = resolveDefaultProps(Component, props);\n          var child = void 0;\n\n          switch (resolvedTag) {\n            case FunctionComponent:\n              {\n                child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);\n                break;\n              }\n\n            case ClassComponent:\n              {\n                child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);\n                break;\n              }\n\n            case ForwardRef:\n              {\n                child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderExpirationTime);\n                break;\n              }\n\n            case MemoComponent:\n              {\n                {\n                  if (workInProgress.type !== workInProgress.elementType) {\n                    var outerPropTypes = Component.propTypes;\n\n                    if (outerPropTypes) {\n                      checkPropTypes(outerPropTypes, resolvedProps, // Resolved for outer only\n                      'prop', getComponentName(Component), getCurrentFiberStackInDev);\n                    }\n                  }\n                }\n                child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\n                updateExpirationTime, renderExpirationTime);\n                break;\n              }\n\n            default:\n              {\n                var hint = '';\n                {\n                  if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {\n                    hint = ' Did you wrap a component in React.lazy() more than once?';\n                  }\n                } // This message intentionally doesn't mention ForwardRef or MemoComponent\n                // because the fact that it's a separate type of work is an\n                // implementation detail.\n\n                invariant(false, 'Element type is invalid. Received a promise that resolves to: %s. Lazy element type must resolve to a class or function.%s', Component, hint);\n              }\n          }\n\n          return child;\n        }\n\n        function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderExpirationTime) {\n          if (_current !== null) {\n            // An incomplete component only mounts if it suspended inside a non-\n            // concurrent tree, in an inconsistent state. We want to treat it like\n            // a new mount, even though an empty version of it already committed.\n            // Disconnect the alternate pointers.\n            _current.alternate = null;\n            workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\n\n            workInProgress.effectTag |= Placement;\n          } // Promote the fiber to a class and try rendering again.\n\n\n          workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`\n          // Push context providers early to prevent context stack mismatches.\n          // During mounting we don't know the child context yet as the instance doesn't exist.\n          // We will invalidate the child context in finishClassComponent() right after rendering.\n\n          var hasContext = void 0;\n\n          if (isContextProvider(Component)) {\n            hasContext = true;\n            pushContextProvider(workInProgress);\n          } else {\n            hasContext = false;\n          }\n\n          prepareToReadContext(workInProgress, renderExpirationTime);\n          constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);\n          mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);\n          return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);\n        }\n\n        function mountIndeterminateComponent(_current, workInProgress, Component, renderExpirationTime) {\n          if (_current !== null) {\n            // An indeterminate component only mounts if it suspended inside a non-\n            // concurrent tree, in an inconsistent state. We want to treat it like\n            // a new mount, even though an empty version of it already committed.\n            // Disconnect the alternate pointers.\n            _current.alternate = null;\n            workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\n\n            workInProgress.effectTag |= Placement;\n          }\n\n          var props = workInProgress.pendingProps;\n          var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);\n          var context = getMaskedContext(workInProgress, unmaskedContext);\n          prepareToReadContext(workInProgress, renderExpirationTime);\n          prepareToUseHooks(null, workInProgress, renderExpirationTime);\n          var value = void 0;\n          {\n            if (Component.prototype && typeof Component.prototype.render === 'function') {\n              var componentName = getComponentName(Component) || 'Unknown';\n\n              if (!didWarnAboutBadClass[componentName]) {\n                warningWithoutStack$1(false, \"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);\n                didWarnAboutBadClass[componentName] = true;\n              }\n            }\n\n            if (workInProgress.mode & StrictMode) {\n              ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n            }\n\n            ReactCurrentOwner$3.current = workInProgress;\n            value = Component(props, context);\n          } // React DevTools reads this flag.\n\n          workInProgress.effectTag |= PerformedWork;\n\n          if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {\n            // Proceed under the assumption that this is a class instance\n            workInProgress.tag = ClassComponent; // Throw out any hooks that were used.\n\n            resetHooks(); // Push context providers early to prevent context stack mismatches.\n            // During mounting we don't know the child context yet as the instance doesn't exist.\n            // We will invalidate the child context in finishClassComponent() right after rendering.\n\n            var hasContext = false;\n\n            if (isContextProvider(Component)) {\n              hasContext = true;\n              pushContextProvider(workInProgress);\n            } else {\n              hasContext = false;\n            }\n\n            workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;\n            var getDerivedStateFromProps = Component.getDerivedStateFromProps;\n\n            if (typeof getDerivedStateFromProps === 'function') {\n              applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, props);\n            }\n\n            adoptClassInstance(workInProgress, value);\n            mountClassInstance(workInProgress, Component, props, renderExpirationTime);\n            return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);\n          } else {\n            // Proceed under the assumption that this is a function component\n            workInProgress.tag = FunctionComponent;\n            value = finishHooks(Component, props, value, context);\n            reconcileChildren(null, workInProgress, value, renderExpirationTime);\n            {\n              validateFunctionComponentInDev(workInProgress, Component);\n            }\n            return workInProgress.child;\n          }\n        }\n\n        function validateFunctionComponentInDev(workInProgress, Component) {\n          if (Component) {\n            !!Component.childContextTypes ? warningWithoutStack$1(false, '%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component') : void 0;\n          }\n\n          if (workInProgress.ref !== null) {\n            var info = '';\n            var ownerName = getCurrentFiberOwnerNameInDevOrNull();\n\n            if (ownerName) {\n              info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n            }\n\n            var warningKey = ownerName || workInProgress._debugID || '';\n            var debugSource = workInProgress._debugSource;\n\n            if (debugSource) {\n              warningKey = debugSource.fileName + ':' + debugSource.lineNumber;\n            }\n\n            if (!didWarnAboutFunctionRefs[warningKey]) {\n              didWarnAboutFunctionRefs[warningKey] = true;\n              warning$1(false, 'Function components cannot be given refs. ' + 'Attempts to access this ref will fail.%s', info);\n            }\n          }\n\n          if (typeof Component.getDerivedStateFromProps === 'function') {\n            var componentName = getComponentName(Component) || 'Unknown';\n\n            if (!didWarnAboutGetDerivedStateOnFunctionComponent[componentName]) {\n              warningWithoutStack$1(false, '%s: Function components do not support getDerivedStateFromProps.', componentName);\n              didWarnAboutGetDerivedStateOnFunctionComponent[componentName] = true;\n            }\n          }\n\n          if (typeof Component.contextType === 'object' && Component.contextType !== null) {\n            var _componentName = getComponentName(Component) || 'Unknown';\n\n            if (!didWarnAboutContextTypeOnFunctionComponent[_componentName]) {\n              warningWithoutStack$1(false, '%s: Function components do not support contextType.', _componentName);\n              didWarnAboutContextTypeOnFunctionComponent[_componentName] = true;\n            }\n          }\n        }\n\n        function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {\n          var mode = workInProgress.mode;\n          var nextProps = workInProgress.pendingProps; // We should attempt to render the primary children unless this boundary\n          // already suspended during this render (`alreadyCaptured` is true).\n\n          var nextState = workInProgress.memoizedState;\n          var nextDidTimeout = void 0;\n\n          if ((workInProgress.effectTag & DidCapture) === NoEffect) {\n            // This is the first attempt.\n            nextState = null;\n            nextDidTimeout = false;\n          } else {\n            // Something in this boundary's subtree already suspended. Switch to\n            // rendering the fallback children.\n            nextState = {\n              timedOutAt: nextState !== null ? nextState.timedOutAt : NoWork\n            };\n            nextDidTimeout = true;\n            workInProgress.effectTag &= ~DidCapture;\n          } // This next part is a bit confusing. If the children timeout, we switch to\n          // showing the fallback children in place of the \"primary\" children.\n          // However, we don't want to delete the primary children because then their\n          // state will be lost (both the React state and the host state, e.g.\n          // uncontrolled form inputs). Instead we keep them mounted and hide them.\n          // Both the fallback children AND the primary children are rendered at the\n          // same time. Once the primary children are un-suspended, we can delete\n          // the fallback children — don't need to preserve their state.\n          //\n          // The two sets of children are siblings in the host environment, but\n          // semantically, for purposes of reconciliation, they are two separate sets.\n          // So we store them using two fragment fibers.\n          //\n          // However, we want to avoid allocating extra fibers for every placeholder.\n          // They're only necessary when the children time out, because that's the\n          // only time when both sets are mounted.\n          //\n          // So, the extra fragment fibers are only used if the children time out.\n          // Otherwise, we render the primary children directly. This requires some\n          // custom reconciliation logic to preserve the state of the primary\n          // children. It's essentially a very basic form of re-parenting.\n          // `child` points to the child fiber. In the normal case, this is the first\n          // fiber of the primary children set. In the timed-out case, it's a\n          // a fragment fiber containing the primary children.\n\n\n          var child = void 0; // `next` points to the next fiber React should render. In the normal case,\n          // it's the same as `child`: the first fiber of the primary children set.\n          // In the timed-out case, it's a fragment fiber containing the *fallback*\n          // children -- we skip over the primary children entirely.\n\n          var next = void 0;\n\n          if (current$$1 === null) {\n            // This is the initial mount. This branch is pretty simple because there's\n            // no previous state that needs to be preserved.\n            if (nextDidTimeout) {\n              // Mount separate fragments for primary and fallback children.\n              var nextFallbackChildren = nextProps.fallback;\n              var primaryChildFragment = createFiberFromFragment(null, mode, NoWork, null);\n\n              if ((workInProgress.mode & ConcurrentMode) === NoContext) {\n                // Outside of concurrent mode, we commit the effects from the\n                var progressedState = workInProgress.memoizedState;\n                var progressedPrimaryChild = progressedState !== null ? workInProgress.child.child : workInProgress.child;\n                primaryChildFragment.child = progressedPrimaryChild;\n              }\n\n              var fallbackChildFragment = createFiberFromFragment(nextFallbackChildren, mode, renderExpirationTime, null);\n              primaryChildFragment.sibling = fallbackChildFragment;\n              child = primaryChildFragment; // Skip the primary children, and continue working on the\n              // fallback children.\n\n              next = fallbackChildFragment;\n              child.return = next.return = workInProgress;\n            } else {\n              // Mount the primary children without an intermediate fragment fiber.\n              var nextPrimaryChildren = nextProps.children;\n              child = next = mountChildFibers(workInProgress, null, nextPrimaryChildren, renderExpirationTime);\n            }\n          } else {\n            // This is an update. This branch is more complicated because we need to\n            // ensure the state of the primary children is preserved.\n            var prevState = current$$1.memoizedState;\n            var prevDidTimeout = prevState !== null;\n\n            if (prevDidTimeout) {\n              // The current tree already timed out. That means each child set is\n              var currentPrimaryChildFragment = current$$1.child;\n              var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n\n              if (nextDidTimeout) {\n                // Still timed out. Reuse the current primary children by cloning\n                // its fragment. We're going to skip over these entirely.\n                var _nextFallbackChildren = nextProps.fallback;\n\n                var _primaryChildFragment = createWorkInProgress(currentPrimaryChildFragment, currentPrimaryChildFragment.pendingProps, NoWork);\n\n                if ((workInProgress.mode & ConcurrentMode) === NoContext) {\n                  // Outside of concurrent mode, we commit the effects from the\n                  var _progressedState = workInProgress.memoizedState;\n\n                  var _progressedPrimaryChild = _progressedState !== null ? workInProgress.child.child : workInProgress.child;\n\n                  if (_progressedPrimaryChild !== currentPrimaryChildFragment.child) {\n                    _primaryChildFragment.child = _progressedPrimaryChild;\n                  }\n                } // Because primaryChildFragment is a new fiber that we're inserting as the\n                // parent of a new tree, we need to set its treeBaseDuration.\n\n\n                if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n                  // treeBaseDuration is the sum of all the child tree base durations.\n                  var treeBaseDuration = 0;\n                  var hiddenChild = _primaryChildFragment.child;\n\n                  while (hiddenChild !== null) {\n                    treeBaseDuration += hiddenChild.treeBaseDuration;\n                    hiddenChild = hiddenChild.sibling;\n                  }\n\n                  _primaryChildFragment.treeBaseDuration = treeBaseDuration;\n                } // Clone the fallback child fragment, too. These we'll continue\n                // working on.\n\n\n                var _fallbackChildFragment = _primaryChildFragment.sibling = createWorkInProgress(currentFallbackChildFragment, _nextFallbackChildren, currentFallbackChildFragment.expirationTime);\n\n                child = _primaryChildFragment;\n                _primaryChildFragment.childExpirationTime = NoWork; // Skip the primary children, and continue working on the\n                // fallback children.\n\n                next = _fallbackChildFragment;\n                child.return = next.return = workInProgress;\n              } else {\n                // No longer suspended. Switch back to showing the primary children,\n                // and remove the intermediate fragment fiber.\n                var _nextPrimaryChildren = nextProps.children;\n                var currentPrimaryChild = currentPrimaryChildFragment.child;\n                var primaryChild = reconcileChildFibers(workInProgress, currentPrimaryChild, _nextPrimaryChildren, renderExpirationTime); // If this render doesn't suspend, we need to delete the fallback\n                // children. Wait until the complete phase, after we've confirmed the\n                // fallback is no longer needed.\n                // TODO: Would it be better to store the fallback fragment on\n                // the stateNode?\n                // Continue rendering the children, like we normally do.\n\n                child = next = primaryChild;\n              }\n            } else {\n              // The current tree has not already timed out. That means the primary\n              // children are not wrapped in a fragment fiber.\n              var _currentPrimaryChild = current$$1.child;\n\n              if (nextDidTimeout) {\n                // Timed out. Wrap the children in a fragment fiber to keep them\n                // separate from the fallback children.\n                var _nextFallbackChildren2 = nextProps.fallback;\n\n                var _primaryChildFragment2 = createFiberFromFragment( // It shouldn't matter what the pending props are because we aren't\n                // going to render this fragment.\n                null, mode, NoWork, null);\n\n                _primaryChildFragment2.child = _currentPrimaryChild; // Even though we're creating a new fiber, there are no new children,\n                // because we're reusing an already mounted tree. So we don't need to\n                // schedule a placement.\n                // primaryChildFragment.effectTag |= Placement;\n\n                if ((workInProgress.mode & ConcurrentMode) === NoContext) {\n                  // Outside of concurrent mode, we commit the effects from the\n                  var _progressedState2 = workInProgress.memoizedState;\n\n                  var _progressedPrimaryChild2 = _progressedState2 !== null ? workInProgress.child.child : workInProgress.child;\n\n                  _primaryChildFragment2.child = _progressedPrimaryChild2;\n                } // Because primaryChildFragment is a new fiber that we're inserting as the\n                // parent of a new tree, we need to set its treeBaseDuration.\n\n\n                if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n                  // treeBaseDuration is the sum of all the child tree base durations.\n                  var _treeBaseDuration = 0;\n                  var _hiddenChild = _primaryChildFragment2.child;\n\n                  while (_hiddenChild !== null) {\n                    _treeBaseDuration += _hiddenChild.treeBaseDuration;\n                    _hiddenChild = _hiddenChild.sibling;\n                  }\n\n                  _primaryChildFragment2.treeBaseDuration = _treeBaseDuration;\n                } // Create a fragment from the fallback children, too.\n\n\n                var _fallbackChildFragment2 = _primaryChildFragment2.sibling = createFiberFromFragment(_nextFallbackChildren2, mode, renderExpirationTime, null);\n\n                _fallbackChildFragment2.effectTag |= Placement;\n                child = _primaryChildFragment2;\n                _primaryChildFragment2.childExpirationTime = NoWork; // Skip the primary children, and continue working on the\n                // fallback children.\n\n                next = _fallbackChildFragment2;\n                child.return = next.return = workInProgress;\n              } else {\n                // Still haven't timed out.  Continue rendering the children, like we\n                // normally do.\n                var _nextPrimaryChildren2 = nextProps.children;\n                next = child = reconcileChildFibers(workInProgress, _currentPrimaryChild, _nextPrimaryChildren2, renderExpirationTime);\n              }\n            }\n\n            workInProgress.stateNode = current$$1.stateNode;\n          }\n\n          workInProgress.memoizedState = nextState;\n          workInProgress.child = child;\n          return next;\n        }\n\n        function updatePortalComponent(current$$1, workInProgress, renderExpirationTime) {\n          pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n          var nextChildren = workInProgress.pendingProps;\n\n          if (current$$1 === null) {\n            // Portals are special because we don't append the children during mount\n            // but at commit. Therefore we need to track insertions which the normal\n            // flow doesn't do during mount. This doesn't happen at the root because\n            // the root always starts with a \"current\" with a null child.\n            // TODO: Consider unifying this with how the root works.\n            workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);\n          } else {\n            reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);\n          }\n\n          return workInProgress.child;\n        }\n\n        function updateContextProvider(current$$1, workInProgress, renderExpirationTime) {\n          var providerType = workInProgress.type;\n          var context = providerType._context;\n          var newProps = workInProgress.pendingProps;\n          var oldProps = workInProgress.memoizedProps;\n          var newValue = newProps.value;\n          {\n            var providerPropTypes = workInProgress.type.propTypes;\n\n            if (providerPropTypes) {\n              checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider', getCurrentFiberStackInDev);\n            }\n          }\n          pushProvider(workInProgress, newValue);\n\n          if (oldProps !== null) {\n            var oldValue = oldProps.value;\n            var changedBits = calculateChangedBits(context, newValue, oldValue);\n\n            if (changedBits === 0) {\n              // No change. Bailout early if children are the same.\n              if (oldProps.children === newProps.children && !hasContextChanged()) {\n                return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\n              }\n            } else {\n              // The context value changed. Search for matching consumers and schedule\n              // them to update.\n              propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);\n            }\n          }\n\n          var newChildren = newProps.children;\n          reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);\n          return workInProgress.child;\n        }\n\n        var hasWarnedAboutUsingContextAsConsumer = false;\n\n        function updateContextConsumer(current$$1, workInProgress, renderExpirationTime) {\n          var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In\n          // DEV mode, we create a separate object for Context.Consumer that acts\n          // like a proxy to Context. This proxy object adds unnecessary code in PROD\n          // so we use the old behaviour (Context.Consumer references Context) to\n          // reduce size and overhead. The separate object references context via\n          // a property called \"_context\", which also gives us the ability to check\n          // in DEV mode if this property exists or not and warn if it does not.\n\n          {\n            if (context._context === undefined) {\n              // This may be because it's a Context (rather than a Consumer).\n              // Or it may be because it's older React where they're the same thing.\n              // We only want to warn if we're sure it's a new React.\n              if (context !== context.Consumer) {\n                if (!hasWarnedAboutUsingContextAsConsumer) {\n                  hasWarnedAboutUsingContextAsConsumer = true;\n                  warning$1(false, 'Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n                }\n              }\n            } else {\n              context = context._context;\n            }\n          }\n          var newProps = workInProgress.pendingProps;\n          var render = newProps.children;\n          {\n            !(typeof render === 'function') ? warningWithoutStack$1(false, 'A context consumer was rendered with multiple children, or a child ' + \"that isn't a function. A context consumer expects a single child \" + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.') : void 0;\n          }\n          prepareToReadContext(workInProgress, renderExpirationTime);\n          var newValue = readContext(context, newProps.unstable_observedBits);\n          var newChildren = void 0;\n          {\n            ReactCurrentOwner$3.current = workInProgress;\n            setCurrentPhase('render');\n            newChildren = render(newValue);\n            setCurrentPhase(null);\n          } // React DevTools reads this flag.\n\n          workInProgress.effectTag |= PerformedWork;\n          reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);\n          return workInProgress.child;\n        }\n\n        function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {\n          cancelWorkTimer(workInProgress);\n\n          if (current$$1 !== null) {\n            // Reuse previous context list\n            workInProgress.firstContextDependency = current$$1.firstContextDependency;\n          }\n\n          if (enableProfilerTimer) {\n            // Don't update \"base\" render times for bailouts.\n            stopProfilerTimerIfRunning(workInProgress);\n          } // Check if the children have any pending work.\n\n\n          var childExpirationTime = workInProgress.childExpirationTime;\n\n          if (childExpirationTime < renderExpirationTime) {\n            // The children don't have any work either. We can skip them.\n            // TODO: Once we add back resuming, we should check if the children are\n            // a work-in-progress set. If so, we need to transfer their effects.\n            return null;\n          } else {\n            // This fiber doesn't have work, but its subtree does. Clone the child\n            // fibers and continue.\n            cloneChildFibers(current$$1, workInProgress);\n            return workInProgress.child;\n          }\n        }\n\n        function beginWork(current$$1, workInProgress, renderExpirationTime) {\n          var updateExpirationTime = workInProgress.expirationTime;\n\n          if (current$$1 !== null) {\n            var oldProps = current$$1.memoizedProps;\n            var newProps = workInProgress.pendingProps;\n\n            if (oldProps === newProps && !hasContextChanged() && updateExpirationTime < renderExpirationTime) {\n              // This fiber does not have any pending work. Bailout without entering\n              // the begin phase. There's still some bookkeeping we that needs to be done\n              // in this optimized path, mostly pushing stuff onto the stack.\n              switch (workInProgress.tag) {\n                case HostRoot:\n                  pushHostRootContext(workInProgress);\n                  resetHydrationState();\n                  break;\n\n                case HostComponent:\n                  pushHostContext(workInProgress);\n                  break;\n\n                case ClassComponent:\n                  {\n                    var Component = workInProgress.type;\n\n                    if (isContextProvider(Component)) {\n                      pushContextProvider(workInProgress);\n                    }\n\n                    break;\n                  }\n\n                case HostPortal:\n                  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n                  break;\n\n                case ContextProvider:\n                  {\n                    var newValue = workInProgress.memoizedProps.value;\n                    pushProvider(workInProgress, newValue);\n                    break;\n                  }\n\n                case Profiler:\n                  if (enableProfilerTimer) {\n                    workInProgress.effectTag |= Update;\n                  }\n\n                  break;\n\n                case SuspenseComponent:\n                  {\n                    var state = workInProgress.memoizedState;\n                    var didTimeout = state !== null;\n\n                    if (didTimeout) {\n                      // If this boundary is currently timed out, we need to decide\n                      // whether to retry the primary children, or to skip over it and\n                      // go straight to the fallback. Check the priority of the primary\n                      var primaryChildFragment = workInProgress.child;\n                      var primaryChildExpirationTime = primaryChildFragment.childExpirationTime;\n\n                      if (primaryChildExpirationTime !== NoWork && primaryChildExpirationTime >= renderExpirationTime) {\n                        // The primary children have pending work. Use the normal path\n                        // to attempt to render the primary children again.\n                        return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);\n                      } else {\n                        // The primary children do not have pending work with sufficient\n                        // priority. Bailout.\n                        var child = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\n\n                        if (child !== null) {\n                          // The fallback children have pending work. Skip over the\n                          // primary children and work on the fallback.\n                          return child.sibling;\n                        } else {\n                          return null;\n                        }\n                      }\n                    }\n\n                    break;\n                  }\n              }\n\n              return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\n            }\n          } // Before entering the begin phase, clear the expiration time.\n\n\n          workInProgress.expirationTime = NoWork;\n\n          switch (workInProgress.tag) {\n            case IndeterminateComponent:\n              {\n                var elementType = workInProgress.elementType;\n                return mountIndeterminateComponent(current$$1, workInProgress, elementType, renderExpirationTime);\n              }\n\n            case LazyComponent:\n              {\n                var _elementType = workInProgress.elementType;\n                return mountLazyComponent(current$$1, workInProgress, _elementType, updateExpirationTime, renderExpirationTime);\n              }\n\n            case FunctionComponent:\n              {\n                var _Component = workInProgress.type;\n                var unresolvedProps = workInProgress.pendingProps;\n                var resolvedProps = workInProgress.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);\n                return updateFunctionComponent(current$$1, workInProgress, _Component, resolvedProps, renderExpirationTime);\n              }\n\n            case ClassComponent:\n              {\n                var _Component2 = workInProgress.type;\n                var _unresolvedProps = workInProgress.pendingProps;\n\n                var _resolvedProps = workInProgress.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);\n\n                return updateClassComponent(current$$1, workInProgress, _Component2, _resolvedProps, renderExpirationTime);\n              }\n\n            case HostRoot:\n              return updateHostRoot(current$$1, workInProgress, renderExpirationTime);\n\n            case HostComponent:\n              return updateHostComponent(current$$1, workInProgress, renderExpirationTime);\n\n            case HostText:\n              return updateHostText(current$$1, workInProgress);\n\n            case SuspenseComponent:\n              return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);\n\n            case HostPortal:\n              return updatePortalComponent(current$$1, workInProgress, renderExpirationTime);\n\n            case ForwardRef:\n              {\n                var type = workInProgress.type;\n                var _unresolvedProps2 = workInProgress.pendingProps;\n\n                var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);\n\n                return updateForwardRef(current$$1, workInProgress, type, _resolvedProps2, renderExpirationTime);\n              }\n\n            case Fragment:\n              return updateFragment(current$$1, workInProgress, renderExpirationTime);\n\n            case Mode:\n              return updateMode(current$$1, workInProgress, renderExpirationTime);\n\n            case Profiler:\n              return updateProfiler(current$$1, workInProgress, renderExpirationTime);\n\n            case ContextProvider:\n              return updateContextProvider(current$$1, workInProgress, renderExpirationTime);\n\n            case ContextConsumer:\n              return updateContextConsumer(current$$1, workInProgress, renderExpirationTime);\n\n            case MemoComponent:\n              {\n                var _type2 = workInProgress.type;\n                var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.\n\n                var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);\n\n                {\n                  if (workInProgress.type !== workInProgress.elementType) {\n                    var outerPropTypes = _type2.propTypes;\n\n                    if (outerPropTypes) {\n                      checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only\n                      'prop', getComponentName(_type2), getCurrentFiberStackInDev);\n                    }\n                  }\n                }\n                _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);\n                return updateMemoComponent(current$$1, workInProgress, _type2, _resolvedProps3, updateExpirationTime, renderExpirationTime);\n              }\n\n            case SimpleMemoComponent:\n              {\n                return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);\n              }\n\n            case IncompleteClassComponent:\n              {\n                var _Component3 = workInProgress.type;\n                var _unresolvedProps4 = workInProgress.pendingProps;\n\n                var _resolvedProps4 = workInProgress.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);\n\n                return mountIncompleteClassComponent(current$$1, workInProgress, _Component3, _resolvedProps4, renderExpirationTime);\n              }\n\n            default:\n              invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');\n          }\n        }\n\n        function markUpdate(workInProgress) {\n          // Tag the fiber with an update effect. This turns a Placement into\n          // a PlacementAndUpdate.\n          workInProgress.effectTag |= Update;\n        }\n\n        function markRef$1(workInProgress) {\n          workInProgress.effectTag |= Ref;\n        }\n\n        var _appendAllChildren = void 0;\n\n        var updateHostContainer = void 0;\n        var updateHostComponent$1 = void 0;\n        var updateHostText$1 = void 0;\n\n        if (supportsMutation) {\n          // Mutation mode\n          _appendAllChildren = function appendAllChildren(parent, workInProgress, needsVisibilityToggle, isHidden) {\n            // We only have the top Fiber that was created but we need recurse down its\n            // children to find all the terminal nodes.\n            var node = workInProgress.child;\n\n            while (node !== null) {\n              if (node.tag === HostComponent || node.tag === HostText) {\n                appendInitialChild(parent, node.stateNode);\n              } else if (node.tag === HostPortal) {// If we have a portal child, then we don't want to traverse\n                // down its children. Instead, we'll get insertions from each child in\n                // the portal directly.\n              } else if (node.child !== null) {\n                node.child.return = node;\n                node = node.child;\n                continue;\n              }\n\n              if (node === workInProgress) {\n                return;\n              }\n\n              while (node.sibling === null) {\n                if (node.return === null || node.return === workInProgress) {\n                  return;\n                }\n\n                node = node.return;\n              }\n\n              node.sibling.return = node.return;\n              node = node.sibling;\n            }\n          };\n\n          updateHostContainer = function updateHostContainer(workInProgress) {// Noop\n          };\n\n          updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance) {\n            // If we have an alternate, that means this is an update and we need to\n            // schedule a side-effect to do the updates.\n            var oldProps = current.memoizedProps;\n\n            if (oldProps === newProps) {\n              // In mutation mode, this is sufficient for a bailout because\n              // we won't touch this node even if children changed.\n              return;\n            } // If we get updated because one of our children updated, we don't\n            // have newProps so we'll have to reuse them.\n            // TODO: Split the update API as separate for the props vs. children.\n            // Even better would be if children weren't special cased at all tho.\n\n\n            var instance = workInProgress.stateNode;\n            var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host\n            // component is hitting the resume path. Figure out why. Possibly\n            // related to `hidden`.\n\n            var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.\n\n            workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there\n            // is a new ref we mark this as an update. All the work is done in commitWork.\n\n            if (updatePayload) {\n              markUpdate(workInProgress);\n            }\n          };\n\n          updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {\n            // If the text differs, mark it as an update. All the work in done in commitWork.\n            if (oldText !== newText) {\n              markUpdate(workInProgress);\n            }\n          };\n        } else if (supportsPersistence) {\n          // Persistent host tree mode\n          _appendAllChildren = function appendAllChildren(parent, workInProgress, needsVisibilityToggle, isHidden) {\n            // We only have the top Fiber that was created but we need recurse down its\n            // children to find all the terminal nodes.\n            var node = workInProgress.child;\n\n            while (node !== null) {\n              // eslint-disable-next-line no-labels\n              branches: if (node.tag === HostComponent) {\n                var instance = node.stateNode;\n\n                if (needsVisibilityToggle) {\n                  var props = node.memoizedProps;\n                  var type = node.type;\n\n                  if (isHidden) {\n                    // This child is inside a timed out tree. Hide it.\n                    instance = cloneHiddenInstance(instance, type, props, node);\n                  } else {\n                    // This child was previously inside a timed out tree. If it was not\n                    // updated during this render, it may need to be unhidden. Clone\n                    // again to be sure.\n                    instance = cloneUnhiddenInstance(instance, type, props, node);\n                  }\n\n                  node.stateNode = instance;\n                }\n\n                appendInitialChild(parent, instance);\n              } else if (node.tag === HostText) {\n                var _instance = node.stateNode;\n\n                if (needsVisibilityToggle) {\n                  var text = node.memoizedProps;\n                  var rootContainerInstance = getRootHostContainer();\n                  var currentHostContext = getHostContext();\n\n                  if (isHidden) {\n                    _instance = createHiddenTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);\n                  } else {\n                    _instance = createTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);\n                  }\n\n                  node.stateNode = _instance;\n                }\n\n                appendInitialChild(parent, _instance);\n              } else if (node.tag === HostPortal) {// If we have a portal child, then we don't want to traverse\n                // down its children. Instead, we'll get insertions from each child in\n                // the portal directly.\n              } else if (node.tag === SuspenseComponent) {\n                var current = node.alternate;\n\n                if (current !== null) {\n                  var oldState = current.memoizedState;\n                  var newState = node.memoizedState;\n                  var oldIsHidden = oldState !== null;\n                  var newIsHidden = newState !== null;\n\n                  if (oldIsHidden !== newIsHidden) {\n                    // The placeholder either just timed out or switched back to the normal\n                    // children after having previously timed out. Toggle the visibility of\n                    // the direct host children.\n                    var primaryChildParent = newIsHidden ? node.child : node;\n\n                    if (primaryChildParent !== null) {\n                      _appendAllChildren(parent, primaryChildParent, true, newIsHidden);\n                    } // eslint-disable-next-line no-labels\n\n\n                    break branches;\n                  }\n                }\n\n                if (node.child !== null) {\n                  // Continue traversing like normal\n                  node.child.return = node;\n                  node = node.child;\n                  continue;\n                }\n              } else if (node.child !== null) {\n                node.child.return = node;\n                node = node.child;\n                continue;\n              } // $FlowFixMe This is correct but Flow is confused by the labeled break.\n\n\n              node = node;\n\n              if (node === workInProgress) {\n                return;\n              }\n\n              while (node.sibling === null) {\n                if (node.return === null || node.return === workInProgress) {\n                  return;\n                }\n\n                node = node.return;\n              }\n\n              node.sibling.return = node.return;\n              node = node.sibling;\n            }\n          }; // An unfortunate fork of appendAllChildren because we have two different parent types.\n\n\n          var appendAllChildrenToContainer = function appendAllChildrenToContainer(containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {\n            // We only have the top Fiber that was created but we need recurse down its\n            // children to find all the terminal nodes.\n            var node = workInProgress.child;\n\n            while (node !== null) {\n              // eslint-disable-next-line no-labels\n              branches: if (node.tag === HostComponent) {\n                var instance = node.stateNode;\n\n                if (needsVisibilityToggle) {\n                  var props = node.memoizedProps;\n                  var type = node.type;\n\n                  if (isHidden) {\n                    // This child is inside a timed out tree. Hide it.\n                    instance = cloneHiddenInstance(instance, type, props, node);\n                  } else {\n                    // This child was previously inside a timed out tree. If it was not\n                    // updated during this render, it may need to be unhidden. Clone\n                    // again to be sure.\n                    instance = cloneUnhiddenInstance(instance, type, props, node);\n                  }\n\n                  node.stateNode = instance;\n                }\n\n                appendChildToContainerChildSet(containerChildSet, instance);\n              } else if (node.tag === HostText) {\n                var _instance2 = node.stateNode;\n\n                if (needsVisibilityToggle) {\n                  var text = node.memoizedProps;\n                  var rootContainerInstance = getRootHostContainer();\n                  var currentHostContext = getHostContext();\n\n                  if (isHidden) {\n                    _instance2 = createHiddenTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);\n                  } else {\n                    _instance2 = createTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);\n                  }\n\n                  node.stateNode = _instance2;\n                }\n\n                appendChildToContainerChildSet(containerChildSet, _instance2);\n              } else if (node.tag === HostPortal) {// If we have a portal child, then we don't want to traverse\n                // down its children. Instead, we'll get insertions from each child in\n                // the portal directly.\n              } else if (node.tag === SuspenseComponent) {\n                var current = node.alternate;\n\n                if (current !== null) {\n                  var oldState = current.memoizedState;\n                  var newState = node.memoizedState;\n                  var oldIsHidden = oldState !== null;\n                  var newIsHidden = newState !== null;\n\n                  if (oldIsHidden !== newIsHidden) {\n                    // The placeholder either just timed out or switched back to the normal\n                    // children after having previously timed out. Toggle the visibility of\n                    // the direct host children.\n                    var primaryChildParent = newIsHidden ? node.child : node;\n\n                    if (primaryChildParent !== null) {\n                      appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, newIsHidden);\n                    } // eslint-disable-next-line no-labels\n\n\n                    break branches;\n                  }\n                }\n\n                if (node.child !== null) {\n                  // Continue traversing like normal\n                  node.child.return = node;\n                  node = node.child;\n                  continue;\n                }\n              } else if (node.child !== null) {\n                node.child.return = node;\n                node = node.child;\n                continue;\n              } // $FlowFixMe This is correct but Flow is confused by the labeled break.\n\n\n              node = node;\n\n              if (node === workInProgress) {\n                return;\n              }\n\n              while (node.sibling === null) {\n                if (node.return === null || node.return === workInProgress) {\n                  return;\n                }\n\n                node = node.return;\n              }\n\n              node.sibling.return = node.return;\n              node = node.sibling;\n            }\n          };\n\n          updateHostContainer = function updateHostContainer(workInProgress) {\n            var portalOrRoot = workInProgress.stateNode;\n            var childrenUnchanged = workInProgress.firstEffect === null;\n\n            if (childrenUnchanged) {// No changes, just reuse the existing instance.\n            } else {\n              var container = portalOrRoot.containerInfo;\n              var newChildSet = createContainerChildSet(container); // If children might have changed, we have to add them all to the set.\n\n              appendAllChildrenToContainer(newChildSet, workInProgress, false, false);\n              portalOrRoot.pendingChildren = newChildSet; // Schedule an update on the container to swap out the container.\n\n              markUpdate(workInProgress);\n              finalizeContainerChildren(container, newChildSet);\n            }\n          };\n\n          updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance) {\n            var currentInstance = current.stateNode;\n            var oldProps = current.memoizedProps; // If there are no effects associated with this node, then none of our children had any updates.\n            // This guarantees that we can reuse all of them.\n\n            var childrenUnchanged = workInProgress.firstEffect === null;\n\n            if (childrenUnchanged && oldProps === newProps) {\n              // No changes, just reuse the existing instance.\n              // Note that this might release a previous clone.\n              workInProgress.stateNode = currentInstance;\n              return;\n            }\n\n            var recyclableInstance = workInProgress.stateNode;\n            var currentHostContext = getHostContext();\n            var updatePayload = null;\n\n            if (oldProps !== newProps) {\n              updatePayload = prepareUpdate(recyclableInstance, type, oldProps, newProps, rootContainerInstance, currentHostContext);\n            }\n\n            if (childrenUnchanged && updatePayload === null) {\n              // No changes, just reuse the existing instance.\n              // Note that this might release a previous clone.\n              workInProgress.stateNode = currentInstance;\n              return;\n            }\n\n            var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);\n\n            if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance, currentHostContext)) {\n              markUpdate(workInProgress);\n            }\n\n            workInProgress.stateNode = newInstance;\n\n            if (childrenUnchanged) {\n              // If there are no other effects in this tree, we need to flag this node as having one.\n              // Even though we're not going to use it for anything.\n              // Otherwise parents won't know that there are new children to propagate upwards.\n              markUpdate(workInProgress);\n            } else {\n              // If children might have changed, we have to add them all to the set.\n              _appendAllChildren(newInstance, workInProgress, false, false);\n            }\n          };\n\n          updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {\n            if (oldText !== newText) {\n              // If the text content differs, we'll create a new text instance for it.\n              var rootContainerInstance = getRootHostContainer();\n              var currentHostContext = getHostContext();\n              workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress); // We'll have to mark it as having an effect, even though we won't use the effect for anything.\n              // This lets the parents know that at least one of their children has changed.\n\n              markUpdate(workInProgress);\n            }\n          };\n        } else {\n          // No host operations\n          updateHostContainer = function updateHostContainer(workInProgress) {// Noop\n          };\n\n          updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance) {// Noop\n          };\n\n          updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {// Noop\n          };\n        }\n\n        function completeWork(current, workInProgress, renderExpirationTime) {\n          var newProps = workInProgress.pendingProps;\n\n          switch (workInProgress.tag) {\n            case IndeterminateComponent:\n              break;\n\n            case LazyComponent:\n              break;\n\n            case SimpleMemoComponent:\n            case FunctionComponent:\n              break;\n\n            case ClassComponent:\n              {\n                var Component = workInProgress.type;\n\n                if (isContextProvider(Component)) {\n                  popContext(workInProgress);\n                }\n\n                break;\n              }\n\n            case HostRoot:\n              {\n                popHostContainer(workInProgress);\n                popTopLevelContextObject(workInProgress);\n                var fiberRoot = workInProgress.stateNode;\n\n                if (fiberRoot.pendingContext) {\n                  fiberRoot.context = fiberRoot.pendingContext;\n                  fiberRoot.pendingContext = null;\n                }\n\n                if (current === null || current.child === null) {\n                  // If we hydrated, pop so that we can delete any remaining children\n                  // that weren't hydrated.\n                  popHydrationState(workInProgress); // This resets the hacky state to fix isMounted before committing.\n                  // TODO: Delete this when we delete isMounted and findDOMNode.\n\n                  workInProgress.effectTag &= ~Placement;\n                }\n\n                updateHostContainer(workInProgress);\n                break;\n              }\n\n            case HostComponent:\n              {\n                popHostContext(workInProgress);\n                var rootContainerInstance = getRootHostContainer();\n                var type = workInProgress.type;\n\n                if (current !== null && workInProgress.stateNode != null) {\n                  updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);\n\n                  if (current.ref !== workInProgress.ref) {\n                    markRef$1(workInProgress);\n                  }\n                } else {\n                  if (!newProps) {\n                    !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0; // This can happen when we abort work.\n\n                    break;\n                  }\n\n                  var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context\n                  // \"stack\" as the parent. Then append children as we go in beginWork\n                  // or completeWork depending on we want to add then top->down or\n                  // bottom->up. Top->down is faster in IE11.\n\n                  var wasHydrated = popHydrationState(workInProgress);\n\n                  if (wasHydrated) {\n                    // TODO: Move this and createInstance step into the beginPhase\n                    // to consolidate.\n                    if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {\n                      // If changes to the hydrated node needs to be applied at the\n                      // commit-phase we mark this as such.\n                      markUpdate(workInProgress);\n                    }\n                  } else {\n                    var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);\n\n                    _appendAllChildren(instance, workInProgress, false, false); // Certain renderers require commit-time effects for initial mount.\n                    // (eg DOM renderer supports auto-focus for certain elements).\n                    // Make sure such renderers get scheduled for later work.\n\n\n                    if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance, currentHostContext)) {\n                      markUpdate(workInProgress);\n                    }\n\n                    workInProgress.stateNode = instance;\n                  }\n\n                  if (workInProgress.ref !== null) {\n                    // If there is a ref on a host node we need to schedule a callback\n                    markRef$1(workInProgress);\n                  }\n                }\n\n                break;\n              }\n\n            case HostText:\n              {\n                var newText = newProps;\n\n                if (current && workInProgress.stateNode != null) {\n                  var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need\n                  // to schedule a side-effect to do the updates.\n\n                  updateHostText$1(current, workInProgress, oldText, newText);\n                } else {\n                  if (typeof newText !== 'string') {\n                    !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0; // This can happen when we abort work.\n                  }\n\n                  var _rootContainerInstance = getRootHostContainer();\n\n                  var _currentHostContext = getHostContext();\n\n                  var _wasHydrated = popHydrationState(workInProgress);\n\n                  if (_wasHydrated) {\n                    if (prepareToHydrateHostTextInstance(workInProgress)) {\n                      markUpdate(workInProgress);\n                    }\n                  } else {\n                    workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);\n                  }\n                }\n\n                break;\n              }\n\n            case ForwardRef:\n              break;\n\n            case SuspenseComponent:\n              {\n                var nextState = workInProgress.memoizedState;\n\n                if ((workInProgress.effectTag & DidCapture) !== NoEffect) {\n                  // Something suspended. Re-render with the fallback children.\n                  workInProgress.expirationTime = renderExpirationTime; // Do not reset the effect list.\n\n                  return workInProgress;\n                }\n\n                var nextDidTimeout = nextState !== null;\n                var prevDidTimeout = current !== null && current.memoizedState !== null;\n\n                if (current !== null && !nextDidTimeout && prevDidTimeout) {\n                  // We just switched from the fallback to the normal children. Delete\n                  // the fallback.\n                  // TODO: Would it be better to store the fallback fragment on\n                  var currentFallbackChild = current.child.sibling;\n\n                  if (currentFallbackChild !== null) {\n                    // Deletions go at the beginning of the return fiber's effect list\n                    var first = workInProgress.firstEffect;\n\n                    if (first !== null) {\n                      workInProgress.firstEffect = currentFallbackChild;\n                      currentFallbackChild.nextEffect = first;\n                    } else {\n                      workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChild;\n                      currentFallbackChild.nextEffect = null;\n                    }\n\n                    currentFallbackChild.effectTag = Deletion;\n                  }\n                } // The children either timed out after previously being visible, or\n                // were restored after previously being hidden. Schedule an effect\n                // to update their visiblity.\n\n\n                if ( //\n                nextDidTimeout !== prevDidTimeout || // Outside concurrent mode, the primary children commit in an\n                // inconsistent state, even if they are hidden. So if they are hidden,\n                // we need to schedule an effect to re-hide them, just in case.\n                (workInProgress.effectTag & ConcurrentMode) === NoContext && nextDidTimeout) {\n                  workInProgress.effectTag |= Update;\n                }\n\n                break;\n              }\n\n            case Fragment:\n              break;\n\n            case Mode:\n              break;\n\n            case Profiler:\n              break;\n\n            case HostPortal:\n              popHostContainer(workInProgress);\n              updateHostContainer(workInProgress);\n              break;\n\n            case ContextProvider:\n              // Pop provider fiber\n              popProvider(workInProgress);\n              break;\n\n            case ContextConsumer:\n              break;\n\n            case MemoComponent:\n              break;\n\n            case IncompleteClassComponent:\n              {\n                // Same as class component case. I put it down here so that the tags are\n                // sequential to ensure this switch is compiled to a jump table.\n                var _Component = workInProgress.type;\n\n                if (isContextProvider(_Component)) {\n                  popContext(workInProgress);\n                }\n\n                break;\n              }\n\n            default:\n              invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');\n          }\n\n          return null;\n        }\n\n        function shouldCaptureSuspense(workInProgress) {\n          // In order to capture, the Suspense component must have a fallback prop.\n          if (workInProgress.memoizedProps.fallback === undefined) {\n            return false;\n          } // If it was the primary children that just suspended, capture and render the\n          // fallback. Otherwise, don't capture and bubble to the next boundary.\n\n\n          var nextState = workInProgress.memoizedState;\n          return nextState === null;\n        } // This module is forked in different environments.\n        // By default, return `true` to log errors to the console.\n        // Forks can return `false` if this isn't desirable.\n\n\n        function showErrorDialog(capturedError) {\n          return true;\n        }\n\n        function logCapturedError(capturedError) {\n          var logError = showErrorDialog(capturedError); // Allow injected showErrorDialog() to prevent default console.error logging.\n          // This enables renderers like ReactNative to better manage redbox behavior.\n\n          if (logError === false) {\n            return;\n          }\n\n          var error = capturedError.error;\n          {\n            var componentName = capturedError.componentName,\n                componentStack = capturedError.componentStack,\n                errorBoundaryName = capturedError.errorBoundaryName,\n                errorBoundaryFound = capturedError.errorBoundaryFound,\n                willRetry = capturedError.willRetry; // Browsers support silencing uncaught errors by calling\n            // `preventDefault()` in window `error` handler.\n            // We record this information as an expando on the error.\n\n            if (error != null && error._suppressLogging) {\n              if (errorBoundaryFound && willRetry) {\n                // The error is recoverable and was silenced.\n                // Ignore it and don't print the stack addendum.\n                // This is handy for testing error boundaries without noise.\n                return;\n              } // The error is fatal. Since the silencing might have\n              // been accidental, we'll surface it anyway.\n              // However, the browser would have silenced the original error\n              // so we'll print it first, and then print the stack addendum.\n\n\n              console.error(error); // For a more detailed description of this block, see:\n              // https://github.com/facebook/react/pull/13384\n            }\n\n            var componentNameMessage = componentName ? 'The above error occurred in the <' + componentName + '> component:' : 'The above error occurred in one of your React components:';\n            var errorBoundaryMessage = void 0; // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.\n\n            if (errorBoundaryFound && errorBoundaryName) {\n              if (willRetry) {\n                errorBoundaryMessage = 'React will try to recreate this component tree from scratch ' + ('using the error boundary you provided, ' + errorBoundaryName + '.');\n              } else {\n                errorBoundaryMessage = 'This error was initially handled by the error boundary ' + errorBoundaryName + '.\\n' + 'Recreating the tree from scratch failed so React will unmount the tree.';\n              }\n            } else {\n              errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';\n            }\n\n            var combinedMessage = '' + componentNameMessage + componentStack + '\\n\\n' + ('' + errorBoundaryMessage); // In development, we provide our own message with just the component stack.\n            // We don't include the original error message and JS stack because the browser\n            // has already printed it. Even if the application swallows the error, it is still\n            // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\n\n            console.error(combinedMessage);\n          }\n        }\n\n        var didWarnAboutUndefinedSnapshotBeforeUpdate = null;\n        {\n          didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n        }\n        var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\n\n        function logError(boundary, errorInfo) {\n          var source = errorInfo.source;\n          var stack = errorInfo.stack;\n\n          if (stack === null && source !== null) {\n            stack = getStackByFiberInDevAndProd(source);\n          }\n\n          var capturedError = {\n            componentName: source !== null ? getComponentName(source.type) : null,\n            componentStack: stack !== null ? stack : '',\n            error: errorInfo.value,\n            errorBoundary: null,\n            errorBoundaryName: null,\n            errorBoundaryFound: false,\n            willRetry: false\n          };\n\n          if (boundary !== null && boundary.tag === ClassComponent) {\n            capturedError.errorBoundary = boundary.stateNode;\n            capturedError.errorBoundaryName = getComponentName(boundary.type);\n            capturedError.errorBoundaryFound = true;\n            capturedError.willRetry = true;\n          }\n\n          try {\n            logCapturedError(capturedError);\n          } catch (e) {\n            // This method must not throw, or React internal state will get messed up.\n            // If console.error is overridden, or logCapturedError() shows a dialog that throws,\n            // we want to report this error outside of the normal stack as a last resort.\n            // https://github.com/facebook/react/issues/13188\n            setTimeout(function () {\n              throw e;\n            });\n          }\n        }\n\n        var callComponentWillUnmountWithTimer = function callComponentWillUnmountWithTimer(current$$1, instance) {\n          startPhaseTimer(current$$1, 'componentWillUnmount');\n          instance.props = current$$1.memoizedProps;\n          instance.state = current$$1.memoizedState;\n          instance.componentWillUnmount();\n          stopPhaseTimer();\n        }; // Capture errors so they don't interrupt unmounting.\n\n\n        function safelyCallComponentWillUnmount(current$$1, instance) {\n          {\n            invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current$$1, instance);\n\n            if (hasCaughtError()) {\n              var unmountError = clearCaughtError();\n              captureCommitPhaseError(current$$1, unmountError);\n            }\n          }\n        }\n\n        function safelyDetachRef(current$$1) {\n          var ref = current$$1.ref;\n\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              {\n                invokeGuardedCallback(null, ref, null, null);\n\n                if (hasCaughtError()) {\n                  var refError = clearCaughtError();\n                  captureCommitPhaseError(current$$1, refError);\n                }\n              }\n            } else {\n              ref.current = null;\n            }\n          }\n        }\n\n        function safelyCallDestroy(current$$1, destroy) {\n          {\n            invokeGuardedCallback(null, destroy, null);\n\n            if (hasCaughtError()) {\n              var error = clearCaughtError();\n              captureCommitPhaseError(current$$1, error);\n            }\n          }\n        }\n\n        function commitBeforeMutationLifeCycles(current$$1, finishedWork) {\n          switch (finishedWork.tag) {\n            case FunctionComponent:\n            case ForwardRef:\n            case SimpleMemoComponent:\n              {\n                commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork);\n                return;\n              }\n\n            case ClassComponent:\n              {\n                if (finishedWork.effectTag & Snapshot) {\n                  if (current$$1 !== null) {\n                    var prevProps = current$$1.memoizedProps;\n                    var prevState = current$$1.memoizedState;\n                    startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');\n                    var instance = finishedWork.stateNode; // We could update instance props and state here,\n                    // but instead we rely on them being set during last render.\n                    // TODO: revisit this when we implement resuming.\n\n                    {\n                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                        !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\n                        !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\n                      }\n                    }\n                    var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);\n                    {\n                      var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;\n\n                      if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n                        didWarnSet.add(finishedWork.type);\n                        warningWithoutStack$1(false, '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork.type));\n                      }\n                    }\n                    instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n                    stopPhaseTimer();\n                  }\n                }\n\n                return;\n              }\n\n            case HostRoot:\n            case HostComponent:\n            case HostText:\n            case HostPortal:\n            case IncompleteClassComponent:\n              // Nothing to do for these component types\n              return;\n\n            default:\n              {\n                invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');\n              }\n          }\n        }\n\n        function commitHookEffectList(unmountTag, mountTag, finishedWork) {\n          if (!enableHooks) {\n            return;\n          }\n\n          var updateQueue = finishedWork.updateQueue;\n          var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n          if (lastEffect !== null) {\n            var firstEffect = lastEffect.next;\n            var effect = firstEffect;\n\n            do {\n              if ((effect.tag & unmountTag) !== NoEffect$1) {\n                // Unmount\n                var destroy = effect.destroy;\n                effect.destroy = null;\n\n                if (destroy !== null) {\n                  destroy();\n                }\n              }\n\n              if ((effect.tag & mountTag) !== NoEffect$1) {\n                // Mount\n                var create = effect.create;\n\n                var _destroy = create();\n\n                if (typeof _destroy !== 'function') {\n                  {\n                    if (_destroy !== null && _destroy !== undefined) {\n                      warningWithoutStack$1(false, 'useEffect function must return a cleanup function or ' + 'nothing.%s%s', typeof _destroy.then === 'function' ? '\\n\\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' + 'Instead, you may write an async function separately ' + 'and then call it from inside the effect:\\n\\n' + 'async function fetchComment(commentId) {\\n' + '  // You can await here\\n' + '}\\n\\n' + 'useEffect(() => {\\n' + '  fetchComment(commentId);\\n' + '}, [commentId]);\\n\\n' + 'In the future, React will provide a more idiomatic solution for data fetching ' + \"that doesn't involve writing effects manually.\" : '', getStackByFiberInDevAndProd(finishedWork));\n                    }\n                  }\n                  _destroy = null;\n                }\n\n                effect.destroy = _destroy;\n              }\n\n              effect = effect.next;\n            } while (effect !== firstEffect);\n          }\n        }\n\n        function commitPassiveHookEffects(finishedWork) {\n          commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork);\n          commitHookEffectList(NoEffect$1, MountPassive, finishedWork);\n        }\n\n        function commitLifeCycles(finishedRoot, current$$1, finishedWork, committedExpirationTime) {\n          switch (finishedWork.tag) {\n            case FunctionComponent:\n            case ForwardRef:\n            case SimpleMemoComponent:\n              {\n                commitHookEffectList(UnmountLayout, MountLayout, finishedWork);\n                break;\n              }\n\n            case ClassComponent:\n              {\n                var instance = finishedWork.stateNode;\n\n                if (finishedWork.effectTag & Update) {\n                  if (current$$1 === null) {\n                    startPhaseTimer(finishedWork, 'componentDidMount'); // We could update instance props and state here,\n                    // but instead we rely on them being set during last render.\n                    // TODO: revisit this when we implement resuming.\n\n                    {\n                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                        !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\n                        !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\n                      }\n                    }\n                    instance.componentDidMount();\n                    stopPhaseTimer();\n                  } else {\n                    var prevProps = finishedWork.elementType === finishedWork.type ? current$$1.memoizedProps : resolveDefaultProps(finishedWork.type, current$$1.memoizedProps);\n                    var prevState = current$$1.memoizedState;\n                    startPhaseTimer(finishedWork, 'componentDidUpdate'); // We could update instance props and state here,\n                    // but instead we rely on them being set during last render.\n                    // TODO: revisit this when we implement resuming.\n\n                    {\n                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                        !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\n                        !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\n                      }\n                    }\n                    instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\n                    stopPhaseTimer();\n                  }\n                }\n\n                var updateQueue = finishedWork.updateQueue;\n\n                if (updateQueue !== null) {\n                  {\n                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                      !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\n                      !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;\n                    }\n                  } // We could update instance props and state here,\n                  // but instead we rely on them being set during last render.\n                  // TODO: revisit this when we implement resuming.\n\n                  commitUpdateQueue(finishedWork, updateQueue, instance, committedExpirationTime);\n                }\n\n                return;\n              }\n\n            case HostRoot:\n              {\n                var _updateQueue = finishedWork.updateQueue;\n\n                if (_updateQueue !== null) {\n                  var _instance = null;\n\n                  if (finishedWork.child !== null) {\n                    switch (finishedWork.child.tag) {\n                      case HostComponent:\n                        _instance = getPublicInstance(finishedWork.child.stateNode);\n                        break;\n\n                      case ClassComponent:\n                        _instance = finishedWork.child.stateNode;\n                        break;\n                    }\n                  }\n\n                  commitUpdateQueue(finishedWork, _updateQueue, _instance, committedExpirationTime);\n                }\n\n                return;\n              }\n\n            case HostComponent:\n              {\n                var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted\n                // (eg DOM renderer may schedule auto-focus for inputs and form controls).\n                // These effects should only be committed when components are first mounted,\n                // aka when there is no current/alternate.\n\n                if (current$$1 === null && finishedWork.effectTag & Update) {\n                  var type = finishedWork.type;\n                  var props = finishedWork.memoizedProps;\n                  commitMount(_instance2, type, props, finishedWork);\n                }\n\n                return;\n              }\n\n            case HostText:\n              {\n                // We have no life-cycles associated with text.\n                return;\n              }\n\n            case HostPortal:\n              {\n                // We have no life-cycles associated with portals.\n                return;\n              }\n\n            case Profiler:\n              {\n                if (enableProfilerTimer) {\n                  var onRender = finishedWork.memoizedProps.onRender;\n\n                  if (enableSchedulerTracing) {\n                    onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime(), finishedRoot.memoizedInteractions);\n                  } else {\n                    onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime());\n                  }\n                }\n\n                return;\n              }\n\n            case SuspenseComponent:\n              break;\n\n            case IncompleteClassComponent:\n              break;\n\n            default:\n              {\n                invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');\n              }\n          }\n        }\n\n        function hideOrUnhideAllChildren(finishedWork, isHidden) {\n          if (supportsMutation) {\n            // We only have the top Fiber that was inserted but we need recurse down its\n            var node = finishedWork;\n\n            while (true) {\n              if (node.tag === HostComponent) {\n                var instance = node.stateNode;\n\n                if (isHidden) {\n                  hideInstance(instance);\n                } else {\n                  unhideInstance(node.stateNode, node.memoizedProps);\n                }\n              } else if (node.tag === HostText) {\n                var _instance3 = node.stateNode;\n\n                if (isHidden) {\n                  hideTextInstance(_instance3);\n                } else {\n                  unhideTextInstance(_instance3, node.memoizedProps);\n                }\n              } else if (node.tag === SuspenseComponent && node.memoizedState !== null) {\n                // Found a nested Suspense component that timed out. Skip over the\n                var fallbackChildFragment = node.child.sibling;\n                fallbackChildFragment.return = node;\n                node = fallbackChildFragment;\n                continue;\n              } else if (node.child !== null) {\n                node.child.return = node;\n                node = node.child;\n                continue;\n              }\n\n              if (node === finishedWork) {\n                return;\n              }\n\n              while (node.sibling === null) {\n                if (node.return === null || node.return === finishedWork) {\n                  return;\n                }\n\n                node = node.return;\n              }\n\n              node.sibling.return = node.return;\n              node = node.sibling;\n            }\n          }\n        }\n\n        function commitAttachRef(finishedWork) {\n          var ref = finishedWork.ref;\n\n          if (ref !== null) {\n            var instance = finishedWork.stateNode;\n            var instanceToUse = void 0;\n\n            switch (finishedWork.tag) {\n              case HostComponent:\n                instanceToUse = getPublicInstance(instance);\n                break;\n\n              default:\n                instanceToUse = instance;\n            }\n\n            if (typeof ref === 'function') {\n              ref(instanceToUse);\n            } else {\n              {\n                if (!ref.hasOwnProperty('current')) {\n                  warningWithoutStack$1(false, 'Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().%s', getComponentName(finishedWork.type), getStackByFiberInDevAndProd(finishedWork));\n                }\n              }\n              ref.current = instanceToUse;\n            }\n          }\n        }\n\n        function commitDetachRef(current$$1) {\n          var currentRef = current$$1.ref;\n\n          if (currentRef !== null) {\n            if (typeof currentRef === 'function') {\n              currentRef(null);\n            } else {\n              currentRef.current = null;\n            }\n          }\n        } // User-originating errors (lifecycles and refs) should not interrupt\n        // deletion, so don't let them throw. Host-originating errors should\n        // interrupt deletion, so it's okay\n\n\n        function commitUnmount(current$$1) {\n          onCommitUnmount(current$$1);\n\n          switch (current$$1.tag) {\n            case FunctionComponent:\n            case ForwardRef:\n            case MemoComponent:\n            case SimpleMemoComponent:\n              {\n                var updateQueue = current$$1.updateQueue;\n\n                if (updateQueue !== null) {\n                  var lastEffect = updateQueue.lastEffect;\n\n                  if (lastEffect !== null) {\n                    var firstEffect = lastEffect.next;\n                    var effect = firstEffect;\n\n                    do {\n                      var destroy = effect.destroy;\n\n                      if (destroy !== null) {\n                        safelyCallDestroy(current$$1, destroy);\n                      }\n\n                      effect = effect.next;\n                    } while (effect !== firstEffect);\n                  }\n                }\n\n                break;\n              }\n\n            case ClassComponent:\n              {\n                safelyDetachRef(current$$1);\n                var instance = current$$1.stateNode;\n\n                if (typeof instance.componentWillUnmount === 'function') {\n                  safelyCallComponentWillUnmount(current$$1, instance);\n                }\n\n                return;\n              }\n\n            case HostComponent:\n              {\n                safelyDetachRef(current$$1);\n                return;\n              }\n\n            case HostPortal:\n              {\n                // TODO: this is recursive.\n                // We are also not using this parent because\n                // the portal will get pushed immediately.\n                if (supportsMutation) {\n                  unmountHostComponents(current$$1);\n                } else if (supportsPersistence) {\n                  emptyPortalContainer(current$$1);\n                }\n\n                return;\n              }\n          }\n        }\n\n        function commitNestedUnmounts(root) {\n          // While we're inside a removed host node we don't want to call\n          // removeChild on the inner nodes because they're removed by the top\n          // call anyway. We also want to call componentWillUnmount on all\n          // composites before this host node is removed from the tree. Therefore\n          var node = root;\n\n          while (true) {\n            commitUnmount(node); // Visit children because they may contain more composite or host nodes.\n            // Skip portals because commitUnmount() currently visits them recursively.\n\n            if (node.child !== null && ( // If we use mutation we drill down into portals using commitUnmount above.\n            // If we don't use mutation we drill down into portals here instead.\n            !supportsMutation || node.tag !== HostPortal)) {\n              node.child.return = node;\n              node = node.child;\n              continue;\n            }\n\n            if (node === root) {\n              return;\n            }\n\n            while (node.sibling === null) {\n              if (node.return === null || node.return === root) {\n                return;\n              }\n\n              node = node.return;\n            }\n\n            node.sibling.return = node.return;\n            node = node.sibling;\n          }\n        }\n\n        function detachFiber(current$$1) {\n          // Cut off the return pointers to disconnect it from the tree. Ideally, we\n          // should clear the child pointer of the parent alternate to let this\n          // get GC:ed but we don't know which for sure which parent is the current\n          // one so we'll settle for GC:ing the subtree of this child. This child\n          // itself will be GC:ed when the parent updates the next time.\n          current$$1.return = null;\n          current$$1.child = null;\n          current$$1.memoizedState = null;\n          current$$1.updateQueue = null;\n          var alternate = current$$1.alternate;\n\n          if (alternate !== null) {\n            alternate.return = null;\n            alternate.child = null;\n            alternate.memoizedState = null;\n            alternate.updateQueue = null;\n          }\n        }\n\n        function emptyPortalContainer(current$$1) {\n          if (!supportsPersistence) {\n            return;\n          }\n\n          var portal = current$$1.stateNode;\n          var containerInfo = portal.containerInfo;\n          var emptyChildSet = createContainerChildSet(containerInfo);\n          replaceContainerChildren(containerInfo, emptyChildSet);\n        }\n\n        function commitContainer(finishedWork) {\n          if (!supportsPersistence) {\n            return;\n          }\n\n          switch (finishedWork.tag) {\n            case ClassComponent:\n              {\n                return;\n              }\n\n            case HostComponent:\n              {\n                return;\n              }\n\n            case HostText:\n              {\n                return;\n              }\n\n            case HostRoot:\n            case HostPortal:\n              {\n                var portalOrRoot = finishedWork.stateNode;\n                var containerInfo = portalOrRoot.containerInfo,\n                    _pendingChildren = portalOrRoot.pendingChildren;\n                replaceContainerChildren(containerInfo, _pendingChildren);\n                return;\n              }\n\n            default:\n              {\n                invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');\n              }\n          }\n        }\n\n        function getHostParentFiber(fiber) {\n          var parent = fiber.return;\n\n          while (parent !== null) {\n            if (isHostParent(parent)) {\n              return parent;\n            }\n\n            parent = parent.return;\n          }\n\n          invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.');\n        }\n\n        function isHostParent(fiber) {\n          return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;\n        }\n\n        function getHostSibling(fiber) {\n          // We're going to search forward into the tree until we find a sibling host\n          // node. Unfortunately, if multiple insertions are done in a row we have to\n          // search past them. This leads to exponential search for the next sibling.\n          var node = fiber;\n\n          siblings: while (true) {\n            // If we didn't find anything, let's try the next sibling.\n            while (node.sibling === null) {\n              if (node.return === null || isHostParent(node.return)) {\n                // If we pop out of the root or hit the parent the fiber we are the\n                // last sibling.\n                return null;\n              }\n\n              node = node.return;\n            }\n\n            node.sibling.return = node.return;\n            node = node.sibling;\n\n            while (node.tag !== HostComponent && node.tag !== HostText) {\n              // If it is not host node and, we might have a host node inside it.\n              // Try to search down until we find one.\n              if (node.effectTag & Placement) {\n                // If we don't have a child, try the siblings instead.\n                continue siblings;\n              } // If we don't have a child, try the siblings instead.\n              // We also skip portals because they are not part of this host tree.\n\n\n              if (node.child === null || node.tag === HostPortal) {\n                continue siblings;\n              } else {\n                node.child.return = node;\n                node = node.child;\n              }\n            } // Check if this host node is stable or about to be placed.\n\n\n            if (!(node.effectTag & Placement)) {\n              // Found it!\n              return node.stateNode;\n            }\n          }\n        }\n\n        function commitPlacement(finishedWork) {\n          if (!supportsMutation) {\n            return;\n          } // Recursively insert all host nodes into the parent.\n\n\n          var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.\n\n          var parent = void 0;\n          var isContainer = void 0;\n\n          switch (parentFiber.tag) {\n            case HostComponent:\n              parent = parentFiber.stateNode;\n              isContainer = false;\n              break;\n\n            case HostRoot:\n              parent = parentFiber.stateNode.containerInfo;\n              isContainer = true;\n              break;\n\n            case HostPortal:\n              parent = parentFiber.stateNode.containerInfo;\n              isContainer = true;\n              break;\n\n            default:\n              invariant(false, 'Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.');\n          }\n\n          if (parentFiber.effectTag & ContentReset) {\n            // Reset the text content of the parent before doing any insertions\n            resetTextContent(parent); // Clear ContentReset from the effect tag\n\n            parentFiber.effectTag &= ~ContentReset;\n          }\n\n          var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need recurse down its\n          // children to find all the terminal nodes.\n\n          var node = finishedWork;\n\n          while (true) {\n            if (node.tag === HostComponent || node.tag === HostText) {\n              if (before) {\n                if (isContainer) {\n                  insertInContainerBefore(parent, node.stateNode, before);\n                } else {\n                  insertBefore(parent, node.stateNode, before);\n                }\n              } else {\n                if (isContainer) {\n                  appendChildToContainer(parent, node.stateNode);\n                } else {\n                  appendChild(parent, node.stateNode);\n                }\n              }\n            } else if (node.tag === HostPortal) {// If the insertion itself is a portal, then we don't want to traverse\n              // down its children. Instead, we'll get insertions from each child in\n              // the portal directly.\n            } else if (node.child !== null) {\n              node.child.return = node;\n              node = node.child;\n              continue;\n            }\n\n            if (node === finishedWork) {\n              return;\n            }\n\n            while (node.sibling === null) {\n              if (node.return === null || node.return === finishedWork) {\n                return;\n              }\n\n              node = node.return;\n            }\n\n            node.sibling.return = node.return;\n            node = node.sibling;\n          }\n        }\n\n        function unmountHostComponents(current$$1) {\n          // We only have the top Fiber that was deleted but we need recurse down its\n          var node = current$$1; // Each iteration, currentParent is populated with node's host parent if not\n          // currentParentIsValid.\n\n          var currentParentIsValid = false; // Note: these two variables *must* always be updated together.\n\n          var currentParent = void 0;\n          var currentParentIsContainer = void 0;\n\n          while (true) {\n            if (!currentParentIsValid) {\n              var parent = node.return;\n\n              findParent: while (true) {\n                !(parent !== null) ? invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n\n                switch (parent.tag) {\n                  case HostComponent:\n                    currentParent = parent.stateNode;\n                    currentParentIsContainer = false;\n                    break findParent;\n\n                  case HostRoot:\n                    currentParent = parent.stateNode.containerInfo;\n                    currentParentIsContainer = true;\n                    break findParent;\n\n                  case HostPortal:\n                    currentParent = parent.stateNode.containerInfo;\n                    currentParentIsContainer = true;\n                    break findParent;\n                }\n\n                parent = parent.return;\n              }\n\n              currentParentIsValid = true;\n            }\n\n            if (node.tag === HostComponent || node.tag === HostText) {\n              commitNestedUnmounts(node); // After all the children have unmounted, it is now safe to remove the\n              // node from the tree.\n\n              if (currentParentIsContainer) {\n                removeChildFromContainer(currentParent, node.stateNode);\n              } else {\n                removeChild(currentParent, node.stateNode);\n              } // Don't visit children because we already visited them.\n\n            } else if (node.tag === HostPortal) {\n              // When we go into a portal, it becomes the parent to remove from.\n              // We will reassign it back when we pop the portal on the way up.\n              currentParent = node.stateNode.containerInfo;\n              currentParentIsContainer = true; // Visit children because portals might contain host components.\n\n              if (node.child !== null) {\n                node.child.return = node;\n                node = node.child;\n                continue;\n              }\n            } else {\n              commitUnmount(node); // Visit children because we may find more host components below.\n\n              if (node.child !== null) {\n                node.child.return = node;\n                node = node.child;\n                continue;\n              }\n            }\n\n            if (node === current$$1) {\n              return;\n            }\n\n            while (node.sibling === null) {\n              if (node.return === null || node.return === current$$1) {\n                return;\n              }\n\n              node = node.return;\n\n              if (node.tag === HostPortal) {\n                // When we go out of the portal, we need to restore the parent.\n                // Since we don't keep a stack of them, we will search for it.\n                currentParentIsValid = false;\n              }\n            }\n\n            node.sibling.return = node.return;\n            node = node.sibling;\n          }\n        }\n\n        function commitDeletion(current$$1) {\n          if (supportsMutation) {\n            // Recursively delete all host nodes from the parent.\n            // Detach refs and call componentWillUnmount() on the whole subtree.\n            unmountHostComponents(current$$1);\n          } else {\n            // Detach refs and call componentWillUnmount() on the whole subtree.\n            commitNestedUnmounts(current$$1);\n          }\n\n          detachFiber(current$$1);\n        }\n\n        function commitWork(current$$1, finishedWork) {\n          if (!supportsMutation) {\n            switch (finishedWork.tag) {\n              case FunctionComponent:\n              case ForwardRef:\n              case MemoComponent:\n              case SimpleMemoComponent:\n                {\n                  // Note: We currently never use MountMutation, but useLayout uses\n                  // UnmountMutation.\n                  commitHookEffectList(UnmountMutation, MountMutation, finishedWork);\n                  return;\n                }\n            }\n\n            commitContainer(finishedWork);\n            return;\n          }\n\n          switch (finishedWork.tag) {\n            case FunctionComponent:\n            case ForwardRef:\n            case MemoComponent:\n            case SimpleMemoComponent:\n              {\n                // Note: We currently never use MountMutation, but useLayout uses\n                // UnmountMutation.\n                commitHookEffectList(UnmountMutation, MountMutation, finishedWork);\n                return;\n              }\n\n            case ClassComponent:\n              {\n                return;\n              }\n\n            case HostComponent:\n              {\n                var instance = finishedWork.stateNode;\n\n                if (instance != null) {\n                  // Commit the work prepared earlier.\n                  var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps\n                  // as the newProps. The updatePayload will contain the real change in\n                  // this case.\n\n                  var oldProps = current$$1 !== null ? current$$1.memoizedProps : newProps;\n                  var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.\n\n                  var updatePayload = finishedWork.updateQueue;\n                  finishedWork.updateQueue = null;\n\n                  if (updatePayload !== null) {\n                    commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);\n                  }\n                }\n\n                return;\n              }\n\n            case HostText:\n              {\n                !(finishedWork.stateNode !== null) ? invariant(false, 'This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n                var textInstance = finishedWork.stateNode;\n                var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps\n                // as the newProps. The updatePayload will contain the real change in\n                // this case.\n\n                var oldText = current$$1 !== null ? current$$1.memoizedProps : newText;\n                commitTextUpdate(textInstance, oldText, newText);\n                return;\n              }\n\n            case HostRoot:\n              {\n                return;\n              }\n\n            case Profiler:\n              {\n                return;\n              }\n\n            case SuspenseComponent:\n              {\n                var newState = finishedWork.memoizedState;\n                var newDidTimeout = void 0;\n                var primaryChildParent = finishedWork;\n\n                if (newState === null) {\n                  newDidTimeout = false;\n                } else {\n                  newDidTimeout = true;\n                  primaryChildParent = finishedWork.child;\n\n                  if (newState.timedOutAt === NoWork) {\n                    // If the children had not already timed out, record the time.\n                    // This is used to compute the elapsed time during subsequent\n                    // attempts to render the children.\n                    newState.timedOutAt = requestCurrentTime();\n                  }\n                }\n\n                if (primaryChildParent !== null) {\n                  hideOrUnhideAllChildren(primaryChildParent, newDidTimeout);\n                } // If this boundary just timed out, then it will have a set of thenables.\n                // For each thenable, attach a listener so that when it resolves, React\n                // attempts to re-render the boundary in the primary (pre-timeout) state.\n\n\n                var thenables = finishedWork.updateQueue;\n\n                if (thenables !== null) {\n                  finishedWork.updateQueue = null;\n                  var retryCache = finishedWork.stateNode;\n\n                  if (retryCache === null) {\n                    retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n                  }\n\n                  thenables.forEach(function (thenable) {\n                    // Memoize using the boundary fiber to prevent redundant listeners.\n                    var retry = retryTimedOutBoundary.bind(null, finishedWork, thenable);\n\n                    if (enableSchedulerTracing) {\n                      retry = tracing.unstable_wrap(retry);\n                    }\n\n                    if (!retryCache.has(thenable)) {\n                      retryCache.add(thenable);\n                      thenable.then(retry, retry);\n                    }\n                  });\n                }\n\n                return;\n              }\n\n            case IncompleteClassComponent:\n              {\n                return;\n              }\n\n            default:\n              {\n                invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');\n              }\n          }\n        }\n\n        function commitResetTextContent(current$$1) {\n          if (!supportsMutation) {\n            return;\n          }\n\n          resetTextContent(current$$1.stateNode);\n        }\n\n        var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n\n        function createRootErrorUpdate(fiber, errorInfo, expirationTime) {\n          var update = createUpdate(expirationTime); // Unmount the root by rendering null.\n\n          update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property\n          // being called \"element\".\n\n          update.payload = {\n            element: null\n          };\n          var error = errorInfo.value;\n\n          update.callback = function () {\n            onUncaughtError(error);\n            logError(fiber, errorInfo);\n          };\n\n          return update;\n        }\n\n        function createClassErrorUpdate(fiber, errorInfo, expirationTime) {\n          var update = createUpdate(expirationTime);\n          update.tag = CaptureUpdate;\n          var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n\n          if (typeof getDerivedStateFromError === 'function') {\n            var error = errorInfo.value;\n\n            update.payload = function () {\n              return getDerivedStateFromError(error);\n            };\n          }\n\n          var inst = fiber.stateNode;\n\n          if (inst !== null && typeof inst.componentDidCatch === 'function') {\n            update.callback = function callback() {\n              if (typeof getDerivedStateFromError !== 'function') {\n                // To preserve the preexisting retry behavior of error boundaries,\n                // we keep track of which ones already failed during this batch.\n                // This gets reset before we yield back to the browser.\n                // TODO: Warn in strict mode if getDerivedStateFromError is\n                // not defined.\n                markLegacyErrorBoundaryAsFailed(this);\n              }\n\n              var error = errorInfo.value;\n              var stack = errorInfo.stack;\n              logError(fiber, errorInfo);\n              this.componentDidCatch(error, {\n                componentStack: stack !== null ? stack : ''\n              });\n              {\n                if (typeof getDerivedStateFromError !== 'function') {\n                  // If componentDidCatch is the only error boundary method defined,\n                  // then it needs to call setState to recover from errors.\n                  // If no state update is scheduled then the boundary will swallow the error.\n                  !(fiber.expirationTime === Sync) ? warningWithoutStack$1(false, '%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentName(fiber.type) || 'Unknown') : void 0;\n                }\n              }\n            };\n          }\n\n          return update;\n        }\n\n        function throwException(root, returnFiber, sourceFiber, value, renderExpirationTime) {\n          // The source fiber did not complete.\n          sourceFiber.effectTag |= Incomplete; // Its effect list is no longer valid.\n\n          sourceFiber.firstEffect = sourceFiber.lastEffect = null;\n\n          if (value !== null && typeof value === 'object' && typeof value.then === 'function') {\n            // This is a thenable.\n            var thenable = value; // Find the earliest timeout threshold of all the placeholders in the\n            // ancestor path. We could avoid this traversal by storing the thresholds on\n            // the stack, but we choose not to because we only hit this path if we're\n            // IO-bound (i.e. if something suspends). Whereas the stack is used even in\n            // the non-IO- bound case.\n\n            var _workInProgress = returnFiber;\n            var earliestTimeoutMs = -1;\n            var startTimeMs = -1;\n\n            do {\n              if (_workInProgress.tag === SuspenseComponent) {\n                var current$$1 = _workInProgress.alternate;\n\n                if (current$$1 !== null) {\n                  var currentState = current$$1.memoizedState;\n\n                  if (currentState !== null) {\n                    // Reached a boundary that already timed out. Do not search\n                    // any further.\n                    var timedOutAt = currentState.timedOutAt;\n                    startTimeMs = expirationTimeToMs(timedOutAt); // Do not search any further.\n\n                    break;\n                  }\n                }\n\n                var timeoutPropMs = _workInProgress.pendingProps.maxDuration;\n\n                if (typeof timeoutPropMs === 'number') {\n                  if (timeoutPropMs <= 0) {\n                    earliestTimeoutMs = 0;\n                  } else if (earliestTimeoutMs === -1 || timeoutPropMs < earliestTimeoutMs) {\n                    earliestTimeoutMs = timeoutPropMs;\n                  }\n                }\n              }\n\n              _workInProgress = _workInProgress.return;\n            } while (_workInProgress !== null); // Schedule the nearest Suspense to re-render the timed out view.\n\n\n            _workInProgress = returnFiber;\n\n            do {\n              if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress)) {\n                // Found the nearest boundary.\n                // Stash the promise on the boundary fiber. If the boundary times out, we'll\n                var thenables = _workInProgress.updateQueue;\n\n                if (thenables === null) {\n                  _workInProgress.updateQueue = new Set([thenable]);\n                } else {\n                  thenables.add(thenable);\n                } // If the boundary is outside of concurrent mode, we should *not*\n                // suspend the commit. Pretend as if the suspended component rendered\n                // null and keep rendering. In the commit phase, we'll schedule a\n                // subsequent synchronous update to re-render the Suspense.\n                //\n                // Note: It doesn't matter whether the component that suspended was\n                // inside a concurrent mode tree. If the Suspense is outside of it, we\n                // should *not* suspend the commit.\n\n\n                if ((_workInProgress.mode & ConcurrentMode) === NoEffect) {\n                  _workInProgress.effectTag |= DidCapture; // We're going to commit this fiber even though it didn't complete.\n                  // But we shouldn't call any lifecycle methods or callbacks. Remove\n                  // all lifecycle effect tags.\n\n                  sourceFiber.effectTag &= ~(LifecycleEffectMask | Incomplete);\n\n                  if (sourceFiber.tag === ClassComponent) {\n                    var currentSourceFiber = sourceFiber.alternate;\n\n                    if (currentSourceFiber === null) {\n                      // This is a new mount. Change the tag so it's not mistaken for a\n                      // completed class component. For example, we should not call\n                      // componentWillUnmount if it is deleted.\n                      sourceFiber.tag = IncompleteClassComponent;\n                    } else {\n                      // When we try rendering again, we should not reuse the current fiber,\n                      // since it's known to be in an inconsistent state. Use a force updte to\n                      // prevent a bail out.\n                      var update = createUpdate(Sync);\n                      update.tag = ForceUpdate;\n                      enqueueUpdate(sourceFiber, update);\n                    }\n                  } // The source fiber did not complete. Mark it with Sync priority to\n                  // indicate that it still has pending work.\n\n\n                  sourceFiber.expirationTime = Sync; // Exit without suspending.\n\n                  return;\n                } // Confirmed that the boundary is in a concurrent mode tree. Continue\n                // with the normal suspend path.\n                // Attach a listener to the promise to \"ping\" the root and retry. But\n                // only if one does not already exist for the current render expiration\n                // time (which acts like a \"thread ID\" here).\n\n\n                var pingCache = root.pingCache;\n                var threadIDs = void 0;\n\n                if (pingCache === null) {\n                  pingCache = root.pingCache = new PossiblyWeakMap();\n                  threadIDs = new Set();\n                  pingCache.set(thenable, threadIDs);\n                } else {\n                  threadIDs = pingCache.get(thenable);\n\n                  if (threadIDs === undefined) {\n                    threadIDs = new Set();\n                    pingCache.set(thenable, threadIDs);\n                  }\n                }\n\n                if (!threadIDs.has(renderExpirationTime)) {\n                  // Memoize using the thread ID to prevent redundant listeners.\n                  threadIDs.add(renderExpirationTime);\n                  var ping = pingSuspendedRoot.bind(null, root, thenable, renderExpirationTime);\n\n                  if (enableSchedulerTracing) {\n                    ping = tracing.unstable_wrap(ping);\n                  }\n\n                  thenable.then(ping, ping);\n                }\n\n                var absoluteTimeoutMs = void 0;\n\n                if (earliestTimeoutMs === -1) {\n                  // If no explicit threshold is given, default to an abitrarily large\n                  // value. The actual size doesn't matter because the threshold for the\n                  // whole tree will be clamped to the expiration time.\n                  absoluteTimeoutMs = maxSigned31BitInt;\n                } else {\n                  if (startTimeMs === -1) {\n                    // This suspend happened outside of any already timed-out\n                    // placeholders. We don't know exactly when the update was\n                    // scheduled, but we can infer an approximate start time from the\n                    // expiration time. First, find the earliest uncommitted expiration\n                    // time in the tree, including work that is suspended. Then subtract\n                    // the offset used to compute an async update's expiration time.\n                    // This will cause high priority (interactive) work to expire\n                    // earlier than necessary, but we can account for this by adjusting\n                    // for the Just Noticeable Difference.\n                    var earliestExpirationTime = findEarliestOutstandingPriorityLevel(root, renderExpirationTime);\n                    var earliestExpirationTimeMs = expirationTimeToMs(earliestExpirationTime);\n                    startTimeMs = earliestExpirationTimeMs - LOW_PRIORITY_EXPIRATION;\n                  }\n\n                  absoluteTimeoutMs = startTimeMs + earliestTimeoutMs;\n                } // Mark the earliest timeout in the suspended fiber's ancestor path.\n                // After completing the root, we'll take the largest of all the\n                // suspended fiber's timeouts and use it to compute a timeout for the\n                // whole tree.\n\n\n                renderDidSuspend(root, absoluteTimeoutMs, renderExpirationTime);\n                _workInProgress.effectTag |= ShouldCapture;\n                _workInProgress.expirationTime = renderExpirationTime;\n                return;\n              } // This boundary already captured during this render. Continue to the next\n              // boundary.\n\n\n              _workInProgress = _workInProgress.return;\n            } while (_workInProgress !== null); // No boundary was found. Fallthrough to error mode.\n            // TODO: Use invariant so the message is stripped in prod?\n\n\n            value = new Error((getComponentName(sourceFiber.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\\n' + '\\n' + 'Add a <Suspense fallback=...> component higher in the tree to ' + 'provide a loading indicator or placeholder to display.' + getStackByFiberInDevAndProd(sourceFiber));\n          } // We didn't find a boundary that could handle this type of exception. Start\n          // over and traverse parent path again, this time treating the exception\n          // as an error.\n\n\n          renderDidError();\n          value = createCapturedValue(value, sourceFiber);\n          var workInProgress = returnFiber;\n\n          do {\n            switch (workInProgress.tag) {\n              case HostRoot:\n                {\n                  var _errorInfo = value;\n                  workInProgress.effectTag |= ShouldCapture;\n                  workInProgress.expirationTime = renderExpirationTime;\n\n                  var _update = createRootErrorUpdate(workInProgress, _errorInfo, renderExpirationTime);\n\n                  enqueueCapturedUpdate(workInProgress, _update);\n                  return;\n                }\n\n              case ClassComponent:\n                // Capture and retry\n                var errorInfo = value;\n                var ctor = workInProgress.type;\n                var instance = workInProgress.stateNode;\n\n                if ((workInProgress.effectTag & DidCapture) === NoEffect && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {\n                  workInProgress.effectTag |= ShouldCapture;\n                  workInProgress.expirationTime = renderExpirationTime; // Schedule the error boundary to re-render using updated state\n\n                  var _update2 = createClassErrorUpdate(workInProgress, errorInfo, renderExpirationTime);\n\n                  enqueueCapturedUpdate(workInProgress, _update2);\n                  return;\n                }\n\n                break;\n\n              default:\n                break;\n            }\n\n            workInProgress = workInProgress.return;\n          } while (workInProgress !== null);\n        }\n\n        function unwindWork(workInProgress, renderExpirationTime) {\n          switch (workInProgress.tag) {\n            case ClassComponent:\n              {\n                var Component = workInProgress.type;\n\n                if (isContextProvider(Component)) {\n                  popContext(workInProgress);\n                }\n\n                var effectTag = workInProgress.effectTag;\n\n                if (effectTag & ShouldCapture) {\n                  workInProgress.effectTag = effectTag & ~ShouldCapture | DidCapture;\n                  return workInProgress;\n                }\n\n                return null;\n              }\n\n            case HostRoot:\n              {\n                popHostContainer(workInProgress);\n                popTopLevelContextObject(workInProgress);\n                var _effectTag = workInProgress.effectTag;\n                !((_effectTag & DidCapture) === NoEffect) ? invariant(false, 'The root failed to unmount after an error. This is likely a bug in React. Please file an issue.') : void 0;\n                workInProgress.effectTag = _effectTag & ~ShouldCapture | DidCapture;\n                return workInProgress;\n              }\n\n            case HostComponent:\n              {\n                popHostContext(workInProgress);\n                return null;\n              }\n\n            case SuspenseComponent:\n              {\n                var _effectTag2 = workInProgress.effectTag;\n\n                if (_effectTag2 & ShouldCapture) {\n                  workInProgress.effectTag = _effectTag2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.\n\n                  return workInProgress;\n                }\n\n                return null;\n              }\n\n            case HostPortal:\n              popHostContainer(workInProgress);\n              return null;\n\n            case ContextProvider:\n              popProvider(workInProgress);\n              return null;\n\n            default:\n              return null;\n          }\n        }\n\n        function unwindInterruptedWork(interruptedWork) {\n          switch (interruptedWork.tag) {\n            case ClassComponent:\n              {\n                var childContextTypes = interruptedWork.type.childContextTypes;\n\n                if (childContextTypes !== null && childContextTypes !== undefined) {\n                  popContext(interruptedWork);\n                }\n\n                break;\n              }\n\n            case HostRoot:\n              {\n                popHostContainer(interruptedWork);\n                popTopLevelContextObject(interruptedWork);\n                break;\n              }\n\n            case HostComponent:\n              {\n                popHostContext(interruptedWork);\n                break;\n              }\n\n            case HostPortal:\n              popHostContainer(interruptedWork);\n              break;\n\n            case ContextProvider:\n              popProvider(interruptedWork);\n              break;\n\n            default:\n              break;\n          }\n        }\n\n        var Dispatcher = {\n          readContext: readContext,\n          useCallback: useCallback,\n          useContext: useContext,\n          useEffect: useEffect,\n          useImperativeMethods: useImperativeMethods,\n          useLayoutEffect: useLayoutEffect,\n          useMemo: useMemo,\n          useReducer: useReducer,\n          useRef: useRef,\n          useState: useState\n        };\n        var DispatcherWithoutHooks = {\n          readContext: readContext\n        };\n        var ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner;\n        var didWarnAboutStateTransition = void 0;\n        var didWarnSetStateChildContext = void 0;\n        var warnAboutUpdateOnUnmounted = void 0;\n        var warnAboutInvalidUpdates = void 0;\n\n        if (enableSchedulerTracing) {\n          // Provide explicit error message when production+profiling bundle of e.g. react-dom\n          // is used with production (non-profiling) bundle of scheduler/tracing\n          !(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null) ? invariant(false, 'It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling') : void 0;\n        }\n\n        {\n          didWarnAboutStateTransition = false;\n          didWarnSetStateChildContext = false;\n          var didWarnStateUpdateForUnmountedComponent = {};\n\n          warnAboutUpdateOnUnmounted = function warnAboutUpdateOnUnmounted(fiber, isClass) {\n            // We show the whole stack but dedupe on the top component's name because\n            // the problematic code almost always lies inside that component.\n            var componentName = getComponentName(fiber.type) || 'ReactComponent';\n\n            if (didWarnStateUpdateForUnmountedComponent[componentName]) {\n              return;\n            }\n\n            warningWithoutStack$1(false, \"Can't perform a React state update on an unmounted component. This \" + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in %s.%s', isClass ? 'the componentWillUnmount method' : 'a useEffect cleanup function', getStackByFiberInDevAndProd(fiber));\n            didWarnStateUpdateForUnmountedComponent[componentName] = true;\n          };\n\n          warnAboutInvalidUpdates = function warnAboutInvalidUpdates(instance) {\n            switch (phase) {\n              case 'getChildContext':\n                if (didWarnSetStateChildContext) {\n                  return;\n                }\n\n                warningWithoutStack$1(false, 'setState(...): Cannot call setState() inside getChildContext()');\n                didWarnSetStateChildContext = true;\n                break;\n\n              case 'render':\n                if (didWarnAboutStateTransition) {\n                  return;\n                }\n\n                warningWithoutStack$1(false, 'Cannot update during an existing state transition (such as within ' + '`render`). Render methods should be a pure function of props and state.');\n                didWarnAboutStateTransition = true;\n                break;\n            }\n          };\n        } // Used to ensure computeUniqueAsyncExpiration is monotonically decreasing.\n\n        var lastUniqueAsyncExpiration = Sync - 1; // Represents the expiration time that incoming updates should use. (If this\n        // is NoWork, use the default strategy: async updates in async mode, sync\n        // updates in sync mode.)\n\n        var expirationContext = NoWork;\n        var isWorking = false; // The next work in progress fiber that we're currently working on.\n\n        var nextUnitOfWork = null;\n        var nextRoot = null; // The time at which we're currently rendering work.\n\n        var nextRenderExpirationTime = NoWork;\n        var nextLatestAbsoluteTimeoutMs = -1;\n        var nextRenderDidError = false; // The next fiber with an effect that we're currently committing.\n\n        var nextEffect = null;\n        var isCommitting$1 = false;\n        var rootWithPendingPassiveEffects = null;\n        var passiveEffectCallbackHandle = null;\n        var passiveEffectCallback = null;\n        var legacyErrorBoundariesThatAlreadyFailed = null; // Used for performance tracking.\n\n        var interruptedBy = null;\n        var stashedWorkInProgressProperties = void 0;\n        var replayUnitOfWork = void 0;\n        var mayReplayFailedUnitOfWork = void 0;\n        var isReplayingFailedUnitOfWork = void 0;\n        var originalReplayError = void 0;\n        var rethrowOriginalError = void 0;\n\n        if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n          stashedWorkInProgressProperties = null;\n          mayReplayFailedUnitOfWork = true;\n          isReplayingFailedUnitOfWork = false;\n          originalReplayError = null;\n\n          replayUnitOfWork = function replayUnitOfWork(failedUnitOfWork, thrownValue, isYieldy) {\n            if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {\n              // Don't replay promises. Treat everything else like an error.\n              // TODO: Need to figure out a different strategy if/when we add\n              // support for catching other types.\n              return;\n            } // Restore the original state of the work-in-progress\n\n\n            if (stashedWorkInProgressProperties === null) {\n              // This should never happen. Don't throw because this code is DEV-only.\n              warningWithoutStack$1(false, 'Could not replay rendering after an error. This is likely a bug in React. ' + 'Please file an issue.');\n              return;\n            }\n\n            assignFiberPropertiesInDEV(failedUnitOfWork, stashedWorkInProgressProperties);\n\n            switch (failedUnitOfWork.tag) {\n              case HostRoot:\n                popHostContainer(failedUnitOfWork);\n                popTopLevelContextObject(failedUnitOfWork);\n                break;\n\n              case HostComponent:\n                popHostContext(failedUnitOfWork);\n                break;\n\n              case ClassComponent:\n                {\n                  var Component = failedUnitOfWork.type;\n\n                  if (isContextProvider(Component)) {\n                    popContext(failedUnitOfWork);\n                  }\n\n                  break;\n                }\n\n              case HostPortal:\n                popHostContainer(failedUnitOfWork);\n                break;\n\n              case ContextProvider:\n                popProvider(failedUnitOfWork);\n                break;\n            } // Replay the begin phase.\n\n\n            isReplayingFailedUnitOfWork = true;\n            originalReplayError = thrownValue;\n            invokeGuardedCallback(null, workLoop, null, isYieldy);\n            isReplayingFailedUnitOfWork = false;\n            originalReplayError = null;\n\n            if (hasCaughtError()) {\n              var replayError = clearCaughtError();\n\n              if (replayError != null && thrownValue != null) {\n                try {\n                  // Reading the expando property is intentionally\n                  // inside `try` because it might be a getter or Proxy.\n                  if (replayError._suppressLogging) {\n                    // Also suppress logging for the original error.\n                    thrownValue._suppressLogging = true;\n                  }\n                } catch (inner) {// Ignore.\n                }\n              }\n            } else {\n              // If the begin phase did not fail the second time, set this pointer\n              // back to the original value.\n              nextUnitOfWork = failedUnitOfWork;\n            }\n          };\n\n          rethrowOriginalError = function rethrowOriginalError() {\n            throw originalReplayError;\n          };\n        }\n\n        function resetStack() {\n          if (nextUnitOfWork !== null) {\n            var interruptedWork = nextUnitOfWork.return;\n\n            while (interruptedWork !== null) {\n              unwindInterruptedWork(interruptedWork);\n              interruptedWork = interruptedWork.return;\n            }\n          }\n\n          {\n            ReactStrictModeWarnings.discardPendingWarnings();\n            checkThatStackIsEmpty();\n          }\n          nextRoot = null;\n          nextRenderExpirationTime = NoWork;\n          nextLatestAbsoluteTimeoutMs = -1;\n          nextRenderDidError = false;\n          nextUnitOfWork = null;\n        }\n\n        function commitAllHostEffects() {\n          while (nextEffect !== null) {\n            {\n              setCurrentFiber(nextEffect);\n            }\n            recordEffect();\n            var effectTag = nextEffect.effectTag;\n\n            if (effectTag & ContentReset) {\n              commitResetTextContent(nextEffect);\n            }\n\n            if (effectTag & Ref) {\n              var current$$1 = nextEffect.alternate;\n\n              if (current$$1 !== null) {\n                commitDetachRef(current$$1);\n              }\n            } // The following switch statement is only concerned about placement,\n            // updates, and deletions. To avoid needing to add a case for every\n            // possible bitmap value, we remove the secondary effects from the\n            // effect tag and switch on that value.\n\n\n            var primaryEffectTag = effectTag & (Placement | Update | Deletion);\n\n            switch (primaryEffectTag) {\n              case Placement:\n                {\n                  commitPlacement(nextEffect); // Clear the \"placement\" from effect tag so that we know that this is inserted, before\n                  // any life-cycles like componentDidMount gets called.\n                  // TODO: findDOMNode doesn't rely on this any more but isMounted\n                  // does and isMounted is deprecated anyway so we should be able\n                  // to kill this.\n\n                  nextEffect.effectTag &= ~Placement;\n                  break;\n                }\n\n              case PlacementAndUpdate:\n                {\n                  // Placement\n                  commitPlacement(nextEffect); // Clear the \"placement\" from effect tag so that we know that this is inserted, before\n                  // any life-cycles like componentDidMount gets called.\n\n                  nextEffect.effectTag &= ~Placement; // Update\n\n                  var _current = nextEffect.alternate;\n                  commitWork(_current, nextEffect);\n                  break;\n                }\n\n              case Update:\n                {\n                  var _current2 = nextEffect.alternate;\n                  commitWork(_current2, nextEffect);\n                  break;\n                }\n\n              case Deletion:\n                {\n                  commitDeletion(nextEffect);\n                  break;\n                }\n            }\n\n            nextEffect = nextEffect.nextEffect;\n          }\n\n          {\n            resetCurrentFiber();\n          }\n        }\n\n        function commitBeforeMutationLifecycles() {\n          while (nextEffect !== null) {\n            {\n              setCurrentFiber(nextEffect);\n            }\n            var effectTag = nextEffect.effectTag;\n\n            if (effectTag & Snapshot) {\n              recordEffect();\n              var current$$1 = nextEffect.alternate;\n              commitBeforeMutationLifeCycles(current$$1, nextEffect);\n            }\n\n            nextEffect = nextEffect.nextEffect;\n          }\n\n          {\n            resetCurrentFiber();\n          }\n        }\n\n        function commitAllLifeCycles(finishedRoot, committedExpirationTime) {\n          {\n            ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n            ReactStrictModeWarnings.flushLegacyContextWarning();\n\n            if (warnAboutDeprecatedLifecycles) {\n              ReactStrictModeWarnings.flushPendingDeprecationWarnings();\n            }\n          }\n\n          while (nextEffect !== null) {\n            var effectTag = nextEffect.effectTag;\n\n            if (effectTag & (Update | Callback)) {\n              recordEffect();\n              var current$$1 = nextEffect.alternate;\n              commitLifeCycles(finishedRoot, current$$1, nextEffect, committedExpirationTime);\n            }\n\n            if (effectTag & Ref) {\n              recordEffect();\n              commitAttachRef(nextEffect);\n            }\n\n            if (enableHooks && effectTag & Passive) {\n              rootWithPendingPassiveEffects = finishedRoot;\n            }\n\n            nextEffect = nextEffect.nextEffect;\n          }\n        }\n\n        function commitPassiveEffects(root, firstEffect) {\n          rootWithPendingPassiveEffects = null;\n          passiveEffectCallbackHandle = null;\n          passiveEffectCallback = null; // Set this to true to prevent re-entrancy\n\n          var previousIsRendering = isRendering;\n          isRendering = true;\n          var effect = firstEffect;\n\n          do {\n            if (effect.effectTag & Passive) {\n              var didError = false;\n              var error = void 0;\n              {\n                invokeGuardedCallback(null, commitPassiveHookEffects, null, effect);\n\n                if (hasCaughtError()) {\n                  didError = true;\n                  error = clearCaughtError();\n                }\n              }\n\n              if (didError) {\n                captureCommitPhaseError(effect, error);\n              }\n            }\n\n            effect = effect.nextEffect;\n          } while (effect !== null);\n\n          isRendering = previousIsRendering; // Check if work was scheduled by one of the effects\n\n          var rootExpirationTime = root.expirationTime;\n\n          if (rootExpirationTime !== NoWork) {\n            requestWork(root, rootExpirationTime);\n          }\n        }\n\n        function isAlreadyFailedLegacyErrorBoundary(instance) {\n          return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);\n        }\n\n        function markLegacyErrorBoundaryAsFailed(instance) {\n          if (legacyErrorBoundariesThatAlreadyFailed === null) {\n            legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n          } else {\n            legacyErrorBoundariesThatAlreadyFailed.add(instance);\n          }\n        }\n\n        function flushPassiveEffects() {\n          if (passiveEffectCallback !== null) {\n            scheduler.unstable_cancelCallback(passiveEffectCallbackHandle); // We call the scheduled callback instead of commitPassiveEffects directly\n            // to ensure tracing works correctly.\n\n            passiveEffectCallback();\n          }\n        }\n\n        function commitRoot(root, finishedWork) {\n          isWorking = true;\n          isCommitting$1 = true;\n          startCommitTimer();\n          !(root.current !== finishedWork) ? invariant(false, 'Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n          var committedExpirationTime = root.pendingCommitExpirationTime;\n          !(committedExpirationTime !== NoWork) ? invariant(false, 'Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n          root.pendingCommitExpirationTime = NoWork; // Update the pending priority levels to account for the work that we are\n          // about to commit. This needs to happen before calling the lifecycles, since\n          // they may schedule additional updates.\n\n          var updateExpirationTimeBeforeCommit = finishedWork.expirationTime;\n          var childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;\n          var earliestRemainingTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;\n          markCommittedPriorityLevels(root, earliestRemainingTimeBeforeCommit);\n          var prevInteractions = null;\n\n          if (enableSchedulerTracing) {\n            // Restore any pending interactions at this point,\n            // So that cascading work triggered during the render phase will be accounted for.\n            prevInteractions = tracing.__interactionsRef.current;\n            tracing.__interactionsRef.current = root.memoizedInteractions;\n          } // Reset this to null before calling lifecycles\n\n\n          ReactCurrentOwner$2.current = null;\n          var firstEffect = void 0;\n\n          if (finishedWork.effectTag > PerformedWork) {\n            // A fiber's effect list consists only of its children, not itself. So if\n            // the root has an effect, we need to add it to the end of the list. The\n            // resulting list is the set that would belong to the root's parent, if\n            // it had one; that is, all the effects in the tree including the root.\n            if (finishedWork.lastEffect !== null) {\n              finishedWork.lastEffect.nextEffect = finishedWork;\n              firstEffect = finishedWork.firstEffect;\n            } else {\n              firstEffect = finishedWork;\n            }\n          } else {\n            // There is no effect on the root.\n            firstEffect = finishedWork.firstEffect;\n          }\n\n          prepareForCommit(root.containerInfo); // Invoke instances of getSnapshotBeforeUpdate before mutation.\n\n          nextEffect = firstEffect;\n          startCommitSnapshotEffectsTimer();\n\n          while (nextEffect !== null) {\n            var didError = false;\n            var error = void 0;\n            {\n              invokeGuardedCallback(null, commitBeforeMutationLifecycles, null);\n\n              if (hasCaughtError()) {\n                didError = true;\n                error = clearCaughtError();\n              }\n            }\n\n            if (didError) {\n              !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n              captureCommitPhaseError(nextEffect, error); // Clean-up\n\n              if (nextEffect !== null) {\n                nextEffect = nextEffect.nextEffect;\n              }\n            }\n          }\n\n          stopCommitSnapshotEffectsTimer();\n\n          if (enableProfilerTimer) {\n            // Mark the current commit time to be shared by all Profilers in this batch.\n            // This enables them to be grouped later.\n            recordCommitTime();\n          } // Commit all the side-effects within a tree. We'll do this in two passes.\n          // The first pass performs all the host insertions, updates, deletions and\n          // ref unmounts.\n\n\n          nextEffect = firstEffect;\n          startCommitHostEffectsTimer();\n\n          while (nextEffect !== null) {\n            var _didError = false;\n\n            var _error = void 0;\n\n            {\n              invokeGuardedCallback(null, commitAllHostEffects, null);\n\n              if (hasCaughtError()) {\n                _didError = true;\n                _error = clearCaughtError();\n              }\n            }\n\n            if (_didError) {\n              !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n              captureCommitPhaseError(nextEffect, _error); // Clean-up\n\n              if (nextEffect !== null) {\n                nextEffect = nextEffect.nextEffect;\n              }\n            }\n          }\n\n          stopCommitHostEffectsTimer();\n          resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after\n          // the first pass of the commit phase, so that the previous tree is still\n          // current during componentWillUnmount, but before the second pass, so that\n          // the finished work is current during componentDidMount/Update.\n\n          root.current = finishedWork; // In the second pass we'll perform all life-cycles and ref callbacks.\n          // Life-cycles happen as a separate pass so that all placements, updates,\n          // and deletions in the entire tree have already been invoked.\n          // This pass also triggers any renderer-specific initial effects.\n\n          nextEffect = firstEffect;\n          startCommitLifeCyclesTimer();\n\n          while (nextEffect !== null) {\n            var _didError2 = false;\n\n            var _error2 = void 0;\n\n            {\n              invokeGuardedCallback(null, commitAllLifeCycles, null, root, committedExpirationTime);\n\n              if (hasCaughtError()) {\n                _didError2 = true;\n                _error2 = clearCaughtError();\n              }\n            }\n\n            if (_didError2) {\n              !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n              captureCommitPhaseError(nextEffect, _error2);\n\n              if (nextEffect !== null) {\n                nextEffect = nextEffect.nextEffect;\n              }\n            }\n          }\n\n          if (enableHooks && firstEffect !== null && rootWithPendingPassiveEffects !== null) {\n            // This commit included a passive effect. These do not need to fire until\n            // after the next paint. Schedule an callback to fire them in an async\n            // event. To ensure serial execution, the callback will be flushed early if\n            // we enter rootWithPendingPassiveEffects commit phase before then.\n            var callback = commitPassiveEffects.bind(null, root, firstEffect);\n\n            if (enableSchedulerTracing) {\n              // TODO: Avoid this extra callback by mutating the tracing ref directly,\n              // like we do at the beginning of commitRoot. I've opted not to do that\n              // here because that code is still in flux.\n              callback = tracing.unstable_wrap(callback);\n            }\n\n            passiveEffectCallbackHandle = scheduler.unstable_scheduleCallback(callback);\n            passiveEffectCallback = callback;\n          }\n\n          isCommitting$1 = false;\n          isWorking = false;\n          stopCommitLifeCyclesTimer();\n          stopCommitTimer();\n          onCommitRoot(finishedWork.stateNode);\n\n          if (true && ReactFiberInstrumentation_1.debugTool) {\n            ReactFiberInstrumentation_1.debugTool.onCommitWork(finishedWork);\n          }\n\n          var updateExpirationTimeAfterCommit = finishedWork.expirationTime;\n          var childExpirationTimeAfterCommit = finishedWork.childExpirationTime;\n          var earliestRemainingTimeAfterCommit = childExpirationTimeAfterCommit > updateExpirationTimeAfterCommit ? childExpirationTimeAfterCommit : updateExpirationTimeAfterCommit;\n\n          if (earliestRemainingTimeAfterCommit === NoWork) {\n            // If there's no remaining work, we can clear the set of already failed\n            // error boundaries.\n            legacyErrorBoundariesThatAlreadyFailed = null;\n          }\n\n          onCommit(root, earliestRemainingTimeAfterCommit);\n\n          if (enableSchedulerTracing) {\n            tracing.__interactionsRef.current = prevInteractions;\n            var subscriber = void 0;\n\n            try {\n              subscriber = tracing.__subscriberRef.current;\n\n              if (subscriber !== null && root.memoizedInteractions.size > 0) {\n                var threadID = computeThreadID(committedExpirationTime, root.interactionThreadID);\n                subscriber.onWorkStopped(root.memoizedInteractions, threadID);\n              }\n            } catch (error) {\n              // It's not safe for commitRoot() to throw.\n              // Store the error for now and we'll re-throw in finishRendering().\n              if (!hasUnhandledError) {\n                hasUnhandledError = true;\n                unhandledError = error;\n              }\n            } finally {\n              // Clear completed interactions from the pending Map.\n              // Unless the render was suspended or cascading work was scheduled,\n              // In which case– leave pending interactions until the subsequent render.\n              var pendingInteractionMap = root.pendingInteractionMap;\n              pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {\n                // Only decrement the pending interaction count if we're done.\n                // If there's still work at the current priority,\n                // That indicates that we are waiting for suspense data.\n                if (scheduledExpirationTime > earliestRemainingTimeAfterCommit) {\n                  pendingInteractionMap.delete(scheduledExpirationTime);\n                  scheduledInteractions.forEach(function (interaction) {\n                    interaction.__count--;\n\n                    if (subscriber !== null && interaction.__count === 0) {\n                      try {\n                        subscriber.onInteractionScheduledWorkCompleted(interaction);\n                      } catch (error) {\n                        // It's not safe for commitRoot() to throw.\n                        // Store the error for now and we'll re-throw in finishRendering().\n                        if (!hasUnhandledError) {\n                          hasUnhandledError = true;\n                          unhandledError = error;\n                        }\n                      }\n                    }\n                  });\n                }\n              });\n            }\n          }\n        }\n\n        function resetChildExpirationTime(workInProgress, renderTime) {\n          if (renderTime !== Never && workInProgress.childExpirationTime === Never) {\n            // The children of this component are hidden. Don't bubble their\n            // expiration times.\n            return;\n          }\n\n          var newChildExpirationTime = NoWork; // Bubble up the earliest expiration time.\n\n          if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n            // We're in profiling mode.\n            // Let's use this same traversal to update the render durations.\n            var actualDuration = workInProgress.actualDuration;\n            var treeBaseDuration = workInProgress.selfBaseDuration; // When a fiber is cloned, its actualDuration is reset to 0.\n            // This value will only be updated if work is done on the fiber (i.e. it doesn't bailout).\n            // When work is done, it should bubble to the parent's actualDuration.\n            // If the fiber has not been cloned though, (meaning no work was done),\n            // Then this value will reflect the amount of time spent working on a previous render.\n            // In that case it should not bubble.\n            // We determine whether it was cloned by comparing the child pointer.\n\n            var shouldBubbleActualDurations = workInProgress.alternate === null || workInProgress.child !== workInProgress.alternate.child;\n            var child = workInProgress.child;\n\n            while (child !== null) {\n              var childUpdateExpirationTime = child.expirationTime;\n              var childChildExpirationTime = child.childExpirationTime;\n\n              if (childUpdateExpirationTime > newChildExpirationTime) {\n                newChildExpirationTime = childUpdateExpirationTime;\n              }\n\n              if (childChildExpirationTime > newChildExpirationTime) {\n                newChildExpirationTime = childChildExpirationTime;\n              }\n\n              if (shouldBubbleActualDurations) {\n                actualDuration += child.actualDuration;\n              }\n\n              treeBaseDuration += child.treeBaseDuration;\n              child = child.sibling;\n            }\n\n            workInProgress.actualDuration = actualDuration;\n            workInProgress.treeBaseDuration = treeBaseDuration;\n          } else {\n            var _child = workInProgress.child;\n\n            while (_child !== null) {\n              var _childUpdateExpirationTime = _child.expirationTime;\n              var _childChildExpirationTime = _child.childExpirationTime;\n\n              if (_childUpdateExpirationTime > newChildExpirationTime) {\n                newChildExpirationTime = _childUpdateExpirationTime;\n              }\n\n              if (_childChildExpirationTime > newChildExpirationTime) {\n                newChildExpirationTime = _childChildExpirationTime;\n              }\n\n              _child = _child.sibling;\n            }\n          }\n\n          workInProgress.childExpirationTime = newChildExpirationTime;\n        }\n\n        function completeUnitOfWork(workInProgress) {\n          // Attempt to complete the current unit of work, then move to the\n          // next sibling. If there are no more siblings, return to the\n          // parent fiber.\n          while (true) {\n            // The current, flushed, state of this fiber is the alternate.\n            // Ideally nothing should rely on this, but relying on it here\n            // means that we don't need an additional field on the work in\n            // progress.\n            var current$$1 = workInProgress.alternate;\n            {\n              setCurrentFiber(workInProgress);\n            }\n            var returnFiber = workInProgress.return;\n            var siblingFiber = workInProgress.sibling;\n\n            if ((workInProgress.effectTag & Incomplete) === NoEffect) {\n              if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n                // Don't replay if it fails during completion phase.\n                mayReplayFailedUnitOfWork = false;\n              } // This fiber completed.\n              // Remember we're completing this unit so we can find a boundary if it fails.\n\n\n              nextUnitOfWork = workInProgress;\n\n              if (enableProfilerTimer) {\n                if (workInProgress.mode & ProfileMode) {\n                  startProfilerTimer(workInProgress);\n                }\n\n                nextUnitOfWork = completeWork(current$$1, workInProgress, nextRenderExpirationTime);\n\n                if (workInProgress.mode & ProfileMode) {\n                  // Update render duration assuming we didn't error.\n                  stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);\n                }\n              } else {\n                nextUnitOfWork = completeWork(current$$1, workInProgress, nextRenderExpirationTime);\n              }\n\n              if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n                // We're out of completion phase so replaying is fine now.\n                mayReplayFailedUnitOfWork = true;\n              }\n\n              stopWorkTimer(workInProgress);\n              resetChildExpirationTime(workInProgress, nextRenderExpirationTime);\n              {\n                resetCurrentFiber();\n              }\n\n              if (nextUnitOfWork !== null) {\n                // Completing this fiber spawned new work. Work on that next.\n                return nextUnitOfWork;\n              }\n\n              if (returnFiber !== null && // Do not append effects to parents if a sibling failed to complete\n              (returnFiber.effectTag & Incomplete) === NoEffect) {\n                // Append all the effects of the subtree and this fiber onto the effect\n                // list of the parent. The completion order of the children affects the\n                // side-effect order.\n                if (returnFiber.firstEffect === null) {\n                  returnFiber.firstEffect = workInProgress.firstEffect;\n                }\n\n                if (workInProgress.lastEffect !== null) {\n                  if (returnFiber.lastEffect !== null) {\n                    returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;\n                  }\n\n                  returnFiber.lastEffect = workInProgress.lastEffect;\n                } // If this fiber had side-effects, we append it AFTER the children's\n                // side-effects. We can perform certain side-effects earlier if\n                // needed, by doing multiple passes over the effect list. We don't want\n                // to schedule our own side-effect on our own list because if end up\n                // reusing children we'll schedule this effect onto itself since we're\n                // at the end.\n\n\n                var effectTag = workInProgress.effectTag; // Skip both NoWork and PerformedWork tags when creating the effect list.\n                // PerformedWork effect is read by React DevTools but shouldn't be committed.\n\n                if (effectTag > PerformedWork) {\n                  if (returnFiber.lastEffect !== null) {\n                    returnFiber.lastEffect.nextEffect = workInProgress;\n                  } else {\n                    returnFiber.firstEffect = workInProgress;\n                  }\n\n                  returnFiber.lastEffect = workInProgress;\n                }\n              }\n\n              if (true && ReactFiberInstrumentation_1.debugTool) {\n                ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);\n              }\n\n              if (siblingFiber !== null) {\n                // If there is more work to do in this returnFiber, do that next.\n                return siblingFiber;\n              } else if (returnFiber !== null) {\n                // If there's no more work in this returnFiber. Complete the returnFiber.\n                workInProgress = returnFiber;\n                continue;\n              } else {\n                // We've reached the root.\n                return null;\n              }\n            } else {\n              if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n                // Record the render duration for the fiber that errored.\n                stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false); // Include the time spent working on failed children before continuing.\n\n                var actualDuration = workInProgress.actualDuration;\n                var child = workInProgress.child;\n\n                while (child !== null) {\n                  actualDuration += child.actualDuration;\n                  child = child.sibling;\n                }\n\n                workInProgress.actualDuration = actualDuration;\n              } // This fiber did not complete because something threw. Pop values off\n              // the stack without entering the complete phase. If this is a boundary,\n              // capture values if possible.\n\n\n              var next = unwindWork(workInProgress, nextRenderExpirationTime); // Because this fiber did not complete, don't reset its expiration time.\n\n              if (workInProgress.effectTag & DidCapture) {\n                // Restarting an error boundary\n                stopFailedWorkTimer(workInProgress);\n              } else {\n                stopWorkTimer(workInProgress);\n              }\n\n              {\n                resetCurrentFiber();\n              }\n\n              if (next !== null) {\n                stopWorkTimer(workInProgress);\n\n                if (true && ReactFiberInstrumentation_1.debugTool) {\n                  ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);\n                } // If completing this work spawned new work, do that next. We'll come\n                // back here again.\n                // Since we're restarting, remove anything that is not a host effect\n                // from the effect tag.\n\n\n                next.effectTag &= HostEffectMask;\n                return next;\n              }\n\n              if (returnFiber !== null) {\n                // Mark the parent fiber as incomplete and clear its effect list.\n                returnFiber.firstEffect = returnFiber.lastEffect = null;\n                returnFiber.effectTag |= Incomplete;\n              }\n\n              if (true && ReactFiberInstrumentation_1.debugTool) {\n                ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);\n              }\n\n              if (siblingFiber !== null) {\n                // If there is more work to do in this returnFiber, do that next.\n                return siblingFiber;\n              } else if (returnFiber !== null) {\n                // If there's no more work in this returnFiber. Complete the returnFiber.\n                workInProgress = returnFiber;\n                continue;\n              } else {\n                return null;\n              }\n            }\n          } // Without this explicit null return Flow complains of invalid return type\n          // TODO Remove the above while(true) loop\n          // eslint-disable-next-line no-unreachable\n\n\n          return null;\n        }\n\n        function performUnitOfWork(workInProgress) {\n          // The current, flushed, state of this fiber is the alternate.\n          // Ideally nothing should rely on this, but relying on it here\n          // means that we don't need an additional field on the work in\n          // progress.\n          var current$$1 = workInProgress.alternate; // See if beginning this work spawns more work.\n\n          startWorkTimer(workInProgress);\n          {\n            setCurrentFiber(workInProgress);\n          }\n\n          if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n            stashedWorkInProgressProperties = assignFiberPropertiesInDEV(stashedWorkInProgressProperties, workInProgress);\n          }\n\n          var next = void 0;\n\n          if (enableProfilerTimer) {\n            if (workInProgress.mode & ProfileMode) {\n              startProfilerTimer(workInProgress);\n            }\n\n            next = beginWork(current$$1, workInProgress, nextRenderExpirationTime);\n            workInProgress.memoizedProps = workInProgress.pendingProps;\n\n            if (workInProgress.mode & ProfileMode) {\n              // Record the render duration assuming we didn't bailout (or error).\n              stopProfilerTimerIfRunningAndRecordDelta(workInProgress, true);\n            }\n          } else {\n            next = beginWork(current$$1, workInProgress, nextRenderExpirationTime);\n            workInProgress.memoizedProps = workInProgress.pendingProps;\n          }\n\n          {\n            resetCurrentFiber();\n\n            if (isReplayingFailedUnitOfWork) {\n              // Currently replaying a failed unit of work. This should be unreachable,\n              // because the render phase is meant to be idempotent, and it should\n              // have thrown again. Since it didn't, rethrow the original error, so\n              // React's internal stack is not misaligned.\n              rethrowOriginalError();\n            }\n          }\n\n          if (true && ReactFiberInstrumentation_1.debugTool) {\n            ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);\n          }\n\n          if (next === null) {\n            // If this doesn't spawn new work, complete the current work.\n            next = completeUnitOfWork(workInProgress);\n          }\n\n          ReactCurrentOwner$2.current = null;\n          return next;\n        }\n\n        function workLoop(isYieldy) {\n          if (!isYieldy) {\n            // Flush work without yielding\n            while (nextUnitOfWork !== null) {\n              nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\n            }\n          } else {\n            // Flush asynchronous work until there's a higher priority event\n            while (nextUnitOfWork !== null && !shouldYieldToRenderer()) {\n              nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\n            }\n          }\n        }\n\n        function renderRoot(root, isYieldy) {\n          !!isWorking ? invariant(false, 'renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n          flushPassiveEffects();\n          isWorking = true;\n\n          if (enableHooks) {\n            ReactCurrentOwner$2.currentDispatcher = Dispatcher;\n          } else {\n            ReactCurrentOwner$2.currentDispatcher = DispatcherWithoutHooks;\n          }\n\n          var expirationTime = root.nextExpirationTimeToWorkOn; // Check if we're starting from a fresh stack, or if we're resuming from\n          // previously yielded work.\n\n          if (expirationTime !== nextRenderExpirationTime || root !== nextRoot || nextUnitOfWork === null) {\n            // Reset the stack and start working from the root.\n            resetStack();\n            nextRoot = root;\n            nextRenderExpirationTime = expirationTime;\n            nextUnitOfWork = createWorkInProgress(nextRoot.current, null, nextRenderExpirationTime);\n            root.pendingCommitExpirationTime = NoWork;\n\n            if (enableSchedulerTracing) {\n              // Determine which interactions this batch of work currently includes,\n              // So that we can accurately attribute time spent working on it,\n              var interactions = new Set();\n              root.pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {\n                if (scheduledExpirationTime >= expirationTime) {\n                  scheduledInteractions.forEach(function (interaction) {\n                    return interactions.add(interaction);\n                  });\n                }\n              }); // Store the current set of interactions on the FiberRoot for a few reasons:\n              // We can re-use it in hot functions like renderRoot() without having to recalculate it.\n              // We will also use it in commitWork() to pass to any Profiler onRender() hooks.\n              // This also provides DevTools with a way to access it when the onCommitRoot() hook is called.\n\n              root.memoizedInteractions = interactions;\n\n              if (interactions.size > 0) {\n                var subscriber = tracing.__subscriberRef.current;\n\n                if (subscriber !== null) {\n                  var threadID = computeThreadID(expirationTime, root.interactionThreadID);\n\n                  try {\n                    subscriber.onWorkStarted(interactions, threadID);\n                  } catch (error) {\n                    // Work thrown by an interaction tracing subscriber should be rethrown,\n                    // But only once it's safe (to avoid leaveing the scheduler in an invalid state).\n                    // Store the error for now and we'll re-throw in finishRendering().\n                    if (!hasUnhandledError) {\n                      hasUnhandledError = true;\n                      unhandledError = error;\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          var prevInteractions = null;\n\n          if (enableSchedulerTracing) {\n            // We're about to start new traced work.\n            // Restore pending interactions so cascading work triggered during the render phase will be accounted for.\n            prevInteractions = tracing.__interactionsRef.current;\n            tracing.__interactionsRef.current = root.memoizedInteractions;\n          }\n\n          var didFatal = false;\n          startWorkLoopTimer(nextUnitOfWork);\n\n          do {\n            try {\n              workLoop(isYieldy);\n            } catch (thrownValue) {\n              resetContextDependences();\n              resetHooks(); // Reset in case completion throws.\n              // This is only used in DEV and when replaying is on.\n\n              var mayReplay = void 0;\n\n              if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n                mayReplay = mayReplayFailedUnitOfWork;\n                mayReplayFailedUnitOfWork = true;\n              }\n\n              if (nextUnitOfWork === null) {\n                // This is a fatal error.\n                didFatal = true;\n                onUncaughtError(thrownValue);\n              } else {\n                if (enableProfilerTimer && nextUnitOfWork.mode & ProfileMode) {\n                  // Record the time spent rendering before an error was thrown.\n                  // This avoids inaccurate Profiler durations in the case of a suspended render.\n                  stopProfilerTimerIfRunningAndRecordDelta(nextUnitOfWork, true);\n                }\n\n                {\n                  // Reset global debug state\n                  // We assume this is defined in DEV\n                  resetCurrentlyProcessingQueue();\n                }\n\n                if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n                  if (mayReplay) {\n                    var failedUnitOfWork = nextUnitOfWork;\n                    replayUnitOfWork(failedUnitOfWork, thrownValue, isYieldy);\n                  }\n                } // TODO: we already know this isn't true in some cases.\n                // At least this shows a nicer error message until we figure out the cause.\n                // https://github.com/facebook/react/issues/12449#issuecomment-386727431\n\n\n                !(nextUnitOfWork !== null) ? invariant(false, 'Failed to replay rendering after an error. This is likely caused by a bug in React. Please file an issue with a reproducing case to help us find it.') : void 0;\n                var sourceFiber = nextUnitOfWork;\n                var returnFiber = sourceFiber.return;\n\n                if (returnFiber === null) {\n                  // This is the root. The root could capture its own errors. However,\n                  // we don't know if it errors before or after we pushed the host\n                  // context. This information is needed to avoid a stack mismatch.\n                  // Because we're not sure, treat this as a fatal error. We could track\n                  // which phase it fails in, but doesn't seem worth it. At least\n                  // for now.\n                  didFatal = true;\n                  onUncaughtError(thrownValue);\n                } else {\n                  throwException(root, returnFiber, sourceFiber, thrownValue, nextRenderExpirationTime);\n                  nextUnitOfWork = completeUnitOfWork(sourceFiber);\n                  continue;\n                }\n              }\n            }\n\n            break;\n          } while (true);\n\n          if (enableSchedulerTracing) {\n            // Traced work is done for now; restore the previous interactions.\n            tracing.__interactionsRef.current = prevInteractions;\n          } // We're done performing work. Time to clean up.\n\n\n          isWorking = false;\n          ReactCurrentOwner$2.currentDispatcher = null;\n          resetContextDependences();\n          resetHooks(); // Yield back to main thread.\n\n          if (didFatal) {\n            var _didCompleteRoot = false;\n            stopWorkLoopTimer(interruptedBy, _didCompleteRoot);\n            interruptedBy = null; // There was a fatal error.\n\n            {\n              resetStackAfterFatalErrorInDev();\n            } // `nextRoot` points to the in-progress root. A non-null value indicates\n            // that we're in the middle of an async render. Set it to null to indicate\n            // there's no more work to be done in the current batch.\n\n            nextRoot = null;\n            onFatal(root);\n            return;\n          }\n\n          if (nextUnitOfWork !== null) {\n            // There's still remaining async work in this tree, but we ran out of time\n            // in the current frame. Yield back to the renderer. Unless we're\n            // interrupted by a higher priority update, we'll continue later from where\n            // we left off.\n            var _didCompleteRoot2 = false;\n            stopWorkLoopTimer(interruptedBy, _didCompleteRoot2);\n            interruptedBy = null;\n            onYield(root);\n            return;\n          } // We completed the whole tree.\n\n\n          var didCompleteRoot = true;\n          stopWorkLoopTimer(interruptedBy, didCompleteRoot);\n          var rootWorkInProgress = root.current.alternate;\n          !(rootWorkInProgress !== null) ? invariant(false, 'Finished root should have a work-in-progress. This error is likely caused by a bug in React. Please file an issue.') : void 0; // `nextRoot` points to the in-progress root. A non-null value indicates\n          // that we're in the middle of an async render. Set it to null to indicate\n          // there's no more work to be done in the current batch.\n\n          nextRoot = null;\n          interruptedBy = null;\n\n          if (nextRenderDidError) {\n            // There was an error\n            if (hasLowerPriorityWork(root, expirationTime)) {\n              // There's lower priority work. If so, it may have the effect of fixing\n              // the exception that was just thrown. Exit without committing. This is\n              // similar to a suspend, but without a timeout because we're not waiting\n              // for a promise to resolve. React will restart at the lower\n              // priority level.\n              markSuspendedPriorityLevel(root, expirationTime);\n              var suspendedExpirationTime = expirationTime;\n              var rootExpirationTime = root.expirationTime;\n              onSuspend(root, rootWorkInProgress, suspendedExpirationTime, rootExpirationTime, -1 // Indicates no timeout\n              );\n              return;\n            } else if ( // There's no lower priority work, but we're rendering asynchronously.\n            // Synchronsouly attempt to render the same level one more time. This is\n            // similar to a suspend, but without a timeout because we're not waiting\n            // for a promise to resolve.\n            !root.didError && isYieldy) {\n              root.didError = true;\n\n              var _suspendedExpirationTime = root.nextExpirationTimeToWorkOn = expirationTime;\n\n              var _rootExpirationTime = root.expirationTime = Sync;\n\n              onSuspend(root, rootWorkInProgress, _suspendedExpirationTime, _rootExpirationTime, -1 // Indicates no timeout\n              );\n              return;\n            }\n          }\n\n          if (isYieldy && nextLatestAbsoluteTimeoutMs !== -1) {\n            // The tree was suspended.\n            var _suspendedExpirationTime2 = expirationTime;\n            markSuspendedPriorityLevel(root, _suspendedExpirationTime2); // Find the earliest uncommitted expiration time in the tree, including\n            // work that is suspended. The timeout threshold cannot be longer than\n            // the overall expiration.\n\n            var earliestExpirationTime = findEarliestOutstandingPriorityLevel(root, expirationTime);\n            var earliestExpirationTimeMs = expirationTimeToMs(earliestExpirationTime);\n\n            if (earliestExpirationTimeMs < nextLatestAbsoluteTimeoutMs) {\n              nextLatestAbsoluteTimeoutMs = earliestExpirationTimeMs;\n            } // Subtract the current time from the absolute timeout to get the number\n            // of milliseconds until the timeout. In other words, convert an absolute\n            // timestamp to a relative time. This is the value that is passed\n            // to `setTimeout`.\n\n\n            var currentTimeMs = expirationTimeToMs(requestCurrentTime());\n            var msUntilTimeout = nextLatestAbsoluteTimeoutMs - currentTimeMs;\n            msUntilTimeout = msUntilTimeout < 0 ? 0 : msUntilTimeout; // TODO: Account for the Just Noticeable Difference\n\n            var _rootExpirationTime2 = root.expirationTime;\n            onSuspend(root, rootWorkInProgress, _suspendedExpirationTime2, _rootExpirationTime2, msUntilTimeout);\n            return;\n          } // Ready to commit.\n\n\n          onComplete(root, rootWorkInProgress, expirationTime);\n        }\n\n        function captureCommitPhaseError(sourceFiber, value) {\n          var expirationTime = Sync;\n          var fiber = sourceFiber.return;\n\n          while (fiber !== null) {\n            switch (fiber.tag) {\n              case ClassComponent:\n                var ctor = fiber.type;\n                var instance = fiber.stateNode;\n\n                if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {\n                  var errorInfo = createCapturedValue(value, sourceFiber);\n                  var update = createClassErrorUpdate(fiber, errorInfo, expirationTime);\n                  enqueueUpdate(fiber, update);\n                  scheduleWork(fiber, expirationTime);\n                  return;\n                }\n\n                break;\n\n              case HostRoot:\n                {\n                  var _errorInfo = createCapturedValue(value, sourceFiber);\n\n                  var _update = createRootErrorUpdate(fiber, _errorInfo, expirationTime);\n\n                  enqueueUpdate(fiber, _update);\n                  scheduleWork(fiber, expirationTime);\n                  return;\n                }\n            }\n\n            fiber = fiber.return;\n          }\n\n          if (sourceFiber.tag === HostRoot) {\n            // Error was thrown at the root. There is no parent, so the root\n            // itself should capture it.\n            var rootFiber = sourceFiber;\n\n            var _errorInfo2 = createCapturedValue(value, rootFiber);\n\n            var _update2 = createRootErrorUpdate(rootFiber, _errorInfo2, expirationTime);\n\n            enqueueUpdate(rootFiber, _update2);\n            scheduleWork(rootFiber, expirationTime);\n          }\n        }\n\n        function computeThreadID(expirationTime, interactionThreadID) {\n          // Interaction threads are unique per root and expiration time.\n          return expirationTime * 1000 + interactionThreadID;\n        } // Creates a unique async expiration time.\n\n\n        function computeUniqueAsyncExpiration() {\n          var currentTime = requestCurrentTime();\n          var result = computeAsyncExpiration(currentTime);\n\n          if (result >= lastUniqueAsyncExpiration) {\n            // Since we assume the current time monotonically increases, we only hit\n            // this branch when computeUniqueAsyncExpiration is fired multiple times\n            // within a 200ms window (or whatever the async bucket size is).\n            result = lastUniqueAsyncExpiration - 1;\n          }\n\n          lastUniqueAsyncExpiration = result;\n          return lastUniqueAsyncExpiration;\n        }\n\n        function computeExpirationForFiber(currentTime, fiber) {\n          var expirationTime = void 0;\n\n          if (expirationContext !== NoWork) {\n            // An explicit expiration context was set;\n            expirationTime = expirationContext;\n          } else if (isWorking) {\n            if (isCommitting$1) {\n              // Updates that occur during the commit phase should have sync priority\n              // by default.\n              expirationTime = Sync;\n            } else {\n              // Updates during the render phase should expire at the same time as\n              // the work that is being rendered.\n              expirationTime = nextRenderExpirationTime;\n            }\n          } else {\n            // No explicit expiration context was set, and we're not currently\n            // performing work. Calculate a new expiration time.\n            if (fiber.mode & ConcurrentMode) {\n              if (isBatchingInteractiveUpdates) {\n                // This is an interactive update\n                expirationTime = computeInteractiveExpiration(currentTime);\n              } else {\n                // This is an async update\n                expirationTime = computeAsyncExpiration(currentTime);\n              } // If we're in the middle of rendering a tree, do not update at the same\n              // expiration time that is already rendering.\n\n\n              if (nextRoot !== null && expirationTime === nextRenderExpirationTime) {\n                expirationTime -= 1;\n              }\n            } else {\n              // This is a sync update\n              expirationTime = Sync;\n            }\n          }\n\n          if (isBatchingInteractiveUpdates) {\n            // This is an interactive update. Keep track of the lowest pending\n            // interactive expiration time. This allows us to synchronously flush\n            // all interactive updates when needed.\n            if (lowestPriorityPendingInteractiveExpirationTime === NoWork || expirationTime < lowestPriorityPendingInteractiveExpirationTime) {\n              lowestPriorityPendingInteractiveExpirationTime = expirationTime;\n            }\n          }\n\n          return expirationTime;\n        }\n\n        function renderDidSuspend(root, absoluteTimeoutMs, suspendedTime) {\n          // Schedule the timeout.\n          if (absoluteTimeoutMs >= 0 && nextLatestAbsoluteTimeoutMs < absoluteTimeoutMs) {\n            nextLatestAbsoluteTimeoutMs = absoluteTimeoutMs;\n          }\n        }\n\n        function renderDidError() {\n          nextRenderDidError = true;\n        }\n\n        function pingSuspendedRoot(root, thenable, pingTime) {\n          // A promise that previously suspended React from committing has resolved.\n          // If React is still suspended, try again at the previous level (pingTime).\n          var pingCache = root.pingCache;\n\n          if (pingCache !== null) {\n            // The thenable resolved, so we no longer need to memoize, because it will\n            // never be thrown again.\n            pingCache.delete(thenable);\n          }\n\n          if (nextRoot !== null && nextRenderExpirationTime === pingTime) {\n            // Received a ping at the same priority level at which we're currently\n            // rendering. Restart from the root.\n            nextRoot = null;\n          } else {\n            // Confirm that the root is still suspended at this level. Otherwise exit.\n            if (isPriorityLevelSuspended(root, pingTime)) {\n              // Ping at the original level\n              markPingedPriorityLevel(root, pingTime);\n              var rootExpirationTime = root.expirationTime;\n\n              if (rootExpirationTime !== NoWork) {\n                requestWork(root, rootExpirationTime);\n              }\n            }\n          }\n        }\n\n        function retryTimedOutBoundary(boundaryFiber, thenable) {\n          // The boundary fiber (a Suspense component) previously timed out and was\n          // rendered in its fallback state. One of the promises that suspended it has\n          // resolved, which means at least part of the tree was likely unblocked. Try\n          var retryCache = boundaryFiber.stateNode;\n\n          if (retryCache !== null) {\n            // The thenable resolved, so we no longer need to memoize, because it will\n            // never be thrown again.\n            retryCache.delete(thenable);\n          }\n\n          var currentTime = requestCurrentTime();\n          var retryTime = computeExpirationForFiber(currentTime, boundaryFiber);\n          var root = scheduleWorkToRoot(boundaryFiber, retryTime);\n\n          if (root !== null) {\n            markPendingPriorityLevel(root, retryTime);\n            var rootExpirationTime = root.expirationTime;\n\n            if (rootExpirationTime !== NoWork) {\n              requestWork(root, rootExpirationTime);\n            }\n          }\n        }\n\n        function scheduleWorkToRoot(fiber, expirationTime) {\n          recordScheduleUpdate();\n          {\n            if (fiber.tag === ClassComponent) {\n              var instance = fiber.stateNode;\n              warnAboutInvalidUpdates(instance);\n            }\n          } // Update the source fiber's expiration time\n\n          if (fiber.expirationTime < expirationTime) {\n            fiber.expirationTime = expirationTime;\n          }\n\n          var alternate = fiber.alternate;\n\n          if (alternate !== null && alternate.expirationTime < expirationTime) {\n            alternate.expirationTime = expirationTime;\n          } // Walk the parent path to the root and update the child expiration time.\n\n\n          var node = fiber.return;\n          var root = null;\n\n          if (node === null && fiber.tag === HostRoot) {\n            root = fiber.stateNode;\n          } else {\n            while (node !== null) {\n              alternate = node.alternate;\n\n              if (node.childExpirationTime < expirationTime) {\n                node.childExpirationTime = expirationTime;\n\n                if (alternate !== null && alternate.childExpirationTime < expirationTime) {\n                  alternate.childExpirationTime = expirationTime;\n                }\n              } else if (alternate !== null && alternate.childExpirationTime < expirationTime) {\n                alternate.childExpirationTime = expirationTime;\n              }\n\n              if (node.return === null && node.tag === HostRoot) {\n                root = node.stateNode;\n                break;\n              }\n\n              node = node.return;\n            }\n          }\n\n          if (enableSchedulerTracing) {\n            if (root !== null) {\n              var interactions = tracing.__interactionsRef.current;\n\n              if (interactions.size > 0) {\n                var pendingInteractionMap = root.pendingInteractionMap;\n                var pendingInteractions = pendingInteractionMap.get(expirationTime);\n\n                if (pendingInteractions != null) {\n                  interactions.forEach(function (interaction) {\n                    if (!pendingInteractions.has(interaction)) {\n                      // Update the pending async work count for previously unscheduled interaction.\n                      interaction.__count++;\n                    }\n\n                    pendingInteractions.add(interaction);\n                  });\n                } else {\n                  pendingInteractionMap.set(expirationTime, new Set(interactions)); // Update the pending async work count for the current interactions.\n\n                  interactions.forEach(function (interaction) {\n                    interaction.__count++;\n                  });\n                }\n\n                var subscriber = tracing.__subscriberRef.current;\n\n                if (subscriber !== null) {\n                  var threadID = computeThreadID(expirationTime, root.interactionThreadID);\n                  subscriber.onWorkScheduled(interactions, threadID);\n                }\n              }\n            }\n          }\n\n          return root;\n        }\n\n        function scheduleWork(fiber, expirationTime) {\n          var root = scheduleWorkToRoot(fiber, expirationTime);\n\n          if (root === null) {\n            {\n              switch (fiber.tag) {\n                case ClassComponent:\n                  warnAboutUpdateOnUnmounted(fiber, true);\n                  break;\n\n                case FunctionComponent:\n                case ForwardRef:\n                case MemoComponent:\n                case SimpleMemoComponent:\n                  warnAboutUpdateOnUnmounted(fiber, false);\n                  break;\n              }\n            }\n            return;\n          }\n\n          if (!isWorking && nextRenderExpirationTime !== NoWork && expirationTime > nextRenderExpirationTime) {\n            // This is an interruption. (Used for performance tracking.)\n            interruptedBy = fiber;\n            resetStack();\n          }\n\n          markPendingPriorityLevel(root, expirationTime);\n\n          if ( // If we're in the render phase, we don't need to schedule this root\n          // for an update, because we'll do it before we exit...\n          !isWorking || isCommitting$1 || // ...unless this is a different root than the one we're rendering.\n          nextRoot !== root) {\n            var rootExpirationTime = root.expirationTime;\n            requestWork(root, rootExpirationTime);\n          }\n\n          if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n            // Reset this back to zero so subsequent updates don't throw.\n            nestedUpdateCount = 0;\n            invariant(false, 'Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.');\n          }\n        }\n\n        function syncUpdates(fn, a, b, c, d) {\n          var previousExpirationContext = expirationContext;\n          expirationContext = Sync;\n\n          try {\n            return fn(a, b, c, d);\n          } finally {\n            expirationContext = previousExpirationContext;\n          }\n        } // TODO: Everything below this is written as if it has been lifted to the\n        // renderers. I'll do this in a follow-up.\n        // Linked-list of roots\n\n\n        var firstScheduledRoot = null;\n        var lastScheduledRoot = null;\n        var callbackExpirationTime = NoWork;\n        var callbackID = void 0;\n        var isRendering = false;\n        var nextFlushedRoot = null;\n        var nextFlushedExpirationTime = NoWork;\n        var lowestPriorityPendingInteractiveExpirationTime = NoWork;\n        var hasUnhandledError = false;\n        var unhandledError = null;\n        var isBatchingUpdates = false;\n        var isUnbatchingUpdates = false;\n        var isBatchingInteractiveUpdates = false;\n        var completedBatches = null;\n        var originalStartTimeMs = scheduler.unstable_now();\n        var currentRendererTime = msToExpirationTime(originalStartTimeMs);\n        var currentSchedulerTime = currentRendererTime; // Use these to prevent an infinite loop of nested updates\n\n        var NESTED_UPDATE_LIMIT = 50;\n        var nestedUpdateCount = 0;\n        var lastCommittedRootDuringThisBatch = null;\n\n        function recomputeCurrentRendererTime() {\n          var currentTimeMs = scheduler.unstable_now() - originalStartTimeMs;\n          currentRendererTime = msToExpirationTime(currentTimeMs);\n        }\n\n        function scheduleCallbackWithExpirationTime(root, expirationTime) {\n          if (callbackExpirationTime !== NoWork) {\n            // A callback is already scheduled. Check its expiration time (timeout).\n            if (expirationTime < callbackExpirationTime) {\n              // Existing callback has sufficient timeout. Exit.\n              return;\n            } else {\n              if (callbackID !== null) {\n                // Existing callback has insufficient timeout. Cancel and schedule a\n                // new one.\n                scheduler.unstable_cancelCallback(callbackID);\n              }\n            } // The request callback timer is already running. Don't start a new one.\n\n          } else {\n            startRequestCallbackTimer();\n          }\n\n          callbackExpirationTime = expirationTime;\n          var currentMs = scheduler.unstable_now() - originalStartTimeMs;\n          var expirationTimeMs = expirationTimeToMs(expirationTime);\n          var timeout = expirationTimeMs - currentMs;\n          callbackID = scheduler.unstable_scheduleCallback(performAsyncWork, {\n            timeout: timeout\n          });\n        } // For every call to renderRoot, one of onFatal, onComplete, onSuspend, and\n        // onYield is called upon exiting. We use these in lieu of returning a tuple.\n        // I've also chosen not to inline them into renderRoot because these will\n        // eventually be lifted into the renderer.\n\n\n        function onFatal(root) {\n          root.finishedWork = null;\n        }\n\n        function onComplete(root, finishedWork, expirationTime) {\n          root.pendingCommitExpirationTime = expirationTime;\n          root.finishedWork = finishedWork;\n        }\n\n        function onSuspend(root, finishedWork, suspendedExpirationTime, rootExpirationTime, msUntilTimeout) {\n          root.expirationTime = rootExpirationTime;\n\n          if (msUntilTimeout === 0 && !shouldYieldToRenderer()) {\n            // Don't wait an additional tick. Commit the tree immediately.\n            root.pendingCommitExpirationTime = suspendedExpirationTime;\n            root.finishedWork = finishedWork;\n          } else if (msUntilTimeout > 0) {\n            // Wait `msUntilTimeout` milliseconds before committing.\n            root.timeoutHandle = scheduleTimeout(onTimeout.bind(null, root, finishedWork, suspendedExpirationTime), msUntilTimeout);\n          }\n        }\n\n        function onYield(root) {\n          root.finishedWork = null;\n        }\n\n        function onTimeout(root, finishedWork, suspendedExpirationTime) {\n          // The root timed out. Commit it.\n          root.pendingCommitExpirationTime = suspendedExpirationTime;\n          root.finishedWork = finishedWork; // Read the current time before entering the commit phase. We can be\n          // certain this won't cause tearing related to batching of event updates\n          // because we're at the top of a timer event.\n\n          recomputeCurrentRendererTime();\n          currentSchedulerTime = currentRendererTime;\n          flushRoot(root, suspendedExpirationTime);\n        }\n\n        function onCommit(root, expirationTime) {\n          root.expirationTime = expirationTime;\n          root.finishedWork = null;\n        }\n\n        function requestCurrentTime() {\n          // requestCurrentTime is called by the scheduler to compute an expiration\n          // time.\n          //\n          // Expiration times are computed by adding to the current time (the start\n          // time). However, if two updates are scheduled within the same event, we\n          // should treat their start times as simultaneous, even if the actual clock\n          // time has advanced between the first and second call.\n          // In other words, because expiration times determine how updates are batched,\n          // we want all updates of like priority that occur within the same event to\n          // receive the same expiration time. Otherwise we get tearing.\n          //\n          // We keep track of two separate times: the current \"renderer\" time and the\n          // current \"scheduler\" time. The renderer time can be updated whenever; it\n          // only exists to minimize the calls performance.now.\n          //\n          // But the scheduler time can only be updated if there's no pending work, or\n          // if we know for certain that we're not in the middle of an event.\n          if (isRendering) {\n            // We're already rendering. Return the most recently read time.\n            return currentSchedulerTime;\n          } // Check if there's pending work.\n\n\n          findHighestPriorityRoot();\n\n          if (nextFlushedExpirationTime === NoWork || nextFlushedExpirationTime === Never) {\n            // If there's no pending work, or if the pending work is offscreen, we can\n            // read the current time without risk of tearing.\n            recomputeCurrentRendererTime();\n            currentSchedulerTime = currentRendererTime;\n            return currentSchedulerTime;\n          } // There's already pending work. We might be in the middle of a browser\n          // event. If we were to read the current time, it could cause multiple updates\n          // within the same event to receive different expiration times, leading to\n          // tearing. Return the last read time. During the next idle callback, the\n          // time will be updated.\n\n\n          return currentSchedulerTime;\n        } // requestWork is called by the scheduler whenever a root receives an update.\n        // It's up to the renderer to call renderRoot at some point in the future.\n\n\n        function requestWork(root, expirationTime) {\n          addRootToSchedule(root, expirationTime);\n\n          if (isRendering) {\n            // Prevent reentrancy. Remaining work will be scheduled at the end of\n            // the currently rendering batch.\n            return;\n          }\n\n          if (isBatchingUpdates) {\n            // Flush work at the end of the batch.\n            if (isUnbatchingUpdates) {\n              // ...unless we're inside unbatchedUpdates, in which case we should\n              // flush it now.\n              nextFlushedRoot = root;\n              nextFlushedExpirationTime = Sync;\n              performWorkOnRoot(root, Sync, false);\n            }\n\n            return;\n          } // TODO: Get rid of Sync and use current time?\n\n\n          if (expirationTime === Sync) {\n            performSyncWork();\n          } else {\n            scheduleCallbackWithExpirationTime(root, expirationTime);\n          }\n        }\n\n        function addRootToSchedule(root, expirationTime) {\n          // Add the root to the schedule.\n          // Check if this root is already part of the schedule.\n          if (root.nextScheduledRoot === null) {\n            // This root is not already scheduled. Add it.\n            root.expirationTime = expirationTime;\n\n            if (lastScheduledRoot === null) {\n              firstScheduledRoot = lastScheduledRoot = root;\n              root.nextScheduledRoot = root;\n            } else {\n              lastScheduledRoot.nextScheduledRoot = root;\n              lastScheduledRoot = root;\n              lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;\n            }\n          } else {\n            // This root is already scheduled, but its priority may have increased.\n            var remainingExpirationTime = root.expirationTime;\n\n            if (expirationTime > remainingExpirationTime) {\n              // Update the priority.\n              root.expirationTime = expirationTime;\n            }\n          }\n        }\n\n        function findHighestPriorityRoot() {\n          var highestPriorityWork = NoWork;\n          var highestPriorityRoot = null;\n\n          if (lastScheduledRoot !== null) {\n            var previousScheduledRoot = lastScheduledRoot;\n            var root = firstScheduledRoot;\n\n            while (root !== null) {\n              var remainingExpirationTime = root.expirationTime;\n\n              if (remainingExpirationTime === NoWork) {\n                // This root no longer has work. Remove it from the scheduler.\n                // TODO: This check is redudant, but Flow is confused by the branch\n                // below where we set lastScheduledRoot to null, even though we break\n                // from the loop right after.\n                !(previousScheduledRoot !== null && lastScheduledRoot !== null) ? invariant(false, 'Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n\n                if (root === root.nextScheduledRoot) {\n                  // This is the only root in the list.\n                  root.nextScheduledRoot = null;\n                  firstScheduledRoot = lastScheduledRoot = null;\n                  break;\n                } else if (root === firstScheduledRoot) {\n                  // This is the first root in the list.\n                  var next = root.nextScheduledRoot;\n                  firstScheduledRoot = next;\n                  lastScheduledRoot.nextScheduledRoot = next;\n                  root.nextScheduledRoot = null;\n                } else if (root === lastScheduledRoot) {\n                  // This is the last root in the list.\n                  lastScheduledRoot = previousScheduledRoot;\n                  lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;\n                  root.nextScheduledRoot = null;\n                  break;\n                } else {\n                  previousScheduledRoot.nextScheduledRoot = root.nextScheduledRoot;\n                  root.nextScheduledRoot = null;\n                }\n\n                root = previousScheduledRoot.nextScheduledRoot;\n              } else {\n                if (remainingExpirationTime > highestPriorityWork) {\n                  // Update the priority, if it's higher\n                  highestPriorityWork = remainingExpirationTime;\n                  highestPriorityRoot = root;\n                }\n\n                if (root === lastScheduledRoot) {\n                  break;\n                }\n\n                if (highestPriorityWork === Sync) {\n                  // Sync is highest priority by definition so\n                  // we can stop searching.\n                  break;\n                }\n\n                previousScheduledRoot = root;\n                root = root.nextScheduledRoot;\n              }\n            }\n          }\n\n          nextFlushedRoot = highestPriorityRoot;\n          nextFlushedExpirationTime = highestPriorityWork;\n        } // TODO: This wrapper exists because many of the older tests (the ones that use\n        // flushDeferredPri) rely on the number of times `shouldYield` is called. We\n        // should get rid of it.\n\n\n        var didYield = false;\n\n        function shouldYieldToRenderer() {\n          if (didYield) {\n            return true;\n          }\n\n          if (scheduler.unstable_shouldYield()) {\n            didYield = true;\n            return true;\n          }\n\n          return false;\n        }\n\n        function performAsyncWork() {\n          try {\n            if (!shouldYieldToRenderer()) {\n              // The callback timed out. That means at least one update has expired.\n              // Iterate through the root schedule. If they contain expired work, set\n              // the next render expiration time to the current time. This has the effect\n              // of flushing all expired work in a single batch, instead of flushing each\n              // level one at a time.\n              if (firstScheduledRoot !== null) {\n                recomputeCurrentRendererTime();\n                var root = firstScheduledRoot;\n\n                do {\n                  didExpireAtExpirationTime(root, currentRendererTime); // The root schedule is circular, so this is never null.\n\n                  root = root.nextScheduledRoot;\n                } while (root !== firstScheduledRoot);\n              }\n            }\n\n            performWork(NoWork, true);\n          } finally {\n            didYield = false;\n          }\n        }\n\n        function performSyncWork() {\n          performWork(Sync, false);\n        }\n\n        function performWork(minExpirationTime, isYieldy) {\n          // Keep working on roots until there's no more work, or until there's a higher\n          // priority event.\n          findHighestPriorityRoot();\n\n          if (isYieldy) {\n            recomputeCurrentRendererTime();\n            currentSchedulerTime = currentRendererTime;\n\n            if (enableUserTimingAPI) {\n              var didExpire = nextFlushedExpirationTime > currentRendererTime;\n              var timeout = expirationTimeToMs(nextFlushedExpirationTime);\n              stopRequestCallbackTimer(didExpire, timeout);\n            }\n\n            while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && minExpirationTime <= nextFlushedExpirationTime && !(didYield && currentRendererTime > nextFlushedExpirationTime)) {\n              performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, currentRendererTime > nextFlushedExpirationTime);\n              findHighestPriorityRoot();\n              recomputeCurrentRendererTime();\n              currentSchedulerTime = currentRendererTime;\n            }\n          } else {\n            while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && minExpirationTime <= nextFlushedExpirationTime) {\n              performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, false);\n              findHighestPriorityRoot();\n            }\n          } // We're done flushing work. Either we ran out of time in this callback,\n          // or there's no more work left with sufficient priority.\n          // If we're inside a callback, set this to false since we just completed it.\n\n\n          if (isYieldy) {\n            callbackExpirationTime = NoWork;\n            callbackID = null;\n          } // If there's work left over, schedule a new callback.\n\n\n          if (nextFlushedExpirationTime !== NoWork) {\n            scheduleCallbackWithExpirationTime(nextFlushedRoot, nextFlushedExpirationTime);\n          } // Clean-up.\n\n\n          finishRendering();\n        }\n\n        function flushRoot(root, expirationTime) {\n          !!isRendering ? invariant(false, 'work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method.') : void 0; // Perform work on root as if the given expiration time is the current time.\n          // This has the effect of synchronously flushing all work up to and\n          // including the given time.\n\n          nextFlushedRoot = root;\n          nextFlushedExpirationTime = expirationTime;\n          performWorkOnRoot(root, expirationTime, false); // Flush any sync work that was scheduled by lifecycles\n\n          performSyncWork();\n        }\n\n        function finishRendering() {\n          nestedUpdateCount = 0;\n          lastCommittedRootDuringThisBatch = null;\n\n          if (completedBatches !== null) {\n            var batches = completedBatches;\n            completedBatches = null;\n\n            for (var i = 0; i < batches.length; i++) {\n              var batch = batches[i];\n\n              try {\n                batch._onComplete();\n              } catch (error) {\n                if (!hasUnhandledError) {\n                  hasUnhandledError = true;\n                  unhandledError = error;\n                }\n              }\n            }\n          }\n\n          if (hasUnhandledError) {\n            var error = unhandledError;\n            unhandledError = null;\n            hasUnhandledError = false;\n            throw error;\n          }\n        }\n\n        function performWorkOnRoot(root, expirationTime, isYieldy) {\n          !!isRendering ? invariant(false, 'performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n          isRendering = true; // Check if this is async work or sync/expired work.\n\n          if (!isYieldy) {\n            // Flush work without yielding.\n            // TODO: Non-yieldy work does not necessarily imply expired work. A renderer\n            // may want to perform some work without yielding, but also without\n            // requiring the root to complete (by triggering placeholders).\n            var finishedWork = root.finishedWork;\n\n            if (finishedWork !== null) {\n              // This root is already complete. We can commit it.\n              completeRoot(root, finishedWork, expirationTime);\n            } else {\n              root.finishedWork = null; // If this root previously suspended, clear its existing timeout, since\n              // we're about to try rendering again.\n\n              var timeoutHandle = root.timeoutHandle;\n\n              if (timeoutHandle !== noTimeout) {\n                root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n\n                cancelTimeout(timeoutHandle);\n              }\n\n              renderRoot(root, isYieldy);\n              finishedWork = root.finishedWork;\n\n              if (finishedWork !== null) {\n                // We've completed the root. Commit it.\n                completeRoot(root, finishedWork, expirationTime);\n              }\n            }\n          } else {\n            // Flush async work.\n            var _finishedWork = root.finishedWork;\n\n            if (_finishedWork !== null) {\n              // This root is already complete. We can commit it.\n              completeRoot(root, _finishedWork, expirationTime);\n            } else {\n              root.finishedWork = null; // If this root previously suspended, clear its existing timeout, since\n              // we're about to try rendering again.\n\n              var _timeoutHandle = root.timeoutHandle;\n\n              if (_timeoutHandle !== noTimeout) {\n                root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n\n                cancelTimeout(_timeoutHandle);\n              }\n\n              renderRoot(root, isYieldy);\n              _finishedWork = root.finishedWork;\n\n              if (_finishedWork !== null) {\n                // We've completed the root. Check the if we should yield one more time\n                // before committing.\n                if (!shouldYieldToRenderer()) {\n                  // Still time left. Commit the root.\n                  completeRoot(root, _finishedWork, expirationTime);\n                } else {\n                  // There's no time left. Mark this root as complete. We'll come\n                  // back and commit it later.\n                  root.finishedWork = _finishedWork;\n                }\n              }\n            }\n          }\n\n          isRendering = false;\n        }\n\n        function completeRoot(root, finishedWork, expirationTime) {\n          // Check if there's a batch that matches this expiration time.\n          var firstBatch = root.firstBatch;\n\n          if (firstBatch !== null && firstBatch._expirationTime >= expirationTime) {\n            if (completedBatches === null) {\n              completedBatches = [firstBatch];\n            } else {\n              completedBatches.push(firstBatch);\n            }\n\n            if (firstBatch._defer) {\n              // This root is blocked from committing by a batch. Unschedule it until\n              // we receive another update.\n              root.finishedWork = finishedWork;\n              root.expirationTime = NoWork;\n              return;\n            }\n          } // Commit the root.\n\n\n          root.finishedWork = null; // Check if this is a nested update (a sync update scheduled during the\n          // commit phase).\n\n          if (root === lastCommittedRootDuringThisBatch) {\n            // If the next root is the same as the previous root, this is a nested\n            // update. To prevent an infinite loop, increment the nested update count.\n            nestedUpdateCount++;\n          } else {\n            // Reset whenever we switch roots.\n            lastCommittedRootDuringThisBatch = root;\n            nestedUpdateCount = 0;\n          }\n\n          commitRoot(root, finishedWork);\n        }\n\n        function onUncaughtError(error) {\n          !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0; // Unschedule this root so we don't work on it again until there's\n          // another update.\n\n          nextFlushedRoot.expirationTime = NoWork;\n\n          if (!hasUnhandledError) {\n            hasUnhandledError = true;\n            unhandledError = error;\n          }\n        } // TODO: Batching should be implemented at the renderer level, not inside\n        // the reconciler.\n\n\n        function batchedUpdates$1(fn, a) {\n          var previousIsBatchingUpdates = isBatchingUpdates;\n          isBatchingUpdates = true;\n\n          try {\n            return fn(a);\n          } finally {\n            isBatchingUpdates = previousIsBatchingUpdates;\n\n            if (!isBatchingUpdates && !isRendering) {\n              performSyncWork();\n            }\n          }\n        } // TODO: Batching should be implemented at the renderer level, not inside\n        // the reconciler.\n\n\n        function unbatchedUpdates(fn, a) {\n          if (isBatchingUpdates && !isUnbatchingUpdates) {\n            isUnbatchingUpdates = true;\n\n            try {\n              return fn(a);\n            } finally {\n              isUnbatchingUpdates = false;\n            }\n          }\n\n          return fn(a);\n        } // TODO: Batching should be implemented at the renderer level, not within\n        // the reconciler.\n\n\n        function flushSync(fn, a) {\n          !!isRendering ? invariant(false, 'flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.') : void 0;\n          var previousIsBatchingUpdates = isBatchingUpdates;\n          isBatchingUpdates = true;\n\n          try {\n            return syncUpdates(fn, a);\n          } finally {\n            isBatchingUpdates = previousIsBatchingUpdates;\n            performSyncWork();\n          }\n        }\n\n        function interactiveUpdates$1(fn, a, b) {\n          if (isBatchingInteractiveUpdates) {\n            return fn(a, b);\n          } // If there are any pending interactive updates, synchronously flush them.\n          // This needs to happen before we read any handlers, because the effect of\n          // the previous event may influence which handlers are called during\n          // this event.\n\n\n          if (!isBatchingUpdates && !isRendering && lowestPriorityPendingInteractiveExpirationTime !== NoWork) {\n            // Synchronously flush pending interactive updates.\n            performWork(lowestPriorityPendingInteractiveExpirationTime, false);\n            lowestPriorityPendingInteractiveExpirationTime = NoWork;\n          }\n\n          var previousIsBatchingInteractiveUpdates = isBatchingInteractiveUpdates;\n          var previousIsBatchingUpdates = isBatchingUpdates;\n          isBatchingInteractiveUpdates = true;\n          isBatchingUpdates = true;\n\n          try {\n            return fn(a, b);\n          } finally {\n            isBatchingInteractiveUpdates = previousIsBatchingInteractiveUpdates;\n            isBatchingUpdates = previousIsBatchingUpdates;\n\n            if (!isBatchingUpdates && !isRendering) {\n              performSyncWork();\n            }\n          }\n        }\n\n        function flushInteractiveUpdates$1() {\n          if (!isRendering && lowestPriorityPendingInteractiveExpirationTime !== NoWork) {\n            // Synchronously flush pending interactive updates.\n            performWork(lowestPriorityPendingInteractiveExpirationTime, false);\n            lowestPriorityPendingInteractiveExpirationTime = NoWork;\n          }\n        }\n\n        function flushControlled(fn) {\n          var previousIsBatchingUpdates = isBatchingUpdates;\n          isBatchingUpdates = true;\n\n          try {\n            syncUpdates(fn);\n          } finally {\n            isBatchingUpdates = previousIsBatchingUpdates;\n\n            if (!isBatchingUpdates && !isRendering) {\n              performSyncWork();\n            }\n          }\n        } // 0 is PROD, 1 is DEV.\n        // Might add PROFILE later.\n\n\n        var didWarnAboutNestedUpdates = void 0;\n        var didWarnAboutFindNodeInStrictMode = void 0;\n        {\n          didWarnAboutNestedUpdates = false;\n          didWarnAboutFindNodeInStrictMode = {};\n        }\n\n        function getContextForSubtree(parentComponent) {\n          if (!parentComponent) {\n            return emptyContextObject;\n          }\n\n          var fiber = get(parentComponent);\n          var parentContext = findCurrentUnmaskedContext(fiber);\n\n          if (fiber.tag === ClassComponent) {\n            var Component = fiber.type;\n\n            if (isContextProvider(Component)) {\n              return processChildContext(fiber, Component, parentContext);\n            }\n          }\n\n          return parentContext;\n        }\n\n        function scheduleRootUpdate(current$$1, element, expirationTime, callback) {\n          {\n            if (phase === 'render' && current !== null && !didWarnAboutNestedUpdates) {\n              didWarnAboutNestedUpdates = true;\n              warningWithoutStack$1(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\\n\\n' + 'Check the render method of %s.', getComponentName(current.type) || 'Unknown');\n            }\n          }\n          var update = createUpdate(expirationTime); // Caution: React DevTools currently depends on this property\n          // being called \"element\".\n\n          update.payload = {\n            element: element\n          };\n          callback = callback === undefined ? null : callback;\n\n          if (callback !== null) {\n            !(typeof callback === 'function') ? warningWithoutStack$1(false, 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback) : void 0;\n            update.callback = callback;\n          }\n\n          flushPassiveEffects();\n          enqueueUpdate(current$$1, update);\n          scheduleWork(current$$1, expirationTime);\n          return expirationTime;\n        }\n\n        function updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback) {\n          // TODO: If this is a nested container, this won't be the root.\n          var current$$1 = container.current;\n          {\n            if (ReactFiberInstrumentation_1.debugTool) {\n              if (current$$1.alternate === null) {\n                ReactFiberInstrumentation_1.debugTool.onMountContainer(container);\n              } else if (element === null) {\n                ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);\n              } else {\n                ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);\n              }\n            }\n          }\n          var context = getContextForSubtree(parentComponent);\n\n          if (container.context === null) {\n            container.context = context;\n          } else {\n            container.pendingContext = context;\n          }\n\n          return scheduleRootUpdate(current$$1, element, expirationTime, callback);\n        }\n\n        function findHostInstance(component) {\n          var fiber = get(component);\n\n          if (fiber === undefined) {\n            if (typeof component.render === 'function') {\n              invariant(false, 'Unable to find node on an unmounted component.');\n            } else {\n              invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));\n            }\n          }\n\n          var hostFiber = findCurrentHostFiber(fiber);\n\n          if (hostFiber === null) {\n            return null;\n          }\n\n          return hostFiber.stateNode;\n        }\n\n        function findHostInstanceWithWarning(component, methodName) {\n          {\n            var fiber = get(component);\n\n            if (fiber === undefined) {\n              if (typeof component.render === 'function') {\n                invariant(false, 'Unable to find node on an unmounted component.');\n              } else {\n                invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));\n              }\n            }\n\n            var hostFiber = findCurrentHostFiber(fiber);\n\n            if (hostFiber === null) {\n              return null;\n            }\n\n            if (hostFiber.mode & StrictMode) {\n              var componentName = getComponentName(fiber.type) || 'Component';\n\n              if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n                didWarnAboutFindNodeInStrictMode[componentName] = true;\n\n                if (fiber.mode & StrictMode) {\n                  warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference.' + '\\n%s' + '\\n\\nLearn more about using refs safely here:' + '\\nhttps://fb.me/react-strict-mode-find-node', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));\n                } else {\n                  warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference.' + '\\n%s' + '\\n\\nLearn more about using refs safely here:' + '\\nhttps://fb.me/react-strict-mode-find-node', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));\n                }\n              }\n            }\n\n            return hostFiber.stateNode;\n          }\n          return findHostInstance(component);\n        }\n\n        function createContainer(containerInfo, isConcurrent, hydrate) {\n          return createFiberRoot(containerInfo, isConcurrent, hydrate);\n        }\n\n        function updateContainer(element, container, parentComponent, callback) {\n          var current$$1 = container.current;\n          var currentTime = requestCurrentTime();\n          var expirationTime = computeExpirationForFiber(currentTime, current$$1);\n          return updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback);\n        }\n\n        function getPublicRootInstance(container) {\n          var containerFiber = container.current;\n\n          if (!containerFiber.child) {\n            return null;\n          }\n\n          switch (containerFiber.child.tag) {\n            case HostComponent:\n              return getPublicInstance(containerFiber.child.stateNode);\n\n            default:\n              return containerFiber.child.stateNode;\n          }\n        }\n\n        function findHostInstanceWithNoPortals(fiber) {\n          var hostFiber = findCurrentHostFiberWithNoPortals(fiber);\n\n          if (hostFiber === null) {\n            return null;\n          }\n\n          return hostFiber.stateNode;\n        }\n\n        var overrideProps = null;\n        {\n          var copyWithSetImpl = function copyWithSetImpl(obj, path, idx, value) {\n            if (idx >= path.length) {\n              return value;\n            }\n\n            var key = path[idx];\n            var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj); // $FlowFixMe number or string is fine here\n\n            updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value);\n            return updated;\n          };\n\n          var copyWithSet = function copyWithSet(obj, path, value) {\n            return copyWithSetImpl(obj, path, 0, value);\n          }; // Support DevTools props for function components, forwardRef, memo, host components, etc.\n\n\n          overrideProps = function overrideProps(fiber, path, value) {\n            flushPassiveEffects();\n            fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n\n            if (fiber.alternate) {\n              fiber.alternate.pendingProps = fiber.pendingProps;\n            }\n\n            scheduleWork(fiber, Sync);\n          };\n        }\n\n        function injectIntoDevTools(devToolsConfig) {\n          var _findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;\n          return injectInternals(_assign({}, devToolsConfig, {\n            overrideProps: overrideProps,\n            findHostInstanceByFiber: function findHostInstanceByFiber(fiber) {\n              var hostFiber = findCurrentHostFiber(fiber);\n\n              if (hostFiber === null) {\n                return null;\n              }\n\n              return hostFiber.stateNode;\n            },\n            findFiberByHostInstance: function findFiberByHostInstance(instance) {\n              if (!_findFiberByHostInstance) {\n                // Might not be implemented by the renderer.\n                return null;\n              }\n\n              return _findFiberByHostInstance(instance);\n            }\n          }));\n        } // This file intentionally does *not* have the Flow annotation.\n        // Don't add it. See `./inline-typed.js` for an explanation.\n\n\n        function createPortal$1(children, containerInfo, // TODO: figure out the API for cross-renderer implementation.\n        implementation) {\n          var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n          return {\n            // This tag allow us to uniquely identify this as a React Portal\n            $$typeof: REACT_PORTAL_TYPE,\n            key: key == null ? null : '' + key,\n            children: children,\n            containerInfo: containerInfo,\n            implementation: implementation\n          };\n        } // TODO: this is special because it gets imported during build.\n\n\n        var ReactVersion = '16.7.0'; // TODO: This type is shared between the reconciler and ReactDOM, but will\n        // eventually be lifted out to the renderer.\n\n        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n        var topLevelUpdateWarnings = void 0;\n        var warnOnInvalidCallback = void 0;\n        var didWarnAboutUnstableCreatePortal = false;\n        {\n          if (typeof Map !== 'function' || // $FlowIssue Flow incorrectly thinks Map has no prototype\n          Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || // $FlowIssue Flow incorrectly thinks Set has no prototype\n          Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {\n            warningWithoutStack$1(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');\n          }\n\n          topLevelUpdateWarnings = function topLevelUpdateWarnings(container) {\n            if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {\n              var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);\n\n              if (hostInstance) {\n                !(hostInstance.parentNode === container) ? warningWithoutStack$1(false, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.') : void 0;\n              }\n            }\n\n            var isRootRenderedBySomeReact = !!container._reactRootContainer;\n            var rootEl = getReactRootElementInContainer(container);\n            var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));\n            !(!hasNonRootReactChild || isRootRenderedBySomeReact) ? warningWithoutStack$1(false, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;\n            !(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY') ? warningWithoutStack$1(false, 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;\n          };\n\n          warnOnInvalidCallback = function warnOnInvalidCallback(callback, callerName) {\n            !(callback === null || typeof callback === 'function') ? warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback) : void 0;\n          };\n        }\n        setRestoreImplementation(restoreControlledState$1);\n\n        function ReactBatch(root) {\n          var expirationTime = computeUniqueAsyncExpiration();\n          this._expirationTime = expirationTime;\n          this._root = root;\n          this._next = null;\n          this._callbacks = null;\n          this._didComplete = false;\n          this._hasChildren = false;\n          this._children = null;\n          this._defer = true;\n        }\n\n        ReactBatch.prototype.render = function (children) {\n          !this._defer ? invariant(false, 'batch.render: Cannot render a batch that already committed.') : void 0;\n          this._hasChildren = true;\n          this._children = children;\n          var internalRoot = this._root._internalRoot;\n          var expirationTime = this._expirationTime;\n          var work = new ReactWork();\n          updateContainerAtExpirationTime(children, internalRoot, null, expirationTime, work._onCommit);\n          return work;\n        };\n\n        ReactBatch.prototype.then = function (onComplete) {\n          if (this._didComplete) {\n            onComplete();\n            return;\n          }\n\n          var callbacks = this._callbacks;\n\n          if (callbacks === null) {\n            callbacks = this._callbacks = [];\n          }\n\n          callbacks.push(onComplete);\n        };\n\n        ReactBatch.prototype.commit = function () {\n          var internalRoot = this._root._internalRoot;\n          var firstBatch = internalRoot.firstBatch;\n          !(this._defer && firstBatch !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;\n\n          if (!this._hasChildren) {\n            // This batch is empty. Return.\n            this._next = null;\n            this._defer = false;\n            return;\n          }\n\n          var expirationTime = this._expirationTime; // Ensure this is the first batch in the list.\n\n          if (firstBatch !== this) {\n            // This batch is not the earliest batch. We need to move it to the front.\n            // Update its expiration time to be the expiration time of the earliest\n            // batch, so that we can flush it without flushing the other batches.\n            if (this._hasChildren) {\n              expirationTime = this._expirationTime = firstBatch._expirationTime; // Rendering this batch again ensures its children will be the final state\n              // when we flush (updates are processed in insertion order: last\n              // update wins).\n              // TODO: This forces a restart. Should we print a warning?\n\n              this.render(this._children);\n            } // Remove the batch from the list.\n\n\n            var previous = null;\n            var batch = firstBatch;\n\n            while (batch !== this) {\n              previous = batch;\n              batch = batch._next;\n            }\n\n            !(previous !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;\n            previous._next = batch._next; // Add it to the front.\n\n            this._next = firstBatch;\n            firstBatch = internalRoot.firstBatch = this;\n          } // Synchronously flush all the work up to this batch's expiration time.\n\n\n          this._defer = false;\n          flushRoot(internalRoot, expirationTime); // Pop the batch from the list.\n\n          var next = this._next;\n          this._next = null;\n          firstBatch = internalRoot.firstBatch = next; // Append the next earliest batch's children to the update queue.\n\n          if (firstBatch !== null && firstBatch._hasChildren) {\n            firstBatch.render(firstBatch._children);\n          }\n        };\n\n        ReactBatch.prototype._onComplete = function () {\n          if (this._didComplete) {\n            return;\n          }\n\n          this._didComplete = true;\n          var callbacks = this._callbacks;\n\n          if (callbacks === null) {\n            return;\n          } // TODO: Error handling.\n\n\n          for (var i = 0; i < callbacks.length; i++) {\n            var _callback = callbacks[i];\n\n            _callback();\n          }\n        };\n\n        function ReactWork() {\n          this._callbacks = null;\n          this._didCommit = false; // TODO: Avoid need to bind by replacing callbacks in the update queue with\n          // list of Work objects.\n\n          this._onCommit = this._onCommit.bind(this);\n        }\n\n        ReactWork.prototype.then = function (onCommit) {\n          if (this._didCommit) {\n            onCommit();\n            return;\n          }\n\n          var callbacks = this._callbacks;\n\n          if (callbacks === null) {\n            callbacks = this._callbacks = [];\n          }\n\n          callbacks.push(onCommit);\n        };\n\n        ReactWork.prototype._onCommit = function () {\n          if (this._didCommit) {\n            return;\n          }\n\n          this._didCommit = true;\n          var callbacks = this._callbacks;\n\n          if (callbacks === null) {\n            return;\n          } // TODO: Error handling.\n\n\n          for (var i = 0; i < callbacks.length; i++) {\n            var _callback2 = callbacks[i];\n            !(typeof _callback2 === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', _callback2) : void 0;\n\n            _callback2();\n          }\n        };\n\n        function ReactRoot(container, isConcurrent, hydrate) {\n          var root = createContainer(container, isConcurrent, hydrate);\n          this._internalRoot = root;\n        }\n\n        ReactRoot.prototype.render = function (children, callback) {\n          var root = this._internalRoot;\n          var work = new ReactWork();\n          callback = callback === undefined ? null : callback;\n          {\n            warnOnInvalidCallback(callback, 'render');\n          }\n\n          if (callback !== null) {\n            work.then(callback);\n          }\n\n          updateContainer(children, root, null, work._onCommit);\n          return work;\n        };\n\n        ReactRoot.prototype.unmount = function (callback) {\n          var root = this._internalRoot;\n          var work = new ReactWork();\n          callback = callback === undefined ? null : callback;\n          {\n            warnOnInvalidCallback(callback, 'render');\n          }\n\n          if (callback !== null) {\n            work.then(callback);\n          }\n\n          updateContainer(null, root, null, work._onCommit);\n          return work;\n        };\n\n        ReactRoot.prototype.legacy_renderSubtreeIntoContainer = function (parentComponent, children, callback) {\n          var root = this._internalRoot;\n          var work = new ReactWork();\n          callback = callback === undefined ? null : callback;\n          {\n            warnOnInvalidCallback(callback, 'render');\n          }\n\n          if (callback !== null) {\n            work.then(callback);\n          }\n\n          updateContainer(children, root, parentComponent, work._onCommit);\n          return work;\n        };\n\n        ReactRoot.prototype.createBatch = function () {\n          var batch = new ReactBatch(this);\n          var expirationTime = batch._expirationTime;\n          var internalRoot = this._internalRoot;\n          var firstBatch = internalRoot.firstBatch;\n\n          if (firstBatch === null) {\n            internalRoot.firstBatch = batch;\n            batch._next = null;\n          } else {\n            // Insert sorted by expiration time then insertion order\n            var insertAfter = null;\n            var insertBefore = firstBatch;\n\n            while (insertBefore !== null && insertBefore._expirationTime >= expirationTime) {\n              insertAfter = insertBefore;\n              insertBefore = insertBefore._next;\n            }\n\n            batch._next = insertBefore;\n\n            if (insertAfter !== null) {\n              insertAfter._next = batch;\n            }\n          }\n\n          return batch;\n        };\n        /**\n         * True if the supplied DOM node is a valid node element.\n         *\n         * @param {?DOMElement} node The candidate DOM node.\n         * @return {boolean} True if the DOM is a valid DOM node.\n         * @internal\n         */\n\n\n        function isValidContainer(node) {\n          return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));\n        }\n\n        function getReactRootElementInContainer(container) {\n          if (!container) {\n            return null;\n          }\n\n          if (container.nodeType === DOCUMENT_NODE) {\n            return container.documentElement;\n          } else {\n            return container.firstChild;\n          }\n        }\n\n        function shouldHydrateDueToLegacyHeuristic(container) {\n          var rootElement = getReactRootElementInContainer(container);\n          return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));\n        }\n\n        setBatchingImplementation(batchedUpdates$1, interactiveUpdates$1, flushInteractiveUpdates$1);\n        var warnedAboutHydrateAPI = false;\n\n        function legacyCreateRootFromDOMContainer(container, forceHydrate) {\n          var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container); // First clear any existing content.\n\n          if (!shouldHydrate) {\n            var warned = false;\n            var rootSibling = void 0;\n\n            while (rootSibling = container.lastChild) {\n              {\n                if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {\n                  warned = true;\n                  warningWithoutStack$1(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');\n                }\n              }\n              container.removeChild(rootSibling);\n            }\n          }\n\n          {\n            if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {\n              warnedAboutHydrateAPI = true;\n              lowPriorityWarning$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');\n            }\n          } // Legacy roots are not async by default.\n\n          var isConcurrent = false;\n          return new ReactRoot(container, isConcurrent, shouldHydrate);\n        }\n\n        function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {\n          // TODO: Ensure all entry points contain this check\n          !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;\n          {\n            topLevelUpdateWarnings(container);\n          } // TODO: Without `any` type, Flow says \"Property cannot be accessed on any\n          // member of intersection type.\" Whyyyyyy.\n\n          var root = container._reactRootContainer;\n\n          if (!root) {\n            // Initial mount\n            root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);\n\n            if (typeof callback === 'function') {\n              var originalCallback = callback;\n\n              callback = function callback() {\n                var instance = getPublicRootInstance(root._internalRoot);\n                originalCallback.call(instance);\n              };\n            } // Initial mount should not be batched.\n\n\n            unbatchedUpdates(function () {\n              if (parentComponent != null) {\n                root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);\n              } else {\n                root.render(children, callback);\n              }\n            });\n          } else {\n            if (typeof callback === 'function') {\n              var _originalCallback = callback;\n\n              callback = function callback() {\n                var instance = getPublicRootInstance(root._internalRoot);\n\n                _originalCallback.call(instance);\n              };\n            } // Update\n\n\n            if (parentComponent != null) {\n              root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);\n            } else {\n              root.render(children, callback);\n            }\n          }\n\n          return getPublicRootInstance(root._internalRoot);\n        }\n\n        function createPortal$$1(children, container) {\n          var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n          !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0; // TODO: pass ReactDOM portal implementation as third argument\n\n          return createPortal$1(children, container, null, key);\n        }\n\n        var ReactDOM = {\n          createPortal: createPortal$$1,\n          findDOMNode: function findDOMNode(componentOrElement) {\n            {\n              var owner = ReactCurrentOwner.current;\n\n              if (owner !== null && owner.stateNode !== null) {\n                var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;\n                !warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner.type) || 'A component') : void 0;\n                owner.stateNode._warnedAboutRefsInRender = true;\n              }\n            }\n\n            if (componentOrElement == null) {\n              return null;\n            }\n\n            if (componentOrElement.nodeType === ELEMENT_NODE) {\n              return componentOrElement;\n            }\n\n            {\n              return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');\n            }\n            return findHostInstance(componentOrElement);\n          },\n          hydrate: function hydrate(element, container, callback) {\n            // TODO: throw or warn if we couldn't hydrate?\n            return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);\n          },\n          render: function render(element, container, callback) {\n            return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);\n          },\n          unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {\n            !(parentComponent != null && has(parentComponent)) ? invariant(false, 'parentComponent must be a valid React Component') : void 0;\n            return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);\n          },\n          unmountComponentAtNode: function unmountComponentAtNode(container) {\n            !isValidContainer(container) ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : void 0;\n\n            if (container._reactRootContainer) {\n              {\n                var rootEl = getReactRootElementInContainer(container);\n                var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);\n                !!renderedByDifferentReact ? warningWithoutStack$1(false, \"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by another copy of React.') : void 0;\n              } // Unmount should not be batched.\n\n              unbatchedUpdates(function () {\n                legacyRenderSubtreeIntoContainer(null, null, container, false, function () {\n                  container._reactRootContainer = null;\n                });\n              }); // If you call unmountComponentAtNode twice in quick succession, you'll\n              // get `true` twice. That's probably fine?\n\n              return true;\n            } else {\n              {\n                var _rootEl = getReactRootElementInContainer(container);\n\n                var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl)); // Check if the container itself is a React root node.\n\n                var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;\n                !!hasNonRootReactChild ? warningWithoutStack$1(false, \"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;\n              }\n              return false;\n            }\n          },\n          // Temporary alias since we already shipped React 16 RC with it.\n          // TODO: remove in React 17.\n          unstable_createPortal: function unstable_createPortal() {\n            if (!didWarnAboutUnstableCreatePortal) {\n              didWarnAboutUnstableCreatePortal = true;\n              lowPriorityWarning$1(false, 'The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the \"unstable_\" prefix.');\n            }\n\n            return createPortal$$1.apply(undefined, arguments);\n          },\n          unstable_batchedUpdates: batchedUpdates$1,\n          unstable_interactiveUpdates: interactiveUpdates$1,\n          flushSync: flushSync,\n          unstable_createRoot: createRoot,\n          unstable_flushControlled: flushControlled,\n          __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n            // Keep in sync with ReactDOMUnstableNativeDependencies.js\n            // and ReactTestUtils.js. This is an array for better minification.\n            Events: [getInstanceFromNode$1, getNodeFromInstance$1, getFiberCurrentPropsFromNode$1, injection.injectEventPluginsByName, eventNameDispatchConfigs, accumulateTwoPhaseDispatches, accumulateDirectDispatches, enqueueStateRestore, restoreStateIfNeeded, dispatchEvent, runEventsInBatch]\n          }\n        };\n\n        function createRoot(container, options) {\n          var functionName = enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot';\n          !isValidContainer(container) ? invariant(false, '%s(...): Target container is not a DOM element.', functionName) : void 0;\n          var hydrate = options != null && options.hydrate === true;\n          return new ReactRoot(container, true, hydrate);\n        }\n\n        if (enableStableConcurrentModeAPIs) {\n          ReactDOM.createRoot = createRoot;\n          ReactDOM.unstable_createRoot = undefined;\n        }\n\n        var foundDevTools = injectIntoDevTools({\n          findFiberByHostInstance: getClosestInstanceFromNode,\n          bundleType: 1,\n          version: ReactVersion,\n          rendererPackageName: 'react-dom'\n        });\n        {\n          if (!foundDevTools && canUseDOM && window.top === window.self) {\n            // If we're in Chrome or Firefox, provide a download link if not installed.\n            if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\n              var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.\n\n              if (/^(https?|file):$/.test(protocol)) {\n                console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');\n              }\n            }\n          }\n        }\n        var ReactDOM$2 = Object.freeze({\n          default: ReactDOM\n        });\n        var ReactDOM$3 = ReactDOM$2 && ReactDOM || ReactDOM$2; // TODO: decide on the top-level export form.\n        // This is hacky but makes it work with both Rollup and Jest.\n\n        var reactDom = ReactDOM$3.default || ReactDOM$3;\n        module.exports = reactDom;\n      })();\n    }\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 29 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    if (process.env.NODE_ENV === 'production') {\n      module.exports = __webpack_require__(30);\n    } else {\n      module.exports = __webpack_require__(31);\n    }\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 30 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /** @license React v0.12.0\n   * scheduler-tracing.production.min.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: !0\n  });\n  var b = 0;\n  exports.__interactionsRef = null;\n  exports.__subscriberRef = null;\n\n  exports.unstable_clear = function (a) {\n    return a();\n  };\n\n  exports.unstable_getCurrent = function () {\n    return null;\n  };\n\n  exports.unstable_getThreadID = function () {\n    return ++b;\n  };\n\n  exports.unstable_trace = function (a, d, c) {\n    return c();\n  };\n\n  exports.unstable_wrap = function (a) {\n    return a;\n  };\n\n  exports.unstable_subscribe = function () {};\n\n  exports.unstable_unsubscribe = function () {};\n  /***/\n\n},\n/* 31 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    /** @license React v0.12.0\n    * scheduler-tracing.development.js\n    *\n    * Copyright (c) Facebook, Inc. and its affiliates.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    */\n    if (process.env.NODE_ENV !== \"production\") {\n      (function () {\n        'use strict';\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        }); // Helps identify side effects in begin-phase lifecycle hooks and setState reducers:\n        // In some cases, StrictMode should also double-render lifecycles.\n        // This can be confusing for tests though,\n        // And it can be bad for performance in production.\n        // This feature flag can be used to control the behavior:\n        // To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n        // replay the begin phase of a failed component inside invokeGuardedCallback.\n        // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\n        // Gather advanced timing metrics for Profiler subtrees.\n        // Trace which interactions trigger each commit.\n\n        var enableSchedulerTracing = true; // Only used in www builds.\n        // TODO: true? Here it might just be false.\n        // Only used in www builds.\n        // Only used in www builds.\n        // React Fire: prevent the value and checked attributes from syncing\n        // with their related DOM properties\n        // These APIs will no longer be \"unstable\" in the upcoming 16.7 release,\n        // Control this behavior with a flag to support 16.6 minor releases in the meanwhile.\n\n        var DEFAULT_THREAD_ID = 0; // Counters used to generate unique IDs.\n\n        var interactionIDCounter = 0;\n        var threadIDCounter = 0; // Set of currently traced interactions.\n        // Interactions \"stack\"–\n        // Meaning that newly traced interactions are appended to the previously active set.\n        // When an interaction goes out of scope, the previous set (if any) is restored.\n\n        exports.__interactionsRef = null; // Listener(s) to notify when interactions begin and end.\n\n        exports.__subscriberRef = null;\n\n        if (enableSchedulerTracing) {\n          exports.__interactionsRef = {\n            current: new Set()\n          };\n          exports.__subscriberRef = {\n            current: null\n          };\n        }\n\n        function unstable_clear(callback) {\n          if (!enableSchedulerTracing) {\n            return callback();\n          }\n\n          var prevInteractions = exports.__interactionsRef.current;\n          exports.__interactionsRef.current = new Set();\n\n          try {\n            return callback();\n          } finally {\n            exports.__interactionsRef.current = prevInteractions;\n          }\n        }\n\n        function unstable_getCurrent() {\n          if (!enableSchedulerTracing) {\n            return null;\n          } else {\n            return exports.__interactionsRef.current;\n          }\n        }\n\n        function unstable_getThreadID() {\n          return ++threadIDCounter;\n        }\n\n        function unstable_trace(name, timestamp, callback) {\n          var threadID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THREAD_ID;\n\n          if (!enableSchedulerTracing) {\n            return callback();\n          }\n\n          var interaction = {\n            __count: 1,\n            id: interactionIDCounter++,\n            name: name,\n            timestamp: timestamp\n          };\n          var prevInteractions = exports.__interactionsRef.current; // Traced interactions should stack/accumulate.\n          // To do that, clone the current interactions.\n          // The previous set will be restored upon completion.\n\n          var interactions = new Set(prevInteractions);\n          interactions.add(interaction);\n          exports.__interactionsRef.current = interactions;\n          var subscriber = exports.__subscriberRef.current;\n          var returnValue = void 0;\n\n          try {\n            if (subscriber !== null) {\n              subscriber.onInteractionTraced(interaction);\n            }\n          } finally {\n            try {\n              if (subscriber !== null) {\n                subscriber.onWorkStarted(interactions, threadID);\n              }\n            } finally {\n              try {\n                returnValue = callback();\n              } finally {\n                exports.__interactionsRef.current = prevInteractions;\n\n                try {\n                  if (subscriber !== null) {\n                    subscriber.onWorkStopped(interactions, threadID);\n                  }\n                } finally {\n                  interaction.__count--; // If no async work was scheduled for this interaction,\n                  // Notify subscribers that it's completed.\n\n                  if (subscriber !== null && interaction.__count === 0) {\n                    subscriber.onInteractionScheduledWorkCompleted(interaction);\n                  }\n                }\n              }\n            }\n          }\n\n          return returnValue;\n        }\n\n        function unstable_wrap(callback) {\n          var threadID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_THREAD_ID;\n\n          if (!enableSchedulerTracing) {\n            return callback;\n          }\n\n          var wrappedInteractions = exports.__interactionsRef.current;\n          var subscriber = exports.__subscriberRef.current;\n\n          if (subscriber !== null) {\n            subscriber.onWorkScheduled(wrappedInteractions, threadID);\n          } // Update the pending async work count for the current interactions.\n          // Update after calling subscribers in case of error.\n\n\n          wrappedInteractions.forEach(function (interaction) {\n            interaction.__count++;\n          });\n          var hasRun = false;\n\n          function wrapped() {\n            var prevInteractions = exports.__interactionsRef.current;\n            exports.__interactionsRef.current = wrappedInteractions;\n            subscriber = exports.__subscriberRef.current;\n\n            try {\n              var returnValue = void 0;\n\n              try {\n                if (subscriber !== null) {\n                  subscriber.onWorkStarted(wrappedInteractions, threadID);\n                }\n              } finally {\n                try {\n                  returnValue = callback.apply(undefined, arguments);\n                } finally {\n                  exports.__interactionsRef.current = prevInteractions;\n\n                  if (subscriber !== null) {\n                    subscriber.onWorkStopped(wrappedInteractions, threadID);\n                  }\n                }\n              }\n\n              return returnValue;\n            } finally {\n              if (!hasRun) {\n                // We only expect a wrapped function to be executed once,\n                // But in the event that it's executed more than once–\n                // Only decrement the outstanding interaction counts once.\n                hasRun = true; // Update pending async counts for all wrapped interactions.\n                // If this was the last scheduled async work for any of them,\n                // Mark them as completed.\n\n                wrappedInteractions.forEach(function (interaction) {\n                  interaction.__count--;\n\n                  if (subscriber !== null && interaction.__count === 0) {\n                    subscriber.onInteractionScheduledWorkCompleted(interaction);\n                  }\n                });\n              }\n            }\n          }\n\n          wrapped.cancel = function cancel() {\n            subscriber = exports.__subscriberRef.current;\n\n            try {\n              if (subscriber !== null) {\n                subscriber.onWorkCanceled(wrappedInteractions, threadID);\n              }\n            } finally {\n              // Update pending async counts for all wrapped interactions.\n              // If this was the last scheduled async work for any of them,\n              // Mark them as completed.\n              wrappedInteractions.forEach(function (interaction) {\n                interaction.__count--;\n\n                if (subscriber && interaction.__count === 0) {\n                  subscriber.onInteractionScheduledWorkCompleted(interaction);\n                }\n              });\n            }\n          };\n\n          return wrapped;\n        }\n\n        var subscribers = null;\n\n        if (enableSchedulerTracing) {\n          subscribers = new Set();\n        }\n\n        function unstable_subscribe(subscriber) {\n          if (enableSchedulerTracing) {\n            subscribers.add(subscriber);\n\n            if (subscribers.size === 1) {\n              exports.__subscriberRef.current = {\n                onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,\n                onInteractionTraced: onInteractionTraced,\n                onWorkCanceled: onWorkCanceled,\n                onWorkScheduled: onWorkScheduled,\n                onWorkStarted: onWorkStarted,\n                onWorkStopped: onWorkStopped\n              };\n            }\n          }\n        }\n\n        function unstable_unsubscribe(subscriber) {\n          if (enableSchedulerTracing) {\n            subscribers.delete(subscriber);\n\n            if (subscribers.size === 0) {\n              exports.__subscriberRef.current = null;\n            }\n          }\n        }\n\n        function onInteractionTraced(interaction) {\n          var didCatchError = false;\n          var caughtError = null;\n          subscribers.forEach(function (subscriber) {\n            try {\n              subscriber.onInteractionTraced(interaction);\n            } catch (error) {\n              if (!didCatchError) {\n                didCatchError = true;\n                caughtError = error;\n              }\n            }\n          });\n\n          if (didCatchError) {\n            throw caughtError;\n          }\n        }\n\n        function onInteractionScheduledWorkCompleted(interaction) {\n          var didCatchError = false;\n          var caughtError = null;\n          subscribers.forEach(function (subscriber) {\n            try {\n              subscriber.onInteractionScheduledWorkCompleted(interaction);\n            } catch (error) {\n              if (!didCatchError) {\n                didCatchError = true;\n                caughtError = error;\n              }\n            }\n          });\n\n          if (didCatchError) {\n            throw caughtError;\n          }\n        }\n\n        function onWorkScheduled(interactions, threadID) {\n          var didCatchError = false;\n          var caughtError = null;\n          subscribers.forEach(function (subscriber) {\n            try {\n              subscriber.onWorkScheduled(interactions, threadID);\n            } catch (error) {\n              if (!didCatchError) {\n                didCatchError = true;\n                caughtError = error;\n              }\n            }\n          });\n\n          if (didCatchError) {\n            throw caughtError;\n          }\n        }\n\n        function onWorkStarted(interactions, threadID) {\n          var didCatchError = false;\n          var caughtError = null;\n          subscribers.forEach(function (subscriber) {\n            try {\n              subscriber.onWorkStarted(interactions, threadID);\n            } catch (error) {\n              if (!didCatchError) {\n                didCatchError = true;\n                caughtError = error;\n              }\n            }\n          });\n\n          if (didCatchError) {\n            throw caughtError;\n          }\n        }\n\n        function onWorkStopped(interactions, threadID) {\n          var didCatchError = false;\n          var caughtError = null;\n          subscribers.forEach(function (subscriber) {\n            try {\n              subscriber.onWorkStopped(interactions, threadID);\n            } catch (error) {\n              if (!didCatchError) {\n                didCatchError = true;\n                caughtError = error;\n              }\n            }\n          });\n\n          if (didCatchError) {\n            throw caughtError;\n          }\n        }\n\n        function onWorkCanceled(interactions, threadID) {\n          var didCatchError = false;\n          var caughtError = null;\n          subscribers.forEach(function (subscriber) {\n            try {\n              subscriber.onWorkCanceled(interactions, threadID);\n            } catch (error) {\n              if (!didCatchError) {\n                didCatchError = true;\n                caughtError = error;\n              }\n            }\n          });\n\n          if (didCatchError) {\n            throw caughtError;\n          }\n        }\n\n        exports.unstable_clear = unstable_clear;\n        exports.unstable_getCurrent = unstable_getCurrent;\n        exports.unstable_getThreadID = unstable_getThreadID;\n        exports.unstable_trace = unstable_trace;\n        exports.unstable_wrap = unstable_wrap;\n        exports.unstable_subscribe = unstable_subscribe;\n        exports.unstable_unsubscribe = unstable_unsubscribe;\n      })();\n    }\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 32 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  !function (e, t) {\n    true ? module.exports = t() : \"function\" == typeof define && define.amd ? define([], t) : \"object\" == typeof exports ? exports.THREE_ADDONS = t() : e.THREE_ADDONS = t();\n  }(this, function () {\n    return function (e) {\n      function t(i) {\n        if (r[i]) return r[i].exports;\n        var n = r[i] = {\n          i: i,\n          l: !1,\n          exports: {}\n        };\n        return e[i].call(n.exports, n, n.exports, t), n.l = !0, n.exports;\n      }\n\n      var r = {};\n      return t.m = e, t.c = r, t.d = function (e, r, i) {\n        t.o(e, r) || Object.defineProperty(e, r, {\n          configurable: !1,\n          enumerable: !0,\n          get: i\n        });\n      }, t.n = function (e) {\n        var r = e && e.__esModule ? function () {\n          return e.default;\n        } : function () {\n          return e;\n        };\n        return t.d(r, \"a\", r), r;\n      }, t.o = function (e, t) {\n        return Object.prototype.hasOwnProperty.call(e, t);\n      }, t.p = \"\", t(t.s = 1);\n    }([function (e, t, r) {\n      \"use strict\";\n\n      function i() {}\n\n      function n(e, t) {\n        this.x = e || 0, this.y = t || 0;\n      }\n\n      function o() {\n        this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], arguments.length > 0 && console.error(\"THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.\");\n      }\n\n      function a(e, t, r, i) {\n        this._x = e || 0, this._y = t || 0, this._z = r || 0, this._w = void 0 !== i ? i : 1;\n      }\n\n      function s(e, t, r) {\n        this.x = e || 0, this.y = t || 0, this.z = r || 0;\n      }\n\n      function c() {\n        this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1], arguments.length > 0 && console.error(\"THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.\");\n      }\n\n      function l(e, t, r, i, o, a, s, u, h, d) {\n        Object.defineProperty(this, \"id\", {\n          value: Bs++\n        }), this.uuid = zs.generateUUID(), this.name = \"\", this.image = void 0 !== e ? e : l.DEFAULT_IMAGE, this.mipmaps = [], this.mapping = void 0 !== t ? t : l.DEFAULT_MAPPING, this.wrapS = void 0 !== r ? r : La, this.wrapT = void 0 !== i ? i : La, this.magFilter = void 0 !== o ? o : Ua, this.minFilter = void 0 !== a ? a : Oa, this.anisotropy = void 0 !== h ? h : 1, this.format = void 0 !== s ? s : Ja, this.type = void 0 !== u ? u : Na, this.offset = new n(0, 0), this.repeat = new n(1, 1), this.center = new n(0, 0), this.rotation = 0, this.matrixAutoUpdate = !0, this.matrix = new c(), this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.encoding = void 0 !== d ? d : Cs, this.version = 0, this.onUpdate = null;\n      }\n\n      function u(e, t, r, i) {\n        this.x = e || 0, this.y = t || 0, this.z = r || 0, this.w = void 0 !== i ? i : 1;\n      }\n\n      function h(e, t, r) {\n        this.width = e, this.height = t, this.scissor = new u(0, 0, e, t), this.scissorTest = !1, this.viewport = new u(0, 0, e, t), r = r || {}, void 0 === r.minFilter && (r.minFilter = Ua), this.texture = new l(void 0, void 0, r.wrapS, r.wrapT, r.magFilter, r.minFilter, r.format, r.type, r.anisotropy, r.encoding), this.depthBuffer = void 0 === r.depthBuffer || r.depthBuffer, this.stencilBuffer = void 0 === r.stencilBuffer || r.stencilBuffer, this.depthTexture = void 0 !== r.depthTexture ? r.depthTexture : null;\n      }\n\n      function d(e, t, r) {\n        h.call(this, e, t, r), this.activeCubeFace = 0, this.activeMipMapLevel = 0;\n      }\n\n      function p(e, t, r, i, n, o, a, s, c, u, h, d) {\n        l.call(this, null, o, a, s, c, u, i, n, h, d), this.image = {\n          data: e,\n          width: t,\n          height: r\n        }, this.magFilter = void 0 !== c ? c : Ra, this.minFilter = void 0 !== u ? u : Ra, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;\n      }\n\n      function f(e, t) {\n        this.min = void 0 !== e ? e : new s(1 / 0, 1 / 0, 1 / 0), this.max = void 0 !== t ? t : new s(-1 / 0, -1 / 0, -1 / 0);\n      }\n\n      function m(e, t) {\n        this.center = void 0 !== e ? e : new s(), this.radius = void 0 !== t ? t : 0;\n      }\n\n      function v(e, t) {\n        this.normal = void 0 !== e ? e : new s(1, 0, 0), this.constant = void 0 !== t ? t : 0;\n      }\n\n      function g(e, t, r, i, n, o) {\n        this.planes = [void 0 !== e ? e : new v(), void 0 !== t ? t : new v(), void 0 !== r ? r : new v(), void 0 !== i ? i : new v(), void 0 !== n ? n : new v(), void 0 !== o ? o : new v()];\n      }\n\n      function y(e, t, r) {\n        return void 0 === t && void 0 === r ? this.set(e) : this.setRGB(e, t, r);\n      }\n\n      function x(e) {\n        function t(t, r) {\n          var i = t.array,\n              n = t.dynamic ? e.DYNAMIC_DRAW : e.STATIC_DRAW,\n              o = e.createBuffer();\n          e.bindBuffer(r, o), e.bufferData(r, i, n), t.onUploadCallback();\n          var a = e.FLOAT;\n          return i instanceof Float32Array ? a = e.FLOAT : i instanceof Float64Array ? console.warn(\"THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.\") : i instanceof Uint16Array ? a = e.UNSIGNED_SHORT : i instanceof Int16Array ? a = e.SHORT : i instanceof Uint32Array ? a = e.UNSIGNED_INT : i instanceof Int32Array ? a = e.INT : i instanceof Int8Array ? a = e.BYTE : i instanceof Uint8Array && (a = e.UNSIGNED_BYTE), {\n            buffer: o,\n            type: a,\n            bytesPerElement: i.BYTES_PER_ELEMENT,\n            version: t.version\n          };\n        }\n\n        function r(t, r, i) {\n          var n = r.array,\n              o = r.updateRange;\n          e.bindBuffer(i, t), !1 === r.dynamic ? e.bufferData(i, n, e.STATIC_DRAW) : -1 === o.count ? e.bufferSubData(i, 0, n) : 0 === o.count ? console.error(\"THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.\") : (e.bufferSubData(i, o.offset * n.BYTES_PER_ELEMENT, n.subarray(o.offset, o.offset + o.count)), o.count = -1);\n        }\n\n        function i(e) {\n          return e.isInterleavedBufferAttribute && (e = e.data), a.get(e);\n        }\n\n        function n(t) {\n          t.isInterleavedBufferAttribute && (t = t.data);\n          var r = a.get(t);\n          r && (e.deleteBuffer(r.buffer), a.delete(t));\n        }\n\n        function o(e, i) {\n          e.isInterleavedBufferAttribute && (e = e.data);\n          var n = a.get(e);\n          void 0 === n ? a.set(e, t(e, i)) : n.version < e.version && (r(n.buffer, e, i), n.version = e.version);\n        }\n\n        var a = new WeakMap();\n        return {\n          get: i,\n          remove: n,\n          update: o\n        };\n      }\n\n      function _(e, t, r, i) {\n        this._x = e || 0, this._y = t || 0, this._z = r || 0, this._order = i || _.DefaultOrder;\n      }\n\n      function b() {\n        this.mask = 1;\n      }\n\n      function w() {\n        function e() {\n          n.setFromEuler(i, !1);\n        }\n\n        function t() {\n          i.setFromQuaternion(n, void 0, !1);\n        }\n\n        Object.defineProperty(this, \"id\", {\n          value: Ws++\n        }), this.uuid = zs.generateUUID(), this.name = \"\", this.type = \"Object3D\", this.parent = null, this.children = [], this.up = w.DefaultUp.clone();\n        var r = new s(),\n            i = new _(),\n            n = new a(),\n            l = new s(1, 1, 1);\n        i.onChange(e), n.onChange(t), Object.defineProperties(this, {\n          position: {\n            enumerable: !0,\n            value: r\n          },\n          rotation: {\n            enumerable: !0,\n            value: i\n          },\n          quaternion: {\n            enumerable: !0,\n            value: n\n          },\n          scale: {\n            enumerable: !0,\n            value: l\n          },\n          modelViewMatrix: {\n            value: new o()\n          },\n          normalMatrix: {\n            value: new c()\n          }\n        }), this.matrix = new o(), this.matrixWorld = new o(), this.matrixAutoUpdate = w.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = !1, this.layers = new b(), this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.userData = {};\n      }\n\n      function M() {\n        w.call(this), this.type = \"Camera\", this.matrixWorldInverse = new o(), this.projectionMatrix = new o();\n      }\n\n      function E(e, t, r, i, n, o) {\n        M.call(this), this.type = \"OrthographicCamera\", this.zoom = 1, this.view = null, this.left = e, this.right = t, this.top = r, this.bottom = i, this.near = void 0 !== n ? n : .1, this.far = void 0 !== o ? o : 2e3, this.updateProjectionMatrix();\n      }\n\n      function S(e, t, r, i, n, o) {\n        this.a = e, this.b = t, this.c = r, this.normal = i && i.isVector3 ? i : new s(), this.vertexNormals = Array.isArray(i) ? i : [], this.color = n && n.isColor ? n : new y(), this.vertexColors = Array.isArray(n) ? n : [], this.materialIndex = void 0 !== o ? o : 0;\n      }\n\n      function T() {\n        Object.defineProperty(this, \"id\", {\n          value: Xs += 2\n        }), this.uuid = zs.generateUUID(), this.name = \"\", this.type = \"Geometry\", this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [[]], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.elementsNeedUpdate = !1, this.verticesNeedUpdate = !1, this.uvsNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.lineDistancesNeedUpdate = !1, this.groupsNeedUpdate = !1;\n      }\n\n      function A(e, t, r) {\n        if (Array.isArray(e)) throw new TypeError(\"THREE.BufferAttribute: array should be a Typed Array.\");\n        this.name = \"\", this.array = e, this.itemSize = t, this.count = void 0 !== e ? e.length / t : 0, this.normalized = !0 === r, this.dynamic = !1, this.updateRange = {\n          offset: 0,\n          count: -1\n        }, this.version = 0;\n      }\n\n      function L(e, t, r) {\n        A.call(this, new Int8Array(e), t, r);\n      }\n\n      function C(e, t, r) {\n        A.call(this, new Uint8Array(e), t, r);\n      }\n\n      function R(e, t, r) {\n        A.call(this, new Uint8ClampedArray(e), t, r);\n      }\n\n      function P(e, t, r) {\n        A.call(this, new Int16Array(e), t, r);\n      }\n\n      function D(e, t, r) {\n        A.call(this, new Uint16Array(e), t, r);\n      }\n\n      function U(e, t, r) {\n        A.call(this, new Int32Array(e), t, r);\n      }\n\n      function I(e, t, r) {\n        A.call(this, new Uint32Array(e), t, r);\n      }\n\n      function O(e, t, r) {\n        A.call(this, new Float32Array(e), t, r);\n      }\n\n      function N(e, t, r) {\n        A.call(this, new Float64Array(e), t, r);\n      }\n\n      function F() {\n        this.vertices = [], this.normals = [], this.colors = [], this.uvs = [], this.uvs2 = [], this.groups = [], this.morphTargets = {}, this.skinWeights = [], this.skinIndices = [], this.boundingBox = null, this.boundingSphere = null, this.verticesNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.uvsNeedUpdate = !1, this.groupsNeedUpdate = !1;\n      }\n\n      function z(e) {\n        if (0 === e.length) return -1 / 0;\n\n        for (var t = e[0], r = 1, i = e.length; r < i; ++r) {\n          e[r] > t && (t = e[r]);\n        }\n\n        return t;\n      }\n\n      function B() {\n        Object.defineProperty(this, \"id\", {\n          value: qs += 2\n        }), this.uuid = zs.generateUUID(), this.name = \"\", this.type = \"BufferGeometry\", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = {\n          start: 0,\n          count: 1 / 0\n        };\n      }\n\n      function G(e, t, r, i, n, o) {\n        T.call(this), this.type = \"BoxGeometry\", this.parameters = {\n          width: e,\n          height: t,\n          depth: r,\n          widthSegments: i,\n          heightSegments: n,\n          depthSegments: o\n        }, this.fromBufferGeometry(new H(e, t, r, i, n, o)), this.mergeVertices();\n      }\n\n      function H(e, t, r, i, n, o) {\n        function a(e, t, r, i, n, o, a, m, v, g, y) {\n          var x,\n              _,\n              b = o / v,\n              w = a / g,\n              M = o / 2,\n              E = a / 2,\n              S = m / 2,\n              T = v + 1,\n              A = g + 1,\n              L = 0,\n              C = 0,\n              R = new s();\n\n          for (_ = 0; _ < A; _++) {\n            var P = _ * w - E;\n\n            for (x = 0; x < T; x++) {\n              var D = x * b - M;\n              R[e] = D * i, R[t] = P * n, R[r] = S, u.push(R.x, R.y, R.z), R[e] = 0, R[t] = 0, R[r] = m > 0 ? 1 : -1, h.push(R.x, R.y, R.z), d.push(x / v), d.push(1 - _ / g), L += 1;\n            }\n          }\n\n          for (_ = 0; _ < g; _++) {\n            for (x = 0; x < v; x++) {\n              var U = p + x + T * _,\n                  I = p + x + T * (_ + 1),\n                  O = p + (x + 1) + T * (_ + 1),\n                  N = p + (x + 1) + T * _;\n              l.push(U, I, N), l.push(I, O, N), C += 6;\n            }\n          }\n\n          c.addGroup(f, C, y), f += C, p += L;\n        }\n\n        B.call(this), this.type = \"BoxBufferGeometry\", this.parameters = {\n          width: e,\n          height: t,\n          depth: r,\n          widthSegments: i,\n          heightSegments: n,\n          depthSegments: o\n        };\n        var c = this;\n        e = e || 1, t = t || 1, r = r || 1, i = Math.floor(i) || 1, n = Math.floor(n) || 1, o = Math.floor(o) || 1;\n        var l = [],\n            u = [],\n            h = [],\n            d = [],\n            p = 0,\n            f = 0;\n        a(\"z\", \"y\", \"x\", -1, -1, r, t, e, o, n, 0), a(\"z\", \"y\", \"x\", 1, -1, r, t, -e, o, n, 1), a(\"x\", \"z\", \"y\", 1, 1, e, r, t, i, o, 2), a(\"x\", \"z\", \"y\", 1, -1, e, r, -t, i, o, 3), a(\"x\", \"y\", \"z\", 1, -1, e, t, r, i, n, 4), a(\"x\", \"y\", \"z\", -1, -1, e, t, -r, i, n, 5), this.setIndex(l), this.addAttribute(\"position\", new O(u, 3)), this.addAttribute(\"normal\", new O(h, 3)), this.addAttribute(\"uv\", new O(d, 2));\n      }\n\n      function j(e, t, r, i) {\n        T.call(this), this.type = \"PlaneGeometry\", this.parameters = {\n          width: e,\n          height: t,\n          widthSegments: r,\n          heightSegments: i\n        }, this.fromBufferGeometry(new V(e, t, r, i)), this.mergeVertices();\n      }\n\n      function V(e, t, r, i) {\n        B.call(this), this.type = \"PlaneBufferGeometry\", this.parameters = {\n          width: e,\n          height: t,\n          widthSegments: r,\n          heightSegments: i\n        }, e = e || 1, t = t || 1;\n        var n,\n            o,\n            a = e / 2,\n            s = t / 2,\n            c = Math.floor(r) || 1,\n            l = Math.floor(i) || 1,\n            u = c + 1,\n            h = l + 1,\n            d = e / c,\n            p = t / l,\n            f = [],\n            m = [],\n            v = [],\n            g = [];\n\n        for (o = 0; o < h; o++) {\n          var y = o * p - s;\n\n          for (n = 0; n < u; n++) {\n            var x = n * d - a;\n            m.push(x, -y, 0), v.push(0, 0, 1), g.push(n / c), g.push(1 - o / l);\n          }\n        }\n\n        for (o = 0; o < l; o++) {\n          for (n = 0; n < c; n++) {\n            var _ = n + u * o,\n                b = n + u * (o + 1),\n                w = n + 1 + u * (o + 1),\n                M = n + 1 + u * o;\n\n            f.push(_, b, M), f.push(b, w, M);\n          }\n        }\n\n        this.setIndex(f), this.addAttribute(\"position\", new O(m, 3)), this.addAttribute(\"normal\", new O(v, 3)), this.addAttribute(\"uv\", new O(g, 2));\n      }\n\n      function k() {\n        Object.defineProperty(this, \"id\", {\n          value: Ys++\n        }), this.uuid = zs.generateUUID(), this.name = \"\", this.type = \"Material\", this.fog = !0, this.lights = !0, this.blending = Fo, this.side = Ro, this.flatShading = !1, this.vertexColors = Uo, this.opacity = 1, this.transparent = !1, this.blendSrc = Ko, this.blendDst = Qo, this.blendEquation = jo, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = sa, this.depthTest = !0, this.depthWrite = !0, this.clippingPlanes = null, this.clipIntersection = !1, this.clipShadows = !1, this.shadowSide = null, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = !1, this.alphaTest = 0, this.premultipliedAlpha = !1, this.overdraw = 0, this.visible = !0, this.userData = {}, this.needsUpdate = !0;\n      }\n\n      function W(e) {\n        k.call(this), this.type = \"MeshBasicMaterial\", this.color = new y(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = da, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = \"round\", this.wireframeLinejoin = \"round\", this.skinning = !1, this.morphTargets = !1, this.lights = !1, this.setValues(e);\n      }\n\n      function X(e) {\n        k.call(this), this.type = \"ShaderMaterial\", this.defines = {}, this.uniforms = {}, this.vertexShader = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\", this.fragmentShader = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\", this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.extensions = {\n          derivatives: !1,\n          fragDepth: !1,\n          drawBuffers: !1,\n          shaderTextureLOD: !1\n        }, this.defaultAttributeValues = {\n          color: [1, 1, 1],\n          uv: [0, 0],\n          uv2: [0, 0]\n        }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = !1, void 0 !== e && (void 0 !== e.attributes && console.error(\"THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.\"), this.setValues(e));\n      }\n\n      function q(e, t) {\n        this.origin = void 0 !== e ? e : new s(), this.direction = void 0 !== t ? t : new s();\n      }\n\n      function Y(e, t) {\n        this.start = void 0 !== e ? e : new s(), this.end = void 0 !== t ? t : new s();\n      }\n\n      function Z(e, t, r) {\n        this.a = void 0 !== e ? e : new s(), this.b = void 0 !== t ? t : new s(), this.c = void 0 !== r ? r : new s();\n      }\n\n      function J(e, t) {\n        w.call(this), this.type = \"Mesh\", this.geometry = void 0 !== e ? e : new B(), this.material = void 0 !== t ? t : new W({\n          color: 16777215 * Math.random()\n        }), this.drawMode = Ts, this.updateMorphTargets();\n      }\n\n      function K(e, t, r, i) {\n        function n(t, i, n, h) {\n          var d = i.background;\n          null === d ? o(l, u) : d && d.isColor && (o(d, 1), h = !0), (e.autoClear || h) && e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil), d && d.isCubeTexture ? (void 0 === c && (c = new J(new H(1, 1, 1), new X({\n            uniforms: ks.cube.uniforms,\n            vertexShader: ks.cube.vertexShader,\n            fragmentShader: ks.cube.fragmentShader,\n            side: Po,\n            depthTest: !0,\n            depthWrite: !1,\n            fog: !1\n          })), c.geometry.removeAttribute(\"normal\"), c.geometry.removeAttribute(\"uv\"), c.onBeforeRender = function (e, t, r) {\n            this.matrixWorld.copyPosition(r.matrixWorld);\n          }, r.update(c.geometry)), c.material.uniforms.tCube.value = d, t.push(c, c.geometry, c.material, 0, null)) : d && d.isTexture && (void 0 === a && (a = new E(-1, 1, 1, -1, 0, 1), s = new J(new V(2, 2), new W({\n            depthTest: !1,\n            depthWrite: !1,\n            fog: !1\n          })), r.update(s.geometry)), s.material.map = d, e.renderBufferDirect(a, null, s.geometry, s.material, s, null));\n        }\n\n        function o(e, r) {\n          t.buffers.color.setClear(e.r, e.g, e.b, r, i);\n        }\n\n        var a,\n            s,\n            c,\n            l = new y(0),\n            u = 0;\n        return {\n          getClearColor: function getClearColor() {\n            return l;\n          },\n          setClearColor: function setClearColor(e, t) {\n            l.set(e), u = void 0 !== t ? t : 1, o(l, u);\n          },\n          getClearAlpha: function getClearAlpha() {\n            return u;\n          },\n          setClearAlpha: function setClearAlpha(e) {\n            u = e, o(l, u);\n          },\n          render: n\n        };\n      }\n\n      function Q(e, t, r) {\n        function i(e) {\n          a = e;\n        }\n\n        function n(t, i) {\n          e.drawArrays(a, t, i), r.update(i, a);\n        }\n\n        function o(e, i, n) {\n          var o = t.get(\"ANGLE_instanced_arrays\");\n          if (null === o) return void console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");\n          var s = e.attributes.position;\n          s.isInterleavedBufferAttribute ? (n = s.data.count, o.drawArraysInstancedANGLE(a, 0, n, e.maxInstancedCount)) : o.drawArraysInstancedANGLE(a, i, n, e.maxInstancedCount), r.update(n, a, e.maxInstancedCount);\n        }\n\n        var a;\n        this.setMode = i, this.render = n, this.renderInstances = o;\n      }\n\n      function $(e, t, r) {\n        function i() {\n          if (void 0 !== o) return o;\n          var r = t.get(\"EXT_texture_filter_anisotropic\");\n          return o = null !== r ? e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0;\n        }\n\n        function n(t) {\n          if (\"highp\" === t) {\n            if (e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.HIGH_FLOAT).precision > 0 && e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_FLOAT).precision > 0) return \"highp\";\n            t = \"mediump\";\n          }\n\n          return \"mediump\" === t && e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.MEDIUM_FLOAT).precision > 0 && e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_FLOAT).precision > 0 ? \"mediump\" : \"lowp\";\n        }\n\n        var o,\n            a = void 0 !== r.precision ? r.precision : \"highp\",\n            s = n(a);\n        s !== a && (console.warn(\"THREE.WebGLRenderer:\", a, \"not supported, using\", s, \"instead.\"), a = s);\n        var c = !0 === r.logarithmicDepthBuffer,\n            l = e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),\n            u = e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),\n            h = e.getParameter(e.MAX_TEXTURE_SIZE),\n            d = e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),\n            p = e.getParameter(e.MAX_VERTEX_ATTRIBS),\n            f = e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),\n            m = e.getParameter(e.MAX_VARYING_VECTORS),\n            v = e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),\n            g = u > 0,\n            y = !!t.get(\"OES_texture_float\");\n        return {\n          getMaxAnisotropy: i,\n          getMaxPrecision: n,\n          precision: a,\n          logarithmicDepthBuffer: c,\n          maxTextures: l,\n          maxVertexTextures: u,\n          maxTextureSize: h,\n          maxCubemapSize: d,\n          maxAttributes: p,\n          maxVertexUniforms: f,\n          maxVaryings: m,\n          maxFragmentUniforms: v,\n          vertexTextures: g,\n          floatFragmentTextures: y,\n          floatVertexTextures: g && y\n        };\n      }\n\n      function ee() {\n        function e() {\n          u.value !== i && (u.value = i, u.needsUpdate = n > 0), r.numPlanes = n, r.numIntersection = 0;\n        }\n\n        function t(e, t, i, n) {\n          var o = null !== e ? e.length : 0,\n              a = null;\n\n          if (0 !== o) {\n            if (a = u.value, !0 !== n || null === a) {\n              var c = i + 4 * o,\n                  h = t.matrixWorldInverse;\n              l.getNormalMatrix(h), (null === a || a.length < c) && (a = new Float32Array(c));\n\n              for (var d = 0, p = i; d !== o; ++d, p += 4) {\n                s.copy(e[d]).applyMatrix4(h, l), s.normal.toArray(a, p), a[p + 3] = s.constant;\n              }\n            }\n\n            u.value = a, u.needsUpdate = !0;\n          }\n\n          return r.numPlanes = o, a;\n        }\n\n        var r = this,\n            i = null,\n            n = 0,\n            o = !1,\n            a = !1,\n            s = new v(),\n            l = new c(),\n            u = {\n          value: null,\n          needsUpdate: !1\n        };\n        this.uniform = u, this.numPlanes = 0, this.numIntersection = 0, this.init = function (e, r, a) {\n          var s = 0 !== e.length || r || 0 !== n || o;\n          return o = r, i = t(e, a, 0), n = e.length, s;\n        }, this.beginShadows = function () {\n          a = !0, t(null);\n        }, this.endShadows = function () {\n          a = !1, e();\n        }, this.setState = function (r, s, c, l, h, d) {\n          if (!o || null === r || 0 === r.length || a && !c) a ? t(null) : e();else {\n            var p = a ? 0 : n,\n                f = 4 * p,\n                m = h.clippingState || null;\n            u.value = m, m = t(r, l, f, d);\n\n            for (var v = 0; v !== f; ++v) {\n              m[v] = i[v];\n            }\n\n            h.clippingState = m, this.numIntersection = s ? this.numPlanes : 0, this.numPlanes += p;\n          }\n        };\n      }\n\n      function te(e) {\n        var t = {};\n        return {\n          get: function get(r) {\n            if (void 0 !== t[r]) return t[r];\n            var i;\n\n            switch (r) {\n              case \"WEBGL_depth_texture\":\n                i = e.getExtension(\"WEBGL_depth_texture\") || e.getExtension(\"MOZ_WEBGL_depth_texture\") || e.getExtension(\"WEBKIT_WEBGL_depth_texture\");\n                break;\n\n              case \"EXT_texture_filter_anisotropic\":\n                i = e.getExtension(\"EXT_texture_filter_anisotropic\") || e.getExtension(\"MOZ_EXT_texture_filter_anisotropic\") || e.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");\n                break;\n\n              case \"WEBGL_compressed_texture_s3tc\":\n                i = e.getExtension(\"WEBGL_compressed_texture_s3tc\") || e.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\") || e.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");\n                break;\n\n              case \"WEBGL_compressed_texture_pvrtc\":\n                i = e.getExtension(\"WEBGL_compressed_texture_pvrtc\") || e.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\");\n                break;\n\n              default:\n                i = e.getExtension(r);\n            }\n\n            return null === i && console.warn(\"THREE.WebGLRenderer: \" + r + \" extension not supported.\"), t[r] = i, i;\n          }\n        };\n      }\n\n      function re(e, t, r) {\n        function i(e) {\n          var n = e.target,\n              o = s[n.id];\n          null !== o.index && t.remove(o.index);\n\n          for (var a in o.attributes) {\n            t.remove(o.attributes[a]);\n          }\n\n          n.removeEventListener(\"dispose\", i), delete s[n.id];\n          var l = c[n.id];\n          l && (t.remove(l), delete c[n.id]), l = c[o.id], l && (t.remove(l), delete c[o.id]), r.memory.geometries--;\n        }\n\n        function n(e, t) {\n          var n = s[t.id];\n          return n || (t.addEventListener(\"dispose\", i), t.isBufferGeometry ? n = t : t.isGeometry && (void 0 === t._bufferGeometry && (t._bufferGeometry = new B().setFromObject(e)), n = t._bufferGeometry), s[t.id] = n, r.memory.geometries++, n);\n        }\n\n        function o(r) {\n          var i = r.index,\n              n = r.attributes;\n          null !== i && t.update(i, e.ELEMENT_ARRAY_BUFFER);\n\n          for (var o in n) {\n            t.update(n[o], e.ARRAY_BUFFER);\n          }\n\n          var a = r.morphAttributes;\n\n          for (var o in a) {\n            for (var s = a[o], c = 0, l = s.length; c < l; c++) {\n              t.update(s[c], e.ARRAY_BUFFER);\n            }\n          }\n        }\n\n        function a(r) {\n          var i = c[r.id];\n          if (i) return i;\n          var n = [],\n              o = r.index,\n              a = r.attributes;\n          if (null !== o) for (var s = o.array, l = 0, u = s.length; l < u; l += 3) {\n            var h = s[l + 0],\n                d = s[l + 1],\n                p = s[l + 2];\n            n.push(h, d, d, p, p, h);\n          } else for (var s = a.position.array, l = 0, u = s.length / 3 - 1; l < u; l += 3) {\n            var h = l + 0,\n                d = l + 1,\n                p = l + 2;\n            n.push(h, d, d, p, p, h);\n          }\n          return i = new (z(n) > 65535 ? I : D)(n, 1), t.update(i, e.ELEMENT_ARRAY_BUFFER), c[r.id] = i, i;\n        }\n\n        var s = {},\n            c = {};\n        return {\n          get: n,\n          update: o,\n          getWireframeAttribute: a\n        };\n      }\n\n      function ie(e, t, r) {\n        function i(e) {\n          s = e;\n        }\n\n        function n(e) {\n          c = e.type, l = e.bytesPerElement;\n        }\n\n        function o(t, i) {\n          e.drawElements(s, i, c, t * l), r.update(i, s);\n        }\n\n        function a(e, i, n) {\n          var o = t.get(\"ANGLE_instanced_arrays\");\n          if (null === o) return void console.error(\"THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");\n          o.drawElementsInstancedANGLE(s, n, c, i * l, e.maxInstancedCount), r.update(n, s, e.maxInstancedCount);\n        }\n\n        var s, c, l;\n        this.setMode = i, this.setIndex = n, this.render = o, this.renderInstances = a;\n      }\n\n      function ne(e) {\n        function t(t, r, i) {\n          switch (i = i || 1, n.calls++, r) {\n            case e.TRIANGLES:\n              n.triangles += i * (t / 3);\n              break;\n\n            case e.TRIANGLE_STRIP:\n            case e.TRIANGLE_FAN:\n              n.triangles += i * (t - 2);\n              break;\n\n            case e.LINES:\n              n.lines += i * (t / 2);\n              break;\n\n            case e.LINE_STRIP:\n              n.lines += i * (t - 1);\n              break;\n\n            case e.LINE_LOOP:\n              n.lines += i * t;\n              break;\n\n            case e.POINTS:\n              n.points += i * t;\n              break;\n\n            default:\n              console.error(\"THREE.WebGLInfo: Unknown draw mode:\", r);\n          }\n        }\n\n        function r() {\n          n.frame++, n.calls = 0, n.triangles = 0, n.points = 0, n.lines = 0;\n        }\n\n        var i = {\n          geometries: 0,\n          textures: 0\n        },\n            n = {\n          frame: 0,\n          calls: 0,\n          triangles: 0,\n          points: 0,\n          lines: 0\n        };\n        return {\n          memory: i,\n          render: n,\n          programs: null,\n          autoReset: !0,\n          reset: r,\n          update: t\n        };\n      }\n\n      function oe(e, t) {\n        return Math.abs(t[1]) - Math.abs(e[1]);\n      }\n\n      function ae(e) {\n        function t(t, n, o, a) {\n          var s = t.morphTargetInfluences,\n              c = s.length,\n              l = r[n.id];\n\n          if (void 0 === l) {\n            l = [];\n\n            for (var u = 0; u < c; u++) {\n              l[u] = [u, 0];\n            }\n\n            r[n.id] = l;\n          }\n\n          for (var h = o.morphTargets && n.morphAttributes.position, d = o.morphNormals && n.morphAttributes.normal, u = 0; u < c; u++) {\n            var p = l[u];\n            0 !== p[1] && (h && n.removeAttribute(\"morphTarget\" + u), d && n.removeAttribute(\"morphNormal\" + u));\n          }\n\n          for (var u = 0; u < c; u++) {\n            var p = l[u];\n            p[0] = u, p[1] = s[u];\n          }\n\n          l.sort(oe);\n\n          for (var u = 0; u < 8; u++) {\n            var p = l[u];\n\n            if (p) {\n              var f = p[0],\n                  m = p[1];\n\n              if (m) {\n                h && n.addAttribute(\"morphTarget\" + u, h[f]), d && n.addAttribute(\"morphNormal\" + u, d[f]), i[u] = m;\n                continue;\n              }\n            }\n\n            i[u] = 0;\n          }\n\n          a.getUniforms().setValue(e, \"morphTargetInfluences\", i);\n        }\n\n        var r = {},\n            i = new Float32Array(8);\n        return {\n          update: t\n        };\n      }\n\n      function se(e, t) {\n        function r(r) {\n          var i = t.render.frame,\n              o = r.geometry,\n              a = e.get(r, o);\n          return n[a.id] !== i && (o.isGeometry && a.updateFromObject(r), e.update(a), n[a.id] = i), a;\n        }\n\n        function i() {\n          n = {};\n        }\n\n        var n = {};\n        return {\n          update: r,\n          dispose: i\n        };\n      }\n\n      function ce(e, t, r, i, n, o, a, s, c, u) {\n        e = void 0 !== e ? e : [], t = void 0 !== t ? t : _a, l.call(this, e, t, r, i, n, o, a, s, c, u), this.flipY = !1;\n      }\n\n      function le() {\n        this.seq = [], this.map = {};\n      }\n\n      function ue(e, t, r) {\n        var i = e[0];\n        if (i <= 0 || i > 0) return e;\n        var n = t * r,\n            o = Ks[n];\n\n        if (void 0 === o && (o = new Float32Array(n), Ks[n] = o), 0 !== t) {\n          i.toArray(o, 0);\n\n          for (var a = 1, s = 0; a !== t; ++a) {\n            s += r, e[a].toArray(o, s);\n          }\n        }\n\n        return o;\n      }\n\n      function he(e, t) {\n        var r = Qs[t];\n        void 0 === r && (r = new Int32Array(t), Qs[t] = r);\n\n        for (var i = 0; i !== t; ++i) {\n          r[i] = e.allocTextureUnit();\n        }\n\n        return r;\n      }\n\n      function de(e, t) {\n        e.uniform1f(this.addr, t);\n      }\n\n      function pe(e, t) {\n        e.uniform1i(this.addr, t);\n      }\n\n      function fe(e, t) {\n        void 0 === t.x ? e.uniform2fv(this.addr, t) : e.uniform2f(this.addr, t.x, t.y);\n      }\n\n      function me(e, t) {\n        void 0 !== t.x ? e.uniform3f(this.addr, t.x, t.y, t.z) : void 0 !== t.r ? e.uniform3f(this.addr, t.r, t.g, t.b) : e.uniform3fv(this.addr, t);\n      }\n\n      function ve(e, t) {\n        void 0 === t.x ? e.uniform4fv(this.addr, t) : e.uniform4f(this.addr, t.x, t.y, t.z, t.w);\n      }\n\n      function ge(e, t) {\n        e.uniformMatrix2fv(this.addr, !1, t.elements || t);\n      }\n\n      function ye(e, t) {\n        void 0 === t.elements ? e.uniformMatrix3fv(this.addr, !1, t) : (ec.set(t.elements), e.uniformMatrix3fv(this.addr, !1, ec));\n      }\n\n      function xe(e, t) {\n        void 0 === t.elements ? e.uniformMatrix4fv(this.addr, !1, t) : ($s.set(t.elements), e.uniformMatrix4fv(this.addr, !1, $s));\n      }\n\n      function _e(e, t, r) {\n        var i = r.allocTextureUnit();\n        e.uniform1i(this.addr, i), r.setTexture2D(t || Zs, i);\n      }\n\n      function be(e, t, r) {\n        var i = r.allocTextureUnit();\n        e.uniform1i(this.addr, i), r.setTextureCube(t || Js, i);\n      }\n\n      function we(e, t) {\n        e.uniform2iv(this.addr, t);\n      }\n\n      function Me(e, t) {\n        e.uniform3iv(this.addr, t);\n      }\n\n      function Ee(e, t) {\n        e.uniform4iv(this.addr, t);\n      }\n\n      function Se(e) {\n        switch (e) {\n          case 5126:\n            return de;\n\n          case 35664:\n            return fe;\n\n          case 35665:\n            return me;\n\n          case 35666:\n            return ve;\n\n          case 35674:\n            return ge;\n\n          case 35675:\n            return ye;\n\n          case 35676:\n            return xe;\n\n          case 35678:\n          case 36198:\n            return _e;\n\n          case 35680:\n            return be;\n\n          case 5124:\n          case 35670:\n            return pe;\n\n          case 35667:\n          case 35671:\n            return we;\n\n          case 35668:\n          case 35672:\n            return Me;\n\n          case 35669:\n          case 35673:\n            return Ee;\n        }\n      }\n\n      function Te(e, t) {\n        e.uniform1fv(this.addr, t);\n      }\n\n      function Ae(e, t) {\n        e.uniform1iv(this.addr, t);\n      }\n\n      function Le(e, t) {\n        e.uniform2fv(this.addr, ue(t, this.size, 2));\n      }\n\n      function Ce(e, t) {\n        e.uniform3fv(this.addr, ue(t, this.size, 3));\n      }\n\n      function Re(e, t) {\n        e.uniform4fv(this.addr, ue(t, this.size, 4));\n      }\n\n      function Pe(e, t) {\n        e.uniformMatrix2fv(this.addr, !1, ue(t, this.size, 4));\n      }\n\n      function De(e, t) {\n        e.uniformMatrix3fv(this.addr, !1, ue(t, this.size, 9));\n      }\n\n      function Ue(e, t) {\n        e.uniformMatrix4fv(this.addr, !1, ue(t, this.size, 16));\n      }\n\n      function Ie(e, t, r) {\n        var i = t.length,\n            n = he(r, i);\n        e.uniform1iv(this.addr, n);\n\n        for (var o = 0; o !== i; ++o) {\n          r.setTexture2D(t[o] || Zs, n[o]);\n        }\n      }\n\n      function Oe(e, t, r) {\n        var i = t.length,\n            n = he(r, i);\n        e.uniform1iv(this.addr, n);\n\n        for (var o = 0; o !== i; ++o) {\n          r.setTextureCube(t[o] || Js, n[o]);\n        }\n      }\n\n      function Ne(e) {\n        switch (e) {\n          case 5126:\n            return Te;\n\n          case 35664:\n            return Le;\n\n          case 35665:\n            return Ce;\n\n          case 35666:\n            return Re;\n\n          case 35674:\n            return Pe;\n\n          case 35675:\n            return De;\n\n          case 35676:\n            return Ue;\n\n          case 35678:\n            return Ie;\n\n          case 35680:\n            return Oe;\n\n          case 5124:\n          case 35670:\n            return Ae;\n\n          case 35667:\n          case 35671:\n            return we;\n\n          case 35668:\n          case 35672:\n            return Me;\n\n          case 35669:\n          case 35673:\n            return Ee;\n        }\n      }\n\n      function Fe(e, t, r) {\n        this.id = e, this.addr = r, this.setValue = Se(t.type);\n      }\n\n      function ze(e, t, r) {\n        this.id = e, this.addr = r, this.size = t.size, this.setValue = Ne(t.type);\n      }\n\n      function Be(e) {\n        this.id = e, le.call(this);\n      }\n\n      function Ge(e, t) {\n        e.seq.push(t), e.map[t.id] = t;\n      }\n\n      function He(e, t, r) {\n        var i = e.name,\n            n = i.length;\n\n        for (tc.lastIndex = 0;;) {\n          var o = tc.exec(i),\n              a = tc.lastIndex,\n              s = o[1],\n              c = \"]\" === o[2],\n              l = o[3];\n\n          if (c && (s |= 0), void 0 === l || \"[\" === l && a + 2 === n) {\n            Ge(r, void 0 === l ? new Fe(s, e, t) : new ze(s, e, t));\n            break;\n          }\n\n          var u = r.map,\n              h = u[s];\n          void 0 === h && (h = new Be(s), Ge(r, h)), r = h;\n        }\n      }\n\n      function je(e, t, r) {\n        le.call(this), this.renderer = r;\n\n        for (var i = e.getProgramParameter(t, e.ACTIVE_UNIFORMS), n = 0; n < i; ++n) {\n          var o = e.getActiveUniform(t, n);\n          He(o, e.getUniformLocation(t, o.name), this);\n        }\n      }\n\n      function Ve(e) {\n        for (var t = e.split(\"\\n\"), r = 0; r < t.length; r++) {\n          t[r] = r + 1 + \": \" + t[r];\n        }\n\n        return t.join(\"\\n\");\n      }\n\n      function ke(e, t, r) {\n        var i = e.createShader(t);\n        return e.shaderSource(i, r), e.compileShader(i), !1 === e.getShaderParameter(i, e.COMPILE_STATUS) && console.error(\"THREE.WebGLShader: Shader couldn't compile.\"), \"\" !== e.getShaderInfoLog(i) && console.warn(\"THREE.WebGLShader: gl.getShaderInfoLog()\", t === e.VERTEX_SHADER ? \"vertex\" : \"fragment\", e.getShaderInfoLog(i), Ve(r)), i;\n      }\n\n      function We(e) {\n        switch (e) {\n          case Cs:\n            return [\"Linear\", \"( value )\"];\n\n          case Rs:\n            return [\"sRGB\", \"( value )\"];\n\n          case Ds:\n            return [\"RGBE\", \"( value )\"];\n\n          case Us:\n            return [\"RGBM\", \"( value, 7.0 )\"];\n\n          case Is:\n            return [\"RGBM\", \"( value, 16.0 )\"];\n\n          case Os:\n            return [\"RGBD\", \"( value, 256.0 )\"];\n\n          case Ps:\n            return [\"Gamma\", \"( value, float( GAMMA_FACTOR ) )\"];\n\n          default:\n            throw new Error(\"unsupported encoding: \" + e);\n        }\n      }\n\n      function Xe(e, t) {\n        var r = We(t);\n        return \"vec4 \" + e + \"( vec4 value ) { return \" + r[0] + \"ToLinear\" + r[1] + \"; }\";\n      }\n\n      function qe(e, t) {\n        var r = We(t);\n        return \"vec4 \" + e + \"( vec4 value ) { return LinearTo\" + r[0] + r[1] + \"; }\";\n      }\n\n      function Ye(e, t) {\n        var r;\n\n        switch (t) {\n          case va:\n            r = \"Linear\";\n            break;\n\n          case ga:\n            r = \"Reinhard\";\n            break;\n\n          case ya:\n            r = \"Uncharted2\";\n            break;\n\n          case xa:\n            r = \"OptimizedCineon\";\n            break;\n\n          default:\n            throw new Error(\"unsupported toneMapping: \" + t);\n        }\n\n        return \"vec3 \" + e + \"( vec3 color ) { return \" + r + \"ToneMapping( color ); }\";\n      }\n\n      function Ze(e, t, r) {\n        return e = e || {}, [e.derivatives || t.envMapCubeUV || t.bumpMap || t.normalMap || t.flatShading ? \"#extension GL_OES_standard_derivatives : enable\" : \"\", (e.fragDepth || t.logarithmicDepthBuffer) && r.get(\"EXT_frag_depth\") ? \"#extension GL_EXT_frag_depth : enable\" : \"\", e.drawBuffers && r.get(\"WEBGL_draw_buffers\") ? \"#extension GL_EXT_draw_buffers : require\" : \"\", (e.shaderTextureLOD || t.envMap) && r.get(\"EXT_shader_texture_lod\") ? \"#extension GL_EXT_shader_texture_lod : enable\" : \"\"].filter(Qe).join(\"\\n\");\n      }\n\n      function Je(e) {\n        var t = [];\n\n        for (var r in e) {\n          var i = e[r];\n          !1 !== i && t.push(\"#define \" + r + \" \" + i);\n        }\n\n        return t.join(\"\\n\");\n      }\n\n      function Ke(e, t) {\n        for (var r = {}, i = e.getProgramParameter(t, e.ACTIVE_ATTRIBUTES), n = 0; n < i; n++) {\n          var o = e.getActiveAttrib(t, n),\n              a = o.name;\n          r[a] = e.getAttribLocation(t, a);\n        }\n\n        return r;\n      }\n\n      function Qe(e) {\n        return \"\" !== e;\n      }\n\n      function $e(e, t) {\n        return e.replace(/NUM_DIR_LIGHTS/g, t.numDirLights).replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, t.numPointLights).replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights);\n      }\n\n      function et(e, t) {\n        return e.replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, t.numClippingPlanes - t.numClipIntersection);\n      }\n\n      function tt(e) {\n        function t(e, t) {\n          var r = Gs[t];\n          if (void 0 === r) throw new Error(\"Can not resolve #include <\" + t + \">\");\n          return tt(r);\n        }\n\n        var r = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n        return e.replace(r, t);\n      }\n\n      function rt(e) {\n        function t(e, t, r, i) {\n          for (var n = \"\", o = parseInt(t); o < parseInt(r); o++) {\n            n += i.replace(/\\[ i \\]/g, \"[ \" + o + \" ]\");\n          }\n\n          return n;\n        }\n\n        var r = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n        return e.replace(r, t);\n      }\n\n      function it(e, t, r, i, n, o) {\n        var a = e.context,\n            s = i.defines,\n            c = n.vertexShader,\n            l = n.fragmentShader,\n            u = \"SHADOWMAP_TYPE_BASIC\";\n        o.shadowMapType === Lo ? u = \"SHADOWMAP_TYPE_PCF\" : o.shadowMapType === Co && (u = \"SHADOWMAP_TYPE_PCF_SOFT\");\n        var h = \"ENVMAP_TYPE_CUBE\",\n            d = \"ENVMAP_MODE_REFLECTION\",\n            p = \"ENVMAP_BLENDING_MULTIPLY\";\n\n        if (o.envMap) {\n          switch (i.envMap.mapping) {\n            case _a:\n            case ba:\n              h = \"ENVMAP_TYPE_CUBE\";\n              break;\n\n            case Sa:\n            case Ta:\n              h = \"ENVMAP_TYPE_CUBE_UV\";\n              break;\n\n            case wa:\n            case Ma:\n              h = \"ENVMAP_TYPE_EQUIREC\";\n              break;\n\n            case Ea:\n              h = \"ENVMAP_TYPE_SPHERE\";\n          }\n\n          switch (i.envMap.mapping) {\n            case ba:\n            case Ma:\n              d = \"ENVMAP_MODE_REFRACTION\";\n          }\n\n          switch (i.combine) {\n            case da:\n              p = \"ENVMAP_BLENDING_MULTIPLY\";\n              break;\n\n            case pa:\n              p = \"ENVMAP_BLENDING_MIX\";\n              break;\n\n            case fa:\n              p = \"ENVMAP_BLENDING_ADD\";\n          }\n        }\n\n        var f,\n            m,\n            v = e.gammaFactor > 0 ? e.gammaFactor : 1,\n            g = Ze(i.extensions, o, t),\n            y = Je(s),\n            x = a.createProgram();\n        i.isRawShaderMaterial ? (f = [y].filter(Qe).join(\"\\n\"), f.length > 0 && (f += \"\\n\"), m = [g, y].filter(Qe).join(\"\\n\"), m.length > 0 && (m += \"\\n\")) : (f = [\"precision \" + o.precision + \" float;\", \"precision \" + o.precision + \" int;\", \"#define SHADER_NAME \" + n.name, y, o.supportsVertexTextures ? \"#define VERTEX_TEXTURES\" : \"\", \"#define GAMMA_FACTOR \" + v, \"#define MAX_BONES \" + o.maxBones, o.useFog && o.fog ? \"#define USE_FOG\" : \"\", o.useFog && o.fogExp ? \"#define FOG_EXP2\" : \"\", o.map ? \"#define USE_MAP\" : \"\", o.envMap ? \"#define USE_ENVMAP\" : \"\", o.envMap ? \"#define \" + d : \"\", o.lightMap ? \"#define USE_LIGHTMAP\" : \"\", o.aoMap ? \"#define USE_AOMAP\" : \"\", o.emissiveMap ? \"#define USE_EMISSIVEMAP\" : \"\", o.bumpMap ? \"#define USE_BUMPMAP\" : \"\", o.normalMap ? \"#define USE_NORMALMAP\" : \"\", o.displacementMap && o.supportsVertexTextures ? \"#define USE_DISPLACEMENTMAP\" : \"\", o.specularMap ? \"#define USE_SPECULARMAP\" : \"\", o.roughnessMap ? \"#define USE_ROUGHNESSMAP\" : \"\", o.metalnessMap ? \"#define USE_METALNESSMAP\" : \"\", o.alphaMap ? \"#define USE_ALPHAMAP\" : \"\", o.vertexColors ? \"#define USE_COLOR\" : \"\", o.flatShading ? \"#define FLAT_SHADED\" : \"\", o.skinning ? \"#define USE_SKINNING\" : \"\", o.useVertexTexture ? \"#define BONE_TEXTURE\" : \"\", o.morphTargets ? \"#define USE_MORPHTARGETS\" : \"\", o.morphNormals && !1 === o.flatShading ? \"#define USE_MORPHNORMALS\" : \"\", o.doubleSided ? \"#define DOUBLE_SIDED\" : \"\", o.flipSided ? \"#define FLIP_SIDED\" : \"\", o.shadowMapEnabled ? \"#define USE_SHADOWMAP\" : \"\", o.shadowMapEnabled ? \"#define \" + u : \"\", o.sizeAttenuation ? \"#define USE_SIZEATTENUATION\" : \"\", o.logarithmicDepthBuffer ? \"#define USE_LOGDEPTHBUF\" : \"\", o.logarithmicDepthBuffer && t.get(\"EXT_frag_depth\") ? \"#define USE_LOGDEPTHBUF_EXT\" : \"\", \"uniform mat4 modelMatrix;\", \"uniform mat4 modelViewMatrix;\", \"uniform mat4 projectionMatrix;\", \"uniform mat4 viewMatrix;\", \"uniform mat3 normalMatrix;\", \"uniform vec3 cameraPosition;\", \"attribute vec3 position;\", \"attribute vec3 normal;\", \"attribute vec2 uv;\", \"#ifdef USE_COLOR\", \"\\tattribute vec3 color;\", \"#endif\", \"#ifdef USE_MORPHTARGETS\", \"\\tattribute vec3 morphTarget0;\", \"\\tattribute vec3 morphTarget1;\", \"\\tattribute vec3 morphTarget2;\", \"\\tattribute vec3 morphTarget3;\", \"\\t#ifdef USE_MORPHNORMALS\", \"\\t\\tattribute vec3 morphNormal0;\", \"\\t\\tattribute vec3 morphNormal1;\", \"\\t\\tattribute vec3 morphNormal2;\", \"\\t\\tattribute vec3 morphNormal3;\", \"\\t#else\", \"\\t\\tattribute vec3 morphTarget4;\", \"\\t\\tattribute vec3 morphTarget5;\", \"\\t\\tattribute vec3 morphTarget6;\", \"\\t\\tattribute vec3 morphTarget7;\", \"\\t#endif\", \"#endif\", \"#ifdef USE_SKINNING\", \"\\tattribute vec4 skinIndex;\", \"\\tattribute vec4 skinWeight;\", \"#endif\", \"\\n\"].filter(Qe).join(\"\\n\"), m = [g, \"precision \" + o.precision + \" float;\", \"precision \" + o.precision + \" int;\", \"#define SHADER_NAME \" + n.name, y, o.alphaTest ? \"#define ALPHATEST \" + o.alphaTest : \"\", \"#define GAMMA_FACTOR \" + v, o.useFog && o.fog ? \"#define USE_FOG\" : \"\", o.useFog && o.fogExp ? \"#define FOG_EXP2\" : \"\", o.map ? \"#define USE_MAP\" : \"\", o.envMap ? \"#define USE_ENVMAP\" : \"\", o.envMap ? \"#define \" + h : \"\", o.envMap ? \"#define \" + d : \"\", o.envMap ? \"#define \" + p : \"\", o.lightMap ? \"#define USE_LIGHTMAP\" : \"\", o.aoMap ? \"#define USE_AOMAP\" : \"\", o.emissiveMap ? \"#define USE_EMISSIVEMAP\" : \"\", o.bumpMap ? \"#define USE_BUMPMAP\" : \"\", o.normalMap ? \"#define USE_NORMALMAP\" : \"\", o.specularMap ? \"#define USE_SPECULARMAP\" : \"\", o.roughnessMap ? \"#define USE_ROUGHNESSMAP\" : \"\", o.metalnessMap ? \"#define USE_METALNESSMAP\" : \"\", o.alphaMap ? \"#define USE_ALPHAMAP\" : \"\", o.vertexColors ? \"#define USE_COLOR\" : \"\", o.gradientMap ? \"#define USE_GRADIENTMAP\" : \"\", o.flatShading ? \"#define FLAT_SHADED\" : \"\", o.doubleSided ? \"#define DOUBLE_SIDED\" : \"\", o.flipSided ? \"#define FLIP_SIDED\" : \"\", o.shadowMapEnabled ? \"#define USE_SHADOWMAP\" : \"\", o.shadowMapEnabled ? \"#define \" + u : \"\", o.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : \"\", o.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : \"\", o.logarithmicDepthBuffer ? \"#define USE_LOGDEPTHBUF\" : \"\", o.logarithmicDepthBuffer && t.get(\"EXT_frag_depth\") ? \"#define USE_LOGDEPTHBUF_EXT\" : \"\", o.envMap && t.get(\"EXT_shader_texture_lod\") ? \"#define TEXTURE_LOD_EXT\" : \"\", \"uniform mat4 viewMatrix;\", \"uniform vec3 cameraPosition;\", o.toneMapping !== ma ? \"#define TONE_MAPPING\" : \"\", o.toneMapping !== ma ? Gs.tonemapping_pars_fragment : \"\", o.toneMapping !== ma ? Ye(\"toneMapping\", o.toneMapping) : \"\", o.dithering ? \"#define DITHERING\" : \"\", o.outputEncoding || o.mapEncoding || o.envMapEncoding || o.emissiveMapEncoding ? Gs.encodings_pars_fragment : \"\", o.mapEncoding ? Xe(\"mapTexelToLinear\", o.mapEncoding) : \"\", o.envMapEncoding ? Xe(\"envMapTexelToLinear\", o.envMapEncoding) : \"\", o.emissiveMapEncoding ? Xe(\"emissiveMapTexelToLinear\", o.emissiveMapEncoding) : \"\", o.outputEncoding ? qe(\"linearToOutputTexel\", o.outputEncoding) : \"\", o.depthPacking ? \"#define DEPTH_PACKING \" + i.depthPacking : \"\", \"\\n\"].filter(Qe).join(\"\\n\")), c = tt(c), c = $e(c, o), c = et(c, o), l = tt(l), l = $e(l, o), l = et(l, o), c = rt(c), l = rt(l);\n\n        var _ = f + c,\n            b = m + l,\n            w = ke(a, a.VERTEX_SHADER, _),\n            M = ke(a, a.FRAGMENT_SHADER, b);\n\n        a.attachShader(x, w), a.attachShader(x, M), void 0 !== i.index0AttributeName ? a.bindAttribLocation(x, 0, i.index0AttributeName) : !0 === o.morphTargets && a.bindAttribLocation(x, 0, \"position\"), a.linkProgram(x);\n        var E = a.getProgramInfoLog(x).trim(),\n            S = a.getShaderInfoLog(w).trim(),\n            T = a.getShaderInfoLog(M).trim(),\n            A = !0,\n            L = !0;\n        !1 === a.getProgramParameter(x, a.LINK_STATUS) ? (A = !1, console.error(\"THREE.WebGLProgram: shader error: \", a.getError(), \"gl.VALIDATE_STATUS\", a.getProgramParameter(x, a.VALIDATE_STATUS), \"gl.getProgramInfoLog\", E, S, T)) : \"\" !== E ? console.warn(\"THREE.WebGLProgram: gl.getProgramInfoLog()\", E) : \"\" !== S && \"\" !== T || (L = !1), L && (this.diagnostics = {\n          runnable: A,\n          material: i,\n          programLog: E,\n          vertexShader: {\n            log: S,\n            prefix: f\n          },\n          fragmentShader: {\n            log: T,\n            prefix: m\n          }\n        }), a.deleteShader(w), a.deleteShader(M);\n        var C;\n\n        this.getUniforms = function () {\n          return void 0 === C && (C = new je(a, x, e)), C;\n        };\n\n        var R;\n        return this.getAttributes = function () {\n          return void 0 === R && (R = Ke(a, x)), R;\n        }, this.destroy = function () {\n          a.deleteProgram(x), this.program = void 0;\n        }, Object.defineProperties(this, {\n          uniforms: {\n            get: function get() {\n              return console.warn(\"THREE.WebGLProgram: .uniforms is now .getUniforms().\"), this.getUniforms();\n            }\n          },\n          attributes: {\n            get: function get() {\n              return console.warn(\"THREE.WebGLProgram: .attributes is now .getAttributes().\"), this.getAttributes();\n            }\n          }\n        }), this.name = n.name, this.id = rc++, this.code = r, this.usedTimes = 1, this.program = x, this.vertexShader = w, this.fragmentShader = M, this;\n      }\n\n      function nt(e, t, r) {\n        function i(e) {\n          var t = e.skeleton,\n              i = t.bones;\n          if (r.floatVertexTextures) return 1024;\n          var n = r.maxVertexUniforms,\n              o = Math.floor((n - 20) / 4),\n              a = Math.min(o, i.length);\n          return a < i.length ? (console.warn(\"THREE.WebGLRenderer: Skeleton has \" + i.length + \" bones. This GPU supports \" + a + \".\"), 0) : a;\n        }\n\n        function n(e, t) {\n          var r;\n          return e ? e.isTexture ? r = e.encoding : e.isWebGLRenderTarget && (console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\"), r = e.texture.encoding) : r = Cs, r === Cs && t && (r = Ps), r;\n        }\n\n        var o = [],\n            a = {\n          MeshDepthMaterial: \"depth\",\n          MeshDistanceMaterial: \"distanceRGBA\",\n          MeshNormalMaterial: \"normal\",\n          MeshBasicMaterial: \"basic\",\n          MeshLambertMaterial: \"lambert\",\n          MeshPhongMaterial: \"phong\",\n          MeshToonMaterial: \"phong\",\n          MeshStandardMaterial: \"physical\",\n          MeshPhysicalMaterial: \"physical\",\n          LineBasicMaterial: \"basic\",\n          LineDashedMaterial: \"dashed\",\n          PointsMaterial: \"points\",\n          ShadowMaterial: \"shadow\"\n        },\n            s = [\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\", \"roughnessMap\", \"metalnessMap\", \"gradientMap\", \"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\", \"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\", \"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\", \"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\", \"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\", \"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", \"physicallyCorrectLights\", \"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"];\n        this.getParameters = function (t, o, s, c, l, u, h) {\n          var d = a[t.type],\n              p = h.isSkinnedMesh ? i(h) : 0,\n              f = r.precision;\n          null !== t.precision && (f = r.getMaxPrecision(t.precision)) !== t.precision && console.warn(\"THREE.WebGLProgram.getParameters:\", t.precision, \"not supported, using\", f, \"instead.\");\n          var m = e.getRenderTarget();\n          return {\n            shaderID: d,\n            precision: f,\n            supportsVertexTextures: r.vertexTextures,\n            outputEncoding: n(m ? m.texture : null, e.gammaOutput),\n            map: !!t.map,\n            mapEncoding: n(t.map, e.gammaInput),\n            envMap: !!t.envMap,\n            envMapMode: t.envMap && t.envMap.mapping,\n            envMapEncoding: n(t.envMap, e.gammaInput),\n            envMapCubeUV: !!t.envMap && (t.envMap.mapping === Sa || t.envMap.mapping === Ta),\n            lightMap: !!t.lightMap,\n            aoMap: !!t.aoMap,\n            emissiveMap: !!t.emissiveMap,\n            emissiveMapEncoding: n(t.emissiveMap, e.gammaInput),\n            bumpMap: !!t.bumpMap,\n            normalMap: !!t.normalMap,\n            displacementMap: !!t.displacementMap,\n            roughnessMap: !!t.roughnessMap,\n            metalnessMap: !!t.metalnessMap,\n            specularMap: !!t.specularMap,\n            alphaMap: !!t.alphaMap,\n            gradientMap: !!t.gradientMap,\n            combine: t.combine,\n            vertexColors: t.vertexColors,\n            fog: !!c,\n            useFog: t.fog,\n            fogExp: c && c.isFogExp2,\n            flatShading: t.flatShading,\n            sizeAttenuation: t.sizeAttenuation,\n            logarithmicDepthBuffer: r.logarithmicDepthBuffer,\n            skinning: t.skinning && p > 0,\n            maxBones: p,\n            useVertexTexture: r.floatVertexTextures,\n            morphTargets: t.morphTargets,\n            morphNormals: t.morphNormals,\n            maxMorphTargets: e.maxMorphTargets,\n            maxMorphNormals: e.maxMorphNormals,\n            numDirLights: o.directional.length,\n            numPointLights: o.point.length,\n            numSpotLights: o.spot.length,\n            numRectAreaLights: o.rectArea.length,\n            numHemiLights: o.hemi.length,\n            numClippingPlanes: l,\n            numClipIntersection: u,\n            dithering: t.dithering,\n            shadowMapEnabled: e.shadowMap.enabled && h.receiveShadow && s.length > 0,\n            shadowMapType: e.shadowMap.type,\n            toneMapping: e.toneMapping,\n            physicallyCorrectLights: e.physicallyCorrectLights,\n            premultipliedAlpha: t.premultipliedAlpha,\n            alphaTest: t.alphaTest,\n            doubleSided: t.side === Do,\n            flipSided: t.side === Po,\n            depthPacking: void 0 !== t.depthPacking && t.depthPacking\n          };\n        }, this.getProgramCode = function (t, r) {\n          var i = [];\n          if (r.shaderID ? i.push(r.shaderID) : (i.push(t.fragmentShader), i.push(t.vertexShader)), void 0 !== t.defines) for (var n in t.defines) {\n            i.push(n), i.push(t.defines[n]);\n          }\n\n          for (var o = 0; o < s.length; o++) {\n            i.push(r[s[o]]);\n          }\n\n          return i.push(t.onBeforeCompile.toString()), i.push(e.gammaOutput), i.join();\n        }, this.acquireProgram = function (r, i, n, a) {\n          for (var s, c = 0, l = o.length; c < l; c++) {\n            var u = o[c];\n\n            if (u.code === a) {\n              s = u, ++s.usedTimes;\n              break;\n            }\n          }\n\n          return void 0 === s && (s = new it(e, t, a, r, i, n), o.push(s)), s;\n        }, this.releaseProgram = function (e) {\n          if (0 == --e.usedTimes) {\n            var t = o.indexOf(e);\n            o[t] = o[o.length - 1], o.pop(), e.destroy();\n          }\n        }, this.programs = o;\n      }\n\n      function ot() {\n        function e(e) {\n          var t = n.get(e);\n          return void 0 === t && (t = {}, n.set(e, t)), t;\n        }\n\n        function t(e) {\n          n.delete(e);\n        }\n\n        function r(e, t, r) {\n          n.get(e)[t] = r;\n        }\n\n        function i() {\n          n = new WeakMap();\n        }\n\n        var n = new WeakMap();\n        return {\n          get: e,\n          remove: t,\n          update: r,\n          dispose: i\n        };\n      }\n\n      function at(e, t) {\n        return e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.program && t.program && e.program !== t.program ? e.program.id - t.program.id : e.material.id !== t.material.id ? e.material.id - t.material.id : e.z !== t.z ? e.z - t.z : e.id - t.id;\n      }\n\n      function st(e, t) {\n        return e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.z !== t.z ? t.z - e.z : e.id - t.id;\n      }\n\n      function ct() {\n        function e() {\n          n = 0, o.length = 0, a.length = 0;\n        }\n\n        function t(e, t, r, s, c) {\n          var l = i[n];\n          void 0 === l ? (l = {\n            id: e.id,\n            object: e,\n            geometry: t,\n            material: r,\n            program: r.program,\n            renderOrder: e.renderOrder,\n            z: s,\n            group: c\n          }, i[n] = l) : (l.id = e.id, l.object = e, l.geometry = t, l.material = r, l.program = r.program, l.renderOrder = e.renderOrder, l.z = s, l.group = c), (!0 === r.transparent ? a : o).push(l), n++;\n        }\n\n        function r() {\n          o.length > 1 && o.sort(at), a.length > 1 && a.sort(st);\n        }\n\n        var i = [],\n            n = 0,\n            o = [],\n            a = [];\n        return {\n          opaque: o,\n          transparent: a,\n          init: e,\n          push: t,\n          sort: r\n        };\n      }\n\n      function lt() {\n        function e(e, t) {\n          var i = e.id + \",\" + t.id,\n              n = r[i];\n          return void 0 === n && (n = new ct(), r[i] = n), n;\n        }\n\n        function t() {\n          r = {};\n        }\n\n        var r = {};\n        return {\n          get: e,\n          dispose: t\n        };\n      }\n\n      function ut() {\n        var e = {};\n        return {\n          get: function get(t) {\n            if (void 0 !== e[t.id]) return e[t.id];\n            var r;\n\n            switch (t.type) {\n              case \"DirectionalLight\":\n                r = {\n                  direction: new s(),\n                  color: new y(),\n                  shadow: !1,\n                  shadowBias: 0,\n                  shadowRadius: 1,\n                  shadowMapSize: new n()\n                };\n                break;\n\n              case \"SpotLight\":\n                r = {\n                  position: new s(),\n                  direction: new s(),\n                  color: new y(),\n                  distance: 0,\n                  coneCos: 0,\n                  penumbraCos: 0,\n                  decay: 0,\n                  shadow: !1,\n                  shadowBias: 0,\n                  shadowRadius: 1,\n                  shadowMapSize: new n()\n                };\n                break;\n\n              case \"PointLight\":\n                r = {\n                  position: new s(),\n                  color: new y(),\n                  distance: 0,\n                  decay: 0,\n                  shadow: !1,\n                  shadowBias: 0,\n                  shadowRadius: 1,\n                  shadowMapSize: new n(),\n                  shadowCameraNear: 1,\n                  shadowCameraFar: 1e3\n                };\n                break;\n\n              case \"HemisphereLight\":\n                r = {\n                  direction: new s(),\n                  skyColor: new y(),\n                  groundColor: new y()\n                };\n                break;\n\n              case \"RectAreaLight\":\n                r = {\n                  color: new y(),\n                  position: new s(),\n                  halfWidth: new s(),\n                  halfHeight: new s()\n                };\n            }\n\n            return e[t.id] = r, r;\n          }\n        };\n      }\n\n      function ht() {\n        function e(e, o, s) {\n          for (var c = 0, l = 0, u = 0, h = 0, d = 0, p = 0, f = 0, m = 0, v = s.matrixWorldInverse, g = 0, y = e.length; g < y; g++) {\n            var x = e[g],\n                _ = x.color,\n                b = x.intensity,\n                w = x.distance,\n                M = x.shadow && x.shadow.map ? x.shadow.map.texture : null;\n            if (x.isAmbientLight) c += _.r * b, l += _.g * b, u += _.b * b;else if (x.isDirectionalLight) {\n              var E = t.get(x);\n\n              if (E.color.copy(x.color).multiplyScalar(x.intensity), E.direction.setFromMatrixPosition(x.matrixWorld), i.setFromMatrixPosition(x.target.matrixWorld), E.direction.sub(i), E.direction.transformDirection(v), E.shadow = x.castShadow, x.castShadow) {\n                var S = x.shadow;\n                E.shadowBias = S.bias, E.shadowRadius = S.radius, E.shadowMapSize = S.mapSize;\n              }\n\n              r.directionalShadowMap[h] = M, r.directionalShadowMatrix[h] = x.shadow.matrix, r.directional[h] = E, h++;\n            } else if (x.isSpotLight) {\n              var E = t.get(x);\n\n              if (E.position.setFromMatrixPosition(x.matrixWorld), E.position.applyMatrix4(v), E.color.copy(_).multiplyScalar(b), E.distance = w, E.direction.setFromMatrixPosition(x.matrixWorld), i.setFromMatrixPosition(x.target.matrixWorld), E.direction.sub(i), E.direction.transformDirection(v), E.coneCos = Math.cos(x.angle), E.penumbraCos = Math.cos(x.angle * (1 - x.penumbra)), E.decay = 0 === x.distance ? 0 : x.decay, E.shadow = x.castShadow, x.castShadow) {\n                var S = x.shadow;\n                E.shadowBias = S.bias, E.shadowRadius = S.radius, E.shadowMapSize = S.mapSize;\n              }\n\n              r.spotShadowMap[p] = M, r.spotShadowMatrix[p] = x.shadow.matrix, r.spot[p] = E, p++;\n            } else if (x.isRectAreaLight) {\n              var E = t.get(x);\n              E.color.copy(_).multiplyScalar(b), E.position.setFromMatrixPosition(x.matrixWorld), E.position.applyMatrix4(v), a.identity(), n.copy(x.matrixWorld), n.premultiply(v), a.extractRotation(n), E.halfWidth.set(.5 * x.width, 0, 0), E.halfHeight.set(0, .5 * x.height, 0), E.halfWidth.applyMatrix4(a), E.halfHeight.applyMatrix4(a), r.rectArea[f] = E, f++;\n            } else if (x.isPointLight) {\n              var E = t.get(x);\n\n              if (E.position.setFromMatrixPosition(x.matrixWorld), E.position.applyMatrix4(v), E.color.copy(x.color).multiplyScalar(x.intensity), E.distance = x.distance, E.decay = 0 === x.distance ? 0 : x.decay, E.shadow = x.castShadow, x.castShadow) {\n                var S = x.shadow;\n                E.shadowBias = S.bias, E.shadowRadius = S.radius, E.shadowMapSize = S.mapSize, E.shadowCameraNear = S.camera.near, E.shadowCameraFar = S.camera.far;\n              }\n\n              r.pointShadowMap[d] = M, r.pointShadowMatrix[d] = x.shadow.matrix, r.point[d] = E, d++;\n            } else if (x.isHemisphereLight) {\n              var E = t.get(x);\n              E.direction.setFromMatrixPosition(x.matrixWorld), E.direction.transformDirection(v), E.direction.normalize(), E.skyColor.copy(x.color).multiplyScalar(b), E.groundColor.copy(x.groundColor).multiplyScalar(b), r.hemi[m] = E, m++;\n            }\n          }\n\n          r.ambient[0] = c, r.ambient[1] = l, r.ambient[2] = u, r.directional.length = h, r.spot.length = p, r.rectArea.length = f, r.point.length = d, r.hemi.length = m, r.hash = r.id + \",\" + h + \",\" + d + \",\" + p + \",\" + f + \",\" + m + \",\" + o.length;\n        }\n\n        var t = new ut(),\n            r = {\n          id: ic++,\n          hash: \"\",\n          ambient: [0, 0, 0],\n          directional: [],\n          directionalShadowMap: [],\n          directionalShadowMatrix: [],\n          spot: [],\n          spotShadowMap: [],\n          spotShadowMatrix: [],\n          rectArea: [],\n          point: [],\n          pointShadowMap: [],\n          pointShadowMatrix: [],\n          hemi: []\n        },\n            i = new s(),\n            n = new o(),\n            a = new o();\n        return {\n          setup: e,\n          state: r\n        };\n      }\n\n      function dt() {\n        function e() {\n          a.length = 0, s.length = 0, c.length = 0;\n        }\n\n        function t(e) {\n          a.push(e);\n        }\n\n        function r(e) {\n          s.push(e);\n        }\n\n        function i(e) {\n          c.push(e);\n        }\n\n        function n(e) {\n          o.setup(a, s, e);\n        }\n\n        var o = new ht(),\n            a = [],\n            s = [],\n            c = [];\n        return {\n          init: e,\n          state: {\n            lightsArray: a,\n            shadowsArray: s,\n            spritesArray: c,\n            lights: o\n          },\n          setupLights: n,\n          pushLight: t,\n          pushShadow: r,\n          pushSprite: i\n        };\n      }\n\n      function pt() {\n        function e(e, t) {\n          var i = e.id + \",\" + t.id,\n              n = r[i];\n          return void 0 === n && (n = new dt(), r[i] = n), n;\n        }\n\n        function t() {\n          r = {};\n        }\n\n        var r = {};\n        return {\n          get: e,\n          dispose: t\n        };\n      }\n\n      function ft(e) {\n        k.call(this), this.type = \"MeshDepthMaterial\", this.depthPacking = Ns, this.skinning = !1, this.morphTargets = !1, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.setValues(e);\n      }\n\n      function mt(e) {\n        k.call(this), this.type = \"MeshDistanceMaterial\", this.referencePosition = new s(), this.nearDistance = 1, this.farDistance = 1e3, this.skinning = !1, this.morphTargets = !1, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.fog = !1, this.lights = !1, this.setValues(e);\n      }\n\n      function vt(e, t, r) {\n        function i(t, r, i, n, o, a) {\n          var s = t.geometry,\n              c = null,\n              l = _,\n              u = t.customDepthMaterial;\n          if (i && (l = b, u = t.customDistanceMaterial), u) c = u;else {\n            var h = !1;\n            r.morphTargets && (s && s.isBufferGeometry ? h = s.morphAttributes && s.morphAttributes.position && s.morphAttributes.position.length > 0 : s && s.isGeometry && (h = s.morphTargets && s.morphTargets.length > 0)), t.isSkinnedMesh && !1 === r.skinning && console.warn(\"THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:\", t);\n            var d = t.isSkinnedMesh && r.skinning,\n                p = 0;\n            h && (p |= v), d && (p |= y), c = l[p];\n          }\n\n          if (e.localClippingEnabled && !0 === r.clipShadows && 0 !== r.clippingPlanes.length) {\n            var f = c.uuid,\n                m = r.uuid,\n                g = w[f];\n            void 0 === g && (g = {}, w[f] = g);\n            var x = g[m];\n            void 0 === x && (x = c.clone(), g[m] = x), c = x;\n          }\n\n          return c.visible = r.visible, c.wireframe = r.wireframe, c.side = null != r.shadowSide ? r.shadowSide : M[r.side], c.clipShadows = r.clipShadows, c.clippingPlanes = r.clippingPlanes, c.clipIntersection = r.clipIntersection, c.wireframeLinewidth = r.wireframeLinewidth, c.linewidth = r.linewidth, i && c.isMeshDistanceMaterial && (c.referencePosition.copy(n), c.nearDistance = o, c.farDistance = a), c;\n        }\n\n        function a(r, n, o, s) {\n          if (!1 !== r.visible) {\n            if (r.layers.test(n.layers) && (r.isMesh || r.isLine || r.isPoints) && r.castShadow && (!r.frustumCulled || c.intersectsObject(r))) {\n              r.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse, r.matrixWorld);\n              var l = t.update(r),\n                  u = r.material;\n              if (Array.isArray(u)) for (var h = l.groups, d = 0, p = h.length; d < p; d++) {\n                var f = h[d],\n                    v = u[f.materialIndex];\n\n                if (v && v.visible) {\n                  var g = i(r, v, s, m, o.near, o.far);\n                  e.renderBufferDirect(o, null, l, g, r, f);\n                }\n              } else if (u.visible) {\n                var g = i(r, u, s, m, o.near, o.far);\n                e.renderBufferDirect(o, null, l, g, r, null);\n              }\n            }\n\n            for (var y = r.children, x = 0, _ = y.length; x < _; x++) {\n              a(y[x], n, o, s);\n            }\n          }\n        }\n\n        for (var c = new g(), l = new o(), d = new n(), p = new n(r, r), f = new s(), m = new s(), v = 1, y = 2, x = 1 + (v | y), _ = new Array(x), b = new Array(x), w = {}, M = {\n          0: Po,\n          1: Ro,\n          2: Do\n        }, E = [new s(1, 0, 0), new s(-1, 0, 0), new s(0, 0, 1), new s(0, 0, -1), new s(0, 1, 0), new s(0, -1, 0)], S = [new s(0, 1, 0), new s(0, 1, 0), new s(0, 1, 0), new s(0, 1, 0), new s(0, 0, 1), new s(0, 0, -1)], T = [new u(), new u(), new u(), new u(), new u(), new u()], A = 0; A !== x; ++A) {\n          var L = 0 != (A & v),\n              C = 0 != (A & y),\n              R = new ft({\n            depthPacking: Fs,\n            morphTargets: L,\n            skinning: C\n          });\n          _[A] = R;\n          var P = new mt({\n            morphTargets: L,\n            skinning: C\n          });\n          b[A] = P;\n        }\n\n        var D = this;\n        this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = Lo, this.render = function (t, r, i) {\n          if (!1 !== D.enabled && (!1 !== D.autoUpdate || !1 !== D.needsUpdate) && 0 !== t.length) {\n            var n = e.context,\n                o = e.state;\n            o.disable(n.BLEND), o.buffers.color.setClear(1, 1, 1, 1), o.buffers.depth.setTest(!0), o.setScissorTest(!1);\n\n            for (var s, u = 0, v = t.length; u < v; u++) {\n              var g = t[u],\n                  y = g.shadow,\n                  x = g && g.isPointLight;\n\n              if (void 0 !== y) {\n                var _ = y.camera;\n\n                if (d.copy(y.mapSize), d.min(p), x) {\n                  var b = d.x,\n                      w = d.y;\n                  T[0].set(2 * b, w, b, w), T[1].set(0, w, b, w), T[2].set(3 * b, w, b, w), T[3].set(b, w, b, w), T[4].set(3 * b, 0, b, w), T[5].set(b, 0, b, w), d.x *= 4, d.y *= 2;\n                }\n\n                if (null === y.map) {\n                  var M = {\n                    minFilter: Ra,\n                    magFilter: Ra,\n                    format: Ja\n                  };\n                  y.map = new h(d.x, d.y, M), y.map.texture.name = g.name + \".shadowMap\", _.updateProjectionMatrix();\n                }\n\n                y.isSpotLightShadow && y.update(g);\n                var A = y.map,\n                    L = y.matrix;\n                m.setFromMatrixPosition(g.matrixWorld), _.position.copy(m), x ? (s = 6, L.makeTranslation(-m.x, -m.y, -m.z)) : (s = 1, f.setFromMatrixPosition(g.target.matrixWorld), _.lookAt(f), _.updateMatrixWorld(), L.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), L.multiply(_.projectionMatrix), L.multiply(_.matrixWorldInverse)), e.setRenderTarget(A), e.clear();\n\n                for (var C = 0; C < s; C++) {\n                  if (x) {\n                    f.copy(_.position), f.add(E[C]), _.up.copy(S[C]), _.lookAt(f), _.updateMatrixWorld();\n                    var R = T[C];\n                    o.viewport(R);\n                  }\n\n                  l.multiplyMatrices(_.projectionMatrix, _.matrixWorldInverse), c.setFromMatrix(l), a(r, i, _, x);\n                }\n              } else console.warn(\"THREE.WebGLShadowMap:\", g, \"has no shadow.\");\n            }\n\n            D.needsUpdate = !1;\n          }\n        };\n      }\n\n      function gt(e, t, r, i, n, o, a, s, c) {\n        l.call(this, e, t, r, i, n, o, a, s, c), this.needsUpdate = !0;\n      }\n\n      function yt(e, t, r, i, n) {\n        function o() {\n          var e = new Float32Array([-.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1]),\n              r = new Uint16Array([0, 1, 2, 0, 2, 3]);\n          u = t.createBuffer(), h = t.createBuffer(), t.bindBuffer(t.ARRAY_BUFFER, u), t.bufferData(t.ARRAY_BUFFER, e, t.STATIC_DRAW), t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, h), t.bufferData(t.ELEMENT_ARRAY_BUFFER, r, t.STATIC_DRAW), d = c(), p = {\n            position: t.getAttribLocation(d, \"position\"),\n            uv: t.getAttribLocation(d, \"uv\")\n          }, f = {\n            uvOffset: t.getUniformLocation(d, \"uvOffset\"),\n            uvScale: t.getUniformLocation(d, \"uvScale\"),\n            rotation: t.getUniformLocation(d, \"rotation\"),\n            center: t.getUniformLocation(d, \"center\"),\n            scale: t.getUniformLocation(d, \"scale\"),\n            color: t.getUniformLocation(d, \"color\"),\n            map: t.getUniformLocation(d, \"map\"),\n            opacity: t.getUniformLocation(d, \"opacity\"),\n            modelViewMatrix: t.getUniformLocation(d, \"modelViewMatrix\"),\n            projectionMatrix: t.getUniformLocation(d, \"projectionMatrix\"),\n            fogType: t.getUniformLocation(d, \"fogType\"),\n            fogDensity: t.getUniformLocation(d, \"fogDensity\"),\n            fogNear: t.getUniformLocation(d, \"fogNear\"),\n            fogFar: t.getUniformLocation(d, \"fogFar\"),\n            fogColor: t.getUniformLocation(d, \"fogColor\"),\n            fogDepth: t.getUniformLocation(d, \"fogDepth\"),\n            alphaTest: t.getUniformLocation(d, \"alphaTest\")\n          };\n          var i = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"canvas\");\n          i.width = 8, i.height = 8;\n          var n = i.getContext(\"2d\");\n          n.fillStyle = \"white\", n.fillRect(0, 0, 8, 8), m = new gt(i);\n        }\n\n        function c() {\n          var e = t.createProgram(),\n              r = t.createShader(t.VERTEX_SHADER),\n              i = t.createShader(t.FRAGMENT_SHADER);\n          return t.shaderSource(r, [\"precision \" + n.precision + \" float;\", \"#define SHADER_NAME SpriteMaterial\", \"uniform mat4 modelViewMatrix;\", \"uniform mat4 projectionMatrix;\", \"uniform float rotation;\", \"uniform vec2 center;\", \"uniform vec2 scale;\", \"uniform vec2 uvOffset;\", \"uniform vec2 uvScale;\", \"attribute vec2 position;\", \"attribute vec2 uv;\", \"varying vec2 vUV;\", \"varying float fogDepth;\", \"void main() {\", \"\\tvUV = uvOffset + uv * uvScale;\", \"\\tvec2 alignedPosition = ( position - center ) * scale;\", \"\\tvec2 rotatedPosition;\", \"\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\", \"\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\", \"\\tvec4 mvPosition;\", \"\\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\", \"\\tmvPosition.xy += rotatedPosition;\", \"\\tgl_Position = projectionMatrix * mvPosition;\", \"\\tfogDepth = - mvPosition.z;\", \"}\"].join(\"\\n\")), t.shaderSource(i, [\"precision \" + n.precision + \" float;\", \"#define SHADER_NAME SpriteMaterial\", \"uniform vec3 color;\", \"uniform sampler2D map;\", \"uniform float opacity;\", \"uniform int fogType;\", \"uniform vec3 fogColor;\", \"uniform float fogDensity;\", \"uniform float fogNear;\", \"uniform float fogFar;\", \"uniform float alphaTest;\", \"varying vec2 vUV;\", \"varying float fogDepth;\", \"void main() {\", \"\\tvec4 texture = texture2D( map, vUV );\", \"\\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\", \"\\tif ( gl_FragColor.a < alphaTest ) discard;\", \"\\tif ( fogType > 0 ) {\", \"\\t\\tfloat fogFactor = 0.0;\", \"\\t\\tif ( fogType == 1 ) {\", \"\\t\\t\\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );\", \"\\t\\t} else {\", \"\\t\\t\\tconst float LOG2 = 1.442695;\", \"\\t\\t\\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );\", \"\\t\\t\\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\", \"\\t\\t}\", \"\\t\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\", \"\\t}\", \"}\"].join(\"\\n\")), t.compileShader(r), t.compileShader(i), t.attachShader(e, r), t.attachShader(e, i), t.linkProgram(e), e;\n        }\n\n        function l(e, t) {\n          return e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.z !== t.z ? t.z - e.z : t.id - e.id;\n        }\n\n        var u,\n            h,\n            d,\n            p,\n            f,\n            m,\n            v = new s(),\n            g = new a(),\n            y = new s();\n\n        this.render = function (n, a, s) {\n          if (0 !== n.length) {\n            void 0 === d && o(), r.useProgram(d), r.initAttributes(), r.enableAttribute(p.position), r.enableAttribute(p.uv), r.disableUnusedAttributes(), r.disable(t.CULL_FACE), r.enable(t.BLEND), t.bindBuffer(t.ARRAY_BUFFER, u), t.vertexAttribPointer(p.position, 2, t.FLOAT, !1, 16, 0), t.vertexAttribPointer(p.uv, 2, t.FLOAT, !1, 16, 8), t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, h), t.uniformMatrix4fv(f.projectionMatrix, !1, s.projectionMatrix.elements), r.activeTexture(t.TEXTURE0), t.uniform1i(f.map, 0);\n            var c = 0,\n                x = 0,\n                _ = a.fog;\n            _ ? (t.uniform3f(f.fogColor, _.color.r, _.color.g, _.color.b), _.isFog ? (t.uniform1f(f.fogNear, _.near), t.uniform1f(f.fogFar, _.far), t.uniform1i(f.fogType, 1), c = 1, x = 1) : _.isFogExp2 && (t.uniform1f(f.fogDensity, _.density), t.uniform1i(f.fogType, 2), c = 2, x = 2)) : (t.uniform1i(f.fogType, 0), c = 0, x = 0);\n\n            for (var b = 0, w = n.length; b < w; b++) {\n              var M = n[b];\n              M.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse, M.matrixWorld), M.z = -M.modelViewMatrix.elements[14];\n            }\n\n            n.sort(l);\n\n            for (var E = [], S = [], b = 0, w = n.length; b < w; b++) {\n              var M = n[b],\n                  T = M.material;\n\n              if (!1 !== T.visible) {\n                M.onBeforeRender(e, a, s, void 0, T, void 0), t.uniform1f(f.alphaTest, T.alphaTest), t.uniformMatrix4fv(f.modelViewMatrix, !1, M.modelViewMatrix.elements), M.matrixWorld.decompose(v, g, y), E[0] = y.x, E[1] = y.y, S[0] = M.center.x - .5, S[1] = M.center.y - .5;\n                var A = 0;\n                a.fog && T.fog && (A = x), c !== A && (t.uniform1i(f.fogType, A), c = A), null !== T.map ? (t.uniform2f(f.uvOffset, T.map.offset.x, T.map.offset.y), t.uniform2f(f.uvScale, T.map.repeat.x, T.map.repeat.y)) : (t.uniform2f(f.uvOffset, 0, 0), t.uniform2f(f.uvScale, 1, 1)), t.uniform1f(f.opacity, T.opacity), t.uniform3f(f.color, T.color.r, T.color.g, T.color.b), t.uniform1f(f.rotation, T.rotation), t.uniform2fv(f.center, S), t.uniform2fv(f.scale, E), r.setBlending(T.blending, T.blendEquation, T.blendSrc, T.blendDst, T.blendEquationAlpha, T.blendSrcAlpha, T.blendDstAlpha, T.premultipliedAlpha), r.buffers.depth.setTest(T.depthTest), r.buffers.depth.setMask(T.depthWrite), r.buffers.color.setMask(T.colorWrite), i.setTexture2D(T.map || m, 0), t.drawElements(t.TRIANGLES, 6, t.UNSIGNED_SHORT, 0), M.onAfterRender(e, a, s, void 0, T, void 0);\n              }\n            }\n\n            r.enable(t.CULL_FACE), r.reset();\n          }\n        };\n      }\n\n      function xt(e, t, r) {\n        function i() {\n          var t = !1,\n              r = new u(),\n              i = null,\n              n = new u(0, 0, 0, 0);\n          return {\n            setMask: function setMask(r) {\n              i === r || t || (e.colorMask(r, r, r, r), i = r);\n            },\n            setLocked: function setLocked(e) {\n              t = e;\n            },\n            setClear: function setClear(t, i, o, a, s) {\n              !0 === s && (t *= a, i *= a, o *= a), r.set(t, i, o, a), !1 === n.equals(r) && (e.clearColor(t, i, o, a), n.copy(r));\n            },\n            reset: function reset() {\n              t = !1, i = null, n.set(-1, 0, 0, 0);\n            }\n          };\n        }\n\n        function n() {\n          var t = !1,\n              r = null,\n              i = null,\n              n = null;\n          return {\n            setTest: function setTest(t) {\n              t ? d(e.DEPTH_TEST) : p(e.DEPTH_TEST);\n            },\n            setMask: function setMask(i) {\n              r === i || t || (e.depthMask(i), r = i);\n            },\n            setFunc: function setFunc(t) {\n              if (i !== t) {\n                if (t) switch (t) {\n                  case na:\n                    e.depthFunc(e.NEVER);\n                    break;\n\n                  case oa:\n                    e.depthFunc(e.ALWAYS);\n                    break;\n\n                  case aa:\n                    e.depthFunc(e.LESS);\n                    break;\n\n                  case sa:\n                    e.depthFunc(e.LEQUAL);\n                    break;\n\n                  case ca:\n                    e.depthFunc(e.EQUAL);\n                    break;\n\n                  case la:\n                    e.depthFunc(e.GEQUAL);\n                    break;\n\n                  case ua:\n                    e.depthFunc(e.GREATER);\n                    break;\n\n                  case ha:\n                    e.depthFunc(e.NOTEQUAL);\n                    break;\n\n                  default:\n                    e.depthFunc(e.LEQUAL);\n                } else e.depthFunc(e.LEQUAL);\n                i = t;\n              }\n            },\n            setLocked: function setLocked(e) {\n              t = e;\n            },\n            setClear: function setClear(t) {\n              n !== t && (e.clearDepth(t), n = t);\n            },\n            reset: function reset() {\n              t = !1, r = null, i = null, n = null;\n            }\n          };\n        }\n\n        function o() {\n          var t = !1,\n              r = null,\n              i = null,\n              n = null,\n              o = null,\n              a = null,\n              s = null,\n              c = null,\n              l = null;\n          return {\n            setTest: function setTest(t) {\n              t ? d(e.STENCIL_TEST) : p(e.STENCIL_TEST);\n            },\n            setMask: function setMask(i) {\n              r === i || t || (e.stencilMask(i), r = i);\n            },\n            setFunc: function setFunc(t, r, a) {\n              i === t && n === r && o === a || (e.stencilFunc(t, r, a), i = t, n = r, o = a);\n            },\n            setOp: function setOp(t, r, i) {\n              a === t && s === r && c === i || (e.stencilOp(t, r, i), a = t, s = r, c = i);\n            },\n            setLocked: function setLocked(e) {\n              t = e;\n            },\n            setClear: function setClear(t) {\n              l !== t && (e.clearStencil(t), l = t);\n            },\n            reset: function reset() {\n              t = !1, r = null, i = null, n = null, o = null, a = null, s = null, c = null, l = null;\n            }\n          };\n        }\n\n        function a(t, r, i) {\n          var n = new Uint8Array(4),\n              o = e.createTexture();\n          e.bindTexture(t, o), e.texParameteri(t, e.TEXTURE_MIN_FILTER, e.NEAREST), e.texParameteri(t, e.TEXTURE_MAG_FILTER, e.NEAREST);\n\n          for (var a = 0; a < i; a++) {\n            e.texImage2D(r + a, 0, e.RGBA, 1, 1, 0, e.RGBA, e.UNSIGNED_BYTE, n);\n          }\n\n          return o;\n        }\n\n        function s() {\n          for (var e = 0, t = I.length; e < t; e++) {\n            I[e] = 0;\n          }\n        }\n\n        function c(r) {\n          if (I[r] = 1, 0 === O[r] && (e.enableVertexAttribArray(r), O[r] = 1), 0 !== N[r]) {\n            t.get(\"ANGLE_instanced_arrays\").vertexAttribDivisorANGLE(r, 0), N[r] = 0;\n          }\n        }\n\n        function l(r, i) {\n          if (I[r] = 1, 0 === O[r] && (e.enableVertexAttribArray(r), O[r] = 1), N[r] !== i) {\n            t.get(\"ANGLE_instanced_arrays\").vertexAttribDivisorANGLE(r, i), N[r] = i;\n          }\n        }\n\n        function h() {\n          for (var t = 0, r = O.length; t !== r; ++t) {\n            O[t] !== I[t] && (e.disableVertexAttribArray(t), O[t] = 0);\n          }\n        }\n\n        function d(t) {\n          !0 !== F[t] && (e.enable(t), F[t] = !0);\n        }\n\n        function p(t) {\n          !1 !== F[t] && (e.disable(t), F[t] = !1);\n        }\n\n        function f() {\n          if (null === z && (z = [], t.get(\"WEBGL_compressed_texture_pvrtc\") || t.get(\"WEBGL_compressed_texture_s3tc\") || t.get(\"WEBGL_compressed_texture_etc1\") || t.get(\"WEBGL_compressed_texture_astc\"))) for (var r = e.getParameter(e.COMPRESSED_TEXTURE_FORMATS), i = 0; i < r.length; i++) {\n            z.push(r[i]);\n          }\n          return z;\n        }\n\n        function m(t) {\n          return B !== t && (e.useProgram(t), B = t, !0);\n        }\n\n        function v(t, i, n, o, a, s, c, l) {\n          if (t !== No ? d(e.BLEND) : p(e.BLEND), t !== Ho) {\n            if (t !== G || l !== q) switch (t) {\n              case zo:\n                l ? (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD), e.blendFuncSeparate(e.ONE, e.ONE, e.ONE, e.ONE)) : (e.blendEquation(e.FUNC_ADD), e.blendFunc(e.SRC_ALPHA, e.ONE));\n                break;\n\n              case Bo:\n                l ? (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD), e.blendFuncSeparate(e.ZERO, e.ZERO, e.ONE_MINUS_SRC_COLOR, e.ONE_MINUS_SRC_ALPHA)) : (e.blendEquation(e.FUNC_ADD), e.blendFunc(e.ZERO, e.ONE_MINUS_SRC_COLOR));\n                break;\n\n              case Go:\n                l ? (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD), e.blendFuncSeparate(e.ZERO, e.SRC_COLOR, e.ZERO, e.SRC_ALPHA)) : (e.blendEquation(e.FUNC_ADD), e.blendFunc(e.ZERO, e.SRC_COLOR));\n                break;\n\n              default:\n                l ? (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD), e.blendFuncSeparate(e.ONE, e.ONE_MINUS_SRC_ALPHA, e.ONE, e.ONE_MINUS_SRC_ALPHA)) : (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD), e.blendFuncSeparate(e.SRC_ALPHA, e.ONE_MINUS_SRC_ALPHA, e.ONE, e.ONE_MINUS_SRC_ALPHA));\n            }\n            H = null, j = null, V = null, k = null, W = null, X = null;\n          } else a = a || i, s = s || n, c = c || o, i === H && a === k || (e.blendEquationSeparate(r.convert(i), r.convert(a)), H = i, k = a), n === j && o === V && s === W && c === X || (e.blendFuncSeparate(r.convert(n), r.convert(o), r.convert(s), r.convert(c)), j = n, V = o, W = s, X = c);\n\n          G = t, q = l;\n        }\n\n        function g(t, r) {\n          t.side === Do ? p(e.CULL_FACE) : d(e.CULL_FACE);\n          var i = t.side === Po;\n          r && (i = !i), y(i), !0 === t.transparent ? v(t.blending, t.blendEquation, t.blendSrc, t.blendDst, t.blendEquationAlpha, t.blendSrcAlpha, t.blendDstAlpha, t.premultipliedAlpha) : v(No), P.setFunc(t.depthFunc), P.setTest(t.depthTest), P.setMask(t.depthWrite), R.setMask(t.colorWrite), b(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits);\n        }\n\n        function y(t) {\n          Y !== t && (t ? e.frontFace(e.CW) : e.frontFace(e.CCW), Y = t);\n        }\n\n        function x(t) {\n          t !== So ? (d(e.CULL_FACE), t !== Z && (t === To ? e.cullFace(e.BACK) : t === Ao ? e.cullFace(e.FRONT) : e.cullFace(e.FRONT_AND_BACK))) : p(e.CULL_FACE), Z = t;\n        }\n\n        function _(t) {\n          t !== J && (ee && e.lineWidth(t), J = t);\n        }\n\n        function b(t, r, i) {\n          t ? (d(e.POLYGON_OFFSET_FILL), K === r && Q === i || (e.polygonOffset(r, i), K = r, Q = i)) : p(e.POLYGON_OFFSET_FILL);\n        }\n\n        function w(t) {\n          t ? d(e.SCISSOR_TEST) : p(e.SCISSOR_TEST);\n        }\n\n        function M(t) {\n          void 0 === t && (t = e.TEXTURE0 + $ - 1), ie !== t && (e.activeTexture(t), ie = t);\n        }\n\n        function E(t, r) {\n          null === ie && M();\n          var i = ne[ie];\n          void 0 === i && (i = {\n            type: void 0,\n            texture: void 0\n          }, ne[ie] = i), i.type === t && i.texture === r || (e.bindTexture(t, r || se[t]), i.type = t, i.texture = r);\n        }\n\n        function S() {\n          try {\n            e.compressedTexImage2D.apply(e, arguments);\n          } catch (e) {\n            console.error(\"THREE.WebGLState:\", e);\n          }\n        }\n\n        function T() {\n          try {\n            e.texImage2D.apply(e, arguments);\n          } catch (e) {\n            console.error(\"THREE.WebGLState:\", e);\n          }\n        }\n\n        function A(t) {\n          !1 === oe.equals(t) && (e.scissor(t.x, t.y, t.z, t.w), oe.copy(t));\n        }\n\n        function L(t) {\n          !1 === ae.equals(t) && (e.viewport(t.x, t.y, t.z, t.w), ae.copy(t));\n        }\n\n        function C() {\n          for (var t = 0; t < O.length; t++) {\n            1 === O[t] && (e.disableVertexAttribArray(t), O[t] = 0);\n          }\n\n          F = {}, z = null, ie = null, ne = {}, B = null, G = null, Y = null, Z = null, R.reset(), P.reset(), D.reset();\n        }\n\n        var R = new i(),\n            P = new n(),\n            D = new o(),\n            U = e.getParameter(e.MAX_VERTEX_ATTRIBS),\n            I = new Uint8Array(U),\n            O = new Uint8Array(U),\n            N = new Uint8Array(U),\n            F = {},\n            z = null,\n            B = null,\n            G = null,\n            H = null,\n            j = null,\n            V = null,\n            k = null,\n            W = null,\n            X = null,\n            q = !1,\n            Y = null,\n            Z = null,\n            J = null,\n            K = null,\n            Q = null,\n            $ = e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS),\n            ee = !1,\n            te = 0,\n            re = e.getParameter(e.VERSION);\n        -1 !== re.indexOf(\"WebGL\") ? (te = parseFloat(/^WebGL\\ ([0-9])/.exec(re)[1]), ee = te >= 1) : -1 !== re.indexOf(\"OpenGL ES\") && (te = parseFloat(/^OpenGL\\ ES\\ ([0-9])/.exec(re)[1]), ee = te >= 2);\n        var ie = null,\n            ne = {},\n            oe = new u(),\n            ae = new u(),\n            se = {};\n        return se[e.TEXTURE_2D] = a(e.TEXTURE_2D, e.TEXTURE_2D, 1), se[e.TEXTURE_CUBE_MAP] = a(e.TEXTURE_CUBE_MAP, e.TEXTURE_CUBE_MAP_POSITIVE_X, 6), R.setClear(0, 0, 0, 1), P.setClear(1), D.setClear(0), d(e.DEPTH_TEST), P.setFunc(sa), y(!1), x(To), d(e.CULL_FACE), d(e.BLEND), v(Fo), {\n          buffers: {\n            color: R,\n            depth: P,\n            stencil: D\n          },\n          initAttributes: s,\n          enableAttribute: c,\n          enableAttributeAndDivisor: l,\n          disableUnusedAttributes: h,\n          enable: d,\n          disable: p,\n          getCompressedTextureFormats: f,\n          useProgram: m,\n          setBlending: v,\n          setMaterial: g,\n          setFlipSided: y,\n          setCullFace: x,\n          setLineWidth: _,\n          setPolygonOffset: b,\n          setScissorTest: w,\n          activeTexture: M,\n          bindTexture: E,\n          compressedTexImage2D: S,\n          texImage2D: T,\n          scissor: A,\n          viewport: L,\n          reset: C\n        };\n      }\n\n      function _t(e, t, r, i, n, o, a) {\n        function s(e, t) {\n          if (e.width > t || e.height > t) {\n            if (\"data\" in e) return void console.warn(\"THREE.WebGLRenderer: image in DataTexture is too big (\" + e.width + \"x\" + e.height + \").\");\n            var r = t / Math.max(e.width, e.height),\n                i = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"canvas\");\n            i.width = Math.floor(e.width * r), i.height = Math.floor(e.height * r);\n            return i.getContext(\"2d\").drawImage(e, 0, 0, e.width, e.height, 0, 0, i.width, i.height), console.warn(\"THREE.WebGLRenderer: image is too big (\" + e.width + \"x\" + e.height + \"). Resized to \" + i.width + \"x\" + i.height, e), i;\n          }\n\n          return e;\n        }\n\n        function c(e) {\n          return zs.isPowerOfTwo(e.width) && zs.isPowerOfTwo(e.height);\n        }\n\n        function l(e) {\n          if (e instanceof HTMLImageElement || e instanceof HTMLCanvasElement || e instanceof ImageBitmap) {\n            void 0 === R && (R = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"canvas\")), R.width = zs.floorPowerOfTwo(e.width), R.height = zs.floorPowerOfTwo(e.height);\n            return R.getContext(\"2d\").drawImage(e, 0, 0, R.width, R.height), console.warn(\"THREE.WebGLRenderer: image is not power of two (\" + e.width + \"x\" + e.height + \"). Resized to \" + R.width + \"x\" + R.height, e), R;\n          }\n\n          return e;\n        }\n\n        function u(e) {\n          return e.wrapS !== La || e.wrapT !== La || e.minFilter !== Ra && e.minFilter !== Ua;\n        }\n\n        function h(e, t) {\n          return e.generateMipmaps && t && e.minFilter !== Ra && e.minFilter !== Ua;\n        }\n\n        function d(t, r, n, o) {\n          e.generateMipmap(t), i.get(r).__maxMipLevel = Math.log(Math.max(n, o)) * Math.LOG2E;\n        }\n\n        function p(t) {\n          return t === Ra || t === Pa || t === Da ? e.NEAREST : e.LINEAR;\n        }\n\n        function f(e) {\n          var t = e.target;\n          t.removeEventListener(\"dispose\", f), v(t), t.isVideoTexture && delete D[t.id], a.memory.textures--;\n        }\n\n        function m(e) {\n          var t = e.target;\n          t.removeEventListener(\"dispose\", m), g(t), a.memory.textures--;\n        }\n\n        function v(t) {\n          var r = i.get(t);\n          if (t.image && r.__image__webglTextureCube) e.deleteTexture(r.__image__webglTextureCube);else {\n            if (void 0 === r.__webglInit) return;\n            e.deleteTexture(r.__webglTexture);\n          }\n          i.remove(t);\n        }\n\n        function g(t) {\n          var r = i.get(t),\n              n = i.get(t.texture);\n\n          if (t) {\n            if (void 0 !== n.__webglTexture && e.deleteTexture(n.__webglTexture), t.depthTexture && t.depthTexture.dispose(), t.isWebGLRenderTargetCube) for (var o = 0; o < 6; o++) {\n              e.deleteFramebuffer(r.__webglFramebuffer[o]), r.__webglDepthbuffer && e.deleteRenderbuffer(r.__webglDepthbuffer[o]);\n            } else e.deleteFramebuffer(r.__webglFramebuffer), r.__webglDepthbuffer && e.deleteRenderbuffer(r.__webglDepthbuffer);\n            i.remove(t.texture), i.remove(t);\n          }\n        }\n\n        function y(t, n) {\n          var o = i.get(t);\n\n          if (t.isVideoTexture && C(t), t.version > 0 && o.__version !== t.version) {\n            var a = t.image;\n            if (void 0 === a) console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is undefined\", t);else {\n              if (!1 !== a.complete) return void w(o, t, n);\n              console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is incomplete\", t);\n            }\n          }\n\n          r.activeTexture(e.TEXTURE0 + n), r.bindTexture(e.TEXTURE_2D, o.__webglTexture);\n        }\n\n        function x(t, l) {\n          var u = i.get(t);\n          if (6 === t.image.length) if (t.version > 0 && u.__version !== t.version) {\n            u.__image__webglTextureCube || (t.addEventListener(\"dispose\", f), u.__image__webglTextureCube = e.createTexture(), a.memory.textures++), r.activeTexture(e.TEXTURE0 + l), r.bindTexture(e.TEXTURE_CUBE_MAP, u.__image__webglTextureCube), e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, t.flipY);\n\n            for (var p = t && t.isCompressedTexture, m = t.image[0] && t.image[0].isDataTexture, v = [], g = 0; g < 6; g++) {\n              v[g] = p || m ? m ? t.image[g].image : t.image[g] : s(t.image[g], n.maxCubemapSize);\n            }\n\n            var y = v[0],\n                x = c(y),\n                _ = o.convert(t.format),\n                w = o.convert(t.type);\n\n            b(e.TEXTURE_CUBE_MAP, t, x);\n\n            for (var g = 0; g < 6; g++) {\n              if (p) for (var M, E = v[g].mipmaps, S = 0, T = E.length; S < T; S++) {\n                M = E[S], t.format !== Ja && t.format !== Za ? r.getCompressedTextureFormats().indexOf(_) > -1 ? r.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + g, S, _, M.width, M.height, 0, M.data) : console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\") : r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + g, S, _, M.width, M.height, 0, _, w, M.data);\n              } else m ? r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + g, 0, _, v[g].width, v[g].height, 0, _, w, v[g].data) : r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + g, 0, _, _, w, v[g]);\n            }\n\n            u.__maxMipLevel = p ? E.length - 1 : 0, h(t, x) && d(e.TEXTURE_CUBE_MAP, t, y.width, y.height), u.__version = t.version, t.onUpdate && t.onUpdate(t);\n          } else r.activeTexture(e.TEXTURE0 + l), r.bindTexture(e.TEXTURE_CUBE_MAP, u.__image__webglTextureCube);\n        }\n\n        function _(t, n) {\n          r.activeTexture(e.TEXTURE0 + n), r.bindTexture(e.TEXTURE_CUBE_MAP, i.get(t).__webglTexture);\n        }\n\n        function b(r, a, s) {\n          var c;\n\n          if (s ? (e.texParameteri(r, e.TEXTURE_WRAP_S, o.convert(a.wrapS)), e.texParameteri(r, e.TEXTURE_WRAP_T, o.convert(a.wrapT)), e.texParameteri(r, e.TEXTURE_MAG_FILTER, o.convert(a.magFilter)), e.texParameteri(r, e.TEXTURE_MIN_FILTER, o.convert(a.minFilter))) : (e.texParameteri(r, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE), e.texParameteri(r, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE), a.wrapS === La && a.wrapT === La || console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.\", a), e.texParameteri(r, e.TEXTURE_MAG_FILTER, p(a.magFilter)), e.texParameteri(r, e.TEXTURE_MIN_FILTER, p(a.minFilter)), a.minFilter !== Ra && a.minFilter !== Ua && console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.\", a)), c = t.get(\"EXT_texture_filter_anisotropic\")) {\n            if (a.type === ja && null === t.get(\"OES_texture_float_linear\")) return;\n            if (a.type === Va && null === t.get(\"OES_texture_half_float_linear\")) return;\n            (a.anisotropy > 1 || i.get(a).__currentAnisotropy) && (e.texParameterf(r, c.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(a.anisotropy, n.getMaxAnisotropy())), i.get(a).__currentAnisotropy = a.anisotropy);\n          }\n        }\n\n        function w(t, i, p) {\n          void 0 === t.__webglInit && (t.__webglInit = !0, i.addEventListener(\"dispose\", f), t.__webglTexture = e.createTexture(), a.memory.textures++), r.activeTexture(e.TEXTURE0 + p), r.bindTexture(e.TEXTURE_2D, t.__webglTexture), e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, i.flipY), e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, i.premultiplyAlpha), e.pixelStorei(e.UNPACK_ALIGNMENT, i.unpackAlignment);\n          var m = s(i.image, n.maxTextureSize);\n          u(i) && !1 === c(m) && (m = l(m));\n          var v = c(m),\n              g = o.convert(i.format),\n              y = o.convert(i.type);\n          b(e.TEXTURE_2D, i, v);\n          var x,\n              _ = i.mipmaps;\n\n          if (i.isDepthTexture) {\n            var w = e.DEPTH_COMPONENT;\n\n            if (i.type === ja) {\n              if (!P) throw new Error(\"Float Depth Texture only supported in WebGL2.0\");\n              w = e.DEPTH_COMPONENT32F;\n            } else P && (w = e.DEPTH_COMPONENT16);\n\n            i.format === $a && w === e.DEPTH_COMPONENT && i.type !== Ba && i.type !== Ha && (console.warn(\"THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.\"), i.type = Ba, y = o.convert(i.type)), i.format === es && (w = e.DEPTH_STENCIL, i.type !== qa && (console.warn(\"THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.\"), i.type = qa, y = o.convert(i.type))), r.texImage2D(e.TEXTURE_2D, 0, w, m.width, m.height, 0, g, y, null);\n          } else if (i.isDataTexture) {\n            if (_.length > 0 && v) {\n              for (var M = 0, E = _.length; M < E; M++) {\n                x = _[M], r.texImage2D(e.TEXTURE_2D, M, g, x.width, x.height, 0, g, y, x.data);\n              }\n\n              i.generateMipmaps = !1, t.__maxMipLevel = _.length - 1;\n            } else r.texImage2D(e.TEXTURE_2D, 0, g, m.width, m.height, 0, g, y, m.data), t.__maxMipLevel = 0;\n          } else if (i.isCompressedTexture) {\n            for (var M = 0, E = _.length; M < E; M++) {\n              x = _[M], i.format !== Ja && i.format !== Za ? r.getCompressedTextureFormats().indexOf(g) > -1 ? r.compressedTexImage2D(e.TEXTURE_2D, M, g, x.width, x.height, 0, x.data) : console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\") : r.texImage2D(e.TEXTURE_2D, M, g, x.width, x.height, 0, g, y, x.data);\n            }\n\n            t.__maxMipLevel = _.length - 1;\n          } else if (_.length > 0 && v) {\n            for (var M = 0, E = _.length; M < E; M++) {\n              x = _[M], r.texImage2D(e.TEXTURE_2D, M, g, g, y, x);\n            }\n\n            i.generateMipmaps = !1, t.__maxMipLevel = _.length - 1;\n          } else r.texImage2D(e.TEXTURE_2D, 0, g, g, y, m), t.__maxMipLevel = 0;\n\n          h(i, v) && d(e.TEXTURE_2D, i, m.width, m.height), t.__version = i.version, i.onUpdate && i.onUpdate(i);\n        }\n\n        function M(t, n, a, s) {\n          var c = o.convert(n.texture.format),\n              l = o.convert(n.texture.type);\n          r.texImage2D(s, 0, c, n.width, n.height, 0, c, l, null), e.bindFramebuffer(e.FRAMEBUFFER, t), e.framebufferTexture2D(e.FRAMEBUFFER, a, s, i.get(n.texture).__webglTexture, 0), e.bindFramebuffer(e.FRAMEBUFFER, null);\n        }\n\n        function E(t, r) {\n          e.bindRenderbuffer(e.RENDERBUFFER, t), r.depthBuffer && !r.stencilBuffer ? (e.renderbufferStorage(e.RENDERBUFFER, e.DEPTH_COMPONENT16, r.width, r.height), e.framebufferRenderbuffer(e.FRAMEBUFFER, e.DEPTH_ATTACHMENT, e.RENDERBUFFER, t)) : r.depthBuffer && r.stencilBuffer ? (e.renderbufferStorage(e.RENDERBUFFER, e.DEPTH_STENCIL, r.width, r.height), e.framebufferRenderbuffer(e.FRAMEBUFFER, e.DEPTH_STENCIL_ATTACHMENT, e.RENDERBUFFER, t)) : e.renderbufferStorage(e.RENDERBUFFER, e.RGBA4, r.width, r.height), e.bindRenderbuffer(e.RENDERBUFFER, null);\n        }\n\n        function S(t, r) {\n          if (r && r.isWebGLRenderTargetCube) throw new Error(\"Depth Texture with cube render targets is not supported\");\n          if (e.bindFramebuffer(e.FRAMEBUFFER, t), !r.depthTexture || !r.depthTexture.isDepthTexture) throw new Error(\"renderTarget.depthTexture must be an instance of THREE.DepthTexture\");\n          i.get(r.depthTexture).__webglTexture && r.depthTexture.image.width === r.width && r.depthTexture.image.height === r.height || (r.depthTexture.image.width = r.width, r.depthTexture.image.height = r.height, r.depthTexture.needsUpdate = !0), y(r.depthTexture, 0);\n\n          var n = i.get(r.depthTexture).__webglTexture;\n\n          if (r.depthTexture.format === $a) e.framebufferTexture2D(e.FRAMEBUFFER, e.DEPTH_ATTACHMENT, e.TEXTURE_2D, n, 0);else {\n            if (r.depthTexture.format !== es) throw new Error(\"Unknown depthTexture format\");\n            e.framebufferTexture2D(e.FRAMEBUFFER, e.DEPTH_STENCIL_ATTACHMENT, e.TEXTURE_2D, n, 0);\n          }\n        }\n\n        function T(t) {\n          var r = i.get(t),\n              n = !0 === t.isWebGLRenderTargetCube;\n\n          if (t.depthTexture) {\n            if (n) throw new Error(\"target.depthTexture not supported in Cube render targets\");\n            S(r.__webglFramebuffer, t);\n          } else if (n) {\n            r.__webglDepthbuffer = [];\n\n            for (var o = 0; o < 6; o++) {\n              e.bindFramebuffer(e.FRAMEBUFFER, r.__webglFramebuffer[o]), r.__webglDepthbuffer[o] = e.createRenderbuffer(), E(r.__webglDepthbuffer[o], t);\n            }\n          } else e.bindFramebuffer(e.FRAMEBUFFER, r.__webglFramebuffer), r.__webglDepthbuffer = e.createRenderbuffer(), E(r.__webglDepthbuffer, t);\n\n          e.bindFramebuffer(e.FRAMEBUFFER, null);\n        }\n\n        function A(t) {\n          var n = i.get(t),\n              o = i.get(t.texture);\n          t.addEventListener(\"dispose\", m), o.__webglTexture = e.createTexture(), a.memory.textures++;\n          var s = !0 === t.isWebGLRenderTargetCube,\n              l = c(t);\n\n          if (s) {\n            n.__webglFramebuffer = [];\n\n            for (var u = 0; u < 6; u++) {\n              n.__webglFramebuffer[u] = e.createFramebuffer();\n            }\n          } else n.__webglFramebuffer = e.createFramebuffer();\n\n          if (s) {\n            r.bindTexture(e.TEXTURE_CUBE_MAP, o.__webglTexture), b(e.TEXTURE_CUBE_MAP, t.texture, l);\n\n            for (var u = 0; u < 6; u++) {\n              M(n.__webglFramebuffer[u], t, e.COLOR_ATTACHMENT0, e.TEXTURE_CUBE_MAP_POSITIVE_X + u);\n            }\n\n            h(t.texture, l) && d(e.TEXTURE_CUBE_MAP, t.texture, t.width, t.height), r.bindTexture(e.TEXTURE_CUBE_MAP, null);\n          } else r.bindTexture(e.TEXTURE_2D, o.__webglTexture), b(e.TEXTURE_2D, t.texture, l), M(n.__webglFramebuffer, t, e.COLOR_ATTACHMENT0, e.TEXTURE_2D), h(t.texture, l) && d(e.TEXTURE_2D, t.texture, t.width, t.height), r.bindTexture(e.TEXTURE_2D, null);\n\n          t.depthBuffer && T(t);\n        }\n\n        function L(t) {\n          var n = t.texture;\n\n          if (h(n, c(t))) {\n            var o = t.isWebGLRenderTargetCube ? e.TEXTURE_CUBE_MAP : e.TEXTURE_2D,\n                a = i.get(n).__webglTexture;\n\n            r.bindTexture(o, a), d(o, n, t.width, t.height), r.bindTexture(o, null);\n          }\n        }\n\n        function C(e) {\n          var t = e.id,\n              r = a.render.frame;\n          D[t] !== r && (D[t] = r, e.update());\n        }\n\n        var R,\n            P = \"undefined\" != typeof WebGL2RenderingContext && e instanceof WebGL2RenderingContext,\n            D = {};\n        this.setTexture2D = y, this.setTextureCube = x, this.setTextureCubeDynamic = _, this.setupRenderTarget = A, this.updateRenderTargetMipmap = L;\n      }\n\n      function bt(e, t) {\n        function r(r) {\n          var i;\n          if (r === Aa) return e.REPEAT;\n          if (r === La) return e.CLAMP_TO_EDGE;\n          if (r === Ca) return e.MIRRORED_REPEAT;\n          if (r === Ra) return e.NEAREST;\n          if (r === Pa) return e.NEAREST_MIPMAP_NEAREST;\n          if (r === Da) return e.NEAREST_MIPMAP_LINEAR;\n          if (r === Ua) return e.LINEAR;\n          if (r === Ia) return e.LINEAR_MIPMAP_NEAREST;\n          if (r === Oa) return e.LINEAR_MIPMAP_LINEAR;\n          if (r === Na) return e.UNSIGNED_BYTE;\n          if (r === ka) return e.UNSIGNED_SHORT_4_4_4_4;\n          if (r === Wa) return e.UNSIGNED_SHORT_5_5_5_1;\n          if (r === Xa) return e.UNSIGNED_SHORT_5_6_5;\n          if (r === Fa) return e.BYTE;\n          if (r === za) return e.SHORT;\n          if (r === Ba) return e.UNSIGNED_SHORT;\n          if (r === Ga) return e.INT;\n          if (r === Ha) return e.UNSIGNED_INT;\n          if (r === ja) return e.FLOAT;\n          if (r === Va && null !== (i = t.get(\"OES_texture_half_float\"))) return i.HALF_FLOAT_OES;\n          if (r === Ya) return e.ALPHA;\n          if (r === Za) return e.RGB;\n          if (r === Ja) return e.RGBA;\n          if (r === Ka) return e.LUMINANCE;\n          if (r === Qa) return e.LUMINANCE_ALPHA;\n          if (r === $a) return e.DEPTH_COMPONENT;\n          if (r === es) return e.DEPTH_STENCIL;\n          if (r === jo) return e.FUNC_ADD;\n          if (r === Vo) return e.FUNC_SUBTRACT;\n          if (r === ko) return e.FUNC_REVERSE_SUBTRACT;\n          if (r === qo) return e.ZERO;\n          if (r === Yo) return e.ONE;\n          if (r === Zo) return e.SRC_COLOR;\n          if (r === Jo) return e.ONE_MINUS_SRC_COLOR;\n          if (r === Ko) return e.SRC_ALPHA;\n          if (r === Qo) return e.ONE_MINUS_SRC_ALPHA;\n          if (r === $o) return e.DST_ALPHA;\n          if (r === ea) return e.ONE_MINUS_DST_ALPHA;\n          if (r === ta) return e.DST_COLOR;\n          if (r === ra) return e.ONE_MINUS_DST_COLOR;\n          if (r === ia) return e.SRC_ALPHA_SATURATE;\n\n          if ((r === ts || r === rs || r === is || r === ns) && null !== (i = t.get(\"WEBGL_compressed_texture_s3tc\"))) {\n            if (r === ts) return i.COMPRESSED_RGB_S3TC_DXT1_EXT;\n            if (r === rs) return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n            if (r === is) return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n            if (r === ns) return i.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n          }\n\n          if ((r === os || r === as || r === ss || r === cs) && null !== (i = t.get(\"WEBGL_compressed_texture_pvrtc\"))) {\n            if (r === os) return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n            if (r === as) return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n            if (r === ss) return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n            if (r === cs) return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n          }\n\n          if (r === ls && null !== (i = t.get(\"WEBGL_compressed_texture_etc1\"))) return i.COMPRESSED_RGB_ETC1_WEBGL;\n          if ((r === us || r === hs || r === ds || r === ps || r === fs || r === ms || r === vs || r === gs || r === ys || r === xs || r === _s || r === bs || r === ws || r === Ms) && null !== (i = t.get(\"WEBGL_compressed_texture_astc\"))) return r;\n\n          if ((r === Wo || r === Xo) && null !== (i = t.get(\"EXT_blend_minmax\"))) {\n            if (r === Wo) return i.MIN_EXT;\n            if (r === Xo) return i.MAX_EXT;\n          }\n\n          return r === qa && null !== (i = t.get(\"WEBGL_depth_texture\")) ? i.UNSIGNED_INT_24_8_WEBGL : 0;\n        }\n\n        return {\n          convert: r\n        };\n      }\n\n      function wt(e, t, r, i) {\n        M.call(this), this.type = \"PerspectiveCamera\", this.fov = void 0 !== e ? e : 50, this.zoom = 1, this.near = void 0 !== r ? r : .1, this.far = void 0 !== i ? i : 2e3, this.focus = 10, this.aspect = void 0 !== t ? t : 1, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();\n      }\n\n      function Mt(e) {\n        wt.call(this), this.cameras = e || [];\n      }\n\n      function Et(e) {\n        function t() {\n          return null !== n && !0 === n.isPresenting;\n        }\n\n        function r() {\n          if (t()) {\n            var r = n.getEyeParameters(\"left\"),\n                o = r.renderWidth,\n                a = r.renderHeight;\n            _ = e.getPixelRatio(), x = e.getSize(), e.setDrawingBufferSize(2 * o, a, 1);\n          } else i.enabled && e.setDrawingBufferSize(x.width, x.height, _);\n        }\n\n        var i = this,\n            n = null,\n            c = null,\n            l = null,\n            h = new o(),\n            d = new o();\n        \"undefined\" != typeof window && \"VRFrameData\" in window && (c = new window.VRFrameData(), window.addEventListener(\"vrdisplaypresentchange\", r, !1));\n        var p = new o(),\n            f = new a(),\n            m = new s(),\n            v = new wt();\n        v.bounds = new u(0, 0, .5, 1), v.layers.enable(1);\n        var g = new wt();\n        g.bounds = new u(.5, 0, .5, 1), g.layers.enable(2);\n        var y = new Mt([v, g]);\n        y.layers.enable(1), y.layers.enable(2);\n\n        var x, _;\n\n        this.enabled = !1, this.userHeight = 1.6, this.getDevice = function () {\n          return n;\n        }, this.setDevice = function (e) {\n          void 0 !== e && (n = e);\n        }, this.setPoseTarget = function (e) {\n          void 0 !== e && (l = e);\n        }, this.getCamera = function (e) {\n          if (null === n) return e;\n          n.depthNear = e.near, n.depthFar = e.far, n.getFrameData(c);\n          var t = n.stageParameters;\n          t ? h.fromArray(t.sittingToStandingTransform) : h.makeTranslation(0, i.userHeight, 0);\n          var r = c.pose,\n              o = null !== l ? l : e;\n          if (o.matrix.copy(h), o.matrix.decompose(o.position, o.quaternion, o.scale), null !== r.orientation && (f.fromArray(r.orientation), o.quaternion.multiply(f)), null !== r.position && (f.setFromRotationMatrix(h), m.fromArray(r.position), m.applyQuaternion(f), o.position.add(m)), o.updateMatrixWorld(), !1 === n.isPresenting) return e;\n          v.near = e.near, g.near = e.near, v.far = e.far, g.far = e.far, y.matrixWorld.copy(e.matrixWorld), y.matrixWorldInverse.copy(e.matrixWorldInverse), v.matrixWorldInverse.fromArray(c.leftViewMatrix), g.matrixWorldInverse.fromArray(c.rightViewMatrix), d.getInverse(h), v.matrixWorldInverse.multiply(d), g.matrixWorldInverse.multiply(d);\n          var a = o.parent;\n          null !== a && (p.getInverse(a.matrixWorld), v.matrixWorldInverse.multiply(p), g.matrixWorldInverse.multiply(p)), v.matrixWorld.getInverse(v.matrixWorldInverse), g.matrixWorld.getInverse(g.matrixWorldInverse), v.projectionMatrix.fromArray(c.leftProjectionMatrix), g.projectionMatrix.fromArray(c.rightProjectionMatrix), y.projectionMatrix.copy(v.projectionMatrix);\n          var s = n.getLayers();\n\n          if (s.length) {\n            var u = s[0];\n            null !== u.leftBounds && 4 === u.leftBounds.length && v.bounds.fromArray(u.leftBounds), null !== u.rightBounds && 4 === u.rightBounds.length && g.bounds.fromArray(u.rightBounds);\n          }\n\n          return y;\n        }, this.getStandingMatrix = function () {\n          return h;\n        }, this.submitFrame = function () {\n          t() && n.submitFrame();\n        }, this.dispose = function () {\n          \"undefined\" != typeof window && window.removeEventListener(\"vrdisplaypresentchange\", r);\n        };\n      }\n\n      function St(e) {\n        function t() {\n          return null === ue ? we : 1;\n        }\n\n        function r() {\n          Ue = new te(oe), Ue.get(\"WEBGL_depth_texture\"), Ue.get(\"OES_texture_float\"), Ue.get(\"OES_texture_float_linear\"), Ue.get(\"OES_texture_half_float\"), Ue.get(\"OES_texture_half_float_linear\"), Ue.get(\"OES_standard_derivatives\"), Ue.get(\"OES_element_index_uint\"), Ue.get(\"ANGLE_instanced_arrays\"), Ke = new bt(oe, Ue), Ie = new $(oe, Ue, e), Oe = new xt(oe, Ue, Ke), Oe.scissor(ge.copy(Ee).multiplyScalar(we)), Oe.viewport(ve.copy(Me).multiplyScalar(we)), Ne = new ne(oe), Fe = new ot(), ze = new _t(oe, Ue, Oe, Fe, Ie, Ke, Ne), Be = new x(oe), Ge = new re(oe, Be, Ne), He = new se(Ge, Ne), qe = new ae(oe), Ve = new nt(ce, Ue, Ie), ke = new lt(), We = new pt(), Xe = new K(ce, Oe, Ge, X), Ye = new Q(oe, Ue, Ne), Ze = new ie(oe, Ue, Ne), Je = new yt(ce, oe, Oe, ze, Ie), Ne.programs = Ve.programs, ce.context = oe, ce.capabilities = Ie, ce.extensions = Ue, ce.properties = Fe, ce.renderLists = ke, ce.state = Oe, ce.info = Ne;\n        }\n\n        function i(e) {\n          e.preventDefault(), console.log(\"THREE.WebGLRenderer: Context Lost.\"), le = !0;\n        }\n\n        function n() {\n          console.log(\"THREE.WebGLRenderer: Context Restored.\"), le = !1, r();\n        }\n\n        function a(e) {\n          var t = e.target;\n          t.removeEventListener(\"dispose\", a), c(t);\n        }\n\n        function c(e) {\n          l(e), Fe.remove(e);\n        }\n\n        function l(e) {\n          var t = Fe.get(e).program;\n          e.program = void 0, void 0 !== t && Ve.releaseProgram(t);\n        }\n\n        function h(e, t, r) {\n          e.render(function (e) {\n            ce.renderBufferImmediate(e, t, r);\n          });\n        }\n\n        function d(e, t, r) {\n          if (r && r.isInstancedBufferGeometry && null === Ue.get(\"ANGLE_instanced_arrays\")) return void console.error(\"THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");\n          Oe.initAttributes();\n          var i = r.attributes,\n              n = t.getAttributes(),\n              o = e.defaultAttributeValues;\n\n          for (var a in n) {\n            var s = n[a];\n\n            if (s >= 0) {\n              var c = i[a];\n\n              if (void 0 !== c) {\n                var l = c.normalized,\n                    u = c.itemSize,\n                    h = Be.get(c);\n                if (void 0 === h) continue;\n                var d = h.buffer,\n                    p = h.type,\n                    f = h.bytesPerElement;\n\n                if (c.isInterleavedBufferAttribute) {\n                  var m = c.data,\n                      v = m.stride,\n                      g = c.offset;\n                  m && m.isInstancedInterleavedBuffer ? (Oe.enableAttributeAndDivisor(s, m.meshPerAttribute), void 0 === r.maxInstancedCount && (r.maxInstancedCount = m.meshPerAttribute * m.count)) : Oe.enableAttribute(s), oe.bindBuffer(oe.ARRAY_BUFFER, d), oe.vertexAttribPointer(s, u, p, l, v * f, g * f);\n                } else c.isInstancedBufferAttribute ? (Oe.enableAttributeAndDivisor(s, c.meshPerAttribute), void 0 === r.maxInstancedCount && (r.maxInstancedCount = c.meshPerAttribute * c.count)) : Oe.enableAttribute(s), oe.bindBuffer(oe.ARRAY_BUFFER, d), oe.vertexAttribPointer(s, u, p, l, 0, 0);\n              } else if (void 0 !== o) {\n                var y = o[a];\n                if (void 0 !== y) switch (y.length) {\n                  case 2:\n                    oe.vertexAttrib2fv(s, y);\n                    break;\n\n                  case 3:\n                    oe.vertexAttrib3fv(s, y);\n                    break;\n\n                  case 4:\n                    oe.vertexAttrib4fv(s, y);\n                    break;\n\n                  default:\n                    oe.vertexAttrib1fv(s, y);\n                }\n              }\n            }\n          }\n\n          Oe.disableUnusedAttributes();\n        }\n\n        function f() {\n          et || (v(), et = !0);\n        }\n\n        function m() {\n          et = !1;\n        }\n\n        function v() {\n          var e = Qe.getDevice();\n          e && e.isPresenting ? e.requestAnimationFrame(y) : window.requestAnimationFrame(y);\n        }\n\n        function y(e) {\n          !1 !== et && (tt(e), v());\n        }\n\n        function _(e, t, r) {\n          if (!1 !== e.visible) {\n            if (e.layers.test(t.layers)) if (e.isLight) J.pushLight(e), e.castShadow && J.pushShadow(e);else if (e.isSprite) e.frustumCulled && !Te.intersectsSprite(e) || J.pushSprite(e);else if (e.isImmediateRenderObject) r && Pe.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Re), Z.push(e, null, e.material, Pe.z, null);else if ((e.isMesh || e.isLine || e.isPoints) && (e.isSkinnedMesh && e.skeleton.update(), !e.frustumCulled || Te.intersectsObject(e))) {\n              r && Pe.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Re);\n              var i = He.update(e),\n                  n = e.material;\n              if (Array.isArray(n)) for (var o = i.groups, a = 0, s = o.length; a < s; a++) {\n                var c = o[a],\n                    l = n[c.materialIndex];\n                l && l.visible && Z.push(e, i, l, Pe.z, c);\n              } else n.visible && Z.push(e, i, n, Pe.z, null);\n            }\n\n            for (var u = e.children, a = 0, s = u.length; a < s; a++) {\n              _(u[a], t, r);\n            }\n          }\n        }\n\n        function b(e, t, r, i) {\n          for (var n = 0, o = e.length; n < o; n++) {\n            var a = e[n],\n                s = a.object,\n                c = a.geometry,\n                l = void 0 === i ? a.material : i,\n                u = a.group;\n\n            if (r.isArrayCamera) {\n              me = r;\n\n              for (var h = r.cameras, d = 0, p = h.length; d < p; d++) {\n                var f = h[d];\n\n                if (s.layers.test(f.layers)) {\n                  var m = f.bounds,\n                      v = m.x * _e,\n                      g = m.y * be,\n                      y = m.z * _e,\n                      x = m.w * be;\n                  Oe.viewport(ve.set(v, g, y, x).multiplyScalar(we)), w(s, t, f, c, l, u);\n                }\n              }\n            } else me = null, w(s, t, r, c, l, u);\n          }\n        }\n\n        function w(e, t, r, i, n, o) {\n          if (e.onBeforeRender(ce, t, r, i, n, o), J = We.get(t, me || r), e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse, e.matrixWorld), e.normalMatrix.getNormalMatrix(e.modelViewMatrix), e.isImmediateRenderObject) {\n            var a = e.isMesh && e.matrixWorld.determinant() < 0;\n            Oe.setMaterial(n, a);\n            var s = E(r, t.fog, n, e);\n            pe = \"\", h(e, s, n);\n          } else ce.renderBufferDirect(r, t.fog, i, n, e, o);\n\n          e.onAfterRender(ce, t, r, i, n, o), J = We.get(t, me || r);\n        }\n\n        function M(e, t, r) {\n          var i = Fe.get(e),\n              n = J.state.lights,\n              o = J.state.shadowsArray,\n              s = Ve.getParameters(e, n.state, o, t, Ae.numPlanes, Ae.numIntersection, r),\n              c = Ve.getProgramCode(e, s),\n              u = i.program,\n              h = !0;\n          if (void 0 === u) e.addEventListener(\"dispose\", a);else if (u.code !== c) l(e);else if (i.lightsHash !== n.state.hash) Fe.update(e, \"lightsHash\", n.state.hash), h = !1;else {\n            if (void 0 !== s.shaderID) return;\n            h = !1;\n          }\n\n          if (h) {\n            if (s.shaderID) {\n              var d = ks[s.shaderID];\n              i.shader = {\n                name: e.type,\n                uniforms: Hs.clone(d.uniforms),\n                vertexShader: d.vertexShader,\n                fragmentShader: d.fragmentShader\n              };\n            } else i.shader = {\n              name: e.type,\n              uniforms: e.uniforms,\n              vertexShader: e.vertexShader,\n              fragmentShader: e.fragmentShader\n            };\n\n            e.onBeforeCompile(i.shader, ce), u = Ve.acquireProgram(e, i.shader, s, c), i.program = u, e.program = u;\n          }\n\n          var p = u.getAttributes();\n\n          if (e.morphTargets) {\n            e.numSupportedMorphTargets = 0;\n\n            for (var f = 0; f < ce.maxMorphTargets; f++) {\n              p[\"morphTarget\" + f] >= 0 && e.numSupportedMorphTargets++;\n            }\n          }\n\n          if (e.morphNormals) {\n            e.numSupportedMorphNormals = 0;\n\n            for (var f = 0; f < ce.maxMorphNormals; f++) {\n              p[\"morphNormal\" + f] >= 0 && e.numSupportedMorphNormals++;\n            }\n          }\n\n          var m = i.shader.uniforms;\n          (e.isShaderMaterial || e.isRawShaderMaterial) && !0 !== e.clipping || (i.numClippingPlanes = Ae.numPlanes, i.numIntersection = Ae.numIntersection, m.clippingPlanes = Ae.uniform), i.fog = t, i.lightsHash = n.state.hash, e.lights && (m.ambientLightColor.value = n.state.ambient, m.directionalLights.value = n.state.directional, m.spotLights.value = n.state.spot, m.rectAreaLights.value = n.state.rectArea, m.pointLights.value = n.state.point, m.hemisphereLights.value = n.state.hemi, m.directionalShadowMap.value = n.state.directionalShadowMap, m.directionalShadowMatrix.value = n.state.directionalShadowMatrix, m.spotShadowMap.value = n.state.spotShadowMap, m.spotShadowMatrix.value = n.state.spotShadowMatrix, m.pointShadowMap.value = n.state.pointShadowMap, m.pointShadowMatrix.value = n.state.pointShadowMatrix);\n          var v = i.program.getUniforms(),\n              g = je.seqWithValue(v.seq, m);\n          i.uniformsList = g;\n        }\n\n        function E(e, t, r, i) {\n          xe = 0;\n          var n = Fe.get(r),\n              o = J.state.lights;\n\n          if (Le && (Ce || e !== fe)) {\n            var a = e === fe && r.id === de;\n            Ae.setState(r.clippingPlanes, r.clipIntersection, r.clipShadows, e, n, a);\n          }\n\n          !1 === r.needsUpdate && (void 0 === n.program ? r.needsUpdate = !0 : r.fog && n.fog !== t ? r.needsUpdate = !0 : r.lights && n.lightsHash !== o.state.hash ? r.needsUpdate = !0 : void 0 === n.numClippingPlanes || n.numClippingPlanes === Ae.numPlanes && n.numIntersection === Ae.numIntersection || (r.needsUpdate = !0)), r.needsUpdate && (M(r, t, i), r.needsUpdate = !1);\n          var s = !1,\n              c = !1,\n              l = !1,\n              u = n.program,\n              h = u.getUniforms(),\n              d = n.shader.uniforms;\n\n          if (Oe.useProgram(u.program) && (s = !0, c = !0, l = !0), r.id !== de && (de = r.id, c = !0), s || e !== fe) {\n            if (h.setValue(oe, \"projectionMatrix\", e.projectionMatrix), Ie.logarithmicDepthBuffer && h.setValue(oe, \"logDepthBufFC\", 2 / (Math.log(e.far + 1) / Math.LN2)), fe !== (me || e) && (fe = me || e, c = !0, l = !0), r.isShaderMaterial || r.isMeshPhongMaterial || r.isMeshStandardMaterial || r.envMap) {\n              var f = h.map.cameraPosition;\n              void 0 !== f && f.setValue(oe, Pe.setFromMatrixPosition(e.matrixWorld));\n            }\n\n            (r.isMeshPhongMaterial || r.isMeshLambertMaterial || r.isMeshBasicMaterial || r.isMeshStandardMaterial || r.isShaderMaterial || r.skinning) && h.setValue(oe, \"viewMatrix\", e.matrixWorldInverse);\n          }\n\n          if (r.skinning) {\n            h.setOptional(oe, i, \"bindMatrix\"), h.setOptional(oe, i, \"bindMatrixInverse\");\n            var m = i.skeleton;\n\n            if (m) {\n              var v = m.bones;\n\n              if (Ie.floatVertexTextures) {\n                if (void 0 === m.boneTexture) {\n                  var g = Math.sqrt(4 * v.length);\n                  g = zs.ceilPowerOfTwo(g), g = Math.max(g, 4);\n                  var y = new Float32Array(g * g * 4);\n                  y.set(m.boneMatrices);\n                  var x = new p(y, g, g, Ja, ja);\n                  x.needsUpdate = !0, m.boneMatrices = y, m.boneTexture = x, m.boneTextureSize = g;\n                }\n\n                h.setValue(oe, \"boneTexture\", m.boneTexture), h.setValue(oe, \"boneTextureSize\", m.boneTextureSize);\n              } else h.setOptional(oe, m, \"boneMatrices\");\n            }\n          }\n\n          return c && (h.setValue(oe, \"toneMappingExposure\", ce.toneMappingExposure), h.setValue(oe, \"toneMappingWhitePoint\", ce.toneMappingWhitePoint), r.lights && z(d, l), t && r.fog && C(d, t), r.isMeshBasicMaterial ? S(d, r) : r.isMeshLambertMaterial ? (S(d, r), R(d, r)) : r.isMeshPhongMaterial ? (S(d, r), r.isMeshToonMaterial ? D(d, r) : P(d, r)) : r.isMeshStandardMaterial ? (S(d, r), r.isMeshPhysicalMaterial ? I(d, r) : U(d, r)) : r.isMeshDepthMaterial ? (S(d, r), O(d, r)) : r.isMeshDistanceMaterial ? (S(d, r), N(d, r)) : r.isMeshNormalMaterial ? (S(d, r), F(d, r)) : r.isLineBasicMaterial ? (T(d, r), r.isLineDashedMaterial && A(d, r)) : r.isPointsMaterial ? L(d, r) : r.isShadowMaterial && (d.color.value = r.color, d.opacity.value = r.opacity), void 0 !== d.ltc_1 && (d.ltc_1.value = Vs.LTC_1), void 0 !== d.ltc_2 && (d.ltc_2.value = Vs.LTC_2), je.upload(oe, n.uniformsList, d, ce)), r.isShaderMaterial && !0 === r.uniformsNeedUpdate && (je.upload(oe, n.uniformsList, d, ce), r.uniformsNeedUpdate = !1), h.setValue(oe, \"modelViewMatrix\", i.modelViewMatrix), h.setValue(oe, \"normalMatrix\", i.normalMatrix), h.setValue(oe, \"modelMatrix\", i.matrixWorld), u;\n        }\n\n        function S(e, t) {\n          e.opacity.value = t.opacity, t.color && (e.diffuse.value = t.color), t.emissive && e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity), t.map && (e.map.value = t.map), t.alphaMap && (e.alphaMap.value = t.alphaMap), t.specularMap && (e.specularMap.value = t.specularMap), t.envMap && (e.envMap.value = t.envMap, e.flipEnvMap.value = t.envMap && t.envMap.isCubeTexture ? -1 : 1, e.reflectivity.value = t.reflectivity, e.refractionRatio.value = t.refractionRatio, e.maxMipLevel.value = Fe.get(t.envMap).__maxMipLevel), t.lightMap && (e.lightMap.value = t.lightMap, e.lightMapIntensity.value = t.lightMapIntensity), t.aoMap && (e.aoMap.value = t.aoMap, e.aoMapIntensity.value = t.aoMapIntensity);\n          var r;\n          t.map ? r = t.map : t.specularMap ? r = t.specularMap : t.displacementMap ? r = t.displacementMap : t.normalMap ? r = t.normalMap : t.bumpMap ? r = t.bumpMap : t.roughnessMap ? r = t.roughnessMap : t.metalnessMap ? r = t.metalnessMap : t.alphaMap ? r = t.alphaMap : t.emissiveMap && (r = t.emissiveMap), void 0 !== r && (r.isWebGLRenderTarget && (r = r.texture), !0 === r.matrixAutoUpdate && r.updateMatrix(), e.uvTransform.value.copy(r.matrix));\n        }\n\n        function T(e, t) {\n          e.diffuse.value = t.color, e.opacity.value = t.opacity;\n        }\n\n        function A(e, t) {\n          e.dashSize.value = t.dashSize, e.totalSize.value = t.dashSize + t.gapSize, e.scale.value = t.scale;\n        }\n\n        function L(e, t) {\n          e.diffuse.value = t.color, e.opacity.value = t.opacity, e.size.value = t.size * we, e.scale.value = .5 * be, e.map.value = t.map, null !== t.map && (!0 === t.map.matrixAutoUpdate && t.map.updateMatrix(), e.uvTransform.value.copy(t.map.matrix));\n        }\n\n        function C(e, t) {\n          e.fogColor.value = t.color, t.isFog ? (e.fogNear.value = t.near, e.fogFar.value = t.far) : t.isFogExp2 && (e.fogDensity.value = t.density);\n        }\n\n        function R(e, t) {\n          t.emissiveMap && (e.emissiveMap.value = t.emissiveMap);\n        }\n\n        function P(e, t) {\n          e.specular.value = t.specular, e.shininess.value = Math.max(t.shininess, 1e-4), t.emissiveMap && (e.emissiveMap.value = t.emissiveMap), t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale), t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale)), t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias);\n        }\n\n        function D(e, t) {\n          P(e, t), t.gradientMap && (e.gradientMap.value = t.gradientMap);\n        }\n\n        function U(e, t) {\n          e.roughness.value = t.roughness, e.metalness.value = t.metalness, t.roughnessMap && (e.roughnessMap.value = t.roughnessMap), t.metalnessMap && (e.metalnessMap.value = t.metalnessMap), t.emissiveMap && (e.emissiveMap.value = t.emissiveMap), t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale), t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale)), t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias), t.envMap && (e.envMapIntensity.value = t.envMapIntensity);\n        }\n\n        function I(e, t) {\n          e.clearCoat.value = t.clearCoat, e.clearCoatRoughness.value = t.clearCoatRoughness, U(e, t);\n        }\n\n        function O(e, t) {\n          t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias);\n        }\n\n        function N(e, t) {\n          t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias), e.referencePosition.value.copy(t.referencePosition), e.nearDistance.value = t.nearDistance, e.farDistance.value = t.farDistance;\n        }\n\n        function F(e, t) {\n          t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale), t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale)), t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias);\n        }\n\n        function z(e, t) {\n          e.ambientLightColor.needsUpdate = t, e.directionalLights.needsUpdate = t, e.pointLights.needsUpdate = t, e.spotLights.needsUpdate = t, e.rectAreaLights.needsUpdate = t, e.hemisphereLights.needsUpdate = t;\n        }\n\n        function B() {\n          var e = xe;\n          return e >= Ie.maxTextures && console.warn(\"THREE.WebGLRenderer: Trying to use \" + e + \" texture units while this GPU supports only \" + Ie.maxTextures), xe += 1, e;\n        }\n\n        console.log(\"THREE.WebGLRenderer\", Mo), e = e || {};\n        var G = void 0 !== e.canvas ? e.canvas : document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"canvas\"),\n            H = void 0 !== e.context ? e.context : null,\n            j = void 0 !== e.alpha && e.alpha,\n            V = void 0 === e.depth || e.depth,\n            k = void 0 === e.stencil || e.stencil,\n            W = void 0 !== e.antialias && e.antialias,\n            X = void 0 === e.premultipliedAlpha || e.premultipliedAlpha,\n            q = void 0 !== e.preserveDrawingBuffer && e.preserveDrawingBuffer,\n            Y = void 0 !== e.powerPreference ? e.powerPreference : \"default\",\n            Z = null,\n            J = null;\n        this.domElement = G, this.context = null, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.gammaFactor = 2, this.gammaInput = !1, this.gammaOutput = !1, this.physicallyCorrectLights = !1, this.toneMapping = va, this.toneMappingExposure = 1, this.toneMappingWhitePoint = 1, this.maxMorphTargets = 8, this.maxMorphNormals = 4;\n        var oe,\n            ce = this,\n            le = !1,\n            ue = null,\n            he = null,\n            de = -1,\n            pe = \"\",\n            fe = null,\n            me = null,\n            ve = new u(),\n            ge = new u(),\n            ye = null,\n            xe = 0,\n            _e = G.width,\n            be = G.height,\n            we = 1,\n            Me = new u(0, 0, _e, be),\n            Ee = new u(0, 0, _e, be),\n            Se = !1,\n            Te = new g(),\n            Ae = new ee(),\n            Le = !1,\n            Ce = !1,\n            Re = new o(),\n            Pe = new s();\n\n        try {\n          var De = {\n            alpha: j,\n            depth: V,\n            stencil: k,\n            antialias: W,\n            premultipliedAlpha: X,\n            preserveDrawingBuffer: q,\n            powerPreference: Y\n          };\n          if (G.addEventListener(\"webglcontextlost\", i, !1), G.addEventListener(\"webglcontextrestored\", n, !1), null === (oe = H || G.getContext(\"webgl\", De) || G.getContext(\"experimental-webgl\", De))) throw null !== G.getContext(\"webgl\") ? new Error(\"Error creating WebGL context with your selected attributes.\") : new Error(\"Error creating WebGL context.\");\n          void 0 === oe.getShaderPrecisionFormat && (oe.getShaderPrecisionFormat = function () {\n            return {\n              rangeMin: 1,\n              rangeMax: 1,\n              precision: 1\n            };\n          });\n        } catch (e) {\n          console.error(\"THREE.WebGLRenderer: \" + e.message);\n        }\n\n        var Ue, Ie, Oe, Ne, Fe, ze, Be, Ge, He, Ve, ke, We, Xe, qe, Ye, Ze, Je, Ke;\n        r();\n        var Qe = new Et(ce);\n        this.vr = Qe;\n        var $e = new vt(ce, He, Ie.maxTextureSize);\n        this.shadowMap = $e, this.getContext = function () {\n          return oe;\n        }, this.getContextAttributes = function () {\n          return oe.getContextAttributes();\n        }, this.forceContextLoss = function () {\n          var e = Ue.get(\"WEBGL_lose_context\");\n          e && e.loseContext();\n        }, this.forceContextRestore = function () {\n          var e = Ue.get(\"WEBGL_lose_context\");\n          e && e.restoreContext();\n        }, this.getPixelRatio = function () {\n          return we;\n        }, this.setPixelRatio = function (e) {\n          void 0 !== e && (we = e, this.setSize(_e, be, !1));\n        }, this.getSize = function () {\n          return {\n            width: _e,\n            height: be\n          };\n        }, this.setSize = function (e, t, r) {\n          var i = Qe.getDevice();\n          if (i && i.isPresenting) return void console.warn(\"THREE.WebGLRenderer: Can't change size while VR device is presenting.\");\n          _e = e, be = t, G.width = e * we, G.height = t * we, !1 !== r && (G.style.width = e + \"px\", G.style.height = t + \"px\"), this.setViewport(0, 0, e, t);\n        }, this.getDrawingBufferSize = function () {\n          return {\n            width: _e * we,\n            height: be * we\n          };\n        }, this.setDrawingBufferSize = function (e, t, r) {\n          _e = e, be = t, we = r, G.width = e * r, G.height = t * r, this.setViewport(0, 0, e, t);\n        }, this.getCurrentViewport = function () {\n          return ve;\n        }, this.setViewport = function (e, t, r, i) {\n          Me.set(e, be - t - i, r, i), Oe.viewport(ve.copy(Me).multiplyScalar(we));\n        }, this.setScissor = function (e, t, r, i) {\n          Ee.set(e, be - t - i, r, i), Oe.scissor(ge.copy(Ee).multiplyScalar(we));\n        }, this.setScissorTest = function (e) {\n          Oe.setScissorTest(Se = e);\n        }, this.getClearColor = function () {\n          return Xe.getClearColor();\n        }, this.setClearColor = function () {\n          Xe.setClearColor.apply(Xe, arguments);\n        }, this.getClearAlpha = function () {\n          return Xe.getClearAlpha();\n        }, this.setClearAlpha = function () {\n          Xe.setClearAlpha.apply(Xe, arguments);\n        }, this.clear = function (e, t, r) {\n          var i = 0;\n          (void 0 === e || e) && (i |= oe.COLOR_BUFFER_BIT), (void 0 === t || t) && (i |= oe.DEPTH_BUFFER_BIT), (void 0 === r || r) && (i |= oe.STENCIL_BUFFER_BIT), oe.clear(i);\n        }, this.clearColor = function () {\n          this.clear(!0, !1, !1);\n        }, this.clearDepth = function () {\n          this.clear(!1, !0, !1);\n        }, this.clearStencil = function () {\n          this.clear(!1, !1, !0);\n        }, this.clearTarget = function (e, t, r, i) {\n          this.setRenderTarget(e), this.clear(t, r, i);\n        }, this.dispose = function () {\n          G.removeEventListener(\"webglcontextlost\", i, !1), G.removeEventListener(\"webglcontextrestored\", n, !1), ke.dispose(), We.dispose(), Fe.dispose(), He.dispose(), Qe.dispose(), m();\n        }, this.renderBufferImmediate = function (e, t, r) {\n          Oe.initAttributes();\n          var i = Fe.get(e);\n          e.hasPositions && !i.position && (i.position = oe.createBuffer()), e.hasNormals && !i.normal && (i.normal = oe.createBuffer()), e.hasUvs && !i.uv && (i.uv = oe.createBuffer()), e.hasColors && !i.color && (i.color = oe.createBuffer());\n          var n = t.getAttributes();\n\n          if (e.hasPositions && (oe.bindBuffer(oe.ARRAY_BUFFER, i.position), oe.bufferData(oe.ARRAY_BUFFER, e.positionArray, oe.DYNAMIC_DRAW), Oe.enableAttribute(n.position), oe.vertexAttribPointer(n.position, 3, oe.FLOAT, !1, 0, 0)), e.hasNormals) {\n            if (oe.bindBuffer(oe.ARRAY_BUFFER, i.normal), !r.isMeshPhongMaterial && !r.isMeshStandardMaterial && !r.isMeshNormalMaterial && !0 === r.flatShading) for (var o = 0, a = 3 * e.count; o < a; o += 9) {\n              var s = e.normalArray,\n                  c = (s[o + 0] + s[o + 3] + s[o + 6]) / 3,\n                  l = (s[o + 1] + s[o + 4] + s[o + 7]) / 3,\n                  u = (s[o + 2] + s[o + 5] + s[o + 8]) / 3;\n              s[o + 0] = c, s[o + 1] = l, s[o + 2] = u, s[o + 3] = c, s[o + 4] = l, s[o + 5] = u, s[o + 6] = c, s[o + 7] = l, s[o + 8] = u;\n            }\n            oe.bufferData(oe.ARRAY_BUFFER, e.normalArray, oe.DYNAMIC_DRAW), Oe.enableAttribute(n.normal), oe.vertexAttribPointer(n.normal, 3, oe.FLOAT, !1, 0, 0);\n          }\n\n          e.hasUvs && r.map && (oe.bindBuffer(oe.ARRAY_BUFFER, i.uv), oe.bufferData(oe.ARRAY_BUFFER, e.uvArray, oe.DYNAMIC_DRAW), Oe.enableAttribute(n.uv), oe.vertexAttribPointer(n.uv, 2, oe.FLOAT, !1, 0, 0)), e.hasColors && r.vertexColors !== Uo && (oe.bindBuffer(oe.ARRAY_BUFFER, i.color), oe.bufferData(oe.ARRAY_BUFFER, e.colorArray, oe.DYNAMIC_DRAW), Oe.enableAttribute(n.color), oe.vertexAttribPointer(n.color, 3, oe.FLOAT, !1, 0, 0)), Oe.disableUnusedAttributes(), oe.drawArrays(oe.TRIANGLES, 0, e.count), e.count = 0;\n        }, this.renderBufferDirect = function (e, r, i, n, o, a) {\n          var s = o.isMesh && o.matrixWorld.determinant() < 0;\n          Oe.setMaterial(n, s);\n          var c = E(e, r, n, o),\n              l = i.id + \"_\" + c.id + \"_\" + (!0 === n.wireframe),\n              u = !1;\n          l !== pe && (pe = l, u = !0), o.morphTargetInfluences && (qe.update(o, i, n, c), u = !0);\n          var h = i.index,\n              p = i.attributes.position,\n              f = 1;\n          !0 === n.wireframe && (h = Ge.getWireframeAttribute(i), f = 2);\n          var m,\n              v = Ye;\n          null !== h && (m = Be.get(h), v = Ze, v.setIndex(m)), u && (d(n, c, i), null !== h && oe.bindBuffer(oe.ELEMENT_ARRAY_BUFFER, m.buffer));\n          var g = 1 / 0;\n          null !== h ? g = h.count : void 0 !== p && (g = p.count);\n\n          var y = i.drawRange.start * f,\n              x = i.drawRange.count * f,\n              _ = null !== a ? a.start * f : 0,\n              b = null !== a ? a.count * f : 1 / 0,\n              w = Math.max(y, _),\n              M = Math.min(g, y + x, _ + b) - 1,\n              S = Math.max(0, M - w + 1);\n\n          if (0 !== S) {\n            if (o.isMesh) {\n              if (!0 === n.wireframe) Oe.setLineWidth(n.wireframeLinewidth * t()), v.setMode(oe.LINES);else switch (o.drawMode) {\n                case Ts:\n                  v.setMode(oe.TRIANGLES);\n                  break;\n\n                case As:\n                  v.setMode(oe.TRIANGLE_STRIP);\n                  break;\n\n                case Ls:\n                  v.setMode(oe.TRIANGLE_FAN);\n              }\n            } else if (o.isLine) {\n              var T = n.linewidth;\n              void 0 === T && (T = 1), Oe.setLineWidth(T * t()), o.isLineSegments ? v.setMode(oe.LINES) : o.isLineLoop ? v.setMode(oe.LINE_LOOP) : v.setMode(oe.LINE_STRIP);\n            } else o.isPoints && v.setMode(oe.POINTS);\n            i && i.isInstancedBufferGeometry ? i.maxInstancedCount > 0 && v.renderInstances(i, w, S) : v.render(w, S);\n          }\n        }, this.compile = function (e, t) {\n          J = We.get(e, t), J.init(), e.traverse(function (e) {\n            e.isLight && (J.pushLight(e), e.castShadow && J.pushShadow(e));\n          }), J.setupLights(t), e.traverse(function (t) {\n            if (t.material) if (Array.isArray(t.material)) for (var r = 0; r < t.material.length; r++) {\n              M(t.material[r], e.fog, t);\n            } else M(t.material, e.fog, t);\n          });\n        };\n        var et = !1,\n            tt = null;\n        this.animate = function (e) {\n          tt = e, null !== tt ? f() : m();\n        }, this.render = function (e, t, r, i) {\n          if (!t || !t.isCamera) return void console.error(\"THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.\");\n\n          if (!le) {\n            pe = \"\", de = -1, fe = null, !0 === e.autoUpdate && e.updateMatrixWorld(), null === t.parent && t.updateMatrixWorld(), Qe.enabled && (t = Qe.getCamera(t)), J = We.get(e, t), J.init(), e.onBeforeRender(ce, e, t, r), Re.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), Te.setFromMatrix(Re), Ce = this.localClippingEnabled, Le = Ae.init(this.clippingPlanes, Ce, t), Z = ke.get(e, t), Z.init(), _(e, t, ce.sortObjects), !0 === ce.sortObjects && Z.sort(), Le && Ae.beginShadows();\n            var n = J.state.shadowsArray;\n            $e.render(n, e, t), J.setupLights(t), Le && Ae.endShadows(), this.info.autoReset && this.info.reset(), void 0 === r && (r = null), this.setRenderTarget(r), Xe.render(Z, e, t, i);\n            var o = Z.opaque,\n                a = Z.transparent;\n\n            if (e.overrideMaterial) {\n              var s = e.overrideMaterial;\n              o.length && b(o, e, t, s), a.length && b(a, e, t, s);\n            } else o.length && b(o, e, t), a.length && b(a, e, t);\n\n            var c = J.state.spritesArray;\n            Je.render(c, e, t), r && ze.updateRenderTargetMipmap(r), Oe.buffers.depth.setTest(!0), Oe.buffers.depth.setMask(!0), Oe.buffers.color.setMask(!0), Oe.setPolygonOffset(!1), e.onAfterRender(ce, e, t), Qe.enabled && Qe.submitFrame(), Z = null, J = null;\n          }\n        }, this.allocTextureUnit = B, this.setTexture2D = function () {\n          var e = !1;\n          return function (t, r) {\n            t && t.isWebGLRenderTarget && (e || (console.warn(\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\"), e = !0), t = t.texture), ze.setTexture2D(t, r);\n          };\n        }(), this.setTexture = function () {\n          var e = !1;\n          return function (t, r) {\n            e || (console.warn(\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\"), e = !0), ze.setTexture2D(t, r);\n          };\n        }(), this.setTextureCube = function () {\n          var e = !1;\n          return function (t, r) {\n            t && t.isWebGLRenderTargetCube && (e || (console.warn(\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\"), e = !0), t = t.texture), t && t.isCubeTexture || Array.isArray(t.image) && 6 === t.image.length ? ze.setTextureCube(t, r) : ze.setTextureCubeDynamic(t, r);\n          };\n        }(), this.getRenderTarget = function () {\n          return ue;\n        }, this.setRenderTarget = function (e) {\n          ue = e, e && void 0 === Fe.get(e).__webglFramebuffer && ze.setupRenderTarget(e);\n          var t = null,\n              r = !1;\n\n          if (e) {\n            var i = Fe.get(e).__webglFramebuffer;\n\n            e.isWebGLRenderTargetCube ? (t = i[e.activeCubeFace], r = !0) : t = i, ve.copy(e.viewport), ge.copy(e.scissor), ye = e.scissorTest;\n          } else ve.copy(Me).multiplyScalar(we), ge.copy(Ee).multiplyScalar(we), ye = Se;\n\n          if (he !== t && (oe.bindFramebuffer(oe.FRAMEBUFFER, t), he = t), Oe.viewport(ve), Oe.scissor(ge), Oe.setScissorTest(ye), r) {\n            var n = Fe.get(e.texture);\n            oe.framebufferTexture2D(oe.FRAMEBUFFER, oe.COLOR_ATTACHMENT0, oe.TEXTURE_CUBE_MAP_POSITIVE_X + e.activeCubeFace, n.__webglTexture, e.activeMipMapLevel);\n          }\n        }, this.readRenderTargetPixels = function (e, t, r, i, n, o) {\n          if (!e || !e.isWebGLRenderTarget) return void console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.\");\n\n          var a = Fe.get(e).__webglFramebuffer;\n\n          if (a) {\n            var s = !1;\n            a !== he && (oe.bindFramebuffer(oe.FRAMEBUFFER, a), s = !0);\n\n            try {\n              var c = e.texture,\n                  l = c.format,\n                  u = c.type;\n              if (l !== Ja && Ke.convert(l) !== oe.getParameter(oe.IMPLEMENTATION_COLOR_READ_FORMAT)) return void console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.\");\n              if (!(u === Na || Ke.convert(u) === oe.getParameter(oe.IMPLEMENTATION_COLOR_READ_TYPE) || u === ja && (Ue.get(\"OES_texture_float\") || Ue.get(\"WEBGL_color_buffer_float\")) || u === Va && Ue.get(\"EXT_color_buffer_half_float\"))) return void console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.\");\n              oe.checkFramebufferStatus(oe.FRAMEBUFFER) === oe.FRAMEBUFFER_COMPLETE ? t >= 0 && t <= e.width - i && r >= 0 && r <= e.height - n && oe.readPixels(t, r, i, n, Ke.convert(l), Ke.convert(u), o) : console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.\");\n            } finally {\n              s && oe.bindFramebuffer(oe.FRAMEBUFFER, he);\n            }\n          }\n        }, this.copyFramebufferToTexture = function (e, t, r) {\n          var i = t.image.width,\n              n = t.image.height,\n              o = Ke.convert(t.format);\n          this.setTexture2D(t, 0), oe.copyTexImage2D(oe.TEXTURE_2D, r || 0, o, e.x, e.y, i, n, 0);\n        }, this.copyTextureToTexture = function (e, t, r, i) {\n          var n = t.image.width,\n              o = t.image.height,\n              a = Ke.convert(r.format),\n              s = Ke.convert(r.type),\n              c = t.isDataTexture ? t.image.data : t.image;\n          this.setTexture2D(r, 0), oe.texSubImage2D(oe.TEXTURE_2D, i || 0, e.x, e.y, n, o, a, s, c);\n        };\n      }\n\n      function Tt(e, t) {\n        this.name = \"\", this.color = new y(e), this.density = void 0 !== t ? t : 25e-5;\n      }\n\n      function At(e, t, r) {\n        this.name = \"\", this.color = new y(e), this.near = void 0 !== t ? t : 1, this.far = void 0 !== r ? r : 1e3;\n      }\n\n      function Lt() {\n        w.call(this), this.type = \"Scene\", this.background = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0;\n      }\n\n      function Ct(e) {\n        k.call(this), this.type = \"SpriteMaterial\", this.color = new y(16777215), this.map = null, this.rotation = 0, this.fog = !1, this.lights = !1, this.setValues(e);\n      }\n\n      function Rt(e) {\n        w.call(this), this.type = \"Sprite\", this.material = void 0 !== e ? e : new Ct(), this.center = new n(.5, .5);\n      }\n\n      function Pt() {\n        w.call(this), this.type = \"LOD\", Object.defineProperties(this, {\n          levels: {\n            enumerable: !0,\n            value: []\n          }\n        });\n      }\n\n      function Dt(e, t) {\n        if (e = e || [], this.bones = e.slice(0), this.boneMatrices = new Float32Array(16 * this.bones.length), void 0 === t) this.calculateInverses();else if (this.bones.length === t.length) this.boneInverses = t.slice(0);else {\n          console.warn(\"THREE.Skeleton boneInverses is the wrong length.\"), this.boneInverses = [];\n\n          for (var r = 0, i = this.bones.length; r < i; r++) {\n            this.boneInverses.push(new o());\n          }\n        }\n      }\n\n      function Ut() {\n        w.call(this), this.type = \"Bone\";\n      }\n\n      function It(e, t) {\n        J.call(this, e, t), this.type = \"SkinnedMesh\", this.bindMode = \"attached\", this.bindMatrix = new o(), this.bindMatrixInverse = new o();\n        var r = this.initBones(),\n            i = new Dt(r);\n        this.bind(i, this.matrixWorld), this.normalizeSkinWeights();\n      }\n\n      function Ot(e) {\n        k.call(this), this.type = \"LineBasicMaterial\", this.color = new y(16777215), this.linewidth = 1, this.linecap = \"round\", this.linejoin = \"round\", this.lights = !1, this.setValues(e);\n      }\n\n      function Nt(e, t, r) {\n        if (1 === r) return console.warn(\"THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.\"), new Ft(e, t);\n        w.call(this), this.type = \"Line\", this.geometry = void 0 !== e ? e : new B(), this.material = void 0 !== t ? t : new Ot({\n          color: 16777215 * Math.random()\n        });\n      }\n\n      function Ft(e, t) {\n        Nt.call(this, e, t), this.type = \"LineSegments\";\n      }\n\n      function zt(e, t) {\n        Nt.call(this, e, t), this.type = \"LineLoop\";\n      }\n\n      function Bt(e) {\n        k.call(this), this.type = \"PointsMaterial\", this.color = new y(16777215), this.map = null, this.size = 1, this.sizeAttenuation = !0, this.lights = !1, this.setValues(e);\n      }\n\n      function Gt(e, t) {\n        w.call(this), this.type = \"Points\", this.geometry = void 0 !== e ? e : new B(), this.material = void 0 !== t ? t : new Bt({\n          color: 16777215 * Math.random()\n        });\n      }\n\n      function Ht() {\n        w.call(this), this.type = \"Group\";\n      }\n\n      function jt(e, t, r, i, n, o, a, s, c) {\n        l.call(this, e, t, r, i, n, o, a, s, c), this.generateMipmaps = !1;\n      }\n\n      function Vt(e, t, r, i, n, o, a, s, c, u, h, d) {\n        l.call(this, null, o, a, s, c, u, i, n, h, d), this.image = {\n          width: t,\n          height: r\n        }, this.mipmaps = e, this.flipY = !1, this.generateMipmaps = !1;\n      }\n\n      function kt(e, t, r, i, n, o, a, s, c, u) {\n        if ((u = void 0 !== u ? u : $a) !== $a && u !== es) throw new Error(\"DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat\");\n        void 0 === r && u === $a && (r = Ba), void 0 === r && u === es && (r = qa), l.call(this, null, i, n, o, a, s, u, r, c), this.image = {\n          width: e,\n          height: t\n        }, this.magFilter = void 0 !== a ? a : Ra, this.minFilter = void 0 !== s ? s : Ra, this.flipY = !1, this.generateMipmaps = !1;\n      }\n\n      function Wt(e) {\n        B.call(this), this.type = \"WireframeGeometry\";\n        var t,\n            r,\n            i,\n            n,\n            o,\n            a,\n            c,\n            l,\n            u,\n            h,\n            d = [],\n            p = [0, 0],\n            f = {},\n            m = [\"a\", \"b\", \"c\"];\n\n        if (e && e.isGeometry) {\n          var v = e.faces;\n\n          for (t = 0, i = v.length; t < i; t++) {\n            var g = v[t];\n\n            for (r = 0; r < 3; r++) {\n              c = g[m[r]], l = g[m[(r + 1) % 3]], p[0] = Math.min(c, l), p[1] = Math.max(c, l), u = p[0] + \",\" + p[1], void 0 === f[u] && (f[u] = {\n                index1: p[0],\n                index2: p[1]\n              });\n            }\n          }\n\n          for (u in f) {\n            a = f[u], h = e.vertices[a.index1], d.push(h.x, h.y, h.z), h = e.vertices[a.index2], d.push(h.x, h.y, h.z);\n          }\n        } else if (e && e.isBufferGeometry) {\n          var y, x, _, b, w, M, E, S;\n\n          if (h = new s(), null !== e.index) {\n            for (y = e.attributes.position, x = e.index, _ = e.groups, 0 === _.length && (_ = [{\n              start: 0,\n              count: x.count,\n              materialIndex: 0\n            }]), n = 0, o = _.length; n < o; ++n) {\n              for (b = _[n], w = b.start, M = b.count, t = w, i = w + M; t < i; t += 3) {\n                for (r = 0; r < 3; r++) {\n                  c = x.getX(t + r), l = x.getX(t + (r + 1) % 3), p[0] = Math.min(c, l), p[1] = Math.max(c, l), u = p[0] + \",\" + p[1], void 0 === f[u] && (f[u] = {\n                    index1: p[0],\n                    index2: p[1]\n                  });\n                }\n              }\n            }\n\n            for (u in f) {\n              a = f[u], h.fromBufferAttribute(y, a.index1), d.push(h.x, h.y, h.z), h.fromBufferAttribute(y, a.index2), d.push(h.x, h.y, h.z);\n            }\n          } else for (y = e.attributes.position, t = 0, i = y.count / 3; t < i; t++) {\n            for (r = 0; r < 3; r++) {\n              E = 3 * t + r, h.fromBufferAttribute(y, E), d.push(h.x, h.y, h.z), S = 3 * t + (r + 1) % 3, h.fromBufferAttribute(y, S), d.push(h.x, h.y, h.z);\n            }\n          }\n        }\n\n        this.addAttribute(\"position\", new O(d, 3));\n      }\n\n      function Xt(e, t, r) {\n        T.call(this), this.type = \"ParametricGeometry\", this.parameters = {\n          func: e,\n          slices: t,\n          stacks: r\n        }, this.fromBufferGeometry(new qt(e, t, r)), this.mergeVertices();\n      }\n\n      function qt(e, t, r) {\n        B.call(this), this.type = \"ParametricBufferGeometry\", this.parameters = {\n          func: e,\n          slices: t,\n          stacks: r\n        };\n        var i,\n            n,\n            o = [],\n            a = [],\n            c = [],\n            l = [],\n            u = new s(),\n            h = new s(),\n            d = new s(),\n            p = new s(),\n            f = new s(),\n            m = t + 1;\n\n        for (i = 0; i <= r; i++) {\n          var v = i / r;\n\n          for (n = 0; n <= t; n++) {\n            var g = n / t;\n            e(g, v, h), a.push(h.x, h.y, h.z), g - 1e-5 >= 0 ? (e(g - 1e-5, v, d), p.subVectors(h, d)) : (e(g + 1e-5, v, d), p.subVectors(d, h)), v - 1e-5 >= 0 ? (e(g, v - 1e-5, d), f.subVectors(h, d)) : (e(g, v + 1e-5, d), f.subVectors(d, h)), u.crossVectors(p, f).normalize(), c.push(u.x, u.y, u.z), l.push(g, v);\n          }\n        }\n\n        for (i = 0; i < r; i++) {\n          for (n = 0; n < t; n++) {\n            var y = i * m + n,\n                x = i * m + n + 1,\n                _ = (i + 1) * m + n + 1,\n                b = (i + 1) * m + n;\n\n            o.push(y, x, b), o.push(x, _, b);\n          }\n        }\n\n        this.setIndex(o), this.addAttribute(\"position\", new O(a, 3)), this.addAttribute(\"normal\", new O(c, 3)), this.addAttribute(\"uv\", new O(l, 2));\n      }\n\n      function Yt(e, t, r, i) {\n        T.call(this), this.type = \"PolyhedronGeometry\", this.parameters = {\n          vertices: e,\n          indices: t,\n          radius: r,\n          detail: i\n        }, this.fromBufferGeometry(new Zt(e, t, r, i)), this.mergeVertices();\n      }\n\n      function Zt(e, t, r, i) {\n        function o(e, t, r, i) {\n          var n,\n              o,\n              a = Math.pow(2, i),\n              s = [];\n\n          for (n = 0; n <= a; n++) {\n            s[n] = [];\n            var l = e.clone().lerp(r, n / a),\n                u = t.clone().lerp(r, n / a),\n                h = a - n;\n\n            for (o = 0; o <= h; o++) {\n              s[n][o] = 0 === o && n === a ? l : l.clone().lerp(u, o / h);\n            }\n          }\n\n          for (n = 0; n < a; n++) {\n            for (o = 0; o < 2 * (a - n) - 1; o++) {\n              var d = Math.floor(o / 2);\n              o % 2 == 0 ? (c(s[n][d + 1]), c(s[n + 1][d]), c(s[n][d])) : (c(s[n][d + 1]), c(s[n + 1][d + 1]), c(s[n + 1][d]));\n            }\n          }\n        }\n\n        function a() {\n          for (var e = 0; e < m.length; e += 6) {\n            var t = m[e + 0],\n                r = m[e + 2],\n                i = m[e + 4],\n                n = Math.max(t, r, i),\n                o = Math.min(t, r, i);\n            n > .9 && o < .1 && (t < .2 && (m[e + 0] += 1), r < .2 && (m[e + 2] += 1), i < .2 && (m[e + 4] += 1));\n          }\n        }\n\n        function c(e) {\n          f.push(e.x, e.y, e.z);\n        }\n\n        function l(t, r) {\n          var i = 3 * t;\n          r.x = e[i + 0], r.y = e[i + 1], r.z = e[i + 2];\n        }\n\n        function u() {\n          for (var e = new s(), t = new s(), r = new s(), i = new s(), o = new n(), a = new n(), c = new n(), l = 0, u = 0; l < f.length; l += 9, u += 6) {\n            e.set(f[l + 0], f[l + 1], f[l + 2]), t.set(f[l + 3], f[l + 4], f[l + 5]), r.set(f[l + 6], f[l + 7], f[l + 8]), o.set(m[u + 0], m[u + 1]), a.set(m[u + 2], m[u + 3]), c.set(m[u + 4], m[u + 5]), i.copy(e).add(t).add(r).divideScalar(3);\n            var p = d(i);\n            h(o, u + 0, e, p), h(a, u + 2, t, p), h(c, u + 4, r, p);\n          }\n        }\n\n        function h(e, t, r, i) {\n          i < 0 && 1 === e.x && (m[t] = e.x - 1), 0 === r.x && 0 === r.z && (m[t] = i / 2 / Math.PI + .5);\n        }\n\n        function d(e) {\n          return Math.atan2(e.z, -e.x);\n        }\n\n        function p(e) {\n          return Math.atan2(-e.y, Math.sqrt(e.x * e.x + e.z * e.z));\n        }\n\n        B.call(this), this.type = \"PolyhedronBufferGeometry\", this.parameters = {\n          vertices: e,\n          indices: t,\n          radius: r,\n          detail: i\n        }, r = r || 1, i = i || 0;\n        var f = [],\n            m = [];\n        !function (e) {\n          for (var r = new s(), i = new s(), n = new s(), a = 0; a < t.length; a += 3) {\n            l(t[a + 0], r), l(t[a + 1], i), l(t[a + 2], n), o(r, i, n, e);\n          }\n        }(i), function (e) {\n          for (var t = new s(), r = 0; r < f.length; r += 3) {\n            t.x = f[r + 0], t.y = f[r + 1], t.z = f[r + 2], t.normalize().multiplyScalar(e), f[r + 0] = t.x, f[r + 1] = t.y, f[r + 2] = t.z;\n          }\n        }(r), function () {\n          for (var e = new s(), t = 0; t < f.length; t += 3) {\n            e.x = f[t + 0], e.y = f[t + 1], e.z = f[t + 2];\n            var r = d(e) / 2 / Math.PI + .5,\n                i = p(e) / Math.PI + .5;\n            m.push(r, 1 - i);\n          }\n\n          u(), a();\n        }(), this.addAttribute(\"position\", new O(f, 3)), this.addAttribute(\"normal\", new O(f.slice(), 3)), this.addAttribute(\"uv\", new O(m, 2)), 0 === i ? this.computeVertexNormals() : this.normalizeNormals();\n      }\n\n      function Jt(e, t) {\n        T.call(this), this.type = \"TetrahedronGeometry\", this.parameters = {\n          radius: e,\n          detail: t\n        }, this.fromBufferGeometry(new Kt(e, t)), this.mergeVertices();\n      }\n\n      function Kt(e, t) {\n        var r = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1],\n            i = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n        Zt.call(this, r, i, e, t), this.type = \"TetrahedronBufferGeometry\", this.parameters = {\n          radius: e,\n          detail: t\n        };\n      }\n\n      function Qt(e, t) {\n        T.call(this), this.type = \"OctahedronGeometry\", this.parameters = {\n          radius: e,\n          detail: t\n        }, this.fromBufferGeometry(new $t(e, t)), this.mergeVertices();\n      }\n\n      function $t(e, t) {\n        var r = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1],\n            i = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n        Zt.call(this, r, i, e, t), this.type = \"OctahedronBufferGeometry\", this.parameters = {\n          radius: e,\n          detail: t\n        };\n      }\n\n      function er(e, t) {\n        T.call(this), this.type = \"IcosahedronGeometry\", this.parameters = {\n          radius: e,\n          detail: t\n        }, this.fromBufferGeometry(new tr(e, t)), this.mergeVertices();\n      }\n\n      function tr(e, t) {\n        var r = (1 + Math.sqrt(5)) / 2,\n            i = [-1, r, 0, 1, r, 0, -1, -r, 0, 1, -r, 0, 0, -1, r, 0, 1, r, 0, -1, -r, 0, 1, -r, r, 0, -1, r, 0, 1, -r, 0, -1, -r, 0, 1],\n            n = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n        Zt.call(this, i, n, e, t), this.type = \"IcosahedronBufferGeometry\", this.parameters = {\n          radius: e,\n          detail: t\n        };\n      }\n\n      function rr(e, t) {\n        T.call(this), this.type = \"DodecahedronGeometry\", this.parameters = {\n          radius: e,\n          detail: t\n        }, this.fromBufferGeometry(new ir(e, t)), this.mergeVertices();\n      }\n\n      function ir(e, t) {\n        var r = (1 + Math.sqrt(5)) / 2,\n            i = 1 / r,\n            n = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -i, -r, 0, -i, r, 0, i, -r, 0, i, r, -i, -r, 0, -i, r, 0, i, -r, 0, i, r, 0, -r, 0, -i, r, 0, -i, -r, 0, i, r, 0, i],\n            o = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n        Zt.call(this, n, o, e, t), this.type = \"DodecahedronBufferGeometry\", this.parameters = {\n          radius: e,\n          detail: t\n        };\n      }\n\n      function nr(e, t, r, i, n, o) {\n        T.call(this), this.type = \"TubeGeometry\", this.parameters = {\n          path: e,\n          tubularSegments: t,\n          radius: r,\n          radialSegments: i,\n          closed: n\n        }, void 0 !== o && console.warn(\"THREE.TubeGeometry: taper has been removed.\");\n        var a = new or(e, t, r, i, n);\n        this.tangents = a.tangents, this.normals = a.normals, this.binormals = a.binormals, this.fromBufferGeometry(a), this.mergeVertices();\n      }\n\n      function or(e, t, r, i, o) {\n        function a(n) {\n          v = e.getPointAt(n / t, v);\n          var o = u.normals[n],\n              a = u.binormals[n];\n\n          for (d = 0; d <= i; d++) {\n            var s = d / i * Math.PI * 2,\n                c = Math.sin(s),\n                l = -Math.cos(s);\n            f.x = l * o.x + c * a.x, f.y = l * o.y + c * a.y, f.z = l * o.z + c * a.z, f.normalize(), y.push(f.x, f.y, f.z), p.x = v.x + r * f.x, p.y = v.y + r * f.y, p.z = v.z + r * f.z, g.push(p.x, p.y, p.z);\n          }\n        }\n\n        function c() {\n          for (d = 1; d <= t; d++) {\n            for (h = 1; h <= i; h++) {\n              var e = (i + 1) * (d - 1) + (h - 1),\n                  r = (i + 1) * d + (h - 1),\n                  n = (i + 1) * d + h,\n                  o = (i + 1) * (d - 1) + h;\n              _.push(e, r, o), _.push(r, n, o);\n            }\n          }\n        }\n\n        function l() {\n          for (h = 0; h <= t; h++) {\n            for (d = 0; d <= i; d++) {\n              m.x = h / t, m.y = d / i, x.push(m.x, m.y);\n            }\n          }\n        }\n\n        B.call(this), this.type = \"TubeBufferGeometry\", this.parameters = {\n          path: e,\n          tubularSegments: t,\n          radius: r,\n          radialSegments: i,\n          closed: o\n        }, t = t || 64, r = r || 1, i = i || 8, o = o || !1;\n        var u = e.computeFrenetFrames(t, o);\n        this.tangents = u.tangents, this.normals = u.normals, this.binormals = u.binormals;\n        var h,\n            d,\n            p = new s(),\n            f = new s(),\n            m = new n(),\n            v = new s(),\n            g = [],\n            y = [],\n            x = [],\n            _ = [];\n        !function () {\n          for (h = 0; h < t; h++) {\n            a(h);\n          }\n\n          a(!1 === o ? t : 0), l(), c();\n        }(), this.setIndex(_), this.addAttribute(\"position\", new O(g, 3)), this.addAttribute(\"normal\", new O(y, 3)), this.addAttribute(\"uv\", new O(x, 2));\n      }\n\n      function ar(e, t, r, i, n, o, a) {\n        T.call(this), this.type = \"TorusKnotGeometry\", this.parameters = {\n          radius: e,\n          tube: t,\n          tubularSegments: r,\n          radialSegments: i,\n          p: n,\n          q: o\n        }, void 0 !== a && console.warn(\"THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.\"), this.fromBufferGeometry(new sr(e, t, r, i, n, o)), this.mergeVertices();\n      }\n\n      function sr(e, t, r, i, n, o) {\n        function a(e, t, r, i, n) {\n          var o = Math.cos(e),\n              a = Math.sin(e),\n              s = r / t * e,\n              c = Math.cos(s);\n          n.x = i * (2 + c) * .5 * o, n.y = i * (2 + c) * a * .5, n.z = i * Math.sin(s) * .5;\n        }\n\n        B.call(this), this.type = \"TorusKnotBufferGeometry\", this.parameters = {\n          radius: e,\n          tube: t,\n          tubularSegments: r,\n          radialSegments: i,\n          p: n,\n          q: o\n        }, e = e || 1, t = t || .4, r = Math.floor(r) || 64, i = Math.floor(i) || 8, n = n || 2, o = o || 3;\n\n        var c,\n            l,\n            u = [],\n            h = [],\n            d = [],\n            p = [],\n            f = new s(),\n            m = new s(),\n            v = new s(),\n            g = new s(),\n            y = new s(),\n            x = new s(),\n            _ = new s();\n\n        for (c = 0; c <= r; ++c) {\n          var b = c / r * n * Math.PI * 2;\n\n          for (a(b, n, o, e, v), a(b + .01, n, o, e, g), x.subVectors(g, v), _.addVectors(g, v), y.crossVectors(x, _), _.crossVectors(y, x), y.normalize(), _.normalize(), l = 0; l <= i; ++l) {\n            var w = l / i * Math.PI * 2,\n                M = -t * Math.cos(w),\n                E = t * Math.sin(w);\n            f.x = v.x + (M * _.x + E * y.x), f.y = v.y + (M * _.y + E * y.y), f.z = v.z + (M * _.z + E * y.z), h.push(f.x, f.y, f.z), m.subVectors(f, v).normalize(), d.push(m.x, m.y, m.z), p.push(c / r), p.push(l / i);\n          }\n        }\n\n        for (l = 1; l <= r; l++) {\n          for (c = 1; c <= i; c++) {\n            var S = (i + 1) * (l - 1) + (c - 1),\n                T = (i + 1) * l + (c - 1),\n                A = (i + 1) * l + c,\n                L = (i + 1) * (l - 1) + c;\n            u.push(S, T, L), u.push(T, A, L);\n          }\n        }\n\n        this.setIndex(u), this.addAttribute(\"position\", new O(h, 3)), this.addAttribute(\"normal\", new O(d, 3)), this.addAttribute(\"uv\", new O(p, 2));\n      }\n\n      function cr(e, t, r, i, n) {\n        T.call(this), this.type = \"TorusGeometry\", this.parameters = {\n          radius: e,\n          tube: t,\n          radialSegments: r,\n          tubularSegments: i,\n          arc: n\n        }, this.fromBufferGeometry(new lr(e, t, r, i, n)), this.mergeVertices();\n      }\n\n      function lr(e, t, r, i, n) {\n        B.call(this), this.type = \"TorusBufferGeometry\", this.parameters = {\n          radius: e,\n          tube: t,\n          radialSegments: r,\n          tubularSegments: i,\n          arc: n\n        }, e = e || 1, t = t || .4, r = Math.floor(r) || 8, i = Math.floor(i) || 6, n = n || 2 * Math.PI;\n        var o,\n            a,\n            c = [],\n            l = [],\n            u = [],\n            h = [],\n            d = new s(),\n            p = new s(),\n            f = new s();\n\n        for (o = 0; o <= r; o++) {\n          for (a = 0; a <= i; a++) {\n            var m = a / i * n,\n                v = o / r * Math.PI * 2;\n            p.x = (e + t * Math.cos(v)) * Math.cos(m), p.y = (e + t * Math.cos(v)) * Math.sin(m), p.z = t * Math.sin(v), l.push(p.x, p.y, p.z), d.x = e * Math.cos(m), d.y = e * Math.sin(m), f.subVectors(p, d).normalize(), u.push(f.x, f.y, f.z), h.push(a / i), h.push(o / r);\n          }\n        }\n\n        for (o = 1; o <= r; o++) {\n          for (a = 1; a <= i; a++) {\n            var g = (i + 1) * o + a - 1,\n                y = (i + 1) * (o - 1) + a - 1,\n                x = (i + 1) * (o - 1) + a,\n                _ = (i + 1) * o + a;\n\n            c.push(g, y, _), c.push(y, x, _);\n          }\n        }\n\n        this.setIndex(c), this.addAttribute(\"position\", new O(l, 3)), this.addAttribute(\"normal\", new O(u, 3)), this.addAttribute(\"uv\", new O(h, 2));\n      }\n\n      function ur(e, t, r, i, n) {\n        var o, a;\n        if (n === Fr(e, t, r, i) > 0) for (o = t; o < r; o += i) {\n          a = Ir(o, e[o], e[o + 1], a);\n        } else for (o = r - i; o >= t; o -= i) {\n          a = Ir(o, e[o], e[o + 1], a);\n        }\n        return a && Lr(a, a.next) && (Or(a), a = a.next), a;\n      }\n\n      function hr(e, t) {\n        if (!e) return e;\n        t || (t = e);\n        var r,\n            i = e;\n\n        do {\n          if (r = !1, i.steiner || !Lr(i, i.next) && 0 !== Ar(i.prev, i, i.next)) i = i.next;else {\n            if (Or(i), (i = t = i.prev) === i.next) break;\n            r = !0;\n          }\n        } while (r || i !== t);\n\n        return t;\n      }\n\n      function dr(e, t, r, i, n, o, a) {\n        if (e) {\n          !a && o && br(e, i, n, o);\n\n          for (var s, c, l = e; e.prev !== e.next;) {\n            if (s = e.prev, c = e.next, o ? fr(e, i, n, o) : pr(e)) t.push(s.i / r), t.push(e.i / r), t.push(c.i / r), Or(e), e = c.next, l = c.next;else if ((e = c) === l) {\n              a ? 1 === a ? (e = mr(e, t, r), dr(e, t, r, i, n, o, 2)) : 2 === a && vr(e, t, r, i, n, o) : dr(hr(e), t, r, i, n, o, 1);\n              break;\n            }\n          }\n        }\n      }\n\n      function pr(e) {\n        var t = e.prev,\n            r = e,\n            i = e.next;\n        if (Ar(t, r, i) >= 0) return !1;\n\n        for (var n = e.next.next; n !== e.prev;) {\n          if (Sr(t.x, t.y, r.x, r.y, i.x, i.y, n.x, n.y) && Ar(n.prev, n, n.next) >= 0) return !1;\n          n = n.next;\n        }\n\n        return !0;\n      }\n\n      function fr(e, t, r, i) {\n        var n = e.prev,\n            o = e,\n            a = e.next;\n        if (Ar(n, o, a) >= 0) return !1;\n\n        for (var s = n.x < o.x ? n.x < a.x ? n.x : a.x : o.x < a.x ? o.x : a.x, c = n.y < o.y ? n.y < a.y ? n.y : a.y : o.y < a.y ? o.y : a.y, l = n.x > o.x ? n.x > a.x ? n.x : a.x : o.x > a.x ? o.x : a.x, u = n.y > o.y ? n.y > a.y ? n.y : a.y : o.y > a.y ? o.y : a.y, h = Mr(s, c, t, r, i), d = Mr(l, u, t, r, i), p = e.nextZ; p && p.z <= d;) {\n          if (p !== e.prev && p !== e.next && Sr(n.x, n.y, o.x, o.y, a.x, a.y, p.x, p.y) && Ar(p.prev, p, p.next) >= 0) return !1;\n          p = p.nextZ;\n        }\n\n        for (p = e.prevZ; p && p.z >= h;) {\n          if (p !== e.prev && p !== e.next && Sr(n.x, n.y, o.x, o.y, a.x, a.y, p.x, p.y) && Ar(p.prev, p, p.next) >= 0) return !1;\n          p = p.prevZ;\n        }\n\n        return !0;\n      }\n\n      function mr(e, t, r) {\n        var i = e;\n\n        do {\n          var n = i.prev,\n              o = i.next.next;\n          !Lr(n, o) && Cr(n, i, i.next, o) && Pr(n, o) && Pr(o, n) && (t.push(n.i / r), t.push(i.i / r), t.push(o.i / r), Or(i), Or(i.next), i = e = o), i = i.next;\n        } while (i !== e);\n\n        return i;\n      }\n\n      function vr(e, t, r, i, n, o) {\n        var a = e;\n\n        do {\n          for (var s = a.next.next; s !== a.prev;) {\n            if (a.i !== s.i && Tr(a, s)) {\n              var c = Ur(a, s);\n              return a = hr(a, a.next), c = hr(c, c.next), dr(a, t, r, i, n, o), void dr(c, t, r, i, n, o);\n            }\n\n            s = s.next;\n          }\n\n          a = a.next;\n        } while (a !== e);\n      }\n\n      function gr(e, t, r, i) {\n        var n,\n            o,\n            a,\n            s,\n            c,\n            l = [];\n\n        for (n = 0, o = t.length; n < o; n++) {\n          a = t[n] * i, s = n < o - 1 ? t[n + 1] * i : e.length, c = ur(e, a, s, i, !1), c === c.next && (c.steiner = !0), l.push(Er(c));\n        }\n\n        for (l.sort(yr), n = 0; n < l.length; n++) {\n          xr(l[n], r), r = hr(r, r.next);\n        }\n\n        return r;\n      }\n\n      function yr(e, t) {\n        return e.x - t.x;\n      }\n\n      function xr(e, t) {\n        if (t = _r(e, t)) {\n          var r = Ur(t, e);\n          hr(r, r.next);\n        }\n      }\n\n      function _r(e, t) {\n        var r,\n            i = t,\n            n = e.x,\n            o = e.y,\n            a = -1 / 0;\n\n        do {\n          if (o <= i.y && o >= i.next.y && i.next.y !== i.y) {\n            var s = i.x + (o - i.y) * (i.next.x - i.x) / (i.next.y - i.y);\n\n            if (s <= n && s > a) {\n              if (a = s, s === n) {\n                if (o === i.y) return i;\n                if (o === i.next.y) return i.next;\n              }\n\n              r = i.x < i.next.x ? i : i.next;\n            }\n          }\n\n          i = i.next;\n        } while (i !== t);\n\n        if (!r) return null;\n        if (n === a) return r.prev;\n        var c,\n            l = r,\n            u = r.x,\n            h = r.y,\n            d = 1 / 0;\n\n        for (i = r.next; i !== l;) {\n          n >= i.x && i.x >= u && n !== i.x && Sr(o < h ? n : a, o, u, h, o < h ? a : n, o, i.x, i.y) && ((c = Math.abs(o - i.y) / (n - i.x)) < d || c === d && i.x > r.x) && Pr(i, e) && (r = i, d = c), i = i.next;\n        }\n\n        return r;\n      }\n\n      function br(e, t, r, i) {\n        var n = e;\n\n        do {\n          null === n.z && (n.z = Mr(n.x, n.y, t, r, i)), n.prevZ = n.prev, n.nextZ = n.next, n = n.next;\n        } while (n !== e);\n\n        n.prevZ.nextZ = null, n.prevZ = null, wr(n);\n      }\n\n      function wr(e) {\n        var t,\n            r,\n            i,\n            n,\n            o,\n            a,\n            s,\n            c,\n            l = 1;\n\n        do {\n          for (r = e, e = null, o = null, a = 0; r;) {\n            for (a++, i = r, s = 0, t = 0; t < l && (s++, i = i.nextZ); t++) {\n              ;\n            }\n\n            for (c = l; s > 0 || c > 0 && i;) {\n              0 !== s && (0 === c || !i || r.z <= i.z) ? (n = r, r = r.nextZ, s--) : (n = i, i = i.nextZ, c--), o ? o.nextZ = n : e = n, n.prevZ = o, o = n;\n            }\n\n            r = i;\n          }\n\n          o.nextZ = null, l *= 2;\n        } while (a > 1);\n\n        return e;\n      }\n\n      function Mr(e, t, r, i, n) {\n        return e = 32767 * (e - r) * n, t = 32767 * (t - i) * n, e = 16711935 & (e | e << 8), e = 252645135 & (e | e << 4), e = 858993459 & (e | e << 2), e = 1431655765 & (e | e << 1), t = 16711935 & (t | t << 8), t = 252645135 & (t | t << 4), t = 858993459 & (t | t << 2), t = 1431655765 & (t | t << 1), e | t << 1;\n      }\n\n      function Er(e) {\n        var t = e,\n            r = e;\n\n        do {\n          t.x < r.x && (r = t), t = t.next;\n        } while (t !== e);\n\n        return r;\n      }\n\n      function Sr(e, t, r, i, n, o, a, s) {\n        return (n - a) * (t - s) - (e - a) * (o - s) >= 0 && (e - a) * (i - s) - (r - a) * (t - s) >= 0 && (r - a) * (o - s) - (n - a) * (i - s) >= 0;\n      }\n\n      function Tr(e, t) {\n        return e.next.i !== t.i && e.prev.i !== t.i && !Rr(e, t) && Pr(e, t) && Pr(t, e) && Dr(e, t);\n      }\n\n      function Ar(e, t, r) {\n        return (t.y - e.y) * (r.x - t.x) - (t.x - e.x) * (r.y - t.y);\n      }\n\n      function Lr(e, t) {\n        return e.x === t.x && e.y === t.y;\n      }\n\n      function Cr(e, t, r, i) {\n        return !!(Lr(e, t) && Lr(r, i) || Lr(e, i) && Lr(r, t)) || Ar(e, t, r) > 0 != Ar(e, t, i) > 0 && Ar(r, i, e) > 0 != Ar(r, i, t) > 0;\n      }\n\n      function Rr(e, t) {\n        var r = e;\n\n        do {\n          if (r.i !== e.i && r.next.i !== e.i && r.i !== t.i && r.next.i !== t.i && Cr(r, r.next, e, t)) return !0;\n          r = r.next;\n        } while (r !== e);\n\n        return !1;\n      }\n\n      function Pr(e, t) {\n        return Ar(e.prev, e, e.next) < 0 ? Ar(e, t, e.next) >= 0 && Ar(e, e.prev, t) >= 0 : Ar(e, t, e.prev) < 0 || Ar(e, e.next, t) < 0;\n      }\n\n      function Dr(e, t) {\n        var r = e,\n            i = !1,\n            n = (e.x + t.x) / 2,\n            o = (e.y + t.y) / 2;\n\n        do {\n          r.y > o != r.next.y > o && r.next.y !== r.y && n < (r.next.x - r.x) * (o - r.y) / (r.next.y - r.y) + r.x && (i = !i), r = r.next;\n        } while (r !== e);\n\n        return i;\n      }\n\n      function Ur(e, t) {\n        var r = new Nr(e.i, e.x, e.y),\n            i = new Nr(t.i, t.x, t.y),\n            n = e.next,\n            o = t.prev;\n        return e.next = t, t.prev = e, r.next = n, n.prev = r, i.next = r, r.prev = i, o.next = i, i.prev = o, i;\n      }\n\n      function Ir(e, t, r, i) {\n        var n = new Nr(e, t, r);\n        return i ? (n.next = i.next, n.prev = i, i.next.prev = n, i.next = n) : (n.prev = n, n.next = n), n;\n      }\n\n      function Or(e) {\n        e.next.prev = e.prev, e.prev.next = e.next, e.prevZ && (e.prevZ.nextZ = e.nextZ), e.nextZ && (e.nextZ.prevZ = e.prevZ);\n      }\n\n      function Nr(e, t, r) {\n        this.i = e, this.x = t, this.y = r, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1;\n      }\n\n      function Fr(e, t, r, i) {\n        for (var n = 0, o = t, a = r - i; o < r; o += i) {\n          n += (e[a] - e[o]) * (e[o + 1] + e[a + 1]), a = o;\n        }\n\n        return n;\n      }\n\n      function zr(e) {\n        var t = e.length;\n        t > 2 && e[t - 1].equals(e[0]) && e.pop();\n      }\n\n      function Br(e, t) {\n        for (var r = 0; r < t.length; r++) {\n          e.push(t[r].x), e.push(t[r].y);\n        }\n      }\n\n      function Gr(e, t) {\n        T.call(this), this.type = \"ExtrudeGeometry\", this.parameters = {\n          shapes: e,\n          options: t\n        }, this.fromBufferGeometry(new Hr(e, t)), this.mergeVertices();\n      }\n\n      function Hr(e, t) {\n        B.call(this), this.type = \"ExtrudeBufferGeometry\", this.parameters = {\n          shapes: e,\n          options: t\n        }, e = Array.isArray(e) ? e : [e];\n\n        for (var r = this, i = [], o = [], a = 0, c = e.length; a < c; a++) {\n          var l = e[a];\n          !function (e) {\n            function a(e, t, r) {\n              return t || console.error(\"THREE.ExtrudeGeometry: vec does not exist\"), t.clone().multiplyScalar(r).add(e);\n            }\n\n            function c(e, t, r) {\n              var i,\n                  o,\n                  a,\n                  s = e.x - t.x,\n                  c = e.y - t.y,\n                  l = r.x - e.x,\n                  u = r.y - e.y,\n                  h = s * s + c * c,\n                  d = s * u - c * l;\n\n              if (Math.abs(d) > Number.EPSILON) {\n                var p = Math.sqrt(h),\n                    f = Math.sqrt(l * l + u * u),\n                    m = t.x - c / p,\n                    v = t.y + s / p,\n                    g = r.x - u / f,\n                    y = r.y + l / f,\n                    x = ((g - m) * u - (y - v) * l) / (s * u - c * l);\n                i = m + s * x - e.x, o = v + c * x - e.y;\n\n                var _ = i * i + o * o;\n\n                if (_ <= 2) return new n(i, o);\n                a = Math.sqrt(_ / 2);\n              } else {\n                var b = !1;\n                s > Number.EPSILON ? l > Number.EPSILON && (b = !0) : s < -Number.EPSILON ? l < -Number.EPSILON && (b = !0) : Math.sign(c) === Math.sign(u) && (b = !0), b ? (i = -c, o = s, a = Math.sqrt(h)) : (i = s, o = c, a = Math.sqrt(h / 2));\n              }\n\n              return new n(i / a, o / a);\n            }\n\n            function l(e, t) {\n              var r, i;\n\n              for (Y = e.length; --Y >= 0;) {\n                r = Y, (i = Y - 1) < 0 && (i = e.length - 1);\n                var n = 0,\n                    o = w + 2 * A;\n\n                for (n = 0; n < o; n++) {\n                  var a = W * n,\n                      s = W * (n + 1);\n                  d(t + r + a, t + i + a, t + i + s, t + r + s);\n                }\n              }\n            }\n\n            function u(e, t, r) {\n              _.push(e), _.push(t), _.push(r);\n            }\n\n            function h(e, t, n) {\n              p(e), p(t), p(n);\n              var o = i.length / 3,\n                  a = C.generateTopUV(r, i, o - 3, o - 2, o - 1);\n              f(a[0]), f(a[1]), f(a[2]);\n            }\n\n            function d(e, t, n, o) {\n              p(e), p(t), p(o), p(t), p(n), p(o);\n              var a = i.length / 3,\n                  s = C.generateSideWallUV(r, i, a - 6, a - 3, a - 2, a - 1);\n              f(s[0]), f(s[1]), f(s[3]), f(s[1]), f(s[2]), f(s[3]);\n            }\n\n            function p(e) {\n              i.push(_[3 * e + 0]), i.push(_[3 * e + 1]), i.push(_[3 * e + 2]);\n            }\n\n            function f(e) {\n              o.push(e.x), o.push(e.y);\n            }\n\n            var m,\n                v,\n                g,\n                y,\n                x,\n                _ = [],\n                b = void 0 !== t.curveSegments ? t.curveSegments : 12,\n                w = void 0 !== t.steps ? t.steps : 1,\n                M = void 0 !== t.amount ? t.amount : 100,\n                E = void 0 === t.bevelEnabled || t.bevelEnabled,\n                S = void 0 !== t.bevelThickness ? t.bevelThickness : 6,\n                T = void 0 !== t.bevelSize ? t.bevelSize : S - 2,\n                A = void 0 !== t.bevelSegments ? t.bevelSegments : 3,\n                L = t.extrudePath,\n                C = void 0 !== t.UVGenerator ? t.UVGenerator : ac,\n                R = !1;\n            L && (m = L.getSpacedPoints(w), R = !0, E = !1, v = L.computeFrenetFrames(w, !1), g = new s(), y = new s(), x = new s()), E || (A = 0, S = 0, T = 0);\n            var P,\n                D,\n                U,\n                I = e.extractPoints(b),\n                O = I.shape,\n                N = I.holes;\n            if (!oc.isClockWise(O)) for (O = O.reverse(), D = 0, U = N.length; D < U; D++) {\n              P = N[D], oc.isClockWise(P) && (N[D] = P.reverse());\n            }\n            var F = oc.triangulateShape(O, N),\n                z = O;\n\n            for (D = 0, U = N.length; D < U; D++) {\n              P = N[D], O = O.concat(P);\n            }\n\n            for (var B, G, H, j, V, k, W = O.length, X = F.length, q = [], Y = 0, Z = z.length, J = Z - 1, K = Y + 1; Y < Z; Y++, J++, K++) {\n              J === Z && (J = 0), K === Z && (K = 0), q[Y] = c(z[Y], z[J], z[K]);\n            }\n\n            var Q,\n                $ = [],\n                ee = q.concat();\n\n            for (D = 0, U = N.length; D < U; D++) {\n              for (P = N[D], Q = [], Y = 0, Z = P.length, J = Z - 1, K = Y + 1; Y < Z; Y++, J++, K++) {\n                J === Z && (J = 0), K === Z && (K = 0), Q[Y] = c(P[Y], P[J], P[K]);\n              }\n\n              $.push(Q), ee = ee.concat(Q);\n            }\n\n            for (B = 0; B < A; B++) {\n              for (H = B / A, j = S * Math.cos(H * Math.PI / 2), G = T * Math.sin(H * Math.PI / 2), Y = 0, Z = z.length; Y < Z; Y++) {\n                V = a(z[Y], q[Y], G), u(V.x, V.y, -j);\n              }\n\n              for (D = 0, U = N.length; D < U; D++) {\n                for (P = N[D], Q = $[D], Y = 0, Z = P.length; Y < Z; Y++) {\n                  V = a(P[Y], Q[Y], G), u(V.x, V.y, -j);\n                }\n              }\n            }\n\n            for (G = T, Y = 0; Y < W; Y++) {\n              V = E ? a(O[Y], ee[Y], G) : O[Y], R ? (y.copy(v.normals[0]).multiplyScalar(V.x), g.copy(v.binormals[0]).multiplyScalar(V.y), x.copy(m[0]).add(y).add(g), u(x.x, x.y, x.z)) : u(V.x, V.y, 0);\n            }\n\n            var te;\n\n            for (te = 1; te <= w; te++) {\n              for (Y = 0; Y < W; Y++) {\n                V = E ? a(O[Y], ee[Y], G) : O[Y], R ? (y.copy(v.normals[te]).multiplyScalar(V.x), g.copy(v.binormals[te]).multiplyScalar(V.y), x.copy(m[te]).add(y).add(g), u(x.x, x.y, x.z)) : u(V.x, V.y, M / w * te);\n              }\n            }\n\n            for (B = A - 1; B >= 0; B--) {\n              for (H = B / A, j = S * Math.cos(H * Math.PI / 2), G = T * Math.sin(H * Math.PI / 2), Y = 0, Z = z.length; Y < Z; Y++) {\n                V = a(z[Y], q[Y], G), u(V.x, V.y, M + j);\n              }\n\n              for (D = 0, U = N.length; D < U; D++) {\n                for (P = N[D], Q = $[D], Y = 0, Z = P.length; Y < Z; Y++) {\n                  V = a(P[Y], Q[Y], G), R ? u(V.x, V.y + m[w - 1].y, m[w - 1].x + j) : u(V.x, V.y, M + j);\n                }\n              }\n            }\n\n            !function () {\n              var e = i.length / 3;\n\n              if (E) {\n                var t = 0,\n                    n = W * t;\n\n                for (Y = 0; Y < X; Y++) {\n                  k = F[Y], h(k[2] + n, k[1] + n, k[0] + n);\n                }\n\n                for (t = w + 2 * A, n = W * t, Y = 0; Y < X; Y++) {\n                  k = F[Y], h(k[0] + n, k[1] + n, k[2] + n);\n                }\n              } else {\n                for (Y = 0; Y < X; Y++) {\n                  k = F[Y], h(k[2], k[1], k[0]);\n                }\n\n                for (Y = 0; Y < X; Y++) {\n                  k = F[Y], h(k[0] + W * w, k[1] + W * w, k[2] + W * w);\n                }\n              }\n\n              r.addGroup(e, i.length / 3 - e, 0);\n            }(), function () {\n              var e = i.length / 3,\n                  t = 0;\n\n              for (l(z, t), t += z.length, D = 0, U = N.length; D < U; D++) {\n                P = N[D], l(P, t), t += P.length;\n              }\n\n              r.addGroup(e, i.length / 3 - e, 1);\n            }();\n          }(l);\n        }\n\n        this.addAttribute(\"position\", new O(i, 3)), this.addAttribute(\"uv\", new O(o, 2)), this.computeVertexNormals();\n      }\n\n      function jr(e, t) {\n        T.call(this), this.type = \"TextGeometry\", this.parameters = {\n          text: e,\n          parameters: t\n        }, this.fromBufferGeometry(new Vr(e, t)), this.mergeVertices();\n      }\n\n      function Vr(e, t) {\n        t = t || {};\n        var r = t.font;\n        if (!r || !r.isFont) return console.error(\"THREE.TextGeometry: font parameter is not an instance of THREE.Font.\"), new T();\n        var i = r.generateShapes(e, t.size, t.curveSegments);\n        t.amount = void 0 !== t.height ? t.height : 50, void 0 === t.bevelThickness && (t.bevelThickness = 10), void 0 === t.bevelSize && (t.bevelSize = 8), void 0 === t.bevelEnabled && (t.bevelEnabled = !1), Hr.call(this, i, t), this.type = \"TextBufferGeometry\";\n      }\n\n      function kr(e, t, r, i, n, o, a) {\n        T.call(this), this.type = \"SphereGeometry\", this.parameters = {\n          radius: e,\n          widthSegments: t,\n          heightSegments: r,\n          phiStart: i,\n          phiLength: n,\n          thetaStart: o,\n          thetaLength: a\n        }, this.fromBufferGeometry(new Wr(e, t, r, i, n, o, a)), this.mergeVertices();\n      }\n\n      function Wr(e, t, r, i, n, o, a) {\n        B.call(this), this.type = \"SphereBufferGeometry\", this.parameters = {\n          radius: e,\n          widthSegments: t,\n          heightSegments: r,\n          phiStart: i,\n          phiLength: n,\n          thetaStart: o,\n          thetaLength: a\n        }, e = e || 1, t = Math.max(3, Math.floor(t) || 8), r = Math.max(2, Math.floor(r) || 6), i = void 0 !== i ? i : 0, n = void 0 !== n ? n : 2 * Math.PI, o = void 0 !== o ? o : 0, a = void 0 !== a ? a : Math.PI;\n        var c,\n            l,\n            u = o + a,\n            h = 0,\n            d = [],\n            p = new s(),\n            f = new s(),\n            m = [],\n            v = [],\n            g = [],\n            y = [];\n\n        for (l = 0; l <= r; l++) {\n          var x = [],\n              _ = l / r;\n\n          for (c = 0; c <= t; c++) {\n            var b = c / t;\n            p.x = -e * Math.cos(i + b * n) * Math.sin(o + _ * a), p.y = e * Math.cos(o + _ * a), p.z = e * Math.sin(i + b * n) * Math.sin(o + _ * a), v.push(p.x, p.y, p.z), f.set(p.x, p.y, p.z).normalize(), g.push(f.x, f.y, f.z), y.push(b, 1 - _), x.push(h++);\n          }\n\n          d.push(x);\n        }\n\n        for (l = 0; l < r; l++) {\n          for (c = 0; c < t; c++) {\n            var w = d[l][c + 1],\n                M = d[l][c],\n                E = d[l + 1][c],\n                S = d[l + 1][c + 1];\n            (0 !== l || o > 0) && m.push(w, M, S), (l !== r - 1 || u < Math.PI) && m.push(M, E, S);\n          }\n        }\n\n        this.setIndex(m), this.addAttribute(\"position\", new O(v, 3)), this.addAttribute(\"normal\", new O(g, 3)), this.addAttribute(\"uv\", new O(y, 2));\n      }\n\n      function Xr(e, t, r, i, n, o) {\n        T.call(this), this.type = \"RingGeometry\", this.parameters = {\n          innerRadius: e,\n          outerRadius: t,\n          thetaSegments: r,\n          phiSegments: i,\n          thetaStart: n,\n          thetaLength: o\n        }, this.fromBufferGeometry(new qr(e, t, r, i, n, o)), this.mergeVertices();\n      }\n\n      function qr(e, t, r, i, o, a) {\n        B.call(this), this.type = \"RingBufferGeometry\", this.parameters = {\n          innerRadius: e,\n          outerRadius: t,\n          thetaSegments: r,\n          phiSegments: i,\n          thetaStart: o,\n          thetaLength: a\n        }, e = e || .5, t = t || 1, o = void 0 !== o ? o : 0, a = void 0 !== a ? a : 2 * Math.PI, r = void 0 !== r ? Math.max(3, r) : 8, i = void 0 !== i ? Math.max(1, i) : 1;\n        var c,\n            l,\n            u,\n            h = [],\n            d = [],\n            p = [],\n            f = [],\n            m = e,\n            v = (t - e) / i,\n            g = new s(),\n            y = new n();\n\n        for (l = 0; l <= i; l++) {\n          for (u = 0; u <= r; u++) {\n            c = o + u / r * a, g.x = m * Math.cos(c), g.y = m * Math.sin(c), d.push(g.x, g.y, g.z), p.push(0, 0, 1), y.x = (g.x / t + 1) / 2, y.y = (g.y / t + 1) / 2, f.push(y.x, y.y);\n          }\n\n          m += v;\n        }\n\n        for (l = 0; l < i; l++) {\n          var x = l * (r + 1);\n\n          for (u = 0; u < r; u++) {\n            c = u + x;\n            var _ = c,\n                b = c + r + 1,\n                w = c + r + 2,\n                M = c + 1;\n            h.push(_, b, M), h.push(b, w, M);\n          }\n        }\n\n        this.setIndex(h), this.addAttribute(\"position\", new O(d, 3)), this.addAttribute(\"normal\", new O(p, 3)), this.addAttribute(\"uv\", new O(f, 2));\n      }\n\n      function Yr(e, t, r, i) {\n        T.call(this), this.type = \"LatheGeometry\", this.parameters = {\n          points: e,\n          segments: t,\n          phiStart: r,\n          phiLength: i\n        }, this.fromBufferGeometry(new Zr(e, t, r, i)), this.mergeVertices();\n      }\n\n      function Zr(e, t, r, i) {\n        B.call(this), this.type = \"LatheBufferGeometry\", this.parameters = {\n          points: e,\n          segments: t,\n          phiStart: r,\n          phiLength: i\n        }, t = Math.floor(t) || 12, r = r || 0, i = i || 2 * Math.PI, i = zs.clamp(i, 0, 2 * Math.PI);\n        var o,\n            a,\n            c,\n            l = [],\n            u = [],\n            h = [],\n            d = 1 / t,\n            p = new s(),\n            f = new n();\n\n        for (a = 0; a <= t; a++) {\n          var m = r + a * d * i,\n              v = Math.sin(m),\n              g = Math.cos(m);\n\n          for (c = 0; c <= e.length - 1; c++) {\n            p.x = e[c].x * v, p.y = e[c].y, p.z = e[c].x * g, u.push(p.x, p.y, p.z), f.x = a / t, f.y = c / (e.length - 1), h.push(f.x, f.y);\n          }\n        }\n\n        for (a = 0; a < t; a++) {\n          for (c = 0; c < e.length - 1; c++) {\n            o = c + a * e.length;\n\n            var y = o,\n                x = o + e.length,\n                _ = o + e.length + 1,\n                b = o + 1;\n\n            l.push(y, x, b), l.push(x, _, b);\n          }\n        }\n\n        if (this.setIndex(l), this.addAttribute(\"position\", new O(u, 3)), this.addAttribute(\"uv\", new O(h, 2)), this.computeVertexNormals(), i === 2 * Math.PI) {\n          var w = this.attributes.normal.array,\n              M = new s(),\n              E = new s(),\n              S = new s();\n\n          for (o = t * e.length * 3, a = 0, c = 0; a < e.length; a++, c += 3) {\n            M.x = w[c + 0], M.y = w[c + 1], M.z = w[c + 2], E.x = w[o + c + 0], E.y = w[o + c + 1], E.z = w[o + c + 2], S.addVectors(M, E).normalize(), w[c + 0] = w[o + c + 0] = S.x, w[c + 1] = w[o + c + 1] = S.y, w[c + 2] = w[o + c + 2] = S.z;\n          }\n        }\n      }\n\n      function Jr(e, t) {\n        T.call(this), this.type = \"ShapeGeometry\", \"object\" == typeof t && (console.warn(\"THREE.ShapeGeometry: Options parameter has been removed.\"), t = t.curveSegments), this.parameters = {\n          shapes: e,\n          curveSegments: t\n        }, this.fromBufferGeometry(new Kr(e, t)), this.mergeVertices();\n      }\n\n      function Kr(e, t) {\n        function r(e) {\n          var r,\n              s,\n              l,\n              u = n.length / 3,\n              h = e.extractPoints(t),\n              d = h.shape,\n              p = h.holes;\n          if (!1 === oc.isClockWise(d)) for (d = d.reverse(), r = 0, s = p.length; r < s; r++) {\n            l = p[r], !0 === oc.isClockWise(l) && (p[r] = l.reverse());\n          }\n          var f = oc.triangulateShape(d, p);\n\n          for (r = 0, s = p.length; r < s; r++) {\n            l = p[r], d = d.concat(l);\n          }\n\n          for (r = 0, s = d.length; r < s; r++) {\n            var m = d[r];\n            n.push(m.x, m.y, 0), o.push(0, 0, 1), a.push(m.x, m.y);\n          }\n\n          for (r = 0, s = f.length; r < s; r++) {\n            var v = f[r],\n                g = v[0] + u,\n                y = v[1] + u,\n                x = v[2] + u;\n            i.push(g, y, x), c += 3;\n          }\n        }\n\n        B.call(this), this.type = \"ShapeBufferGeometry\", this.parameters = {\n          shapes: e,\n          curveSegments: t\n        }, t = t || 12;\n        var i = [],\n            n = [],\n            o = [],\n            a = [],\n            s = 0,\n            c = 0;\n        if (!1 === Array.isArray(e)) r(e);else for (var l = 0; l < e.length; l++) {\n          r(e[l]), this.addGroup(s, c, l), s += c, c = 0;\n        }\n        this.setIndex(i), this.addAttribute(\"position\", new O(n, 3)), this.addAttribute(\"normal\", new O(o, 3)), this.addAttribute(\"uv\", new O(a, 2));\n      }\n\n      function Qr(e, t) {\n        if (t.shapes = [], Array.isArray(e)) for (var r = 0, i = e.length; r < i; r++) {\n          var n = e[r];\n          t.shapes.push(n.uuid);\n        } else t.shapes.push(e.uuid);\n        return t;\n      }\n\n      function $r(e, t) {\n        B.call(this), this.type = \"EdgesGeometry\", this.parameters = {\n          thresholdAngle: t\n        }, t = void 0 !== t ? t : 1;\n        var r,\n            i,\n            n,\n            o,\n            a = [],\n            s = Math.cos(zs.DEG2RAD * t),\n            c = [0, 0],\n            l = {},\n            u = [\"a\", \"b\", \"c\"];\n        e.isBufferGeometry ? (o = new T(), o.fromBufferGeometry(e)) : o = e.clone(), o.mergeVertices(), o.computeFaceNormals();\n\n        for (var h = o.vertices, d = o.faces, p = 0, f = d.length; p < f; p++) {\n          for (var m = d[p], v = 0; v < 3; v++) {\n            r = m[u[v]], i = m[u[(v + 1) % 3]], c[0] = Math.min(r, i), c[1] = Math.max(r, i), n = c[0] + \",\" + c[1], void 0 === l[n] ? l[n] = {\n              index1: c[0],\n              index2: c[1],\n              face1: p,\n              face2: void 0\n            } : l[n].face2 = p;\n          }\n        }\n\n        for (n in l) {\n          var g = l[n];\n\n          if (void 0 === g.face2 || d[g.face1].normal.dot(d[g.face2].normal) <= s) {\n            var y = h[g.index1];\n            a.push(y.x, y.y, y.z), y = h[g.index2], a.push(y.x, y.y, y.z);\n          }\n        }\n\n        this.addAttribute(\"position\", new O(a, 3));\n      }\n\n      function ei(e, t, r, i, n, o, a, s) {\n        T.call(this), this.type = \"CylinderGeometry\", this.parameters = {\n          radiusTop: e,\n          radiusBottom: t,\n          height: r,\n          radialSegments: i,\n          heightSegments: n,\n          openEnded: o,\n          thetaStart: a,\n          thetaLength: s\n        }, this.fromBufferGeometry(new ti(e, t, r, i, n, o, a, s)), this.mergeVertices();\n      }\n\n      function ti(e, t, r, i, o, a, c, l) {\n        function u(r) {\n          var o,\n              a,\n              u,\n              g = new n(),\n              _ = new s(),\n              b = 0,\n              w = !0 === r ? e : t,\n              M = !0 === r ? 1 : -1;\n\n          for (a = v, o = 1; o <= i; o++) {\n            p.push(0, y * M, 0), f.push(0, M, 0), m.push(.5, .5), v++;\n          }\n\n          for (u = v, o = 0; o <= i; o++) {\n            var E = o / i,\n                S = E * l + c,\n                T = Math.cos(S),\n                A = Math.sin(S);\n            _.x = w * A, _.y = y * M, _.z = w * T, p.push(_.x, _.y, _.z), f.push(0, M, 0), g.x = .5 * T + .5, g.y = .5 * A * M + .5, m.push(g.x, g.y), v++;\n          }\n\n          for (o = 0; o < i; o++) {\n            var L = a + o,\n                C = u + o;\n            !0 === r ? d.push(C, C + 1, L) : d.push(C + 1, C, L), b += 3;\n          }\n\n          h.addGroup(x, b, !0 === r ? 1 : 2), x += b;\n        }\n\n        B.call(this), this.type = \"CylinderBufferGeometry\", this.parameters = {\n          radiusTop: e,\n          radiusBottom: t,\n          height: r,\n          radialSegments: i,\n          heightSegments: o,\n          openEnded: a,\n          thetaStart: c,\n          thetaLength: l\n        };\n        var h = this;\n        e = void 0 !== e ? e : 1, t = void 0 !== t ? t : 1, r = r || 1, i = Math.floor(i) || 8, o = Math.floor(o) || 1, a = void 0 !== a && a, c = void 0 !== c ? c : 0, l = void 0 !== l ? l : 2 * Math.PI;\n        var d = [],\n            p = [],\n            f = [],\n            m = [],\n            v = 0,\n            g = [],\n            y = r / 2,\n            x = 0;\n        !function () {\n          var n,\n              a,\n              u = new s(),\n              _ = new s(),\n              b = 0,\n              w = (t - e) / r;\n\n          for (a = 0; a <= o; a++) {\n            var M = [],\n                E = a / o,\n                S = E * (t - e) + e;\n\n            for (n = 0; n <= i; n++) {\n              var T = n / i,\n                  A = T * l + c,\n                  L = Math.sin(A),\n                  C = Math.cos(A);\n              _.x = S * L, _.y = -E * r + y, _.z = S * C, p.push(_.x, _.y, _.z), u.set(L, w, C).normalize(), f.push(u.x, u.y, u.z), m.push(T, 1 - E), M.push(v++);\n            }\n\n            g.push(M);\n          }\n\n          for (n = 0; n < i; n++) {\n            for (a = 0; a < o; a++) {\n              var R = g[a][n],\n                  P = g[a + 1][n],\n                  D = g[a + 1][n + 1],\n                  U = g[a][n + 1];\n              d.push(R, P, U), d.push(P, D, U), b += 6;\n            }\n          }\n\n          h.addGroup(x, b, 0), x += b;\n        }(), !1 === a && (e > 0 && u(!0), t > 0 && u(!1)), this.setIndex(d), this.addAttribute(\"position\", new O(p, 3)), this.addAttribute(\"normal\", new O(f, 3)), this.addAttribute(\"uv\", new O(m, 2));\n      }\n\n      function ri(e, t, r, i, n, o, a) {\n        ei.call(this, 0, e, t, r, i, n, o, a), this.type = \"ConeGeometry\", this.parameters = {\n          radius: e,\n          height: t,\n          radialSegments: r,\n          heightSegments: i,\n          openEnded: n,\n          thetaStart: o,\n          thetaLength: a\n        };\n      }\n\n      function ii(e, t, r, i, n, o, a) {\n        ti.call(this, 0, e, t, r, i, n, o, a), this.type = \"ConeBufferGeometry\", this.parameters = {\n          radius: e,\n          height: t,\n          radialSegments: r,\n          heightSegments: i,\n          openEnded: n,\n          thetaStart: o,\n          thetaLength: a\n        };\n      }\n\n      function ni(e, t, r, i) {\n        T.call(this), this.type = \"CircleGeometry\", this.parameters = {\n          radius: e,\n          segments: t,\n          thetaStart: r,\n          thetaLength: i\n        }, this.fromBufferGeometry(new oi(e, t, r, i)), this.mergeVertices();\n      }\n\n      function oi(e, t, r, i) {\n        B.call(this), this.type = \"CircleBufferGeometry\", this.parameters = {\n          radius: e,\n          segments: t,\n          thetaStart: r,\n          thetaLength: i\n        }, e = e || 1, t = void 0 !== t ? Math.max(3, t) : 8, r = void 0 !== r ? r : 0, i = void 0 !== i ? i : 2 * Math.PI;\n        var o,\n            a,\n            c = [],\n            l = [],\n            u = [],\n            h = [],\n            d = new s(),\n            p = new n();\n\n        for (l.push(0, 0, 0), u.push(0, 0, 1), h.push(.5, .5), a = 0, o = 3; a <= t; a++, o += 3) {\n          var f = r + a / t * i;\n          d.x = e * Math.cos(f), d.y = e * Math.sin(f), l.push(d.x, d.y, d.z), u.push(0, 0, 1), p.x = (l[o] / e + 1) / 2, p.y = (l[o + 1] / e + 1) / 2, h.push(p.x, p.y);\n        }\n\n        for (o = 1; o <= t; o++) {\n          c.push(o, o + 1, 0);\n        }\n\n        this.setIndex(c), this.addAttribute(\"position\", new O(l, 3)), this.addAttribute(\"normal\", new O(u, 3)), this.addAttribute(\"uv\", new O(h, 2));\n      }\n\n      function ai(e) {\n        k.call(this), this.type = \"ShadowMaterial\", this.color = new y(0), this.transparent = !0, this.setValues(e);\n      }\n\n      function si(e) {\n        X.call(this, e), this.type = \"RawShaderMaterial\";\n      }\n\n      function ci(e) {\n        k.call(this), this.defines = {\n          STANDARD: \"\"\n        }, this.type = \"MeshStandardMaterial\", this.color = new y(16777215), this.roughness = .5, this.metalness = .5, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new y(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalScale = new n(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = \"round\", this.wireframeLinejoin = \"round\", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e);\n      }\n\n      function li(e) {\n        ci.call(this), this.defines = {\n          PHYSICAL: \"\"\n        }, this.type = \"MeshPhysicalMaterial\", this.reflectivity = .5, this.clearCoat = 0, this.clearCoatRoughness = 0, this.setValues(e);\n      }\n\n      function ui(e) {\n        k.call(this), this.type = \"MeshPhongMaterial\", this.color = new y(16777215), this.specular = new y(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new y(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalScale = new n(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = da, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = \"round\", this.wireframeLinejoin = \"round\", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e);\n      }\n\n      function hi(e) {\n        ui.call(this), this.defines = {\n          TOON: \"\"\n        }, this.type = \"MeshToonMaterial\", this.gradientMap = null, this.setValues(e);\n      }\n\n      function di(e) {\n        k.call(this), this.type = \"MeshNormalMaterial\", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalScale = new n(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e);\n      }\n\n      function pi(e) {\n        k.call(this), this.type = \"MeshLambertMaterial\", this.color = new y(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new y(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = da, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = \"round\", this.wireframeLinejoin = \"round\", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e);\n      }\n\n      function fi(e) {\n        Ot.call(this), this.type = \"LineDashedMaterial\", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(e);\n      }\n\n      function mi(e, t, r) {\n        var i = this,\n            n = !1,\n            o = 0,\n            a = 0,\n            s = void 0;\n        this.onStart = void 0, this.onLoad = e, this.onProgress = t, this.onError = r, this.itemStart = function (e) {\n          a++, !1 === n && void 0 !== i.onStart && i.onStart(e, o, a), n = !0;\n        }, this.itemEnd = function (e) {\n          o++, void 0 !== i.onProgress && i.onProgress(e, o, a), o === a && (n = !1, void 0 !== i.onLoad && i.onLoad());\n        }, this.itemError = function (e) {\n          void 0 !== i.onError && i.onError(e);\n        }, this.resolveURL = function (e) {\n          return s ? s(e) : e;\n        }, this.setURLModifier = function (e) {\n          return s = e, this;\n        };\n      }\n\n      function vi(e) {\n        this.manager = void 0 !== e ? e : uc;\n      }\n\n      function gi(e) {\n        this.manager = void 0 !== e ? e : uc, this._parser = null;\n      }\n\n      function yi(e) {\n        this.manager = void 0 !== e ? e : uc, this._parser = null;\n      }\n\n      function xi(e) {\n        this.manager = void 0 !== e ? e : uc;\n      }\n\n      function _i(e) {\n        this.manager = void 0 !== e ? e : uc;\n      }\n\n      function bi(e) {\n        this.manager = void 0 !== e ? e : uc;\n      }\n\n      function wi() {\n        this.type = \"Curve\", this.arcLengthDivisions = 200;\n      }\n\n      function Mi(e, t, r, i, n, o, a, s) {\n        wi.call(this), this.type = \"EllipseCurve\", this.aX = e || 0, this.aY = t || 0, this.xRadius = r || 1, this.yRadius = i || 1, this.aStartAngle = n || 0, this.aEndAngle = o || 2 * Math.PI, this.aClockwise = a || !1, this.aRotation = s || 0;\n      }\n\n      function Ei(e, t, r, i, n, o) {\n        Mi.call(this, e, t, r, r, i, n, o), this.type = \"ArcCurve\";\n      }\n\n      function Si() {\n        function e(e, o, a, s) {\n          t = e, r = a, i = -3 * e + 3 * o - 2 * a - s, n = 2 * e - 2 * o + a + s;\n        }\n\n        var t = 0,\n            r = 0,\n            i = 0,\n            n = 0;\n        return {\n          initCatmullRom: function initCatmullRom(t, r, i, n, o) {\n            e(r, i, o * (i - t), o * (n - r));\n          },\n          initNonuniformCatmullRom: function initNonuniformCatmullRom(t, r, i, n, o, a, s) {\n            var c = (r - t) / o - (i - t) / (o + a) + (i - r) / a,\n                l = (i - r) / a - (n - r) / (a + s) + (n - i) / s;\n            c *= a, l *= a, e(r, i, c, l);\n          },\n          calc: function calc(e) {\n            var o = e * e;\n            return t + r * e + i * o + n * (o * e);\n          }\n        };\n      }\n\n      function Ti(e, t, r, i) {\n        wi.call(this), this.type = \"CatmullRomCurve3\", this.points = e || [], this.closed = t || !1, this.curveType = r || \"centripetal\", this.tension = i || .5;\n      }\n\n      function Ai(e, t, r, i, n) {\n        var o = .5 * (i - t),\n            a = .5 * (n - r),\n            s = e * e;\n        return (2 * r - 2 * i + o + a) * (e * s) + (-3 * r + 3 * i - 2 * o - a) * s + o * e + r;\n      }\n\n      function Li(e, t) {\n        var r = 1 - e;\n        return r * r * t;\n      }\n\n      function Ci(e, t) {\n        return 2 * (1 - e) * e * t;\n      }\n\n      function Ri(e, t) {\n        return e * e * t;\n      }\n\n      function Pi(e, t, r, i) {\n        return Li(e, t) + Ci(e, r) + Ri(e, i);\n      }\n\n      function Di(e, t) {\n        var r = 1 - e;\n        return r * r * r * t;\n      }\n\n      function Ui(e, t) {\n        var r = 1 - e;\n        return 3 * r * r * e * t;\n      }\n\n      function Ii(e, t) {\n        return 3 * (1 - e) * e * e * t;\n      }\n\n      function Oi(e, t) {\n        return e * e * e * t;\n      }\n\n      function Ni(e, t, r, i, n) {\n        return Di(e, t) + Ui(e, r) + Ii(e, i) + Oi(e, n);\n      }\n\n      function Fi(e, t, r, i) {\n        wi.call(this), this.type = \"CubicBezierCurve\", this.v0 = e || new n(), this.v1 = t || new n(), this.v2 = r || new n(), this.v3 = i || new n();\n      }\n\n      function zi(e, t, r, i) {\n        wi.call(this), this.type = \"CubicBezierCurve3\", this.v0 = e || new s(), this.v1 = t || new s(), this.v2 = r || new s(), this.v3 = i || new s();\n      }\n\n      function Bi(e, t) {\n        wi.call(this), this.type = \"LineCurve\", this.v1 = e || new n(), this.v2 = t || new n();\n      }\n\n      function Gi(e, t) {\n        wi.call(this), this.type = \"LineCurve3\", this.v1 = e || new s(), this.v2 = t || new s();\n      }\n\n      function Hi(e, t, r) {\n        wi.call(this), this.type = \"QuadraticBezierCurve\", this.v0 = e || new n(), this.v1 = t || new n(), this.v2 = r || new n();\n      }\n\n      function ji(e, t, r) {\n        wi.call(this), this.type = \"QuadraticBezierCurve3\", this.v0 = e || new s(), this.v1 = t || new s(), this.v2 = r || new s();\n      }\n\n      function Vi(e) {\n        wi.call(this), this.type = \"SplineCurve\", this.points = e || [];\n      }\n\n      function ki() {\n        wi.call(this), this.type = \"CurvePath\", this.curves = [], this.autoClose = !1;\n      }\n\n      function Wi(e) {\n        ki.call(this), this.type = \"Path\", this.currentPoint = new n(), e && this.setFromPoints(e);\n      }\n\n      function Xi(e) {\n        Wi.call(this, e), this.uuid = zs.generateUUID(), this.type = \"Shape\", this.holes = [];\n      }\n\n      function qi(e, t) {\n        w.call(this), this.type = \"Light\", this.color = new y(e), this.intensity = void 0 !== t ? t : 1, this.receiveShadow = void 0;\n      }\n\n      function Yi(e, t, r) {\n        qi.call(this, e, r), this.type = \"HemisphereLight\", this.castShadow = void 0, this.position.copy(w.DefaultUp), this.updateMatrix(), this.groundColor = new y(t);\n      }\n\n      function Zi(e) {\n        this.camera = e, this.bias = 0, this.radius = 1, this.mapSize = new n(512, 512), this.map = null, this.matrix = new o();\n      }\n\n      function Ji() {\n        Zi.call(this, new wt(50, 1, .5, 500));\n      }\n\n      function Ki(e, t, r, i, n, o) {\n        qi.call(this, e, t), this.type = \"SpotLight\", this.position.copy(w.DefaultUp), this.updateMatrix(), this.target = new w(), Object.defineProperty(this, \"power\", {\n          get: function get() {\n            return this.intensity * Math.PI;\n          },\n          set: function set(e) {\n            this.intensity = e / Math.PI;\n          }\n        }), this.distance = void 0 !== r ? r : 0, this.angle = void 0 !== i ? i : Math.PI / 3, this.penumbra = void 0 !== n ? n : 0, this.decay = void 0 !== o ? o : 1, this.shadow = new Ji();\n      }\n\n      function Qi(e, t, r, i) {\n        qi.call(this, e, t), this.type = \"PointLight\", Object.defineProperty(this, \"power\", {\n          get: function get() {\n            return 4 * this.intensity * Math.PI;\n          },\n          set: function set(e) {\n            this.intensity = e / (4 * Math.PI);\n          }\n        }), this.distance = void 0 !== r ? r : 0, this.decay = void 0 !== i ? i : 1, this.shadow = new Zi(new wt(90, 1, .5, 500));\n      }\n\n      function $i() {\n        Zi.call(this, new E(-5, 5, 5, -5, .5, 500));\n      }\n\n      function en(e, t) {\n        qi.call(this, e, t), this.type = \"DirectionalLight\", this.position.copy(w.DefaultUp), this.updateMatrix(), this.target = new w(), this.shadow = new $i();\n      }\n\n      function tn(e, t) {\n        qi.call(this, e, t), this.type = \"AmbientLight\", this.castShadow = void 0;\n      }\n\n      function rn(e, t, r, i) {\n        qi.call(this, e, t), this.type = \"RectAreaLight\", this.width = void 0 !== r ? r : 10, this.height = void 0 !== i ? i : 10;\n      }\n\n      function nn(e, t, r, i) {\n        fn.call(this, e, t, r, i);\n      }\n\n      function on(e, t, r) {\n        fn.call(this, e, t, r);\n      }\n\n      function an(e, t, r, i) {\n        this.parameterPositions = e, this._cachedIndex = 0, this.resultBuffer = void 0 !== i ? i : new t.constructor(r), this.sampleValues = t, this.valueSize = r;\n      }\n\n      function sn(e, t, r, i) {\n        an.call(this, e, t, r, i);\n      }\n\n      function cn(e, t, r, i) {\n        fn.call(this, e, t, r, i);\n      }\n\n      function ln(e, t, r, i) {\n        fn.call(this, e, t, r, i);\n      }\n\n      function un(e, t, r, i) {\n        fn.call(this, e, t, r, i);\n      }\n\n      function hn(e, t, r, i) {\n        an.call(this, e, t, r, i), this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0;\n      }\n\n      function dn(e, t, r, i) {\n        an.call(this, e, t, r, i);\n      }\n\n      function pn(e, t, r, i) {\n        an.call(this, e, t, r, i);\n      }\n\n      function fn(e, t, r, i) {\n        if (void 0 === e) throw new Error(\"THREE.KeyframeTrack: track name is undefined\");\n        if (void 0 === t || 0 === t.length) throw new Error(\"THREE.KeyframeTrack: no keyframes in track named \" + e);\n        this.name = e, this.times = gc.convertArray(t, this.TimeBufferType), this.values = gc.convertArray(r, this.ValueBufferType), this.setInterpolation(i || this.DefaultInterpolation), this.validate(), this.optimize();\n      }\n\n      function mn(e, t, r, i) {\n        fn.call(this, e, t, r, i);\n      }\n\n      function vn(e, t, r) {\n        this.name = e, this.tracks = r, this.duration = void 0 !== t ? t : -1, this.uuid = zs.generateUUID(), this.duration < 0 && this.resetDuration(), this.optimize();\n      }\n\n      function gn(e) {\n        this.manager = void 0 !== e ? e : uc, this.textures = {};\n      }\n\n      function yn(e) {\n        this.manager = void 0 !== e ? e : uc;\n      }\n\n      function xn() {}\n\n      function _n(e) {\n        \"boolean\" == typeof e && (console.warn(\"THREE.JSONLoader: showStatus parameter has been removed from constructor.\"), e = void 0), this.manager = void 0 !== e ? e : uc, this.withCredentials = !1;\n      }\n\n      function bn(e) {\n        this.manager = void 0 !== e ? e : uc, this.texturePath = \"\";\n      }\n\n      function wn(e) {\n        \"undefined\" == typeof createImageBitmap && console.warn(\"THREE.ImageBitmapLoader: createImageBitmap() not supported.\"), \"undefined\" == typeof fetch && console.warn(\"THREE.ImageBitmapLoader: fetch() not supported.\"), this.manager = void 0 !== e ? e : uc, this.options = void 0;\n      }\n\n      function Mn() {\n        this.type = \"ShapePath\", this.color = new y(), this.subPaths = [], this.currentPath = null;\n      }\n\n      function En(e) {\n        this.type = \"Font\", this.data = e;\n      }\n\n      function Sn(e, t, r, i) {\n        for (var n = String(e).split(\"\"), o = t / i.resolution, a = (i.boundingBox.yMax - i.boundingBox.yMin + i.underlineThickness) * o, s = [], c = 0, l = 0, u = 0; u < n.length; u++) {\n          var h = n[u];\n          if (\"\\n\" === h) c = 0, l -= a;else {\n            var d = Tn(h, r, o, c, l, i);\n            c += d.offsetX, s.push(d.path);\n          }\n        }\n\n        return s;\n      }\n\n      function Tn(e, t, r, i, n, o) {\n        var a = o.glyphs[e] || o.glyphs[\"?\"];\n\n        if (a) {\n          var s,\n              c,\n              l,\n              u,\n              h,\n              d,\n              p,\n              f,\n              m = new Mn();\n          if (a.o) for (var v = a._cachedOutline || (a._cachedOutline = a.o.split(\" \")), g = 0, y = v.length; g < y;) {\n            var x = v[g++];\n\n            switch (x) {\n              case \"m\":\n                s = v[g++] * r + i, c = v[g++] * r + n, m.moveTo(s, c);\n                break;\n\n              case \"l\":\n                s = v[g++] * r + i, c = v[g++] * r + n, m.lineTo(s, c);\n                break;\n\n              case \"q\":\n                l = v[g++] * r + i, u = v[g++] * r + n, h = v[g++] * r + i, d = v[g++] * r + n, m.quadraticCurveTo(h, d, l, u);\n                break;\n\n              case \"b\":\n                l = v[g++] * r + i, u = v[g++] * r + n, h = v[g++] * r + i, d = v[g++] * r + n, p = v[g++] * r + i, f = v[g++] * r + n, m.bezierCurveTo(h, d, p, f, l, u);\n            }\n          }\n          return {\n            offsetX: a.ha * r,\n            path: m\n          };\n        }\n      }\n\n      function An(e) {\n        this.manager = void 0 !== e ? e : uc;\n      }\n\n      function Ln(e) {\n        this.manager = void 0 !== e ? e : uc;\n      }\n\n      function Cn() {\n        this.type = \"StereoCamera\", this.aspect = 1, this.eyeSep = .064, this.cameraL = new wt(), this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new wt(), this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1;\n      }\n\n      function Rn(e, t, r) {\n        w.call(this), this.type = \"CubeCamera\";\n        var i = new wt(90, 1, e, t);\n        i.up.set(0, -1, 0), i.lookAt(new s(1, 0, 0)), this.add(i);\n        var n = new wt(90, 1, e, t);\n        n.up.set(0, -1, 0), n.lookAt(new s(-1, 0, 0)), this.add(n);\n        var o = new wt(90, 1, e, t);\n        o.up.set(0, 0, 1), o.lookAt(new s(0, 1, 0)), this.add(o);\n        var a = new wt(90, 1, e, t);\n        a.up.set(0, 0, -1), a.lookAt(new s(0, -1, 0)), this.add(a);\n        var c = new wt(90, 1, e, t);\n        c.up.set(0, -1, 0), c.lookAt(new s(0, 0, 1)), this.add(c);\n        var l = new wt(90, 1, e, t);\n        l.up.set(0, -1, 0), l.lookAt(new s(0, 0, -1)), this.add(l);\n        var u = {\n          format: Za,\n          magFilter: Ua,\n          minFilter: Ua\n        };\n        this.renderTarget = new d(r, r, u), this.renderTarget.texture.name = \"CubeCamera\", this.update = function (e, t) {\n          null === this.parent && this.updateMatrixWorld();\n          var r = this.renderTarget,\n              s = r.texture.generateMipmaps;\n          r.texture.generateMipmaps = !1, r.activeCubeFace = 0, e.render(t, i, r), r.activeCubeFace = 1, e.render(t, n, r), r.activeCubeFace = 2, e.render(t, o, r), r.activeCubeFace = 3, e.render(t, a, r), r.activeCubeFace = 4, e.render(t, c, r), r.texture.generateMipmaps = s, r.activeCubeFace = 5, e.render(t, l, r), e.setRenderTarget(null);\n        }, this.clear = function (e, t, r, i) {\n          for (var n = this.renderTarget, o = 0; o < 6; o++) {\n            n.activeCubeFace = o, e.setRenderTarget(n), e.clear(t, r, i);\n          }\n\n          e.setRenderTarget(null);\n        };\n      }\n\n      function Pn() {\n        w.call(this), this.type = \"AudioListener\", this.context = Ec.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null;\n      }\n\n      function Dn(e) {\n        w.call(this), this.type = \"Audio\", this.context = e.context, this.gain = this.context.createGain(), this.gain.connect(e.getInput()), this.autoplay = !1, this.buffer = null, this.loop = !1, this.startTime = 0, this.offset = 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.sourceType = \"empty\", this.filters = [];\n      }\n\n      function Un(e) {\n        Dn.call(this, e), this.panner = this.context.createPanner(), this.panner.connect(this.gain);\n      }\n\n      function In(e, t) {\n        this.analyser = e.context.createAnalyser(), this.analyser.fftSize = void 0 !== t ? t : 2048, this.data = new Uint8Array(this.analyser.frequencyBinCount), e.getOutput().connect(this.analyser);\n      }\n\n      function On(e, t, r) {\n        this.binding = e, this.valueSize = r;\n        var i,\n            n = Float64Array;\n\n        switch (t) {\n          case \"quaternion\":\n            i = this._slerp;\n            break;\n\n          case \"string\":\n          case \"bool\":\n            n = Array, i = this._select;\n            break;\n\n          default:\n            i = this._lerp;\n        }\n\n        this.buffer = new n(4 * r), this._mixBufferRegion = i, this.cumulativeWeight = 0, this.useCount = 0, this.referenceCount = 0;\n      }\n\n      function Nn(e, t, r) {\n        var i = r || Fn.parseTrackName(t);\n        this._targetGroup = e, this._bindings = e.subscribe_(t, i);\n      }\n\n      function Fn(e, t, r) {\n        this.path = t, this.parsedPath = r || Fn.parseTrackName(t), this.node = Fn.findNode(e, this.parsedPath.nodeName) || e, this.rootNode = e;\n      }\n\n      function zn() {\n        this.uuid = zs.generateUUID(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;\n        var e = {};\n        this._indicesByUUID = e;\n\n        for (var t = 0, r = arguments.length; t !== r; ++t) {\n          e[arguments[t].uuid] = t;\n        }\n\n        this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};\n        var i = this;\n        this.stats = {\n          objects: {\n            get total() {\n              return i._objects.length;\n            },\n\n            get inUse() {\n              return this.total - i.nCachedObjects_;\n            }\n\n          },\n\n          get bindingsPerObject() {\n            return i._bindings.length;\n          }\n\n        };\n      }\n\n      function Bn(e, t, r) {\n        this._mixer = e, this._clip = t, this._localRoot = r || null;\n\n        for (var i = t.tracks, n = i.length, o = new Array(n), a = {\n          endingStart: Ss,\n          endingEnd: Ss\n        }, s = 0; s !== n; ++s) {\n          var c = i[s].createInterpolant(null);\n          o[s] = c, c.settings = a;\n        }\n\n        this._interpolantSettings = a, this._interpolants = o, this._propertyBindings = new Array(n), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = Es, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0;\n      }\n\n      function Gn(e) {\n        this._root = e, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1;\n      }\n\n      function Hn(e) {\n        \"string\" == typeof e && (console.warn(\"THREE.Uniform: Type parameter is no longer needed.\"), e = arguments[1]), this.value = e;\n      }\n\n      function jn() {\n        B.call(this), this.type = \"InstancedBufferGeometry\", this.maxInstancedCount = void 0;\n      }\n\n      function Vn(e, t, r, i) {\n        this.data = e, this.itemSize = t, this.offset = r, this.normalized = !0 === i;\n      }\n\n      function kn(e, t) {\n        this.array = e, this.stride = t, this.count = void 0 !== e ? e.length / t : 0, this.dynamic = !1, this.updateRange = {\n          offset: 0,\n          count: -1\n        }, this.version = 0;\n      }\n\n      function Wn(e, t, r) {\n        kn.call(this, e, t), this.meshPerAttribute = r || 1;\n      }\n\n      function Xn(e, t, r) {\n        A.call(this, e, t), this.meshPerAttribute = r || 1;\n      }\n\n      function qn(e, t, r, i) {\n        this.ray = new q(e, t), this.near = r || 0, this.far = i || 1 / 0, this.params = {\n          Mesh: {},\n          Line: {},\n          LOD: {},\n          Points: {\n            threshold: 1\n          },\n          Sprite: {}\n        }, Object.defineProperties(this.params, {\n          PointCloud: {\n            get: function get() {\n              return console.warn(\"THREE.Raycaster: params.PointCloud has been renamed to params.Points.\"), this.Points;\n            }\n          }\n        });\n      }\n\n      function Yn(e, t) {\n        return e.distance - t.distance;\n      }\n\n      function Zn(e, t, r, i) {\n        if (!1 !== e.visible && (e.raycast(t, r), !0 === i)) for (var n = e.children, o = 0, a = n.length; o < a; o++) {\n          Zn(n[o], t, r, !0);\n        }\n      }\n\n      function Jn(e) {\n        this.autoStart = void 0 === e || e, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1;\n      }\n\n      function Kn(e, t, r) {\n        return this.radius = void 0 !== e ? e : 1, this.phi = void 0 !== t ? t : 0, this.theta = void 0 !== r ? r : 0, this;\n      }\n\n      function Qn(e, t, r) {\n        return this.radius = void 0 !== e ? e : 1, this.theta = void 0 !== t ? t : 0, this.y = void 0 !== r ? r : 0, this;\n      }\n\n      function $n(e, t) {\n        this.min = void 0 !== e ? e : new n(1 / 0, 1 / 0), this.max = void 0 !== t ? t : new n(-1 / 0, -1 / 0);\n      }\n\n      function eo(e) {\n        w.call(this), this.material = e, this.render = function () {};\n      }\n\n      function to(e, t, r, i) {\n        this.object = e, this.size = void 0 !== t ? t : 1;\n        var n = void 0 !== r ? r : 16711680,\n            o = void 0 !== i ? i : 1,\n            a = 0,\n            s = this.object.geometry;\n        s && s.isGeometry ? a = 3 * s.faces.length : s && s.isBufferGeometry && (a = s.attributes.normal.count);\n        var c = new B(),\n            l = new O(2 * a * 3, 3);\n        c.addAttribute(\"position\", l), Ft.call(this, c, new Ot({\n          color: n,\n          linewidth: o\n        })), this.matrixAutoUpdate = !1, this.update();\n      }\n\n      function ro(e, t) {\n        w.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = t;\n\n        for (var r = new B(), i = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], n = 0, o = 1; n < 32; n++, o++) {\n          var a = n / 32 * Math.PI * 2,\n              s = o / 32 * Math.PI * 2;\n          i.push(Math.cos(a), Math.sin(a), 1, Math.cos(s), Math.sin(s), 1);\n        }\n\n        r.addAttribute(\"position\", new O(i, 3));\n        var c = new Ot({\n          fog: !1\n        });\n        this.cone = new Ft(r, c), this.add(this.cone), this.update();\n      }\n\n      function io(e) {\n        var t = [];\n        e && e.isBone && t.push(e);\n\n        for (var r = 0; r < e.children.length; r++) {\n          t.push.apply(t, io(e.children[r]));\n        }\n\n        return t;\n      }\n\n      function no(e) {\n        for (var t = io(e), r = new B(), i = [], n = [], o = new y(0, 0, 1), a = new y(0, 1, 0), s = 0; s < t.length; s++) {\n          var c = t[s];\n          c.parent && c.parent.isBone && (i.push(0, 0, 0), i.push(0, 0, 0), n.push(o.r, o.g, o.b), n.push(a.r, a.g, a.b));\n        }\n\n        r.addAttribute(\"position\", new O(i, 3)), r.addAttribute(\"color\", new O(n, 3));\n        var l = new Ot({\n          vertexColors: Oo,\n          depthTest: !1,\n          depthWrite: !1,\n          transparent: !0\n        });\n        Ft.call(this, r, l), this.root = e, this.bones = t, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1;\n      }\n\n      function oo(e, t, r) {\n        this.light = e, this.light.updateMatrixWorld(), this.color = r;\n        var i = new Wr(t, 4, 2),\n            n = new W({\n          wireframe: !0,\n          fog: !1\n        });\n        J.call(this, i, n), this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1, this.update();\n      }\n\n      function ao(e, t) {\n        w.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = t;\n        var r = new Ot({\n          fog: !1\n        }),\n            i = new B();\n        i.addAttribute(\"position\", new A(new Float32Array(15), 3)), this.line = new Nt(i, r), this.add(this.line), this.update();\n      }\n\n      function so(e, t, r) {\n        w.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = r;\n        var i = new $t(t);\n        i.rotateY(.5 * Math.PI), this.material = new W({\n          wireframe: !0,\n          fog: !1\n        }), void 0 === this.color && (this.material.vertexColors = Oo);\n        var n = i.getAttribute(\"position\"),\n            o = new Float32Array(3 * n.count);\n        i.addAttribute(\"color\", new A(o, 3)), this.add(new J(i, this.material)), this.update();\n      }\n\n      function co(e, t, r, i) {\n        e = e || 10, t = t || 10, r = new y(void 0 !== r ? r : 4473924), i = new y(void 0 !== i ? i : 8947848);\n\n        for (var n = t / 2, o = e / t, a = e / 2, s = [], c = [], l = 0, u = 0, h = -a; l <= t; l++, h += o) {\n          s.push(-a, 0, h, a, 0, h), s.push(h, 0, -a, h, 0, a);\n          var d = l === n ? r : i;\n          d.toArray(c, u), u += 3, d.toArray(c, u), u += 3, d.toArray(c, u), u += 3, d.toArray(c, u), u += 3;\n        }\n\n        var p = new B();\n        p.addAttribute(\"position\", new O(s, 3)), p.addAttribute(\"color\", new O(c, 3));\n        var f = new Ot({\n          vertexColors: Oo\n        });\n        Ft.call(this, p, f);\n      }\n\n      function lo(e, t, r, i, n, o) {\n        e = e || 10, t = t || 16, r = r || 8, i = i || 64, n = new y(void 0 !== n ? n : 4473924), o = new y(void 0 !== o ? o : 8947848);\n        var a,\n            s,\n            c,\n            l,\n            u,\n            h,\n            d,\n            p = [],\n            f = [];\n\n        for (l = 0; l <= t; l++) {\n          c = l / t * (2 * Math.PI), a = Math.sin(c) * e, s = Math.cos(c) * e, p.push(0, 0, 0), p.push(a, 0, s), d = 1 & l ? n : o, f.push(d.r, d.g, d.b), f.push(d.r, d.g, d.b);\n        }\n\n        for (l = 0; l <= r; l++) {\n          for (d = 1 & l ? n : o, h = e - e / r * l, u = 0; u < i; u++) {\n            c = u / i * (2 * Math.PI), a = Math.sin(c) * h, s = Math.cos(c) * h, p.push(a, 0, s), f.push(d.r, d.g, d.b), c = (u + 1) / i * (2 * Math.PI), a = Math.sin(c) * h, s = Math.cos(c) * h, p.push(a, 0, s), f.push(d.r, d.g, d.b);\n          }\n        }\n\n        var m = new B();\n        m.addAttribute(\"position\", new O(p, 3)), m.addAttribute(\"color\", new O(f, 3));\n        var v = new Ot({\n          vertexColors: Oo\n        });\n        Ft.call(this, m, v);\n      }\n\n      function uo(e, t, r, i) {\n        this.object = e, this.size = void 0 !== t ? t : 1;\n        var n = void 0 !== r ? r : 16776960,\n            o = void 0 !== i ? i : 1,\n            a = 0,\n            s = this.object.geometry;\n        s && s.isGeometry ? a = s.faces.length : console.warn(\"THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.\");\n        var c = new B(),\n            l = new O(2 * a * 3, 3);\n        c.addAttribute(\"position\", l), Ft.call(this, c, new Ot({\n          color: n,\n          linewidth: o\n        })), this.matrixAutoUpdate = !1, this.update();\n      }\n\n      function ho(e, t, r) {\n        w.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = r, void 0 === t && (t = 1);\n        var i = new B();\n        i.addAttribute(\"position\", new O([-t, t, 0, t, t, 0, t, -t, 0, -t, -t, 0, -t, t, 0], 3));\n        var n = new Ot({\n          fog: !1\n        });\n        this.lightPlane = new Nt(i, n), this.add(this.lightPlane), i = new B(), i.addAttribute(\"position\", new O([0, 0, 0, 0, 0, 1], 3)), this.targetLine = new Nt(i, n), this.add(this.targetLine), this.update();\n      }\n\n      function po(e) {\n        function t(e, t, i) {\n          r(e, i), r(t, i);\n        }\n\n        function r(e, t) {\n          o.push(0, 0, 0), a.push(t.r, t.g, t.b), void 0 === s[e] && (s[e] = []), s[e].push(o.length / 3 - 1);\n        }\n\n        var i = new B(),\n            n = new Ot({\n          color: 16777215,\n          vertexColors: Io\n        }),\n            o = [],\n            a = [],\n            s = {},\n            c = new y(16755200),\n            l = new y(16711680),\n            u = new y(43775),\n            h = new y(16777215),\n            d = new y(3355443);\n        t(\"n1\", \"n2\", c), t(\"n2\", \"n4\", c), t(\"n4\", \"n3\", c), t(\"n3\", \"n1\", c), t(\"f1\", \"f2\", c), t(\"f2\", \"f4\", c), t(\"f4\", \"f3\", c), t(\"f3\", \"f1\", c), t(\"n1\", \"f1\", c), t(\"n2\", \"f2\", c), t(\"n3\", \"f3\", c), t(\"n4\", \"f4\", c), t(\"p\", \"n1\", l), t(\"p\", \"n2\", l), t(\"p\", \"n3\", l), t(\"p\", \"n4\", l), t(\"u1\", \"u2\", u), t(\"u2\", \"u3\", u), t(\"u3\", \"u1\", u), t(\"c\", \"t\", h), t(\"p\", \"c\", d), t(\"cn1\", \"cn2\", d), t(\"cn3\", \"cn4\", d), t(\"cf1\", \"cf2\", d), t(\"cf3\", \"cf4\", d), i.addAttribute(\"position\", new O(o, 3)), i.addAttribute(\"color\", new O(a, 3)), Ft.call(this, i, n), this.camera = e, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = s, this.update();\n      }\n\n      function fo(e, t) {\n        this.object = e, void 0 === t && (t = 16776960);\n        var r = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]),\n            i = new Float32Array(24),\n            n = new B();\n        n.setIndex(new A(r, 1)), n.addAttribute(\"position\", new A(i, 3)), Ft.call(this, n, new Ot({\n          color: t\n        })), this.matrixAutoUpdate = !1, this.update();\n      }\n\n      function mo(e, t) {\n        this.type = \"Box3Helper\", this.box = e;\n        var r = void 0 !== t ? t : 16776960,\n            i = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]),\n            n = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1],\n            o = new B();\n        o.setIndex(new A(i, 1)), o.addAttribute(\"position\", new O(n, 3)), Ft.call(this, o, new Ot({\n          color: r\n        })), this.geometry.computeBoundingSphere();\n      }\n\n      function vo(e, t, r) {\n        this.type = \"PlaneHelper\", this.plane = e, this.size = void 0 === t ? 1 : t;\n        var i = void 0 !== r ? r : 16776960,\n            n = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0],\n            o = new B();\n        o.addAttribute(\"position\", new O(n, 3)), o.computeBoundingSphere(), Nt.call(this, o, new Ot({\n          color: i\n        }));\n        var a = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1],\n            s = new B();\n        s.addAttribute(\"position\", new O(a, 3)), s.computeBoundingSphere(), this.add(new J(s, new W({\n          color: i,\n          opacity: .2,\n          transparent: !0,\n          depthWrite: !1\n        })));\n      }\n\n      function go(e, t, r, i, n, o) {\n        w.call(this), void 0 === i && (i = 16776960), void 0 === r && (r = 1), void 0 === n && (n = .2 * r), void 0 === o && (o = .2 * n), void 0 === Tc && (Tc = new B(), Tc.addAttribute(\"position\", new O([0, 0, 0, 0, 1, 0], 3)), Ac = new ti(0, .5, 1, 5, 1), Ac.translate(0, -.5, 0)), this.position.copy(t), this.line = new Nt(Tc, new Ot({\n          color: i\n        })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new J(Ac, new W({\n          color: i\n        })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(e), this.setLength(r, n, o);\n      }\n\n      function yo(e) {\n        e = e || 1;\n        var t = [0, 0, 0, e, 0, 0, 0, 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e],\n            r = [1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1],\n            i = new B();\n        i.addAttribute(\"position\", new O(t, 3)), i.addAttribute(\"color\", new O(r, 3));\n        var n = new Ot({\n          vertexColors: Oo\n        });\n        Ft.call(this, i, n);\n      }\n\n      function xo(e) {\n        console.warn(\"THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.\"), Ti.call(this, e), this.type = \"catmullrom\", this.closed = !0;\n      }\n\n      function _o(e) {\n        console.warn(\"THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.\"), Ti.call(this, e), this.type = \"catmullrom\";\n      }\n\n      function bo(e) {\n        console.warn(\"THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.\"), Ti.call(this, e), this.type = \"catmullrom\";\n      }\n\n      function wo(e) {\n        return console.warn(\"THREE.XHRLoader has been renamed to THREE.FileLoader.\"), new vi(e);\n      }\n\n      r.d(t, \"_53\", function () {\n        return h;\n      }), r.d(t, \"_34\", function () {\n        return ks;\n      }), r.d(t, \"_46\", function () {\n        return Hs;\n      }), r.d(t, \"_33\", function () {\n        return Gs;\n      }), r.d(t, \"_31\", function () {\n        return Lt;\n      }), r.d(t, \"_3\", function () {\n        return J;\n      }), r.d(t, \"u\", function () {\n        return p;\n      }), r.d(t, \"_41\", function () {\n        return l;\n      }), r.d(t, \"p\", function () {\n        return gi;\n      }), r.d(t, \"_42\", function () {\n        return bi;\n      }), r.d(t, \"v\", function () {\n        return uc;\n      }), r.d(t, \"F\", function () {\n        return vi;\n      }), r.d(t, \"W\", function () {\n        return xn;\n      }), r.d(t, \"_16\", function () {\n        return wt;\n      }), r.d(t, \"_14\", function () {\n        return E;\n      }), r.d(t, \"k\", function () {\n        return B;\n      }), r.d(t, \"N\", function () {\n        return T;\n      }), r.d(t, \"E\", function () {\n        return S;\n      }), r.d(t, \"_12\", function () {\n        return w;\n      }), r.d(t, \"C\", function () {\n        return i;\n      }), r.d(t, \"_2\", function () {\n        return zs;\n      }), r.d(t, \"_39\", function () {\n        return Kn;\n      }), r.d(t, \"_49\", function () {\n        return s;\n      }), r.d(t, \"_48\", function () {\n        return n;\n      }), r.d(t, \"_18\", function () {\n        return a;\n      }), r.d(t, \"m\", function () {\n        return y;\n      }), r.d(t, \"S\", function () {\n        return eo;\n      }), r.d(t, \"_17\", function () {\n        return V;\n      }), r.d(t, \"_35\", function () {\n        return X;\n      }), r.d(t, \"_7\", function () {\n        return ui;\n      }), r.d(t, \"_6\", function () {\n        return pi;\n      }), r.d(t, \"_5\", function () {\n        return ft;\n      }), r.d(t, \"_4\", function () {\n        return W;\n      }), r.d(t, \"j\", function () {\n        return A;\n      }), r.d(t, \"Y\", function () {\n        return Eo;\n      }), r.d(t, \"L\", function () {\n        return Ro;\n      }), r.d(t, \"_9\", function () {\n        return No;\n      }), r.d(t, \"b\", function () {\n        return zo;\n      }), r.d(t, \"_27\", function () {\n        return Aa;\n      }), r.d(t, \"U\", function () {\n        return Ua;\n      }), r.d(t, \"V\", function () {\n        return Oa;\n      }), r.d(t, \"I\", function () {\n        return ja;\n      }), r.d(t, \"_22\", function () {\n        return Za;\n      }), r.d(t, \"_19\", function () {\n        return Ja;\n      }), r.d(t, \"_25\", function () {\n        return ts;\n      }), r.d(t, \"_20\", function () {\n        return is;\n      }), r.d(t, \"_21\", function () {\n        return ns;\n      }), r.d(t, \"_24\", function () {\n        return ls;\n      }), r.d(t, \"_54\", function () {\n        return wo;\n      }), void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)), void 0 === Number.isInteger && (Number.isInteger = function (e) {\n        return \"number\" == typeof e && isFinite(e) && Math.floor(e) === e;\n      }), void 0 === Math.sign && (Math.sign = function (e) {\n        return e < 0 ? -1 : e > 0 ? 1 : +e;\n      }), \"name\" in Function.prototype == !1 && Object.defineProperty(Function.prototype, \"name\", {\n        get: function get() {\n          return this.toString().match(/^\\s*function\\s*([^\\(\\s]*)/)[1];\n        }\n      }), void 0 === Object.assign && function () {\n        Object.assign = function (e) {\n          if (void 0 === e || null === e) throw new TypeError(\"Cannot convert undefined or null to object\");\n\n          for (var t = Object(e), r = 1; r < arguments.length; r++) {\n            var i = arguments[r];\n            if (void 0 !== i && null !== i) for (var n in i) {\n              Object.prototype.hasOwnProperty.call(i, n) && (t[n] = i[n]);\n            }\n          }\n\n          return t;\n        };\n      }(), Object.assign(i.prototype, {\n        addEventListener: function addEventListener(e, t) {\n          void 0 === this._listeners && (this._listeners = {});\n          var r = this._listeners;\n          void 0 === r[e] && (r[e] = []), -1 === r[e].indexOf(t) && r[e].push(t);\n        },\n        hasEventListener: function hasEventListener(e, t) {\n          if (void 0 === this._listeners) return !1;\n          var r = this._listeners;\n          return void 0 !== r[e] && -1 !== r[e].indexOf(t);\n        },\n        removeEventListener: function removeEventListener(e, t) {\n          if (void 0 !== this._listeners) {\n            var r = this._listeners,\n                i = r[e];\n\n            if (void 0 !== i) {\n              var n = i.indexOf(t);\n              -1 !== n && i.splice(n, 1);\n            }\n          }\n        },\n        dispatchEvent: function dispatchEvent(e) {\n          if (void 0 !== this._listeners) {\n            var t = this._listeners,\n                r = t[e.type];\n\n            if (void 0 !== r) {\n              e.target = this;\n\n              for (var i = r.slice(0), n = 0, o = i.length; n < o; n++) {\n                i[n].call(this, e);\n              }\n            }\n          }\n        }\n      });\n      var Mo = \"92\",\n          Eo = {\n        LEFT: 0,\n        MIDDLE: 1,\n        RIGHT: 2\n      },\n          So = 0,\n          To = 1,\n          Ao = 2,\n          Lo = 1,\n          Co = 2,\n          Ro = 0,\n          Po = 1,\n          Do = 2,\n          Uo = 0,\n          Io = 1,\n          Oo = 2,\n          No = 0,\n          Fo = 1,\n          zo = 2,\n          Bo = 3,\n          Go = 4,\n          Ho = 5,\n          jo = 100,\n          Vo = 101,\n          ko = 102,\n          Wo = 103,\n          Xo = 104,\n          qo = 200,\n          Yo = 201,\n          Zo = 202,\n          Jo = 203,\n          Ko = 204,\n          Qo = 205,\n          $o = 206,\n          ea = 207,\n          ta = 208,\n          ra = 209,\n          ia = 210,\n          na = 0,\n          oa = 1,\n          aa = 2,\n          sa = 3,\n          ca = 4,\n          la = 5,\n          ua = 6,\n          ha = 7,\n          da = 0,\n          pa = 1,\n          fa = 2,\n          ma = 0,\n          va = 1,\n          ga = 2,\n          ya = 3,\n          xa = 4,\n          _a = 301,\n          ba = 302,\n          wa = 303,\n          Ma = 304,\n          Ea = 305,\n          Sa = 306,\n          Ta = 307,\n          Aa = 1e3,\n          La = 1001,\n          Ca = 1002,\n          Ra = 1003,\n          Pa = 1004,\n          Da = 1005,\n          Ua = 1006,\n          Ia = 1007,\n          Oa = 1008,\n          Na = 1009,\n          Fa = 1010,\n          za = 1011,\n          Ba = 1012,\n          Ga = 1013,\n          Ha = 1014,\n          ja = 1015,\n          Va = 1016,\n          ka = 1017,\n          Wa = 1018,\n          Xa = 1019,\n          qa = 1020,\n          Ya = 1021,\n          Za = 1022,\n          Ja = 1023,\n          Ka = 1024,\n          Qa = 1025,\n          $a = 1026,\n          es = 1027,\n          ts = 33776,\n          rs = 33777,\n          is = 33778,\n          ns = 33779,\n          os = 35840,\n          as = 35841,\n          ss = 35842,\n          cs = 35843,\n          ls = 36196,\n          us = 37808,\n          hs = 37809,\n          ds = 37810,\n          ps = 37811,\n          fs = 37812,\n          ms = 37813,\n          vs = 37814,\n          gs = 37815,\n          ys = 37816,\n          xs = 37817,\n          _s = 37818,\n          bs = 37819,\n          ws = 37820,\n          Ms = 37821,\n          Es = 2201,\n          Ss = 2400,\n          Ts = 0,\n          As = 1,\n          Ls = 2,\n          Cs = 3e3,\n          Rs = 3001,\n          Ps = 3007,\n          Ds = 3002,\n          Us = 3004,\n          Is = 3005,\n          Os = 3006,\n          Ns = 3200,\n          Fs = 3201,\n          zs = {\n        DEG2RAD: Math.PI / 180,\n        RAD2DEG: 180 / Math.PI,\n        generateUUID: function () {\n          for (var e = [], t = 0; t < 256; t++) {\n            e[t] = (t < 16 ? \"0\" : \"\") + t.toString(16);\n          }\n\n          return function () {\n            var t = 4294967295 * Math.random() | 0,\n                r = 4294967295 * Math.random() | 0,\n                i = 4294967295 * Math.random() | 0,\n                n = 4294967295 * Math.random() | 0;\n            return (e[255 & t] + e[t >> 8 & 255] + e[t >> 16 & 255] + e[t >> 24 & 255] + \"-\" + e[255 & r] + e[r >> 8 & 255] + \"-\" + e[r >> 16 & 15 | 64] + e[r >> 24 & 255] + \"-\" + e[63 & i | 128] + e[i >> 8 & 255] + \"-\" + e[i >> 16 & 255] + e[i >> 24 & 255] + e[255 & n] + e[n >> 8 & 255] + e[n >> 16 & 255] + e[n >> 24 & 255]).toUpperCase();\n          };\n        }(),\n        clamp: function clamp(e, t, r) {\n          return Math.max(t, Math.min(r, e));\n        },\n        euclideanModulo: function euclideanModulo(e, t) {\n          return (e % t + t) % t;\n        },\n        mapLinear: function mapLinear(e, t, r, i, n) {\n          return i + (e - t) * (n - i) / (r - t);\n        },\n        lerp: function lerp(e, t, r) {\n          return (1 - r) * e + r * t;\n        },\n        smoothstep: function smoothstep(e, t, r) {\n          return e <= t ? 0 : e >= r ? 1 : (e = (e - t) / (r - t)) * e * (3 - 2 * e);\n        },\n        smootherstep: function smootherstep(e, t, r) {\n          return e <= t ? 0 : e >= r ? 1 : (e = (e - t) / (r - t)) * e * e * (e * (6 * e - 15) + 10);\n        },\n        randInt: function randInt(e, t) {\n          return e + Math.floor(Math.random() * (t - e + 1));\n        },\n        randFloat: function randFloat(e, t) {\n          return e + Math.random() * (t - e);\n        },\n        randFloatSpread: function randFloatSpread(e) {\n          return e * (.5 - Math.random());\n        },\n        degToRad: function degToRad(e) {\n          return e * zs.DEG2RAD;\n        },\n        radToDeg: function radToDeg(e) {\n          return e * zs.RAD2DEG;\n        },\n        isPowerOfTwo: function isPowerOfTwo(e) {\n          return 0 == (e & e - 1) && 0 !== e;\n        },\n        ceilPowerOfTwo: function ceilPowerOfTwo(e) {\n          return Math.pow(2, Math.ceil(Math.log(e) / Math.LN2));\n        },\n        floorPowerOfTwo: function floorPowerOfTwo(e) {\n          return Math.pow(2, Math.floor(Math.log(e) / Math.LN2));\n        }\n      };\n      Object.defineProperties(n.prototype, {\n        width: {\n          get: function get() {\n            return this.x;\n          },\n          set: function set(e) {\n            this.x = e;\n          }\n        },\n        height: {\n          get: function get() {\n            return this.y;\n          },\n          set: function set(e) {\n            this.y = e;\n          }\n        }\n      }), Object.assign(n.prototype, {\n        isVector2: !0,\n        set: function set(e, t) {\n          return this.x = e, this.y = t, this;\n        },\n        setScalar: function setScalar(e) {\n          return this.x = e, this.y = e, this;\n        },\n        setX: function setX(e) {\n          return this.x = e, this;\n        },\n        setY: function setY(e) {\n          return this.y = e, this;\n        },\n        setComponent: function setComponent(e, t) {\n          switch (e) {\n            case 0:\n              this.x = t;\n              break;\n\n            case 1:\n              this.y = t;\n              break;\n\n            default:\n              throw new Error(\"index is out of range: \" + e);\n          }\n\n          return this;\n        },\n        getComponent: function getComponent(e) {\n          switch (e) {\n            case 0:\n              return this.x;\n\n            case 1:\n              return this.y;\n\n            default:\n              throw new Error(\"index is out of range: \" + e);\n          }\n        },\n        clone: function clone() {\n          return new this.constructor(this.x, this.y);\n        },\n        copy: function copy(e) {\n          return this.x = e.x, this.y = e.y, this;\n        },\n        add: function add(e, t) {\n          return void 0 !== t ? (console.warn(\"THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this);\n        },\n        addScalar: function addScalar(e) {\n          return this.x += e, this.y += e, this;\n        },\n        addVectors: function addVectors(e, t) {\n          return this.x = e.x + t.x, this.y = e.y + t.y, this;\n        },\n        addScaledVector: function addScaledVector(e, t) {\n          return this.x += e.x * t, this.y += e.y * t, this;\n        },\n        sub: function sub(e, t) {\n          return void 0 !== t ? (console.warn(\"THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this);\n        },\n        subScalar: function subScalar(e) {\n          return this.x -= e, this.y -= e, this;\n        },\n        subVectors: function subVectors(e, t) {\n          return this.x = e.x - t.x, this.y = e.y - t.y, this;\n        },\n        multiply: function multiply(e) {\n          return this.x *= e.x, this.y *= e.y, this;\n        },\n        multiplyScalar: function multiplyScalar(e) {\n          return this.x *= e, this.y *= e, this;\n        },\n        divide: function divide(e) {\n          return this.x /= e.x, this.y /= e.y, this;\n        },\n        divideScalar: function divideScalar(e) {\n          return this.multiplyScalar(1 / e);\n        },\n        applyMatrix3: function applyMatrix3(e) {\n          var t = this.x,\n              r = this.y,\n              i = e.elements;\n          return this.x = i[0] * t + i[3] * r + i[6], this.y = i[1] * t + i[4] * r + i[7], this;\n        },\n        min: function min(e) {\n          return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this;\n        },\n        max: function max(e) {\n          return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this;\n        },\n        clamp: function clamp(e, t) {\n          return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this;\n        },\n        clampScalar: function () {\n          var e = new n(),\n              t = new n();\n          return function (r, i) {\n            return e.set(r, r), t.set(i, i), this.clamp(e, t);\n          };\n        }(),\n        clampLength: function clampLength(e, t) {\n          var r = this.length();\n          return this.divideScalar(r || 1).multiplyScalar(Math.max(e, Math.min(t, r)));\n        },\n        floor: function floor() {\n          return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;\n        },\n        ceil: function ceil() {\n          return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;\n        },\n        round: function round() {\n          return this.x = Math.round(this.x), this.y = Math.round(this.y), this;\n        },\n        roundToZero: function roundToZero() {\n          return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this;\n        },\n        negate: function negate() {\n          return this.x = -this.x, this.y = -this.y, this;\n        },\n        dot: function dot(e) {\n          return this.x * e.x + this.y * e.y;\n        },\n        lengthSq: function lengthSq() {\n          return this.x * this.x + this.y * this.y;\n        },\n        length: function length() {\n          return Math.sqrt(this.x * this.x + this.y * this.y);\n        },\n        manhattanLength: function manhattanLength() {\n          return Math.abs(this.x) + Math.abs(this.y);\n        },\n        normalize: function normalize() {\n          return this.divideScalar(this.length() || 1);\n        },\n        angle: function angle() {\n          var e = Math.atan2(this.y, this.x);\n          return e < 0 && (e += 2 * Math.PI), e;\n        },\n        distanceTo: function distanceTo(e) {\n          return Math.sqrt(this.distanceToSquared(e));\n        },\n        distanceToSquared: function distanceToSquared(e) {\n          var t = this.x - e.x,\n              r = this.y - e.y;\n          return t * t + r * r;\n        },\n        manhattanDistanceTo: function manhattanDistanceTo(e) {\n          return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);\n        },\n        setLength: function setLength(e) {\n          return this.normalize().multiplyScalar(e);\n        },\n        lerp: function lerp(e, t) {\n          return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this;\n        },\n        lerpVectors: function lerpVectors(e, t, r) {\n          return this.subVectors(t, e).multiplyScalar(r).add(e);\n        },\n        equals: function equals(e) {\n          return e.x === this.x && e.y === this.y;\n        },\n        fromArray: function fromArray(e, t) {\n          return void 0 === t && (t = 0), this.x = e[t], this.y = e[t + 1], this;\n        },\n        toArray: function toArray(e, t) {\n          return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e;\n        },\n        fromBufferAttribute: function fromBufferAttribute(e, t, r) {\n          return void 0 !== r && console.warn(\"THREE.Vector2: offset has been removed from .fromBufferAttribute().\"), this.x = e.getX(t), this.y = e.getY(t), this;\n        },\n        rotateAround: function rotateAround(e, t) {\n          var r = Math.cos(t),\n              i = Math.sin(t),\n              n = this.x - e.x,\n              o = this.y - e.y;\n          return this.x = n * r - o * i + e.x, this.y = n * i + o * r + e.y, this;\n        }\n      }), Object.assign(o.prototype, {\n        isMatrix4: !0,\n        set: function set(e, t, r, i, n, o, a, s, c, l, u, h, d, p, f, m) {\n          var v = this.elements;\n          return v[0] = e, v[4] = t, v[8] = r, v[12] = i, v[1] = n, v[5] = o, v[9] = a, v[13] = s, v[2] = c, v[6] = l, v[10] = u, v[14] = h, v[3] = d, v[7] = p, v[11] = f, v[15] = m, this;\n        },\n        identity: function identity() {\n          return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;\n        },\n        clone: function clone() {\n          return new o().fromArray(this.elements);\n        },\n        copy: function copy(e) {\n          var t = this.elements,\n              r = e.elements;\n          return t[0] = r[0], t[1] = r[1], t[2] = r[2], t[3] = r[3], t[4] = r[4], t[5] = r[5], t[6] = r[6], t[7] = r[7], t[8] = r[8], t[9] = r[9], t[10] = r[10], t[11] = r[11], t[12] = r[12], t[13] = r[13], t[14] = r[14], t[15] = r[15], this;\n        },\n        copyPosition: function copyPosition(e) {\n          var t = this.elements,\n              r = e.elements;\n          return t[12] = r[12], t[13] = r[13], t[14] = r[14], this;\n        },\n        extractBasis: function extractBasis(e, t, r) {\n          return e.setFromMatrixColumn(this, 0), t.setFromMatrixColumn(this, 1), r.setFromMatrixColumn(this, 2), this;\n        },\n        makeBasis: function makeBasis(e, t, r) {\n          return this.set(e.x, t.x, r.x, 0, e.y, t.y, r.y, 0, e.z, t.z, r.z, 0, 0, 0, 0, 1), this;\n        },\n        extractRotation: function () {\n          var e = new s();\n          return function (t) {\n            var r = this.elements,\n                i = t.elements,\n                n = 1 / e.setFromMatrixColumn(t, 0).length(),\n                o = 1 / e.setFromMatrixColumn(t, 1).length(),\n                a = 1 / e.setFromMatrixColumn(t, 2).length();\n            return r[0] = i[0] * n, r[1] = i[1] * n, r[2] = i[2] * n, r[4] = i[4] * o, r[5] = i[5] * o, r[6] = i[6] * o, r[8] = i[8] * a, r[9] = i[9] * a, r[10] = i[10] * a, this;\n          };\n        }(),\n        makeRotationFromEuler: function makeRotationFromEuler(e) {\n          e && e.isEuler || console.error(\"THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");\n          var t = this.elements,\n              r = e.x,\n              i = e.y,\n              n = e.z,\n              o = Math.cos(r),\n              a = Math.sin(r),\n              s = Math.cos(i),\n              c = Math.sin(i),\n              l = Math.cos(n),\n              u = Math.sin(n);\n\n          if (\"XYZ\" === e.order) {\n            var h = o * l,\n                d = o * u,\n                p = a * l,\n                f = a * u;\n            t[0] = s * l, t[4] = -s * u, t[8] = c, t[1] = d + p * c, t[5] = h - f * c, t[9] = -a * s, t[2] = f - h * c, t[6] = p + d * c, t[10] = o * s;\n          } else if (\"YXZ\" === e.order) {\n            var m = s * l,\n                v = s * u,\n                g = c * l,\n                y = c * u;\n            t[0] = m + y * a, t[4] = g * a - v, t[8] = o * c, t[1] = o * u, t[5] = o * l, t[9] = -a, t[2] = v * a - g, t[6] = y + m * a, t[10] = o * s;\n          } else if (\"ZXY\" === e.order) {\n            var m = s * l,\n                v = s * u,\n                g = c * l,\n                y = c * u;\n            t[0] = m - y * a, t[4] = -o * u, t[8] = g + v * a, t[1] = v + g * a, t[5] = o * l, t[9] = y - m * a, t[2] = -o * c, t[6] = a, t[10] = o * s;\n          } else if (\"ZYX\" === e.order) {\n            var h = o * l,\n                d = o * u,\n                p = a * l,\n                f = a * u;\n            t[0] = s * l, t[4] = p * c - d, t[8] = h * c + f, t[1] = s * u, t[5] = f * c + h, t[9] = d * c - p, t[2] = -c, t[6] = a * s, t[10] = o * s;\n          } else if (\"YZX\" === e.order) {\n            var x = o * s,\n                _ = o * c,\n                b = a * s,\n                w = a * c;\n\n            t[0] = s * l, t[4] = w - x * u, t[8] = b * u + _, t[1] = u, t[5] = o * l, t[9] = -a * l, t[2] = -c * l, t[6] = _ * u + b, t[10] = x - w * u;\n          } else if (\"XZY\" === e.order) {\n            var x = o * s,\n                _ = o * c,\n                b = a * s,\n                w = a * c;\n\n            t[0] = s * l, t[4] = -u, t[8] = c * l, t[1] = x * u + w, t[5] = o * l, t[9] = _ * u - b, t[2] = b * u - _, t[6] = a * l, t[10] = w * u + x;\n          }\n\n          return t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;\n        },\n        makeRotationFromQuaternion: function makeRotationFromQuaternion(e) {\n          var t = this.elements,\n              r = e._x,\n              i = e._y,\n              n = e._z,\n              o = e._w,\n              a = r + r,\n              s = i + i,\n              c = n + n,\n              l = r * a,\n              u = r * s,\n              h = r * c,\n              d = i * s,\n              p = i * c,\n              f = n * c,\n              m = o * a,\n              v = o * s,\n              g = o * c;\n          return t[0] = 1 - (d + f), t[4] = u - g, t[8] = h + v, t[1] = u + g, t[5] = 1 - (l + f), t[9] = p - m, t[2] = h - v, t[6] = p + m, t[10] = 1 - (l + d), t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;\n        },\n        lookAt: function () {\n          var e = new s(),\n              t = new s(),\n              r = new s();\n          return function (i, n, o) {\n            var a = this.elements;\n            return r.subVectors(i, n), 0 === r.lengthSq() && (r.z = 1), r.normalize(), e.crossVectors(o, r), 0 === e.lengthSq() && (1 === Math.abs(o.z) ? r.x += 1e-4 : r.z += 1e-4, r.normalize(), e.crossVectors(o, r)), e.normalize(), t.crossVectors(r, e), a[0] = e.x, a[4] = t.x, a[8] = r.x, a[1] = e.y, a[5] = t.y, a[9] = r.y, a[2] = e.z, a[6] = t.z, a[10] = r.z, this;\n          };\n        }(),\n        multiply: function multiply(e, t) {\n          return void 0 !== t ? (console.warn(\"THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\"), this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e);\n        },\n        premultiply: function premultiply(e) {\n          return this.multiplyMatrices(e, this);\n        },\n        multiplyMatrices: function multiplyMatrices(e, t) {\n          var r = e.elements,\n              i = t.elements,\n              n = this.elements,\n              o = r[0],\n              a = r[4],\n              s = r[8],\n              c = r[12],\n              l = r[1],\n              u = r[5],\n              h = r[9],\n              d = r[13],\n              p = r[2],\n              f = r[6],\n              m = r[10],\n              v = r[14],\n              g = r[3],\n              y = r[7],\n              x = r[11],\n              _ = r[15],\n              b = i[0],\n              w = i[4],\n              M = i[8],\n              E = i[12],\n              S = i[1],\n              T = i[5],\n              A = i[9],\n              L = i[13],\n              C = i[2],\n              R = i[6],\n              P = i[10],\n              D = i[14],\n              U = i[3],\n              I = i[7],\n              O = i[11],\n              N = i[15];\n          return n[0] = o * b + a * S + s * C + c * U, n[4] = o * w + a * T + s * R + c * I, n[8] = o * M + a * A + s * P + c * O, n[12] = o * E + a * L + s * D + c * N, n[1] = l * b + u * S + h * C + d * U, n[5] = l * w + u * T + h * R + d * I, n[9] = l * M + u * A + h * P + d * O, n[13] = l * E + u * L + h * D + d * N, n[2] = p * b + f * S + m * C + v * U, n[6] = p * w + f * T + m * R + v * I, n[10] = p * M + f * A + m * P + v * O, n[14] = p * E + f * L + m * D + v * N, n[3] = g * b + y * S + x * C + _ * U, n[7] = g * w + y * T + x * R + _ * I, n[11] = g * M + y * A + x * P + _ * O, n[15] = g * E + y * L + x * D + _ * N, this;\n        },\n        multiplyScalar: function multiplyScalar(e) {\n          var t = this.elements;\n          return t[0] *= e, t[4] *= e, t[8] *= e, t[12] *= e, t[1] *= e, t[5] *= e, t[9] *= e, t[13] *= e, t[2] *= e, t[6] *= e, t[10] *= e, t[14] *= e, t[3] *= e, t[7] *= e, t[11] *= e, t[15] *= e, this;\n        },\n        applyToBufferAttribute: function () {\n          var e = new s();\n          return function (t) {\n            for (var r = 0, i = t.count; r < i; r++) {\n              e.x = t.getX(r), e.y = t.getY(r), e.z = t.getZ(r), e.applyMatrix4(this), t.setXYZ(r, e.x, e.y, e.z);\n            }\n\n            return t;\n          };\n        }(),\n        determinant: function determinant() {\n          var e = this.elements,\n              t = e[0],\n              r = e[4],\n              i = e[8],\n              n = e[12],\n              o = e[1],\n              a = e[5],\n              s = e[9],\n              c = e[13],\n              l = e[2],\n              u = e[6],\n              h = e[10],\n              d = e[14];\n          return e[3] * (+n * s * u - i * c * u - n * a * h + r * c * h + i * a * d - r * s * d) + e[7] * (+t * s * d - t * c * h + n * o * h - i * o * d + i * c * l - n * s * l) + e[11] * (+t * c * u - t * a * d - n * o * u + r * o * d + n * a * l - r * c * l) + e[15] * (-i * a * l - t * s * u + t * a * h + i * o * u - r * o * h + r * s * l);\n        },\n        transpose: function transpose() {\n          var e,\n              t = this.elements;\n          return e = t[1], t[1] = t[4], t[4] = e, e = t[2], t[2] = t[8], t[8] = e, e = t[6], t[6] = t[9], t[9] = e, e = t[3], t[3] = t[12], t[12] = e, e = t[7], t[7] = t[13], t[13] = e, e = t[11], t[11] = t[14], t[14] = e, this;\n        },\n        setPosition: function setPosition(e) {\n          var t = this.elements;\n          return t[12] = e.x, t[13] = e.y, t[14] = e.z, this;\n        },\n        getInverse: function getInverse(e, t) {\n          var r = this.elements,\n              i = e.elements,\n              n = i[0],\n              o = i[1],\n              a = i[2],\n              s = i[3],\n              c = i[4],\n              l = i[5],\n              u = i[6],\n              h = i[7],\n              d = i[8],\n              p = i[9],\n              f = i[10],\n              m = i[11],\n              v = i[12],\n              g = i[13],\n              y = i[14],\n              x = i[15],\n              _ = p * y * h - g * f * h + g * u * m - l * y * m - p * u * x + l * f * x,\n              b = v * f * h - d * y * h - v * u * m + c * y * m + d * u * x - c * f * x,\n              w = d * g * h - v * p * h + v * l * m - c * g * m - d * l * x + c * p * x,\n              M = v * p * u - d * g * u - v * l * f + c * g * f + d * l * y - c * p * y,\n              E = n * _ + o * b + a * w + s * M;\n\n          if (0 === E) {\n            var S = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n            if (!0 === t) throw new Error(S);\n            return console.warn(S), this.identity();\n          }\n\n          var T = 1 / E;\n          return r[0] = _ * T, r[1] = (g * f * s - p * y * s - g * a * m + o * y * m + p * a * x - o * f * x) * T, r[2] = (l * y * s - g * u * s + g * a * h - o * y * h - l * a * x + o * u * x) * T, r[3] = (p * u * s - l * f * s - p * a * h + o * f * h + l * a * m - o * u * m) * T, r[4] = b * T, r[5] = (d * y * s - v * f * s + v * a * m - n * y * m - d * a * x + n * f * x) * T, r[6] = (v * u * s - c * y * s - v * a * h + n * y * h + c * a * x - n * u * x) * T, r[7] = (c * f * s - d * u * s + d * a * h - n * f * h - c * a * m + n * u * m) * T, r[8] = w * T, r[9] = (v * p * s - d * g * s - v * o * m + n * g * m + d * o * x - n * p * x) * T, r[10] = (c * g * s - v * l * s + v * o * h - n * g * h - c * o * x + n * l * x) * T, r[11] = (d * l * s - c * p * s - d * o * h + n * p * h + c * o * m - n * l * m) * T, r[12] = M * T, r[13] = (d * g * a - v * p * a + v * o * f - n * g * f - d * o * y + n * p * y) * T, r[14] = (v * l * a - c * g * a - v * o * u + n * g * u + c * o * y - n * l * y) * T, r[15] = (c * p * a - d * l * a + d * o * u - n * p * u - c * o * f + n * l * f) * T, this;\n        },\n        scale: function scale(e) {\n          var t = this.elements,\n              r = e.x,\n              i = e.y,\n              n = e.z;\n          return t[0] *= r, t[4] *= i, t[8] *= n, t[1] *= r, t[5] *= i, t[9] *= n, t[2] *= r, t[6] *= i, t[10] *= n, t[3] *= r, t[7] *= i, t[11] *= n, this;\n        },\n        getMaxScaleOnAxis: function getMaxScaleOnAxis() {\n          var e = this.elements,\n              t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],\n              r = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],\n              i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];\n          return Math.sqrt(Math.max(t, r, i));\n        },\n        makeTranslation: function makeTranslation(e, t, r) {\n          return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, r, 0, 0, 0, 1), this;\n        },\n        makeRotationX: function makeRotationX(e) {\n          var t = Math.cos(e),\n              r = Math.sin(e);\n          return this.set(1, 0, 0, 0, 0, t, -r, 0, 0, r, t, 0, 0, 0, 0, 1), this;\n        },\n        makeRotationY: function makeRotationY(e) {\n          var t = Math.cos(e),\n              r = Math.sin(e);\n          return this.set(t, 0, r, 0, 0, 1, 0, 0, -r, 0, t, 0, 0, 0, 0, 1), this;\n        },\n        makeRotationZ: function makeRotationZ(e) {\n          var t = Math.cos(e),\n              r = Math.sin(e);\n          return this.set(t, -r, 0, 0, r, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;\n        },\n        makeRotationAxis: function makeRotationAxis(e, t) {\n          var r = Math.cos(t),\n              i = Math.sin(t),\n              n = 1 - r,\n              o = e.x,\n              a = e.y,\n              s = e.z,\n              c = n * o,\n              l = n * a;\n          return this.set(c * o + r, c * a - i * s, c * s + i * a, 0, c * a + i * s, l * a + r, l * s - i * o, 0, c * s - i * a, l * s + i * o, n * s * s + r, 0, 0, 0, 0, 1), this;\n        },\n        makeScale: function makeScale(e, t, r) {\n          return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, r, 0, 0, 0, 0, 1), this;\n        },\n        makeShear: function makeShear(e, t, r) {\n          return this.set(1, t, r, 0, e, 1, r, 0, e, t, 1, 0, 0, 0, 0, 1), this;\n        },\n        compose: function compose(e, t, r) {\n          return this.makeRotationFromQuaternion(t), this.scale(r), this.setPosition(e), this;\n        },\n        decompose: function () {\n          var e = new s(),\n              t = new o();\n          return function (r, i, n) {\n            var o = this.elements,\n                a = e.set(o[0], o[1], o[2]).length(),\n                s = e.set(o[4], o[5], o[6]).length(),\n                c = e.set(o[8], o[9], o[10]).length();\n            this.determinant() < 0 && (a = -a), r.x = o[12], r.y = o[13], r.z = o[14], t.copy(this);\n            var l = 1 / a,\n                u = 1 / s,\n                h = 1 / c;\n            return t.elements[0] *= l, t.elements[1] *= l, t.elements[2] *= l, t.elements[4] *= u, t.elements[5] *= u, t.elements[6] *= u, t.elements[8] *= h, t.elements[9] *= h, t.elements[10] *= h, i.setFromRotationMatrix(t), n.x = a, n.y = s, n.z = c, this;\n          };\n        }(),\n        makePerspective: function makePerspective(e, t, r, i, n, o) {\n          void 0 === o && console.warn(\"THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.\");\n          var a = this.elements,\n              s = 2 * n / (t - e),\n              c = 2 * n / (r - i),\n              l = (t + e) / (t - e),\n              u = (r + i) / (r - i),\n              h = -(o + n) / (o - n),\n              d = -2 * o * n / (o - n);\n          return a[0] = s, a[4] = 0, a[8] = l, a[12] = 0, a[1] = 0, a[5] = c, a[9] = u, a[13] = 0, a[2] = 0, a[6] = 0, a[10] = h, a[14] = d, a[3] = 0, a[7] = 0, a[11] = -1, a[15] = 0, this;\n        },\n        makeOrthographic: function makeOrthographic(e, t, r, i, n, o) {\n          var a = this.elements,\n              s = 1 / (t - e),\n              c = 1 / (r - i),\n              l = 1 / (o - n),\n              u = (t + e) * s,\n              h = (r + i) * c,\n              d = (o + n) * l;\n          return a[0] = 2 * s, a[4] = 0, a[8] = 0, a[12] = -u, a[1] = 0, a[5] = 2 * c, a[9] = 0, a[13] = -h, a[2] = 0, a[6] = 0, a[10] = -2 * l, a[14] = -d, a[3] = 0, a[7] = 0, a[11] = 0, a[15] = 1, this;\n        },\n        equals: function equals(e) {\n          for (var t = this.elements, r = e.elements, i = 0; i < 16; i++) {\n            if (t[i] !== r[i]) return !1;\n          }\n\n          return !0;\n        },\n        fromArray: function fromArray(e, t) {\n          void 0 === t && (t = 0);\n\n          for (var r = 0; r < 16; r++) {\n            this.elements[r] = e[r + t];\n          }\n\n          return this;\n        },\n        toArray: function toArray(e, t) {\n          void 0 === e && (e = []), void 0 === t && (t = 0);\n          var r = this.elements;\n          return e[t] = r[0], e[t + 1] = r[1], e[t + 2] = r[2], e[t + 3] = r[3], e[t + 4] = r[4], e[t + 5] = r[5], e[t + 6] = r[6], e[t + 7] = r[7], e[t + 8] = r[8], e[t + 9] = r[9], e[t + 10] = r[10], e[t + 11] = r[11], e[t + 12] = r[12], e[t + 13] = r[13], e[t + 14] = r[14], e[t + 15] = r[15], e;\n        }\n      }), Object.assign(a, {\n        slerp: function slerp(e, t, r, i) {\n          return r.copy(e).slerp(t, i);\n        },\n        slerpFlat: function slerpFlat(e, t, r, i, n, o, a) {\n          var s = r[i + 0],\n              c = r[i + 1],\n              l = r[i + 2],\n              u = r[i + 3],\n              h = n[o + 0],\n              d = n[o + 1],\n              p = n[o + 2],\n              f = n[o + 3];\n\n          if (u !== f || s !== h || c !== d || l !== p) {\n            var m = 1 - a,\n                v = s * h + c * d + l * p + u * f,\n                g = v >= 0 ? 1 : -1,\n                y = 1 - v * v;\n\n            if (y > Number.EPSILON) {\n              var x = Math.sqrt(y),\n                  _ = Math.atan2(x, v * g);\n\n              m = Math.sin(m * _) / x, a = Math.sin(a * _) / x;\n            }\n\n            var b = a * g;\n\n            if (s = s * m + h * b, c = c * m + d * b, l = l * m + p * b, u = u * m + f * b, m === 1 - a) {\n              var w = 1 / Math.sqrt(s * s + c * c + l * l + u * u);\n              s *= w, c *= w, l *= w, u *= w;\n            }\n          }\n\n          e[t] = s, e[t + 1] = c, e[t + 2] = l, e[t + 3] = u;\n        }\n      }), Object.defineProperties(a.prototype, {\n        x: {\n          get: function get() {\n            return this._x;\n          },\n          set: function set(e) {\n            this._x = e, this.onChangeCallback();\n          }\n        },\n        y: {\n          get: function get() {\n            return this._y;\n          },\n          set: function set(e) {\n            this._y = e, this.onChangeCallback();\n          }\n        },\n        z: {\n          get: function get() {\n            return this._z;\n          },\n          set: function set(e) {\n            this._z = e, this.onChangeCallback();\n          }\n        },\n        w: {\n          get: function get() {\n            return this._w;\n          },\n          set: function set(e) {\n            this._w = e, this.onChangeCallback();\n          }\n        }\n      }), Object.assign(a.prototype, {\n        set: function set(e, t, r, i) {\n          return this._x = e, this._y = t, this._z = r, this._w = i, this.onChangeCallback(), this;\n        },\n        clone: function clone() {\n          return new this.constructor(this._x, this._y, this._z, this._w);\n        },\n        copy: function copy(e) {\n          return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this.onChangeCallback(), this;\n        },\n        setFromEuler: function setFromEuler(e, t) {\n          if (!e || !e.isEuler) throw new Error(\"THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.\");\n          var r = e._x,\n              i = e._y,\n              n = e._z,\n              o = e.order,\n              a = Math.cos,\n              s = Math.sin,\n              c = a(r / 2),\n              l = a(i / 2),\n              u = a(n / 2),\n              h = s(r / 2),\n              d = s(i / 2),\n              p = s(n / 2);\n          return \"XYZ\" === o ? (this._x = h * l * u + c * d * p, this._y = c * d * u - h * l * p, this._z = c * l * p + h * d * u, this._w = c * l * u - h * d * p) : \"YXZ\" === o ? (this._x = h * l * u + c * d * p, this._y = c * d * u - h * l * p, this._z = c * l * p - h * d * u, this._w = c * l * u + h * d * p) : \"ZXY\" === o ? (this._x = h * l * u - c * d * p, this._y = c * d * u + h * l * p, this._z = c * l * p + h * d * u, this._w = c * l * u - h * d * p) : \"ZYX\" === o ? (this._x = h * l * u - c * d * p, this._y = c * d * u + h * l * p, this._z = c * l * p - h * d * u, this._w = c * l * u + h * d * p) : \"YZX\" === o ? (this._x = h * l * u + c * d * p, this._y = c * d * u + h * l * p, this._z = c * l * p - h * d * u, this._w = c * l * u - h * d * p) : \"XZY\" === o && (this._x = h * l * u - c * d * p, this._y = c * d * u - h * l * p, this._z = c * l * p + h * d * u, this._w = c * l * u + h * d * p), !1 !== t && this.onChangeCallback(), this;\n        },\n        setFromAxisAngle: function setFromAxisAngle(e, t) {\n          var r = t / 2,\n              i = Math.sin(r);\n          return this._x = e.x * i, this._y = e.y * i, this._z = e.z * i, this._w = Math.cos(r), this.onChangeCallback(), this;\n        },\n        setFromRotationMatrix: function setFromRotationMatrix(e) {\n          var t,\n              r = e.elements,\n              i = r[0],\n              n = r[4],\n              o = r[8],\n              a = r[1],\n              s = r[5],\n              c = r[9],\n              l = r[2],\n              u = r[6],\n              h = r[10],\n              d = i + s + h;\n          return d > 0 ? (t = .5 / Math.sqrt(d + 1), this._w = .25 / t, this._x = (u - c) * t, this._y = (o - l) * t, this._z = (a - n) * t) : i > s && i > h ? (t = 2 * Math.sqrt(1 + i - s - h), this._w = (u - c) / t, this._x = .25 * t, this._y = (n + a) / t, this._z = (o + l) / t) : s > h ? (t = 2 * Math.sqrt(1 + s - i - h), this._w = (o - l) / t, this._x = (n + a) / t, this._y = .25 * t, this._z = (c + u) / t) : (t = 2 * Math.sqrt(1 + h - i - s), this._w = (a - n) / t, this._x = (o + l) / t, this._y = (c + u) / t, this._z = .25 * t), this.onChangeCallback(), this;\n        },\n        setFromUnitVectors: function () {\n          var e,\n              t = new s();\n          return function (r, i) {\n            return void 0 === t && (t = new s()), e = r.dot(i) + 1, e < 1e-6 ? (e = 0, Math.abs(r.x) > Math.abs(r.z) ? t.set(-r.y, r.x, 0) : t.set(0, -r.z, r.y)) : t.crossVectors(r, i), this._x = t.x, this._y = t.y, this._z = t.z, this._w = e, this.normalize();\n          };\n        }(),\n        inverse: function inverse() {\n          return this.conjugate();\n        },\n        conjugate: function conjugate() {\n          return this._x *= -1, this._y *= -1, this._z *= -1, this.onChangeCallback(), this;\n        },\n        dot: function dot(e) {\n          return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w;\n        },\n        lengthSq: function lengthSq() {\n          return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n        },\n        length: function length() {\n          return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n        },\n        normalize: function normalize() {\n          var e = this.length();\n          return 0 === e ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this.onChangeCallback(), this;\n        },\n        multiply: function multiply(e, t) {\n          return void 0 !== t ? (console.warn(\"THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.\"), this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e);\n        },\n        premultiply: function premultiply(e) {\n          return this.multiplyQuaternions(e, this);\n        },\n        multiplyQuaternions: function multiplyQuaternions(e, t) {\n          var r = e._x,\n              i = e._y,\n              n = e._z,\n              o = e._w,\n              a = t._x,\n              s = t._y,\n              c = t._z,\n              l = t._w;\n          return this._x = r * l + o * a + i * c - n * s, this._y = i * l + o * s + n * a - r * c, this._z = n * l + o * c + r * s - i * a, this._w = o * l - r * a - i * s - n * c, this.onChangeCallback(), this;\n        },\n        slerp: function slerp(e, t) {\n          if (0 === t) return this;\n          if (1 === t) return this.copy(e);\n          var r = this._x,\n              i = this._y,\n              n = this._z,\n              o = this._w,\n              a = o * e._w + r * e._x + i * e._y + n * e._z;\n          if (a < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, a = -a) : this.copy(e), a >= 1) return this._w = o, this._x = r, this._y = i, this._z = n, this;\n          var s = Math.sqrt(1 - a * a);\n          if (Math.abs(s) < .001) return this._w = .5 * (o + this._w), this._x = .5 * (r + this._x), this._y = .5 * (i + this._y), this._z = .5 * (n + this._z), this;\n          var c = Math.atan2(s, a),\n              l = Math.sin((1 - t) * c) / s,\n              u = Math.sin(t * c) / s;\n          return this._w = o * l + this._w * u, this._x = r * l + this._x * u, this._y = i * l + this._y * u, this._z = n * l + this._z * u, this.onChangeCallback(), this;\n        },\n        equals: function equals(e) {\n          return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w;\n        },\n        fromArray: function fromArray(e, t) {\n          return void 0 === t && (t = 0), this._x = e[t], this._y = e[t + 1], this._z = e[t + 2], this._w = e[t + 3], this.onChangeCallback(), this;\n        },\n        toArray: function toArray(e, t) {\n          return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._w, e;\n        },\n        onChange: function onChange(e) {\n          return this.onChangeCallback = e, this;\n        },\n        onChangeCallback: function onChangeCallback() {}\n      }), Object.assign(s.prototype, {\n        isVector3: !0,\n        set: function set(e, t, r) {\n          return this.x = e, this.y = t, this.z = r, this;\n        },\n        setScalar: function setScalar(e) {\n          return this.x = e, this.y = e, this.z = e, this;\n        },\n        setX: function setX(e) {\n          return this.x = e, this;\n        },\n        setY: function setY(e) {\n          return this.y = e, this;\n        },\n        setZ: function setZ(e) {\n          return this.z = e, this;\n        },\n        setComponent: function setComponent(e, t) {\n          switch (e) {\n            case 0:\n              this.x = t;\n              break;\n\n            case 1:\n              this.y = t;\n              break;\n\n            case 2:\n              this.z = t;\n              break;\n\n            default:\n              throw new Error(\"index is out of range: \" + e);\n          }\n\n          return this;\n        },\n        getComponent: function getComponent(e) {\n          switch (e) {\n            case 0:\n              return this.x;\n\n            case 1:\n              return this.y;\n\n            case 2:\n              return this.z;\n\n            default:\n              throw new Error(\"index is out of range: \" + e);\n          }\n        },\n        clone: function clone() {\n          return new this.constructor(this.x, this.y, this.z);\n        },\n        copy: function copy(e) {\n          return this.x = e.x, this.y = e.y, this.z = e.z, this;\n        },\n        add: function add(e, t) {\n          return void 0 !== t ? (console.warn(\"THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this);\n        },\n        addScalar: function addScalar(e) {\n          return this.x += e, this.y += e, this.z += e, this;\n        },\n        addVectors: function addVectors(e, t) {\n          return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this;\n        },\n        addScaledVector: function addScaledVector(e, t) {\n          return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this;\n        },\n        sub: function sub(e, t) {\n          return void 0 !== t ? (console.warn(\"THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this);\n        },\n        subScalar: function subScalar(e) {\n          return this.x -= e, this.y -= e, this.z -= e, this;\n        },\n        subVectors: function subVectors(e, t) {\n          return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this;\n        },\n        multiply: function multiply(e, t) {\n          return void 0 !== t ? (console.warn(\"THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\"), this.multiplyVectors(e, t)) : (this.x *= e.x, this.y *= e.y, this.z *= e.z, this);\n        },\n        multiplyScalar: function multiplyScalar(e) {\n          return this.x *= e, this.y *= e, this.z *= e, this;\n        },\n        multiplyVectors: function multiplyVectors(e, t) {\n          return this.x = e.x * t.x, this.y = e.y * t.y, this.z = e.z * t.z, this;\n        },\n        applyEuler: function () {\n          var e = new a();\n          return function (t) {\n            return t && t.isEuler || console.error(\"THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.\"), this.applyQuaternion(e.setFromEuler(t));\n          };\n        }(),\n        applyAxisAngle: function () {\n          var e = new a();\n          return function (t, r) {\n            return this.applyQuaternion(e.setFromAxisAngle(t, r));\n          };\n        }(),\n        applyMatrix3: function applyMatrix3(e) {\n          var t = this.x,\n              r = this.y,\n              i = this.z,\n              n = e.elements;\n          return this.x = n[0] * t + n[3] * r + n[6] * i, this.y = n[1] * t + n[4] * r + n[7] * i, this.z = n[2] * t + n[5] * r + n[8] * i, this;\n        },\n        applyMatrix4: function applyMatrix4(e) {\n          var t = this.x,\n              r = this.y,\n              i = this.z,\n              n = e.elements,\n              o = 1 / (n[3] * t + n[7] * r + n[11] * i + n[15]);\n          return this.x = (n[0] * t + n[4] * r + n[8] * i + n[12]) * o, this.y = (n[1] * t + n[5] * r + n[9] * i + n[13]) * o, this.z = (n[2] * t + n[6] * r + n[10] * i + n[14]) * o, this;\n        },\n        applyQuaternion: function applyQuaternion(e) {\n          var t = this.x,\n              r = this.y,\n              i = this.z,\n              n = e.x,\n              o = e.y,\n              a = e.z,\n              s = e.w,\n              c = s * t + o * i - a * r,\n              l = s * r + a * t - n * i,\n              u = s * i + n * r - o * t,\n              h = -n * t - o * r - a * i;\n          return this.x = c * s + h * -n + l * -a - u * -o, this.y = l * s + h * -o + u * -n - c * -a, this.z = u * s + h * -a + c * -o - l * -n, this;\n        },\n        project: function () {\n          var e = new o();\n          return function (t) {\n            return e.multiplyMatrices(t.projectionMatrix, e.getInverse(t.matrixWorld)), this.applyMatrix4(e);\n          };\n        }(),\n        unproject: function () {\n          var e = new o();\n          return function (t) {\n            return e.multiplyMatrices(t.matrixWorld, e.getInverse(t.projectionMatrix)), this.applyMatrix4(e);\n          };\n        }(),\n        transformDirection: function transformDirection(e) {\n          var t = this.x,\n              r = this.y,\n              i = this.z,\n              n = e.elements;\n          return this.x = n[0] * t + n[4] * r + n[8] * i, this.y = n[1] * t + n[5] * r + n[9] * i, this.z = n[2] * t + n[6] * r + n[10] * i, this.normalize();\n        },\n        divide: function divide(e) {\n          return this.x /= e.x, this.y /= e.y, this.z /= e.z, this;\n        },\n        divideScalar: function divideScalar(e) {\n          return this.multiplyScalar(1 / e);\n        },\n        min: function min(e) {\n          return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this;\n        },\n        max: function max(e) {\n          return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this;\n        },\n        clamp: function clamp(e, t) {\n          return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this;\n        },\n        clampScalar: function () {\n          var e = new s(),\n              t = new s();\n          return function (r, i) {\n            return e.set(r, r, r), t.set(i, i, i), this.clamp(e, t);\n          };\n        }(),\n        clampLength: function clampLength(e, t) {\n          var r = this.length();\n          return this.divideScalar(r || 1).multiplyScalar(Math.max(e, Math.min(t, r)));\n        },\n        floor: function floor() {\n          return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;\n        },\n        ceil: function ceil() {\n          return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;\n        },\n        round: function round() {\n          return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;\n        },\n        roundToZero: function roundToZero() {\n          return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;\n        },\n        negate: function negate() {\n          return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;\n        },\n        dot: function dot(e) {\n          return this.x * e.x + this.y * e.y + this.z * e.z;\n        },\n        lengthSq: function lengthSq() {\n          return this.x * this.x + this.y * this.y + this.z * this.z;\n        },\n        length: function length() {\n          return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n        },\n        manhattanLength: function manhattanLength() {\n          return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n        },\n        normalize: function normalize() {\n          return this.divideScalar(this.length() || 1);\n        },\n        setLength: function setLength(e) {\n          return this.normalize().multiplyScalar(e);\n        },\n        lerp: function lerp(e, t) {\n          return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this;\n        },\n        lerpVectors: function lerpVectors(e, t, r) {\n          return this.subVectors(t, e).multiplyScalar(r).add(e);\n        },\n        cross: function cross(e, t) {\n          return void 0 !== t ? (console.warn(\"THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\"), this.crossVectors(e, t)) : this.crossVectors(this, e);\n        },\n        crossVectors: function crossVectors(e, t) {\n          var r = e.x,\n              i = e.y,\n              n = e.z,\n              o = t.x,\n              a = t.y,\n              s = t.z;\n          return this.x = i * s - n * a, this.y = n * o - r * s, this.z = r * a - i * o, this;\n        },\n        projectOnVector: function projectOnVector(e) {\n          var t = e.dot(this) / e.lengthSq();\n          return this.copy(e).multiplyScalar(t);\n        },\n        projectOnPlane: function () {\n          var e = new s();\n          return function (t) {\n            return e.copy(this).projectOnVector(t), this.sub(e);\n          };\n        }(),\n        reflect: function () {\n          var e = new s();\n          return function (t) {\n            return this.sub(e.copy(t).multiplyScalar(2 * this.dot(t)));\n          };\n        }(),\n        angleTo: function angleTo(e) {\n          var t = this.dot(e) / Math.sqrt(this.lengthSq() * e.lengthSq());\n          return Math.acos(zs.clamp(t, -1, 1));\n        },\n        distanceTo: function distanceTo(e) {\n          return Math.sqrt(this.distanceToSquared(e));\n        },\n        distanceToSquared: function distanceToSquared(e) {\n          var t = this.x - e.x,\n              r = this.y - e.y,\n              i = this.z - e.z;\n          return t * t + r * r + i * i;\n        },\n        manhattanDistanceTo: function manhattanDistanceTo(e) {\n          return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z);\n        },\n        setFromSpherical: function setFromSpherical(e) {\n          var t = Math.sin(e.phi) * e.radius;\n          return this.x = t * Math.sin(e.theta), this.y = Math.cos(e.phi) * e.radius, this.z = t * Math.cos(e.theta), this;\n        },\n        setFromCylindrical: function setFromCylindrical(e) {\n          return this.x = e.radius * Math.sin(e.theta), this.y = e.y, this.z = e.radius * Math.cos(e.theta), this;\n        },\n        setFromMatrixPosition: function setFromMatrixPosition(e) {\n          var t = e.elements;\n          return this.x = t[12], this.y = t[13], this.z = t[14], this;\n        },\n        setFromMatrixScale: function setFromMatrixScale(e) {\n          var t = this.setFromMatrixColumn(e, 0).length(),\n              r = this.setFromMatrixColumn(e, 1).length(),\n              i = this.setFromMatrixColumn(e, 2).length();\n          return this.x = t, this.y = r, this.z = i, this;\n        },\n        setFromMatrixColumn: function setFromMatrixColumn(e, t) {\n          return this.fromArray(e.elements, 4 * t);\n        },\n        equals: function equals(e) {\n          return e.x === this.x && e.y === this.y && e.z === this.z;\n        },\n        fromArray: function fromArray(e, t) {\n          return void 0 === t && (t = 0), this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this;\n        },\n        toArray: function toArray(e, t) {\n          return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e;\n        },\n        fromBufferAttribute: function fromBufferAttribute(e, t, r) {\n          return void 0 !== r && console.warn(\"THREE.Vector3: offset has been removed from .fromBufferAttribute().\"), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this;\n        }\n      }), Object.assign(c.prototype, {\n        isMatrix3: !0,\n        set: function set(e, t, r, i, n, o, a, s, c) {\n          var l = this.elements;\n          return l[0] = e, l[1] = i, l[2] = a, l[3] = t, l[4] = n, l[5] = s, l[6] = r, l[7] = o, l[8] = c, this;\n        },\n        identity: function identity() {\n          return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;\n        },\n        clone: function clone() {\n          return new this.constructor().fromArray(this.elements);\n        },\n        copy: function copy(e) {\n          var t = this.elements,\n              r = e.elements;\n          return t[0] = r[0], t[1] = r[1], t[2] = r[2], t[3] = r[3], t[4] = r[4], t[5] = r[5], t[6] = r[6], t[7] = r[7], t[8] = r[8], this;\n        },\n        setFromMatrix4: function setFromMatrix4(e) {\n          var t = e.elements;\n          return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]), this;\n        },\n        applyToBufferAttribute: function () {\n          var e = new s();\n          return function (t) {\n            for (var r = 0, i = t.count; r < i; r++) {\n              e.x = t.getX(r), e.y = t.getY(r), e.z = t.getZ(r), e.applyMatrix3(this), t.setXYZ(r, e.x, e.y, e.z);\n            }\n\n            return t;\n          };\n        }(),\n        multiply: function multiply(e) {\n          return this.multiplyMatrices(this, e);\n        },\n        premultiply: function premultiply(e) {\n          return this.multiplyMatrices(e, this);\n        },\n        multiplyMatrices: function multiplyMatrices(e, t) {\n          var r = e.elements,\n              i = t.elements,\n              n = this.elements,\n              o = r[0],\n              a = r[3],\n              s = r[6],\n              c = r[1],\n              l = r[4],\n              u = r[7],\n              h = r[2],\n              d = r[5],\n              p = r[8],\n              f = i[0],\n              m = i[3],\n              v = i[6],\n              g = i[1],\n              y = i[4],\n              x = i[7],\n              _ = i[2],\n              b = i[5],\n              w = i[8];\n          return n[0] = o * f + a * g + s * _, n[3] = o * m + a * y + s * b, n[6] = o * v + a * x + s * w, n[1] = c * f + l * g + u * _, n[4] = c * m + l * y + u * b, n[7] = c * v + l * x + u * w, n[2] = h * f + d * g + p * _, n[5] = h * m + d * y + p * b, n[8] = h * v + d * x + p * w, this;\n        },\n        multiplyScalar: function multiplyScalar(e) {\n          var t = this.elements;\n          return t[0] *= e, t[3] *= e, t[6] *= e, t[1] *= e, t[4] *= e, t[7] *= e, t[2] *= e, t[5] *= e, t[8] *= e, this;\n        },\n        determinant: function determinant() {\n          var e = this.elements,\n              t = e[0],\n              r = e[1],\n              i = e[2],\n              n = e[3],\n              o = e[4],\n              a = e[5],\n              s = e[6],\n              c = e[7],\n              l = e[8];\n          return t * o * l - t * a * c - r * n * l + r * a * s + i * n * c - i * o * s;\n        },\n        getInverse: function getInverse(e, t) {\n          e && e.isMatrix4 && console.error(\"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\");\n          var r = e.elements,\n              i = this.elements,\n              n = r[0],\n              o = r[1],\n              a = r[2],\n              s = r[3],\n              c = r[4],\n              l = r[5],\n              u = r[6],\n              h = r[7],\n              d = r[8],\n              p = d * c - l * h,\n              f = l * u - d * s,\n              m = h * s - c * u,\n              v = n * p + o * f + a * m;\n\n          if (0 === v) {\n            var g = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n            if (!0 === t) throw new Error(g);\n            return console.warn(g), this.identity();\n          }\n\n          var y = 1 / v;\n          return i[0] = p * y, i[1] = (a * h - d * o) * y, i[2] = (l * o - a * c) * y, i[3] = f * y, i[4] = (d * n - a * u) * y, i[5] = (a * s - l * n) * y, i[6] = m * y, i[7] = (o * u - h * n) * y, i[8] = (c * n - o * s) * y, this;\n        },\n        transpose: function transpose() {\n          var e,\n              t = this.elements;\n          return e = t[1], t[1] = t[3], t[3] = e, e = t[2], t[2] = t[6], t[6] = e, e = t[5], t[5] = t[7], t[7] = e, this;\n        },\n        getNormalMatrix: function getNormalMatrix(e) {\n          return this.setFromMatrix4(e).getInverse(this).transpose();\n        },\n        transposeIntoArray: function transposeIntoArray(e) {\n          var t = this.elements;\n          return e[0] = t[0], e[1] = t[3], e[2] = t[6], e[3] = t[1], e[4] = t[4], e[5] = t[7], e[6] = t[2], e[7] = t[5], e[8] = t[8], this;\n        },\n        setUvTransform: function setUvTransform(e, t, r, i, n, o, a) {\n          var s = Math.cos(n),\n              c = Math.sin(n);\n          this.set(r * s, r * c, -r * (s * o + c * a) + o + e, -i * c, i * s, -i * (-c * o + s * a) + a + t, 0, 0, 1);\n        },\n        scale: function scale(e, t) {\n          var r = this.elements;\n          return r[0] *= e, r[3] *= e, r[6] *= e, r[1] *= t, r[4] *= t, r[7] *= t, this;\n        },\n        rotate: function rotate(e) {\n          var t = Math.cos(e),\n              r = Math.sin(e),\n              i = this.elements,\n              n = i[0],\n              o = i[3],\n              a = i[6],\n              s = i[1],\n              c = i[4],\n              l = i[7];\n          return i[0] = t * n + r * s, i[3] = t * o + r * c, i[6] = t * a + r * l, i[1] = -r * n + t * s, i[4] = -r * o + t * c, i[7] = -r * a + t * l, this;\n        },\n        translate: function translate(e, t) {\n          var r = this.elements;\n          return r[0] += e * r[2], r[3] += e * r[5], r[6] += e * r[8], r[1] += t * r[2], r[4] += t * r[5], r[7] += t * r[8], this;\n        },\n        equals: function equals(e) {\n          for (var t = this.elements, r = e.elements, i = 0; i < 9; i++) {\n            if (t[i] !== r[i]) return !1;\n          }\n\n          return !0;\n        },\n        fromArray: function fromArray(e, t) {\n          void 0 === t && (t = 0);\n\n          for (var r = 0; r < 9; r++) {\n            this.elements[r] = e[r + t];\n          }\n\n          return this;\n        },\n        toArray: function toArray(e, t) {\n          void 0 === e && (e = []), void 0 === t && (t = 0);\n          var r = this.elements;\n          return e[t] = r[0], e[t + 1] = r[1], e[t + 2] = r[2], e[t + 3] = r[3], e[t + 4] = r[4], e[t + 5] = r[5], e[t + 6] = r[6], e[t + 7] = r[7], e[t + 8] = r[8], e;\n        }\n      });\n      var Bs = 0;\n      l.DEFAULT_IMAGE = void 0, l.DEFAULT_MAPPING = 300, l.prototype = Object.assign(Object.create(i.prototype), {\n        constructor: l,\n        isTexture: !0,\n        updateMatrix: function updateMatrix() {\n          this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n        },\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        },\n        copy: function copy(e) {\n          return this.name = e.name, this.image = e.image, this.mipmaps = e.mipmaps.slice(0), this.mapping = e.mapping, this.wrapS = e.wrapS, this.wrapT = e.wrapT, this.magFilter = e.magFilter, this.minFilter = e.minFilter, this.anisotropy = e.anisotropy, this.format = e.format, this.type = e.type, this.offset.copy(e.offset), this.repeat.copy(e.repeat), this.center.copy(e.center), this.rotation = e.rotation, this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrix.copy(e.matrix), this.generateMipmaps = e.generateMipmaps, this.premultiplyAlpha = e.premultiplyAlpha, this.flipY = e.flipY, this.unpackAlignment = e.unpackAlignment, this.encoding = e.encoding, this;\n        },\n        toJSON: function toJSON(e) {\n          var t = void 0 === e || \"string\" == typeof e;\n          if (!t && void 0 !== e.textures[this.uuid]) return e.textures[this.uuid];\n          var r = {\n            metadata: {\n              version: 4.5,\n              type: \"Texture\",\n              generator: \"Texture.toJSON\"\n            },\n            uuid: this.uuid,\n            name: this.name,\n            mapping: this.mapping,\n            repeat: [this.repeat.x, this.repeat.y],\n            offset: [this.offset.x, this.offset.y],\n            center: [this.center.x, this.center.y],\n            rotation: this.rotation,\n            wrap: [this.wrapS, this.wrapT],\n            format: this.format,\n            minFilter: this.minFilter,\n            magFilter: this.magFilter,\n            anisotropy: this.anisotropy,\n            flipY: this.flipY\n          };\n\n          if (void 0 !== this.image) {\n            var i = this.image;\n            void 0 === i.uuid && (i.uuid = zs.generateUUID()), t || void 0 !== e.images[i.uuid] || (e.images[i.uuid] = {\n              uuid: i.uuid,\n              url: function (e) {\n                var t;\n                if (e instanceof HTMLCanvasElement) t = e;else {\n                  t = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"canvas\"), t.width = e.width, t.height = e.height;\n                  var r = t.getContext(\"2d\");\n                  e instanceof ImageData ? r.putImageData(e, 0, 0) : r.drawImage(e, 0, 0, e.width, e.height);\n                }\n                return t.width > 2048 || t.height > 2048 ? t.toDataURL(\"image/jpeg\", .6) : t.toDataURL(\"image/png\");\n              }(i)\n            }), r.image = i.uuid;\n          }\n\n          return t || (e.textures[this.uuid] = r), r;\n        },\n        dispose: function dispose() {\n          this.dispatchEvent({\n            type: \"dispose\"\n          });\n        },\n        transformUv: function transformUv(e) {\n          if (300 === this.mapping) {\n            if (e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1) switch (this.wrapS) {\n              case Aa:\n                e.x = e.x - Math.floor(e.x);\n                break;\n\n              case La:\n                e.x = e.x < 0 ? 0 : 1;\n                break;\n\n              case Ca:\n                1 === Math.abs(Math.floor(e.x) % 2) ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x);\n            }\n            if (e.y < 0 || e.y > 1) switch (this.wrapT) {\n              case Aa:\n                e.y = e.y - Math.floor(e.y);\n                break;\n\n              case La:\n                e.y = e.y < 0 ? 0 : 1;\n                break;\n\n              case Ca:\n                1 === Math.abs(Math.floor(e.y) % 2) ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y);\n            }\n            this.flipY && (e.y = 1 - e.y);\n          }\n        }\n      }), Object.defineProperty(l.prototype, \"needsUpdate\", {\n        set: function set(e) {\n          !0 === e && this.version++;\n        }\n      }), Object.assign(u.prototype, {\n        isVector4: !0,\n        set: function set(e, t, r, i) {\n          return this.x = e, this.y = t, this.z = r, this.w = i, this;\n        },\n        setScalar: function setScalar(e) {\n          return this.x = e, this.y = e, this.z = e, this.w = e, this;\n        },\n        setX: function setX(e) {\n          return this.x = e, this;\n        },\n        setY: function setY(e) {\n          return this.y = e, this;\n        },\n        setZ: function setZ(e) {\n          return this.z = e, this;\n        },\n        setW: function setW(e) {\n          return this.w = e, this;\n        },\n        setComponent: function setComponent(e, t) {\n          switch (e) {\n            case 0:\n              this.x = t;\n              break;\n\n            case 1:\n              this.y = t;\n              break;\n\n            case 2:\n              this.z = t;\n              break;\n\n            case 3:\n              this.w = t;\n              break;\n\n            default:\n              throw new Error(\"index is out of range: \" + e);\n          }\n\n          return this;\n        },\n        getComponent: function getComponent(e) {\n          switch (e) {\n            case 0:\n              return this.x;\n\n            case 1:\n              return this.y;\n\n            case 2:\n              return this.z;\n\n            case 3:\n              return this.w;\n\n            default:\n              throw new Error(\"index is out of range: \" + e);\n          }\n        },\n        clone: function clone() {\n          return new this.constructor(this.x, this.y, this.z, this.w);\n        },\n        copy: function copy(e) {\n          return this.x = e.x, this.y = e.y, this.z = e.z, this.w = void 0 !== e.w ? e.w : 1, this;\n        },\n        add: function add(e, t) {\n          return void 0 !== t ? (console.warn(\"THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this);\n        },\n        addScalar: function addScalar(e) {\n          return this.x += e, this.y += e, this.z += e, this.w += e, this;\n        },\n        addVectors: function addVectors(e, t) {\n          return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this.w = e.w + t.w, this;\n        },\n        addScaledVector: function addScaledVector(e, t) {\n          return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this.w += e.w * t, this;\n        },\n        sub: function sub(e, t) {\n          return void 0 !== t ? (console.warn(\"THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this);\n        },\n        subScalar: function subScalar(e) {\n          return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this;\n        },\n        subVectors: function subVectors(e, t) {\n          return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this.w = e.w - t.w, this;\n        },\n        multiplyScalar: function multiplyScalar(e) {\n          return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this;\n        },\n        applyMatrix4: function applyMatrix4(e) {\n          var t = this.x,\n              r = this.y,\n              i = this.z,\n              n = this.w,\n              o = e.elements;\n          return this.x = o[0] * t + o[4] * r + o[8] * i + o[12] * n, this.y = o[1] * t + o[5] * r + o[9] * i + o[13] * n, this.z = o[2] * t + o[6] * r + o[10] * i + o[14] * n, this.w = o[3] * t + o[7] * r + o[11] * i + o[15] * n, this;\n        },\n        divideScalar: function divideScalar(e) {\n          return this.multiplyScalar(1 / e);\n        },\n        setAxisAngleFromQuaternion: function setAxisAngleFromQuaternion(e) {\n          this.w = 2 * Math.acos(e.w);\n          var t = Math.sqrt(1 - e.w * e.w);\n          return t < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / t, this.y = e.y / t, this.z = e.z / t), this;\n        },\n        setAxisAngleFromRotationMatrix: function setAxisAngleFromRotationMatrix(e) {\n          var t,\n              r,\n              i,\n              n,\n              o = e.elements,\n              a = o[0],\n              s = o[4],\n              c = o[8],\n              l = o[1],\n              u = o[5],\n              h = o[9],\n              d = o[2],\n              p = o[6],\n              f = o[10];\n\n          if (Math.abs(s - l) < .01 && Math.abs(c - d) < .01 && Math.abs(h - p) < .01) {\n            if (Math.abs(s + l) < .1 && Math.abs(c + d) < .1 && Math.abs(h + p) < .1 && Math.abs(a + u + f - 3) < .1) return this.set(1, 0, 0, 0), this;\n            t = Math.PI;\n\n            var m = (a + 1) / 2,\n                v = (u + 1) / 2,\n                g = (f + 1) / 2,\n                y = (s + l) / 4,\n                x = (c + d) / 4,\n                _ = (h + p) / 4;\n\n            return m > v && m > g ? m < .01 ? (r = 0, i = .707106781, n = .707106781) : (r = Math.sqrt(m), i = y / r, n = x / r) : v > g ? v < .01 ? (r = .707106781, i = 0, n = .707106781) : (i = Math.sqrt(v), r = y / i, n = _ / i) : g < .01 ? (r = .707106781, i = .707106781, n = 0) : (n = Math.sqrt(g), r = x / n, i = _ / n), this.set(r, i, n, t), this;\n          }\n\n          var b = Math.sqrt((p - h) * (p - h) + (c - d) * (c - d) + (l - s) * (l - s));\n          return Math.abs(b) < .001 && (b = 1), this.x = (p - h) / b, this.y = (c - d) / b, this.z = (l - s) / b, this.w = Math.acos((a + u + f - 1) / 2), this;\n        },\n        min: function min(e) {\n          return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this.w = Math.min(this.w, e.w), this;\n        },\n        max: function max(e) {\n          return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this.w = Math.max(this.w, e.w), this;\n        },\n        clamp: function clamp(e, t) {\n          return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this.w = Math.max(e.w, Math.min(t.w, this.w)), this;\n        },\n        clampScalar: function () {\n          var e, t;\n          return function (r, i) {\n            return void 0 === e && (e = new u(), t = new u()), e.set(r, r, r, r), t.set(i, i, i, i), this.clamp(e, t);\n          };\n        }(),\n        clampLength: function clampLength(e, t) {\n          var r = this.length();\n          return this.divideScalar(r || 1).multiplyScalar(Math.max(e, Math.min(t, r)));\n        },\n        floor: function floor() {\n          return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;\n        },\n        ceil: function ceil() {\n          return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;\n        },\n        round: function round() {\n          return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;\n        },\n        roundToZero: function roundToZero() {\n          return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this;\n        },\n        negate: function negate() {\n          return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;\n        },\n        dot: function dot(e) {\n          return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;\n        },\n        lengthSq: function lengthSq() {\n          return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n        },\n        length: function length() {\n          return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n        },\n        manhattanLength: function manhattanLength() {\n          return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n        },\n        normalize: function normalize() {\n          return this.divideScalar(this.length() || 1);\n        },\n        setLength: function setLength(e) {\n          return this.normalize().multiplyScalar(e);\n        },\n        lerp: function lerp(e, t) {\n          return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this.w += (e.w - this.w) * t, this;\n        },\n        lerpVectors: function lerpVectors(e, t, r) {\n          return this.subVectors(t, e).multiplyScalar(r).add(e);\n        },\n        equals: function equals(e) {\n          return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w;\n        },\n        fromArray: function fromArray(e, t) {\n          return void 0 === t && (t = 0), this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this.w = e[t + 3], this;\n        },\n        toArray: function toArray(e, t) {\n          return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e[t + 3] = this.w, e;\n        },\n        fromBufferAttribute: function fromBufferAttribute(e, t, r) {\n          return void 0 !== r && console.warn(\"THREE.Vector4: offset has been removed from .fromBufferAttribute().\"), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this.w = e.getW(t), this;\n        }\n      }), h.prototype = Object.assign(Object.create(i.prototype), {\n        constructor: h,\n        isWebGLRenderTarget: !0,\n        setSize: function setSize(e, t) {\n          this.width === e && this.height === t || (this.width = e, this.height = t, this.dispose()), this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t);\n        },\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        },\n        copy: function copy(e) {\n          return this.width = e.width, this.height = e.height, this.viewport.copy(e.viewport), this.texture = e.texture.clone(), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this;\n        },\n        dispose: function dispose() {\n          this.dispatchEvent({\n            type: \"dispose\"\n          });\n        }\n      }), d.prototype = Object.create(h.prototype), d.prototype.constructor = d, d.prototype.isWebGLRenderTargetCube = !0, p.prototype = Object.create(l.prototype), p.prototype.constructor = p, p.prototype.isDataTexture = !0, Object.assign(f.prototype, {\n        isBox3: !0,\n        set: function set(e, t) {\n          return this.min.copy(e), this.max.copy(t), this;\n        },\n        setFromArray: function setFromArray(e) {\n          for (var t = 1 / 0, r = 1 / 0, i = 1 / 0, n = -1 / 0, o = -1 / 0, a = -1 / 0, s = 0, c = e.length; s < c; s += 3) {\n            var l = e[s],\n                u = e[s + 1],\n                h = e[s + 2];\n            l < t && (t = l), u < r && (r = u), h < i && (i = h), l > n && (n = l), u > o && (o = u), h > a && (a = h);\n          }\n\n          return this.min.set(t, r, i), this.max.set(n, o, a), this;\n        },\n        setFromBufferAttribute: function setFromBufferAttribute(e) {\n          for (var t = 1 / 0, r = 1 / 0, i = 1 / 0, n = -1 / 0, o = -1 / 0, a = -1 / 0, s = 0, c = e.count; s < c; s++) {\n            var l = e.getX(s),\n                u = e.getY(s),\n                h = e.getZ(s);\n            l < t && (t = l), u < r && (r = u), h < i && (i = h), l > n && (n = l), u > o && (o = u), h > a && (a = h);\n          }\n\n          return this.min.set(t, r, i), this.max.set(n, o, a), this;\n        },\n        setFromPoints: function setFromPoints(e) {\n          this.makeEmpty();\n\n          for (var t = 0, r = e.length; t < r; t++) {\n            this.expandByPoint(e[t]);\n          }\n\n          return this;\n        },\n        setFromCenterAndSize: function () {\n          var e = new s();\n          return function (t, r) {\n            var i = e.copy(r).multiplyScalar(.5);\n            return this.min.copy(t).sub(i), this.max.copy(t).add(i), this;\n          };\n        }(),\n        setFromObject: function setFromObject(e) {\n          return this.makeEmpty(), this.expandByObject(e);\n        },\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        },\n        copy: function copy(e) {\n          return this.min.copy(e.min), this.max.copy(e.max), this;\n        },\n        makeEmpty: function makeEmpty() {\n          return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;\n        },\n        isEmpty: function isEmpty() {\n          return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n        },\n        getCenter: function getCenter(e) {\n          return void 0 === e && (console.warn(\"THREE.Box3: .getCenter() target is now required\"), e = new s()), this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5);\n        },\n        getSize: function getSize(e) {\n          return void 0 === e && (console.warn(\"THREE.Box3: .getSize() target is now required\"), e = new s()), this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min);\n        },\n        expandByPoint: function expandByPoint(e) {\n          return this.min.min(e), this.max.max(e), this;\n        },\n        expandByVector: function expandByVector(e) {\n          return this.min.sub(e), this.max.add(e), this;\n        },\n        expandByScalar: function expandByScalar(e) {\n          return this.min.addScalar(-e), this.max.addScalar(e), this;\n        },\n        expandByObject: function () {\n          function e(e) {\n            var o = e.geometry;\n            if (void 0 !== o) if (o.isGeometry) {\n              var a = o.vertices;\n\n              for (r = 0, i = a.length; r < i; r++) {\n                n.copy(a[r]), n.applyMatrix4(e.matrixWorld), t.expandByPoint(n);\n              }\n            } else if (o.isBufferGeometry) {\n              var s = o.attributes.position;\n              if (void 0 !== s) for (r = 0, i = s.count; r < i; r++) {\n                n.fromBufferAttribute(s, r).applyMatrix4(e.matrixWorld), t.expandByPoint(n);\n              }\n            }\n          }\n\n          var t,\n              r,\n              i,\n              n = new s();\n          return function (r) {\n            return t = this, r.updateMatrixWorld(!0), r.traverse(e), this;\n          };\n        }(),\n        containsPoint: function containsPoint(e) {\n          return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z);\n        },\n        containsBox: function containsBox(e) {\n          return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z;\n        },\n        getParameter: function getParameter(e, t) {\n          return void 0 === t && (console.warn(\"THREE.Box3: .getParameter() target is now required\"), t = new s()), t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z));\n        },\n        intersectsBox: function intersectsBox(e) {\n          return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z);\n        },\n        intersectsSphere: function () {\n          var e = new s();\n          return function (t) {\n            return this.clampPoint(t.center, e), e.distanceToSquared(t.center) <= t.radius * t.radius;\n          };\n        }(),\n        intersectsPlane: function intersectsPlane(e) {\n          var t, r;\n          return e.normal.x > 0 ? (t = e.normal.x * this.min.x, r = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x, r = e.normal.x * this.min.x), e.normal.y > 0 ? (t += e.normal.y * this.min.y, r += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y, r += e.normal.y * this.min.y), e.normal.z > 0 ? (t += e.normal.z * this.min.z, r += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z, r += e.normal.z * this.min.z), t <= e.constant && r >= e.constant;\n        },\n        intersectsTriangle: function () {\n          function e(e) {\n            var n, o;\n\n            for (n = 0, o = e.length - 3; n <= o; n += 3) {\n              c.fromArray(e, n);\n              var a = u.x * Math.abs(c.x) + u.y * Math.abs(c.y) + u.z * Math.abs(c.z),\n                  s = t.dot(c),\n                  l = r.dot(c),\n                  h = i.dot(c);\n              if (Math.max(-Math.max(s, l, h), Math.min(s, l, h)) > a) return !1;\n            }\n\n            return !0;\n          }\n\n          var t = new s(),\n              r = new s(),\n              i = new s(),\n              n = new s(),\n              o = new s(),\n              a = new s(),\n              c = new s(),\n              l = new s(),\n              u = new s(),\n              h = new s();\n          return function (s) {\n            if (this.isEmpty()) return !1;\n            this.getCenter(l), u.subVectors(this.max, l), t.subVectors(s.a, l), r.subVectors(s.b, l), i.subVectors(s.c, l), n.subVectors(r, t), o.subVectors(i, r), a.subVectors(t, i);\n            var c = [0, -n.z, n.y, 0, -o.z, o.y, 0, -a.z, a.y, n.z, 0, -n.x, o.z, 0, -o.x, a.z, 0, -a.x, -n.y, n.x, 0, -o.y, o.x, 0, -a.y, a.x, 0];\n            return !!e(c) && (c = [1, 0, 0, 0, 1, 0, 0, 0, 1], !!e(c) && (h.crossVectors(n, o), c = [h.x, h.y, h.z], e(c)));\n          };\n        }(),\n        clampPoint: function clampPoint(e, t) {\n          return void 0 === t && (console.warn(\"THREE.Box3: .clampPoint() target is now required\"), t = new s()), t.copy(e).clamp(this.min, this.max);\n        },\n        distanceToPoint: function () {\n          var e = new s();\n          return function (t) {\n            return e.copy(t).clamp(this.min, this.max).sub(t).length();\n          };\n        }(),\n        getBoundingSphere: function () {\n          var e = new s();\n          return function (t) {\n            return void 0 === t && (console.warn(\"THREE.Box3: .getBoundingSphere() target is now required\"), t = new m()), this.getCenter(t.center), t.radius = .5 * this.getSize(e).length(), t;\n          };\n        }(),\n        intersect: function intersect(e) {\n          return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this;\n        },\n        union: function union(e) {\n          return this.min.min(e.min), this.max.max(e.max), this;\n        },\n        applyMatrix4: function () {\n          var e = [new s(), new s(), new s(), new s(), new s(), new s(), new s(), new s()];\n          return function (t) {\n            return this.isEmpty() ? this : (e[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(t), e[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(t), e[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(t), e[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(t), e[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(t), e[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(t), e[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(t), e[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(t), this.setFromPoints(e), this);\n          };\n        }(),\n        translate: function translate(e) {\n          return this.min.add(e), this.max.add(e), this;\n        },\n        equals: function equals(e) {\n          return e.min.equals(this.min) && e.max.equals(this.max);\n        }\n      }), Object.assign(m.prototype, {\n        set: function set(e, t) {\n          return this.center.copy(e), this.radius = t, this;\n        },\n        setFromPoints: function () {\n          var e = new f();\n          return function (t, r) {\n            var i = this.center;\n            void 0 !== r ? i.copy(r) : e.setFromPoints(t).getCenter(i);\n\n            for (var n = 0, o = 0, a = t.length; o < a; o++) {\n              n = Math.max(n, i.distanceToSquared(t[o]));\n            }\n\n            return this.radius = Math.sqrt(n), this;\n          };\n        }(),\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        },\n        copy: function copy(e) {\n          return this.center.copy(e.center), this.radius = e.radius, this;\n        },\n        empty: function empty() {\n          return this.radius <= 0;\n        },\n        containsPoint: function containsPoint(e) {\n          return e.distanceToSquared(this.center) <= this.radius * this.radius;\n        },\n        distanceToPoint: function distanceToPoint(e) {\n          return e.distanceTo(this.center) - this.radius;\n        },\n        intersectsSphere: function intersectsSphere(e) {\n          var t = this.radius + e.radius;\n          return e.center.distanceToSquared(this.center) <= t * t;\n        },\n        intersectsBox: function intersectsBox(e) {\n          return e.intersectsSphere(this);\n        },\n        intersectsPlane: function intersectsPlane(e) {\n          return Math.abs(e.distanceToPoint(this.center)) <= this.radius;\n        },\n        clampPoint: function clampPoint(e, t) {\n          var r = this.center.distanceToSquared(e);\n          return void 0 === t && (console.warn(\"THREE.Sphere: .clampPoint() target is now required\"), t = new s()), t.copy(e), r > this.radius * this.radius && (t.sub(this.center).normalize(), t.multiplyScalar(this.radius).add(this.center)), t;\n        },\n        getBoundingBox: function getBoundingBox(e) {\n          return void 0 === e && (console.warn(\"THREE.Sphere: .getBoundingBox() target is now required\"), e = new f()), e.set(this.center, this.center), e.expandByScalar(this.radius), e;\n        },\n        applyMatrix4: function applyMatrix4(e) {\n          return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this;\n        },\n        translate: function translate(e) {\n          return this.center.add(e), this;\n        },\n        equals: function equals(e) {\n          return e.center.equals(this.center) && e.radius === this.radius;\n        }\n      }), Object.assign(v.prototype, {\n        set: function set(e, t) {\n          return this.normal.copy(e), this.constant = t, this;\n        },\n        setComponents: function setComponents(e, t, r, i) {\n          return this.normal.set(e, t, r), this.constant = i, this;\n        },\n        setFromNormalAndCoplanarPoint: function setFromNormalAndCoplanarPoint(e, t) {\n          return this.normal.copy(e), this.constant = -t.dot(this.normal), this;\n        },\n        setFromCoplanarPoints: function () {\n          var e = new s(),\n              t = new s();\n          return function (r, i, n) {\n            var o = e.subVectors(n, i).cross(t.subVectors(r, i)).normalize();\n            return this.setFromNormalAndCoplanarPoint(o, r), this;\n          };\n        }(),\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        },\n        copy: function copy(e) {\n          return this.normal.copy(e.normal), this.constant = e.constant, this;\n        },\n        normalize: function normalize() {\n          var e = 1 / this.normal.length();\n          return this.normal.multiplyScalar(e), this.constant *= e, this;\n        },\n        negate: function negate() {\n          return this.constant *= -1, this.normal.negate(), this;\n        },\n        distanceToPoint: function distanceToPoint(e) {\n          return this.normal.dot(e) + this.constant;\n        },\n        distanceToSphere: function distanceToSphere(e) {\n          return this.distanceToPoint(e.center) - e.radius;\n        },\n        projectPoint: function projectPoint(e, t) {\n          return void 0 === t && (console.warn(\"THREE.Plane: .projectPoint() target is now required\"), t = new s()), t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e);\n        },\n        intersectLine: function () {\n          var e = new s();\n          return function (t, r) {\n            void 0 === r && (console.warn(\"THREE.Plane: .intersectLine() target is now required\"), r = new s());\n            var i = t.delta(e),\n                n = this.normal.dot(i);\n\n            if (0 !== n) {\n              var o = -(t.start.dot(this.normal) + this.constant) / n;\n              if (!(o < 0 || o > 1)) return r.copy(i).multiplyScalar(o).add(t.start);\n            } else if (0 === this.distanceToPoint(t.start)) return r.copy(t.start);\n          };\n        }(),\n        intersectsLine: function intersectsLine(e) {\n          var t = this.distanceToPoint(e.start),\n              r = this.distanceToPoint(e.end);\n          return t < 0 && r > 0 || r < 0 && t > 0;\n        },\n        intersectsBox: function intersectsBox(e) {\n          return e.intersectsPlane(this);\n        },\n        intersectsSphere: function intersectsSphere(e) {\n          return e.intersectsPlane(this);\n        },\n        coplanarPoint: function coplanarPoint(e) {\n          return void 0 === e && (console.warn(\"THREE.Plane: .coplanarPoint() target is now required\"), e = new s()), e.copy(this.normal).multiplyScalar(-this.constant);\n        },\n        applyMatrix4: function () {\n          var e = new s(),\n              t = new c();\n          return function (r, i) {\n            var n = i || t.getNormalMatrix(r),\n                o = this.coplanarPoint(e).applyMatrix4(r),\n                a = this.normal.applyMatrix3(n).normalize();\n            return this.constant = -o.dot(a), this;\n          };\n        }(),\n        translate: function translate(e) {\n          return this.constant -= e.dot(this.normal), this;\n        },\n        equals: function equals(e) {\n          return e.normal.equals(this.normal) && e.constant === this.constant;\n        }\n      }), Object.assign(g.prototype, {\n        set: function set(e, t, r, i, n, o) {\n          var a = this.planes;\n          return a[0].copy(e), a[1].copy(t), a[2].copy(r), a[3].copy(i), a[4].copy(n), a[5].copy(o), this;\n        },\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        },\n        copy: function copy(e) {\n          for (var t = this.planes, r = 0; r < 6; r++) {\n            t[r].copy(e.planes[r]);\n          }\n\n          return this;\n        },\n        setFromMatrix: function setFromMatrix(e) {\n          var t = this.planes,\n              r = e.elements,\n              i = r[0],\n              n = r[1],\n              o = r[2],\n              a = r[3],\n              s = r[4],\n              c = r[5],\n              l = r[6],\n              u = r[7],\n              h = r[8],\n              d = r[9],\n              p = r[10],\n              f = r[11],\n              m = r[12],\n              v = r[13],\n              g = r[14],\n              y = r[15];\n          return t[0].setComponents(a - i, u - s, f - h, y - m).normalize(), t[1].setComponents(a + i, u + s, f + h, y + m).normalize(), t[2].setComponents(a + n, u + c, f + d, y + v).normalize(), t[3].setComponents(a - n, u - c, f - d, y - v).normalize(), t[4].setComponents(a - o, u - l, f - p, y - g).normalize(), t[5].setComponents(a + o, u + l, f + p, y + g).normalize(), this;\n        },\n        intersectsObject: function () {\n          var e = new m();\n          return function (t) {\n            var r = t.geometry;\n            return null === r.boundingSphere && r.computeBoundingSphere(), e.copy(r.boundingSphere).applyMatrix4(t.matrixWorld), this.intersectsSphere(e);\n          };\n        }(),\n        intersectsSprite: function () {\n          var e = new m();\n          return function (t) {\n            return e.center.set(0, 0, 0), e.radius = .7071067811865476, e.applyMatrix4(t.matrixWorld), this.intersectsSphere(e);\n          };\n        }(),\n        intersectsSphere: function intersectsSphere(e) {\n          for (var t = this.planes, r = e.center, i = -e.radius, n = 0; n < 6; n++) {\n            if (t[n].distanceToPoint(r) < i) return !1;\n          }\n\n          return !0;\n        },\n        intersectsBox: function () {\n          var e = new s(),\n              t = new s();\n          return function (r) {\n            for (var i = this.planes, n = 0; n < 6; n++) {\n              var o = i[n];\n              e.x = o.normal.x > 0 ? r.min.x : r.max.x, t.x = o.normal.x > 0 ? r.max.x : r.min.x, e.y = o.normal.y > 0 ? r.min.y : r.max.y, t.y = o.normal.y > 0 ? r.max.y : r.min.y, e.z = o.normal.z > 0 ? r.min.z : r.max.z, t.z = o.normal.z > 0 ? r.max.z : r.min.z;\n              var a = o.distanceToPoint(e),\n                  s = o.distanceToPoint(t);\n              if (a < 0 && s < 0) return !1;\n            }\n\n            return !0;\n          };\n        }(),\n        containsPoint: function containsPoint(e) {\n          for (var t = this.planes, r = 0; r < 6; r++) {\n            if (t[r].distanceToPoint(e) < 0) return !1;\n          }\n\n          return !0;\n        }\n      });\n      var Gs = {\n        alphamap_fragment: \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\",\n        alphamap_pars_fragment: \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\",\n        alphatest_fragment: \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\",\n        aomap_fragment: \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\",\n        aomap_pars_fragment: \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\",\n        begin_vertex: \"\\nvec3 transformed = vec3( position );\\n\",\n        beginnormal_vertex: \"\\nvec3 objectNormal = vec3( normal );\\n\",\n        bsdfs: \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\",\n        bumpmap_pars_fragment: \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\",\n        clipping_planes_fragment: \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\",\n        clipping_planes_pars_fragment: \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\",\n        clipping_planes_pars_vertex: \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\",\n        clipping_planes_vertex: \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\",\n        color_fragment: \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\",\n        color_pars_fragment: \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\",\n        color_pars_vertex: \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\",\n        color_vertex: \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\",\n        common: \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\",\n        cube_uv_reflection_fragment: \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\",\n        defaultnormal_vertex: \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\",\n        displacementmap_pars_vertex: \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\",\n        displacementmap_vertex: \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\",\n        emissivemap_fragment: \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\",\n        emissivemap_pars_fragment: \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\",\n        encodings_fragment: \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\",\n        encodings_pars_fragment: \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\",\n        envmap_fragment: \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\",\n        envmap_pars_fragment: \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\",\n        envmap_pars_vertex: \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\",\n        envmap_vertex: \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\",\n        fog_vertex: \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\",\n        fog_pars_vertex: \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\",\n        fog_fragment: \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\",\n        fog_pars_fragment: \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\",\n        gradientmap_pars_fragment: \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\",\n        lightmap_fragment: \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\",\n        lightmap_pars_fragment: \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\",\n        lights_lambert_vertex: \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\",\n        lights_pars_begin: \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\",\n        lights_pars_maps: \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\",\n        lights_phong_fragment: \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\",\n        lights_phong_pars_fragment: \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\",\n        lights_physical_fragment: \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\",\n        lights_physical_pars_fragment: \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\",\n        lights_fragment_begin: \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\",\n        lights_fragment_maps: \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\",\n        lights_fragment_end: \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\",\n        logdepthbuf_fragment: \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\",\n        logdepthbuf_pars_fragment: \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\",\n        logdepthbuf_pars_vertex: \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\",\n        logdepthbuf_vertex: \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\",\n        map_fragment: \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\",\n        map_pars_fragment: \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\",\n        map_particle_fragment: \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\",\n        map_particle_pars_fragment: \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\",\n        metalnessmap_fragment: \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\",\n        metalnessmap_pars_fragment: \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\",\n        morphnormal_vertex: \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\",\n        morphtarget_pars_vertex: \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\",\n        morphtarget_vertex: \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\",\n        normal_fragment_begin: \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\",\n        normal_fragment_maps: \"#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\",\n        normalmap_pars_fragment: \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\t\\tscale *= float( gl_FrontFacing ) * 2.0 - 1.0;\\n\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\",\n        packing: \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\",\n        premultiplied_alpha_fragment: \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\",\n        project_vertex: \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\",\n        dithering_fragment: \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\",\n        dithering_pars_fragment: \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\",\n        roughnessmap_fragment: \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\",\n        roughnessmap_pars_fragment: \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\",\n        shadowmap_pars_fragment: \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\",\n        shadowmap_pars_vertex: \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\",\n        shadowmap_vertex: \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\",\n        shadowmask_pars_fragment: \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\",\n        skinbase_vertex: \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\",\n        skinning_pars_vertex: \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\",\n        skinning_vertex: \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\",\n        skinnormal_vertex: \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\",\n        specularmap_fragment: \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\",\n        specularmap_pars_fragment: \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\",\n        tonemapping_fragment: \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\",\n        tonemapping_pars_fragment: \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\",\n        uv_pars_fragment: \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\",\n        uv_pars_vertex: \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\",\n        uv_vertex: \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\",\n        uv2_pars_fragment: \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\",\n        uv2_pars_vertex: \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\",\n        uv2_vertex: \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\",\n        worldpos_vertex: \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\",\n        cube_frag: \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\",\n        cube_vert: \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\",\n        depth_frag: \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\",\n        depth_vert: \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\",\n        distanceRGBA_frag: \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\",\n        distanceRGBA_vert: \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\",\n        equirect_frag: \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\",\n        equirect_vert: \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\",\n        linedashed_frag: \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",\n        linedashed_vert: \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",\n        meshbasic_frag: \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",\n        meshbasic_vert: \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",\n        meshlambert_frag: \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\",\n        meshlambert_vert: \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",\n        meshphong_frag: \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\",\n        meshphong_vert: \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",\n        meshphysical_frag: \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\",\n        meshphysical_vert: \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",\n        normal_frag: \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\",\n        normal_vert: \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\",\n        points_frag: \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\",\n        points_vert: \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\",\n        shadow_frag: \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\",\n        shadow_vert: \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\"\n      },\n          Hs = {\n        merge: function merge(e) {\n          for (var t = {}, r = 0; r < e.length; r++) {\n            var i = this.clone(e[r]);\n\n            for (var n in i) {\n              t[n] = i[n];\n            }\n          }\n\n          return t;\n        },\n        clone: function clone(e) {\n          var t = {};\n\n          for (var r in e) {\n            t[r] = {};\n\n            for (var i in e[r]) {\n              var n = e[r][i];\n              n && (n.isColor || n.isMatrix3 || n.isMatrix4 || n.isVector2 || n.isVector3 || n.isVector4 || n.isTexture) ? t[r][i] = n.clone() : Array.isArray(n) ? t[r][i] = n.slice() : t[r][i] = n;\n            }\n          }\n\n          return t;\n        }\n      },\n          js = {\n        aliceblue: 15792383,\n        antiquewhite: 16444375,\n        aqua: 65535,\n        aquamarine: 8388564,\n        azure: 15794175,\n        beige: 16119260,\n        bisque: 16770244,\n        black: 0,\n        blanchedalmond: 16772045,\n        blue: 255,\n        blueviolet: 9055202,\n        brown: 10824234,\n        burlywood: 14596231,\n        cadetblue: 6266528,\n        chartreuse: 8388352,\n        chocolate: 13789470,\n        coral: 16744272,\n        cornflowerblue: 6591981,\n        cornsilk: 16775388,\n        crimson: 14423100,\n        cyan: 65535,\n        darkblue: 139,\n        darkcyan: 35723,\n        darkgoldenrod: 12092939,\n        darkgray: 11119017,\n        darkgreen: 25600,\n        darkgrey: 11119017,\n        darkkhaki: 12433259,\n        darkmagenta: 9109643,\n        darkolivegreen: 5597999,\n        darkorange: 16747520,\n        darkorchid: 10040012,\n        darkred: 9109504,\n        darksalmon: 15308410,\n        darkseagreen: 9419919,\n        darkslateblue: 4734347,\n        darkslategray: 3100495,\n        darkslategrey: 3100495,\n        darkturquoise: 52945,\n        darkviolet: 9699539,\n        deeppink: 16716947,\n        deepskyblue: 49151,\n        dimgray: 6908265,\n        dimgrey: 6908265,\n        dodgerblue: 2003199,\n        firebrick: 11674146,\n        floralwhite: 16775920,\n        forestgreen: 2263842,\n        fuchsia: 16711935,\n        gainsboro: 14474460,\n        ghostwhite: 16316671,\n        gold: 16766720,\n        goldenrod: 14329120,\n        gray: 8421504,\n        green: 32768,\n        greenyellow: 11403055,\n        grey: 8421504,\n        honeydew: 15794160,\n        hotpink: 16738740,\n        indianred: 13458524,\n        indigo: 4915330,\n        ivory: 16777200,\n        khaki: 15787660,\n        lavender: 15132410,\n        lavenderblush: 16773365,\n        lawngreen: 8190976,\n        lemonchiffon: 16775885,\n        lightblue: 11393254,\n        lightcoral: 15761536,\n        lightcyan: 14745599,\n        lightgoldenrodyellow: 16448210,\n        lightgray: 13882323,\n        lightgreen: 9498256,\n        lightgrey: 13882323,\n        lightpink: 16758465,\n        lightsalmon: 16752762,\n        lightseagreen: 2142890,\n        lightskyblue: 8900346,\n        lightslategray: 7833753,\n        lightslategrey: 7833753,\n        lightsteelblue: 11584734,\n        lightyellow: 16777184,\n        lime: 65280,\n        limegreen: 3329330,\n        linen: 16445670,\n        magenta: 16711935,\n        maroon: 8388608,\n        mediumaquamarine: 6737322,\n        mediumblue: 205,\n        mediumorchid: 12211667,\n        mediumpurple: 9662683,\n        mediumseagreen: 3978097,\n        mediumslateblue: 8087790,\n        mediumspringgreen: 64154,\n        mediumturquoise: 4772300,\n        mediumvioletred: 13047173,\n        midnightblue: 1644912,\n        mintcream: 16121850,\n        mistyrose: 16770273,\n        moccasin: 16770229,\n        navajowhite: 16768685,\n        navy: 128,\n        oldlace: 16643558,\n        olive: 8421376,\n        olivedrab: 7048739,\n        orange: 16753920,\n        orangered: 16729344,\n        orchid: 14315734,\n        palegoldenrod: 15657130,\n        palegreen: 10025880,\n        paleturquoise: 11529966,\n        palevioletred: 14381203,\n        papayawhip: 16773077,\n        peachpuff: 16767673,\n        peru: 13468991,\n        pink: 16761035,\n        plum: 14524637,\n        powderblue: 11591910,\n        purple: 8388736,\n        rebeccapurple: 6697881,\n        red: 16711680,\n        rosybrown: 12357519,\n        royalblue: 4286945,\n        saddlebrown: 9127187,\n        salmon: 16416882,\n        sandybrown: 16032864,\n        seagreen: 3050327,\n        seashell: 16774638,\n        sienna: 10506797,\n        silver: 12632256,\n        skyblue: 8900331,\n        slateblue: 6970061,\n        slategray: 7372944,\n        slategrey: 7372944,\n        snow: 16775930,\n        springgreen: 65407,\n        steelblue: 4620980,\n        tan: 13808780,\n        teal: 32896,\n        thistle: 14204888,\n        tomato: 16737095,\n        turquoise: 4251856,\n        violet: 15631086,\n        wheat: 16113331,\n        white: 16777215,\n        whitesmoke: 16119285,\n        yellow: 16776960,\n        yellowgreen: 10145074\n      };\n      Object.assign(y.prototype, {\n        isColor: !0,\n        r: 1,\n        g: 1,\n        b: 1,\n        set: function set(e) {\n          return e && e.isColor ? this.copy(e) : \"number\" == typeof e ? this.setHex(e) : \"string\" == typeof e && this.setStyle(e), this;\n        },\n        setScalar: function setScalar(e) {\n          return this.r = e, this.g = e, this.b = e, this;\n        },\n        setHex: function setHex(e) {\n          return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (255 & e) / 255, this;\n        },\n        setRGB: function setRGB(e, t, r) {\n          return this.r = e, this.g = t, this.b = r, this;\n        },\n        setHSL: function () {\n          function e(e, t, r) {\n            return r < 0 && (r += 1), r > 1 && (r -= 1), r < 1 / 6 ? e + 6 * (t - e) * r : r < .5 ? t : r < 2 / 3 ? e + 6 * (t - e) * (2 / 3 - r) : e;\n          }\n\n          return function (t, r, i) {\n            if (t = zs.euclideanModulo(t, 1), r = zs.clamp(r, 0, 1), i = zs.clamp(i, 0, 1), 0 === r) this.r = this.g = this.b = i;else {\n              var n = i <= .5 ? i * (1 + r) : i + r - i * r,\n                  o = 2 * i - n;\n              this.r = e(o, n, t + 1 / 3), this.g = e(o, n, t), this.b = e(o, n, t - 1 / 3);\n            }\n            return this;\n          };\n        }(),\n        setStyle: function setStyle(e) {\n          function t(t) {\n            void 0 !== t && parseFloat(t) < 1 && console.warn(\"THREE.Color: Alpha component of \" + e + \" will be ignored.\");\n          }\n\n          var r;\n\n          if (r = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(e)) {\n            var i,\n                n = r[1],\n                o = r[2];\n\n            switch (n) {\n              case \"rgb\":\n              case \"rgba\":\n                if (i = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(o)) return this.r = Math.min(255, parseInt(i[1], 10)) / 255, this.g = Math.min(255, parseInt(i[2], 10)) / 255, this.b = Math.min(255, parseInt(i[3], 10)) / 255, t(i[5]), this;\n                if (i = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(o)) return this.r = Math.min(100, parseInt(i[1], 10)) / 100, this.g = Math.min(100, parseInt(i[2], 10)) / 100, this.b = Math.min(100, parseInt(i[3], 10)) / 100, t(i[5]), this;\n                break;\n\n              case \"hsl\":\n              case \"hsla\":\n                if (i = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(o)) {\n                  var a = parseFloat(i[1]) / 360,\n                      s = parseInt(i[2], 10) / 100,\n                      c = parseInt(i[3], 10) / 100;\n                  return t(i[5]), this.setHSL(a, s, c);\n                }\n\n            }\n          } else if (r = /^\\#([A-Fa-f0-9]+)$/.exec(e)) {\n            var l = r[1],\n                u = l.length;\n            if (3 === u) return this.r = parseInt(l.charAt(0) + l.charAt(0), 16) / 255, this.g = parseInt(l.charAt(1) + l.charAt(1), 16) / 255, this.b = parseInt(l.charAt(2) + l.charAt(2), 16) / 255, this;\n            if (6 === u) return this.r = parseInt(l.charAt(0) + l.charAt(1), 16) / 255, this.g = parseInt(l.charAt(2) + l.charAt(3), 16) / 255, this.b = parseInt(l.charAt(4) + l.charAt(5), 16) / 255, this;\n          }\n\n          if (e && e.length > 0) {\n            var l = js[e];\n            void 0 !== l ? this.setHex(l) : console.warn(\"THREE.Color: Unknown color \" + e);\n          }\n\n          return this;\n        },\n        clone: function clone() {\n          return new this.constructor(this.r, this.g, this.b);\n        },\n        copy: function copy(e) {\n          return this.r = e.r, this.g = e.g, this.b = e.b, this;\n        },\n        copyGammaToLinear: function copyGammaToLinear(e, t) {\n          return void 0 === t && (t = 2), this.r = Math.pow(e.r, t), this.g = Math.pow(e.g, t), this.b = Math.pow(e.b, t), this;\n        },\n        copyLinearToGamma: function copyLinearToGamma(e, t) {\n          void 0 === t && (t = 2);\n          var r = t > 0 ? 1 / t : 1;\n          return this.r = Math.pow(e.r, r), this.g = Math.pow(e.g, r), this.b = Math.pow(e.b, r), this;\n        },\n        convertGammaToLinear: function convertGammaToLinear() {\n          var e = this.r,\n              t = this.g,\n              r = this.b;\n          return this.r = e * e, this.g = t * t, this.b = r * r, this;\n        },\n        convertLinearToGamma: function convertLinearToGamma() {\n          return this.r = Math.sqrt(this.r), this.g = Math.sqrt(this.g), this.b = Math.sqrt(this.b), this;\n        },\n        getHex: function getHex() {\n          return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0;\n        },\n        getHexString: function getHexString() {\n          return (\"000000\" + this.getHex().toString(16)).slice(-6);\n        },\n        getHSL: function getHSL(e) {\n          void 0 === e && (console.warn(\"THREE.Color: .getHSL() target is now required\"), e = {\n            h: 0,\n            s: 0,\n            l: 0\n          });\n          var t,\n              r,\n              i = this.r,\n              n = this.g,\n              o = this.b,\n              a = Math.max(i, n, o),\n              s = Math.min(i, n, o),\n              c = (s + a) / 2;\n          if (s === a) t = 0, r = 0;else {\n            var l = a - s;\n\n            switch (r = c <= .5 ? l / (a + s) : l / (2 - a - s), a) {\n              case i:\n                t = (n - o) / l + (n < o ? 6 : 0);\n                break;\n\n              case n:\n                t = (o - i) / l + 2;\n                break;\n\n              case o:\n                t = (i - n) / l + 4;\n            }\n\n            t /= 6;\n          }\n          return e.h = t, e.s = r, e.l = c, e;\n        },\n        getStyle: function getStyle() {\n          return \"rgb(\" + (255 * this.r | 0) + \",\" + (255 * this.g | 0) + \",\" + (255 * this.b | 0) + \")\";\n        },\n        offsetHSL: function () {\n          var e = {};\n          return function (t, r, i) {\n            return this.getHSL(e), e.h += t, e.s += r, e.l += i, this.setHSL(e.h, e.s, e.l), this;\n          };\n        }(),\n        add: function add(e) {\n          return this.r += e.r, this.g += e.g, this.b += e.b, this;\n        },\n        addColors: function addColors(e, t) {\n          return this.r = e.r + t.r, this.g = e.g + t.g, this.b = e.b + t.b, this;\n        },\n        addScalar: function addScalar(e) {\n          return this.r += e, this.g += e, this.b += e, this;\n        },\n        sub: function sub(e) {\n          return this.r = Math.max(0, this.r - e.r), this.g = Math.max(0, this.g - e.g), this.b = Math.max(0, this.b - e.b), this;\n        },\n        multiply: function multiply(e) {\n          return this.r *= e.r, this.g *= e.g, this.b *= e.b, this;\n        },\n        multiplyScalar: function multiplyScalar(e) {\n          return this.r *= e, this.g *= e, this.b *= e, this;\n        },\n        lerp: function lerp(e, t) {\n          return this.r += (e.r - this.r) * t, this.g += (e.g - this.g) * t, this.b += (e.b - this.b) * t, this;\n        },\n        equals: function equals(e) {\n          return e.r === this.r && e.g === this.g && e.b === this.b;\n        },\n        fromArray: function fromArray(e, t) {\n          return void 0 === t && (t = 0), this.r = e[t], this.g = e[t + 1], this.b = e[t + 2], this;\n        },\n        toArray: function toArray(e, t) {\n          return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.r, e[t + 1] = this.g, e[t + 2] = this.b, e;\n        },\n        toJSON: function toJSON() {\n          return this.getHex();\n        }\n      });\n      var Vs = {\n        common: {\n          diffuse: {\n            value: new y(15658734)\n          },\n          opacity: {\n            value: 1\n          },\n          map: {\n            value: null\n          },\n          uvTransform: {\n            value: new c()\n          },\n          alphaMap: {\n            value: null\n          }\n        },\n        specularmap: {\n          specularMap: {\n            value: null\n          }\n        },\n        envmap: {\n          envMap: {\n            value: null\n          },\n          flipEnvMap: {\n            value: -1\n          },\n          reflectivity: {\n            value: 1\n          },\n          refractionRatio: {\n            value: .98\n          },\n          maxMipLevel: {\n            value: 0\n          }\n        },\n        aomap: {\n          aoMap: {\n            value: null\n          },\n          aoMapIntensity: {\n            value: 1\n          }\n        },\n        lightmap: {\n          lightMap: {\n            value: null\n          },\n          lightMapIntensity: {\n            value: 1\n          }\n        },\n        emissivemap: {\n          emissiveMap: {\n            value: null\n          }\n        },\n        bumpmap: {\n          bumpMap: {\n            value: null\n          },\n          bumpScale: {\n            value: 1\n          }\n        },\n        normalmap: {\n          normalMap: {\n            value: null\n          },\n          normalScale: {\n            value: new n(1, 1)\n          }\n        },\n        displacementmap: {\n          displacementMap: {\n            value: null\n          },\n          displacementScale: {\n            value: 1\n          },\n          displacementBias: {\n            value: 0\n          }\n        },\n        roughnessmap: {\n          roughnessMap: {\n            value: null\n          }\n        },\n        metalnessmap: {\n          metalnessMap: {\n            value: null\n          }\n        },\n        gradientmap: {\n          gradientMap: {\n            value: null\n          }\n        },\n        fog: {\n          fogDensity: {\n            value: 25e-5\n          },\n          fogNear: {\n            value: 1\n          },\n          fogFar: {\n            value: 2e3\n          },\n          fogColor: {\n            value: new y(16777215)\n          }\n        },\n        lights: {\n          ambientLightColor: {\n            value: []\n          },\n          directionalLights: {\n            value: [],\n            properties: {\n              direction: {},\n              color: {},\n              shadow: {},\n              shadowBias: {},\n              shadowRadius: {},\n              shadowMapSize: {}\n            }\n          },\n          directionalShadowMap: {\n            value: []\n          },\n          directionalShadowMatrix: {\n            value: []\n          },\n          spotLights: {\n            value: [],\n            properties: {\n              color: {},\n              position: {},\n              direction: {},\n              distance: {},\n              coneCos: {},\n              penumbraCos: {},\n              decay: {},\n              shadow: {},\n              shadowBias: {},\n              shadowRadius: {},\n              shadowMapSize: {}\n            }\n          },\n          spotShadowMap: {\n            value: []\n          },\n          spotShadowMatrix: {\n            value: []\n          },\n          pointLights: {\n            value: [],\n            properties: {\n              color: {},\n              position: {},\n              decay: {},\n              distance: {},\n              shadow: {},\n              shadowBias: {},\n              shadowRadius: {},\n              shadowMapSize: {},\n              shadowCameraNear: {},\n              shadowCameraFar: {}\n            }\n          },\n          pointShadowMap: {\n            value: []\n          },\n          pointShadowMatrix: {\n            value: []\n          },\n          hemisphereLights: {\n            value: [],\n            properties: {\n              direction: {},\n              skyColor: {},\n              groundColor: {}\n            }\n          },\n          rectAreaLights: {\n            value: [],\n            properties: {\n              color: {},\n              position: {},\n              width: {},\n              height: {}\n            }\n          }\n        },\n        points: {\n          diffuse: {\n            value: new y(15658734)\n          },\n          opacity: {\n            value: 1\n          },\n          size: {\n            value: 1\n          },\n          scale: {\n            value: 1\n          },\n          map: {\n            value: null\n          },\n          uvTransform: {\n            value: new c()\n          }\n        }\n      },\n          ks = {\n        basic: {\n          uniforms: Hs.merge([Vs.common, Vs.specularmap, Vs.envmap, Vs.aomap, Vs.lightmap, Vs.fog]),\n          vertexShader: Gs.meshbasic_vert,\n          fragmentShader: Gs.meshbasic_frag\n        },\n        lambert: {\n          uniforms: Hs.merge([Vs.common, Vs.specularmap, Vs.envmap, Vs.aomap, Vs.lightmap, Vs.emissivemap, Vs.fog, Vs.lights, {\n            emissive: {\n              value: new y(0)\n            }\n          }]),\n          vertexShader: Gs.meshlambert_vert,\n          fragmentShader: Gs.meshlambert_frag\n        },\n        phong: {\n          uniforms: Hs.merge([Vs.common, Vs.specularmap, Vs.envmap, Vs.aomap, Vs.lightmap, Vs.emissivemap, Vs.bumpmap, Vs.normalmap, Vs.displacementmap, Vs.gradientmap, Vs.fog, Vs.lights, {\n            emissive: {\n              value: new y(0)\n            },\n            specular: {\n              value: new y(1118481)\n            },\n            shininess: {\n              value: 30\n            }\n          }]),\n          vertexShader: Gs.meshphong_vert,\n          fragmentShader: Gs.meshphong_frag\n        },\n        standard: {\n          uniforms: Hs.merge([Vs.common, Vs.envmap, Vs.aomap, Vs.lightmap, Vs.emissivemap, Vs.bumpmap, Vs.normalmap, Vs.displacementmap, Vs.roughnessmap, Vs.metalnessmap, Vs.fog, Vs.lights, {\n            emissive: {\n              value: new y(0)\n            },\n            roughness: {\n              value: .5\n            },\n            metalness: {\n              value: .5\n            },\n            envMapIntensity: {\n              value: 1\n            }\n          }]),\n          vertexShader: Gs.meshphysical_vert,\n          fragmentShader: Gs.meshphysical_frag\n        },\n        points: {\n          uniforms: Hs.merge([Vs.points, Vs.fog]),\n          vertexShader: Gs.points_vert,\n          fragmentShader: Gs.points_frag\n        },\n        dashed: {\n          uniforms: Hs.merge([Vs.common, Vs.fog, {\n            scale: {\n              value: 1\n            },\n            dashSize: {\n              value: 1\n            },\n            totalSize: {\n              value: 2\n            }\n          }]),\n          vertexShader: Gs.linedashed_vert,\n          fragmentShader: Gs.linedashed_frag\n        },\n        depth: {\n          uniforms: Hs.merge([Vs.common, Vs.displacementmap]),\n          vertexShader: Gs.depth_vert,\n          fragmentShader: Gs.depth_frag\n        },\n        normal: {\n          uniforms: Hs.merge([Vs.common, Vs.bumpmap, Vs.normalmap, Vs.displacementmap, {\n            opacity: {\n              value: 1\n            }\n          }]),\n          vertexShader: Gs.normal_vert,\n          fragmentShader: Gs.normal_frag\n        },\n        cube: {\n          uniforms: {\n            tCube: {\n              value: null\n            },\n            tFlip: {\n              value: -1\n            },\n            opacity: {\n              value: 1\n            }\n          },\n          vertexShader: Gs.cube_vert,\n          fragmentShader: Gs.cube_frag\n        },\n        equirect: {\n          uniforms: {\n            tEquirect: {\n              value: null\n            }\n          },\n          vertexShader: Gs.equirect_vert,\n          fragmentShader: Gs.equirect_frag\n        },\n        distanceRGBA: {\n          uniforms: Hs.merge([Vs.common, Vs.displacementmap, {\n            referencePosition: {\n              value: new s()\n            },\n            nearDistance: {\n              value: 1\n            },\n            farDistance: {\n              value: 1e3\n            }\n          }]),\n          vertexShader: Gs.distanceRGBA_vert,\n          fragmentShader: Gs.distanceRGBA_frag\n        },\n        shadow: {\n          uniforms: Hs.merge([Vs.lights, Vs.fog, {\n            color: {\n              value: new y(0)\n            },\n            opacity: {\n              value: 1\n            }\n          }]),\n          vertexShader: Gs.shadow_vert,\n          fragmentShader: Gs.shadow_frag\n        }\n      };\n      ks.physical = {\n        uniforms: Hs.merge([ks.standard.uniforms, {\n          clearCoat: {\n            value: 0\n          },\n          clearCoatRoughness: {\n            value: 0\n          }\n        }]),\n        vertexShader: Gs.meshphysical_vert,\n        fragmentShader: Gs.meshphysical_frag\n      }, _.RotationOrders = [\"XYZ\", \"YZX\", \"ZXY\", \"XZY\", \"YXZ\", \"ZYX\"], _.DefaultOrder = \"XYZ\", Object.defineProperties(_.prototype, {\n        x: {\n          get: function get() {\n            return this._x;\n          },\n          set: function set(e) {\n            this._x = e, this.onChangeCallback();\n          }\n        },\n        y: {\n          get: function get() {\n            return this._y;\n          },\n          set: function set(e) {\n            this._y = e, this.onChangeCallback();\n          }\n        },\n        z: {\n          get: function get() {\n            return this._z;\n          },\n          set: function set(e) {\n            this._z = e, this.onChangeCallback();\n          }\n        },\n        order: {\n          get: function get() {\n            return this._order;\n          },\n          set: function set(e) {\n            this._order = e, this.onChangeCallback();\n          }\n        }\n      }), Object.assign(_.prototype, {\n        isEuler: !0,\n        set: function set(e, t, r, i) {\n          return this._x = e, this._y = t, this._z = r, this._order = i || this._order, this.onChangeCallback(), this;\n        },\n        clone: function clone() {\n          return new this.constructor(this._x, this._y, this._z, this._order);\n        },\n        copy: function copy(e) {\n          return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this.onChangeCallback(), this;\n        },\n        setFromRotationMatrix: function setFromRotationMatrix(e, t, r) {\n          var i = zs.clamp,\n              n = e.elements,\n              o = n[0],\n              a = n[4],\n              s = n[8],\n              c = n[1],\n              l = n[5],\n              u = n[9],\n              h = n[2],\n              d = n[6],\n              p = n[10];\n          return t = t || this._order, \"XYZ\" === t ? (this._y = Math.asin(i(s, -1, 1)), Math.abs(s) < .99999 ? (this._x = Math.atan2(-u, p), this._z = Math.atan2(-a, o)) : (this._x = Math.atan2(d, l), this._z = 0)) : \"YXZ\" === t ? (this._x = Math.asin(-i(u, -1, 1)), Math.abs(u) < .99999 ? (this._y = Math.atan2(s, p), this._z = Math.atan2(c, l)) : (this._y = Math.atan2(-h, o), this._z = 0)) : \"ZXY\" === t ? (this._x = Math.asin(i(d, -1, 1)), Math.abs(d) < .99999 ? (this._y = Math.atan2(-h, p), this._z = Math.atan2(-a, l)) : (this._y = 0, this._z = Math.atan2(c, o))) : \"ZYX\" === t ? (this._y = Math.asin(-i(h, -1, 1)), Math.abs(h) < .99999 ? (this._x = Math.atan2(d, p), this._z = Math.atan2(c, o)) : (this._x = 0, this._z = Math.atan2(-a, l))) : \"YZX\" === t ? (this._z = Math.asin(i(c, -1, 1)), Math.abs(c) < .99999 ? (this._x = Math.atan2(-u, l), this._y = Math.atan2(-h, o)) : (this._x = 0, this._y = Math.atan2(s, p))) : \"XZY\" === t ? (this._z = Math.asin(-i(a, -1, 1)), Math.abs(a) < .99999 ? (this._x = Math.atan2(d, l), this._y = Math.atan2(s, o)) : (this._x = Math.atan2(-u, p), this._y = 0)) : console.warn(\"THREE.Euler: .setFromRotationMatrix() given unsupported order: \" + t), this._order = t, !1 !== r && this.onChangeCallback(), this;\n        },\n        setFromQuaternion: function () {\n          var e = new o();\n          return function (t, r, i) {\n            return e.makeRotationFromQuaternion(t), this.setFromRotationMatrix(e, r, i);\n          };\n        }(),\n        setFromVector3: function setFromVector3(e, t) {\n          return this.set(e.x, e.y, e.z, t || this._order);\n        },\n        reorder: function () {\n          var e = new a();\n          return function (t) {\n            return e.setFromEuler(this), this.setFromQuaternion(e, t);\n          };\n        }(),\n        equals: function equals(e) {\n          return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order;\n        },\n        fromArray: function fromArray(e) {\n          return this._x = e[0], this._y = e[1], this._z = e[2], void 0 !== e[3] && (this._order = e[3]), this.onChangeCallback(), this;\n        },\n        toArray: function toArray(e, t) {\n          return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._order, e;\n        },\n        toVector3: function toVector3(e) {\n          return e ? e.set(this._x, this._y, this._z) : new s(this._x, this._y, this._z);\n        },\n        onChange: function onChange(e) {\n          return this.onChangeCallback = e, this;\n        },\n        onChangeCallback: function onChangeCallback() {}\n      }), Object.assign(b.prototype, {\n        set: function set(e) {\n          this.mask = 1 << e | 0;\n        },\n        enable: function enable(e) {\n          this.mask |= 1 << e | 0;\n        },\n        toggle: function toggle(e) {\n          this.mask ^= 1 << e | 0;\n        },\n        disable: function disable(e) {\n          this.mask &= ~(1 << e | 0);\n        },\n        test: function test(e) {\n          return 0 != (this.mask & e.mask);\n        }\n      });\n      var Ws = 0;\n      w.DefaultUp = new s(0, 1, 0), w.DefaultMatrixAutoUpdate = !0, w.prototype = Object.assign(Object.create(i.prototype), {\n        constructor: w,\n        isObject3D: !0,\n        onBeforeRender: function onBeforeRender() {},\n        onAfterRender: function onAfterRender() {},\n        applyMatrix: function applyMatrix(e) {\n          this.matrix.multiplyMatrices(e, this.matrix), this.matrix.decompose(this.position, this.quaternion, this.scale);\n        },\n        applyQuaternion: function applyQuaternion(e) {\n          return this.quaternion.premultiply(e), this;\n        },\n        setRotationFromAxisAngle: function setRotationFromAxisAngle(e, t) {\n          this.quaternion.setFromAxisAngle(e, t);\n        },\n        setRotationFromEuler: function setRotationFromEuler(e) {\n          this.quaternion.setFromEuler(e, !0);\n        },\n        setRotationFromMatrix: function setRotationFromMatrix(e) {\n          this.quaternion.setFromRotationMatrix(e);\n        },\n        setRotationFromQuaternion: function setRotationFromQuaternion(e) {\n          this.quaternion.copy(e);\n        },\n        rotateOnAxis: function () {\n          var e = new a();\n          return function (t, r) {\n            return e.setFromAxisAngle(t, r), this.quaternion.multiply(e), this;\n          };\n        }(),\n        rotateOnWorldAxis: function () {\n          var e = new a();\n          return function (t, r) {\n            return e.setFromAxisAngle(t, r), this.quaternion.premultiply(e), this;\n          };\n        }(),\n        rotateX: function () {\n          var e = new s(1, 0, 0);\n          return function (t) {\n            return this.rotateOnAxis(e, t);\n          };\n        }(),\n        rotateY: function () {\n          var e = new s(0, 1, 0);\n          return function (t) {\n            return this.rotateOnAxis(e, t);\n          };\n        }(),\n        rotateZ: function () {\n          var e = new s(0, 0, 1);\n          return function (t) {\n            return this.rotateOnAxis(e, t);\n          };\n        }(),\n        translateOnAxis: function () {\n          var e = new s();\n          return function (t, r) {\n            return e.copy(t).applyQuaternion(this.quaternion), this.position.add(e.multiplyScalar(r)), this;\n          };\n        }(),\n        translateX: function () {\n          var e = new s(1, 0, 0);\n          return function (t) {\n            return this.translateOnAxis(e, t);\n          };\n        }(),\n        translateY: function () {\n          var e = new s(0, 1, 0);\n          return function (t) {\n            return this.translateOnAxis(e, t);\n          };\n        }(),\n        translateZ: function () {\n          var e = new s(0, 0, 1);\n          return function (t) {\n            return this.translateOnAxis(e, t);\n          };\n        }(),\n        localToWorld: function localToWorld(e) {\n          return e.applyMatrix4(this.matrixWorld);\n        },\n        worldToLocal: function () {\n          var e = new o();\n          return function (t) {\n            return t.applyMatrix4(e.getInverse(this.matrixWorld));\n          };\n        }(),\n        lookAt: function () {\n          var e = new o(),\n              t = new s();\n          return function (r, i, n) {\n            r.isVector3 ? t.copy(r) : t.set(r, i, n), this.isCamera ? e.lookAt(this.position, t, this.up) : e.lookAt(t, this.position, this.up), this.quaternion.setFromRotationMatrix(e);\n          };\n        }(),\n        add: function add(e) {\n          if (arguments.length > 1) {\n            for (var t = 0; t < arguments.length; t++) {\n              this.add(arguments[t]);\n            }\n\n            return this;\n          }\n\n          return e === this ? (console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\", e), this) : (e && e.isObject3D ? (null !== e.parent && e.parent.remove(e), e.parent = this, e.dispatchEvent({\n            type: \"added\"\n          }), this.children.push(e)) : console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\", e), this);\n        },\n        remove: function remove(e) {\n          if (arguments.length > 1) {\n            for (var t = 0; t < arguments.length; t++) {\n              this.remove(arguments[t]);\n            }\n\n            return this;\n          }\n\n          var r = this.children.indexOf(e);\n          return -1 !== r && (e.parent = null, e.dispatchEvent({\n            type: \"removed\"\n          }), this.children.splice(r, 1)), this;\n        },\n        getObjectById: function getObjectById(e) {\n          return this.getObjectByProperty(\"id\", e);\n        },\n        getObjectByName: function getObjectByName(e) {\n          return this.getObjectByProperty(\"name\", e);\n        },\n        getObjectByProperty: function getObjectByProperty(e, t) {\n          if (this[e] === t) return this;\n\n          for (var r = 0, i = this.children.length; r < i; r++) {\n            var n = this.children[r],\n                o = n.getObjectByProperty(e, t);\n            if (void 0 !== o) return o;\n          }\n        },\n        getWorldPosition: function getWorldPosition(e) {\n          return void 0 === e && (console.warn(\"THREE.Object3D: .getWorldPosition() target is now required\"), e = new s()), this.updateMatrixWorld(!0), e.setFromMatrixPosition(this.matrixWorld);\n        },\n        getWorldQuaternion: function () {\n          var e = new s(),\n              t = new s();\n          return function (r) {\n            return void 0 === r && (console.warn(\"THREE.Object3D: .getWorldQuaternion() target is now required\"), r = new a()), this.updateMatrixWorld(!0), this.matrixWorld.decompose(e, r, t), r;\n          };\n        }(),\n        getWorldScale: function () {\n          var e = new s(),\n              t = new a();\n          return function (r) {\n            return void 0 === r && (console.warn(\"THREE.Object3D: .getWorldScale() target is now required\"), r = new s()), this.updateMatrixWorld(!0), this.matrixWorld.decompose(e, t, r), r;\n          };\n        }(),\n        getWorldDirection: function () {\n          var e = new a();\n          return function (t) {\n            return void 0 === t && (console.warn(\"THREE.Object3D: .getWorldDirection() target is now required\"), t = new s()), this.getWorldQuaternion(e), t.set(0, 0, 1).applyQuaternion(e);\n          };\n        }(),\n        raycast: function raycast() {},\n        traverse: function traverse(e) {\n          e(this);\n\n          for (var t = this.children, r = 0, i = t.length; r < i; r++) {\n            t[r].traverse(e);\n          }\n        },\n        traverseVisible: function traverseVisible(e) {\n          if (!1 !== this.visible) {\n            e(this);\n\n            for (var t = this.children, r = 0, i = t.length; r < i; r++) {\n              t[r].traverseVisible(e);\n            }\n          }\n        },\n        traverseAncestors: function traverseAncestors(e) {\n          var t = this.parent;\n          null !== t && (e(t), t.traverseAncestors(e));\n        },\n        updateMatrix: function updateMatrix() {\n          this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0;\n        },\n        updateMatrixWorld: function updateMatrixWorld(e) {\n          this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);\n\n          for (var t = this.children, r = 0, i = t.length; r < i; r++) {\n            t[r].updateMatrixWorld(e);\n          }\n        },\n        toJSON: function toJSON(e) {\n          function t(t, r) {\n            return void 0 === t[r.uuid] && (t[r.uuid] = r.toJSON(e)), r.uuid;\n          }\n\n          function r(e) {\n            var t = [];\n\n            for (var r in e) {\n              var i = e[r];\n              delete i.metadata, t.push(i);\n            }\n\n            return t;\n          }\n\n          var i = void 0 === e || \"string\" == typeof e,\n              n = {};\n          i && (e = {\n            geometries: {},\n            materials: {},\n            textures: {},\n            images: {},\n            shapes: {}\n          }, n.metadata = {\n            version: 4.5,\n            type: \"Object\",\n            generator: \"Object3D.toJSON\"\n          });\n          var o = {};\n\n          if (o.uuid = this.uuid, o.type = this.type, \"\" !== this.name && (o.name = this.name), !0 === this.castShadow && (o.castShadow = !0), !0 === this.receiveShadow && (o.receiveShadow = !0), !1 === this.visible && (o.visible = !1), !1 === this.frustumCulled && (o.frustumCulled = !1), 0 !== this.renderOrder && (o.renderOrder = this.renderOrder), \"{}\" !== JSON.stringify(this.userData) && (o.userData = this.userData), o.matrix = this.matrix.toArray(), !1 === this.matrixAutoUpdate && (o.matrixAutoUpdate = !1), void 0 !== this.geometry) {\n            o.geometry = t(e.geometries, this.geometry);\n            var a = this.geometry.parameters;\n\n            if (void 0 !== a && void 0 !== a.shapes) {\n              var s = a.shapes;\n              if (Array.isArray(s)) for (var c = 0, l = s.length; c < l; c++) {\n                var u = s[c];\n                t(e.shapes, u);\n              } else t(e.shapes, s);\n            }\n          }\n\n          if (void 0 !== this.material) if (Array.isArray(this.material)) {\n            for (var h = [], c = 0, l = this.material.length; c < l; c++) {\n              h.push(t(e.materials, this.material[c]));\n            }\n\n            o.material = h;\n          } else o.material = t(e.materials, this.material);\n\n          if (this.children.length > 0) {\n            o.children = [];\n\n            for (var c = 0; c < this.children.length; c++) {\n              o.children.push(this.children[c].toJSON(e).object);\n            }\n          }\n\n          if (i) {\n            var d = r(e.geometries),\n                p = r(e.materials),\n                f = r(e.textures),\n                m = r(e.images),\n                s = r(e.shapes);\n            d.length > 0 && (n.geometries = d), p.length > 0 && (n.materials = p), f.length > 0 && (n.textures = f), m.length > 0 && (n.images = m), s.length > 0 && (n.shapes = s);\n          }\n\n          return n.object = o, n;\n        },\n        clone: function clone(e) {\n          return new this.constructor().copy(this, e);\n        },\n        copy: function copy(e, t) {\n          if (void 0 === t && (t = !0), this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.layers.mask = e.layers.mask, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.userData = JSON.parse(JSON.stringify(e.userData)), !0 === t) for (var r = 0; r < e.children.length; r++) {\n            var i = e.children[r];\n            this.add(i.clone());\n          }\n          return this;\n        }\n      }), M.prototype = Object.assign(Object.create(w.prototype), {\n        constructor: M,\n        isCamera: !0,\n        copy: function copy(e, t) {\n          return w.prototype.copy.call(this, e, t), this.matrixWorldInverse.copy(e.matrixWorldInverse), this.projectionMatrix.copy(e.projectionMatrix), this;\n        },\n        getWorldDirection: function () {\n          var e = new a();\n          return function (t) {\n            return void 0 === t && (console.warn(\"THREE.Camera: .getWorldDirection() target is now required\"), t = new s()), this.getWorldQuaternion(e), t.set(0, 0, -1).applyQuaternion(e);\n          };\n        }(),\n        updateMatrixWorld: function updateMatrixWorld(e) {\n          w.prototype.updateMatrixWorld.call(this, e), this.matrixWorldInverse.getInverse(this.matrixWorld);\n        },\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        }\n      }), E.prototype = Object.assign(Object.create(M.prototype), {\n        constructor: E,\n        isOrthographicCamera: !0,\n        copy: function copy(e, t) {\n          return M.prototype.copy.call(this, e, t), this.left = e.left, this.right = e.right, this.top = e.top, this.bottom = e.bottom, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this.view = null === e.view ? null : Object.assign({}, e.view), this;\n        },\n        setViewOffset: function setViewOffset(e, t, r, i, n, o) {\n          null === this.view && (this.view = {\n            enabled: !0,\n            fullWidth: 1,\n            fullHeight: 1,\n            offsetX: 0,\n            offsetY: 0,\n            width: 1,\n            height: 1\n          }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = r, this.view.offsetY = i, this.view.width = n, this.view.height = o, this.updateProjectionMatrix();\n        },\n        clearViewOffset: function clearViewOffset() {\n          null !== this.view && (this.view.enabled = !1), this.updateProjectionMatrix();\n        },\n        updateProjectionMatrix: function updateProjectionMatrix() {\n          var e = (this.right - this.left) / (2 * this.zoom),\n              t = (this.top - this.bottom) / (2 * this.zoom),\n              r = (this.right + this.left) / 2,\n              i = (this.top + this.bottom) / 2,\n              n = r - e,\n              o = r + e,\n              a = i + t,\n              s = i - t;\n\n          if (null !== this.view && this.view.enabled) {\n            var c = this.zoom / (this.view.width / this.view.fullWidth),\n                l = this.zoom / (this.view.height / this.view.fullHeight),\n                u = (this.right - this.left) / this.view.width,\n                h = (this.top - this.bottom) / this.view.height;\n            n += u * (this.view.offsetX / c), o = n + u * (this.view.width / c), a -= h * (this.view.offsetY / l), s = a - h * (this.view.height / l);\n          }\n\n          this.projectionMatrix.makeOrthographic(n, o, a, s, this.near, this.far);\n        },\n        toJSON: function toJSON(e) {\n          var t = w.prototype.toJSON.call(this, e);\n          return t.object.zoom = this.zoom, t.object.left = this.left, t.object.right = this.right, t.object.top = this.top, t.object.bottom = this.bottom, t.object.near = this.near, t.object.far = this.far, null !== this.view && (t.object.view = Object.assign({}, this.view)), t;\n        }\n      }), Object.assign(S.prototype, {\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        },\n        copy: function copy(e) {\n          this.a = e.a, this.b = e.b, this.c = e.c, this.normal.copy(e.normal), this.color.copy(e.color), this.materialIndex = e.materialIndex;\n\n          for (var t = 0, r = e.vertexNormals.length; t < r; t++) {\n            this.vertexNormals[t] = e.vertexNormals[t].clone();\n          }\n\n          for (var t = 0, r = e.vertexColors.length; t < r; t++) {\n            this.vertexColors[t] = e.vertexColors[t].clone();\n          }\n\n          return this;\n        }\n      });\n      var Xs = 0;\n      T.prototype = Object.assign(Object.create(i.prototype), {\n        constructor: T,\n        isGeometry: !0,\n        applyMatrix: function applyMatrix(e) {\n          for (var t = new c().getNormalMatrix(e), r = 0, i = this.vertices.length; r < i; r++) {\n            this.vertices[r].applyMatrix4(e);\n          }\n\n          for (var r = 0, i = this.faces.length; r < i; r++) {\n            var n = this.faces[r];\n            n.normal.applyMatrix3(t).normalize();\n\n            for (var o = 0, a = n.vertexNormals.length; o < a; o++) {\n              n.vertexNormals[o].applyMatrix3(t).normalize();\n            }\n          }\n\n          return null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this.verticesNeedUpdate = !0, this.normalsNeedUpdate = !0, this;\n        },\n        rotateX: function () {\n          var e = new o();\n          return function (t) {\n            return e.makeRotationX(t), this.applyMatrix(e), this;\n          };\n        }(),\n        rotateY: function () {\n          var e = new o();\n          return function (t) {\n            return e.makeRotationY(t), this.applyMatrix(e), this;\n          };\n        }(),\n        rotateZ: function () {\n          var e = new o();\n          return function (t) {\n            return e.makeRotationZ(t), this.applyMatrix(e), this;\n          };\n        }(),\n        translate: function () {\n          var e = new o();\n          return function (t, r, i) {\n            return e.makeTranslation(t, r, i), this.applyMatrix(e), this;\n          };\n        }(),\n        scale: function () {\n          var e = new o();\n          return function (t, r, i) {\n            return e.makeScale(t, r, i), this.applyMatrix(e), this;\n          };\n        }(),\n        lookAt: function () {\n          var e = new w();\n          return function (t) {\n            e.lookAt(t), e.updateMatrix(), this.applyMatrix(e.matrix);\n          };\n        }(),\n        fromBufferGeometry: function fromBufferGeometry(e) {\n          function t(e, t, i, n) {\n            var o = void 0 !== c ? [d[e].clone(), d[t].clone(), d[i].clone()] : [],\n                a = void 0 !== l ? [r.colors[e].clone(), r.colors[t].clone(), r.colors[i].clone()] : [],\n                s = new S(e, t, i, o, a, n);\n            r.faces.push(s), void 0 !== u && r.faceVertexUvs[0].push([p[e].clone(), p[t].clone(), p[i].clone()]), void 0 !== h && r.faceVertexUvs[1].push([f[e].clone(), f[t].clone(), f[i].clone()]);\n          }\n\n          var r = this,\n              i = null !== e.index ? e.index.array : void 0,\n              o = e.attributes,\n              a = o.position.array,\n              c = void 0 !== o.normal ? o.normal.array : void 0,\n              l = void 0 !== o.color ? o.color.array : void 0,\n              u = void 0 !== o.uv ? o.uv.array : void 0,\n              h = void 0 !== o.uv2 ? o.uv2.array : void 0;\n          void 0 !== h && (this.faceVertexUvs[1] = []);\n\n          for (var d = [], p = [], f = [], m = 0, v = 0; m < a.length; m += 3, v += 2) {\n            r.vertices.push(new s(a[m], a[m + 1], a[m + 2])), void 0 !== c && d.push(new s(c[m], c[m + 1], c[m + 2])), void 0 !== l && r.colors.push(new y(l[m], l[m + 1], l[m + 2])), void 0 !== u && p.push(new n(u[v], u[v + 1])), void 0 !== h && f.push(new n(h[v], h[v + 1]));\n          }\n\n          var g = e.groups;\n          if (g.length > 0) for (var m = 0; m < g.length; m++) {\n            for (var x = g[m], _ = x.start, b = x.count, v = _, w = _ + b; v < w; v += 3) {\n              void 0 !== i ? t(i[v], i[v + 1], i[v + 2], x.materialIndex) : t(v, v + 1, v + 2, x.materialIndex);\n            }\n          } else if (void 0 !== i) for (var m = 0; m < i.length; m += 3) {\n            t(i[m], i[m + 1], i[m + 2]);\n          } else for (var m = 0; m < a.length / 3; m += 3) {\n            t(m, m + 1, m + 2);\n          }\n          return this.computeFaceNormals(), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()), null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), this;\n        },\n        center: function () {\n          var e = new s();\n          return function () {\n            return this.computeBoundingBox(), this.boundingBox.getCenter(e).negate(), this.translate(e.x, e.y, e.z), this;\n          };\n        }(),\n        normalize: function normalize() {\n          this.computeBoundingSphere();\n          var e = this.boundingSphere.center,\n              t = this.boundingSphere.radius,\n              r = 0 === t ? 1 : 1 / t,\n              i = new o();\n          return i.set(r, 0, 0, -r * e.x, 0, r, 0, -r * e.y, 0, 0, r, -r * e.z, 0, 0, 0, 1), this.applyMatrix(i), this;\n        },\n        computeFaceNormals: function computeFaceNormals() {\n          for (var e = new s(), t = new s(), r = 0, i = this.faces.length; r < i; r++) {\n            var n = this.faces[r],\n                o = this.vertices[n.a],\n                a = this.vertices[n.b],\n                c = this.vertices[n.c];\n            e.subVectors(c, a), t.subVectors(o, a), e.cross(t), e.normalize(), n.normal.copy(e);\n          }\n        },\n        computeVertexNormals: function computeVertexNormals(e) {\n          void 0 === e && (e = !0);\n          var t, r, i, n, o, a;\n\n          for (a = new Array(this.vertices.length), t = 0, r = this.vertices.length; t < r; t++) {\n            a[t] = new s();\n          }\n\n          if (e) {\n            var c,\n                l,\n                u,\n                h = new s(),\n                d = new s();\n\n            for (i = 0, n = this.faces.length; i < n; i++) {\n              o = this.faces[i], c = this.vertices[o.a], l = this.vertices[o.b], u = this.vertices[o.c], h.subVectors(u, l), d.subVectors(c, l), h.cross(d), a[o.a].add(h), a[o.b].add(h), a[o.c].add(h);\n            }\n          } else for (this.computeFaceNormals(), i = 0, n = this.faces.length; i < n; i++) {\n            o = this.faces[i], a[o.a].add(o.normal), a[o.b].add(o.normal), a[o.c].add(o.normal);\n          }\n\n          for (t = 0, r = this.vertices.length; t < r; t++) {\n            a[t].normalize();\n          }\n\n          for (i = 0, n = this.faces.length; i < n; i++) {\n            o = this.faces[i];\n            var p = o.vertexNormals;\n            3 === p.length ? (p[0].copy(a[o.a]), p[1].copy(a[o.b]), p[2].copy(a[o.c])) : (p[0] = a[o.a].clone(), p[1] = a[o.b].clone(), p[2] = a[o.c].clone());\n          }\n\n          this.faces.length > 0 && (this.normalsNeedUpdate = !0);\n        },\n        computeFlatVertexNormals: function computeFlatVertexNormals() {\n          var e, t, r;\n\n          for (this.computeFaceNormals(), e = 0, t = this.faces.length; e < t; e++) {\n            r = this.faces[e];\n            var i = r.vertexNormals;\n            3 === i.length ? (i[0].copy(r.normal), i[1].copy(r.normal), i[2].copy(r.normal)) : (i[0] = r.normal.clone(), i[1] = r.normal.clone(), i[2] = r.normal.clone());\n          }\n\n          this.faces.length > 0 && (this.normalsNeedUpdate = !0);\n        },\n        computeMorphNormals: function computeMorphNormals() {\n          var e, t, r, i, n;\n\n          for (r = 0, i = this.faces.length; r < i; r++) {\n            for (n = this.faces[r], n.__originalFaceNormal ? n.__originalFaceNormal.copy(n.normal) : n.__originalFaceNormal = n.normal.clone(), n.__originalVertexNormals || (n.__originalVertexNormals = []), e = 0, t = n.vertexNormals.length; e < t; e++) {\n              n.__originalVertexNormals[e] ? n.__originalVertexNormals[e].copy(n.vertexNormals[e]) : n.__originalVertexNormals[e] = n.vertexNormals[e].clone();\n            }\n          }\n\n          var o = new T();\n\n          for (o.faces = this.faces, e = 0, t = this.morphTargets.length; e < t; e++) {\n            if (!this.morphNormals[e]) {\n              this.morphNormals[e] = {}, this.morphNormals[e].faceNormals = [], this.morphNormals[e].vertexNormals = [];\n              var a,\n                  c,\n                  l = this.morphNormals[e].faceNormals,\n                  u = this.morphNormals[e].vertexNormals;\n\n              for (r = 0, i = this.faces.length; r < i; r++) {\n                a = new s(), c = {\n                  a: new s(),\n                  b: new s(),\n                  c: new s()\n                }, l.push(a), u.push(c);\n              }\n            }\n\n            var h = this.morphNormals[e];\n            o.vertices = this.morphTargets[e].vertices, o.computeFaceNormals(), o.computeVertexNormals();\n            var a, c;\n\n            for (r = 0, i = this.faces.length; r < i; r++) {\n              n = this.faces[r], a = h.faceNormals[r], c = h.vertexNormals[r], a.copy(n.normal), c.a.copy(n.vertexNormals[0]), c.b.copy(n.vertexNormals[1]), c.c.copy(n.vertexNormals[2]);\n            }\n          }\n\n          for (r = 0, i = this.faces.length; r < i; r++) {\n            n = this.faces[r], n.normal = n.__originalFaceNormal, n.vertexNormals = n.__originalVertexNormals;\n          }\n        },\n        computeBoundingBox: function computeBoundingBox() {\n          null === this.boundingBox && (this.boundingBox = new f()), this.boundingBox.setFromPoints(this.vertices);\n        },\n        computeBoundingSphere: function computeBoundingSphere() {\n          null === this.boundingSphere && (this.boundingSphere = new m()), this.boundingSphere.setFromPoints(this.vertices);\n        },\n        merge: function merge(e, t, r) {\n          if (!e || !e.isGeometry) return void console.error(\"THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.\", e);\n          var i,\n              n = this.vertices.length,\n              o = this.vertices,\n              a = e.vertices,\n              s = this.faces,\n              l = e.faces,\n              u = this.faceVertexUvs[0],\n              h = e.faceVertexUvs[0],\n              d = this.colors,\n              p = e.colors;\n          void 0 === r && (r = 0), void 0 !== t && (i = new c().getNormalMatrix(t));\n\n          for (var f = 0, m = a.length; f < m; f++) {\n            var v = a[f],\n                g = v.clone();\n            void 0 !== t && g.applyMatrix4(t), o.push(g);\n          }\n\n          for (var f = 0, m = p.length; f < m; f++) {\n            d.push(p[f].clone());\n          }\n\n          for (f = 0, m = l.length; f < m; f++) {\n            var y,\n                x,\n                _,\n                b = l[f],\n                w = b.vertexNormals,\n                M = b.vertexColors;\n\n            y = new S(b.a + n, b.b + n, b.c + n), y.normal.copy(b.normal), void 0 !== i && y.normal.applyMatrix3(i).normalize();\n\n            for (var E = 0, T = w.length; E < T; E++) {\n              x = w[E].clone(), void 0 !== i && x.applyMatrix3(i).normalize(), y.vertexNormals.push(x);\n            }\n\n            y.color.copy(b.color);\n\n            for (var E = 0, T = M.length; E < T; E++) {\n              _ = M[E], y.vertexColors.push(_.clone());\n            }\n\n            y.materialIndex = b.materialIndex + r, s.push(y);\n          }\n\n          for (f = 0, m = h.length; f < m; f++) {\n            var A = h[f],\n                L = [];\n\n            if (void 0 !== A) {\n              for (var E = 0, T = A.length; E < T; E++) {\n                L.push(A[E].clone());\n              }\n\n              u.push(L);\n            }\n          }\n        },\n        mergeMesh: function mergeMesh(e) {\n          if (!e || !e.isMesh) return void console.error(\"THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.\", e);\n          e.matrixAutoUpdate && e.updateMatrix(), this.merge(e.geometry, e.matrix);\n        },\n        mergeVertices: function mergeVertices() {\n          var e,\n              t,\n              r,\n              i,\n              n,\n              o,\n              a,\n              s,\n              c = {},\n              l = [],\n              u = [],\n              h = Math.pow(10, 4);\n\n          for (r = 0, i = this.vertices.length; r < i; r++) {\n            e = this.vertices[r], t = Math.round(e.x * h) + \"_\" + Math.round(e.y * h) + \"_\" + Math.round(e.z * h), void 0 === c[t] ? (c[t] = r, l.push(this.vertices[r]), u[r] = l.length - 1) : u[r] = u[c[t]];\n          }\n\n          var d = [];\n\n          for (r = 0, i = this.faces.length; r < i; r++) {\n            n = this.faces[r], n.a = u[n.a], n.b = u[n.b], n.c = u[n.c], o = [n.a, n.b, n.c];\n\n            for (var p = 0; p < 3; p++) {\n              if (o[p] === o[(p + 1) % 3]) {\n                d.push(r);\n                break;\n              }\n            }\n          }\n\n          for (r = d.length - 1; r >= 0; r--) {\n            var f = d[r];\n\n            for (this.faces.splice(f, 1), a = 0, s = this.faceVertexUvs.length; a < s; a++) {\n              this.faceVertexUvs[a].splice(f, 1);\n            }\n          }\n\n          var m = this.vertices.length - l.length;\n          return this.vertices = l, m;\n        },\n        setFromPoints: function setFromPoints(e) {\n          this.vertices = [];\n\n          for (var t = 0, r = e.length; t < r; t++) {\n            var i = e[t];\n            this.vertices.push(new s(i.x, i.y, i.z || 0));\n          }\n\n          return this;\n        },\n        sortFacesByMaterialIndex: function sortFacesByMaterialIndex() {\n          function e(e, t) {\n            return e.materialIndex - t.materialIndex;\n          }\n\n          for (var t = this.faces, r = t.length, i = 0; i < r; i++) {\n            t[i]._id = i;\n          }\n\n          t.sort(e);\n          var n,\n              o,\n              a = this.faceVertexUvs[0],\n              s = this.faceVertexUvs[1];\n          a && a.length === r && (n = []), s && s.length === r && (o = []);\n\n          for (var i = 0; i < r; i++) {\n            var c = t[i]._id;\n            n && n.push(a[c]), o && o.push(s[c]);\n          }\n\n          n && (this.faceVertexUvs[0] = n), o && (this.faceVertexUvs[1] = o);\n        },\n        toJSON: function toJSON() {\n          function e(e, t, r) {\n            return r ? e | 1 << t : e & ~(1 << t);\n          }\n\n          function t(e) {\n            var t = e.x.toString() + e.y.toString() + e.z.toString();\n            return void 0 !== d[t] ? d[t] : (d[t] = h.length / 3, h.push(e.x, e.y, e.z), d[t]);\n          }\n\n          function r(e) {\n            var t = e.r.toString() + e.g.toString() + e.b.toString();\n            return void 0 !== f[t] ? f[t] : (f[t] = p.length, p.push(e.getHex()), f[t]);\n          }\n\n          function i(e) {\n            var t = e.x.toString() + e.y.toString();\n            return void 0 !== v[t] ? v[t] : (v[t] = m.length / 2, m.push(e.x, e.y), v[t]);\n          }\n\n          var n = {\n            metadata: {\n              version: 4.5,\n              type: \"Geometry\",\n              generator: \"Geometry.toJSON\"\n            }\n          };\n\n          if (n.uuid = this.uuid, n.type = this.type, \"\" !== this.name && (n.name = this.name), void 0 !== this.parameters) {\n            var o = this.parameters;\n\n            for (var a in o) {\n              void 0 !== o[a] && (n[a] = o[a]);\n            }\n\n            return n;\n          }\n\n          for (var s = [], c = 0; c < this.vertices.length; c++) {\n            var l = this.vertices[c];\n            s.push(l.x, l.y, l.z);\n          }\n\n          for (var u = [], h = [], d = {}, p = [], f = {}, m = [], v = {}, c = 0; c < this.faces.length; c++) {\n            var g = this.faces[c],\n                y = void 0 !== this.faceVertexUvs[0][c],\n                x = g.normal.length() > 0,\n                _ = g.vertexNormals.length > 0,\n                b = 1 !== g.color.r || 1 !== g.color.g || 1 !== g.color.b,\n                w = g.vertexColors.length > 0,\n                M = 0;\n\n            if (M = e(M, 0, 0), M = e(M, 1, !0), M = e(M, 2, !1), M = e(M, 3, y), M = e(M, 4, x), M = e(M, 5, _), M = e(M, 6, b), M = e(M, 7, w), u.push(M), u.push(g.a, g.b, g.c), u.push(g.materialIndex), y) {\n              var E = this.faceVertexUvs[0][c];\n              u.push(i(E[0]), i(E[1]), i(E[2]));\n            }\n\n            if (x && u.push(t(g.normal)), _) {\n              var S = g.vertexNormals;\n              u.push(t(S[0]), t(S[1]), t(S[2]));\n            }\n\n            if (b && u.push(r(g.color)), w) {\n              var T = g.vertexColors;\n              u.push(r(T[0]), r(T[1]), r(T[2]));\n            }\n          }\n\n          return n.data = {}, n.data.vertices = s, n.data.normals = h, p.length > 0 && (n.data.colors = p), m.length > 0 && (n.data.uvs = [m]), n.data.faces = u, n;\n        },\n        clone: function clone() {\n          return new T().copy(this);\n        },\n        copy: function copy(e) {\n          var t, r, i, n, o, a;\n          this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [[]], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.name = e.name;\n          var s = e.vertices;\n\n          for (t = 0, r = s.length; t < r; t++) {\n            this.vertices.push(s[t].clone());\n          }\n\n          var c = e.colors;\n\n          for (t = 0, r = c.length; t < r; t++) {\n            this.colors.push(c[t].clone());\n          }\n\n          var l = e.faces;\n\n          for (t = 0, r = l.length; t < r; t++) {\n            this.faces.push(l[t].clone());\n          }\n\n          for (t = 0, r = e.faceVertexUvs.length; t < r; t++) {\n            var u = e.faceVertexUvs[t];\n\n            for (void 0 === this.faceVertexUvs[t] && (this.faceVertexUvs[t] = []), i = 0, n = u.length; i < n; i++) {\n              var h = u[i],\n                  d = [];\n\n              for (o = 0, a = h.length; o < a; o++) {\n                var p = h[o];\n                d.push(p.clone());\n              }\n\n              this.faceVertexUvs[t].push(d);\n            }\n          }\n\n          var f = e.morphTargets;\n\n          for (t = 0, r = f.length; t < r; t++) {\n            var m = {};\n            if (m.name = f[t].name, void 0 !== f[t].vertices) for (m.vertices = [], i = 0, n = f[t].vertices.length; i < n; i++) {\n              m.vertices.push(f[t].vertices[i].clone());\n            }\n            if (void 0 !== f[t].normals) for (m.normals = [], i = 0, n = f[t].normals.length; i < n; i++) {\n              m.normals.push(f[t].normals[i].clone());\n            }\n            this.morphTargets.push(m);\n          }\n\n          var v = e.morphNormals;\n\n          for (t = 0, r = v.length; t < r; t++) {\n            var g = {};\n            if (void 0 !== v[t].vertexNormals) for (g.vertexNormals = [], i = 0, n = v[t].vertexNormals.length; i < n; i++) {\n              var y = v[t].vertexNormals[i],\n                  x = {};\n              x.a = y.a.clone(), x.b = y.b.clone(), x.c = y.c.clone(), g.vertexNormals.push(x);\n            }\n            if (void 0 !== v[t].faceNormals) for (g.faceNormals = [], i = 0, n = v[t].faceNormals.length; i < n; i++) {\n              g.faceNormals.push(v[t].faceNormals[i].clone());\n            }\n            this.morphNormals.push(g);\n          }\n\n          var _ = e.skinWeights;\n\n          for (t = 0, r = _.length; t < r; t++) {\n            this.skinWeights.push(_[t].clone());\n          }\n\n          var b = e.skinIndices;\n\n          for (t = 0, r = b.length; t < r; t++) {\n            this.skinIndices.push(b[t].clone());\n          }\n\n          var w = e.lineDistances;\n\n          for (t = 0, r = w.length; t < r; t++) {\n            this.lineDistances.push(w[t]);\n          }\n\n          var M = e.boundingBox;\n          null !== M && (this.boundingBox = M.clone());\n          var E = e.boundingSphere;\n          return null !== E && (this.boundingSphere = E.clone()), this.elementsNeedUpdate = e.elementsNeedUpdate, this.verticesNeedUpdate = e.verticesNeedUpdate, this.uvsNeedUpdate = e.uvsNeedUpdate, this.normalsNeedUpdate = e.normalsNeedUpdate, this.colorsNeedUpdate = e.colorsNeedUpdate, this.lineDistancesNeedUpdate = e.lineDistancesNeedUpdate, this.groupsNeedUpdate = e.groupsNeedUpdate, this;\n        },\n        dispose: function dispose() {\n          this.dispatchEvent({\n            type: \"dispose\"\n          });\n        }\n      }), Object.defineProperty(A.prototype, \"needsUpdate\", {\n        set: function set(e) {\n          !0 === e && this.version++;\n        }\n      }), Object.assign(A.prototype, {\n        isBufferAttribute: !0,\n        onUploadCallback: function onUploadCallback() {},\n        setArray: function setArray(e) {\n          if (Array.isArray(e)) throw new TypeError(\"THREE.BufferAttribute: array should be a Typed Array.\");\n          return this.count = void 0 !== e ? e.length / this.itemSize : 0, this.array = e, this;\n        },\n        setDynamic: function setDynamic(e) {\n          return this.dynamic = e, this;\n        },\n        copy: function copy(e) {\n          return this.name = e.name, this.array = new e.array.constructor(e.array), this.itemSize = e.itemSize, this.count = e.count, this.normalized = e.normalized, this.dynamic = e.dynamic, this;\n        },\n        copyAt: function copyAt(e, t, r) {\n          e *= this.itemSize, r *= t.itemSize;\n\n          for (var i = 0, n = this.itemSize; i < n; i++) {\n            this.array[e + i] = t.array[r + i];\n          }\n\n          return this;\n        },\n        copyArray: function copyArray(e) {\n          return this.array.set(e), this;\n        },\n        copyColorsArray: function copyColorsArray(e) {\n          for (var t = this.array, r = 0, i = 0, n = e.length; i < n; i++) {\n            var o = e[i];\n            void 0 === o && (console.warn(\"THREE.BufferAttribute.copyColorsArray(): color is undefined\", i), o = new y()), t[r++] = o.r, t[r++] = o.g, t[r++] = o.b;\n          }\n\n          return this;\n        },\n        copyVector2sArray: function copyVector2sArray(e) {\n          for (var t = this.array, r = 0, i = 0, o = e.length; i < o; i++) {\n            var a = e[i];\n            void 0 === a && (console.warn(\"THREE.BufferAttribute.copyVector2sArray(): vector is undefined\", i), a = new n()), t[r++] = a.x, t[r++] = a.y;\n          }\n\n          return this;\n        },\n        copyVector3sArray: function copyVector3sArray(e) {\n          for (var t = this.array, r = 0, i = 0, n = e.length; i < n; i++) {\n            var o = e[i];\n            void 0 === o && (console.warn(\"THREE.BufferAttribute.copyVector3sArray(): vector is undefined\", i), o = new s()), t[r++] = o.x, t[r++] = o.y, t[r++] = o.z;\n          }\n\n          return this;\n        },\n        copyVector4sArray: function copyVector4sArray(e) {\n          for (var t = this.array, r = 0, i = 0, n = e.length; i < n; i++) {\n            var o = e[i];\n            void 0 === o && (console.warn(\"THREE.BufferAttribute.copyVector4sArray(): vector is undefined\", i), o = new u()), t[r++] = o.x, t[r++] = o.y, t[r++] = o.z, t[r++] = o.w;\n          }\n\n          return this;\n        },\n        set: function set(e, t) {\n          return void 0 === t && (t = 0), this.array.set(e, t), this;\n        },\n        getX: function getX(e) {\n          return this.array[e * this.itemSize];\n        },\n        setX: function setX(e, t) {\n          return this.array[e * this.itemSize] = t, this;\n        },\n        getY: function getY(e) {\n          return this.array[e * this.itemSize + 1];\n        },\n        setY: function setY(e, t) {\n          return this.array[e * this.itemSize + 1] = t, this;\n        },\n        getZ: function getZ(e) {\n          return this.array[e * this.itemSize + 2];\n        },\n        setZ: function setZ(e, t) {\n          return this.array[e * this.itemSize + 2] = t, this;\n        },\n        getW: function getW(e) {\n          return this.array[e * this.itemSize + 3];\n        },\n        setW: function setW(e, t) {\n          return this.array[e * this.itemSize + 3] = t, this;\n        },\n        setXY: function setXY(e, t, r) {\n          return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = r, this;\n        },\n        setXYZ: function setXYZ(e, t, r, i) {\n          return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = r, this.array[e + 2] = i, this;\n        },\n        setXYZW: function setXYZW(e, t, r, i, n) {\n          return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = r, this.array[e + 2] = i, this.array[e + 3] = n, this;\n        },\n        onUpload: function onUpload(e) {\n          return this.onUploadCallback = e, this;\n        },\n        clone: function clone() {\n          return new this.constructor(this.array, this.itemSize).copy(this);\n        }\n      }), L.prototype = Object.create(A.prototype), L.prototype.constructor = L, C.prototype = Object.create(A.prototype), C.prototype.constructor = C, R.prototype = Object.create(A.prototype), R.prototype.constructor = R, P.prototype = Object.create(A.prototype), P.prototype.constructor = P, D.prototype = Object.create(A.prototype), D.prototype.constructor = D, U.prototype = Object.create(A.prototype), U.prototype.constructor = U, I.prototype = Object.create(A.prototype), I.prototype.constructor = I, O.prototype = Object.create(A.prototype), O.prototype.constructor = O, N.prototype = Object.create(A.prototype), N.prototype.constructor = N, Object.assign(F.prototype, {\n        computeGroups: function computeGroups(e) {\n          for (var t, r = [], i = void 0, n = e.faces, o = 0; o < n.length; o++) {\n            var a = n[o];\n            a.materialIndex !== i && (i = a.materialIndex, void 0 !== t && (t.count = 3 * o - t.start, r.push(t)), t = {\n              start: 3 * o,\n              materialIndex: i\n            });\n          }\n\n          void 0 !== t && (t.count = 3 * o - t.start, r.push(t)), this.groups = r;\n        },\n        fromGeometry: function fromGeometry(e) {\n          var t,\n              r = e.faces,\n              i = e.vertices,\n              o = e.faceVertexUvs,\n              a = o[0] && o[0].length > 0,\n              s = o[1] && o[1].length > 0,\n              c = e.morphTargets,\n              l = c.length;\n\n          if (l > 0) {\n            t = [];\n\n            for (var u = 0; u < l; u++) {\n              t[u] = [];\n            }\n\n            this.morphTargets.position = t;\n          }\n\n          var h,\n              d = e.morphNormals,\n              p = d.length;\n\n          if (p > 0) {\n            h = [];\n\n            for (var u = 0; u < p; u++) {\n              h[u] = [];\n            }\n\n            this.morphTargets.normal = h;\n          }\n\n          for (var f = e.skinIndices, m = e.skinWeights, v = f.length === i.length, g = m.length === i.length, u = 0; u < r.length; u++) {\n            var y = r[u];\n            this.vertices.push(i[y.a], i[y.b], i[y.c]);\n            var x = y.vertexNormals;\n            if (3 === x.length) this.normals.push(x[0], x[1], x[2]);else {\n              var _ = y.normal;\n              this.normals.push(_, _, _);\n            }\n            var b = y.vertexColors;\n            if (3 === b.length) this.colors.push(b[0], b[1], b[2]);else {\n              var w = y.color;\n              this.colors.push(w, w, w);\n            }\n\n            if (!0 === a) {\n              var M = o[0][u];\n              void 0 !== M ? this.uvs.push(M[0], M[1], M[2]) : (console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv \", u), this.uvs.push(new n(), new n(), new n()));\n            }\n\n            if (!0 === s) {\n              var M = o[1][u];\n              void 0 !== M ? this.uvs2.push(M[0], M[1], M[2]) : (console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 \", u), this.uvs2.push(new n(), new n(), new n()));\n            }\n\n            for (var E = 0; E < l; E++) {\n              var S = c[E].vertices;\n              t[E].push(S[y.a], S[y.b], S[y.c]);\n            }\n\n            for (var E = 0; E < p; E++) {\n              var T = d[E].vertexNormals[u];\n              h[E].push(T.a, T.b, T.c);\n            }\n\n            v && this.skinIndices.push(f[y.a], f[y.b], f[y.c]), g && this.skinWeights.push(m[y.a], m[y.b], m[y.c]);\n          }\n\n          return this.computeGroups(e), this.verticesNeedUpdate = e.verticesNeedUpdate, this.normalsNeedUpdate = e.normalsNeedUpdate, this.colorsNeedUpdate = e.colorsNeedUpdate, this.uvsNeedUpdate = e.uvsNeedUpdate, this.groupsNeedUpdate = e.groupsNeedUpdate, this;\n        }\n      });\n      var qs = 1;\n      B.prototype = Object.assign(Object.create(i.prototype), {\n        constructor: B,\n        isBufferGeometry: !0,\n        getIndex: function getIndex() {\n          return this.index;\n        },\n        setIndex: function setIndex(e) {\n          Array.isArray(e) ? this.index = new (z(e) > 65535 ? I : D)(e, 1) : this.index = e;\n        },\n        addAttribute: function addAttribute(e, t) {\n          return t && t.isBufferAttribute || t && t.isInterleavedBufferAttribute ? \"index\" === e ? (console.warn(\"THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.\"), void this.setIndex(t)) : (this.attributes[e] = t, this) : (console.warn(\"THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).\"), void this.addAttribute(e, new A(arguments[1], arguments[2])));\n        },\n        getAttribute: function getAttribute(e) {\n          return this.attributes[e];\n        },\n        removeAttribute: function removeAttribute(e) {\n          return delete this.attributes[e], this;\n        },\n        addGroup: function addGroup(e, t, r) {\n          this.groups.push({\n            start: e,\n            count: t,\n            materialIndex: void 0 !== r ? r : 0\n          });\n        },\n        clearGroups: function clearGroups() {\n          this.groups = [];\n        },\n        setDrawRange: function setDrawRange(e, t) {\n          this.drawRange.start = e, this.drawRange.count = t;\n        },\n        applyMatrix: function applyMatrix(e) {\n          var t = this.attributes.position;\n          void 0 !== t && (e.applyToBufferAttribute(t), t.needsUpdate = !0);\n          var r = this.attributes.normal;\n\n          if (void 0 !== r) {\n            new c().getNormalMatrix(e).applyToBufferAttribute(r), r.needsUpdate = !0;\n          }\n\n          return null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this;\n        },\n        rotateX: function () {\n          var e = new o();\n          return function (t) {\n            return e.makeRotationX(t), this.applyMatrix(e), this;\n          };\n        }(),\n        rotateY: function () {\n          var e = new o();\n          return function (t) {\n            return e.makeRotationY(t), this.applyMatrix(e), this;\n          };\n        }(),\n        rotateZ: function () {\n          var e = new o();\n          return function (t) {\n            return e.makeRotationZ(t), this.applyMatrix(e), this;\n          };\n        }(),\n        translate: function () {\n          var e = new o();\n          return function (t, r, i) {\n            return e.makeTranslation(t, r, i), this.applyMatrix(e), this;\n          };\n        }(),\n        scale: function () {\n          var e = new o();\n          return function (t, r, i) {\n            return e.makeScale(t, r, i), this.applyMatrix(e), this;\n          };\n        }(),\n        lookAt: function () {\n          var e = new w();\n          return function (t) {\n            e.lookAt(t), e.updateMatrix(), this.applyMatrix(e.matrix);\n          };\n        }(),\n        center: function () {\n          var e = new s();\n          return function () {\n            return this.computeBoundingBox(), this.boundingBox.getCenter(e).negate(), this.translate(e.x, e.y, e.z), this;\n          };\n        }(),\n        setFromObject: function setFromObject(e) {\n          var t = e.geometry;\n\n          if (e.isPoints || e.isLine) {\n            var r = new O(3 * t.vertices.length, 3),\n                i = new O(3 * t.colors.length, 3);\n\n            if (this.addAttribute(\"position\", r.copyVector3sArray(t.vertices)), this.addAttribute(\"color\", i.copyColorsArray(t.colors)), t.lineDistances && t.lineDistances.length === t.vertices.length) {\n              var n = new O(t.lineDistances.length, 1);\n              this.addAttribute(\"lineDistance\", n.copyArray(t.lineDistances));\n            }\n\n            null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()), null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone());\n          } else e.isMesh && t && t.isGeometry && this.fromGeometry(t);\n\n          return this;\n        },\n        setFromPoints: function setFromPoints(e) {\n          for (var t = [], r = 0, i = e.length; r < i; r++) {\n            var n = e[r];\n            t.push(n.x, n.y, n.z || 0);\n          }\n\n          return this.addAttribute(\"position\", new O(t, 3)), this;\n        },\n        updateFromObject: function updateFromObject(e) {\n          var t = e.geometry;\n\n          if (e.isMesh) {\n            var r = t.__directGeometry;\n            if (!0 === t.elementsNeedUpdate && (r = void 0, t.elementsNeedUpdate = !1), void 0 === r) return this.fromGeometry(t);\n            r.verticesNeedUpdate = t.verticesNeedUpdate, r.normalsNeedUpdate = t.normalsNeedUpdate, r.colorsNeedUpdate = t.colorsNeedUpdate, r.uvsNeedUpdate = t.uvsNeedUpdate, r.groupsNeedUpdate = t.groupsNeedUpdate, t.verticesNeedUpdate = !1, t.normalsNeedUpdate = !1, t.colorsNeedUpdate = !1, t.uvsNeedUpdate = !1, t.groupsNeedUpdate = !1, t = r;\n          }\n\n          var i;\n          return !0 === t.verticesNeedUpdate && (i = this.attributes.position, void 0 !== i && (i.copyVector3sArray(t.vertices), i.needsUpdate = !0), t.verticesNeedUpdate = !1), !0 === t.normalsNeedUpdate && (i = this.attributes.normal, void 0 !== i && (i.copyVector3sArray(t.normals), i.needsUpdate = !0), t.normalsNeedUpdate = !1), !0 === t.colorsNeedUpdate && (i = this.attributes.color, void 0 !== i && (i.copyColorsArray(t.colors), i.needsUpdate = !0), t.colorsNeedUpdate = !1), t.uvsNeedUpdate && (i = this.attributes.uv, void 0 !== i && (i.copyVector2sArray(t.uvs), i.needsUpdate = !0), t.uvsNeedUpdate = !1), t.lineDistancesNeedUpdate && (i = this.attributes.lineDistance, void 0 !== i && (i.copyArray(t.lineDistances), i.needsUpdate = !0), t.lineDistancesNeedUpdate = !1), t.groupsNeedUpdate && (t.computeGroups(e.geometry), this.groups = t.groups, t.groupsNeedUpdate = !1), this;\n        },\n        fromGeometry: function fromGeometry(e) {\n          return e.__directGeometry = new F().fromGeometry(e), this.fromDirectGeometry(e.__directGeometry);\n        },\n        fromDirectGeometry: function fromDirectGeometry(e) {\n          var t = new Float32Array(3 * e.vertices.length);\n\n          if (this.addAttribute(\"position\", new A(t, 3).copyVector3sArray(e.vertices)), e.normals.length > 0) {\n            var r = new Float32Array(3 * e.normals.length);\n            this.addAttribute(\"normal\", new A(r, 3).copyVector3sArray(e.normals));\n          }\n\n          if (e.colors.length > 0) {\n            var i = new Float32Array(3 * e.colors.length);\n            this.addAttribute(\"color\", new A(i, 3).copyColorsArray(e.colors));\n          }\n\n          if (e.uvs.length > 0) {\n            var n = new Float32Array(2 * e.uvs.length);\n            this.addAttribute(\"uv\", new A(n, 2).copyVector2sArray(e.uvs));\n          }\n\n          if (e.uvs2.length > 0) {\n            var o = new Float32Array(2 * e.uvs2.length);\n            this.addAttribute(\"uv2\", new A(o, 2).copyVector2sArray(e.uvs2));\n          }\n\n          this.groups = e.groups;\n\n          for (var a in e.morphTargets) {\n            for (var s = [], c = e.morphTargets[a], l = 0, u = c.length; l < u; l++) {\n              var h = c[l],\n                  d = new O(3 * h.length, 3);\n              s.push(d.copyVector3sArray(h));\n            }\n\n            this.morphAttributes[a] = s;\n          }\n\n          if (e.skinIndices.length > 0) {\n            var p = new O(4 * e.skinIndices.length, 4);\n            this.addAttribute(\"skinIndex\", p.copyVector4sArray(e.skinIndices));\n          }\n\n          if (e.skinWeights.length > 0) {\n            var f = new O(4 * e.skinWeights.length, 4);\n            this.addAttribute(\"skinWeight\", f.copyVector4sArray(e.skinWeights));\n          }\n\n          return null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()), this;\n        },\n        computeBoundingBox: function computeBoundingBox() {\n          null === this.boundingBox && (this.boundingBox = new f());\n          var e = this.attributes.position;\n          void 0 !== e ? this.boundingBox.setFromBufferAttribute(e) : this.boundingBox.makeEmpty(), (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n        },\n        computeBoundingSphere: function () {\n          var e = new f(),\n              t = new s();\n          return function () {\n            null === this.boundingSphere && (this.boundingSphere = new m());\n            var r = this.attributes.position;\n\n            if (r) {\n              var i = this.boundingSphere.center;\n              e.setFromBufferAttribute(r), e.getCenter(i);\n\n              for (var n = 0, o = 0, a = r.count; o < a; o++) {\n                t.x = r.getX(o), t.y = r.getY(o), t.z = r.getZ(o), n = Math.max(n, i.distanceToSquared(t));\n              }\n\n              this.boundingSphere.radius = Math.sqrt(n), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n            }\n          };\n        }(),\n        computeFaceNormals: function computeFaceNormals() {},\n        computeVertexNormals: function computeVertexNormals() {\n          var e = this.index,\n              t = this.attributes,\n              r = this.groups;\n\n          if (t.position) {\n            var i = t.position.array;\n            if (void 0 === t.normal) this.addAttribute(\"normal\", new A(new Float32Array(i.length), 3));else for (var n = t.normal.array, o = 0, a = n.length; o < a; o++) {\n              n[o] = 0;\n            }\n            var c,\n                l,\n                u,\n                h = t.normal.array,\n                d = new s(),\n                p = new s(),\n                f = new s(),\n                m = new s(),\n                v = new s();\n\n            if (e) {\n              var g = e.array;\n              0 === r.length && this.addGroup(0, g.length);\n\n              for (var y = 0, x = r.length; y < x; ++y) {\n                for (var _ = r[y], b = _.start, w = _.count, o = b, a = b + w; o < a; o += 3) {\n                  c = 3 * g[o + 0], l = 3 * g[o + 1], u = 3 * g[o + 2], d.fromArray(i, c), p.fromArray(i, l), f.fromArray(i, u), m.subVectors(f, p), v.subVectors(d, p), m.cross(v), h[c] += m.x, h[c + 1] += m.y, h[c + 2] += m.z, h[l] += m.x, h[l + 1] += m.y, h[l + 2] += m.z, h[u] += m.x, h[u + 1] += m.y, h[u + 2] += m.z;\n                }\n              }\n            } else for (var o = 0, a = i.length; o < a; o += 9) {\n              d.fromArray(i, o), p.fromArray(i, o + 3), f.fromArray(i, o + 6), m.subVectors(f, p), v.subVectors(d, p), m.cross(v), h[o] = m.x, h[o + 1] = m.y, h[o + 2] = m.z, h[o + 3] = m.x, h[o + 4] = m.y, h[o + 5] = m.z, h[o + 6] = m.x, h[o + 7] = m.y, h[o + 8] = m.z;\n            }\n\n            this.normalizeNormals(), t.normal.needsUpdate = !0;\n          }\n        },\n        merge: function merge(e, t) {\n          if (!e || !e.isBufferGeometry) return void console.error(\"THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.\", e);\n          void 0 === t && (t = 0, console.warn(\"THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.\"));\n          var r = this.attributes;\n\n          for (var i in r) {\n            if (void 0 !== e.attributes[i]) for (var n = r[i], o = n.array, a = e.attributes[i], s = a.array, c = a.itemSize, l = 0, u = c * t; l < s.length; l++, u++) {\n              o[u] = s[l];\n            }\n          }\n\n          return this;\n        },\n        normalizeNormals: function () {\n          var e = new s();\n          return function () {\n            for (var t = this.attributes.normal, r = 0, i = t.count; r < i; r++) {\n              e.x = t.getX(r), e.y = t.getY(r), e.z = t.getZ(r), e.normalize(), t.setXYZ(r, e.x, e.y, e.z);\n            }\n          };\n        }(),\n        toNonIndexed: function toNonIndexed() {\n          if (null === this.index) return console.warn(\"THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.\"), this;\n          var e = new B(),\n              t = this.index.array,\n              r = this.attributes;\n\n          for (var i in r) {\n            for (var n = r[i], o = n.array, a = n.itemSize, s = new o.constructor(t.length * a), c = 0, l = 0, u = 0, h = t.length; u < h; u++) {\n              c = t[u] * a;\n\n              for (var d = 0; d < a; d++) {\n                s[l++] = o[c++];\n              }\n            }\n\n            e.addAttribute(i, new A(s, a));\n          }\n\n          for (var p = this.groups, u = 0, h = p.length; u < h; u++) {\n            var f = p[u];\n            e.addGroup(f.start, f.count, f.materialIndex);\n          }\n\n          return e;\n        },\n        toJSON: function toJSON() {\n          var e = {\n            metadata: {\n              version: 4.5,\n              type: \"BufferGeometry\",\n              generator: \"BufferGeometry.toJSON\"\n            }\n          };\n\n          if (e.uuid = this.uuid, e.type = this.type, \"\" !== this.name && (e.name = this.name), void 0 !== this.parameters) {\n            var t = this.parameters;\n\n            for (var r in t) {\n              void 0 !== t[r] && (e[r] = t[r]);\n            }\n\n            return e;\n          }\n\n          e.data = {\n            attributes: {}\n          };\n          var i = this.index;\n\n          if (null !== i) {\n            var n = Array.prototype.slice.call(i.array);\n            e.data.index = {\n              type: i.array.constructor.name,\n              array: n\n            };\n          }\n\n          var o = this.attributes;\n\n          for (var r in o) {\n            var a = o[r],\n                n = Array.prototype.slice.call(a.array);\n            e.data.attributes[r] = {\n              itemSize: a.itemSize,\n              type: a.array.constructor.name,\n              array: n,\n              normalized: a.normalized\n            };\n          }\n\n          var s = this.groups;\n          s.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(s)));\n          var c = this.boundingSphere;\n          return null !== c && (e.data.boundingSphere = {\n            center: c.center.toArray(),\n            radius: c.radius\n          }), e;\n        },\n        clone: function clone() {\n          return new B().copy(this);\n        },\n        copy: function copy(e) {\n          var t, r, i;\n          this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.name = e.name;\n          var n = e.index;\n          null !== n && this.setIndex(n.clone());\n          var o = e.attributes;\n\n          for (t in o) {\n            var a = o[t];\n            this.addAttribute(t, a.clone());\n          }\n\n          var s = e.morphAttributes;\n\n          for (t in s) {\n            var c = [],\n                l = s[t];\n\n            for (r = 0, i = l.length; r < i; r++) {\n              c.push(l[r].clone());\n            }\n\n            this.morphAttributes[t] = c;\n          }\n\n          var u = e.groups;\n\n          for (r = 0, i = u.length; r < i; r++) {\n            var h = u[r];\n            this.addGroup(h.start, h.count, h.materialIndex);\n          }\n\n          var d = e.boundingBox;\n          null !== d && (this.boundingBox = d.clone());\n          var p = e.boundingSphere;\n          return null !== p && (this.boundingSphere = p.clone()), this.drawRange.start = e.drawRange.start, this.drawRange.count = e.drawRange.count, this;\n        },\n        dispose: function dispose() {\n          this.dispatchEvent({\n            type: \"dispose\"\n          });\n        }\n      }), G.prototype = Object.create(T.prototype), G.prototype.constructor = G, H.prototype = Object.create(B.prototype), H.prototype.constructor = H, j.prototype = Object.create(T.prototype), j.prototype.constructor = j, V.prototype = Object.create(B.prototype), V.prototype.constructor = V;\n      var Ys = 0;\n      k.prototype = Object.assign(Object.create(i.prototype), {\n        constructor: k,\n        isMaterial: !0,\n        onBeforeCompile: function onBeforeCompile() {},\n        setValues: function setValues(e) {\n          if (void 0 !== e) for (var t in e) {\n            var r = e[t];\n            if (void 0 !== r) {\n              if (\"shading\" !== t) {\n                var i = this[t];\n                void 0 !== i ? i && i.isColor ? i.set(r) : i && i.isVector3 && r && r.isVector3 ? i.copy(r) : this[t] = \"overdraw\" === t ? Number(r) : r : console.warn(\"THREE.\" + this.type + \": '\" + t + \"' is not a property of this material.\");\n              } else console.warn(\"THREE.\" + this.type + \": .shading has been removed. Use the boolean .flatShading instead.\"), this.flatShading = 1 === r;\n            } else console.warn(\"THREE.Material: '\" + t + \"' parameter is undefined.\");\n          }\n        },\n        toJSON: function toJSON(e) {\n          function t(e) {\n            var t = [];\n\n            for (var r in e) {\n              var i = e[r];\n              delete i.metadata, t.push(i);\n            }\n\n            return t;\n          }\n\n          var r = void 0 === e || \"string\" == typeof e;\n          r && (e = {\n            textures: {},\n            images: {}\n          });\n          var i = {\n            metadata: {\n              version: 4.5,\n              type: \"Material\",\n              generator: \"Material.toJSON\"\n            }\n          };\n\n          if (i.uuid = this.uuid, i.type = this.type, \"\" !== this.name && (i.name = this.name), this.color && this.color.isColor && (i.color = this.color.getHex()), void 0 !== this.roughness && (i.roughness = this.roughness), void 0 !== this.metalness && (i.metalness = this.metalness), this.emissive && this.emissive.isColor && (i.emissive = this.emissive.getHex()), 1 !== this.emissiveIntensity && (i.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (i.specular = this.specular.getHex()), void 0 !== this.shininess && (i.shininess = this.shininess), void 0 !== this.clearCoat && (i.clearCoat = this.clearCoat), void 0 !== this.clearCoatRoughness && (i.clearCoatRoughness = this.clearCoatRoughness), this.map && this.map.isTexture && (i.map = this.map.toJSON(e).uuid), this.alphaMap && this.alphaMap.isTexture && (i.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap && this.lightMap.isTexture && (i.lightMap = this.lightMap.toJSON(e).uuid), this.bumpMap && this.bumpMap.isTexture && (i.bumpMap = this.bumpMap.toJSON(e).uuid, i.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (i.normalMap = this.normalMap.toJSON(e).uuid, i.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (i.displacementMap = this.displacementMap.toJSON(e).uuid, i.displacementScale = this.displacementScale, i.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (i.roughnessMap = this.roughnessMap.toJSON(e).uuid), this.metalnessMap && this.metalnessMap.isTexture && (i.metalnessMap = this.metalnessMap.toJSON(e).uuid), this.emissiveMap && this.emissiveMap.isTexture && (i.emissiveMap = this.emissiveMap.toJSON(e).uuid), this.specularMap && this.specularMap.isTexture && (i.specularMap = this.specularMap.toJSON(e).uuid), this.envMap && this.envMap.isTexture && (i.envMap = this.envMap.toJSON(e).uuid, i.reflectivity = this.reflectivity), this.gradientMap && this.gradientMap.isTexture && (i.gradientMap = this.gradientMap.toJSON(e).uuid), void 0 !== this.size && (i.size = this.size), void 0 !== this.sizeAttenuation && (i.sizeAttenuation = this.sizeAttenuation), this.blending !== Fo && (i.blending = this.blending), !0 === this.flatShading && (i.flatShading = this.flatShading), this.side !== Ro && (i.side = this.side), this.vertexColors !== Uo && (i.vertexColors = this.vertexColors), this.opacity < 1 && (i.opacity = this.opacity), !0 === this.transparent && (i.transparent = this.transparent), i.depthFunc = this.depthFunc, i.depthTest = this.depthTest, i.depthWrite = this.depthWrite, 0 !== this.rotation && (i.rotation = this.rotation), 1 !== this.linewidth && (i.linewidth = this.linewidth), void 0 !== this.dashSize && (i.dashSize = this.dashSize), void 0 !== this.gapSize && (i.gapSize = this.gapSize), void 0 !== this.scale && (i.scale = this.scale), !0 === this.dithering && (i.dithering = !0), this.alphaTest > 0 && (i.alphaTest = this.alphaTest), !0 === this.premultipliedAlpha && (i.premultipliedAlpha = this.premultipliedAlpha), !0 === this.wireframe && (i.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (i.wireframeLinewidth = this.wireframeLinewidth), \"round\" !== this.wireframeLinecap && (i.wireframeLinecap = this.wireframeLinecap), \"round\" !== this.wireframeLinejoin && (i.wireframeLinejoin = this.wireframeLinejoin), !0 === this.morphTargets && (i.morphTargets = !0), !0 === this.skinning && (i.skinning = !0), !1 === this.visible && (i.visible = !1), \"{}\" !== JSON.stringify(this.userData) && (i.userData = this.userData), r) {\n            var n = t(e.textures),\n                o = t(e.images);\n            n.length > 0 && (i.textures = n), o.length > 0 && (i.images = o);\n          }\n\n          return i;\n        },\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        },\n        copy: function copy(e) {\n          this.name = e.name, this.fog = e.fog, this.lights = e.lights, this.blending = e.blending, this.side = e.side, this.flatShading = e.flatShading, this.vertexColors = e.vertexColors, this.opacity = e.opacity, this.transparent = e.transparent, this.blendSrc = e.blendSrc, this.blendDst = e.blendDst, this.blendEquation = e.blendEquation, this.blendSrcAlpha = e.blendSrcAlpha, this.blendDstAlpha = e.blendDstAlpha, this.blendEquationAlpha = e.blendEquationAlpha, this.depthFunc = e.depthFunc, this.depthTest = e.depthTest, this.depthWrite = e.depthWrite, this.colorWrite = e.colorWrite, this.precision = e.precision, this.polygonOffset = e.polygonOffset, this.polygonOffsetFactor = e.polygonOffsetFactor, this.polygonOffsetUnits = e.polygonOffsetUnits, this.dithering = e.dithering, this.alphaTest = e.alphaTest, this.premultipliedAlpha = e.premultipliedAlpha, this.overdraw = e.overdraw, this.visible = e.visible, this.userData = JSON.parse(JSON.stringify(e.userData)), this.clipShadows = e.clipShadows, this.clipIntersection = e.clipIntersection;\n          var t = e.clippingPlanes,\n              r = null;\n\n          if (null !== t) {\n            var i = t.length;\n            r = new Array(i);\n\n            for (var n = 0; n !== i; ++n) {\n              r[n] = t[n].clone();\n            }\n          }\n\n          return this.clippingPlanes = r, this.shadowSide = e.shadowSide, this;\n        },\n        dispose: function dispose() {\n          this.dispatchEvent({\n            type: \"dispose\"\n          });\n        }\n      }), W.prototype = Object.create(k.prototype), W.prototype.constructor = W, W.prototype.isMeshBasicMaterial = !0, W.prototype.copy = function (e) {\n        return k.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this;\n      }, X.prototype = Object.create(k.prototype), X.prototype.constructor = X, X.prototype.isShaderMaterial = !0, X.prototype.copy = function (e) {\n        return k.prototype.copy.call(this, e), this.fragmentShader = e.fragmentShader, this.vertexShader = e.vertexShader, this.uniforms = Hs.clone(e.uniforms), this.defines = Object.assign({}, e.defines), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.lights = e.lights, this.clipping = e.clipping, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this.extensions = e.extensions, this;\n      }, X.prototype.toJSON = function (e) {\n        var t = k.prototype.toJSON.call(this, e);\n        return t.uniforms = this.uniforms, t.vertexShader = this.vertexShader, t.fragmentShader = this.fragmentShader, t;\n      }, Object.assign(q.prototype, {\n        set: function set(e, t) {\n          return this.origin.copy(e), this.direction.copy(t), this;\n        },\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        },\n        copy: function copy(e) {\n          return this.origin.copy(e.origin), this.direction.copy(e.direction), this;\n        },\n        at: function at(e, t) {\n          return void 0 === t && (console.warn(\"THREE.Ray: .at() target is now required\"), t = new s()), t.copy(this.direction).multiplyScalar(e).add(this.origin);\n        },\n        lookAt: function lookAt(e) {\n          return this.direction.copy(e).sub(this.origin).normalize(), this;\n        },\n        recast: function () {\n          var e = new s();\n          return function (t) {\n            return this.origin.copy(this.at(t, e)), this;\n          };\n        }(),\n        closestPointToPoint: function closestPointToPoint(e, t) {\n          void 0 === t && (console.warn(\"THREE.Ray: .closestPointToPoint() target is now required\"), t = new s()), t.subVectors(e, this.origin);\n          var r = t.dot(this.direction);\n          return r < 0 ? t.copy(this.origin) : t.copy(this.direction).multiplyScalar(r).add(this.origin);\n        },\n        distanceToPoint: function distanceToPoint(e) {\n          return Math.sqrt(this.distanceSqToPoint(e));\n        },\n        distanceSqToPoint: function () {\n          var e = new s();\n          return function (t) {\n            var r = e.subVectors(t, this.origin).dot(this.direction);\n            return r < 0 ? this.origin.distanceToSquared(t) : (e.copy(this.direction).multiplyScalar(r).add(this.origin), e.distanceToSquared(t));\n          };\n        }(),\n        distanceSqToSegment: function () {\n          var e = new s(),\n              t = new s(),\n              r = new s();\n          return function (i, n, o, a) {\n            e.copy(i).add(n).multiplyScalar(.5), t.copy(n).sub(i).normalize(), r.copy(this.origin).sub(e);\n            var s,\n                c,\n                l,\n                u,\n                h = .5 * i.distanceTo(n),\n                d = -this.direction.dot(t),\n                p = r.dot(this.direction),\n                f = -r.dot(t),\n                m = r.lengthSq(),\n                v = Math.abs(1 - d * d);\n            if (v > 0) {\n              if (s = d * f - p, c = d * p - f, u = h * v, s >= 0) {\n                if (c >= -u) {\n                  if (c <= u) {\n                    var g = 1 / v;\n                    s *= g, c *= g, l = s * (s + d * c + 2 * p) + c * (d * s + c + 2 * f) + m;\n                  } else c = h, s = Math.max(0, -(d * c + p)), l = -s * s + c * (c + 2 * f) + m;\n                } else c = -h, s = Math.max(0, -(d * c + p)), l = -s * s + c * (c + 2 * f) + m;\n              } else c <= -u ? (s = Math.max(0, -(-d * h + p)), c = s > 0 ? -h : Math.min(Math.max(-h, -f), h), l = -s * s + c * (c + 2 * f) + m) : c <= u ? (s = 0, c = Math.min(Math.max(-h, -f), h), l = c * (c + 2 * f) + m) : (s = Math.max(0, -(d * h + p)), c = s > 0 ? h : Math.min(Math.max(-h, -f), h), l = -s * s + c * (c + 2 * f) + m);\n            } else c = d > 0 ? -h : h, s = Math.max(0, -(d * c + p)), l = -s * s + c * (c + 2 * f) + m;\n            return o && o.copy(this.direction).multiplyScalar(s).add(this.origin), a && a.copy(t).multiplyScalar(c).add(e), l;\n          };\n        }(),\n        intersectSphere: function () {\n          var e = new s();\n          return function (t, r) {\n            e.subVectors(t.center, this.origin);\n            var i = e.dot(this.direction),\n                n = e.dot(e) - i * i,\n                o = t.radius * t.radius;\n            if (n > o) return null;\n            var a = Math.sqrt(o - n),\n                s = i - a,\n                c = i + a;\n            return s < 0 && c < 0 ? null : s < 0 ? this.at(c, r) : this.at(s, r);\n          };\n        }(),\n        intersectsSphere: function intersectsSphere(e) {\n          return this.distanceToPoint(e.center) <= e.radius;\n        },\n        distanceToPlane: function distanceToPlane(e) {\n          var t = e.normal.dot(this.direction);\n          if (0 === t) return 0 === e.distanceToPoint(this.origin) ? 0 : null;\n          var r = -(this.origin.dot(e.normal) + e.constant) / t;\n          return r >= 0 ? r : null;\n        },\n        intersectPlane: function intersectPlane(e, t) {\n          var r = this.distanceToPlane(e);\n          return null === r ? null : this.at(r, t);\n        },\n        intersectsPlane: function intersectsPlane(e) {\n          var t = e.distanceToPoint(this.origin);\n          return 0 === t || e.normal.dot(this.direction) * t < 0;\n        },\n        intersectBox: function intersectBox(e, t) {\n          var r,\n              i,\n              n,\n              o,\n              a,\n              s,\n              c = 1 / this.direction.x,\n              l = 1 / this.direction.y,\n              u = 1 / this.direction.z,\n              h = this.origin;\n          return c >= 0 ? (r = (e.min.x - h.x) * c, i = (e.max.x - h.x) * c) : (r = (e.max.x - h.x) * c, i = (e.min.x - h.x) * c), l >= 0 ? (n = (e.min.y - h.y) * l, o = (e.max.y - h.y) * l) : (n = (e.max.y - h.y) * l, o = (e.min.y - h.y) * l), r > o || n > i ? null : ((n > r || r !== r) && (r = n), (o < i || i !== i) && (i = o), u >= 0 ? (a = (e.min.z - h.z) * u, s = (e.max.z - h.z) * u) : (a = (e.max.z - h.z) * u, s = (e.min.z - h.z) * u), r > s || a > i ? null : ((a > r || r !== r) && (r = a), (s < i || i !== i) && (i = s), i < 0 ? null : this.at(r >= 0 ? r : i, t)));\n        },\n        intersectsBox: function () {\n          var e = new s();\n          return function (t) {\n            return null !== this.intersectBox(t, e);\n          };\n        }(),\n        intersectTriangle: function () {\n          var e = new s(),\n              t = new s(),\n              r = new s(),\n              i = new s();\n          return function (n, o, a, s, c) {\n            t.subVectors(o, n), r.subVectors(a, n), i.crossVectors(t, r);\n            var l,\n                u = this.direction.dot(i);\n\n            if (u > 0) {\n              if (s) return null;\n              l = 1;\n            } else {\n              if (!(u < 0)) return null;\n              l = -1, u = -u;\n            }\n\n            e.subVectors(this.origin, n);\n            var h = l * this.direction.dot(r.crossVectors(e, r));\n            if (h < 0) return null;\n            var d = l * this.direction.dot(t.cross(e));\n            if (d < 0) return null;\n            if (h + d > u) return null;\n            var p = -l * e.dot(i);\n            return p < 0 ? null : this.at(p / u, c);\n          };\n        }(),\n        applyMatrix4: function applyMatrix4(e) {\n          return this.origin.applyMatrix4(e), this.direction.transformDirection(e), this;\n        },\n        equals: function equals(e) {\n          return e.origin.equals(this.origin) && e.direction.equals(this.direction);\n        }\n      }), Object.assign(Y.prototype, {\n        set: function set(e, t) {\n          return this.start.copy(e), this.end.copy(t), this;\n        },\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        },\n        copy: function copy(e) {\n          return this.start.copy(e.start), this.end.copy(e.end), this;\n        },\n        getCenter: function getCenter(e) {\n          return void 0 === e && (console.warn(\"THREE.Line3: .getCenter() target is now required\"), e = new s()), e.addVectors(this.start, this.end).multiplyScalar(.5);\n        },\n        delta: function delta(e) {\n          return void 0 === e && (console.warn(\"THREE.Line3: .delta() target is now required\"), e = new s()), e.subVectors(this.end, this.start);\n        },\n        distanceSq: function distanceSq() {\n          return this.start.distanceToSquared(this.end);\n        },\n        distance: function distance() {\n          return this.start.distanceTo(this.end);\n        },\n        at: function at(e, t) {\n          return void 0 === t && (console.warn(\"THREE.Line3: .at() target is now required\"), t = new s()), this.delta(t).multiplyScalar(e).add(this.start);\n        },\n        closestPointToPointParameter: function () {\n          var e = new s(),\n              t = new s();\n          return function (r, i) {\n            e.subVectors(r, this.start), t.subVectors(this.end, this.start);\n            var n = t.dot(t),\n                o = t.dot(e),\n                a = o / n;\n            return i && (a = zs.clamp(a, 0, 1)), a;\n          };\n        }(),\n        closestPointToPoint: function closestPointToPoint(e, t, r) {\n          var i = this.closestPointToPointParameter(e, t);\n          return void 0 === r && (console.warn(\"THREE.Line3: .closestPointToPoint() target is now required\"), r = new s()), this.delta(r).multiplyScalar(i).add(this.start);\n        },\n        applyMatrix4: function applyMatrix4(e) {\n          return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;\n        },\n        equals: function equals(e) {\n          return e.start.equals(this.start) && e.end.equals(this.end);\n        }\n      }), Object.assign(Z, {\n        getNormal: function () {\n          var e = new s();\n          return function (t, r, i, n) {\n            void 0 === n && (console.warn(\"THREE.Triangle: .getNormal() target is now required\"), n = new s()), n.subVectors(i, r), e.subVectors(t, r), n.cross(e);\n            var o = n.lengthSq();\n            return o > 0 ? n.multiplyScalar(1 / Math.sqrt(o)) : n.set(0, 0, 0);\n          };\n        }(),\n        getBarycoord: function () {\n          var e = new s(),\n              t = new s(),\n              r = new s();\n          return function (i, n, o, a, c) {\n            e.subVectors(a, n), t.subVectors(o, n), r.subVectors(i, n);\n            var l = e.dot(e),\n                u = e.dot(t),\n                h = e.dot(r),\n                d = t.dot(t),\n                p = t.dot(r),\n                f = l * d - u * u;\n            if (void 0 === c && (console.warn(\"THREE.Triangle: .getBarycoord() target is now required\"), c = new s()), 0 === f) return c.set(-2, -1, -1);\n            var m = 1 / f,\n                v = (d * h - u * p) * m,\n                g = (l * p - u * h) * m;\n            return c.set(1 - v - g, g, v);\n          };\n        }(),\n        containsPoint: function () {\n          var e = new s();\n          return function (t, r, i, n) {\n            return Z.getBarycoord(t, r, i, n, e), e.x >= 0 && e.y >= 0 && e.x + e.y <= 1;\n          };\n        }()\n      }), Object.assign(Z.prototype, {\n        set: function set(e, t, r) {\n          return this.a.copy(e), this.b.copy(t), this.c.copy(r), this;\n        },\n        setFromPointsAndIndices: function setFromPointsAndIndices(e, t, r, i) {\n          return this.a.copy(e[t]), this.b.copy(e[r]), this.c.copy(e[i]), this;\n        },\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        },\n        copy: function copy(e) {\n          return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;\n        },\n        getArea: function () {\n          var e = new s(),\n              t = new s();\n          return function () {\n            return e.subVectors(this.c, this.b), t.subVectors(this.a, this.b), .5 * e.cross(t).length();\n          };\n        }(),\n        getMidpoint: function getMidpoint(e) {\n          return void 0 === e && (console.warn(\"THREE.Triangle: .getMidpoint() target is now required\"), e = new s()), e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n        },\n        getNormal: function getNormal(e) {\n          return Z.getNormal(this.a, this.b, this.c, e);\n        },\n        getPlane: function getPlane(e) {\n          return void 0 === e && (console.warn(\"THREE.Triangle: .getPlane() target is now required\"), e = new s()), e.setFromCoplanarPoints(this.a, this.b, this.c);\n        },\n        getBarycoord: function getBarycoord(e, t) {\n          return Z.getBarycoord(e, this.a, this.b, this.c, t);\n        },\n        containsPoint: function containsPoint(e) {\n          return Z.containsPoint(e, this.a, this.b, this.c);\n        },\n        intersectsBox: function intersectsBox(e) {\n          return e.intersectsTriangle(this);\n        },\n        closestPointToPoint: function () {\n          var e = new v(),\n              t = [new Y(), new Y(), new Y()],\n              r = new s(),\n              i = new s();\n          return function (n, o) {\n            void 0 === o && (console.warn(\"THREE.Triangle: .closestPointToPoint() target is now required\"), o = new s());\n            var a = 1 / 0;\n            if (e.setFromCoplanarPoints(this.a, this.b, this.c), e.projectPoint(n, r), !0 === this.containsPoint(r)) o.copy(r);else {\n              t[0].set(this.a, this.b), t[1].set(this.b, this.c), t[2].set(this.c, this.a);\n\n              for (var c = 0; c < t.length; c++) {\n                t[c].closestPointToPoint(r, !0, i);\n                var l = r.distanceToSquared(i);\n                l < a && (a = l, o.copy(i));\n              }\n            }\n            return o;\n          };\n        }(),\n        equals: function equals(e) {\n          return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);\n        }\n      }), J.prototype = Object.assign(Object.create(w.prototype), {\n        constructor: J,\n        isMesh: !0,\n        setDrawMode: function setDrawMode(e) {\n          this.drawMode = e;\n        },\n        copy: function copy(e) {\n          return w.prototype.copy.call(this, e), this.drawMode = e.drawMode, void 0 !== e.morphTargetInfluences && (this.morphTargetInfluences = e.morphTargetInfluences.slice()), void 0 !== e.morphTargetDictionary && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)), this;\n        },\n        updateMorphTargets: function updateMorphTargets() {\n          var e,\n              t,\n              r,\n              i = this.geometry;\n\n          if (i.isBufferGeometry) {\n            var n = i.morphAttributes,\n                o = Object.keys(n);\n\n            if (o.length > 0) {\n              var a = n[o[0]];\n              if (void 0 !== a) for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, e = 0, t = a.length; e < t; e++) {\n                r = a[e].name || String(e), this.morphTargetInfluences.push(0), this.morphTargetDictionary[r] = e;\n              }\n            }\n          } else {\n            var s = i.morphTargets;\n            if (void 0 !== s && s.length > 0) for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, e = 0, t = s.length; e < t; e++) {\n              r = s[e].name || String(e), this.morphTargetInfluences.push(0), this.morphTargetDictionary[r] = e;\n            }\n          }\n        },\n        raycast: function () {\n          function e(e, t, r, i, n, o, a) {\n            return Z.getBarycoord(e, t, r, i, x), n.multiplyScalar(x.x), o.multiplyScalar(x.y), a.multiplyScalar(x.z), n.add(o).add(a), n.clone();\n          }\n\n          function t(e, t, r, i, n, o, a, s) {\n            if (null === (t.side === Po ? i.intersectTriangle(a, o, n, !0, s) : i.intersectTriangle(n, o, a, t.side !== Do, s))) return null;\n            b.copy(s), b.applyMatrix4(e.matrixWorld);\n            var c = r.ray.origin.distanceTo(b);\n            return c < r.near || c > r.far ? null : {\n              distance: c,\n              point: b.clone(),\n              object: e\n            };\n          }\n\n          function r(r, i, n, o, a, s, c, d) {\n            l.fromBufferAttribute(o, s), u.fromBufferAttribute(o, c), h.fromBufferAttribute(o, d);\n            var p = t(r, r.material, i, n, l, u, h, _);\n\n            if (p) {\n              a && (v.fromBufferAttribute(a, s), g.fromBufferAttribute(a, c), y.fromBufferAttribute(a, d), p.uv = e(_, l, u, h, v, g, y));\n              var f = new S(s, c, d);\n              Z.getNormal(l, u, h, f.normal), p.face = f, p.faceIndex = s;\n            }\n\n            return p;\n          }\n\n          var i = new o(),\n              a = new q(),\n              c = new m(),\n              l = new s(),\n              u = new s(),\n              h = new s(),\n              d = new s(),\n              p = new s(),\n              f = new s(),\n              v = new n(),\n              g = new n(),\n              y = new n(),\n              x = new s(),\n              _ = new s(),\n              b = new s();\n\n          return function (n, o) {\n            var s = this.geometry,\n                m = this.material,\n                x = this.matrixWorld;\n\n            if (void 0 !== m && (null === s.boundingSphere && s.computeBoundingSphere(), c.copy(s.boundingSphere), c.applyMatrix4(x), !1 !== n.ray.intersectsSphere(c) && (i.getInverse(x), a.copy(n.ray).applyMatrix4(i), null === s.boundingBox || !1 !== a.intersectsBox(s.boundingBox)))) {\n              var b;\n\n              if (s.isBufferGeometry) {\n                var w,\n                    M,\n                    E,\n                    S,\n                    T,\n                    A = s.index,\n                    L = s.attributes.position,\n                    C = s.attributes.uv;\n                if (null !== A) for (S = 0, T = A.count; S < T; S += 3) {\n                  w = A.getX(S), M = A.getX(S + 1), E = A.getX(S + 2), (b = r(this, n, a, L, C, w, M, E)) && (b.faceIndex = Math.floor(S / 3), o.push(b));\n                } else if (void 0 !== L) for (S = 0, T = L.count; S < T; S += 3) {\n                  w = S, M = S + 1, E = S + 2, (b = r(this, n, a, L, C, w, M, E)) && o.push(b);\n                }\n              } else if (s.isGeometry) {\n                var R,\n                    P,\n                    D,\n                    U,\n                    I = Array.isArray(m),\n                    O = s.vertices,\n                    N = s.faces,\n                    F = s.faceVertexUvs[0];\n                F.length > 0 && (U = F);\n\n                for (var z = 0, B = N.length; z < B; z++) {\n                  var G = N[z],\n                      H = I ? m[G.materialIndex] : m;\n\n                  if (void 0 !== H) {\n                    if (R = O[G.a], P = O[G.b], D = O[G.c], !0 === H.morphTargets) {\n                      var j = s.morphTargets,\n                          V = this.morphTargetInfluences;\n                      l.set(0, 0, 0), u.set(0, 0, 0), h.set(0, 0, 0);\n\n                      for (var k = 0, W = j.length; k < W; k++) {\n                        var X = V[k];\n\n                        if (0 !== X) {\n                          var q = j[k].vertices;\n                          l.addScaledVector(d.subVectors(q[G.a], R), X), u.addScaledVector(p.subVectors(q[G.b], P), X), h.addScaledVector(f.subVectors(q[G.c], D), X);\n                        }\n                      }\n\n                      l.add(R), u.add(P), h.add(D), R = l, P = u, D = h;\n                    }\n\n                    if (b = t(this, H, n, a, R, P, D, _)) {\n                      if (U && U[z]) {\n                        var Y = U[z];\n                        v.copy(Y[0]), g.copy(Y[1]), y.copy(Y[2]), b.uv = e(_, R, P, D, v, g, y);\n                      }\n\n                      b.face = G, b.faceIndex = z, o.push(b);\n                    }\n                  }\n                }\n              }\n            }\n          };\n        }(),\n        clone: function clone() {\n          return new this.constructor(this.geometry, this.material).copy(this);\n        }\n      }), ce.prototype = Object.create(l.prototype), ce.prototype.constructor = ce, ce.prototype.isCubeTexture = !0, Object.defineProperty(ce.prototype, \"images\", {\n        get: function get() {\n          return this.image;\n        },\n        set: function set(e) {\n          this.image = e;\n        }\n      });\n      var Zs = new l(),\n          Js = new ce(),\n          Ks = [],\n          Qs = [],\n          $s = new Float32Array(16),\n          ec = new Float32Array(9);\n\n      Be.prototype.setValue = function (e, t) {\n        for (var r = this.seq, i = 0, n = r.length; i !== n; ++i) {\n          var o = r[i];\n          o.setValue(e, t[o.id]);\n        }\n      };\n\n      var tc = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n      je.prototype.setValue = function (e, t, r) {\n        var i = this.map[t];\n        void 0 !== i && i.setValue(e, r, this.renderer);\n      }, je.prototype.setOptional = function (e, t, r) {\n        var i = t[r];\n        void 0 !== i && this.setValue(e, r, i);\n      }, je.upload = function (e, t, r, i) {\n        for (var n = 0, o = t.length; n !== o; ++n) {\n          var a = t[n],\n              s = r[a.id];\n          !1 !== s.needsUpdate && a.setValue(e, s.value, i);\n        }\n      }, je.seqWithValue = function (e, t) {\n        for (var r = [], i = 0, n = e.length; i !== n; ++i) {\n          var o = e[i];\n          o.id in t && r.push(o);\n        }\n\n        return r;\n      };\n      var rc = 0,\n          ic = 0;\n      ft.prototype = Object.create(k.prototype), ft.prototype.constructor = ft, ft.prototype.isMeshDepthMaterial = !0, ft.prototype.copy = function (e) {\n        return k.prototype.copy.call(this, e), this.depthPacking = e.depthPacking, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this;\n      }, mt.prototype = Object.create(k.prototype), mt.prototype.constructor = mt, mt.prototype.isMeshDistanceMaterial = !0, mt.prototype.copy = function (e) {\n        return k.prototype.copy.call(this, e), this.referencePosition.copy(e.referencePosition), this.nearDistance = e.nearDistance, this.farDistance = e.farDistance, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this;\n      }, gt.prototype = Object.create(l.prototype), gt.prototype.constructor = gt, wt.prototype = Object.assign(Object.create(M.prototype), {\n        constructor: wt,\n        isPerspectiveCamera: !0,\n        copy: function copy(e, t) {\n          return M.prototype.copy.call(this, e, t), this.fov = e.fov, this.zoom = e.zoom, this.near = e.near, this.far = e.far, this.focus = e.focus, this.aspect = e.aspect, this.view = null === e.view ? null : Object.assign({}, e.view), this.filmGauge = e.filmGauge, this.filmOffset = e.filmOffset, this;\n        },\n        setFocalLength: function setFocalLength(e) {\n          var t = .5 * this.getFilmHeight() / e;\n          this.fov = 2 * zs.RAD2DEG * Math.atan(t), this.updateProjectionMatrix();\n        },\n        getFocalLength: function getFocalLength() {\n          var e = Math.tan(.5 * zs.DEG2RAD * this.fov);\n          return .5 * this.getFilmHeight() / e;\n        },\n        getEffectiveFOV: function getEffectiveFOV() {\n          return 2 * zs.RAD2DEG * Math.atan(Math.tan(.5 * zs.DEG2RAD * this.fov) / this.zoom);\n        },\n        getFilmWidth: function getFilmWidth() {\n          return this.filmGauge * Math.min(this.aspect, 1);\n        },\n        getFilmHeight: function getFilmHeight() {\n          return this.filmGauge / Math.max(this.aspect, 1);\n        },\n        setViewOffset: function setViewOffset(e, t, r, i, n, o) {\n          this.aspect = e / t, null === this.view && (this.view = {\n            enabled: !0,\n            fullWidth: 1,\n            fullHeight: 1,\n            offsetX: 0,\n            offsetY: 0,\n            width: 1,\n            height: 1\n          }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = r, this.view.offsetY = i, this.view.width = n, this.view.height = o, this.updateProjectionMatrix();\n        },\n        clearViewOffset: function clearViewOffset() {\n          null !== this.view && (this.view.enabled = !1), this.updateProjectionMatrix();\n        },\n        updateProjectionMatrix: function updateProjectionMatrix() {\n          var e = this.near,\n              t = e * Math.tan(.5 * zs.DEG2RAD * this.fov) / this.zoom,\n              r = 2 * t,\n              i = this.aspect * r,\n              n = -.5 * i,\n              o = this.view;\n\n          if (null !== this.view && this.view.enabled) {\n            var a = o.fullWidth,\n                s = o.fullHeight;\n            n += o.offsetX * i / a, t -= o.offsetY * r / s, i *= o.width / a, r *= o.height / s;\n          }\n\n          var c = this.filmOffset;\n          0 !== c && (n += e * c / this.getFilmWidth()), this.projectionMatrix.makePerspective(n, n + i, t, t - r, e, this.far);\n        },\n        toJSON: function toJSON(e) {\n          var t = w.prototype.toJSON.call(this, e);\n          return t.object.fov = this.fov, t.object.zoom = this.zoom, t.object.near = this.near, t.object.far = this.far, t.object.focus = this.focus, t.object.aspect = this.aspect, null !== this.view && (t.object.view = Object.assign({}, this.view)), t.object.filmGauge = this.filmGauge, t.object.filmOffset = this.filmOffset, t;\n        }\n      }), Mt.prototype = Object.assign(Object.create(wt.prototype), {\n        constructor: Mt,\n        isArrayCamera: !0\n      }), Tt.prototype.isFogExp2 = !0, Tt.prototype.clone = function () {\n        return new Tt(this.color.getHex(), this.density);\n      }, Tt.prototype.toJSON = function () {\n        return {\n          type: \"FogExp2\",\n          color: this.color.getHex(),\n          density: this.density\n        };\n      }, At.prototype.isFog = !0, At.prototype.clone = function () {\n        return new At(this.color.getHex(), this.near, this.far);\n      }, At.prototype.toJSON = function () {\n        return {\n          type: \"Fog\",\n          color: this.color.getHex(),\n          near: this.near,\n          far: this.far\n        };\n      }, Lt.prototype = Object.assign(Object.create(w.prototype), {\n        constructor: Lt,\n        copy: function copy(e, t) {\n          return w.prototype.copy.call(this, e, t), null !== e.background && (this.background = e.background.clone()), null !== e.fog && (this.fog = e.fog.clone()), null !== e.overrideMaterial && (this.overrideMaterial = e.overrideMaterial.clone()), this.autoUpdate = e.autoUpdate, this.matrixAutoUpdate = e.matrixAutoUpdate, this;\n        },\n        toJSON: function toJSON(e) {\n          var t = w.prototype.toJSON.call(this, e);\n          return null !== this.background && (t.object.background = this.background.toJSON(e)), null !== this.fog && (t.object.fog = this.fog.toJSON()), t;\n        }\n      }), Ct.prototype = Object.create(k.prototype), Ct.prototype.constructor = Ct, Ct.prototype.isSpriteMaterial = !0, Ct.prototype.copy = function (e) {\n        return k.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.rotation = e.rotation, this;\n      }, Rt.prototype = Object.assign(Object.create(w.prototype), {\n        constructor: Rt,\n        isSprite: !0,\n        raycast: function () {\n          var e = new s(),\n              t = new s(),\n              r = new s();\n          return function (i, n) {\n            t.setFromMatrixPosition(this.matrixWorld), i.ray.closestPointToPoint(t, e), r.setFromMatrixScale(this.matrixWorld);\n            var o = r.x * r.y / 4;\n\n            if (!(t.distanceToSquared(e) > o)) {\n              var a = i.ray.origin.distanceTo(e);\n              a < i.near || a > i.far || n.push({\n                distance: a,\n                point: e.clone(),\n                face: null,\n                object: this\n              });\n            }\n          };\n        }(),\n        clone: function clone() {\n          return new this.constructor(this.material).copy(this);\n        },\n        copy: function copy(e) {\n          return w.prototype.copy.call(this, e), void 0 !== e.center && this.center.copy(e.center), this;\n        }\n      }), Pt.prototype = Object.assign(Object.create(w.prototype), {\n        constructor: Pt,\n        copy: function copy(e) {\n          w.prototype.copy.call(this, e, !1);\n\n          for (var t = e.levels, r = 0, i = t.length; r < i; r++) {\n            var n = t[r];\n            this.addLevel(n.object.clone(), n.distance);\n          }\n\n          return this;\n        },\n        addLevel: function addLevel(e, t) {\n          void 0 === t && (t = 0), t = Math.abs(t);\n\n          for (var r = this.levels, i = 0; i < r.length && !(t < r[i].distance); i++) {\n            ;\n          }\n\n          r.splice(i, 0, {\n            distance: t,\n            object: e\n          }), this.add(e);\n        },\n        getObjectForDistance: function getObjectForDistance(e) {\n          for (var t = this.levels, r = 1, i = t.length; r < i && !(e < t[r].distance); r++) {\n            ;\n          }\n\n          return t[r - 1].object;\n        },\n        raycast: function () {\n          var e = new s();\n          return function (t, r) {\n            e.setFromMatrixPosition(this.matrixWorld);\n            var i = t.ray.origin.distanceTo(e);\n            this.getObjectForDistance(i).raycast(t, r);\n          };\n        }(),\n        update: function () {\n          var e = new s(),\n              t = new s();\n          return function (r) {\n            var i = this.levels;\n\n            if (i.length > 1) {\n              e.setFromMatrixPosition(r.matrixWorld), t.setFromMatrixPosition(this.matrixWorld);\n              var n = e.distanceTo(t);\n              i[0].object.visible = !0;\n\n              for (var o = 1, a = i.length; o < a && n >= i[o].distance; o++) {\n                i[o - 1].object.visible = !1, i[o].object.visible = !0;\n              }\n\n              for (; o < a; o++) {\n                i[o].object.visible = !1;\n              }\n            }\n          };\n        }(),\n        toJSON: function toJSON(e) {\n          var t = w.prototype.toJSON.call(this, e);\n          t.object.levels = [];\n\n          for (var r = this.levels, i = 0, n = r.length; i < n; i++) {\n            var o = r[i];\n            t.object.levels.push({\n              object: o.object.uuid,\n              distance: o.distance\n            });\n          }\n\n          return t;\n        }\n      }), Object.assign(Dt.prototype, {\n        calculateInverses: function calculateInverses() {\n          this.boneInverses = [];\n\n          for (var e = 0, t = this.bones.length; e < t; e++) {\n            var r = new o();\n            this.bones[e] && r.getInverse(this.bones[e].matrixWorld), this.boneInverses.push(r);\n          }\n        },\n        pose: function pose() {\n          var e, t, r;\n\n          for (t = 0, r = this.bones.length; t < r; t++) {\n            (e = this.bones[t]) && e.matrixWorld.getInverse(this.boneInverses[t]);\n          }\n\n          for (t = 0, r = this.bones.length; t < r; t++) {\n            (e = this.bones[t]) && (e.parent && e.parent.isBone ? (e.matrix.getInverse(e.parent.matrixWorld), e.matrix.multiply(e.matrixWorld)) : e.matrix.copy(e.matrixWorld), e.matrix.decompose(e.position, e.quaternion, e.scale));\n          }\n        },\n        update: function () {\n          var e = new o(),\n              t = new o();\n          return function () {\n            for (var r = this.bones, i = this.boneInverses, n = this.boneMatrices, o = this.boneTexture, a = 0, s = r.length; a < s; a++) {\n              var c = r[a] ? r[a].matrixWorld : t;\n              e.multiplyMatrices(c, i[a]), e.toArray(n, 16 * a);\n            }\n\n            void 0 !== o && (o.needsUpdate = !0);\n          };\n        }(),\n        clone: function clone() {\n          return new Dt(this.bones, this.boneInverses);\n        },\n        getBoneByName: function getBoneByName(e) {\n          for (var t = 0, r = this.bones.length; t < r; t++) {\n            var i = this.bones[t];\n            if (i.name === e) return i;\n          }\n        }\n      }), Ut.prototype = Object.assign(Object.create(w.prototype), {\n        constructor: Ut,\n        isBone: !0\n      }), It.prototype = Object.assign(Object.create(J.prototype), {\n        constructor: It,\n        isSkinnedMesh: !0,\n        initBones: function initBones() {\n          var e,\n              t,\n              r,\n              i,\n              n = [];\n\n          if (this.geometry && void 0 !== this.geometry.bones) {\n            for (r = 0, i = this.geometry.bones.length; r < i; r++) {\n              t = this.geometry.bones[r], e = new Ut(), n.push(e), e.name = t.name, e.position.fromArray(t.pos), e.quaternion.fromArray(t.rotq), void 0 !== t.scl && e.scale.fromArray(t.scl);\n            }\n\n            for (r = 0, i = this.geometry.bones.length; r < i; r++) {\n              t = this.geometry.bones[r], -1 !== t.parent && null !== t.parent && void 0 !== n[t.parent] ? n[t.parent].add(n[r]) : this.add(n[r]);\n            }\n          }\n\n          return this.updateMatrixWorld(!0), n;\n        },\n        bind: function bind(e, t) {\n          this.skeleton = e, void 0 === t && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), t = this.matrixWorld), this.bindMatrix.copy(t), this.bindMatrixInverse.getInverse(t);\n        },\n        pose: function pose() {\n          this.skeleton.pose();\n        },\n        normalizeSkinWeights: function normalizeSkinWeights() {\n          var e, t;\n          if (this.geometry && this.geometry.isGeometry) for (t = 0; t < this.geometry.skinWeights.length; t++) {\n            var r = this.geometry.skinWeights[t];\n            e = 1 / r.manhattanLength(), e !== 1 / 0 ? r.multiplyScalar(e) : r.set(1, 0, 0, 0);\n          } else if (this.geometry && this.geometry.isBufferGeometry) {\n            var i = new u(),\n                n = this.geometry.attributes.skinWeight;\n\n            for (t = 0; t < n.count; t++) {\n              i.x = n.getX(t), i.y = n.getY(t), i.z = n.getZ(t), i.w = n.getW(t), e = 1 / i.manhattanLength(), e !== 1 / 0 ? i.multiplyScalar(e) : i.set(1, 0, 0, 0), n.setXYZW(t, i.x, i.y, i.z, i.w);\n            }\n          }\n        },\n        updateMatrixWorld: function updateMatrixWorld(e) {\n          J.prototype.updateMatrixWorld.call(this, e), \"attached\" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : \"detached\" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn(\"THREE.SkinnedMesh: Unrecognized bindMode: \" + this.bindMode);\n        },\n        clone: function clone() {\n          return new this.constructor(this.geometry, this.material).copy(this);\n        }\n      }), Ot.prototype = Object.create(k.prototype), Ot.prototype.constructor = Ot, Ot.prototype.isLineBasicMaterial = !0, Ot.prototype.copy = function (e) {\n        return k.prototype.copy.call(this, e), this.color.copy(e.color), this.linewidth = e.linewidth, this.linecap = e.linecap, this.linejoin = e.linejoin, this;\n      }, Nt.prototype = Object.assign(Object.create(w.prototype), {\n        constructor: Nt,\n        isLine: !0,\n        computeLineDistances: function () {\n          var e = new s(),\n              t = new s();\n          return function () {\n            var r = this.geometry;\n            if (r.isBufferGeometry) {\n              if (null === r.index) {\n                for (var i = r.attributes.position, n = [0], o = 1, a = i.count; o < a; o++) {\n                  e.fromBufferAttribute(i, o - 1), t.fromBufferAttribute(i, o), n[o] = n[o - 1], n[o] += e.distanceTo(t);\n                }\n\n                r.addAttribute(\"lineDistance\", new O(n, 1));\n              } else console.warn(\"THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.\");\n            } else if (r.isGeometry) {\n              var s = r.vertices,\n                  n = r.lineDistances;\n              n[0] = 0;\n\n              for (var o = 1, a = s.length; o < a; o++) {\n                n[o] = n[o - 1], n[o] += s[o - 1].distanceTo(s[o]);\n              }\n            }\n            return this;\n          };\n        }(),\n        raycast: function () {\n          var e = new o(),\n              t = new q(),\n              r = new m();\n          return function (i, n) {\n            var o = i.linePrecision,\n                a = o * o,\n                c = this.geometry,\n                l = this.matrixWorld;\n\n            if (null === c.boundingSphere && c.computeBoundingSphere(), r.copy(c.boundingSphere), r.applyMatrix4(l), !1 !== i.ray.intersectsSphere(r)) {\n              e.getInverse(l), t.copy(i.ray).applyMatrix4(e);\n              var u = new s(),\n                  h = new s(),\n                  d = new s(),\n                  p = new s(),\n                  f = this && this.isLineSegments ? 2 : 1;\n\n              if (c.isBufferGeometry) {\n                var m = c.index,\n                    v = c.attributes,\n                    g = v.position.array;\n                if (null !== m) for (var y = m.array, x = 0, _ = y.length - 1; x < _; x += f) {\n                  var b = y[x],\n                      w = y[x + 1];\n                  u.fromArray(g, 3 * b), h.fromArray(g, 3 * w);\n                  var M = t.distanceSqToSegment(u, h, p, d);\n\n                  if (!(M > a)) {\n                    p.applyMatrix4(this.matrixWorld);\n                    var E = i.ray.origin.distanceTo(p);\n                    E < i.near || E > i.far || n.push({\n                      distance: E,\n                      point: d.clone().applyMatrix4(this.matrixWorld),\n                      index: x,\n                      face: null,\n                      faceIndex: null,\n                      object: this\n                    });\n                  }\n                } else for (var x = 0, _ = g.length / 3 - 1; x < _; x += f) {\n                  u.fromArray(g, 3 * x), h.fromArray(g, 3 * x + 3);\n                  var M = t.distanceSqToSegment(u, h, p, d);\n\n                  if (!(M > a)) {\n                    p.applyMatrix4(this.matrixWorld);\n                    var E = i.ray.origin.distanceTo(p);\n                    E < i.near || E > i.far || n.push({\n                      distance: E,\n                      point: d.clone().applyMatrix4(this.matrixWorld),\n                      index: x,\n                      face: null,\n                      faceIndex: null,\n                      object: this\n                    });\n                  }\n                }\n              } else if (c.isGeometry) for (var S = c.vertices, T = S.length, x = 0; x < T - 1; x += f) {\n                var M = t.distanceSqToSegment(S[x], S[x + 1], p, d);\n\n                if (!(M > a)) {\n                  p.applyMatrix4(this.matrixWorld);\n                  var E = i.ray.origin.distanceTo(p);\n                  E < i.near || E > i.far || n.push({\n                    distance: E,\n                    point: d.clone().applyMatrix4(this.matrixWorld),\n                    index: x,\n                    face: null,\n                    faceIndex: null,\n                    object: this\n                  });\n                }\n              }\n            }\n          };\n        }(),\n        clone: function clone() {\n          return new this.constructor(this.geometry, this.material).copy(this);\n        }\n      }), Ft.prototype = Object.assign(Object.create(Nt.prototype), {\n        constructor: Ft,\n        isLineSegments: !0,\n        computeLineDistances: function () {\n          var e = new s(),\n              t = new s();\n          return function () {\n            var r = this.geometry;\n            if (r.isBufferGeometry) {\n              if (null === r.index) {\n                for (var i = r.attributes.position, n = [], o = 0, a = i.count; o < a; o += 2) {\n                  e.fromBufferAttribute(i, o), t.fromBufferAttribute(i, o + 1), n[o] = 0 === o ? 0 : n[o - 1], n[o + 1] = n[o] + e.distanceTo(t);\n                }\n\n                r.addAttribute(\"lineDistance\", new O(n, 1));\n              } else console.warn(\"THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.\");\n            } else if (r.isGeometry) for (var s = r.vertices, n = r.lineDistances, o = 0, a = s.length; o < a; o += 2) {\n              e.copy(s[o]), t.copy(s[o + 1]), n[o] = 0 === o ? 0 : n[o - 1], n[o + 1] = n[o] + e.distanceTo(t);\n            }\n            return this;\n          };\n        }()\n      }), zt.prototype = Object.assign(Object.create(Nt.prototype), {\n        constructor: zt,\n        isLineLoop: !0\n      }), Bt.prototype = Object.create(k.prototype), Bt.prototype.constructor = Bt, Bt.prototype.isPointsMaterial = !0, Bt.prototype.copy = function (e) {\n        return k.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.size = e.size, this.sizeAttenuation = e.sizeAttenuation, this;\n      }, Gt.prototype = Object.assign(Object.create(w.prototype), {\n        constructor: Gt,\n        isPoints: !0,\n        raycast: function () {\n          var e = new o(),\n              t = new q(),\n              r = new m();\n          return function (i, n) {\n            function o(e, r) {\n              var o = t.distanceSqToPoint(e);\n\n              if (o < d) {\n                t.closestPointToPoint(e, f), f.applyMatrix4(l);\n                var s = i.ray.origin.distanceTo(f);\n                if (s < i.near || s > i.far) return;\n                n.push({\n                  distance: s,\n                  distanceToRay: Math.sqrt(o),\n                  point: f.clone(),\n                  index: r,\n                  face: null,\n                  object: a\n                });\n              }\n            }\n\n            var a = this,\n                c = this.geometry,\n                l = this.matrixWorld,\n                u = i.params.Points.threshold;\n\n            if (null === c.boundingSphere && c.computeBoundingSphere(), r.copy(c.boundingSphere), r.applyMatrix4(l), r.radius += u, !1 !== i.ray.intersectsSphere(r)) {\n              e.getInverse(l), t.copy(i.ray).applyMatrix4(e);\n              var h = u / ((this.scale.x + this.scale.y + this.scale.z) / 3),\n                  d = h * h,\n                  p = new s(),\n                  f = new s();\n\n              if (c.isBufferGeometry) {\n                var m = c.index,\n                    v = c.attributes,\n                    g = v.position.array;\n                if (null !== m) for (var y = m.array, x = 0, _ = y.length; x < _; x++) {\n                  var b = y[x];\n                  p.fromArray(g, 3 * b), o(p, b);\n                } else for (var x = 0, w = g.length / 3; x < w; x++) {\n                  p.fromArray(g, 3 * x), o(p, x);\n                }\n              } else for (var M = c.vertices, x = 0, w = M.length; x < w; x++) {\n                o(M[x], x);\n              }\n            }\n          };\n        }(),\n        clone: function clone() {\n          return new this.constructor(this.geometry, this.material).copy(this);\n        }\n      }), Ht.prototype = Object.assign(Object.create(w.prototype), {\n        constructor: Ht,\n        isGroup: !0\n      }), jt.prototype = Object.assign(Object.create(l.prototype), {\n        constructor: jt,\n        isVideoTexture: !0,\n        update: function update() {\n          var e = this.image;\n          e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = !0);\n        }\n      }), Vt.prototype = Object.create(l.prototype), Vt.prototype.constructor = Vt, Vt.prototype.isCompressedTexture = !0, kt.prototype = Object.create(l.prototype), kt.prototype.constructor = kt, kt.prototype.isDepthTexture = !0, Wt.prototype = Object.create(B.prototype), Wt.prototype.constructor = Wt, Xt.prototype = Object.create(T.prototype), Xt.prototype.constructor = Xt, qt.prototype = Object.create(B.prototype), qt.prototype.constructor = qt, Yt.prototype = Object.create(T.prototype), Yt.prototype.constructor = Yt, Zt.prototype = Object.create(B.prototype), Zt.prototype.constructor = Zt, Jt.prototype = Object.create(T.prototype), Jt.prototype.constructor = Jt, Kt.prototype = Object.create(Zt.prototype), Kt.prototype.constructor = Kt, Qt.prototype = Object.create(T.prototype), Qt.prototype.constructor = Qt, $t.prototype = Object.create(Zt.prototype), $t.prototype.constructor = $t, er.prototype = Object.create(T.prototype), er.prototype.constructor = er, tr.prototype = Object.create(Zt.prototype), tr.prototype.constructor = tr, rr.prototype = Object.create(T.prototype), rr.prototype.constructor = rr, ir.prototype = Object.create(Zt.prototype), ir.prototype.constructor = ir, nr.prototype = Object.create(T.prototype), nr.prototype.constructor = nr, or.prototype = Object.create(B.prototype), or.prototype.constructor = or, ar.prototype = Object.create(T.prototype), ar.prototype.constructor = ar, sr.prototype = Object.create(B.prototype), sr.prototype.constructor = sr, cr.prototype = Object.create(T.prototype), cr.prototype.constructor = cr, lr.prototype = Object.create(B.prototype), lr.prototype.constructor = lr;\n      var nc = {\n        triangulate: function triangulate(e, t, r) {\n          r = r || 2;\n          var i = t && t.length,\n              n = i ? t[0] * r : e.length,\n              o = ur(e, 0, n, r, !0),\n              a = [];\n          if (!o) return a;\n          var s, c, l, u, h, d, p;\n\n          if (i && (o = gr(e, t, o, r)), e.length > 80 * r) {\n            s = l = e[0], c = u = e[1];\n\n            for (var f = r; f < n; f += r) {\n              h = e[f], d = e[f + 1], h < s && (s = h), d < c && (c = d), h > l && (l = h), d > u && (u = d);\n            }\n\n            p = Math.max(l - s, u - c), p = 0 !== p ? 1 / p : 0;\n          }\n\n          return dr(o, a, r, s, c, p), a;\n        }\n      },\n          oc = {\n        area: function area(e) {\n          for (var t = e.length, r = 0, i = t - 1, n = 0; n < t; i = n++) {\n            r += e[i].x * e[n].y - e[n].x * e[i].y;\n          }\n\n          return .5 * r;\n        },\n        isClockWise: function isClockWise(e) {\n          return oc.area(e) < 0;\n        },\n        triangulateShape: function triangulateShape(e, t) {\n          var r = [],\n              i = [],\n              n = [];\n          zr(e), Br(r, e);\n          var o = e.length;\n          t.forEach(zr);\n\n          for (var a = 0; a < t.length; a++) {\n            i.push(o), o += t[a].length, Br(r, t[a]);\n          }\n\n          for (var s = nc.triangulate(r, i), a = 0; a < s.length; a += 3) {\n            n.push(s.slice(a, a + 3));\n          }\n\n          return n;\n        }\n      };\n      Gr.prototype = Object.create(T.prototype), Gr.prototype.constructor = Gr, Hr.prototype = Object.create(B.prototype), Hr.prototype.constructor = Hr;\n      var ac = {\n        generateTopUV: function generateTopUV(e, t, r, i, o) {\n          var a = t[3 * r],\n              s = t[3 * r + 1],\n              c = t[3 * i],\n              l = t[3 * i + 1],\n              u = t[3 * o],\n              h = t[3 * o + 1];\n          return [new n(a, s), new n(c, l), new n(u, h)];\n        },\n        generateSideWallUV: function generateSideWallUV(e, t, r, i, o, a) {\n          var s = t[3 * r],\n              c = t[3 * r + 1],\n              l = t[3 * r + 2],\n              u = t[3 * i],\n              h = t[3 * i + 1],\n              d = t[3 * i + 2],\n              p = t[3 * o],\n              f = t[3 * o + 1],\n              m = t[3 * o + 2],\n              v = t[3 * a],\n              g = t[3 * a + 1],\n              y = t[3 * a + 2];\n          return Math.abs(c - h) < .01 ? [new n(s, 1 - l), new n(u, 1 - d), new n(p, 1 - m), new n(v, 1 - y)] : [new n(c, 1 - l), new n(h, 1 - d), new n(f, 1 - m), new n(g, 1 - y)];\n        }\n      };\n      jr.prototype = Object.create(T.prototype), jr.prototype.constructor = jr, Vr.prototype = Object.create(Hr.prototype), Vr.prototype.constructor = Vr, kr.prototype = Object.create(T.prototype), kr.prototype.constructor = kr, Wr.prototype = Object.create(B.prototype), Wr.prototype.constructor = Wr, Xr.prototype = Object.create(T.prototype), Xr.prototype.constructor = Xr, qr.prototype = Object.create(B.prototype), qr.prototype.constructor = qr, Yr.prototype = Object.create(T.prototype), Yr.prototype.constructor = Yr, Zr.prototype = Object.create(B.prototype), Zr.prototype.constructor = Zr, Jr.prototype = Object.create(T.prototype), Jr.prototype.constructor = Jr, Jr.prototype.toJSON = function () {\n        var e = T.prototype.toJSON.call(this);\n        return Qr(this.parameters.shapes, e);\n      }, Kr.prototype = Object.create(B.prototype), Kr.prototype.constructor = Kr, Kr.prototype.toJSON = function () {\n        var e = B.prototype.toJSON.call(this);\n        return Qr(this.parameters.shapes, e);\n      }, $r.prototype = Object.create(B.prototype), $r.prototype.constructor = $r, ei.prototype = Object.create(T.prototype), ei.prototype.constructor = ei, ti.prototype = Object.create(B.prototype), ti.prototype.constructor = ti, ri.prototype = Object.create(ei.prototype), ri.prototype.constructor = ri, ii.prototype = Object.create(ti.prototype), ii.prototype.constructor = ii, ni.prototype = Object.create(T.prototype), ni.prototype.constructor = ni, oi.prototype = Object.create(B.prototype), oi.prototype.constructor = oi;\n      var sc = Object.freeze({\n        WireframeGeometry: Wt,\n        ParametricGeometry: Xt,\n        ParametricBufferGeometry: qt,\n        TetrahedronGeometry: Jt,\n        TetrahedronBufferGeometry: Kt,\n        OctahedronGeometry: Qt,\n        OctahedronBufferGeometry: $t,\n        IcosahedronGeometry: er,\n        IcosahedronBufferGeometry: tr,\n        DodecahedronGeometry: rr,\n        DodecahedronBufferGeometry: ir,\n        PolyhedronGeometry: Yt,\n        PolyhedronBufferGeometry: Zt,\n        TubeGeometry: nr,\n        TubeBufferGeometry: or,\n        TorusKnotGeometry: ar,\n        TorusKnotBufferGeometry: sr,\n        TorusGeometry: cr,\n        TorusBufferGeometry: lr,\n        TextGeometry: jr,\n        TextBufferGeometry: Vr,\n        SphereGeometry: kr,\n        SphereBufferGeometry: Wr,\n        RingGeometry: Xr,\n        RingBufferGeometry: qr,\n        PlaneGeometry: j,\n        PlaneBufferGeometry: V,\n        LatheGeometry: Yr,\n        LatheBufferGeometry: Zr,\n        ShapeGeometry: Jr,\n        ShapeBufferGeometry: Kr,\n        ExtrudeGeometry: Gr,\n        ExtrudeBufferGeometry: Hr,\n        EdgesGeometry: $r,\n        ConeGeometry: ri,\n        ConeBufferGeometry: ii,\n        CylinderGeometry: ei,\n        CylinderBufferGeometry: ti,\n        CircleGeometry: ni,\n        CircleBufferGeometry: oi,\n        BoxGeometry: G,\n        BoxBufferGeometry: H\n      });\n      ai.prototype = Object.create(k.prototype), ai.prototype.constructor = ai, ai.prototype.isShadowMaterial = !0, ai.prototype.copy = function (e) {\n        return k.prototype.copy.call(this, e), this.color.copy(e.color), this;\n      }, si.prototype = Object.create(X.prototype), si.prototype.constructor = si, si.prototype.isRawShaderMaterial = !0, ci.prototype = Object.create(k.prototype), ci.prototype.constructor = ci, ci.prototype.isMeshStandardMaterial = !0, ci.prototype.copy = function (e) {\n        return k.prototype.copy.call(this, e), this.defines = {\n          STANDARD: \"\"\n        }, this.color.copy(e.color), this.roughness = e.roughness, this.metalness = e.metalness, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.roughnessMap = e.roughnessMap, this.metalnessMap = e.metalnessMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapIntensity = e.envMapIntensity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this;\n      }, li.prototype = Object.create(ci.prototype), li.prototype.constructor = li, li.prototype.isMeshPhysicalMaterial = !0, li.prototype.copy = function (e) {\n        return ci.prototype.copy.call(this, e), this.defines = {\n          PHYSICAL: \"\"\n        }, this.reflectivity = e.reflectivity, this.clearCoat = e.clearCoat, this.clearCoatRoughness = e.clearCoatRoughness, this;\n      }, ui.prototype = Object.create(k.prototype), ui.prototype.constructor = ui, ui.prototype.isMeshPhongMaterial = !0, ui.prototype.copy = function (e) {\n        return k.prototype.copy.call(this, e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this;\n      }, hi.prototype = Object.create(ui.prototype), hi.prototype.constructor = hi, hi.prototype.isMeshToonMaterial = !0, hi.prototype.copy = function (e) {\n        return ui.prototype.copy.call(this, e), this.gradientMap = e.gradientMap, this;\n      }, di.prototype = Object.create(k.prototype), di.prototype.constructor = di, di.prototype.isMeshNormalMaterial = !0, di.prototype.copy = function (e) {\n        return k.prototype.copy.call(this, e), this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this;\n      }, pi.prototype = Object.create(k.prototype), pi.prototype.constructor = pi, pi.prototype.isMeshLambertMaterial = !0, pi.prototype.copy = function (e) {\n        return k.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this;\n      }, fi.prototype = Object.create(Ot.prototype), fi.prototype.constructor = fi, fi.prototype.isLineDashedMaterial = !0, fi.prototype.copy = function (e) {\n        return Ot.prototype.copy.call(this, e), this.scale = e.scale, this.dashSize = e.dashSize, this.gapSize = e.gapSize, this;\n      };\n      var cc = Object.freeze({\n        ShadowMaterial: ai,\n        SpriteMaterial: Ct,\n        RawShaderMaterial: si,\n        ShaderMaterial: X,\n        PointsMaterial: Bt,\n        MeshPhysicalMaterial: li,\n        MeshStandardMaterial: ci,\n        MeshPhongMaterial: ui,\n        MeshToonMaterial: hi,\n        MeshNormalMaterial: di,\n        MeshLambertMaterial: pi,\n        MeshDepthMaterial: ft,\n        MeshDistanceMaterial: mt,\n        MeshBasicMaterial: W,\n        LineDashedMaterial: fi,\n        LineBasicMaterial: Ot,\n        Material: k\n      }),\n          lc = {\n        enabled: !1,\n        files: {},\n        add: function add(e, t) {\n          !1 !== this.enabled && (this.files[e] = t);\n        },\n        get: function get(e) {\n          if (!1 !== this.enabled) return this.files[e];\n        },\n        remove: function remove(e) {\n          delete this.files[e];\n        },\n        clear: function clear() {\n          this.files = {};\n        }\n      },\n          uc = new mi(),\n          hc = {};\n      Object.assign(vi.prototype, {\n        load: function load(e, t, r, i) {\n          void 0 === e && (e = \"\"), void 0 !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);\n          var n = this,\n              o = lc.get(e);\n          if (void 0 !== o) return n.manager.itemStart(e), setTimeout(function () {\n            t && t(o), n.manager.itemEnd(e);\n          }, 0), o;\n          if (void 0 !== hc[e]) return void hc[e].push({\n            onLoad: t,\n            onProgress: r,\n            onError: i\n          });\n          var a = /^data:(.*?)(;base64)?,(.*)$/,\n              s = e.match(a);\n\n          if (s) {\n            var c = s[1],\n                l = !!s[2],\n                u = s[3];\n            u = window.decodeURIComponent(u), l && (u = window.atob(u));\n\n            try {\n              var h,\n                  d = (this.responseType || \"\").toLowerCase();\n\n              switch (d) {\n                case \"arraybuffer\":\n                case \"blob\":\n                  for (var p = new Uint8Array(u.length), f = 0; f < u.length; f++) {\n                    p[f] = u.charCodeAt(f);\n                  }\n\n                  h = \"blob\" === d ? new Blob([p.buffer], {\n                    type: c\n                  }) : p.buffer;\n                  break;\n\n                case \"document\":\n                  var m = new DOMParser();\n                  h = m.parseFromString(u, c);\n                  break;\n\n                case \"json\":\n                  h = JSON.parse(u);\n                  break;\n\n                default:\n                  h = u;\n              }\n\n              window.setTimeout(function () {\n                t && t(h), n.manager.itemEnd(e);\n              }, 0);\n            } catch (t) {\n              window.setTimeout(function () {\n                i && i(t), n.manager.itemEnd(e), n.manager.itemError(e);\n              }, 0);\n            }\n          } else {\n            hc[e] = [], hc[e].push({\n              onLoad: t,\n              onProgress: r,\n              onError: i\n            });\n            var v = new XMLHttpRequest();\n            v.open(\"GET\", e, !0), v.addEventListener(\"load\", function (t) {\n              var r = this.response;\n              lc.add(e, r);\n              var i = hc[e];\n\n              if (delete hc[e], 200 === this.status) {\n                for (var o = 0, a = i.length; o < a; o++) {\n                  var s = i[o];\n                  s.onLoad && s.onLoad(r);\n                }\n\n                n.manager.itemEnd(e);\n              } else if (0 === this.status) {\n                console.warn(\"THREE.FileLoader: HTTP Status 0 received.\");\n\n                for (var o = 0, a = i.length; o < a; o++) {\n                  var s = i[o];\n                  s.onLoad && s.onLoad(r);\n                }\n\n                n.manager.itemEnd(e);\n              } else {\n                for (var o = 0, a = i.length; o < a; o++) {\n                  var s = i[o];\n                  s.onError && s.onError(t);\n                }\n\n                n.manager.itemEnd(e), n.manager.itemError(e);\n              }\n            }, !1), v.addEventListener(\"progress\", function (t) {\n              for (var r = hc[e], i = 0, n = r.length; i < n; i++) {\n                var o = r[i];\n                o.onProgress && o.onProgress(t);\n              }\n            }, !1), v.addEventListener(\"error\", function (t) {\n              var r = hc[e];\n              delete hc[e];\n\n              for (var i = 0, o = r.length; i < o; i++) {\n                var a = r[i];\n                a.onError && a.onError(t);\n              }\n\n              n.manager.itemEnd(e), n.manager.itemError(e);\n            }, !1), void 0 !== this.responseType && (v.responseType = this.responseType), void 0 !== this.withCredentials && (v.withCredentials = this.withCredentials), v.overrideMimeType && v.overrideMimeType(void 0 !== this.mimeType ? this.mimeType : \"text/plain\");\n\n            for (var g in this.requestHeader) {\n              v.setRequestHeader(g, this.requestHeader[g]);\n            }\n\n            v.send(null);\n          }\n\n          return n.manager.itemStart(e), v;\n        },\n        setPath: function setPath(e) {\n          return this.path = e, this;\n        },\n        setResponseType: function setResponseType(e) {\n          return this.responseType = e, this;\n        },\n        setWithCredentials: function setWithCredentials(e) {\n          return this.withCredentials = e, this;\n        },\n        setMimeType: function setMimeType(e) {\n          return this.mimeType = e, this;\n        },\n        setRequestHeader: function setRequestHeader(e) {\n          return this.requestHeader = e, this;\n        }\n      }), Object.assign(gi.prototype, {\n        load: function load(e, t, r, i) {\n          var n = this,\n              o = [],\n              a = new Vt();\n          a.image = o;\n          var s = new vi(this.manager);\n          if (s.setPath(this.path), s.setResponseType(\"arraybuffer\"), Array.isArray(e)) for (var c = 0, l = 0, u = e.length; l < u; ++l) {\n            !function (l) {\n              s.load(e[l], function (e) {\n                var r = n._parser(e, !0);\n\n                o[l] = {\n                  width: r.width,\n                  height: r.height,\n                  format: r.format,\n                  mipmaps: r.mipmaps\n                }, 6 === (c += 1) && (1 === r.mipmapCount && (a.minFilter = Ua), a.format = r.format, a.needsUpdate = !0, t && t(a));\n              }, r, i);\n            }(l);\n          } else s.load(e, function (e) {\n            var r = n._parser(e, !0);\n\n            if (r.isCubemap) for (var i = r.mipmaps.length / r.mipmapCount, s = 0; s < i; s++) {\n              o[s] = {\n                mipmaps: []\n              };\n\n              for (var c = 0; c < r.mipmapCount; c++) {\n                o[s].mipmaps.push(r.mipmaps[s * r.mipmapCount + c]), o[s].format = r.format, o[s].width = r.width, o[s].height = r.height;\n              }\n            } else a.image.width = r.width, a.image.height = r.height, a.mipmaps = r.mipmaps;\n            1 === r.mipmapCount && (a.minFilter = Ua), a.format = r.format, a.needsUpdate = !0, t && t(a);\n          }, r, i);\n          return a;\n        },\n        setPath: function setPath(e) {\n          return this.path = e, this;\n        }\n      }), Object.assign(yi.prototype, {\n        load: function load(e, t, r, i) {\n          var n = this,\n              o = new p(),\n              a = new vi(this.manager);\n          return a.setResponseType(\"arraybuffer\"), a.load(e, function (e) {\n            var r = n._parser(e);\n\n            r && (void 0 !== r.image ? o.image = r.image : void 0 !== r.data && (o.image.width = r.width, o.image.height = r.height, o.image.data = r.data), o.wrapS = void 0 !== r.wrapS ? r.wrapS : La, o.wrapT = void 0 !== r.wrapT ? r.wrapT : La, o.magFilter = void 0 !== r.magFilter ? r.magFilter : Ua, o.minFilter = void 0 !== r.minFilter ? r.minFilter : Oa, o.anisotropy = void 0 !== r.anisotropy ? r.anisotropy : 1, void 0 !== r.format && (o.format = r.format), void 0 !== r.type && (o.type = r.type), void 0 !== r.mipmaps && (o.mipmaps = r.mipmaps), 1 === r.mipmapCount && (o.minFilter = Ua), o.needsUpdate = !0, t && t(o, r));\n          }, r, i), o;\n        }\n      }), Object.assign(xi.prototype, {\n        crossOrigin: \"Anonymous\",\n        load: function load(e, t, r, i) {\n          void 0 === e && (e = \"\"), void 0 !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);\n          var n = this,\n              o = lc.get(e);\n          if (void 0 !== o) return n.manager.itemStart(e), setTimeout(function () {\n            t && t(o), n.manager.itemEnd(e);\n          }, 0), o;\n          var a = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"img\");\n          return a.addEventListener(\"load\", function () {\n            lc.add(e, this), t && t(this), n.manager.itemEnd(e);\n          }, !1), a.addEventListener(\"error\", function (t) {\n            i && i(t), n.manager.itemEnd(e), n.manager.itemError(e);\n          }, !1), \"data:\" !== e.substr(0, 5) && void 0 !== this.crossOrigin && (a.crossOrigin = this.crossOrigin), n.manager.itemStart(e), a.src = e, a;\n        },\n        setCrossOrigin: function setCrossOrigin(e) {\n          return this.crossOrigin = e, this;\n        },\n        setPath: function setPath(e) {\n          return this.path = e, this;\n        }\n      }), Object.assign(_i.prototype, {\n        crossOrigin: \"Anonymous\",\n        load: function load(e, t, r, i) {\n          var n = new ce(),\n              o = new xi(this.manager);\n          o.setCrossOrigin(this.crossOrigin), o.setPath(this.path);\n\n          for (var a = 0, s = 0; s < e.length; ++s) {\n            !function (r) {\n              o.load(e[r], function (e) {\n                n.images[r] = e, 6 == ++a && (n.needsUpdate = !0, t && t(n));\n              }, void 0, i);\n            }(s);\n          }\n\n          return n;\n        },\n        setCrossOrigin: function setCrossOrigin(e) {\n          return this.crossOrigin = e, this;\n        },\n        setPath: function setPath(e) {\n          return this.path = e, this;\n        }\n      }), Object.assign(bi.prototype, {\n        crossOrigin: \"Anonymous\",\n        load: function load(e, t, r, i) {\n          var n = new l(),\n              o = new xi(this.manager);\n          return o.setCrossOrigin(this.crossOrigin), o.setPath(this.path), o.load(e, function (r) {\n            n.image = r;\n            var i = e.search(/\\.(jpg|jpeg)$/) > 0 || 0 === e.search(/^data\\:image\\/jpeg/);\n            n.format = i ? Za : Ja, n.needsUpdate = !0, void 0 !== t && t(n);\n          }, r, i), n;\n        },\n        setCrossOrigin: function setCrossOrigin(e) {\n          return this.crossOrigin = e, this;\n        },\n        setPath: function setPath(e) {\n          return this.path = e, this;\n        }\n      }), Object.assign(wi.prototype, {\n        getPoint: function getPoint() {\n          return console.warn(\"THREE.Curve: .getPoint() not implemented.\"), null;\n        },\n        getPointAt: function getPointAt(e, t) {\n          var r = this.getUtoTmapping(e);\n          return this.getPoint(r, t);\n        },\n        getPoints: function getPoints(e) {\n          void 0 === e && (e = 5);\n\n          for (var t = [], r = 0; r <= e; r++) {\n            t.push(this.getPoint(r / e));\n          }\n\n          return t;\n        },\n        getSpacedPoints: function getSpacedPoints(e) {\n          void 0 === e && (e = 5);\n\n          for (var t = [], r = 0; r <= e; r++) {\n            t.push(this.getPointAt(r / e));\n          }\n\n          return t;\n        },\n        getLength: function getLength() {\n          var e = this.getLengths();\n          return e[e.length - 1];\n        },\n        getLengths: function getLengths(e) {\n          if (void 0 === e && (e = this.arcLengthDivisions), this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate) return this.cacheArcLengths;\n          this.needsUpdate = !1;\n          var t,\n              r,\n              i = [],\n              n = this.getPoint(0),\n              o = 0;\n\n          for (i.push(0), r = 1; r <= e; r++) {\n            t = this.getPoint(r / e), o += t.distanceTo(n), i.push(o), n = t;\n          }\n\n          return this.cacheArcLengths = i, i;\n        },\n        updateArcLengths: function updateArcLengths() {\n          this.needsUpdate = !0, this.getLengths();\n        },\n        getUtoTmapping: function getUtoTmapping(e, t) {\n          var r,\n              i = this.getLengths(),\n              n = 0,\n              o = i.length;\n          r = t || e * i[o - 1];\n\n          for (var a, s = 0, c = o - 1; s <= c;) {\n            if (n = Math.floor(s + (c - s) / 2), (a = i[n] - r) < 0) s = n + 1;else {\n              if (!(a > 0)) {\n                c = n;\n                break;\n              }\n\n              c = n - 1;\n            }\n          }\n\n          if (n = c, i[n] === r) return n / (o - 1);\n          var l = i[n];\n          return (n + (r - l) / (i[n + 1] - l)) / (o - 1);\n        },\n        getTangent: function getTangent(e) {\n          var t = e - 1e-4,\n              r = e + 1e-4;\n          t < 0 && (t = 0), r > 1 && (r = 1);\n          var i = this.getPoint(t);\n          return this.getPoint(r).clone().sub(i).normalize();\n        },\n        getTangentAt: function getTangentAt(e) {\n          var t = this.getUtoTmapping(e);\n          return this.getTangent(t);\n        },\n        computeFrenetFrames: function computeFrenetFrames(e, t) {\n          var r,\n              i,\n              n,\n              a = new s(),\n              c = [],\n              l = [],\n              u = [],\n              h = new s(),\n              d = new o();\n\n          for (r = 0; r <= e; r++) {\n            i = r / e, c[r] = this.getTangentAt(i), c[r].normalize();\n          }\n\n          l[0] = new s(), u[0] = new s();\n          var p = Number.MAX_VALUE,\n              f = Math.abs(c[0].x),\n              m = Math.abs(c[0].y),\n              v = Math.abs(c[0].z);\n\n          for (f <= p && (p = f, a.set(1, 0, 0)), m <= p && (p = m, a.set(0, 1, 0)), v <= p && a.set(0, 0, 1), h.crossVectors(c[0], a).normalize(), l[0].crossVectors(c[0], h), u[0].crossVectors(c[0], l[0]), r = 1; r <= e; r++) {\n            l[r] = l[r - 1].clone(), u[r] = u[r - 1].clone(), h.crossVectors(c[r - 1], c[r]), h.length() > Number.EPSILON && (h.normalize(), n = Math.acos(zs.clamp(c[r - 1].dot(c[r]), -1, 1)), l[r].applyMatrix4(d.makeRotationAxis(h, n))), u[r].crossVectors(c[r], l[r]);\n          }\n\n          if (!0 === t) for (n = Math.acos(zs.clamp(l[0].dot(l[e]), -1, 1)), n /= e, c[0].dot(h.crossVectors(l[0], l[e])) > 0 && (n = -n), r = 1; r <= e; r++) {\n            l[r].applyMatrix4(d.makeRotationAxis(c[r], n * r)), u[r].crossVectors(c[r], l[r]);\n          }\n          return {\n            tangents: c,\n            normals: l,\n            binormals: u\n          };\n        },\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        },\n        copy: function copy(e) {\n          return this.arcLengthDivisions = e.arcLengthDivisions, this;\n        },\n        toJSON: function toJSON() {\n          var e = {\n            metadata: {\n              version: 4.5,\n              type: \"Curve\",\n              generator: \"Curve.toJSON\"\n            }\n          };\n          return e.arcLengthDivisions = this.arcLengthDivisions, e.type = this.type, e;\n        },\n        fromJSON: function fromJSON(e) {\n          return this.arcLengthDivisions = e.arcLengthDivisions, this;\n        }\n      }), Mi.prototype = Object.create(wi.prototype), Mi.prototype.constructor = Mi, Mi.prototype.isEllipseCurve = !0, Mi.prototype.getPoint = function (e, t) {\n        for (var r = t || new n(), i = 2 * Math.PI, o = this.aEndAngle - this.aStartAngle, a = Math.abs(o) < Number.EPSILON; o < 0;) {\n          o += i;\n        }\n\n        for (; o > i;) {\n          o -= i;\n        }\n\n        o < Number.EPSILON && (o = a ? 0 : i), !0 !== this.aClockwise || a || (o === i ? o = -i : o -= i);\n        var s = this.aStartAngle + e * o,\n            c = this.aX + this.xRadius * Math.cos(s),\n            l = this.aY + this.yRadius * Math.sin(s);\n\n        if (0 !== this.aRotation) {\n          var u = Math.cos(this.aRotation),\n              h = Math.sin(this.aRotation),\n              d = c - this.aX,\n              p = l - this.aY;\n          c = d * u - p * h + this.aX, l = d * h + p * u + this.aY;\n        }\n\n        return r.set(c, l);\n      }, Mi.prototype.copy = function (e) {\n        return wi.prototype.copy.call(this, e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;\n      }, Mi.prototype.toJSON = function () {\n        var e = wi.prototype.toJSON.call(this);\n        return e.aX = this.aX, e.aY = this.aY, e.xRadius = this.xRadius, e.yRadius = this.yRadius, e.aStartAngle = this.aStartAngle, e.aEndAngle = this.aEndAngle, e.aClockwise = this.aClockwise, e.aRotation = this.aRotation, e;\n      }, Mi.prototype.fromJSON = function (e) {\n        return wi.prototype.fromJSON.call(this, e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;\n      }, Ei.prototype = Object.create(Mi.prototype), Ei.prototype.constructor = Ei, Ei.prototype.isArcCurve = !0;\n      var dc = new s(),\n          pc = new Si(),\n          fc = new Si(),\n          mc = new Si();\n      Ti.prototype = Object.create(wi.prototype), Ti.prototype.constructor = Ti, Ti.prototype.isCatmullRomCurve3 = !0, Ti.prototype.getPoint = function (e, t) {\n        var r = t || new s(),\n            i = this.points,\n            n = i.length,\n            o = (n - (this.closed ? 0 : 1)) * e,\n            a = Math.floor(o),\n            c = o - a;\n        this.closed ? a += a > 0 ? 0 : (Math.floor(Math.abs(a) / n) + 1) * n : 0 === c && a === n - 1 && (a = n - 2, c = 1);\n        var l, u, h, d;\n\n        if (this.closed || a > 0 ? l = i[(a - 1) % n] : (dc.subVectors(i[0], i[1]).add(i[0]), l = dc), u = i[a % n], h = i[(a + 1) % n], this.closed || a + 2 < n ? d = i[(a + 2) % n] : (dc.subVectors(i[n - 1], i[n - 2]).add(i[n - 1]), d = dc), \"centripetal\" === this.curveType || \"chordal\" === this.curveType) {\n          var p = \"chordal\" === this.curveType ? .5 : .25,\n              f = Math.pow(l.distanceToSquared(u), p),\n              m = Math.pow(u.distanceToSquared(h), p),\n              v = Math.pow(h.distanceToSquared(d), p);\n          m < 1e-4 && (m = 1), f < 1e-4 && (f = m), v < 1e-4 && (v = m), pc.initNonuniformCatmullRom(l.x, u.x, h.x, d.x, f, m, v), fc.initNonuniformCatmullRom(l.y, u.y, h.y, d.y, f, m, v), mc.initNonuniformCatmullRom(l.z, u.z, h.z, d.z, f, m, v);\n        } else \"catmullrom\" === this.curveType && (pc.initCatmullRom(l.x, u.x, h.x, d.x, this.tension), fc.initCatmullRom(l.y, u.y, h.y, d.y, this.tension), mc.initCatmullRom(l.z, u.z, h.z, d.z, this.tension));\n\n        return r.set(pc.calc(c), fc.calc(c), mc.calc(c)), r;\n      }, Ti.prototype.copy = function (e) {\n        wi.prototype.copy.call(this, e), this.points = [];\n\n        for (var t = 0, r = e.points.length; t < r; t++) {\n          var i = e.points[t];\n          this.points.push(i.clone());\n        }\n\n        return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;\n      }, Ti.prototype.toJSON = function () {\n        var e = wi.prototype.toJSON.call(this);\n        e.points = [];\n\n        for (var t = 0, r = this.points.length; t < r; t++) {\n          var i = this.points[t];\n          e.points.push(i.toArray());\n        }\n\n        return e.closed = this.closed, e.curveType = this.curveType, e.tension = this.tension, e;\n      }, Ti.prototype.fromJSON = function (e) {\n        wi.prototype.fromJSON.call(this, e), this.points = [];\n\n        for (var t = 0, r = e.points.length; t < r; t++) {\n          var i = e.points[t];\n          this.points.push(new s().fromArray(i));\n        }\n\n        return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;\n      }, Fi.prototype = Object.create(wi.prototype), Fi.prototype.constructor = Fi, Fi.prototype.isCubicBezierCurve = !0, Fi.prototype.getPoint = function (e, t) {\n        var r = t || new n(),\n            i = this.v0,\n            o = this.v1,\n            a = this.v2,\n            s = this.v3;\n        return r.set(Ni(e, i.x, o.x, a.x, s.x), Ni(e, i.y, o.y, a.y, s.y)), r;\n      }, Fi.prototype.copy = function (e) {\n        return wi.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;\n      }, Fi.prototype.toJSON = function () {\n        var e = wi.prototype.toJSON.call(this);\n        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;\n      }, Fi.prototype.fromJSON = function (e) {\n        return wi.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;\n      }, zi.prototype = Object.create(wi.prototype), zi.prototype.constructor = zi, zi.prototype.isCubicBezierCurve3 = !0, zi.prototype.getPoint = function (e, t) {\n        var r = t || new s(),\n            i = this.v0,\n            n = this.v1,\n            o = this.v2,\n            a = this.v3;\n        return r.set(Ni(e, i.x, n.x, o.x, a.x), Ni(e, i.y, n.y, o.y, a.y), Ni(e, i.z, n.z, o.z, a.z)), r;\n      }, zi.prototype.copy = function (e) {\n        return wi.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;\n      }, zi.prototype.toJSON = function () {\n        var e = wi.prototype.toJSON.call(this);\n        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;\n      }, zi.prototype.fromJSON = function (e) {\n        return wi.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;\n      }, Bi.prototype = Object.create(wi.prototype), Bi.prototype.constructor = Bi, Bi.prototype.isLineCurve = !0, Bi.prototype.getPoint = function (e, t) {\n        var r = t || new n();\n        return 1 === e ? r.copy(this.v2) : (r.copy(this.v2).sub(this.v1), r.multiplyScalar(e).add(this.v1)), r;\n      }, Bi.prototype.getPointAt = function (e, t) {\n        return this.getPoint(e, t);\n      }, Bi.prototype.getTangent = function () {\n        return this.v2.clone().sub(this.v1).normalize();\n      }, Bi.prototype.copy = function (e) {\n        return wi.prototype.copy.call(this, e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;\n      }, Bi.prototype.toJSON = function () {\n        var e = wi.prototype.toJSON.call(this);\n        return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;\n      }, Bi.prototype.fromJSON = function (e) {\n        return wi.prototype.fromJSON.call(this, e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;\n      }, Gi.prototype = Object.create(wi.prototype), Gi.prototype.constructor = Gi, Gi.prototype.isLineCurve3 = !0, Gi.prototype.getPoint = function (e, t) {\n        var r = t || new s();\n        return 1 === e ? r.copy(this.v2) : (r.copy(this.v2).sub(this.v1), r.multiplyScalar(e).add(this.v1)), r;\n      }, Gi.prototype.getPointAt = function (e, t) {\n        return this.getPoint(e, t);\n      }, Gi.prototype.copy = function (e) {\n        return wi.prototype.copy.call(this, e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;\n      }, Gi.prototype.toJSON = function () {\n        var e = wi.prototype.toJSON.call(this);\n        return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;\n      }, Gi.prototype.fromJSON = function (e) {\n        return wi.prototype.fromJSON.call(this, e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;\n      }, Hi.prototype = Object.create(wi.prototype), Hi.prototype.constructor = Hi, Hi.prototype.isQuadraticBezierCurve = !0, Hi.prototype.getPoint = function (e, t) {\n        var r = t || new n(),\n            i = this.v0,\n            o = this.v1,\n            a = this.v2;\n        return r.set(Pi(e, i.x, o.x, a.x), Pi(e, i.y, o.y, a.y)), r;\n      }, Hi.prototype.copy = function (e) {\n        return wi.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;\n      }, Hi.prototype.toJSON = function () {\n        var e = wi.prototype.toJSON.call(this);\n        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;\n      }, Hi.prototype.fromJSON = function (e) {\n        return wi.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;\n      }, ji.prototype = Object.create(wi.prototype), ji.prototype.constructor = ji, ji.prototype.isQuadraticBezierCurve3 = !0, ji.prototype.getPoint = function (e, t) {\n        var r = t || new s(),\n            i = this.v0,\n            n = this.v1,\n            o = this.v2;\n        return r.set(Pi(e, i.x, n.x, o.x), Pi(e, i.y, n.y, o.y), Pi(e, i.z, n.z, o.z)), r;\n      }, ji.prototype.copy = function (e) {\n        return wi.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;\n      }, ji.prototype.toJSON = function () {\n        var e = wi.prototype.toJSON.call(this);\n        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;\n      }, ji.prototype.fromJSON = function (e) {\n        return wi.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;\n      }, Vi.prototype = Object.create(wi.prototype), Vi.prototype.constructor = Vi, Vi.prototype.isSplineCurve = !0, Vi.prototype.getPoint = function (e, t) {\n        var r = t || new n(),\n            i = this.points,\n            o = (i.length - 1) * e,\n            a = Math.floor(o),\n            s = o - a,\n            c = i[0 === a ? a : a - 1],\n            l = i[a],\n            u = i[a > i.length - 2 ? i.length - 1 : a + 1],\n            h = i[a > i.length - 3 ? i.length - 1 : a + 2];\n        return r.set(Ai(s, c.x, l.x, u.x, h.x), Ai(s, c.y, l.y, u.y, h.y)), r;\n      }, Vi.prototype.copy = function (e) {\n        wi.prototype.copy.call(this, e), this.points = [];\n\n        for (var t = 0, r = e.points.length; t < r; t++) {\n          var i = e.points[t];\n          this.points.push(i.clone());\n        }\n\n        return this;\n      }, Vi.prototype.toJSON = function () {\n        var e = wi.prototype.toJSON.call(this);\n        e.points = [];\n\n        for (var t = 0, r = this.points.length; t < r; t++) {\n          var i = this.points[t];\n          e.points.push(i.toArray());\n        }\n\n        return e;\n      }, Vi.prototype.fromJSON = function (e) {\n        wi.prototype.fromJSON.call(this, e), this.points = [];\n\n        for (var t = 0, r = e.points.length; t < r; t++) {\n          var i = e.points[t];\n          this.points.push(new n().fromArray(i));\n        }\n\n        return this;\n      };\n      var vc = Object.freeze({\n        ArcCurve: Ei,\n        CatmullRomCurve3: Ti,\n        CubicBezierCurve: Fi,\n        CubicBezierCurve3: zi,\n        EllipseCurve: Mi,\n        LineCurve: Bi,\n        LineCurve3: Gi,\n        QuadraticBezierCurve: Hi,\n        QuadraticBezierCurve3: ji,\n        SplineCurve: Vi\n      });\n      ki.prototype = Object.assign(Object.create(wi.prototype), {\n        constructor: ki,\n        add: function add(e) {\n          this.curves.push(e);\n        },\n        closePath: function closePath() {\n          var e = this.curves[0].getPoint(0),\n              t = this.curves[this.curves.length - 1].getPoint(1);\n          e.equals(t) || this.curves.push(new Bi(t, e));\n        },\n        getPoint: function getPoint(e) {\n          for (var t = e * this.getLength(), r = this.getCurveLengths(), i = 0; i < r.length;) {\n            if (r[i] >= t) {\n              var n = r[i] - t,\n                  o = this.curves[i],\n                  a = o.getLength(),\n                  s = 0 === a ? 0 : 1 - n / a;\n              return o.getPointAt(s);\n            }\n\n            i++;\n          }\n\n          return null;\n        },\n        getLength: function getLength() {\n          var e = this.getCurveLengths();\n          return e[e.length - 1];\n        },\n        updateArcLengths: function updateArcLengths() {\n          this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths();\n        },\n        getCurveLengths: function getCurveLengths() {\n          if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;\n\n          for (var e = [], t = 0, r = 0, i = this.curves.length; r < i; r++) {\n            t += this.curves[r].getLength(), e.push(t);\n          }\n\n          return this.cacheLengths = e, e;\n        },\n        getSpacedPoints: function getSpacedPoints(e) {\n          void 0 === e && (e = 40);\n\n          for (var t = [], r = 0; r <= e; r++) {\n            t.push(this.getPoint(r / e));\n          }\n\n          return this.autoClose && t.push(t[0]), t;\n        },\n        getPoints: function getPoints(e) {\n          e = e || 12;\n\n          for (var t, r = [], i = 0, n = this.curves; i < n.length; i++) {\n            for (var o = n[i], a = o && o.isEllipseCurve ? 2 * e : o && o.isLineCurve ? 1 : o && o.isSplineCurve ? e * o.points.length : e, s = o.getPoints(a), c = 0; c < s.length; c++) {\n              var l = s[c];\n              t && t.equals(l) || (r.push(l), t = l);\n            }\n          }\n\n          return this.autoClose && r.length > 1 && !r[r.length - 1].equals(r[0]) && r.push(r[0]), r;\n        },\n        copy: function copy(e) {\n          wi.prototype.copy.call(this, e), this.curves = [];\n\n          for (var t = 0, r = e.curves.length; t < r; t++) {\n            var i = e.curves[t];\n            this.curves.push(i.clone());\n          }\n\n          return this.autoClose = e.autoClose, this;\n        },\n        toJSON: function toJSON() {\n          var e = wi.prototype.toJSON.call(this);\n          e.autoClose = this.autoClose, e.curves = [];\n\n          for (var t = 0, r = this.curves.length; t < r; t++) {\n            var i = this.curves[t];\n            e.curves.push(i.toJSON());\n          }\n\n          return e;\n        },\n        fromJSON: function fromJSON(e) {\n          wi.prototype.fromJSON.call(this, e), this.autoClose = e.autoClose, this.curves = [];\n\n          for (var t = 0, r = e.curves.length; t < r; t++) {\n            var i = e.curves[t];\n            this.curves.push(new vc[i.type]().fromJSON(i));\n          }\n\n          return this;\n        }\n      }), Wi.prototype = Object.assign(Object.create(ki.prototype), {\n        constructor: Wi,\n        setFromPoints: function setFromPoints(e) {\n          this.moveTo(e[0].x, e[0].y);\n\n          for (var t = 1, r = e.length; t < r; t++) {\n            this.lineTo(e[t].x, e[t].y);\n          }\n        },\n        moveTo: function moveTo(e, t) {\n          this.currentPoint.set(e, t);\n        },\n        lineTo: function lineTo(e, t) {\n          var r = new Bi(this.currentPoint.clone(), new n(e, t));\n          this.curves.push(r), this.currentPoint.set(e, t);\n        },\n        quadraticCurveTo: function quadraticCurveTo(e, t, r, i) {\n          var o = new Hi(this.currentPoint.clone(), new n(e, t), new n(r, i));\n          this.curves.push(o), this.currentPoint.set(r, i);\n        },\n        bezierCurveTo: function bezierCurveTo(e, t, r, i, o, a) {\n          var s = new Fi(this.currentPoint.clone(), new n(e, t), new n(r, i), new n(o, a));\n          this.curves.push(s), this.currentPoint.set(o, a);\n        },\n        splineThru: function splineThru(e) {\n          var t = [this.currentPoint.clone()].concat(e),\n              r = new Vi(t);\n          this.curves.push(r), this.currentPoint.copy(e[e.length - 1]);\n        },\n        arc: function arc(e, t, r, i, n, o) {\n          var a = this.currentPoint.x,\n              s = this.currentPoint.y;\n          this.absarc(e + a, t + s, r, i, n, o);\n        },\n        absarc: function absarc(e, t, r, i, n, o) {\n          this.absellipse(e, t, r, r, i, n, o);\n        },\n        ellipse: function ellipse(e, t, r, i, n, o, a, s) {\n          var c = this.currentPoint.x,\n              l = this.currentPoint.y;\n          this.absellipse(e + c, t + l, r, i, n, o, a, s);\n        },\n        absellipse: function absellipse(e, t, r, i, n, o, a, s) {\n          var c = new Mi(e, t, r, i, n, o, a, s);\n\n          if (this.curves.length > 0) {\n            var l = c.getPoint(0);\n            l.equals(this.currentPoint) || this.lineTo(l.x, l.y);\n          }\n\n          this.curves.push(c);\n          var u = c.getPoint(1);\n          this.currentPoint.copy(u);\n        },\n        copy: function copy(e) {\n          return ki.prototype.copy.call(this, e), this.currentPoint.copy(e.currentPoint), this;\n        },\n        toJSON: function toJSON() {\n          var e = ki.prototype.toJSON.call(this);\n          return e.currentPoint = this.currentPoint.toArray(), e;\n        },\n        fromJSON: function fromJSON(e) {\n          return ki.prototype.fromJSON.call(this, e), this.currentPoint.fromArray(e.currentPoint), this;\n        }\n      }), Xi.prototype = Object.assign(Object.create(Wi.prototype), {\n        constructor: Xi,\n        getPointsHoles: function getPointsHoles(e) {\n          for (var t = [], r = 0, i = this.holes.length; r < i; r++) {\n            t[r] = this.holes[r].getPoints(e);\n          }\n\n          return t;\n        },\n        extractPoints: function extractPoints(e) {\n          return {\n            shape: this.getPoints(e),\n            holes: this.getPointsHoles(e)\n          };\n        },\n        copy: function copy(e) {\n          Wi.prototype.copy.call(this, e), this.holes = [];\n\n          for (var t = 0, r = e.holes.length; t < r; t++) {\n            var i = e.holes[t];\n            this.holes.push(i.clone());\n          }\n\n          return this;\n        },\n        toJSON: function toJSON() {\n          var e = Wi.prototype.toJSON.call(this);\n          e.uuid = this.uuid, e.holes = [];\n\n          for (var t = 0, r = this.holes.length; t < r; t++) {\n            var i = this.holes[t];\n            e.holes.push(i.toJSON());\n          }\n\n          return e;\n        },\n        fromJSON: function fromJSON(e) {\n          Wi.prototype.fromJSON.call(this, e), this.uuid = e.uuid, this.holes = [];\n\n          for (var t = 0, r = e.holes.length; t < r; t++) {\n            var i = e.holes[t];\n            this.holes.push(new Wi().fromJSON(i));\n          }\n\n          return this;\n        }\n      }), qi.prototype = Object.assign(Object.create(w.prototype), {\n        constructor: qi,\n        isLight: !0,\n        copy: function copy(e) {\n          return w.prototype.copy.call(this, e), this.color.copy(e.color), this.intensity = e.intensity, this;\n        },\n        toJSON: function toJSON(e) {\n          var t = w.prototype.toJSON.call(this, e);\n          return t.object.color = this.color.getHex(), t.object.intensity = this.intensity, void 0 !== this.groundColor && (t.object.groundColor = this.groundColor.getHex()), void 0 !== this.distance && (t.object.distance = this.distance), void 0 !== this.angle && (t.object.angle = this.angle), void 0 !== this.decay && (t.object.decay = this.decay), void 0 !== this.penumbra && (t.object.penumbra = this.penumbra), void 0 !== this.shadow && (t.object.shadow = this.shadow.toJSON()), t;\n        }\n      }), Yi.prototype = Object.assign(Object.create(qi.prototype), {\n        constructor: Yi,\n        isHemisphereLight: !0,\n        copy: function copy(e) {\n          return qi.prototype.copy.call(this, e), this.groundColor.copy(e.groundColor), this;\n        }\n      }), Object.assign(Zi.prototype, {\n        copy: function copy(e) {\n          return this.camera = e.camera.clone(), this.bias = e.bias, this.radius = e.radius, this.mapSize.copy(e.mapSize), this;\n        },\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        },\n        toJSON: function toJSON() {\n          var e = {};\n          return 0 !== this.bias && (e.bias = this.bias), 1 !== this.radius && (e.radius = this.radius), 512 === this.mapSize.x && 512 === this.mapSize.y || (e.mapSize = this.mapSize.toArray()), e.camera = this.camera.toJSON(!1).object, delete e.camera.matrix, e;\n        }\n      }), Ji.prototype = Object.assign(Object.create(Zi.prototype), {\n        constructor: Ji,\n        isSpotLightShadow: !0,\n        update: function update(e) {\n          var t = this.camera,\n              r = 2 * zs.RAD2DEG * e.angle,\n              i = this.mapSize.width / this.mapSize.height,\n              n = e.distance || t.far;\n          r === t.fov && i === t.aspect && n === t.far || (t.fov = r, t.aspect = i, t.far = n, t.updateProjectionMatrix());\n        }\n      }), Ki.prototype = Object.assign(Object.create(qi.prototype), {\n        constructor: Ki,\n        isSpotLight: !0,\n        copy: function copy(e) {\n          return qi.prototype.copy.call(this, e), this.distance = e.distance, this.angle = e.angle, this.penumbra = e.penumbra, this.decay = e.decay, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;\n        }\n      }), Qi.prototype = Object.assign(Object.create(qi.prototype), {\n        constructor: Qi,\n        isPointLight: !0,\n        copy: function copy(e) {\n          return qi.prototype.copy.call(this, e), this.distance = e.distance, this.decay = e.decay, this.shadow = e.shadow.clone(), this;\n        }\n      }), $i.prototype = Object.assign(Object.create(Zi.prototype), {\n        constructor: $i\n      }), en.prototype = Object.assign(Object.create(qi.prototype), {\n        constructor: en,\n        isDirectionalLight: !0,\n        copy: function copy(e) {\n          return qi.prototype.copy.call(this, e), this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;\n        }\n      }), tn.prototype = Object.assign(Object.create(qi.prototype), {\n        constructor: tn,\n        isAmbientLight: !0\n      }), rn.prototype = Object.assign(Object.create(qi.prototype), {\n        constructor: rn,\n        isRectAreaLight: !0,\n        copy: function copy(e) {\n          return qi.prototype.copy.call(this, e), this.width = e.width, this.height = e.height, this;\n        },\n        toJSON: function toJSON(e) {\n          var t = qi.prototype.toJSON.call(this, e);\n          return t.object.width = this.width, t.object.height = this.height, t;\n        }\n      }), nn.prototype = Object.assign(Object.create(fn.prototype), {\n        constructor: nn,\n        ValueTypeName: \"string\",\n        ValueBufferType: Array,\n        DefaultInterpolation: 2300,\n        InterpolantFactoryMethodLinear: void 0,\n        InterpolantFactoryMethodSmooth: void 0\n      }), on.prototype = Object.assign(Object.create(fn.prototype), {\n        constructor: on,\n        ValueTypeName: \"bool\",\n        ValueBufferType: Array,\n        DefaultInterpolation: 2300,\n        InterpolantFactoryMethodLinear: void 0,\n        InterpolantFactoryMethodSmooth: void 0\n      }), Object.assign(an.prototype, {\n        evaluate: function evaluate(e) {\n          var t = this.parameterPositions,\n              r = this._cachedIndex,\n              i = t[r],\n              n = t[r - 1];\n\n          e: {\n            t: {\n              var o;\n\n              r: {\n                i: if (!(e < i)) {\n                  for (var a = r + 2;;) {\n                    if (void 0 === i) {\n                      if (e < n) break i;\n                      return r = t.length, this._cachedIndex = r, this.afterEnd_(r - 1, e, n);\n                    }\n\n                    if (r === a) break;\n                    if (n = i, i = t[++r], e < i) break t;\n                  }\n\n                  o = t.length;\n                  break r;\n                }\n\n                {\n                  if (e >= n) break e;\n                  var s = t[1];\n                  e < s && (r = 2, n = s);\n\n                  for (var a = r - 2;;) {\n                    if (void 0 === n) return this._cachedIndex = 0, this.beforeStart_(0, e, i);\n                    if (r === a) break;\n                    if (i = n, n = t[--r - 1], e >= n) break t;\n                  }\n\n                  o = r, r = 0;\n                }\n              }\n\n              for (; r < o;) {\n                var c = r + o >>> 1;\n                e < t[c] ? o = c : r = c + 1;\n              }\n\n              if (i = t[r], void 0 === (n = t[r - 1])) return this._cachedIndex = 0, this.beforeStart_(0, e, i);\n              if (void 0 === i) return r = t.length, this._cachedIndex = r, this.afterEnd_(r - 1, n, e);\n            }\n\n            this._cachedIndex = r, this.intervalChanged_(r, n, i);\n          }\n\n          return this.interpolate_(r, n, e, i);\n        },\n        settings: null,\n        DefaultSettings_: {},\n        getSettings_: function getSettings_() {\n          return this.settings || this.DefaultSettings_;\n        },\n        copySampleValue_: function copySampleValue_(e) {\n          for (var t = this.resultBuffer, r = this.sampleValues, i = this.valueSize, n = e * i, o = 0; o !== i; ++o) {\n            t[o] = r[n + o];\n          }\n\n          return t;\n        },\n        interpolate_: function interpolate_() {\n          throw new Error(\"call to abstract method\");\n        },\n        intervalChanged_: function intervalChanged_() {}\n      }), //!\\ DECLARE ALIAS AFTER assign prototype !\n      Object.assign(an.prototype, {\n        beforeStart_: an.prototype.copySampleValue_,\n        afterEnd_: an.prototype.copySampleValue_\n      }), sn.prototype = Object.assign(Object.create(an.prototype), {\n        constructor: sn,\n        interpolate_: function interpolate_(e, t, r, i) {\n          for (var n = this.resultBuffer, o = this.sampleValues, s = this.valueSize, c = e * s, l = (r - t) / (i - t), u = c + s; c !== u; c += 4) {\n            a.slerpFlat(n, 0, o, c - s, o, c, l);\n          }\n\n          return n;\n        }\n      }), cn.prototype = Object.assign(Object.create(fn.prototype), {\n        constructor: cn,\n        ValueTypeName: \"quaternion\",\n        DefaultInterpolation: 2301,\n        InterpolantFactoryMethodLinear: function InterpolantFactoryMethodLinear(e) {\n          return new sn(this.times, this.values, this.getValueSize(), e);\n        },\n        InterpolantFactoryMethodSmooth: void 0\n      }), ln.prototype = Object.assign(Object.create(fn.prototype), {\n        constructor: ln,\n        ValueTypeName: \"color\"\n      }), un.prototype = Object.assign(Object.create(fn.prototype), {\n        constructor: un,\n        ValueTypeName: \"number\"\n      }), hn.prototype = Object.assign(Object.create(an.prototype), {\n        constructor: hn,\n        DefaultSettings_: {\n          endingStart: Ss,\n          endingEnd: Ss\n        },\n        intervalChanged_: function intervalChanged_(e, t, r) {\n          var i = this.parameterPositions,\n              n = e - 2,\n              o = e + 1,\n              a = i[n],\n              s = i[o];\n          if (void 0 === a) switch (this.getSettings_().endingStart) {\n            case 2401:\n              n = e, a = 2 * t - r;\n              break;\n\n            case 2402:\n              n = i.length - 2, a = t + i[n] - i[n + 1];\n              break;\n\n            default:\n              n = e, a = r;\n          }\n          if (void 0 === s) switch (this.getSettings_().endingEnd) {\n            case 2401:\n              o = e, s = 2 * r - t;\n              break;\n\n            case 2402:\n              o = 1, s = r + i[1] - i[0];\n              break;\n\n            default:\n              o = e - 1, s = t;\n          }\n          var c = .5 * (r - t),\n              l = this.valueSize;\n          this._weightPrev = c / (t - a), this._weightNext = c / (s - r), this._offsetPrev = n * l, this._offsetNext = o * l;\n        },\n        interpolate_: function interpolate_(e, t, r, i) {\n          for (var n = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = e * a, c = s - a, l = this._offsetPrev, u = this._offsetNext, h = this._weightPrev, d = this._weightNext, p = (r - t) / (i - t), f = p * p, m = f * p, v = -h * m + 2 * h * f - h * p, g = (1 + h) * m + (-1.5 - 2 * h) * f + (-.5 + h) * p + 1, y = (-1 - d) * m + (1.5 + d) * f + .5 * p, x = d * m - d * f, _ = 0; _ !== a; ++_) {\n            n[_] = v * o[l + _] + g * o[c + _] + y * o[s + _] + x * o[u + _];\n          }\n\n          return n;\n        }\n      }), dn.prototype = Object.assign(Object.create(an.prototype), {\n        constructor: dn,\n        interpolate_: function interpolate_(e, t, r, i) {\n          for (var n = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = e * a, c = s - a, l = (r - t) / (i - t), u = 1 - l, h = 0; h !== a; ++h) {\n            n[h] = o[c + h] * u + o[s + h] * l;\n          }\n\n          return n;\n        }\n      }), pn.prototype = Object.assign(Object.create(an.prototype), {\n        constructor: pn,\n        interpolate_: function interpolate_(e) {\n          return this.copySampleValue_(e - 1);\n        }\n      });\n      var gc = {\n        arraySlice: function arraySlice(e, t, r) {\n          return gc.isTypedArray(e) ? new e.constructor(e.subarray(t, void 0 !== r ? r : e.length)) : e.slice(t, r);\n        },\n        convertArray: function convertArray(e, t, r) {\n          return !e || !r && e.constructor === t ? e : \"number\" == typeof t.BYTES_PER_ELEMENT ? new t(e) : Array.prototype.slice.call(e);\n        },\n        isTypedArray: function isTypedArray(e) {\n          return ArrayBuffer.isView(e) && !(e instanceof DataView);\n        },\n        getKeyframeOrder: function getKeyframeOrder(e) {\n          function t(t, r) {\n            return e[t] - e[r];\n          }\n\n          for (var r = e.length, i = new Array(r), n = 0; n !== r; ++n) {\n            i[n] = n;\n          }\n\n          return i.sort(t), i;\n        },\n        sortedArray: function sortedArray(e, t, r) {\n          for (var i = e.length, n = new e.constructor(i), o = 0, a = 0; a !== i; ++o) {\n            for (var s = r[o] * t, c = 0; c !== t; ++c) {\n              n[a++] = e[s + c];\n            }\n          }\n\n          return n;\n        },\n        flattenJSON: function flattenJSON(e, t, r, i) {\n          for (var n = 1, o = e[0]; void 0 !== o && void 0 === o[i];) {\n            o = e[n++];\n          }\n\n          if (void 0 !== o) {\n            var a = o[i];\n            if (void 0 !== a) if (Array.isArray(a)) do {\n              a = o[i], void 0 !== a && (t.push(o.time), r.push.apply(r, a)), o = e[n++];\n            } while (void 0 !== o);else if (void 0 !== a.toArray) do {\n              a = o[i], void 0 !== a && (t.push(o.time), a.toArray(r, r.length)), o = e[n++];\n            } while (void 0 !== o);else do {\n              a = o[i], void 0 !== a && (t.push(o.time), r.push(a)), o = e[n++];\n            } while (void 0 !== o);\n          }\n        }\n      };\n      Object.assign(fn, {\n        parse: function parse(e) {\n          if (void 0 === e.type) throw new Error(\"THREE.KeyframeTrack: track type undefined, can not parse\");\n\n          var t = fn._getTrackTypeForValueTypeName(e.type);\n\n          if (void 0 === e.times) {\n            var r = [],\n                i = [];\n            gc.flattenJSON(e.keys, r, i, \"value\"), e.times = r, e.values = i;\n          }\n\n          return void 0 !== t.parse ? t.parse(e) : new t(e.name, e.times, e.values, e.interpolation);\n        },\n        toJSON: function toJSON(e) {\n          var t,\n              r = e.constructor;\n          if (void 0 !== r.toJSON) t = r.toJSON(e);else {\n            t = {\n              name: e.name,\n              times: gc.convertArray(e.times, Array),\n              values: gc.convertArray(e.values, Array)\n            };\n            var i = e.getInterpolation();\n            i !== e.DefaultInterpolation && (t.interpolation = i);\n          }\n          return t.type = e.ValueTypeName, t;\n        },\n        _getTrackTypeForValueTypeName: function _getTrackTypeForValueTypeName(e) {\n          switch (e.toLowerCase()) {\n            case \"scalar\":\n            case \"double\":\n            case \"float\":\n            case \"number\":\n            case \"integer\":\n              return un;\n\n            case \"vector\":\n            case \"vector2\":\n            case \"vector3\":\n            case \"vector4\":\n              return mn;\n\n            case \"color\":\n              return ln;\n\n            case \"quaternion\":\n              return cn;\n\n            case \"bool\":\n            case \"boolean\":\n              return on;\n\n            case \"string\":\n              return nn;\n          }\n\n          throw new Error(\"THREE.KeyframeTrack: Unsupported typeName: \" + e);\n        }\n      }), Object.assign(fn.prototype, {\n        constructor: fn,\n        TimeBufferType: Float32Array,\n        ValueBufferType: Float32Array,\n        DefaultInterpolation: 2301,\n        InterpolantFactoryMethodDiscrete: function InterpolantFactoryMethodDiscrete(e) {\n          return new pn(this.times, this.values, this.getValueSize(), e);\n        },\n        InterpolantFactoryMethodLinear: function InterpolantFactoryMethodLinear(e) {\n          return new dn(this.times, this.values, this.getValueSize(), e);\n        },\n        InterpolantFactoryMethodSmooth: function InterpolantFactoryMethodSmooth(e) {\n          return new hn(this.times, this.values, this.getValueSize(), e);\n        },\n        setInterpolation: function setInterpolation(e) {\n          var t;\n\n          switch (e) {\n            case 2300:\n              t = this.InterpolantFactoryMethodDiscrete;\n              break;\n\n            case 2301:\n              t = this.InterpolantFactoryMethodLinear;\n              break;\n\n            case 2302:\n              t = this.InterpolantFactoryMethodSmooth;\n          }\n\n          if (void 0 === t) {\n            var r = \"unsupported interpolation for \" + this.ValueTypeName + \" keyframe track named \" + this.name;\n\n            if (void 0 === this.createInterpolant) {\n              if (e === this.DefaultInterpolation) throw new Error(r);\n              this.setInterpolation(this.DefaultInterpolation);\n            }\n\n            return void console.warn(\"THREE.KeyframeTrack:\", r);\n          }\n\n          this.createInterpolant = t;\n        },\n        getInterpolation: function getInterpolation() {\n          switch (this.createInterpolant) {\n            case this.InterpolantFactoryMethodDiscrete:\n              return 2300;\n\n            case this.InterpolantFactoryMethodLinear:\n              return 2301;\n\n            case this.InterpolantFactoryMethodSmooth:\n              return 2302;\n          }\n        },\n        getValueSize: function getValueSize() {\n          return this.values.length / this.times.length;\n        },\n        shift: function shift(e) {\n          if (0 !== e) for (var t = this.times, r = 0, i = t.length; r !== i; ++r) {\n            t[r] += e;\n          }\n          return this;\n        },\n        scale: function scale(e) {\n          if (1 !== e) for (var t = this.times, r = 0, i = t.length; r !== i; ++r) {\n            t[r] *= e;\n          }\n          return this;\n        },\n        trim: function trim(e, t) {\n          for (var r = this.times, i = r.length, n = 0, o = i - 1; n !== i && r[n] < e;) {\n            ++n;\n          }\n\n          for (; -1 !== o && r[o] > t;) {\n            --o;\n          }\n\n          if (++o, 0 !== n || o !== i) {\n            n >= o && (o = Math.max(o, 1), n = o - 1);\n            var a = this.getValueSize();\n            this.times = gc.arraySlice(r, n, o), this.values = gc.arraySlice(this.values, n * a, o * a);\n          }\n\n          return this;\n        },\n        validate: function validate() {\n          var e = !0,\n              t = this.getValueSize();\n          t - Math.floor(t) != 0 && (console.error(\"THREE.KeyframeTrack: Invalid value size in track.\", this), e = !1);\n          var r = this.times,\n              i = this.values,\n              n = r.length;\n          0 === n && (console.error(\"THREE.KeyframeTrack: Track is empty.\", this), e = !1);\n\n          for (var o = null, a = 0; a !== n; a++) {\n            var s = r[a];\n\n            if (\"number\" == typeof s && isNaN(s)) {\n              console.error(\"THREE.KeyframeTrack: Time is not a valid number.\", this, a, s), e = !1;\n              break;\n            }\n\n            if (null !== o && o > s) {\n              console.error(\"THREE.KeyframeTrack: Out of order keys.\", this, a, s, o), e = !1;\n              break;\n            }\n\n            o = s;\n          }\n\n          if (void 0 !== i && gc.isTypedArray(i)) for (var a = 0, c = i.length; a !== c; ++a) {\n            var l = i[a];\n\n            if (isNaN(l)) {\n              console.error(\"THREE.KeyframeTrack: Value is not a valid number.\", this, a, l), e = !1;\n              break;\n            }\n          }\n          return e;\n        },\n        optimize: function optimize() {\n          for (var e = this.times, t = this.values, r = this.getValueSize(), i = 2302 === this.getInterpolation(), n = 1, o = e.length - 1, a = 1; a < o; ++a) {\n            var s = !1,\n                c = e[a];\n            if (c !== e[a + 1] && (1 !== a || c !== c[0])) if (i) s = !0;else for (var l = a * r, u = l - r, h = l + r, d = 0; d !== r; ++d) {\n              var p = t[l + d];\n\n              if (p !== t[u + d] || p !== t[h + d]) {\n                s = !0;\n                break;\n              }\n            }\n\n            if (s) {\n              if (a !== n) {\n                e[n] = e[a];\n\n                for (var f = a * r, m = n * r, d = 0; d !== r; ++d) {\n                  t[m + d] = t[f + d];\n                }\n              }\n\n              ++n;\n            }\n          }\n\n          if (o > 0) {\n            e[n] = e[o];\n\n            for (var f = o * r, m = n * r, d = 0; d !== r; ++d) {\n              t[m + d] = t[f + d];\n            }\n\n            ++n;\n          }\n\n          return n !== e.length && (this.times = gc.arraySlice(e, 0, n), this.values = gc.arraySlice(t, 0, n * r)), this;\n        }\n      }), mn.prototype = Object.assign(Object.create(fn.prototype), {\n        constructor: mn,\n        ValueTypeName: \"vector\"\n      }), Object.assign(vn, {\n        parse: function parse(e) {\n          for (var t = [], r = e.tracks, i = 1 / (e.fps || 1), n = 0, o = r.length; n !== o; ++n) {\n            t.push(fn.parse(r[n]).scale(i));\n          }\n\n          return new vn(e.name, e.duration, t);\n        },\n        toJSON: function toJSON(e) {\n          for (var t = [], r = e.tracks, i = {\n            name: e.name,\n            duration: e.duration,\n            tracks: t\n          }, n = 0, o = r.length; n !== o; ++n) {\n            t.push(fn.toJSON(r[n]));\n          }\n\n          return i;\n        },\n        CreateFromMorphTargetSequence: function CreateFromMorphTargetSequence(e, t, r, i) {\n          for (var n = t.length, o = [], a = 0; a < n; a++) {\n            var s = [],\n                c = [];\n            s.push((a + n - 1) % n, a, (a + 1) % n), c.push(0, 1, 0);\n            var l = gc.getKeyframeOrder(s);\n            s = gc.sortedArray(s, 1, l), c = gc.sortedArray(c, 1, l), i || 0 !== s[0] || (s.push(n), c.push(c[0])), o.push(new un(\".morphTargetInfluences[\" + t[a].name + \"]\", s, c).scale(1 / r));\n          }\n\n          return new vn(e, -1, o);\n        },\n        findByName: function findByName(e, t) {\n          var r = e;\n\n          if (!Array.isArray(e)) {\n            var i = e;\n            r = i.geometry && i.geometry.animations || i.animations;\n          }\n\n          for (var n = 0; n < r.length; n++) {\n            if (r[n].name === t) return r[n];\n          }\n\n          return null;\n        },\n        CreateClipsFromMorphTargetSequences: function CreateClipsFromMorphTargetSequences(e, t, r) {\n          for (var i = {}, n = /^([\\w-]*?)([\\d]+)$/, o = 0, a = e.length; o < a; o++) {\n            var s = e[o],\n                c = s.name.match(n);\n\n            if (c && c.length > 1) {\n              var l = c[1],\n                  u = i[l];\n              u || (i[l] = u = []), u.push(s);\n            }\n          }\n\n          var h = [];\n\n          for (var l in i) {\n            h.push(vn.CreateFromMorphTargetSequence(l, i[l], t, r));\n          }\n\n          return h;\n        },\n        parseAnimation: function parseAnimation(e, t) {\n          if (!e) return console.error(\"THREE.AnimationClip: No animation in JSONLoader data.\"), null;\n\n          for (var r = function r(e, t, _r3, i, n) {\n            if (0 !== _r3.length) {\n              var o = [],\n                  a = [];\n              gc.flattenJSON(_r3, o, a, i), 0 !== o.length && n.push(new e(t, o, a));\n            }\n          }, i = [], n = e.name || \"default\", o = e.length || -1, a = e.fps || 30, s = e.hierarchy || [], c = 0; c < s.length; c++) {\n            var l = s[c].keys;\n            if (l && 0 !== l.length) if (l[0].morphTargets) {\n              for (var u = {}, h = 0; h < l.length; h++) {\n                if (l[h].morphTargets) for (var d = 0; d < l[h].morphTargets.length; d++) {\n                  u[l[h].morphTargets[d]] = -1;\n                }\n              }\n\n              for (var p in u) {\n                for (var f = [], m = [], d = 0; d !== l[h].morphTargets.length; ++d) {\n                  var v = l[h];\n                  f.push(v.time), m.push(v.morphTarget === p ? 1 : 0);\n                }\n\n                i.push(new un(\".morphTargetInfluence[\" + p + \"]\", f, m));\n              }\n\n              o = u.length * (a || 1);\n            } else {\n              var g = \".bones[\" + t[c].name + \"]\";\n              r(mn, g + \".position\", l, \"pos\", i), r(cn, g + \".quaternion\", l, \"rot\", i), r(mn, g + \".scale\", l, \"scl\", i);\n            }\n          }\n\n          return 0 === i.length ? null : new vn(n, o, i);\n        }\n      }), Object.assign(vn.prototype, {\n        resetDuration: function resetDuration() {\n          for (var e = this.tracks, t = 0, r = 0, i = e.length; r !== i; ++r) {\n            var n = this.tracks[r];\n            t = Math.max(t, n.times[n.times.length - 1]);\n          }\n\n          this.duration = t;\n        },\n        trim: function trim() {\n          for (var e = 0; e < this.tracks.length; e++) {\n            this.tracks[e].trim(0, this.duration);\n          }\n\n          return this;\n        },\n        optimize: function optimize() {\n          for (var e = 0; e < this.tracks.length; e++) {\n            this.tracks[e].optimize();\n          }\n\n          return this;\n        }\n      }), Object.assign(gn.prototype, {\n        load: function load(e, t, r, i) {\n          var n = this;\n          new vi(n.manager).load(e, function (e) {\n            t(n.parse(JSON.parse(e)));\n          }, r, i);\n        },\n        setTextures: function setTextures(e) {\n          this.textures = e;\n        },\n        parse: function parse(e) {\n          function t(e) {\n            return void 0 === r[e] && console.warn(\"THREE.MaterialLoader: Undefined texture\", e), r[e];\n          }\n\n          var r = this.textures,\n              i = new cc[e.type]();\n\n          if (void 0 !== e.uuid && (i.uuid = e.uuid), void 0 !== e.name && (i.name = e.name), void 0 !== e.color && i.color.setHex(e.color), void 0 !== e.roughness && (i.roughness = e.roughness), void 0 !== e.metalness && (i.metalness = e.metalness), void 0 !== e.emissive && i.emissive.setHex(e.emissive), void 0 !== e.specular && i.specular.setHex(e.specular), void 0 !== e.shininess && (i.shininess = e.shininess), void 0 !== e.clearCoat && (i.clearCoat = e.clearCoat), void 0 !== e.clearCoatRoughness && (i.clearCoatRoughness = e.clearCoatRoughness), void 0 !== e.uniforms && (i.uniforms = e.uniforms), void 0 !== e.vertexShader && (i.vertexShader = e.vertexShader), void 0 !== e.fragmentShader && (i.fragmentShader = e.fragmentShader), void 0 !== e.vertexColors && (i.vertexColors = e.vertexColors), void 0 !== e.fog && (i.fog = e.fog), void 0 !== e.flatShading && (i.flatShading = e.flatShading), void 0 !== e.blending && (i.blending = e.blending), void 0 !== e.side && (i.side = e.side), void 0 !== e.opacity && (i.opacity = e.opacity), void 0 !== e.transparent && (i.transparent = e.transparent), void 0 !== e.alphaTest && (i.alphaTest = e.alphaTest), void 0 !== e.depthTest && (i.depthTest = e.depthTest), void 0 !== e.depthWrite && (i.depthWrite = e.depthWrite), void 0 !== e.colorWrite && (i.colorWrite = e.colorWrite), void 0 !== e.wireframe && (i.wireframe = e.wireframe), void 0 !== e.wireframeLinewidth && (i.wireframeLinewidth = e.wireframeLinewidth), void 0 !== e.wireframeLinecap && (i.wireframeLinecap = e.wireframeLinecap), void 0 !== e.wireframeLinejoin && (i.wireframeLinejoin = e.wireframeLinejoin), void 0 !== e.rotation && (i.rotation = e.rotation), 1 !== e.linewidth && (i.linewidth = e.linewidth), void 0 !== e.dashSize && (i.dashSize = e.dashSize), void 0 !== e.gapSize && (i.gapSize = e.gapSize), void 0 !== e.scale && (i.scale = e.scale), void 0 !== e.polygonOffset && (i.polygonOffset = e.polygonOffset), void 0 !== e.polygonOffsetFactor && (i.polygonOffsetFactor = e.polygonOffsetFactor), void 0 !== e.polygonOffsetUnits && (i.polygonOffsetUnits = e.polygonOffsetUnits), void 0 !== e.skinning && (i.skinning = e.skinning), void 0 !== e.morphTargets && (i.morphTargets = e.morphTargets), void 0 !== e.dithering && (i.dithering = e.dithering), void 0 !== e.visible && (i.visible = e.visible), void 0 !== e.userData && (i.userData = e.userData), void 0 !== e.shading && (i.flatShading = 1 === e.shading), void 0 !== e.size && (i.size = e.size), void 0 !== e.sizeAttenuation && (i.sizeAttenuation = e.sizeAttenuation), void 0 !== e.map && (i.map = t(e.map)), void 0 !== e.alphaMap && (i.alphaMap = t(e.alphaMap), i.transparent = !0), void 0 !== e.bumpMap && (i.bumpMap = t(e.bumpMap)), void 0 !== e.bumpScale && (i.bumpScale = e.bumpScale), void 0 !== e.normalMap && (i.normalMap = t(e.normalMap)), void 0 !== e.normalScale) {\n            var o = e.normalScale;\n            !1 === Array.isArray(o) && (o = [o, o]), i.normalScale = new n().fromArray(o);\n          }\n\n          return void 0 !== e.displacementMap && (i.displacementMap = t(e.displacementMap)), void 0 !== e.displacementScale && (i.displacementScale = e.displacementScale), void 0 !== e.displacementBias && (i.displacementBias = e.displacementBias), void 0 !== e.roughnessMap && (i.roughnessMap = t(e.roughnessMap)), void 0 !== e.metalnessMap && (i.metalnessMap = t(e.metalnessMap)), void 0 !== e.emissiveMap && (i.emissiveMap = t(e.emissiveMap)), void 0 !== e.emissiveIntensity && (i.emissiveIntensity = e.emissiveIntensity), void 0 !== e.specularMap && (i.specularMap = t(e.specularMap)), void 0 !== e.envMap && (i.envMap = t(e.envMap)), void 0 !== e.reflectivity && (i.reflectivity = e.reflectivity), void 0 !== e.lightMap && (i.lightMap = t(e.lightMap)), void 0 !== e.lightMapIntensity && (i.lightMapIntensity = e.lightMapIntensity), void 0 !== e.aoMap && (i.aoMap = t(e.aoMap)), void 0 !== e.aoMapIntensity && (i.aoMapIntensity = e.aoMapIntensity), void 0 !== e.gradientMap && (i.gradientMap = t(e.gradientMap)), i;\n        }\n      }), Object.assign(yn.prototype, {\n        load: function load(e, t, r, i) {\n          var n = this;\n          new vi(n.manager).load(e, function (e) {\n            t(n.parse(JSON.parse(e)));\n          }, r, i);\n        },\n        parse: function parse(e) {\n          var t = new B(),\n              r = e.data.index;\n\n          if (void 0 !== r) {\n            var i = new yc[r.type](r.array);\n            t.setIndex(new A(i, 1));\n          }\n\n          var n = e.data.attributes;\n\n          for (var o in n) {\n            var a = n[o],\n                i = new yc[a.type](a.array);\n            t.addAttribute(o, new A(i, a.itemSize, a.normalized));\n          }\n\n          var c = e.data.groups || e.data.drawcalls || e.data.offsets;\n          if (void 0 !== c) for (var l = 0, u = c.length; l !== u; ++l) {\n            var h = c[l];\n            t.addGroup(h.start, h.count, h.materialIndex);\n          }\n          var d = e.data.boundingSphere;\n\n          if (void 0 !== d) {\n            var p = new s();\n            void 0 !== d.center && p.fromArray(d.center), t.boundingSphere = new m(p, d.radius);\n          }\n\n          return t;\n        }\n      });\n      var yc = {\n        Int8Array: Int8Array,\n        Uint8Array: Uint8Array,\n        Uint8ClampedArray: \"undefined\" != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array,\n        Int16Array: Int16Array,\n        Uint16Array: Uint16Array,\n        Int32Array: Int32Array,\n        Uint32Array: Uint32Array,\n        Float32Array: Float32Array,\n        Float64Array: Float64Array\n      };\n      xn.Handlers = {\n        handlers: [],\n        add: function add(e, t) {\n          this.handlers.push(e, t);\n        },\n        get: function get(e) {\n          for (var t = this.handlers, r = 0, i = t.length; r < i; r += 2) {\n            var n = t[r],\n                o = t[r + 1];\n            if (n.test(e)) return o;\n          }\n\n          return null;\n        }\n      }, Object.assign(xn.prototype, {\n        crossOrigin: void 0,\n        onLoadStart: function onLoadStart() {},\n        onLoadProgress: function onLoadProgress() {},\n        onLoadComplete: function onLoadComplete() {},\n        initMaterials: function initMaterials(e, t, r) {\n          for (var i = [], n = 0; n < e.length; ++n) {\n            i[n] = this.createMaterial(e[n], t, r);\n          }\n\n          return i;\n        },\n        createMaterial: function () {\n          var e = {\n            NoBlending: No,\n            NormalBlending: Fo,\n            AdditiveBlending: zo,\n            SubtractiveBlending: Bo,\n            MultiplyBlending: Go,\n            CustomBlending: Ho\n          },\n              t = new y(),\n              r = new bi(),\n              i = new gn();\n          return function (n, o, a) {\n            function s(e, t, i, n, s) {\n              var l,\n                  u = o + e,\n                  h = xn.Handlers.get(u);\n              null !== h ? l = h.load(u) : (r.setCrossOrigin(a), l = r.load(u)), void 0 !== t && (l.repeat.fromArray(t), 1 !== t[0] && (l.wrapS = Aa), 1 !== t[1] && (l.wrapT = Aa)), void 0 !== i && l.offset.fromArray(i), void 0 !== n && (\"repeat\" === n[0] && (l.wrapS = Aa), \"mirror\" === n[0] && (l.wrapS = Ca), \"repeat\" === n[1] && (l.wrapT = Aa), \"mirror\" === n[1] && (l.wrapT = Ca)), void 0 !== s && (l.anisotropy = s);\n              var d = zs.generateUUID();\n              return c[d] = l, d;\n            }\n\n            var c = {},\n                l = {\n              uuid: zs.generateUUID(),\n              type: \"MeshLambertMaterial\"\n            };\n\n            for (var u in n) {\n              var h = n[u];\n\n              switch (u) {\n                case \"DbgColor\":\n                case \"DbgIndex\":\n                case \"opticalDensity\":\n                case \"illumination\":\n                  break;\n\n                case \"DbgName\":\n                  l.name = h;\n                  break;\n\n                case \"blending\":\n                  l.blending = e[h];\n                  break;\n\n                case \"colorAmbient\":\n                case \"mapAmbient\":\n                  console.warn(\"THREE.Loader.createMaterial:\", u, \"is no longer supported.\");\n                  break;\n\n                case \"colorDiffuse\":\n                  l.color = t.fromArray(h).getHex();\n                  break;\n\n                case \"colorSpecular\":\n                  l.specular = t.fromArray(h).getHex();\n                  break;\n\n                case \"colorEmissive\":\n                  l.emissive = t.fromArray(h).getHex();\n                  break;\n\n                case \"specularCoef\":\n                  l.shininess = h;\n                  break;\n\n                case \"shading\":\n                  \"basic\" === h.toLowerCase() && (l.type = \"MeshBasicMaterial\"), \"phong\" === h.toLowerCase() && (l.type = \"MeshPhongMaterial\"), \"standard\" === h.toLowerCase() && (l.type = \"MeshStandardMaterial\");\n                  break;\n\n                case \"mapDiffuse\":\n                  l.map = s(h, n.mapDiffuseRepeat, n.mapDiffuseOffset, n.mapDiffuseWrap, n.mapDiffuseAnisotropy);\n                  break;\n\n                case \"mapDiffuseRepeat\":\n                case \"mapDiffuseOffset\":\n                case \"mapDiffuseWrap\":\n                case \"mapDiffuseAnisotropy\":\n                  break;\n\n                case \"mapEmissive\":\n                  l.emissiveMap = s(h, n.mapEmissiveRepeat, n.mapEmissiveOffset, n.mapEmissiveWrap, n.mapEmissiveAnisotropy);\n                  break;\n\n                case \"mapEmissiveRepeat\":\n                case \"mapEmissiveOffset\":\n                case \"mapEmissiveWrap\":\n                case \"mapEmissiveAnisotropy\":\n                  break;\n\n                case \"mapLight\":\n                  l.lightMap = s(h, n.mapLightRepeat, n.mapLightOffset, n.mapLightWrap, n.mapLightAnisotropy);\n                  break;\n\n                case \"mapLightRepeat\":\n                case \"mapLightOffset\":\n                case \"mapLightWrap\":\n                case \"mapLightAnisotropy\":\n                  break;\n\n                case \"mapAO\":\n                  l.aoMap = s(h, n.mapAORepeat, n.mapAOOffset, n.mapAOWrap, n.mapAOAnisotropy);\n                  break;\n\n                case \"mapAORepeat\":\n                case \"mapAOOffset\":\n                case \"mapAOWrap\":\n                case \"mapAOAnisotropy\":\n                  break;\n\n                case \"mapBump\":\n                  l.bumpMap = s(h, n.mapBumpRepeat, n.mapBumpOffset, n.mapBumpWrap, n.mapBumpAnisotropy);\n                  break;\n\n                case \"mapBumpScale\":\n                  l.bumpScale = h;\n                  break;\n\n                case \"mapBumpRepeat\":\n                case \"mapBumpOffset\":\n                case \"mapBumpWrap\":\n                case \"mapBumpAnisotropy\":\n                  break;\n\n                case \"mapNormal\":\n                  l.normalMap = s(h, n.mapNormalRepeat, n.mapNormalOffset, n.mapNormalWrap, n.mapNormalAnisotropy);\n                  break;\n\n                case \"mapNormalFactor\":\n                  l.normalScale = h;\n                  break;\n\n                case \"mapNormalRepeat\":\n                case \"mapNormalOffset\":\n                case \"mapNormalWrap\":\n                case \"mapNormalAnisotropy\":\n                  break;\n\n                case \"mapSpecular\":\n                  l.specularMap = s(h, n.mapSpecularRepeat, n.mapSpecularOffset, n.mapSpecularWrap, n.mapSpecularAnisotropy);\n                  break;\n\n                case \"mapSpecularRepeat\":\n                case \"mapSpecularOffset\":\n                case \"mapSpecularWrap\":\n                case \"mapSpecularAnisotropy\":\n                  break;\n\n                case \"mapMetalness\":\n                  l.metalnessMap = s(h, n.mapMetalnessRepeat, n.mapMetalnessOffset, n.mapMetalnessWrap, n.mapMetalnessAnisotropy);\n                  break;\n\n                case \"mapMetalnessRepeat\":\n                case \"mapMetalnessOffset\":\n                case \"mapMetalnessWrap\":\n                case \"mapMetalnessAnisotropy\":\n                  break;\n\n                case \"mapRoughness\":\n                  l.roughnessMap = s(h, n.mapRoughnessRepeat, n.mapRoughnessOffset, n.mapRoughnessWrap, n.mapRoughnessAnisotropy);\n                  break;\n\n                case \"mapRoughnessRepeat\":\n                case \"mapRoughnessOffset\":\n                case \"mapRoughnessWrap\":\n                case \"mapRoughnessAnisotropy\":\n                  break;\n\n                case \"mapAlpha\":\n                  l.alphaMap = s(h, n.mapAlphaRepeat, n.mapAlphaOffset, n.mapAlphaWrap, n.mapAlphaAnisotropy);\n                  break;\n\n                case \"mapAlphaRepeat\":\n                case \"mapAlphaOffset\":\n                case \"mapAlphaWrap\":\n                case \"mapAlphaAnisotropy\":\n                  break;\n\n                case \"flipSided\":\n                  l.side = Po;\n                  break;\n\n                case \"doubleSided\":\n                  l.side = Do;\n                  break;\n\n                case \"transparency\":\n                  console.warn(\"THREE.Loader.createMaterial: transparency has been renamed to opacity\"), l.opacity = h;\n                  break;\n\n                case \"depthTest\":\n                case \"depthWrite\":\n                case \"colorWrite\":\n                case \"opacity\":\n                case \"reflectivity\":\n                case \"transparent\":\n                case \"visible\":\n                case \"wireframe\":\n                  l[u] = h;\n                  break;\n\n                case \"vertexColors\":\n                  !0 === h && (l.vertexColors = Oo), \"face\" === h && (l.vertexColors = Io);\n                  break;\n\n                default:\n                  console.error(\"THREE.Loader.createMaterial: Unsupported\", u, h);\n              }\n            }\n\n            return \"MeshBasicMaterial\" === l.type && delete l.emissive, \"MeshPhongMaterial\" !== l.type && delete l.specular, l.opacity < 1 && (l.transparent = !0), i.setTextures(c), i.parse(l);\n          };\n        }()\n      });\n      var xc = {\n        decodeText: function decodeText(e) {\n          if (\"undefined\" != typeof TextDecoder) return new TextDecoder().decode(e);\n\n          for (var t = \"\", r = 0, i = e.length; r < i; r++) {\n            t += String.fromCharCode(e[r]);\n          }\n\n          return decodeURIComponent(escape(t));\n        },\n        extractUrlBase: function extractUrlBase(e) {\n          var t = e.lastIndexOf(\"/\");\n          return -1 === t ? \"./\" : e.substr(0, t + 1);\n        }\n      };\n      Object.assign(_n.prototype, {\n        load: function load(e, t, r, i) {\n          var n = this,\n              o = this.texturePath && \"string\" == typeof this.texturePath ? this.texturePath : xc.extractUrlBase(e),\n              a = new vi(this.manager);\n          a.setWithCredentials(this.withCredentials), a.load(e, function (r) {\n            var i = JSON.parse(r),\n                a = i.metadata;\n\n            if (void 0 !== a) {\n              var s = a.type;\n              if (void 0 !== s && \"object\" === s.toLowerCase()) return void console.error(\"THREE.JSONLoader: \" + e + \" should be loaded with THREE.ObjectLoader instead.\");\n            }\n\n            var c = n.parse(i, o);\n            t(c.geometry, c.materials);\n          }, r, i);\n        },\n        setTexturePath: function setTexturePath(e) {\n          this.texturePath = e;\n        },\n        parse: function () {\n          function e(e, t) {\n            function r(e, t) {\n              return e & 1 << t;\n            }\n\n            var i,\n                o,\n                a,\n                c,\n                l,\n                u,\n                h,\n                d,\n                p,\n                f,\n                m,\n                v,\n                g,\n                x,\n                _,\n                b,\n                w,\n                M,\n                E,\n                T,\n                A,\n                L,\n                C,\n                R,\n                P,\n                D,\n                U,\n                I = e.faces,\n                O = e.vertices,\n                N = e.normals,\n                F = e.colors,\n                z = e.scale,\n                B = 0;\n\n            if (void 0 !== e.uvs) {\n              for (i = 0; i < e.uvs.length; i++) {\n                e.uvs[i].length && B++;\n              }\n\n              for (i = 0; i < B; i++) {\n                t.faceVertexUvs[i] = [];\n              }\n            }\n\n            for (c = 0, l = O.length; c < l;) {\n              M = new s(), M.x = O[c++] * z, M.y = O[c++] * z, M.z = O[c++] * z, t.vertices.push(M);\n            }\n\n            for (c = 0, l = I.length; c < l;) {\n              if (f = I[c++], m = r(f, 0), v = r(f, 1), g = r(f, 3), x = r(f, 4), _ = r(f, 5), b = r(f, 6), w = r(f, 7), m) {\n                if (T = new S(), T.a = I[c], T.b = I[c + 1], T.c = I[c + 3], A = new S(), A.a = I[c + 1], A.b = I[c + 2], A.c = I[c + 3], c += 4, v && (p = I[c++], T.materialIndex = p, A.materialIndex = p), a = t.faces.length, g) for (i = 0; i < B; i++) {\n                  for (R = e.uvs[i], t.faceVertexUvs[i][a] = [], t.faceVertexUvs[i][a + 1] = [], o = 0; o < 4; o++) {\n                    d = I[c++], D = R[2 * d], U = R[2 * d + 1], P = new n(D, U), 2 !== o && t.faceVertexUvs[i][a].push(P), 0 !== o && t.faceVertexUvs[i][a + 1].push(P);\n                  }\n                }\n                if (x && (h = 3 * I[c++], T.normal.set(N[h++], N[h++], N[h]), A.normal.copy(T.normal)), _) for (i = 0; i < 4; i++) {\n                  h = 3 * I[c++], C = new s(N[h++], N[h++], N[h]), 2 !== i && T.vertexNormals.push(C), 0 !== i && A.vertexNormals.push(C);\n                }\n                if (b && (u = I[c++], L = F[u], T.color.setHex(L), A.color.setHex(L)), w) for (i = 0; i < 4; i++) {\n                  u = I[c++], L = F[u], 2 !== i && T.vertexColors.push(new y(L)), 0 !== i && A.vertexColors.push(new y(L));\n                }\n                t.faces.push(T), t.faces.push(A);\n              } else {\n                if (E = new S(), E.a = I[c++], E.b = I[c++], E.c = I[c++], v && (p = I[c++], E.materialIndex = p), a = t.faces.length, g) for (i = 0; i < B; i++) {\n                  for (R = e.uvs[i], t.faceVertexUvs[i][a] = [], o = 0; o < 3; o++) {\n                    d = I[c++], D = R[2 * d], U = R[2 * d + 1], P = new n(D, U), t.faceVertexUvs[i][a].push(P);\n                  }\n                }\n                if (x && (h = 3 * I[c++], E.normal.set(N[h++], N[h++], N[h])), _) for (i = 0; i < 3; i++) {\n                  h = 3 * I[c++], C = new s(N[h++], N[h++], N[h]), E.vertexNormals.push(C);\n                }\n                if (b && (u = I[c++], E.color.setHex(F[u])), w) for (i = 0; i < 3; i++) {\n                  u = I[c++], E.vertexColors.push(new y(F[u]));\n                }\n                t.faces.push(E);\n              }\n            }\n          }\n\n          function t(e, t) {\n            var r = void 0 !== e.influencesPerVertex ? e.influencesPerVertex : 2;\n            if (e.skinWeights) for (var i = 0, n = e.skinWeights.length; i < n; i += r) {\n              var o = e.skinWeights[i],\n                  a = r > 1 ? e.skinWeights[i + 1] : 0,\n                  s = r > 2 ? e.skinWeights[i + 2] : 0,\n                  c = r > 3 ? e.skinWeights[i + 3] : 0;\n              t.skinWeights.push(new u(o, a, s, c));\n            }\n            if (e.skinIndices) for (var i = 0, n = e.skinIndices.length; i < n; i += r) {\n              var l = e.skinIndices[i],\n                  h = r > 1 ? e.skinIndices[i + 1] : 0,\n                  d = r > 2 ? e.skinIndices[i + 2] : 0,\n                  p = r > 3 ? e.skinIndices[i + 3] : 0;\n              t.skinIndices.push(new u(l, h, d, p));\n            }\n            t.bones = e.bones, t.bones && t.bones.length > 0 && (t.skinWeights.length !== t.skinIndices.length || t.skinIndices.length !== t.vertices.length) && console.warn(\"When skinning, number of vertices (\" + t.vertices.length + \"), skinIndices (\" + t.skinIndices.length + \"), and skinWeights (\" + t.skinWeights.length + \") should match.\");\n          }\n\n          function r(e, t) {\n            var r = e.scale;\n            if (void 0 !== e.morphTargets) for (var i = 0, n = e.morphTargets.length; i < n; i++) {\n              t.morphTargets[i] = {}, t.morphTargets[i].name = e.morphTargets[i].name, t.morphTargets[i].vertices = [];\n\n              for (var o = t.morphTargets[i].vertices, a = e.morphTargets[i].vertices, c = 0, l = a.length; c < l; c += 3) {\n                var u = new s();\n                u.x = a[c] * r, u.y = a[c + 1] * r, u.z = a[c + 2] * r, o.push(u);\n              }\n            }\n\n            if (void 0 !== e.morphColors && e.morphColors.length > 0) {\n              console.warn('THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.');\n\n              for (var h = t.faces, d = e.morphColors[0].colors, i = 0, n = h.length; i < n; i++) {\n                h[i].color.fromArray(d, 3 * i);\n              }\n            }\n          }\n\n          function i(e, t) {\n            var r = [],\n                i = [];\n            void 0 !== e.animation && i.push(e.animation), void 0 !== e.animations && (e.animations.length ? i = i.concat(e.animations) : i.push(e.animations));\n\n            for (var n = 0; n < i.length; n++) {\n              var o = vn.parseAnimation(i[n], t.bones);\n              o && r.push(o);\n            }\n\n            if (t.morphTargets) {\n              var a = vn.CreateClipsFromMorphTargetSequences(t.morphTargets, 10);\n              r = r.concat(a);\n            }\n\n            r.length > 0 && (t.animations = r);\n          }\n\n          return function (n, o) {\n            void 0 !== n.data && (n = n.data), void 0 !== n.scale ? n.scale = 1 / n.scale : n.scale = 1;\n            var a = new T();\n            return e(n, a), t(n, a), r(n, a), i(n, a), a.computeFaceNormals(), a.computeBoundingSphere(), void 0 === n.materials || 0 === n.materials.length ? {\n              geometry: a\n            } : {\n              geometry: a,\n              materials: xn.prototype.initMaterials(n.materials, o, this.crossOrigin)\n            };\n          };\n        }()\n      }), Object.assign(bn.prototype, {\n        load: function load(e, t, r, i) {\n          \"\" === this.texturePath && (this.texturePath = e.substring(0, e.lastIndexOf(\"/\") + 1));\n          var n = this;\n          new vi(n.manager).load(e, function (r) {\n            var o = null;\n\n            try {\n              o = JSON.parse(r);\n            } catch (t) {\n              return void 0 !== i && i(t), void console.error(\"THREE:ObjectLoader: Can't parse \" + e + \".\", t.message);\n            }\n\n            var a = o.metadata;\n            if (void 0 === a || void 0 === a.type || \"geometry\" === a.type.toLowerCase()) return void console.error(\"THREE.ObjectLoader: Can't load \" + e + \". Use THREE.JSONLoader instead.\");\n            n.parse(o, t);\n          }, r, i);\n        },\n        setTexturePath: function setTexturePath(e) {\n          this.texturePath = e;\n        },\n        setCrossOrigin: function setCrossOrigin(e) {\n          this.crossOrigin = e;\n        },\n        parse: function parse(e, t) {\n          var r = this.parseShape(e.shapes),\n              i = this.parseGeometries(e.geometries, r),\n              n = this.parseImages(e.images, function () {\n            void 0 !== t && t(s);\n          }),\n              o = this.parseTextures(e.textures, n),\n              a = this.parseMaterials(e.materials, o),\n              s = this.parseObject(e.object, i, a);\n          return e.animations && (s.animations = this.parseAnimations(e.animations)), void 0 !== e.images && 0 !== e.images.length || void 0 !== t && t(s), s;\n        },\n        parseShape: function parseShape(e) {\n          var t = {};\n          if (void 0 !== e) for (var r = 0, i = e.length; r < i; r++) {\n            var n = new Xi().fromJSON(e[r]);\n            t[n.uuid] = n;\n          }\n          return t;\n        },\n        parseGeometries: function parseGeometries(e, t) {\n          var r = {};\n          if (void 0 !== e) for (var i = new _n(), n = new yn(), o = 0, a = e.length; o < a; o++) {\n            var s,\n                c = e[o];\n\n            switch (c.type) {\n              case \"PlaneGeometry\":\n              case \"PlaneBufferGeometry\":\n                s = new sc[c.type](c.width, c.height, c.widthSegments, c.heightSegments);\n                break;\n\n              case \"BoxGeometry\":\n              case \"BoxBufferGeometry\":\n              case \"CubeGeometry\":\n                s = new sc[c.type](c.width, c.height, c.depth, c.widthSegments, c.heightSegments, c.depthSegments);\n                break;\n\n              case \"CircleGeometry\":\n              case \"CircleBufferGeometry\":\n                s = new sc[c.type](c.radius, c.segments, c.thetaStart, c.thetaLength);\n                break;\n\n              case \"CylinderGeometry\":\n              case \"CylinderBufferGeometry\":\n                s = new sc[c.type](c.radiusTop, c.radiusBottom, c.height, c.radialSegments, c.heightSegments, c.openEnded, c.thetaStart, c.thetaLength);\n                break;\n\n              case \"ConeGeometry\":\n              case \"ConeBufferGeometry\":\n                s = new sc[c.type](c.radius, c.height, c.radialSegments, c.heightSegments, c.openEnded, c.thetaStart, c.thetaLength);\n                break;\n\n              case \"SphereGeometry\":\n              case \"SphereBufferGeometry\":\n                s = new sc[c.type](c.radius, c.widthSegments, c.heightSegments, c.phiStart, c.phiLength, c.thetaStart, c.thetaLength);\n                break;\n\n              case \"DodecahedronGeometry\":\n              case \"DodecahedronBufferGeometry\":\n              case \"IcosahedronGeometry\":\n              case \"IcosahedronBufferGeometry\":\n              case \"OctahedronGeometry\":\n              case \"OctahedronBufferGeometry\":\n              case \"TetrahedronGeometry\":\n              case \"TetrahedronBufferGeometry\":\n                s = new sc[c.type](c.radius, c.detail);\n                break;\n\n              case \"RingGeometry\":\n              case \"RingBufferGeometry\":\n                s = new sc[c.type](c.innerRadius, c.outerRadius, c.thetaSegments, c.phiSegments, c.thetaStart, c.thetaLength);\n                break;\n\n              case \"TorusGeometry\":\n              case \"TorusBufferGeometry\":\n                s = new sc[c.type](c.radius, c.tube, c.radialSegments, c.tubularSegments, c.arc);\n                break;\n\n              case \"TorusKnotGeometry\":\n              case \"TorusKnotBufferGeometry\":\n                s = new sc[c.type](c.radius, c.tube, c.tubularSegments, c.radialSegments, c.p, c.q);\n                break;\n\n              case \"LatheGeometry\":\n              case \"LatheBufferGeometry\":\n                s = new sc[c.type](c.points, c.segments, c.phiStart, c.phiLength);\n                break;\n\n              case \"PolyhedronGeometry\":\n              case \"PolyhedronBufferGeometry\":\n                s = new sc[c.type](c.vertices, c.indices, c.radius, c.details);\n                break;\n\n              case \"ShapeGeometry\":\n              case \"ShapeBufferGeometry\":\n                for (var l = [], u = 0, h = c.shapes.length; u < h; u++) {\n                  var d = t[c.shapes[u]];\n                  l.push(d);\n                }\n\n                s = new sc[c.type](l, c.curveSegments);\n                break;\n\n              case \"BufferGeometry\":\n                s = n.parse(c);\n                break;\n\n              case \"Geometry\":\n                s = i.parse(c, this.texturePath).geometry;\n                break;\n\n              default:\n                console.warn('THREE.ObjectLoader: Unsupported geometry type \"' + c.type + '\"');\n                continue;\n            }\n\n            s.uuid = c.uuid, void 0 !== c.name && (s.name = c.name), r[c.uuid] = s;\n          }\n          return r;\n        },\n        parseMaterials: function parseMaterials(e, t) {\n          var r = {};\n\n          if (void 0 !== e) {\n            var i = new gn();\n            i.setTextures(t);\n\n            for (var n = 0, o = e.length; n < o; n++) {\n              var a = e[n];\n\n              if (\"MultiMaterial\" === a.type) {\n                for (var s = [], c = 0; c < a.materials.length; c++) {\n                  s.push(i.parse(a.materials[c]));\n                }\n\n                r[a.uuid] = s;\n              } else r[a.uuid] = i.parse(a);\n            }\n          }\n\n          return r;\n        },\n        parseAnimations: function parseAnimations(e) {\n          for (var t = [], r = 0; r < e.length; r++) {\n            var i = vn.parse(e[r]);\n            t.push(i);\n          }\n\n          return t;\n        },\n        parseImages: function parseImages(e, t) {\n          var r = this,\n              i = {};\n\n          if (void 0 !== e && e.length > 0) {\n            var n = new mi(t),\n                o = new xi(n);\n            o.setCrossOrigin(this.crossOrigin);\n\n            for (var a = 0, s = e.length; a < s; a++) {\n              var c = e[a],\n                  l = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(c.url) ? c.url : r.texturePath + c.url;\n\n              i[c.uuid] = function (e) {\n                return r.manager.itemStart(e), o.load(e, function () {\n                  r.manager.itemEnd(e);\n                }, void 0, function () {\n                  r.manager.itemEnd(e), r.manager.itemError(e);\n                });\n              }(l);\n            }\n          }\n\n          return i;\n        },\n        parseTextures: function parseTextures(e, t) {\n          function r(e, t) {\n            return \"number\" == typeof e ? e : (console.warn(\"THREE.ObjectLoader.parseTexture: Constant should be in numeric form.\", e), t[e]);\n          }\n\n          var i = {};\n          if (void 0 !== e) for (var n = 0, o = e.length; n < o; n++) {\n            var a = e[n];\n            void 0 === a.image && console.warn('THREE.ObjectLoader: No \"image\" specified for', a.uuid), void 0 === t[a.image] && console.warn(\"THREE.ObjectLoader: Undefined image\", a.image);\n            var s = new l(t[a.image]);\n            s.needsUpdate = !0, s.uuid = a.uuid, void 0 !== a.name && (s.name = a.name), void 0 !== a.mapping && (s.mapping = r(a.mapping, _c)), void 0 !== a.offset && s.offset.fromArray(a.offset), void 0 !== a.repeat && s.repeat.fromArray(a.repeat), void 0 !== a.center && s.center.fromArray(a.center), void 0 !== a.rotation && (s.rotation = a.rotation), void 0 !== a.wrap && (s.wrapS = r(a.wrap[0], bc), s.wrapT = r(a.wrap[1], bc)), void 0 !== a.format && (s.format = a.format), void 0 !== a.minFilter && (s.minFilter = r(a.minFilter, wc)), void 0 !== a.magFilter && (s.magFilter = r(a.magFilter, wc)), void 0 !== a.anisotropy && (s.anisotropy = a.anisotropy), void 0 !== a.flipY && (s.flipY = a.flipY), i[a.uuid] = s;\n          }\n          return i;\n        },\n        parseObject: function parseObject(e, t, r) {\n          function i(e) {\n            return void 0 === t[e] && console.warn(\"THREE.ObjectLoader: Undefined geometry\", e), t[e];\n          }\n\n          function n(e) {\n            if (void 0 !== e) {\n              if (Array.isArray(e)) {\n                for (var t = [], i = 0, n = e.length; i < n; i++) {\n                  var o = e[i];\n                  void 0 === r[o] && console.warn(\"THREE.ObjectLoader: Undefined material\", o), t.push(r[o]);\n                }\n\n                return t;\n              }\n\n              return void 0 === r[e] && console.warn(\"THREE.ObjectLoader: Undefined material\", e), r[e];\n            }\n          }\n\n          var o;\n\n          switch (e.type) {\n            case \"Scene\":\n              o = new Lt(), void 0 !== e.background && Number.isInteger(e.background) && (o.background = new y(e.background)), void 0 !== e.fog && (\"Fog\" === e.fog.type ? o.fog = new At(e.fog.color, e.fog.near, e.fog.far) : \"FogExp2\" === e.fog.type && (o.fog = new Tt(e.fog.color, e.fog.density)));\n              break;\n\n            case \"PerspectiveCamera\":\n              o = new wt(e.fov, e.aspect, e.near, e.far), void 0 !== e.focus && (o.focus = e.focus), void 0 !== e.zoom && (o.zoom = e.zoom), void 0 !== e.filmGauge && (o.filmGauge = e.filmGauge), void 0 !== e.filmOffset && (o.filmOffset = e.filmOffset), void 0 !== e.view && (o.view = Object.assign({}, e.view));\n              break;\n\n            case \"OrthographicCamera\":\n              o = new E(e.left, e.right, e.top, e.bottom, e.near, e.far), void 0 !== e.zoom && (o.zoom = e.zoom), void 0 !== e.view && (o.view = Object.assign({}, e.view));\n              break;\n\n            case \"AmbientLight\":\n              o = new tn(e.color, e.intensity);\n              break;\n\n            case \"DirectionalLight\":\n              o = new en(e.color, e.intensity);\n              break;\n\n            case \"PointLight\":\n              o = new Qi(e.color, e.intensity, e.distance, e.decay);\n              break;\n\n            case \"RectAreaLight\":\n              o = new rn(e.color, e.intensity, e.width, e.height);\n              break;\n\n            case \"SpotLight\":\n              o = new Ki(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay);\n              break;\n\n            case \"HemisphereLight\":\n              o = new Yi(e.color, e.groundColor, e.intensity);\n              break;\n\n            case \"SkinnedMesh\":\n              console.warn(\"THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.\");\n\n            case \"Mesh\":\n              var a = i(e.geometry),\n                  s = n(e.material);\n              o = a.bones && a.bones.length > 0 ? new It(a, s) : new J(a, s);\n              break;\n\n            case \"LOD\":\n              o = new Pt();\n              break;\n\n            case \"Line\":\n              o = new Nt(i(e.geometry), n(e.material), e.mode);\n              break;\n\n            case \"LineLoop\":\n              o = new zt(i(e.geometry), n(e.material));\n              break;\n\n            case \"LineSegments\":\n              o = new Ft(i(e.geometry), n(e.material));\n              break;\n\n            case \"PointCloud\":\n            case \"Points\":\n              o = new Gt(i(e.geometry), n(e.material));\n              break;\n\n            case \"Sprite\":\n              o = new Rt(n(e.material));\n              break;\n\n            case \"Group\":\n              o = new Ht();\n              break;\n\n            default:\n              o = new w();\n          }\n\n          if (o.uuid = e.uuid, void 0 !== e.name && (o.name = e.name), void 0 !== e.matrix ? (o.matrix.fromArray(e.matrix), void 0 !== e.matrixAutoUpdate && (o.matrixAutoUpdate = e.matrixAutoUpdate), o.matrixAutoUpdate && o.matrix.decompose(o.position, o.quaternion, o.scale)) : (void 0 !== e.position && o.position.fromArray(e.position), void 0 !== e.rotation && o.rotation.fromArray(e.rotation), void 0 !== e.quaternion && o.quaternion.fromArray(e.quaternion), void 0 !== e.scale && o.scale.fromArray(e.scale)), void 0 !== e.castShadow && (o.castShadow = e.castShadow), void 0 !== e.receiveShadow && (o.receiveShadow = e.receiveShadow), e.shadow && (void 0 !== e.shadow.bias && (o.shadow.bias = e.shadow.bias), void 0 !== e.shadow.radius && (o.shadow.radius = e.shadow.radius), void 0 !== e.shadow.mapSize && o.shadow.mapSize.fromArray(e.shadow.mapSize), void 0 !== e.shadow.camera && (o.shadow.camera = this.parseObject(e.shadow.camera))), void 0 !== e.visible && (o.visible = e.visible), void 0 !== e.frustumCulled && (o.frustumCulled = e.frustumCulled), void 0 !== e.renderOrder && (o.renderOrder = e.renderOrder), void 0 !== e.userData && (o.userData = e.userData), void 0 !== e.children) for (var c = e.children, l = 0; l < c.length; l++) {\n            o.add(this.parseObject(c[l], t, r));\n          }\n          if (\"LOD\" === e.type) for (var u = e.levels, h = 0; h < u.length; h++) {\n            var d = u[h],\n                p = o.getObjectByProperty(\"uuid\", d.object);\n            void 0 !== p && o.addLevel(p, d.distance);\n          }\n          return o;\n        }\n      });\n      var _c = {\n        UVMapping: 300,\n        CubeReflectionMapping: _a,\n        CubeRefractionMapping: ba,\n        EquirectangularReflectionMapping: wa,\n        EquirectangularRefractionMapping: Ma,\n        SphericalReflectionMapping: Ea,\n        CubeUVReflectionMapping: Sa,\n        CubeUVRefractionMapping: Ta\n      },\n          bc = {\n        RepeatWrapping: Aa,\n        ClampToEdgeWrapping: La,\n        MirroredRepeatWrapping: Ca\n      },\n          wc = {\n        NearestFilter: Ra,\n        NearestMipMapNearestFilter: Pa,\n        NearestMipMapLinearFilter: Da,\n        LinearFilter: Ua,\n        LinearMipMapNearestFilter: Ia,\n        LinearMipMapLinearFilter: Oa\n      };\n      wn.prototype = {\n        constructor: wn,\n        setOptions: function setOptions(e) {\n          return this.options = e, this;\n        },\n        load: function load(e, t, r, i) {\n          void 0 === e && (e = \"\"), void 0 !== this.path && (e = this.path + e);\n          var n = this,\n              o = lc.get(e);\n          if (void 0 !== o) return n.manager.itemStart(e), setTimeout(function () {\n            t && t(o), n.manager.itemEnd(e);\n          }, 0), o;\n          fetch(e).then(function (e) {\n            return e.blob();\n          }).then(function (e) {\n            return createImageBitmap(e, n.options);\n          }).then(function (r) {\n            lc.add(e, r), t && t(r), n.manager.itemEnd(e);\n          }).catch(function (t) {\n            i && i(t), n.manager.itemEnd(e), n.manager.itemError(e);\n          });\n        },\n        setCrossOrigin: function setCrossOrigin() {\n          return this;\n        },\n        setPath: function setPath(e) {\n          return this.path = e, this;\n        }\n      }, Object.assign(Mn.prototype, {\n        moveTo: function moveTo(e, t) {\n          this.currentPath = new Wi(), this.subPaths.push(this.currentPath), this.currentPath.moveTo(e, t);\n        },\n        lineTo: function lineTo(e, t) {\n          this.currentPath.lineTo(e, t);\n        },\n        quadraticCurveTo: function quadraticCurveTo(e, t, r, i) {\n          this.currentPath.quadraticCurveTo(e, t, r, i);\n        },\n        bezierCurveTo: function bezierCurveTo(e, t, r, i, n, o) {\n          this.currentPath.bezierCurveTo(e, t, r, i, n, o);\n        },\n        splineThru: function splineThru(e) {\n          this.currentPath.splineThru(e);\n        },\n        toShapes: function toShapes(e, t) {\n          function r(e) {\n            for (var t = [], r = 0, i = e.length; r < i; r++) {\n              var n = e[r],\n                  o = new Xi();\n              o.curves = n.curves, t.push(o);\n            }\n\n            return t;\n          }\n\n          var i = oc.isClockWise,\n              n = this.subPaths;\n          if (0 === n.length) return [];\n          if (!0 === t) return r(n);\n          var o,\n              a,\n              s,\n              c = [];\n          if (1 === n.length) return a = n[0], s = new Xi(), s.curves = a.curves, c.push(s), c;\n          var l = !i(n[0].getPoints());\n          l = e ? !l : l;\n          var u,\n              h = [],\n              d = [],\n              p = [],\n              f = 0;\n          d[f] = void 0, p[f] = [];\n\n          for (var m = 0, v = n.length; m < v; m++) {\n            a = n[m], u = a.getPoints(), o = i(u), o = e ? !o : o, o ? (!l && d[f] && f++, d[f] = {\n              s: new Xi(),\n              p: u\n            }, d[f].s.curves = a.curves, l && f++, p[f] = []) : p[f].push({\n              h: a,\n              p: u[0]\n            });\n          }\n\n          if (!d[0]) return r(n);\n\n          if (d.length > 1) {\n            for (var g = !1, y = [], x = 0, _ = d.length; x < _; x++) {\n              h[x] = [];\n            }\n\n            for (var x = 0, _ = d.length; x < _; x++) {\n              for (var b = p[x], w = 0; w < b.length; w++) {\n                for (var M = b[w], E = !0, S = 0; S < d.length; S++) {\n                  (function (e, t) {\n                    for (var r = t.length, i = !1, n = r - 1, o = 0; o < r; n = o++) {\n                      var a = t[n],\n                          s = t[o],\n                          c = s.x - a.x,\n                          l = s.y - a.y;\n\n                      if (Math.abs(l) > Number.EPSILON) {\n                        if (l < 0 && (a = t[o], c = -c, s = t[n], l = -l), e.y < a.y || e.y > s.y) continue;\n\n                        if (e.y === a.y) {\n                          if (e.x === a.x) return !0;\n                        } else {\n                          var u = l * (e.x - a.x) - c * (e.y - a.y);\n                          if (0 === u) return !0;\n                          if (u < 0) continue;\n                          i = !i;\n                        }\n                      } else {\n                        if (e.y !== a.y) continue;\n                        if (s.x <= e.x && e.x <= a.x || a.x <= e.x && e.x <= s.x) return !0;\n                      }\n                    }\n\n                    return i;\n                  })(M.p, d[S].p) && (x !== S && y.push({\n                    froms: x,\n                    tos: S,\n                    hole: w\n                  }), E ? (E = !1, h[S].push(M)) : g = !0);\n                }\n\n                E && h[x].push(M);\n              }\n            }\n\n            y.length > 0 && (g || (p = h));\n          }\n\n          for (var T, m = 0, A = d.length; m < A; m++) {\n            s = d[m].s, c.push(s), T = p[m];\n\n            for (var L = 0, C = T.length; L < C; L++) {\n              s.holes.push(T[L].h);\n            }\n          }\n\n          return c;\n        }\n      }), Object.assign(En.prototype, {\n        isFont: !0,\n        generateShapes: function generateShapes(e, t, r) {\n          void 0 === t && (t = 100), void 0 === r && (r = 4);\n\n          for (var i = [], n = Sn(e, t, r, this.data), o = 0, a = n.length; o < a; o++) {\n            Array.prototype.push.apply(i, n[o].toShapes());\n          }\n\n          return i;\n        }\n      }), Object.assign(An.prototype, {\n        load: function load(e, t, r, i) {\n          var n = this,\n              o = new vi(this.manager);\n          o.setPath(this.path), o.load(e, function (e) {\n            var r;\n\n            try {\n              r = JSON.parse(e);\n            } catch (t) {\n              console.warn(\"THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.\"), r = JSON.parse(e.substring(65, e.length - 2));\n            }\n\n            var i = n.parse(r);\n            t && t(i);\n          }, r, i);\n        },\n        parse: function parse(e) {\n          return new En(e);\n        },\n        setPath: function setPath(e) {\n          return this.path = e, this;\n        }\n      });\n      var Mc,\n          Ec = {\n        getContext: function getContext() {\n          return void 0 === Mc && (Mc = new (window.AudioContext || window.webkitAudioContext)()), Mc;\n        },\n        setContext: function setContext(e) {\n          Mc = e;\n        }\n      };\n      Object.assign(Ln.prototype, {\n        load: function load(e, t, r, i) {\n          var n = new vi(this.manager);\n          n.setResponseType(\"arraybuffer\"), n.load(e, function (e) {\n            Ec.getContext().decodeAudioData(e, function (e) {\n              t(e);\n            });\n          }, r, i);\n        }\n      }), Object.assign(Cn.prototype, {\n        update: function () {\n          var e,\n              t,\n              r,\n              i,\n              n,\n              a,\n              s,\n              c,\n              l = new o(),\n              u = new o();\n          return function (o) {\n            if (e !== this || t !== o.focus || r !== o.fov || i !== o.aspect * this.aspect || n !== o.near || a !== o.far || s !== o.zoom || c !== this.eyeSep) {\n              e = this, t = o.focus, r = o.fov, i = o.aspect * this.aspect, n = o.near, a = o.far, s = o.zoom;\n              var h = o.projectionMatrix.clone();\n              c = this.eyeSep / 2;\n              var d,\n                  p,\n                  f = c * n / t,\n                  m = n * Math.tan(zs.DEG2RAD * r * .5) / s;\n              u.elements[12] = -c, l.elements[12] = c, d = -m * i + f, p = m * i + f, h.elements[0] = 2 * n / (p - d), h.elements[8] = (p + d) / (p - d), this.cameraL.projectionMatrix.copy(h), d = -m * i - f, p = m * i - f, h.elements[0] = 2 * n / (p - d), h.elements[8] = (p + d) / (p - d), this.cameraR.projectionMatrix.copy(h);\n            }\n\n            this.cameraL.matrixWorld.copy(o.matrixWorld).multiply(u), this.cameraR.matrixWorld.copy(o.matrixWorld).multiply(l);\n          };\n        }()\n      }), Rn.prototype = Object.create(w.prototype), Rn.prototype.constructor = Rn, Pn.prototype = Object.assign(Object.create(w.prototype), {\n        constructor: Pn,\n        getInput: function getInput() {\n          return this.gain;\n        },\n        removeFilter: function removeFilter() {\n          null !== this.filter && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null);\n        },\n        getFilter: function getFilter() {\n          return this.filter;\n        },\n        setFilter: function setFilter(e) {\n          null !== this.filter ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = e, this.gain.connect(this.filter), this.filter.connect(this.context.destination);\n        },\n        getMasterVolume: function getMasterVolume() {\n          return this.gain.gain.value;\n        },\n        setMasterVolume: function setMasterVolume(e) {\n          this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01);\n        },\n        updateMatrixWorld: function () {\n          var e = new s(),\n              t = new a(),\n              r = new s(),\n              i = new s();\n          return function (n) {\n            w.prototype.updateMatrixWorld.call(this, n);\n            var o = this.context.listener,\n                a = this.up;\n            this.matrixWorld.decompose(e, t, r), i.set(0, 0, -1).applyQuaternion(t), o.positionX ? (o.positionX.setValueAtTime(e.x, this.context.currentTime), o.positionY.setValueAtTime(e.y, this.context.currentTime), o.positionZ.setValueAtTime(e.z, this.context.currentTime), o.forwardX.setValueAtTime(i.x, this.context.currentTime), o.forwardY.setValueAtTime(i.y, this.context.currentTime), o.forwardZ.setValueAtTime(i.z, this.context.currentTime), o.upX.setValueAtTime(a.x, this.context.currentTime), o.upY.setValueAtTime(a.y, this.context.currentTime), o.upZ.setValueAtTime(a.z, this.context.currentTime)) : (o.setPosition(e.x, e.y, e.z), o.setOrientation(i.x, i.y, i.z, a.x, a.y, a.z));\n          };\n        }()\n      }), Dn.prototype = Object.assign(Object.create(w.prototype), {\n        constructor: Dn,\n        getOutput: function getOutput() {\n          return this.gain;\n        },\n        setNodeSource: function setNodeSource(e) {\n          return this.hasPlaybackControl = !1, this.sourceType = \"audioNode\", this.source = e, this.connect(), this;\n        },\n        setBuffer: function setBuffer(e) {\n          return this.buffer = e, this.sourceType = \"buffer\", this.autoplay && this.play(), this;\n        },\n        play: function play() {\n          if (!0 === this.isPlaying) return void console.warn(\"THREE.Audio: Audio is already playing.\");\n          if (!1 === this.hasPlaybackControl) return void console.warn(\"THREE.Audio: this Audio has no playback control.\");\n          var e = this.context.createBufferSource();\n          return e.buffer = this.buffer, e.loop = this.loop, e.onended = this.onEnded.bind(this), e.playbackRate.setValueAtTime(this.playbackRate, this.startTime), this.startTime = this.context.currentTime, e.start(this.startTime, this.offset), this.isPlaying = !0, this.source = e, this.connect();\n        },\n        pause: function pause() {\n          return !1 === this.hasPlaybackControl ? void console.warn(\"THREE.Audio: this Audio has no playback control.\") : (!0 === this.isPlaying && (this.source.stop(), this.offset += (this.context.currentTime - this.startTime) * this.playbackRate, this.isPlaying = !1), this);\n        },\n        stop: function stop() {\n          return !1 === this.hasPlaybackControl ? void console.warn(\"THREE.Audio: this Audio has no playback control.\") : (this.source.stop(), this.offset = 0, this.isPlaying = !1, this);\n        },\n        connect: function connect() {\n          if (this.filters.length > 0) {\n            this.source.connect(this.filters[0]);\n\n            for (var e = 1, t = this.filters.length; e < t; e++) {\n              this.filters[e - 1].connect(this.filters[e]);\n            }\n\n            this.filters[this.filters.length - 1].connect(this.getOutput());\n          } else this.source.connect(this.getOutput());\n\n          return this;\n        },\n        disconnect: function disconnect() {\n          if (this.filters.length > 0) {\n            this.source.disconnect(this.filters[0]);\n\n            for (var e = 1, t = this.filters.length; e < t; e++) {\n              this.filters[e - 1].disconnect(this.filters[e]);\n            }\n\n            this.filters[this.filters.length - 1].disconnect(this.getOutput());\n          } else this.source.disconnect(this.getOutput());\n\n          return this;\n        },\n        getFilters: function getFilters() {\n          return this.filters;\n        },\n        setFilters: function setFilters(e) {\n          return e || (e = []), !0 === this.isPlaying ? (this.disconnect(), this.filters = e, this.connect()) : this.filters = e, this;\n        },\n        getFilter: function getFilter() {\n          return this.getFilters()[0];\n        },\n        setFilter: function setFilter(e) {\n          return this.setFilters(e ? [e] : []);\n        },\n        setPlaybackRate: function setPlaybackRate(e) {\n          return !1 === this.hasPlaybackControl ? void console.warn(\"THREE.Audio: this Audio has no playback control.\") : (this.playbackRate = e, !0 === this.isPlaying && this.source.playbackRate.setValueAtTime(this.playbackRate, this.context.currentTime), this);\n        },\n        getPlaybackRate: function getPlaybackRate() {\n          return this.playbackRate;\n        },\n        onEnded: function onEnded() {\n          this.isPlaying = !1;\n        },\n        getLoop: function getLoop() {\n          return !1 === this.hasPlaybackControl ? (console.warn(\"THREE.Audio: this Audio has no playback control.\"), !1) : this.loop;\n        },\n        setLoop: function setLoop(e) {\n          return !1 === this.hasPlaybackControl ? void console.warn(\"THREE.Audio: this Audio has no playback control.\") : (this.loop = e, !0 === this.isPlaying && (this.source.loop = this.loop), this);\n        },\n        getVolume: function getVolume() {\n          return this.gain.gain.value;\n        },\n        setVolume: function setVolume(e) {\n          return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this;\n        }\n      }), Un.prototype = Object.assign(Object.create(Dn.prototype), {\n        constructor: Un,\n        getOutput: function getOutput() {\n          return this.panner;\n        },\n        getRefDistance: function getRefDistance() {\n          return this.panner.refDistance;\n        },\n        setRefDistance: function setRefDistance(e) {\n          this.panner.refDistance = e;\n        },\n        getRolloffFactor: function getRolloffFactor() {\n          return this.panner.rolloffFactor;\n        },\n        setRolloffFactor: function setRolloffFactor(e) {\n          this.panner.rolloffFactor = e;\n        },\n        getDistanceModel: function getDistanceModel() {\n          return this.panner.distanceModel;\n        },\n        setDistanceModel: function setDistanceModel(e) {\n          this.panner.distanceModel = e;\n        },\n        getMaxDistance: function getMaxDistance() {\n          return this.panner.maxDistance;\n        },\n        setMaxDistance: function setMaxDistance(e) {\n          this.panner.maxDistance = e;\n        },\n        updateMatrixWorld: function () {\n          var e = new s();\n          return function (t) {\n            w.prototype.updateMatrixWorld.call(this, t), e.setFromMatrixPosition(this.matrixWorld), this.panner.setPosition(e.x, e.y, e.z);\n          };\n        }()\n      }), Object.assign(In.prototype, {\n        getFrequencyData: function getFrequencyData() {\n          return this.analyser.getByteFrequencyData(this.data), this.data;\n        },\n        getAverageFrequency: function getAverageFrequency() {\n          for (var e = 0, t = this.getFrequencyData(), r = 0; r < t.length; r++) {\n            e += t[r];\n          }\n\n          return e / t.length;\n        }\n      }), Object.assign(On.prototype, {\n        accumulate: function accumulate(e, t) {\n          var r = this.buffer,\n              i = this.valueSize,\n              n = e * i + i,\n              o = this.cumulativeWeight;\n\n          if (0 === o) {\n            for (var a = 0; a !== i; ++a) {\n              r[n + a] = r[a];\n            }\n\n            o = t;\n          } else {\n            o += t;\n            var s = t / o;\n\n            this._mixBufferRegion(r, n, 0, s, i);\n          }\n\n          this.cumulativeWeight = o;\n        },\n        apply: function apply(e) {\n          var t = this.valueSize,\n              r = this.buffer,\n              i = e * t + t,\n              n = this.cumulativeWeight,\n              o = this.binding;\n\n          if (this.cumulativeWeight = 0, n < 1) {\n            var a = 3 * t;\n\n            this._mixBufferRegion(r, i, a, 1 - n, t);\n          }\n\n          for (var s = t, c = t + t; s !== c; ++s) {\n            if (r[s] !== r[s + t]) {\n              o.setValue(r, i);\n              break;\n            }\n          }\n        },\n        saveOriginalState: function saveOriginalState() {\n          var e = this.binding,\n              t = this.buffer,\n              r = this.valueSize,\n              i = 3 * r;\n          e.getValue(t, i);\n\n          for (var n = r, o = i; n !== o; ++n) {\n            t[n] = t[i + n % r];\n          }\n\n          this.cumulativeWeight = 0;\n        },\n        restoreOriginalState: function restoreOriginalState() {\n          var e = 3 * this.valueSize;\n          this.binding.setValue(this.buffer, e);\n        },\n        _select: function _select(e, t, r, i, n) {\n          if (i >= .5) for (var o = 0; o !== n; ++o) {\n            e[t + o] = e[r + o];\n          }\n        },\n        _slerp: function _slerp(e, t, r, i) {\n          a.slerpFlat(e, t, e, t, e, r, i);\n        },\n        _lerp: function _lerp(e, t, r, i, n) {\n          for (var o = 1 - i, a = 0; a !== n; ++a) {\n            var s = t + a;\n            e[s] = e[s] * o + e[r + a] * i;\n          }\n        }\n      });\n      var Sc = \"\\\\[\\\\]\\\\.:\\\\/\";\n      Object.assign(Nn.prototype, {\n        getValue: function getValue(e, t) {\n          this.bind();\n          var r = this._targetGroup.nCachedObjects_,\n              i = this._bindings[r];\n          void 0 !== i && i.getValue(e, t);\n        },\n        setValue: function setValue(e, t) {\n          for (var r = this._bindings, i = this._targetGroup.nCachedObjects_, n = r.length; i !== n; ++i) {\n            r[i].setValue(e, t);\n          }\n        },\n        bind: function bind() {\n          for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, r = e.length; t !== r; ++t) {\n            e[t].bind();\n          }\n        },\n        unbind: function unbind() {\n          for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, r = e.length; t !== r; ++t) {\n            e[t].unbind();\n          }\n        }\n      }), Object.assign(Fn, {\n        Composite: Nn,\n        create: function create(e, t, r) {\n          return e && e.isAnimationObjectGroup ? new Fn.Composite(e, t, r) : new Fn(e, t, r);\n        },\n        sanitizeNodeName: function () {\n          var e = new RegExp(\"[\" + Sc + \"]\", \"g\");\n          return function (t) {\n            return t.replace(/\\s/g, \"_\").replace(e, \"\");\n          };\n        }(),\n        parseTrackName: function () {\n          var e = \"[^\" + Sc + \"]\",\n              t = \"[^\" + Sc.replace(\"\\\\.\", \"\") + \"]\",\n              r = /((?:WC+[\\/:])*)/.source.replace(\"WC\", e),\n              i = /(WCOD+)?/.source.replace(\"WCOD\", t),\n              n = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace(\"WC\", e),\n              o = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace(\"WC\", e),\n              a = new RegExp(\"^\" + r + i + n + o + \"$\"),\n              s = [\"material\", \"materials\", \"bones\"];\n          return function (e) {\n            var t = a.exec(e);\n            if (!t) throw new Error(\"PropertyBinding: Cannot parse trackName: \" + e);\n            var r = {\n              nodeName: t[2],\n              objectName: t[3],\n              objectIndex: t[4],\n              propertyName: t[5],\n              propertyIndex: t[6]\n            },\n                i = r.nodeName && r.nodeName.lastIndexOf(\".\");\n\n            if (void 0 !== i && -1 !== i) {\n              var n = r.nodeName.substring(i + 1);\n              -1 !== s.indexOf(n) && (r.nodeName = r.nodeName.substring(0, i), r.objectName = n);\n            }\n\n            if (null === r.propertyName || 0 === r.propertyName.length) throw new Error(\"PropertyBinding: can not parse propertyName from trackName: \" + e);\n            return r;\n          };\n        }(),\n        findNode: function findNode(e, t) {\n          if (!t || \"\" === t || \"root\" === t || \".\" === t || -1 === t || t === e.name || t === e.uuid) return e;\n\n          if (e.skeleton) {\n            var r = e.skeleton.getBoneByName(t);\n            if (void 0 !== r) return r;\n          }\n\n          if (e.children) {\n            var i = function i(e) {\n              for (var r = 0; r < e.length; r++) {\n                var n = e[r];\n                if (n.name === t || n.uuid === t) return n;\n                var o = i(n.children);\n                if (o) return o;\n              }\n\n              return null;\n            },\n                n = i(e.children);\n\n            if (n) return n;\n          }\n\n          return null;\n        }\n      }), Object.assign(Fn.prototype, {\n        _getValue_unavailable: function _getValue_unavailable() {},\n        _setValue_unavailable: function _setValue_unavailable() {},\n        BindingType: {\n          Direct: 0,\n          EntireArray: 1,\n          ArrayElement: 2,\n          HasFromToArray: 3\n        },\n        Versioning: {\n          None: 0,\n          NeedsUpdate: 1,\n          MatrixWorldNeedsUpdate: 2\n        },\n        GetterByBindingType: [function (e, t) {\n          e[t] = this.node[this.propertyName];\n        }, function (e, t) {\n          for (var r = this.resolvedProperty, i = 0, n = r.length; i !== n; ++i) {\n            e[t++] = r[i];\n          }\n        }, function (e, t) {\n          e[t] = this.resolvedProperty[this.propertyIndex];\n        }, function (e, t) {\n          this.resolvedProperty.toArray(e, t);\n        }],\n        SetterByBindingTypeAndVersioning: [[function (e, t) {\n          this.targetObject[this.propertyName] = e[t];\n        }, function (e, t) {\n          this.targetObject[this.propertyName] = e[t], this.targetObject.needsUpdate = !0;\n        }, function (e, t) {\n          this.targetObject[this.propertyName] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0;\n        }], [function (e, t) {\n          for (var r = this.resolvedProperty, i = 0, n = r.length; i !== n; ++i) {\n            r[i] = e[t++];\n          }\n        }, function (e, t) {\n          for (var r = this.resolvedProperty, i = 0, n = r.length; i !== n; ++i) {\n            r[i] = e[t++];\n          }\n\n          this.targetObject.needsUpdate = !0;\n        }, function (e, t) {\n          for (var r = this.resolvedProperty, i = 0, n = r.length; i !== n; ++i) {\n            r[i] = e[t++];\n          }\n\n          this.targetObject.matrixWorldNeedsUpdate = !0;\n        }], [function (e, t) {\n          this.resolvedProperty[this.propertyIndex] = e[t];\n        }, function (e, t) {\n          this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.needsUpdate = !0;\n        }, function (e, t) {\n          this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0;\n        }], [function (e, t) {\n          this.resolvedProperty.fromArray(e, t);\n        }, function (e, t) {\n          this.resolvedProperty.fromArray(e, t), this.targetObject.needsUpdate = !0;\n        }, function (e, t) {\n          this.resolvedProperty.fromArray(e, t), this.targetObject.matrixWorldNeedsUpdate = !0;\n        }]],\n        getValue: function getValue(e, t) {\n          this.bind(), this.getValue(e, t);\n        },\n        setValue: function setValue(e, t) {\n          this.bind(), this.setValue(e, t);\n        },\n        bind: function bind() {\n          var e = this.node,\n              t = this.parsedPath,\n              r = t.objectName,\n              i = t.propertyName,\n              n = t.propertyIndex;\n          if (e || (e = Fn.findNode(this.rootNode, t.nodeName) || this.rootNode, this.node = e), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, !e) return void console.error(\"THREE.PropertyBinding: Trying to update node for track: \" + this.path + \" but it wasn't found.\");\n\n          if (r) {\n            var o = t.objectIndex;\n\n            switch (r) {\n              case \"materials\":\n                if (!e.material) return void console.error(\"THREE.PropertyBinding: Can not bind to material as node does not have a material.\", this);\n                if (!e.material.materials) return void console.error(\"THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.\", this);\n                e = e.material.materials;\n                break;\n\n              case \"bones\":\n                if (!e.skeleton) return void console.error(\"THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.\", this);\n                e = e.skeleton.bones;\n\n                for (var a = 0; a < e.length; a++) {\n                  if (e[a].name === o) {\n                    o = a;\n                    break;\n                  }\n                }\n\n                break;\n\n              default:\n                if (void 0 === e[r]) return void console.error(\"THREE.PropertyBinding: Can not bind to objectName of node undefined.\", this);\n                e = e[r];\n            }\n\n            if (void 0 !== o) {\n              if (void 0 === e[o]) return void console.error(\"THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.\", this, e);\n              e = e[o];\n            }\n          }\n\n          var s = e[i];\n\n          if (void 0 === s) {\n            var c = t.nodeName;\n            return void console.error(\"THREE.PropertyBinding: Trying to update property for track: \" + c + \".\" + i + \" but it wasn't found.\", e);\n          }\n\n          var l = this.Versioning.None;\n          void 0 !== e.needsUpdate ? (l = this.Versioning.NeedsUpdate, this.targetObject = e) : void 0 !== e.matrixWorldNeedsUpdate && (l = this.Versioning.MatrixWorldNeedsUpdate, this.targetObject = e);\n          var u = this.BindingType.Direct;\n\n          if (void 0 !== n) {\n            if (\"morphTargetInfluences\" === i) {\n              if (!e.geometry) return void console.error(\"THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.\", this);\n\n              if (e.geometry.isBufferGeometry) {\n                if (!e.geometry.morphAttributes) return void console.error(\"THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.\", this);\n\n                for (var a = 0; a < this.node.geometry.morphAttributes.position.length; a++) {\n                  if (e.geometry.morphAttributes.position[a].name === n) {\n                    n = a;\n                    break;\n                  }\n                }\n              } else {\n                if (!e.geometry.morphTargets) return void console.error(\"THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.\", this);\n\n                for (var a = 0; a < this.node.geometry.morphTargets.length; a++) {\n                  if (e.geometry.morphTargets[a].name === n) {\n                    n = a;\n                    break;\n                  }\n                }\n              }\n            }\n\n            u = this.BindingType.ArrayElement, this.resolvedProperty = s, this.propertyIndex = n;\n          } else void 0 !== s.fromArray && void 0 !== s.toArray ? (u = this.BindingType.HasFromToArray, this.resolvedProperty = s) : Array.isArray(s) ? (u = this.BindingType.EntireArray, this.resolvedProperty = s) : this.propertyName = i;\n\n          this.getValue = this.GetterByBindingType[u], this.setValue = this.SetterByBindingTypeAndVersioning[u][l];\n        },\n        unbind: function unbind() {\n          this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;\n        }\n      }), //!\\ DECLARE ALIAS AFTER assign prototype !\n      Object.assign(Fn.prototype, {\n        _getValue_unbound: Fn.prototype.getValue,\n        _setValue_unbound: Fn.prototype.setValue\n      }), Object.assign(zn.prototype, {\n        isAnimationObjectGroup: !0,\n        add: function add() {\n          for (var e = this._objects, t = e.length, r = this.nCachedObjects_, i = this._indicesByUUID, n = this._paths, o = this._parsedPaths, a = this._bindings, s = a.length, c = void 0, l = 0, u = arguments.length; l !== u; ++l) {\n            var h = arguments[l],\n                d = h.uuid,\n                p = i[d];\n\n            if (void 0 === p) {\n              p = t++, i[d] = p, e.push(h);\n\n              for (var f = 0, m = s; f !== m; ++f) {\n                a[f].push(new Fn(h, n[f], o[f]));\n              }\n            } else if (p < r) {\n              c = e[p];\n              var v = --r,\n                  g = e[v];\n              i[g.uuid] = p, e[p] = g, i[d] = v, e[v] = h;\n\n              for (var f = 0, m = s; f !== m; ++f) {\n                var y = a[f],\n                    x = y[v],\n                    _ = y[p];\n                y[p] = x, void 0 === _ && (_ = new Fn(h, n[f], o[f])), y[v] = _;\n              }\n            } else e[p] !== c && console.error(\"THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.\");\n          }\n\n          this.nCachedObjects_ = r;\n        },\n        remove: function remove() {\n          for (var e = this._objects, t = this.nCachedObjects_, r = this._indicesByUUID, i = this._bindings, n = i.length, o = 0, a = arguments.length; o !== a; ++o) {\n            var s = arguments[o],\n                c = s.uuid,\n                l = r[c];\n\n            if (void 0 !== l && l >= t) {\n              var u = t++,\n                  h = e[u];\n              r[h.uuid] = l, e[l] = h, r[c] = u, e[u] = s;\n\n              for (var d = 0, p = n; d !== p; ++d) {\n                var f = i[d],\n                    m = f[u],\n                    v = f[l];\n                f[l] = m, f[u] = v;\n              }\n            }\n          }\n\n          this.nCachedObjects_ = t;\n        },\n        uncache: function uncache() {\n          for (var e = this._objects, t = e.length, r = this.nCachedObjects_, i = this._indicesByUUID, n = this._bindings, o = n.length, a = 0, s = arguments.length; a !== s; ++a) {\n            var c = arguments[a],\n                l = c.uuid,\n                u = i[l];\n            if (void 0 !== u) if (delete i[l], u < r) {\n              var h = --r,\n                  d = e[h],\n                  p = --t,\n                  f = e[p];\n              i[d.uuid] = u, e[u] = d, i[f.uuid] = h, e[h] = f, e.pop();\n\n              for (var m = 0, v = o; m !== v; ++m) {\n                var g = n[m],\n                    y = g[h],\n                    x = g[p];\n                g[u] = y, g[h] = x, g.pop();\n              }\n            } else {\n              var p = --t,\n                  f = e[p];\n              i[f.uuid] = u, e[u] = f, e.pop();\n\n              for (var m = 0, v = o; m !== v; ++m) {\n                var g = n[m];\n                g[u] = g[p], g.pop();\n              }\n            }\n          }\n\n          this.nCachedObjects_ = r;\n        },\n        subscribe_: function subscribe_(e, t) {\n          var r = this._bindingsIndicesByPath,\n              i = r[e],\n              n = this._bindings;\n          if (void 0 !== i) return n[i];\n          var o = this._paths,\n              a = this._parsedPaths,\n              s = this._objects,\n              c = s.length,\n              l = this.nCachedObjects_,\n              u = new Array(c);\n          i = n.length, r[e] = i, o.push(e), a.push(t), n.push(u);\n\n          for (var h = l, d = s.length; h !== d; ++h) {\n            var p = s[h];\n            u[h] = new Fn(p, e, t);\n          }\n\n          return u;\n        },\n        unsubscribe_: function unsubscribe_(e) {\n          var t = this._bindingsIndicesByPath,\n              r = t[e];\n\n          if (void 0 !== r) {\n            var i = this._paths,\n                n = this._parsedPaths,\n                o = this._bindings,\n                a = o.length - 1,\n                s = o[a];\n            t[e[a]] = r, o[r] = s, o.pop(), n[r] = n[a], n.pop(), i[r] = i[a], i.pop();\n          }\n        }\n      }), Object.assign(Bn.prototype, {\n        play: function play() {\n          return this._mixer._activateAction(this), this;\n        },\n        stop: function stop() {\n          return this._mixer._deactivateAction(this), this.reset();\n        },\n        reset: function reset() {\n          return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping();\n        },\n        isRunning: function isRunning() {\n          return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this);\n        },\n        isScheduled: function isScheduled() {\n          return this._mixer._isActiveAction(this);\n        },\n        startAt: function startAt(e) {\n          return this._startTime = e, this;\n        },\n        setLoop: function setLoop(e, t) {\n          return this.loop = e, this.repetitions = t, this;\n        },\n        setEffectiveWeight: function setEffectiveWeight(e) {\n          return this.weight = e, this._effectiveWeight = this.enabled ? e : 0, this.stopFading();\n        },\n        getEffectiveWeight: function getEffectiveWeight() {\n          return this._effectiveWeight;\n        },\n        fadeIn: function fadeIn(e) {\n          return this._scheduleFading(e, 0, 1);\n        },\n        fadeOut: function fadeOut(e) {\n          return this._scheduleFading(e, 1, 0);\n        },\n        crossFadeFrom: function crossFadeFrom(e, t, r) {\n          if (e.fadeOut(t), this.fadeIn(t), r) {\n            var i = this._clip.duration,\n                n = e._clip.duration,\n                o = n / i,\n                a = i / n;\n            e.warp(1, o, t), this.warp(a, 1, t);\n          }\n\n          return this;\n        },\n        crossFadeTo: function crossFadeTo(e, t, r) {\n          return e.crossFadeFrom(this, t, r);\n        },\n        stopFading: function stopFading() {\n          var e = this._weightInterpolant;\n          return null !== e && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;\n        },\n        setEffectiveTimeScale: function setEffectiveTimeScale(e) {\n          return this.timeScale = e, this._effectiveTimeScale = this.paused ? 0 : e, this.stopWarping();\n        },\n        getEffectiveTimeScale: function getEffectiveTimeScale() {\n          return this._effectiveTimeScale;\n        },\n        setDuration: function setDuration(e) {\n          return this.timeScale = this._clip.duration / e, this.stopWarping();\n        },\n        syncWith: function syncWith(e) {\n          return this.time = e.time, this.timeScale = e.timeScale, this.stopWarping();\n        },\n        halt: function halt(e) {\n          return this.warp(this._effectiveTimeScale, 0, e);\n        },\n        warp: function warp(e, t, r) {\n          var i = this._mixer,\n              n = i.time,\n              o = this._timeScaleInterpolant,\n              a = this.timeScale;\n          null === o && (o = i._lendControlInterpolant(), this._timeScaleInterpolant = o);\n          var s = o.parameterPositions,\n              c = o.sampleValues;\n          return s[0] = n, s[1] = n + r, c[0] = e / a, c[1] = t / a, this;\n        },\n        stopWarping: function stopWarping() {\n          var e = this._timeScaleInterpolant;\n          return null !== e && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;\n        },\n        getMixer: function getMixer() {\n          return this._mixer;\n        },\n        getClip: function getClip() {\n          return this._clip;\n        },\n        getRoot: function getRoot() {\n          return this._localRoot || this._mixer._root;\n        },\n        _update: function _update(e, t, r, i) {\n          if (!this.enabled) return void this._updateWeight(e);\n          var n = this._startTime;\n\n          if (null !== n) {\n            var o = (e - n) * r;\n            if (o < 0 || 0 === r) return;\n            this._startTime = null, t = r * o;\n          }\n\n          t *= this._updateTimeScale(e);\n\n          var a = this._updateTime(t),\n              s = this._updateWeight(e);\n\n          if (s > 0) for (var c = this._interpolants, l = this._propertyBindings, u = 0, h = c.length; u !== h; ++u) {\n            c[u].evaluate(a), l[u].accumulate(i, s);\n          }\n        },\n        _updateWeight: function _updateWeight(e) {\n          var t = 0;\n\n          if (this.enabled) {\n            t = this.weight;\n            var r = this._weightInterpolant;\n\n            if (null !== r) {\n              var i = r.evaluate(e)[0];\n              t *= i, e > r.parameterPositions[1] && (this.stopFading(), 0 === i && (this.enabled = !1));\n            }\n          }\n\n          return this._effectiveWeight = t, t;\n        },\n        _updateTimeScale: function _updateTimeScale(e) {\n          var t = 0;\n\n          if (!this.paused) {\n            t = this.timeScale;\n            var r = this._timeScaleInterpolant;\n\n            if (null !== r) {\n              t *= r.evaluate(e)[0], e > r.parameterPositions[1] && (this.stopWarping(), 0 === t ? this.paused = !0 : this.timeScale = t);\n            }\n          }\n\n          return this._effectiveTimeScale = t, t;\n        },\n        _updateTime: function _updateTime(e) {\n          var t = this.time + e;\n          if (0 === e) return t;\n          var r = this._clip.duration,\n              i = this.loop,\n              n = this._loopCount;\n\n          if (2200 === i) {\n            -1 === n && (this._loopCount = 0, this._setEndings(!0, !0, !1));\n\n            e: {\n              if (t >= r) t = r;else {\n                if (!(t < 0)) break e;\n                t = 0;\n              }\n              this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, this._mixer.dispatchEvent({\n                type: \"finished\",\n                action: this,\n                direction: e < 0 ? -1 : 1\n              });\n            }\n          } else {\n            var o = 2202 === i;\n\n            if (-1 === n && (e >= 0 ? (n = 0, this._setEndings(!0, 0 === this.repetitions, o)) : this._setEndings(0 === this.repetitions, !0, o)), t >= r || t < 0) {\n              var a = Math.floor(t / r);\n              t -= r * a, n += Math.abs(a);\n              var s = this.repetitions - n;\n              if (s <= 0) this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, t = e > 0 ? r : 0, this._mixer.dispatchEvent({\n                type: \"finished\",\n                action: this,\n                direction: e > 0 ? 1 : -1\n              });else {\n                if (1 === s) {\n                  var c = e < 0;\n\n                  this._setEndings(c, !c, o);\n                } else this._setEndings(!1, !1, o);\n\n                this._loopCount = n, this._mixer.dispatchEvent({\n                  type: \"loop\",\n                  action: this,\n                  loopDelta: a\n                });\n              }\n            }\n\n            if (o && 1 == (1 & n)) return this.time = t, r - t;\n          }\n\n          return this.time = t, t;\n        },\n        _setEndings: function _setEndings(e, t, r) {\n          var i = this._interpolantSettings;\n          r ? (i.endingStart = 2401, i.endingEnd = 2401) : (i.endingStart = e ? this.zeroSlopeAtStart ? 2401 : Ss : 2402, i.endingEnd = t ? this.zeroSlopeAtEnd ? 2401 : Ss : 2402);\n        },\n        _scheduleFading: function _scheduleFading(e, t, r) {\n          var i = this._mixer,\n              n = i.time,\n              o = this._weightInterpolant;\n          null === o && (o = i._lendControlInterpolant(), this._weightInterpolant = o);\n          var a = o.parameterPositions,\n              s = o.sampleValues;\n          return a[0] = n, s[0] = t, a[1] = n + e, s[1] = r, this;\n        }\n      }), Gn.prototype = Object.assign(Object.create(i.prototype), {\n        constructor: Gn,\n        _bindAction: function _bindAction(e, t) {\n          var r = e._localRoot || this._root,\n              i = e._clip.tracks,\n              n = i.length,\n              o = e._propertyBindings,\n              a = e._interpolants,\n              s = r.uuid,\n              c = this._bindingsByRootAndName,\n              l = c[s];\n          void 0 === l && (l = {}, c[s] = l);\n\n          for (var u = 0; u !== n; ++u) {\n            var h = i[u],\n                d = h.name,\n                p = l[d];\n            if (void 0 !== p) o[u] = p;else {\n              if (void 0 !== (p = o[u])) {\n                null === p._cacheIndex && (++p.referenceCount, this._addInactiveBinding(p, s, d));\n                continue;\n              }\n\n              var f = t && t._propertyBindings[u].binding.parsedPath;\n              p = new On(Fn.create(r, d, f), h.ValueTypeName, h.getValueSize()), ++p.referenceCount, this._addInactiveBinding(p, s, d), o[u] = p;\n            }\n            a[u].resultBuffer = p.buffer;\n          }\n        },\n        _activateAction: function _activateAction(e) {\n          if (!this._isActiveAction(e)) {\n            if (null === e._cacheIndex) {\n              var t = (e._localRoot || this._root).uuid,\n                  r = e._clip.uuid,\n                  i = this._actionsByClip[r];\n              this._bindAction(e, i && i.knownActions[0]), this._addInactiveAction(e, r, t);\n            }\n\n            for (var n = e._propertyBindings, o = 0, a = n.length; o !== a; ++o) {\n              var s = n[o];\n              0 == s.useCount++ && (this._lendBinding(s), s.saveOriginalState());\n            }\n\n            this._lendAction(e);\n          }\n        },\n        _deactivateAction: function _deactivateAction(e) {\n          if (this._isActiveAction(e)) {\n            for (var t = e._propertyBindings, r = 0, i = t.length; r !== i; ++r) {\n              var n = t[r];\n              0 == --n.useCount && (n.restoreOriginalState(), this._takeBackBinding(n));\n            }\n\n            this._takeBackAction(e);\n          }\n        },\n        _initMemoryManager: function _initMemoryManager() {\n          this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;\n          var e = this;\n          this.stats = {\n            actions: {\n              get total() {\n                return e._actions.length;\n              },\n\n              get inUse() {\n                return e._nActiveActions;\n              }\n\n            },\n            bindings: {\n              get total() {\n                return e._bindings.length;\n              },\n\n              get inUse() {\n                return e._nActiveBindings;\n              }\n\n            },\n            controlInterpolants: {\n              get total() {\n                return e._controlInterpolants.length;\n              },\n\n              get inUse() {\n                return e._nActiveControlInterpolants;\n              }\n\n            }\n          };\n        },\n        _isActiveAction: function _isActiveAction(e) {\n          var t = e._cacheIndex;\n          return null !== t && t < this._nActiveActions;\n        },\n        _addInactiveAction: function _addInactiveAction(e, t, r) {\n          var i = this._actions,\n              n = this._actionsByClip,\n              o = n[t];\n          if (void 0 === o) o = {\n            knownActions: [e],\n            actionByRoot: {}\n          }, e._byClipCacheIndex = 0, n[t] = o;else {\n            var a = o.knownActions;\n            e._byClipCacheIndex = a.length, a.push(e);\n          }\n          e._cacheIndex = i.length, i.push(e), o.actionByRoot[r] = e;\n        },\n        _removeInactiveAction: function _removeInactiveAction(e) {\n          var t = this._actions,\n              r = t[t.length - 1],\n              i = e._cacheIndex;\n          r._cacheIndex = i, t[i] = r, t.pop(), e._cacheIndex = null;\n          var n = e._clip.uuid,\n              o = this._actionsByClip,\n              a = o[n],\n              s = a.knownActions,\n              c = s[s.length - 1],\n              l = e._byClipCacheIndex;\n          c._byClipCacheIndex = l, s[l] = c, s.pop(), e._byClipCacheIndex = null, delete a.actionByRoot[(e._localRoot || this._root).uuid], 0 === s.length && delete o[n], this._removeInactiveBindingsForAction(e);\n        },\n        _removeInactiveBindingsForAction: function _removeInactiveBindingsForAction(e) {\n          for (var t = e._propertyBindings, r = 0, i = t.length; r !== i; ++r) {\n            var n = t[r];\n            0 == --n.referenceCount && this._removeInactiveBinding(n);\n          }\n        },\n        _lendAction: function _lendAction(e) {\n          var t = this._actions,\n              r = e._cacheIndex,\n              i = this._nActiveActions++,\n              n = t[i];\n          e._cacheIndex = i, t[i] = e, n._cacheIndex = r, t[r] = n;\n        },\n        _takeBackAction: function _takeBackAction(e) {\n          var t = this._actions,\n              r = e._cacheIndex,\n              i = --this._nActiveActions,\n              n = t[i];\n          e._cacheIndex = i, t[i] = e, n._cacheIndex = r, t[r] = n;\n        },\n        _addInactiveBinding: function _addInactiveBinding(e, t, r) {\n          var i = this._bindingsByRootAndName,\n              n = i[t],\n              o = this._bindings;\n          void 0 === n && (n = {}, i[t] = n), n[r] = e, e._cacheIndex = o.length, o.push(e);\n        },\n        _removeInactiveBinding: function _removeInactiveBinding(e) {\n          var t = this._bindings,\n              r = e.binding,\n              i = r.rootNode.uuid,\n              n = r.path,\n              o = this._bindingsByRootAndName,\n              a = o[i],\n              s = t[t.length - 1],\n              c = e._cacheIndex;\n          s._cacheIndex = c, t[c] = s, t.pop(), delete a[n];\n\n          e: {\n            for (var l in a) {\n              break e;\n            }\n\n            delete o[i];\n          }\n        },\n        _lendBinding: function _lendBinding(e) {\n          var t = this._bindings,\n              r = e._cacheIndex,\n              i = this._nActiveBindings++,\n              n = t[i];\n          e._cacheIndex = i, t[i] = e, n._cacheIndex = r, t[r] = n;\n        },\n        _takeBackBinding: function _takeBackBinding(e) {\n          var t = this._bindings,\n              r = e._cacheIndex,\n              i = --this._nActiveBindings,\n              n = t[i];\n          e._cacheIndex = i, t[i] = e, n._cacheIndex = r, t[r] = n;\n        },\n        _lendControlInterpolant: function _lendControlInterpolant() {\n          var e = this._controlInterpolants,\n              t = this._nActiveControlInterpolants++,\n              r = e[t];\n          return void 0 === r && (r = new dn(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer), r.__cacheIndex = t, e[t] = r), r;\n        },\n        _takeBackControlInterpolant: function _takeBackControlInterpolant(e) {\n          var t = this._controlInterpolants,\n              r = e.__cacheIndex,\n              i = --this._nActiveControlInterpolants,\n              n = t[i];\n          e.__cacheIndex = i, t[i] = e, n.__cacheIndex = r, t[r] = n;\n        },\n        _controlInterpolantsResultBuffer: new Float32Array(1),\n        clipAction: function clipAction(e, t) {\n          var r = t || this._root,\n              i = r.uuid,\n              n = \"string\" == typeof e ? vn.findByName(r, e) : e,\n              o = null !== n ? n.uuid : e,\n              a = this._actionsByClip[o],\n              s = null;\n\n          if (void 0 !== a) {\n            var c = a.actionByRoot[i];\n            if (void 0 !== c) return c;\n            s = a.knownActions[0], null === n && (n = s._clip);\n          }\n\n          if (null === n) return null;\n          var l = new Bn(this, n, t);\n          return this._bindAction(l, s), this._addInactiveAction(l, o, i), l;\n        },\n        existingAction: function existingAction(e, t) {\n          var r = t || this._root,\n              i = r.uuid,\n              n = \"string\" == typeof e ? vn.findByName(r, e) : e,\n              o = n ? n.uuid : e,\n              a = this._actionsByClip[o];\n          return void 0 !== a ? a.actionByRoot[i] || null : null;\n        },\n        stopAllAction: function stopAllAction() {\n          var e = this._actions,\n              t = this._nActiveActions,\n              r = this._bindings,\n              i = this._nActiveBindings;\n          this._nActiveActions = 0, this._nActiveBindings = 0;\n\n          for (var n = 0; n !== t; ++n) {\n            e[n].reset();\n          }\n\n          for (var n = 0; n !== i; ++n) {\n            r[n].useCount = 0;\n          }\n\n          return this;\n        },\n        update: function update(e) {\n          e *= this.timeScale;\n\n          for (var t = this._actions, r = this._nActiveActions, i = this.time += e, n = Math.sign(e), o = this._accuIndex ^= 1, a = 0; a !== r; ++a) {\n            t[a]._update(i, e, n, o);\n          }\n\n          for (var s = this._bindings, c = this._nActiveBindings, a = 0; a !== c; ++a) {\n            s[a].apply(o);\n          }\n\n          return this;\n        },\n        getRoot: function getRoot() {\n          return this._root;\n        },\n        uncacheClip: function uncacheClip(e) {\n          var t = this._actions,\n              r = e.uuid,\n              i = this._actionsByClip,\n              n = i[r];\n\n          if (void 0 !== n) {\n            for (var o = n.knownActions, a = 0, s = o.length; a !== s; ++a) {\n              var c = o[a];\n\n              this._deactivateAction(c);\n\n              var l = c._cacheIndex,\n                  u = t[t.length - 1];\n              c._cacheIndex = null, c._byClipCacheIndex = null, u._cacheIndex = l, t[l] = u, t.pop(), this._removeInactiveBindingsForAction(c);\n            }\n\n            delete i[r];\n          }\n        },\n        uncacheRoot: function uncacheRoot(e) {\n          var t = e.uuid,\n              r = this._actionsByClip;\n\n          for (var i in r) {\n            var n = r[i].actionByRoot,\n                o = n[t];\n            void 0 !== o && (this._deactivateAction(o), this._removeInactiveAction(o));\n          }\n\n          var a = this._bindingsByRootAndName,\n              s = a[t];\n          if (void 0 !== s) for (var c in s) {\n            var l = s[c];\n            l.restoreOriginalState(), this._removeInactiveBinding(l);\n          }\n        },\n        uncacheAction: function uncacheAction(e, t) {\n          var r = this.existingAction(e, t);\n          null !== r && (this._deactivateAction(r), this._removeInactiveAction(r));\n        }\n      }), Hn.prototype.clone = function () {\n        return new Hn(void 0 === this.value.clone ? this.value : this.value.clone());\n      }, jn.prototype = Object.assign(Object.create(B.prototype), {\n        constructor: jn,\n        isInstancedBufferGeometry: !0,\n        copy: function copy(e) {\n          return B.prototype.copy.call(this, e), this.maxInstancedCount = e.maxInstancedCount, this;\n        },\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        }\n      }), Object.defineProperties(Vn.prototype, {\n        count: {\n          get: function get() {\n            return this.data.count;\n          }\n        },\n        array: {\n          get: function get() {\n            return this.data.array;\n          }\n        }\n      }), Object.assign(Vn.prototype, {\n        isInterleavedBufferAttribute: !0,\n        setX: function setX(e, t) {\n          return this.data.array[e * this.data.stride + this.offset] = t, this;\n        },\n        setY: function setY(e, t) {\n          return this.data.array[e * this.data.stride + this.offset + 1] = t, this;\n        },\n        setZ: function setZ(e, t) {\n          return this.data.array[e * this.data.stride + this.offset + 2] = t, this;\n        },\n        setW: function setW(e, t) {\n          return this.data.array[e * this.data.stride + this.offset + 3] = t, this;\n        },\n        getX: function getX(e) {\n          return this.data.array[e * this.data.stride + this.offset];\n        },\n        getY: function getY(e) {\n          return this.data.array[e * this.data.stride + this.offset + 1];\n        },\n        getZ: function getZ(e) {\n          return this.data.array[e * this.data.stride + this.offset + 2];\n        },\n        getW: function getW(e) {\n          return this.data.array[e * this.data.stride + this.offset + 3];\n        },\n        setXY: function setXY(e, t, r) {\n          return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = r, this;\n        },\n        setXYZ: function setXYZ(e, t, r, i) {\n          return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = r, this.data.array[e + 2] = i, this;\n        },\n        setXYZW: function setXYZW(e, t, r, i, n) {\n          return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = r, this.data.array[e + 2] = i, this.data.array[e + 3] = n, this;\n        }\n      }), Object.defineProperty(kn.prototype, \"needsUpdate\", {\n        set: function set(e) {\n          !0 === e && this.version++;\n        }\n      }), Object.assign(kn.prototype, {\n        isInterleavedBuffer: !0,\n        onUploadCallback: function onUploadCallback() {},\n        setArray: function setArray(e) {\n          if (Array.isArray(e)) throw new TypeError(\"THREE.BufferAttribute: array should be a Typed Array.\");\n          return this.count = void 0 !== e ? e.length / this.stride : 0, this.array = e, this;\n        },\n        setDynamic: function setDynamic(e) {\n          return this.dynamic = e, this;\n        },\n        copy: function copy(e) {\n          return this.array = new e.array.constructor(e.array), this.count = e.count, this.stride = e.stride, this.dynamic = e.dynamic, this;\n        },\n        copyAt: function copyAt(e, t, r) {\n          e *= this.stride, r *= t.stride;\n\n          for (var i = 0, n = this.stride; i < n; i++) {\n            this.array[e + i] = t.array[r + i];\n          }\n\n          return this;\n        },\n        set: function set(e, t) {\n          return void 0 === t && (t = 0), this.array.set(e, t), this;\n        },\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        },\n        onUpload: function onUpload(e) {\n          return this.onUploadCallback = e, this;\n        }\n      }), Wn.prototype = Object.assign(Object.create(kn.prototype), {\n        constructor: Wn,\n        isInstancedInterleavedBuffer: !0,\n        copy: function copy(e) {\n          return kn.prototype.copy.call(this, e), this.meshPerAttribute = e.meshPerAttribute, this;\n        }\n      }), Xn.prototype = Object.assign(Object.create(A.prototype), {\n        constructor: Xn,\n        isInstancedBufferAttribute: !0,\n        copy: function copy(e) {\n          return A.prototype.copy.call(this, e), this.meshPerAttribute = e.meshPerAttribute, this;\n        }\n      }), Object.assign(qn.prototype, {\n        linePrecision: 1,\n        set: function set(e, t) {\n          this.ray.set(e, t);\n        },\n        setFromCamera: function setFromCamera(e, t) {\n          t && t.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld), this.ray.direction.set(e.x, e.y, .5).unproject(t).sub(this.ray.origin).normalize()) : t && t.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (t.near + t.far) / (t.near - t.far)).unproject(t), this.ray.direction.set(0, 0, -1).transformDirection(t.matrixWorld)) : console.error(\"THREE.Raycaster: Unsupported camera type.\");\n        },\n        intersectObject: function intersectObject(e, t, r) {\n          var i = r || [];\n          return Zn(e, this, i, t), i.sort(Yn), i;\n        },\n        intersectObjects: function intersectObjects(e, t, r) {\n          var i = r || [];\n          if (!1 === Array.isArray(e)) return console.warn(\"THREE.Raycaster.intersectObjects: objects is not an Array.\"), i;\n\n          for (var n = 0, o = e.length; n < o; n++) {\n            Zn(e[n], this, i, t);\n          }\n\n          return i.sort(Yn), i;\n        }\n      }), Object.assign(Jn.prototype, {\n        start: function start() {\n          this.startTime = (\"undefined\" == typeof performance ? Date : performance).now(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0;\n        },\n        stop: function stop() {\n          this.getElapsedTime(), this.running = !1, this.autoStart = !1;\n        },\n        getElapsedTime: function getElapsedTime() {\n          return this.getDelta(), this.elapsedTime;\n        },\n        getDelta: function getDelta() {\n          var e = 0;\n          if (this.autoStart && !this.running) return this.start(), 0;\n\n          if (this.running) {\n            var t = (\"undefined\" == typeof performance ? Date : performance).now();\n            e = (t - this.oldTime) / 1e3, this.oldTime = t, this.elapsedTime += e;\n          }\n\n          return e;\n        }\n      }), Object.assign(Kn.prototype, {\n        set: function set(e, t, r) {\n          return this.radius = e, this.phi = t, this.theta = r, this;\n        },\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        },\n        copy: function copy(e) {\n          return this.radius = e.radius, this.phi = e.phi, this.theta = e.theta, this;\n        },\n        makeSafe: function makeSafe() {\n          return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)), this;\n        },\n        setFromVector3: function setFromVector3(e) {\n          return this.radius = e.length(), 0 === this.radius ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(e.x, e.z), this.phi = Math.acos(zs.clamp(e.y / this.radius, -1, 1))), this;\n        }\n      }), Object.assign(Qn.prototype, {\n        set: function set(e, t, r) {\n          return this.radius = e, this.theta = t, this.y = r, this;\n        },\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        },\n        copy: function copy(e) {\n          return this.radius = e.radius, this.theta = e.theta, this.y = e.y, this;\n        },\n        setFromVector3: function setFromVector3(e) {\n          return this.radius = Math.sqrt(e.x * e.x + e.z * e.z), this.theta = Math.atan2(e.x, e.z), this.y = e.y, this;\n        }\n      }), Object.assign($n.prototype, {\n        set: function set(e, t) {\n          return this.min.copy(e), this.max.copy(t), this;\n        },\n        setFromPoints: function setFromPoints(e) {\n          this.makeEmpty();\n\n          for (var t = 0, r = e.length; t < r; t++) {\n            this.expandByPoint(e[t]);\n          }\n\n          return this;\n        },\n        setFromCenterAndSize: function () {\n          var e = new n();\n          return function (t, r) {\n            var i = e.copy(r).multiplyScalar(.5);\n            return this.min.copy(t).sub(i), this.max.copy(t).add(i), this;\n          };\n        }(),\n        clone: function clone() {\n          return new this.constructor().copy(this);\n        },\n        copy: function copy(e) {\n          return this.min.copy(e.min), this.max.copy(e.max), this;\n        },\n        makeEmpty: function makeEmpty() {\n          return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this;\n        },\n        isEmpty: function isEmpty() {\n          return this.max.x < this.min.x || this.max.y < this.min.y;\n        },\n        getCenter: function getCenter(e) {\n          return void 0 === e && (console.warn(\"THREE.Box2: .getCenter() target is now required\"), e = new n()), this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5);\n        },\n        getSize: function getSize(e) {\n          return void 0 === e && (console.warn(\"THREE.Box2: .getSize() target is now required\"), e = new n()), this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min);\n        },\n        expandByPoint: function expandByPoint(e) {\n          return this.min.min(e), this.max.max(e), this;\n        },\n        expandByVector: function expandByVector(e) {\n          return this.min.sub(e), this.max.add(e), this;\n        },\n        expandByScalar: function expandByScalar(e) {\n          return this.min.addScalar(-e), this.max.addScalar(e), this;\n        },\n        containsPoint: function containsPoint(e) {\n          return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y);\n        },\n        containsBox: function containsBox(e) {\n          return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y;\n        },\n        getParameter: function getParameter(e, t) {\n          return void 0 === t && (console.warn(\"THREE.Box2: .getParameter() target is now required\"), t = new n()), t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y));\n        },\n        intersectsBox: function intersectsBox(e) {\n          return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y);\n        },\n        clampPoint: function clampPoint(e, t) {\n          return void 0 === t && (console.warn(\"THREE.Box2: .clampPoint() target is now required\"), t = new n()), t.copy(e).clamp(this.min, this.max);\n        },\n        distanceToPoint: function () {\n          var e = new n();\n          return function (t) {\n            return e.copy(t).clamp(this.min, this.max).sub(t).length();\n          };\n        }(),\n        intersect: function intersect(e) {\n          return this.min.max(e.min), this.max.min(e.max), this;\n        },\n        union: function union(e) {\n          return this.min.min(e.min), this.max.max(e.max), this;\n        },\n        translate: function translate(e) {\n          return this.min.add(e), this.max.add(e), this;\n        },\n        equals: function equals(e) {\n          return e.min.equals(this.min) && e.max.equals(this.max);\n        }\n      }), eo.prototype = Object.create(w.prototype), eo.prototype.constructor = eo, eo.prototype.isImmediateRenderObject = !0, to.prototype = Object.create(Ft.prototype), to.prototype.constructor = to, to.prototype.update = function () {\n        var e = new s(),\n            t = new s(),\n            r = new c();\n        return function () {\n          var i = [\"a\", \"b\", \"c\"];\n          this.object.updateMatrixWorld(!0), r.getNormalMatrix(this.object.matrixWorld);\n          var n = this.object.matrixWorld,\n              o = this.geometry.attributes.position,\n              a = this.object.geometry;\n          if (a && a.isGeometry) for (var s = a.vertices, c = a.faces, l = 0, u = 0, h = c.length; u < h; u++) {\n            for (var d = c[u], p = 0, f = d.vertexNormals.length; p < f; p++) {\n              var m = s[d[i[p]]],\n                  v = d.vertexNormals[p];\n              e.copy(m).applyMatrix4(n), t.copy(v).applyMatrix3(r).normalize().multiplyScalar(this.size).add(e), o.setXYZ(l, e.x, e.y, e.z), l += 1, o.setXYZ(l, t.x, t.y, t.z), l += 1;\n            }\n          } else if (a && a.isBufferGeometry) for (var g = a.attributes.position, y = a.attributes.normal, l = 0, p = 0, f = g.count; p < f; p++) {\n            e.set(g.getX(p), g.getY(p), g.getZ(p)).applyMatrix4(n), t.set(y.getX(p), y.getY(p), y.getZ(p)), t.applyMatrix3(r).normalize().multiplyScalar(this.size).add(e), o.setXYZ(l, e.x, e.y, e.z), l += 1, o.setXYZ(l, t.x, t.y, t.z), l += 1;\n          }\n          o.needsUpdate = !0;\n        };\n      }(), ro.prototype = Object.create(w.prototype), ro.prototype.constructor = ro, ro.prototype.dispose = function () {\n        this.cone.geometry.dispose(), this.cone.material.dispose();\n      }, ro.prototype.update = function () {\n        var e = new s(),\n            t = new s();\n        return function () {\n          this.light.updateMatrixWorld();\n          var r = this.light.distance ? this.light.distance : 1e3,\n              i = r * Math.tan(this.light.angle);\n          this.cone.scale.set(i, i, r), e.setFromMatrixPosition(this.light.matrixWorld), t.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(t.sub(e)), void 0 !== this.color ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color);\n        };\n      }(), no.prototype = Object.create(Ft.prototype), no.prototype.constructor = no, no.prototype.updateMatrixWorld = function () {\n        var e = new s(),\n            t = new o(),\n            r = new o();\n        return function (i) {\n          var n = this.bones,\n              o = this.geometry,\n              a = o.getAttribute(\"position\");\n          r.getInverse(this.root.matrixWorld);\n\n          for (var s = 0, c = 0; s < n.length; s++) {\n            var l = n[s];\n            l.parent && l.parent.isBone && (t.multiplyMatrices(r, l.matrixWorld), e.setFromMatrixPosition(t), a.setXYZ(c, e.x, e.y, e.z), t.multiplyMatrices(r, l.parent.matrixWorld), e.setFromMatrixPosition(t), a.setXYZ(c + 1, e.x, e.y, e.z), c += 2);\n          }\n\n          o.getAttribute(\"position\").needsUpdate = !0, w.prototype.updateMatrixWorld.call(this, i);\n        };\n      }(), oo.prototype = Object.create(J.prototype), oo.prototype.constructor = oo, oo.prototype.dispose = function () {\n        this.geometry.dispose(), this.material.dispose();\n      }, oo.prototype.update = function () {\n        void 0 !== this.color ? this.material.color.set(this.color) : this.material.color.copy(this.light.color);\n      }, ao.prototype = Object.create(w.prototype), ao.prototype.constructor = ao, ao.prototype.dispose = function () {\n        this.children[0].geometry.dispose(), this.children[0].material.dispose();\n      }, ao.prototype.update = function () {\n        var e = .5 * this.light.width,\n            t = .5 * this.light.height,\n            r = this.line.geometry.attributes.position,\n            i = r.array;\n        i[0] = e, i[1] = -t, i[2] = 0, i[3] = e, i[4] = t, i[5] = 0, i[6] = -e, i[7] = t, i[8] = 0, i[9] = -e, i[10] = -t, i[11] = 0, i[12] = e, i[13] = -t, i[14] = 0, r.needsUpdate = !0, void 0 !== this.color ? this.line.material.color.set(this.color) : this.line.material.color.copy(this.light.color);\n      }, so.prototype = Object.create(w.prototype), so.prototype.constructor = so, so.prototype.dispose = function () {\n        this.children[0].geometry.dispose(), this.children[0].material.dispose();\n      }, so.prototype.update = function () {\n        var e = new s(),\n            t = new y(),\n            r = new y();\n        return function () {\n          var i = this.children[0];\n          if (void 0 !== this.color) this.material.color.set(this.color);else {\n            var n = i.geometry.getAttribute(\"color\");\n            t.copy(this.light.color), r.copy(this.light.groundColor);\n\n            for (var o = 0, a = n.count; o < a; o++) {\n              var s = o < a / 2 ? t : r;\n              n.setXYZ(o, s.r, s.g, s.b);\n            }\n\n            n.needsUpdate = !0;\n          }\n          i.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate());\n        };\n      }(), co.prototype = Object.create(Ft.prototype), co.prototype.constructor = co, lo.prototype = Object.create(Ft.prototype), lo.prototype.constructor = lo, uo.prototype = Object.create(Ft.prototype), uo.prototype.constructor = uo, uo.prototype.update = function () {\n        var e = new s(),\n            t = new s(),\n            r = new c();\n        return function () {\n          this.object.updateMatrixWorld(!0), r.getNormalMatrix(this.object.matrixWorld);\n\n          for (var i = this.object.matrixWorld, n = this.geometry.attributes.position, o = this.object.geometry, a = o.vertices, s = o.faces, c = 0, l = 0, u = s.length; l < u; l++) {\n            var h = s[l],\n                d = h.normal;\n            e.copy(a[h.a]).add(a[h.b]).add(a[h.c]).divideScalar(3).applyMatrix4(i), t.copy(d).applyMatrix3(r).normalize().multiplyScalar(this.size).add(e), n.setXYZ(c, e.x, e.y, e.z), c += 1, n.setXYZ(c, t.x, t.y, t.z), c += 1;\n          }\n\n          n.needsUpdate = !0;\n        };\n      }(), ho.prototype = Object.create(w.prototype), ho.prototype.constructor = ho, ho.prototype.dispose = function () {\n        this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose();\n      }, ho.prototype.update = function () {\n        var e = new s(),\n            t = new s(),\n            r = new s();\n        return function () {\n          e.setFromMatrixPosition(this.light.matrixWorld), t.setFromMatrixPosition(this.light.target.matrixWorld), r.subVectors(t, e), this.lightPlane.lookAt(r), void 0 !== this.color ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(r), this.targetLine.scale.z = r.length();\n        };\n      }(), po.prototype = Object.create(Ft.prototype), po.prototype.constructor = po, po.prototype.update = function () {\n        function e(e, o, a, s) {\n          i.set(o, a, s).unproject(n);\n          var c = r[e];\n          if (void 0 !== c) for (var l = t.getAttribute(\"position\"), u = 0, h = c.length; u < h; u++) {\n            l.setXYZ(c[u], i.x, i.y, i.z);\n          }\n        }\n\n        var t,\n            r,\n            i = new s(),\n            n = new M();\n        return function () {\n          t = this.geometry, r = this.pointMap;\n          n.projectionMatrix.copy(this.camera.projectionMatrix), e(\"c\", 0, 0, -1), e(\"t\", 0, 0, 1), e(\"n1\", -1, -1, -1), e(\"n2\", 1, -1, -1), e(\"n3\", -1, 1, -1), e(\"n4\", 1, 1, -1), e(\"f1\", -1, -1, 1), e(\"f2\", 1, -1, 1), e(\"f3\", -1, 1, 1), e(\"f4\", 1, 1, 1), e(\"u1\", .7, 1.1, -1), e(\"u2\", -.7, 1.1, -1), e(\"u3\", 0, 2, -1), e(\"cf1\", -1, 0, 1), e(\"cf2\", 1, 0, 1), e(\"cf3\", 0, -1, 1), e(\"cf4\", 0, 1, 1), e(\"cn1\", -1, 0, -1), e(\"cn2\", 1, 0, -1), e(\"cn3\", 0, -1, -1), e(\"cn4\", 0, 1, -1), t.getAttribute(\"position\").needsUpdate = !0;\n        };\n      }(), fo.prototype = Object.create(Ft.prototype), fo.prototype.constructor = fo, fo.prototype.update = function () {\n        var e = new f();\n        return function (t) {\n          if (void 0 !== t && console.warn(\"THREE.BoxHelper: .update() has no longer arguments.\"), void 0 !== this.object && e.setFromObject(this.object), !e.isEmpty()) {\n            var r = e.min,\n                i = e.max,\n                n = this.geometry.attributes.position,\n                o = n.array;\n            o[0] = i.x, o[1] = i.y, o[2] = i.z, o[3] = r.x, o[4] = i.y, o[5] = i.z, o[6] = r.x, o[7] = r.y, o[8] = i.z, o[9] = i.x, o[10] = r.y, o[11] = i.z, o[12] = i.x, o[13] = i.y, o[14] = r.z, o[15] = r.x, o[16] = i.y, o[17] = r.z, o[18] = r.x, o[19] = r.y, o[20] = r.z, o[21] = i.x, o[22] = r.y, o[23] = r.z, n.needsUpdate = !0, this.geometry.computeBoundingSphere();\n          }\n        };\n      }(), fo.prototype.setFromObject = function (e) {\n        return this.object = e, this.update(), this;\n      }, mo.prototype = Object.create(Ft.prototype), mo.prototype.constructor = mo, mo.prototype.updateMatrixWorld = function (e) {\n        var t = this.box;\n        t.isEmpty() || (t.getCenter(this.position), t.getSize(this.scale), this.scale.multiplyScalar(.5), w.prototype.updateMatrixWorld.call(this, e));\n      }, vo.prototype = Object.create(Nt.prototype), vo.prototype.constructor = vo, vo.prototype.updateMatrixWorld = function (e) {\n        var t = -this.plane.constant;\n        Math.abs(t) < 1e-8 && (t = 1e-8), this.scale.set(.5 * this.size, .5 * this.size, t), this.lookAt(this.plane.normal), w.prototype.updateMatrixWorld.call(this, e);\n      };\n      var Tc, Ac;\n      go.prototype = Object.create(w.prototype), go.prototype.constructor = go, go.prototype.setDirection = function () {\n        var e,\n            t = new s();\n        return function (r) {\n          r.y > .99999 ? this.quaternion.set(0, 0, 0, 1) : r.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (t.set(r.z, 0, -r.x).normalize(), e = Math.acos(r.y), this.quaternion.setFromAxisAngle(t, e));\n        };\n      }(), go.prototype.setLength = function (e, t, r) {\n        void 0 === t && (t = .2 * e), void 0 === r && (r = .2 * t), this.line.scale.set(1, Math.max(0, e - t), 1), this.line.updateMatrix(), this.cone.scale.set(r, t, r), this.cone.position.y = e, this.cone.updateMatrix();\n      }, go.prototype.setColor = function (e) {\n        this.line.material.color.copy(e), this.cone.material.color.copy(e);\n      }, yo.prototype = Object.create(Ft.prototype), yo.prototype.constructor = yo;\n      wi.create = function (e, t) {\n        return console.log(\"THREE.Curve.create() has been deprecated\"), e.prototype = Object.create(wi.prototype), e.prototype.constructor = e, e.prototype.getPoint = t, e;\n      }, Object.assign(ki.prototype, {\n        createPointsGeometry: function createPointsGeometry(e) {\n          console.warn(\"THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.\");\n          var t = this.getPoints(e);\n          return this.createGeometry(t);\n        },\n        createSpacedPointsGeometry: function createSpacedPointsGeometry(e) {\n          console.warn(\"THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.\");\n          var t = this.getSpacedPoints(e);\n          return this.createGeometry(t);\n        },\n        createGeometry: function createGeometry(e) {\n          console.warn(\"THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.\");\n\n          for (var t = new T(), r = 0, i = e.length; r < i; r++) {\n            var n = e[r];\n            t.vertices.push(new s(n.x, n.y, n.z || 0));\n          }\n\n          return t;\n        }\n      }), Object.assign(Wi.prototype, {\n        fromPoints: function fromPoints(e) {\n          console.warn(\"THREE.Path: .fromPoints() has been renamed to .setFromPoints().\"), this.setFromPoints(e);\n        }\n      }), xo.prototype = Object.create(Ti.prototype), _o.prototype = Object.create(Ti.prototype), bo.prototype = Object.create(Ti.prototype), Object.assign(bo.prototype, {\n        initFromArray: function initFromArray() {\n          console.error(\"THREE.Spline: .initFromArray() has been removed.\");\n        },\n        getControlPointsArray: function getControlPointsArray() {\n          console.error(\"THREE.Spline: .getControlPointsArray() has been removed.\");\n        },\n        reparametrizeByArcLength: function reparametrizeByArcLength() {\n          console.error(\"THREE.Spline: .reparametrizeByArcLength() has been removed.\");\n        }\n      }), co.prototype.setColors = function () {\n        console.error(\"THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.\");\n      }, no.prototype.update = function () {\n        console.error(\"THREE.SkeletonHelper: update() no longer needs to be called.\");\n      }, Object.assign(xn.prototype, {\n        extractUrlBase: function extractUrlBase(e) {\n          return console.warn(\"THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.\"), xc.extractUrlBase(e);\n        }\n      }), Object.assign($n.prototype, {\n        center: function center(e) {\n          return console.warn(\"THREE.Box2: .center() has been renamed to .getCenter().\"), this.getCenter(e);\n        },\n        empty: function empty() {\n          return console.warn(\"THREE.Box2: .empty() has been renamed to .isEmpty().\"), this.isEmpty();\n        },\n        isIntersectionBox: function isIntersectionBox(e) {\n          return console.warn(\"THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().\"), this.intersectsBox(e);\n        },\n        size: function size(e) {\n          return console.warn(\"THREE.Box2: .size() has been renamed to .getSize().\"), this.getSize(e);\n        }\n      }), Object.assign(f.prototype, {\n        center: function center(e) {\n          return console.warn(\"THREE.Box3: .center() has been renamed to .getCenter().\"), this.getCenter(e);\n        },\n        empty: function empty() {\n          return console.warn(\"THREE.Box3: .empty() has been renamed to .isEmpty().\"), this.isEmpty();\n        },\n        isIntersectionBox: function isIntersectionBox(e) {\n          return console.warn(\"THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().\"), this.intersectsBox(e);\n        },\n        isIntersectionSphere: function isIntersectionSphere(e) {\n          return console.warn(\"THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().\"), this.intersectsSphere(e);\n        },\n        size: function size(e) {\n          return console.warn(\"THREE.Box3: .size() has been renamed to .getSize().\"), this.getSize(e);\n        }\n      }), Y.prototype.center = function (e) {\n        return console.warn(\"THREE.Line3: .center() has been renamed to .getCenter().\"), this.getCenter(e);\n      }, Object.assign(zs, {\n        random16: function random16() {\n          return console.warn(\"THREE.Math: .random16() has been deprecated. Use Math.random() instead.\"), Math.random();\n        },\n        nearestPowerOfTwo: function nearestPowerOfTwo(e) {\n          return console.warn(\"THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().\"), zs.floorPowerOfTwo(e);\n        },\n        nextPowerOfTwo: function nextPowerOfTwo(e) {\n          return console.warn(\"THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().\"), zs.ceilPowerOfTwo(e);\n        }\n      }), Object.assign(c.prototype, {\n        flattenToArrayOffset: function flattenToArrayOffset(e, t) {\n          return console.warn(\"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\"), this.toArray(e, t);\n        },\n        multiplyVector3: function multiplyVector3(e) {\n          return console.warn(\"THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.\"), e.applyMatrix3(this);\n        },\n        multiplyVector3Array: function multiplyVector3Array() {\n          console.error(\"THREE.Matrix3: .multiplyVector3Array() has been removed.\");\n        },\n        applyToBuffer: function applyToBuffer(e) {\n          return console.warn(\"THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.\"), this.applyToBufferAttribute(e);\n        },\n        applyToVector3Array: function applyToVector3Array() {\n          console.error(\"THREE.Matrix3: .applyToVector3Array() has been removed.\");\n        }\n      }), Object.assign(o.prototype, {\n        extractPosition: function extractPosition(e) {\n          return console.warn(\"THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().\"), this.copyPosition(e);\n        },\n        flattenToArrayOffset: function flattenToArrayOffset(e, t) {\n          return console.warn(\"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\"), this.toArray(e, t);\n        },\n        getPosition: function () {\n          var e;\n          return function () {\n            return void 0 === e && (e = new s()), console.warn(\"THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.\"), e.setFromMatrixColumn(this, 3);\n          };\n        }(),\n        setRotationFromQuaternion: function setRotationFromQuaternion(e) {\n          return console.warn(\"THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().\"), this.makeRotationFromQuaternion(e);\n        },\n        multiplyToArray: function multiplyToArray() {\n          console.warn(\"THREE.Matrix4: .multiplyToArray() has been removed.\");\n        },\n        multiplyVector3: function multiplyVector3(e) {\n          return console.warn(\"THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.\"), e.applyMatrix4(this);\n        },\n        multiplyVector4: function multiplyVector4(e) {\n          return console.warn(\"THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.\"), e.applyMatrix4(this);\n        },\n        multiplyVector3Array: function multiplyVector3Array() {\n          console.error(\"THREE.Matrix4: .multiplyVector3Array() has been removed.\");\n        },\n        rotateAxis: function rotateAxis(e) {\n          console.warn(\"THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.\"), e.transformDirection(this);\n        },\n        crossVector: function crossVector(e) {\n          return console.warn(\"THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.\"), e.applyMatrix4(this);\n        },\n        translate: function translate() {\n          console.error(\"THREE.Matrix4: .translate() has been removed.\");\n        },\n        rotateX: function rotateX() {\n          console.error(\"THREE.Matrix4: .rotateX() has been removed.\");\n        },\n        rotateY: function rotateY() {\n          console.error(\"THREE.Matrix4: .rotateY() has been removed.\");\n        },\n        rotateZ: function rotateZ() {\n          console.error(\"THREE.Matrix4: .rotateZ() has been removed.\");\n        },\n        rotateByAxis: function rotateByAxis() {\n          console.error(\"THREE.Matrix4: .rotateByAxis() has been removed.\");\n        },\n        applyToBuffer: function applyToBuffer(e) {\n          return console.warn(\"THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.\"), this.applyToBufferAttribute(e);\n        },\n        applyToVector3Array: function applyToVector3Array() {\n          console.error(\"THREE.Matrix4: .applyToVector3Array() has been removed.\");\n        },\n        makeFrustum: function makeFrustum(e, t, r, i, n, o) {\n          return console.warn(\"THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.\"), this.makePerspective(e, t, i, r, n, o);\n        }\n      }), v.prototype.isIntersectionLine = function (e) {\n        return console.warn(\"THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().\"), this.intersectsLine(e);\n      }, a.prototype.multiplyVector3 = function (e) {\n        return console.warn(\"THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.\"), e.applyQuaternion(this);\n      }, Object.assign(q.prototype, {\n        isIntersectionBox: function isIntersectionBox(e) {\n          return console.warn(\"THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().\"), this.intersectsBox(e);\n        },\n        isIntersectionPlane: function isIntersectionPlane(e) {\n          return console.warn(\"THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().\"), this.intersectsPlane(e);\n        },\n        isIntersectionSphere: function isIntersectionSphere(e) {\n          return console.warn(\"THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().\"), this.intersectsSphere(e);\n        }\n      }), Object.assign(Z.prototype, {\n        area: function area() {\n          return console.warn(\"THREE.Triangle: .area() has been renamed to .getArea().\"), this.getArea();\n        },\n        barycoordFromPoint: function barycoordFromPoint(e, t) {\n          return console.warn(\"THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().\"), this.getBarycoord(e, t);\n        },\n        midpoint: function midpoint(e) {\n          return console.warn(\"THREE.Triangle: .midpoint() has been renamed to .getMidpoint().\"), this.getMidpoint(e);\n        },\n        normal: function normal(e) {\n          return console.warn(\"THREE.Triangle: .normal() has been renamed to .getNormal().\"), this.getNormal(e);\n        },\n        plane: function plane(e) {\n          return console.warn(\"THREE.Triangle: .plane() has been renamed to .getPlane().\"), this.getPlane(e);\n        }\n      }), Object.assign(Z, {\n        barycoordFromPoint: function barycoordFromPoint(e, t, r, i, n) {\n          return console.warn(\"THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().\"), Z.getBarycoord(e, t, r, i, n);\n        },\n        normal: function normal(e, t, r, i) {\n          return console.warn(\"THREE.Triangle: .normal() has been renamed to .getNormal().\"), Z.getNormal(e, t, r, i);\n        }\n      }), Object.assign(Xi.prototype, {\n        extractAllPoints: function extractAllPoints(e) {\n          return console.warn(\"THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.\"), this.extractPoints(e);\n        },\n        extrude: function extrude(e) {\n          return console.warn(\"THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.\"), new Gr(this, e);\n        },\n        makeGeometry: function makeGeometry(e) {\n          return console.warn(\"THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.\"), new Jr(this, e);\n        }\n      }), Object.assign(n.prototype, {\n        fromAttribute: function fromAttribute(e, t, r) {\n          return console.warn(\"THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().\"), this.fromBufferAttribute(e, t, r);\n        },\n        distanceToManhattan: function distanceToManhattan(e) {\n          return console.warn(\"THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().\"), this.manhattanDistanceTo(e);\n        },\n        lengthManhattan: function lengthManhattan() {\n          return console.warn(\"THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().\"), this.manhattanLength();\n        }\n      }), Object.assign(s.prototype, {\n        setEulerFromRotationMatrix: function setEulerFromRotationMatrix() {\n          console.error(\"THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.\");\n        },\n        setEulerFromQuaternion: function setEulerFromQuaternion() {\n          console.error(\"THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.\");\n        },\n        getPositionFromMatrix: function getPositionFromMatrix(e) {\n          return console.warn(\"THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().\"), this.setFromMatrixPosition(e);\n        },\n        getScaleFromMatrix: function getScaleFromMatrix(e) {\n          return console.warn(\"THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().\"), this.setFromMatrixScale(e);\n        },\n        getColumnFromMatrix: function getColumnFromMatrix(e, t) {\n          return console.warn(\"THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().\"), this.setFromMatrixColumn(t, e);\n        },\n        applyProjection: function applyProjection(e) {\n          return console.warn(\"THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.\"), this.applyMatrix4(e);\n        },\n        fromAttribute: function fromAttribute(e, t, r) {\n          return console.warn(\"THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().\"), this.fromBufferAttribute(e, t, r);\n        },\n        distanceToManhattan: function distanceToManhattan(e) {\n          return console.warn(\"THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().\"), this.manhattanDistanceTo(e);\n        },\n        lengthManhattan: function lengthManhattan() {\n          return console.warn(\"THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().\"), this.manhattanLength();\n        }\n      }), Object.assign(u.prototype, {\n        fromAttribute: function fromAttribute(e, t, r) {\n          return console.warn(\"THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().\"), this.fromBufferAttribute(e, t, r);\n        },\n        lengthManhattan: function lengthManhattan() {\n          return console.warn(\"THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().\"), this.manhattanLength();\n        }\n      }), Object.assign(T.prototype, {\n        computeTangents: function computeTangents() {\n          console.error(\"THREE.Geometry: .computeTangents() has been removed.\");\n        },\n        computeLineDistances: function computeLineDistances() {\n          console.error(\"THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.\");\n        }\n      }), Object.assign(w.prototype, {\n        getChildByName: function getChildByName(e) {\n          return console.warn(\"THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().\"), this.getObjectByName(e);\n        },\n        renderDepth: function renderDepth() {\n          console.warn(\"THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.\");\n        },\n        translate: function translate(e, t) {\n          return console.warn(\"THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.\"), this.translateOnAxis(t, e);\n        },\n        getWorldRotation: function getWorldRotation() {\n          console.error(\"THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.\");\n        }\n      }), Object.defineProperties(w.prototype, {\n        eulerOrder: {\n          get: function get() {\n            return console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\"), this.rotation.order;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.Object3D: .eulerOrder is now .rotation.order.\"), this.rotation.order = e;\n          }\n        },\n        useQuaternion: {\n          get: function get() {\n            console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\");\n          },\n          set: function set() {\n            console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\");\n          }\n        }\n      }), Object.defineProperties(Pt.prototype, {\n        objects: {\n          get: function get() {\n            return console.warn(\"THREE.LOD: .objects has been renamed to .levels.\"), this.levels;\n          }\n        }\n      }), Object.defineProperty(Dt.prototype, \"useVertexTexture\", {\n        get: function get() {\n          console.warn(\"THREE.Skeleton: useVertexTexture has been removed.\");\n        },\n        set: function set() {\n          console.warn(\"THREE.Skeleton: useVertexTexture has been removed.\");\n        }\n      }), Object.defineProperty(wi.prototype, \"__arcLengthDivisions\", {\n        get: function get() {\n          return console.warn(\"THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.\"), this.arcLengthDivisions;\n        },\n        set: function set(e) {\n          console.warn(\"THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.\"), this.arcLengthDivisions = e;\n        }\n      }), wt.prototype.setLens = function (e, t) {\n        console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.\"), void 0 !== t && (this.filmGauge = t), this.setFocalLength(e);\n      }, Object.defineProperties(qi.prototype, {\n        onlyShadow: {\n          set: function set() {\n            console.warn(\"THREE.Light: .onlyShadow has been removed.\");\n          }\n        },\n        shadowCameraFov: {\n          set: function set(e) {\n            console.warn(\"THREE.Light: .shadowCameraFov is now .shadow.camera.fov.\"), this.shadow.camera.fov = e;\n          }\n        },\n        shadowCameraLeft: {\n          set: function set(e) {\n            console.warn(\"THREE.Light: .shadowCameraLeft is now .shadow.camera.left.\"), this.shadow.camera.left = e;\n          }\n        },\n        shadowCameraRight: {\n          set: function set(e) {\n            console.warn(\"THREE.Light: .shadowCameraRight is now .shadow.camera.right.\"), this.shadow.camera.right = e;\n          }\n        },\n        shadowCameraTop: {\n          set: function set(e) {\n            console.warn(\"THREE.Light: .shadowCameraTop is now .shadow.camera.top.\"), this.shadow.camera.top = e;\n          }\n        },\n        shadowCameraBottom: {\n          set: function set(e) {\n            console.warn(\"THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.\"), this.shadow.camera.bottom = e;\n          }\n        },\n        shadowCameraNear: {\n          set: function set(e) {\n            console.warn(\"THREE.Light: .shadowCameraNear is now .shadow.camera.near.\"), this.shadow.camera.near = e;\n          }\n        },\n        shadowCameraFar: {\n          set: function set(e) {\n            console.warn(\"THREE.Light: .shadowCameraFar is now .shadow.camera.far.\"), this.shadow.camera.far = e;\n          }\n        },\n        shadowCameraVisible: {\n          set: function set() {\n            console.warn(\"THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.\");\n          }\n        },\n        shadowBias: {\n          set: function set(e) {\n            console.warn(\"THREE.Light: .shadowBias is now .shadow.bias.\"), this.shadow.bias = e;\n          }\n        },\n        shadowDarkness: {\n          set: function set() {\n            console.warn(\"THREE.Light: .shadowDarkness has been removed.\");\n          }\n        },\n        shadowMapWidth: {\n          set: function set(e) {\n            console.warn(\"THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.\"), this.shadow.mapSize.width = e;\n          }\n        },\n        shadowMapHeight: {\n          set: function set(e) {\n            console.warn(\"THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.\"), this.shadow.mapSize.height = e;\n          }\n        }\n      }), Object.defineProperties(A.prototype, {\n        length: {\n          get: function get() {\n            return console.warn(\"THREE.BufferAttribute: .length has been deprecated. Use .count instead.\"), this.array.length;\n          }\n        },\n        copyIndicesArray: function copyIndicesArray() {\n          console.error(\"THREE.BufferAttribute: .copyIndicesArray() has been removed.\");\n        }\n      }), Object.assign(B.prototype, {\n        addIndex: function addIndex(e) {\n          console.warn(\"THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().\"), this.setIndex(e);\n        },\n        addDrawCall: function addDrawCall(e, t, r) {\n          void 0 !== r && console.warn(\"THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.\"), console.warn(\"THREE.BufferGeometry: .addDrawCall() is now .addGroup().\"), this.addGroup(e, t);\n        },\n        clearDrawCalls: function clearDrawCalls() {\n          console.warn(\"THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().\"), this.clearGroups();\n        },\n        computeTangents: function computeTangents() {\n          console.warn(\"THREE.BufferGeometry: .computeTangents() has been removed.\");\n        },\n        computeOffsets: function computeOffsets() {\n          console.warn(\"THREE.BufferGeometry: .computeOffsets() has been removed.\");\n        }\n      }), Object.defineProperties(B.prototype, {\n        drawcalls: {\n          get: function get() {\n            return console.error(\"THREE.BufferGeometry: .drawcalls has been renamed to .groups.\"), this.groups;\n          }\n        },\n        offsets: {\n          get: function get() {\n            return console.warn(\"THREE.BufferGeometry: .offsets has been renamed to .groups.\"), this.groups;\n          }\n        }\n      }), Object.assign(Hr.prototype, {\n        getArrays: function getArrays() {\n          console.error(\"THREE.ExtrudeBufferGeometry: .getArrays() has been removed.\");\n        },\n        addShapeList: function addShapeList() {\n          console.error(\"THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.\");\n        },\n        addShape: function addShape() {\n          console.error(\"THREE.ExtrudeBufferGeometry: .addShape() has been removed.\");\n        }\n      }), Object.defineProperties(Hn.prototype, {\n        dynamic: {\n          set: function set() {\n            console.warn(\"THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.\");\n          }\n        },\n        onUpdate: {\n          value: function value() {\n            return console.warn(\"THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.\"), this;\n          }\n        }\n      }), Object.defineProperties(k.prototype, {\n        wrapAround: {\n          get: function get() {\n            console.warn(\"THREE.Material: .wrapAround has been removed.\");\n          },\n          set: function set() {\n            console.warn(\"THREE.Material: .wrapAround has been removed.\");\n          }\n        },\n        wrapRGB: {\n          get: function get() {\n            return console.warn(\"THREE.Material: .wrapRGB has been removed.\"), new y();\n          }\n        },\n        shading: {\n          get: function get() {\n            console.error(\"THREE.\" + this.type + \": .shading has been removed. Use the boolean .flatShading instead.\");\n          },\n          set: function set(e) {\n            console.warn(\"THREE.\" + this.type + \": .shading has been removed. Use the boolean .flatShading instead.\"), this.flatShading = 1 === e;\n          }\n        }\n      }), Object.defineProperties(ui.prototype, {\n        metal: {\n          get: function get() {\n            return console.warn(\"THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.\"), !1;\n          },\n          set: function set() {\n            console.warn(\"THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead\");\n          }\n        }\n      }), Object.defineProperties(X.prototype, {\n        derivatives: {\n          get: function get() {\n            return console.warn(\"THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\"), this.extensions.derivatives;\n          },\n          set: function set(e) {\n            console.warn(\"THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.\"), this.extensions.derivatives = e;\n          }\n        }\n      }), Object.assign(St.prototype, {\n        getCurrentRenderTarget: function getCurrentRenderTarget() {\n          return console.warn(\"THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().\"), this.getRenderTarget();\n        },\n        getMaxAnisotropy: function getMaxAnisotropy() {\n          return console.warn(\"THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().\"), this.capabilities.getMaxAnisotropy();\n        },\n        getPrecision: function getPrecision() {\n          return console.warn(\"THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.\"), this.capabilities.precision;\n        },\n        resetGLState: function resetGLState() {\n          return console.warn(\"THREE.WebGLRenderer: .resetGLState() is now .state.reset().\"), this.state.reset();\n        },\n        supportsFloatTextures: function supportsFloatTextures() {\n          return console.warn(\"THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).\"), this.extensions.get(\"OES_texture_float\");\n        },\n        supportsHalfFloatTextures: function supportsHalfFloatTextures() {\n          return console.warn(\"THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).\"), this.extensions.get(\"OES_texture_half_float\");\n        },\n        supportsStandardDerivatives: function supportsStandardDerivatives() {\n          return console.warn(\"THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).\"), this.extensions.get(\"OES_standard_derivatives\");\n        },\n        supportsCompressedTextureS3TC: function supportsCompressedTextureS3TC() {\n          return console.warn(\"THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).\"), this.extensions.get(\"WEBGL_compressed_texture_s3tc\");\n        },\n        supportsCompressedTexturePVRTC: function supportsCompressedTexturePVRTC() {\n          return console.warn(\"THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).\"), this.extensions.get(\"WEBGL_compressed_texture_pvrtc\");\n        },\n        supportsBlendMinMax: function supportsBlendMinMax() {\n          return console.warn(\"THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).\"), this.extensions.get(\"EXT_blend_minmax\");\n        },\n        supportsVertexTextures: function supportsVertexTextures() {\n          return console.warn(\"THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.\"), this.capabilities.vertexTextures;\n        },\n        supportsInstancedArrays: function supportsInstancedArrays() {\n          return console.warn(\"THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).\"), this.extensions.get(\"ANGLE_instanced_arrays\");\n        },\n        enableScissorTest: function enableScissorTest(e) {\n          console.warn(\"THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().\"), this.setScissorTest(e);\n        },\n        initMaterial: function initMaterial() {\n          console.warn(\"THREE.WebGLRenderer: .initMaterial() has been removed.\");\n        },\n        addPrePlugin: function addPrePlugin() {\n          console.warn(\"THREE.WebGLRenderer: .addPrePlugin() has been removed.\");\n        },\n        addPostPlugin: function addPostPlugin() {\n          console.warn(\"THREE.WebGLRenderer: .addPostPlugin() has been removed.\");\n        },\n        updateShadowMap: function updateShadowMap() {\n          console.warn(\"THREE.WebGLRenderer: .updateShadowMap() has been removed.\");\n        },\n        setFaceCulling: function setFaceCulling() {\n          console.warn(\"THREE.WebGLRenderer: .setFaceCulling() has been removed.\");\n        }\n      }), Object.defineProperties(St.prototype, {\n        shadowMapEnabled: {\n          get: function get() {\n            return this.shadowMap.enabled;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.\"), this.shadowMap.enabled = e;\n          }\n        },\n        shadowMapType: {\n          get: function get() {\n            return this.shadowMap.type;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.\"), this.shadowMap.type = e;\n          }\n        },\n        shadowMapCullFace: {\n          get: function get() {\n            console.warn(\"THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.\");\n          },\n          set: function set() {\n            console.warn(\"THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.\");\n          }\n        }\n      }), Object.defineProperties(vt.prototype, {\n        cullFace: {\n          get: function get() {\n            console.warn(\"THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.\");\n          },\n          set: function set() {\n            console.warn(\"THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.\");\n          }\n        },\n        renderReverseSided: {\n          get: function get() {\n            console.warn(\"THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.\");\n          },\n          set: function set() {\n            console.warn(\"THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.\");\n          }\n        },\n        renderSingleSided: {\n          get: function get() {\n            console.warn(\"THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.\");\n          },\n          set: function set() {\n            console.warn(\"THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.\");\n          }\n        }\n      }), Object.defineProperties(h.prototype, {\n        wrapS: {\n          get: function get() {\n            return console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\"), this.texture.wrapS;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.\"), this.texture.wrapS = e;\n          }\n        },\n        wrapT: {\n          get: function get() {\n            return console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\"), this.texture.wrapT;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.\"), this.texture.wrapT = e;\n          }\n        },\n        magFilter: {\n          get: function get() {\n            return console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\"), this.texture.magFilter;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.\"), this.texture.magFilter = e;\n          }\n        },\n        minFilter: {\n          get: function get() {\n            return console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\"), this.texture.minFilter;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.\"), this.texture.minFilter = e;\n          }\n        },\n        anisotropy: {\n          get: function get() {\n            return console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\"), this.texture.anisotropy;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.\"), this.texture.anisotropy = e;\n          }\n        },\n        offset: {\n          get: function get() {\n            return console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\"), this.texture.offset;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.WebGLRenderTarget: .offset is now .texture.offset.\"), this.texture.offset = e;\n          }\n        },\n        repeat: {\n          get: function get() {\n            return console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\"), this.texture.repeat;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.WebGLRenderTarget: .repeat is now .texture.repeat.\"), this.texture.repeat = e;\n          }\n        },\n        format: {\n          get: function get() {\n            return console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\"), this.texture.format;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.WebGLRenderTarget: .format is now .texture.format.\"), this.texture.format = e;\n          }\n        },\n        type: {\n          get: function get() {\n            return console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\"), this.texture.type;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.WebGLRenderTarget: .type is now .texture.type.\"), this.texture.type = e;\n          }\n        },\n        generateMipmaps: {\n          get: function get() {\n            return console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\"), this.texture.generateMipmaps;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.\"), this.texture.generateMipmaps = e;\n          }\n        }\n      }), Object.defineProperties(Et.prototype, {\n        standing: {\n          set: function set() {\n            console.warn(\"THREE.WebVRManager: .standing has been removed.\");\n          }\n        }\n      }), Dn.prototype.load = function (e) {\n        console.warn(\"THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.\");\n        var t = this;\n        return new Ln().load(e, function (e) {\n          t.setBuffer(e);\n        }), this;\n      }, In.prototype.getData = function () {\n        return console.warn(\"THREE.AudioAnalyser: .getData() is now .getFrequencyData().\"), this.getFrequencyData();\n      }, Rn.prototype.updateCubeMap = function (e, t) {\n        return console.warn(\"THREE.CubeCamera: .updateCubeMap() is now .update().\"), this.update(e, t);\n      };\n    }, function (e, t, r) {\n      \"use strict\";\n\n      Object.defineProperty(t, \"__esModule\", {\n        value: !0\n      });\n      var i = r(2);\n      r.d(t, \"AdaptiveToneMappingPass\", function () {\n        return i.a;\n      });\n      var n = r(3);\n      r.d(t, \"BasicShader\", function () {\n        return n.a;\n      });\n      var o = r(4);\n      r.d(t, \"BleachBypassShader\", function () {\n        return o.a;\n      });\n      var a = r(5);\n      r.d(t, \"BlendShader\", function () {\n        return a.a;\n      });\n      var s = r(6);\n      r.d(t, \"BloomPass\", function () {\n        return s.a;\n      });\n      var c = r(7);\n      r.d(t, \"BokehPass\", function () {\n        return c.a;\n      });\n      var l = r(8);\n      r.d(t, \"BokehShader\", function () {\n        return l.a;\n      });\n      var u = r(9);\n      r.d(t, \"BokehShader2\", function () {\n        return u.a;\n      });\n      var h = r(10);\n      r.d(t, \"BrightnessContrastShader\", function () {\n        return h.a;\n      });\n      var d = r(11);\n      r.d(t, \"ColorCorrectionShader\", function () {\n        return d.a;\n      });\n      var p = r(12);\n      r.d(t, \"ColorifyShader\", function () {\n        return p.a;\n      });\n      var f = r(13);\n      r.d(t, \"ConvolutionShader\", function () {\n        return f.a;\n      });\n      var m = r(14);\n      r.d(t, \"CopyShader\", function () {\n        return m.a;\n      });\n      var v = r(15);\n      r.d(t, \"DDSLoader\", function () {\n        return v.a;\n      });\n      var g = r(16);\n      r.d(t, \"DOFMipMapShader\", function () {\n        return g.a;\n      });\n      var y = r(17);\n      r.d(t, \"DigitalGlitch\", function () {\n        return y.a;\n      });\n      var x = r(18);\n      r.d(t, \"DotScreenPass\", function () {\n        return x.a;\n      });\n\n      var _ = r(19);\n\n      r.d(t, \"DotScreenShader\", function () {\n        return _.a;\n      });\n      var b = r(20);\n      r.d(t, \"EdgeShader\", function () {\n        return b.a;\n      });\n      var w = r(21);\n      r.d(t, \"EdgeShader2\", function () {\n        return w.a;\n      });\n      var M = r(22);\n      r.d(t, \"EffectComposer\", function () {\n        return M.a;\n      });\n      var E = r(23);\n      r.d(t, \"FXAAShader\", function () {\n        return E.a;\n      });\n      var S = r(24);\n      r.d(t, \"FilmPass\", function () {\n        return S.a;\n      });\n      var T = r(25);\n      r.d(t, \"FilmShader\", function () {\n        return T.a;\n      });\n      var A = r(26);\n      r.d(t, \"FocusShader\", function () {\n        return A.a;\n      });\n      var L = r(27);\n      r.d(t, \"FresnelShader\", function () {\n        return L.a;\n      });\n      var C = r(28);\n      r.d(t, \"GammaCorrectionShader\", function () {\n        return C.a;\n      });\n      var R = r(29);\n      r.d(t, \"GlitchPass\", function () {\n        return R.a;\n      });\n      var P = r(30);\n      r.d(t, \"HorizontalBlurShader\", function () {\n        return P.a;\n      });\n      var D = r(31);\n      r.d(t, \"HorizontalTiltShiftShader\", function () {\n        return D.a;\n      });\n      var U = r(32);\n      r.d(t, \"HueSaturationShader\", function () {\n        return U.a;\n      });\n      var I = r(33);\n      r.d(t, \"KaleidoShader\", function () {\n        return I.a;\n      });\n      var O = r(34);\n      r.d(t, \"LuminosityShader\", function () {\n        return O.a;\n      });\n      var N = r(35);\n      r.d(t, \"MTLLoader\", function () {\n        return N.a;\n      });\n      var F = r(36);\n      r.d(t, \"MarchingCubes\", function () {\n        return F.a;\n      });\n      var z = r(37);\n      r.d(t, \"MaskPass\", function () {\n        return z.a;\n      });\n      var B = r(38);\n      r.d(t, \"MirrorShader\", function () {\n        return B.a;\n      });\n      var G = r(39);\n      r.d(t, \"NormalMapShader\", function () {\n        return G.a;\n      });\n      var H = r(40);\n      r.d(t, \"OBJLoader\", function () {\n        return H.a;\n      });\n      var j = r(41);\n      r.d(t, \"OceanShaders\", function () {\n        return j.a;\n      });\n      var V = r(42);\n      r.d(t, \"OrbitControls\", function () {\n        return V.a;\n      });\n      var k = r(43);\n      r.d(t, \"ParallaxShader\", function () {\n        return k.a;\n      });\n      var W = r(44);\n      r.d(t, \"RGBShiftShader\", function () {\n        return W.a;\n      });\n      var X = r(45);\n      r.d(t, \"RenderPass\", function () {\n        return X.a;\n      });\n      var q = r(46);\n      r.d(t, \"SSAOShader\", function () {\n        return q.a;\n      });\n      var Y = r(47);\n      r.d(t, \"SVGLoader\", function () {\n        return Y.a;\n      });\n      var Z = r(48);\n      r.d(t, \"SavePass\", function () {\n        return Z.a;\n      });\n      var J = r(49);\n      r.d(t, \"SepiaShader\", function () {\n        return J.a;\n      });\n      var K = r(50);\n      r.d(t, \"ShaderPass\", function () {\n        return K.a;\n      });\n      var Q = r(51);\n      r.d(t, \"ShaderToon\", function () {\n        return Q.a;\n      });\n      var $ = r(52);\n      r.d(t, \"TechnicolorShader\", function () {\n        return $.a;\n      });\n      var ee = r(53);\n      r.d(t, \"TexturePass\", function () {\n        return ee.a;\n      });\n      var te = r(54);\n      r.d(t, \"ToneMapShader\", function () {\n        return te.a;\n      });\n      var re = r(55);\n      r.d(t, \"TriangleBlurShader\", function () {\n        return re.a;\n      });\n      var ie = r(56);\n      r.d(t, \"UnpackDepthRGBAShader\", function () {\n        return ie.a;\n      });\n      var ne = r(57);\n      r.d(t, \"VerticalBlurShader\", function () {\n        return ne.a;\n      });\n      var oe = r(58);\n      r.d(t, \"VerticalTiltShiftShader\", function () {\n        return oe.a;\n      });\n      var ae = r(59);\n      r.d(t, \"VignetteShader\", function () {\n        return ae.a;\n      });\n      var se = r(60);\n      r.d(t, \"SobelOperatorShader\", function () {\n        return se.a;\n      });\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.AdaptiveToneMappingPass = function (e, t) {\n        this.resolution = void 0 !== t ? t : 256, this.needsInit = !0, this.adaptive = void 0 === e || !!e, this.luminanceRT = null, this.previousLuminanceRT = null, this.currentLuminanceRT = null, void 0 === i.CopyShader && console.error(\"THREE.AdaptiveToneMappingPass relies on THREE.CopyShader\");\n        var r = i.CopyShader;\n        this.copyUniforms = i._46.clone(r.uniforms), this.materialCopy = new i._35({\n          uniforms: this.copyUniforms,\n          vertexShader: r.vertexShader,\n          fragmentShader: r.fragmentShader,\n          blending: i._9,\n          depthTest: !1\n        }), void 0 === i.LuminosityShader && console.error(\"THREE.AdaptiveToneMappingPass relies on THREE.LuminosityShader\"), this.materialLuminance = new i._35({\n          uniforms: i._46.clone(i.LuminosityShader.uniforms),\n          vertexShader: i.LuminosityShader.vertexShader,\n          fragmentShader: i.LuminosityShader.fragmentShader,\n          blending: i._9\n        }), this.adaptLuminanceShader = {\n          defines: {\n            MIP_LEVEL_1X1: (Math.log(this.resolution) / Math.log(2)).toFixed(1)\n          },\n          uniforms: {\n            lastLum: {\n              type: \"t\",\n              value: null\n            },\n            currentLum: {\n              type: \"t\",\n              value: null\n            },\n            delta: {\n              type: \"f\",\n              value: .016\n            },\n            tau: {\n              type: \"f\",\n              value: 1\n            }\n          },\n          vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n          fragmentShader: [\"varying vec2 vUv;\", \"uniform sampler2D lastLum;\", \"uniform sampler2D currentLum;\", \"uniform float delta;\", \"uniform float tau;\", \"void main() {\", \"vec4 lastLum = texture2D( lastLum, vUv, MIP_LEVEL_1X1 );\", \"vec4 currentLum = texture2D( currentLum, vUv, MIP_LEVEL_1X1 );\", \"float fLastLum = lastLum.r;\", \"float fCurrentLum = currentLum.r;\", \"fCurrentLum *= fCurrentLum;\", \"float fAdaptedLum = fLastLum + (fCurrentLum - fLastLum) * (1.0 - exp(-delta * tau));\", \"gl_FragColor = vec4( vec3( fAdaptedLum ), 1.0 );\", \"}\"].join(\"\\n\")\n        }, this.materialAdaptiveLum = new i._35({\n          uniforms: i._46.clone(this.adaptLuminanceShader.uniforms),\n          vertexShader: this.adaptLuminanceShader.vertexShader,\n          fragmentShader: this.adaptLuminanceShader.fragmentShader,\n          defines: this.adaptLuminanceShader.defines,\n          blending: i._9\n        }), void 0 === i.ToneMapShader && console.error(\"THREE.AdaptiveToneMappingPass relies on THREE.ToneMapShader\"), this.materialToneMap = new i._35({\n          uniforms: i._46.clone(i.ToneMapShader.uniforms),\n          vertexShader: i.ToneMapShader.vertexShader,\n          fragmentShader: i.ToneMapShader.fragmentShader,\n          blending: i._9\n        }), this.enabled = !0, this.needsSwap = !0, this.clear = !1, this.camera = new i._14(-1, 1, 1, -1, 0, 1), this.scene = new i._31(), this.quad = new i._3(new i._17(2, 2), null), this.scene.add(this.quad);\n      }, i.AdaptiveToneMappingPass.prototype = {\n        render: function render(e, t, r, i, n) {\n          this.needsInit && (this.reset(e), this.luminanceRT.type = r.type, this.previousLuminanceRT.type = r.type, this.currentLuminanceRT.type = r.type, this.needsInit = !1), this.adaptive && (this.quad.material = this.materialLuminance, this.materialLuminance.uniforms.tDiffuse.value = r, e.render(this.scene, this.camera, this.currentLuminanceRT), this.quad.material = this.materialAdaptiveLum, this.materialAdaptiveLum.uniforms.delta.value = i, this.materialAdaptiveLum.uniforms.lastLum.value = this.previousLuminanceRT, this.materialAdaptiveLum.uniforms.currentLum.value = this.currentLuminanceRT, e.render(this.scene, this.camera, this.luminanceRT), this.quad.material = this.materialCopy, this.copyUniforms.tDiffuse.value = this.luminanceRT, e.render(this.scene, this.camera, this.previousLuminanceRT)), this.quad.material = this.materialToneMap, this.materialToneMap.uniforms.tDiffuse.value = r, e.render(this.scene, this.camera, t, this.clear);\n        },\n        reset: function reset(e) {\n          this.luminanceRT && this.luminanceRT.dispose(), this.currentLuminanceRT && this.currentLuminanceRT.dispose(), this.previousLuminanceRT && this.previousLuminanceRT.dispose();\n          var t = {\n            minFilter: i.U,\n            magFilter: i.U,\n            format: i._22\n          };\n          this.luminanceRT = new i._53(this.resolution, this.resolution, t), this.luminanceRT.generateMipmaps = !1, this.previousLuminanceRT = new i._53(this.resolution, this.resolution, t), this.previousLuminanceRT.generateMipmaps = !1, t.minFilter = i.V, this.currentLuminanceRT = new i._53(this.resolution, this.resolution, t), this.adaptive && (this.materialToneMap.defines.ADAPTED_LUMINANCE = \"\", this.materialToneMap.uniforms.luminanceMap.value = this.luminanceRT), this.quad.material = new i._4({\n            color: 7829367\n          }), this.materialLuminance.needsUpdate = !0, this.materialAdaptiveLum.needsUpdate = !0, this.materialToneMap.needsUpdate = !0;\n        },\n        setAdaptive: function setAdaptive(e) {\n          e ? (this.adaptive = !0, this.materialToneMap.defines.ADAPTED_LUMINANCE = \"\", this.materialToneMap.uniforms.luminanceMap.value = this.luminanceRT) : (this.adaptive = !1, delete this.materialToneMap.defines.ADAPTED_LUMINANCE, this.materialToneMap.uniforms.luminanceMap.value = void 0), this.materialToneMap.needsUpdate = !0;\n        },\n        setAdaptionRate: function setAdaptionRate(e) {\n          e && (this.materialAdaptiveLum.uniforms.tau.value = Math.abs(e));\n        },\n        setMaxLuminance: function setMaxLuminance(e) {\n          e && (this.materialToneMap.uniforms.maxLuminance.value = e);\n        },\n        setAverageLuminance: function setAverageLuminance(e) {\n          e && (this.materialToneMap.uniforms.averageLuminance.value = e);\n        },\n        setMiddleGrey: function setMiddleGrey(e) {\n          e && (this.materialToneMap.uniforms.middleGrey.value = e);\n        },\n        dispose: function dispose() {\n          this.luminanceRT && this.luminanceRT.dispose(), this.previousLuminanceRT && this.previousLuminanceRT.dispose(), this.currentLuminanceRT && this.currentLuminanceRT.dispose(), this.materialLuminance && this.materialLuminance.dispose(), this.materialAdaptiveLum && this.materialAdaptiveLum.dispose(), this.materialCopy && this.materialCopy.dispose(), this.materialToneMap && this.materialToneMap.dispose();\n        }\n      }, t.a = i.AdaptiveToneMappingPass;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.BasicShader = {\n        uniforms: {},\n        vertexShader: [\"void main() {\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"void main() {\", \"gl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\", \"}\"].join(\"\\n\")\n      }, t.a = i.BasicShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.BleachBypassShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          opacity: {\n            type: \"f\",\n            value: 1\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform float opacity;\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 base = texture2D( tDiffuse, vUv );\", \"vec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\", \"float lum = dot( lumCoeff, base.rgb );\", \"vec3 blend = vec3( lum );\", \"float L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\", \"vec3 result1 = 2.0 * base.rgb * blend;\", \"vec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\", \"vec3 newColor = mix( result1, result2, L );\", \"float A2 = opacity * base.a;\", \"vec3 mixRGB = A2 * newColor.rgb;\", \"mixRGB += ( ( 1.0 - A2 ) * base.rgb );\", \"gl_FragColor = vec4( mixRGB, base.a );\", \"}\"].join(\"\\n\")\n      }, t.a = i.BleachBypassShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.BlendShader = {\n        uniforms: {\n          tDiffuse1: {\n            type: \"t\",\n            value: null\n          },\n          tDiffuse2: {\n            type: \"t\",\n            value: null\n          },\n          mixRatio: {\n            type: \"f\",\n            value: .5\n          },\n          opacity: {\n            type: \"f\",\n            value: 1\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform float opacity;\", \"uniform float mixRatio;\", \"uniform sampler2D tDiffuse1;\", \"uniform sampler2D tDiffuse2;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 texel1 = texture2D( tDiffuse1, vUv );\", \"vec4 texel2 = texture2D( tDiffuse2, vUv );\", \"gl_FragColor = opacity * mix( texel1, texel2, mixRatio );\", \"}\"].join(\"\\n\")\n      }, t.a = i.BlendShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.BloomPass = function (e, t, r, n) {\n        e = void 0 !== e ? e : 1, t = void 0 !== t ? t : 25, r = void 0 !== r ? r : 4, n = void 0 !== n ? n : 256;\n        var o = {\n          minFilter: i.U,\n          magFilter: i.U,\n          format: i._22\n        };\n        this.renderTargetX = new i._53(n, n, o), this.renderTargetY = new i._53(n, n, o), void 0 === i.CopyShader && console.error(\"THREE.BloomPass relies on THREE.CopyShader\");\n        var a = i.CopyShader;\n        this.copyUniforms = i._46.clone(a.uniforms), this.copyUniforms.opacity.value = e, this.materialCopy = new i._35({\n          uniforms: this.copyUniforms,\n          vertexShader: a.vertexShader,\n          fragmentShader: a.fragmentShader,\n          blending: i.b,\n          transparent: !0\n        }), void 0 === i.ConvolutionShader && console.error(\"THREE.BloomPass relies on THREE.ConvolutionShader\");\n        var s = i.ConvolutionShader;\n        this.convolutionUniforms = i._46.clone(s.uniforms), this.convolutionUniforms.uImageIncrement.value = i.BloomPass.blurX, this.convolutionUniforms.cKernel.value = i.ConvolutionShader.buildKernel(r), this.materialConvolution = new i._35({\n          uniforms: this.convolutionUniforms,\n          vertexShader: s.vertexShader,\n          fragmentShader: s.fragmentShader,\n          defines: {\n            KERNEL_SIZE_FLOAT: t.toFixed(1),\n            KERNEL_SIZE_INT: t.toFixed(0)\n          }\n        }), this.enabled = !0, this.needsSwap = !1, this.clear = !1, this.camera = new i._14(-1, 1, 1, -1, 0, 1), this.scene = new i._31(), this.quad = new i._3(new i._17(2, 2), null), this.scene.add(this.quad);\n      }, i.BloomPass.prototype = {\n        render: function render(e, t, r, n, o) {\n          o && e.context.disable(e.context.STENCIL_TEST), this.quad.material = this.materialConvolution, this.convolutionUniforms.tDiffuse.value = r, this.convolutionUniforms.uImageIncrement.value = i.BloomPass.blurX, e.render(this.scene, this.camera, this.renderTargetX, !0), this.convolutionUniforms.tDiffuse.value = this.renderTargetX, this.convolutionUniforms.uImageIncrement.value = i.BloomPass.blurY, e.render(this.scene, this.camera, this.renderTargetY, !0), this.quad.material = this.materialCopy, this.copyUniforms.tDiffuse.value = this.renderTargetY, o && e.context.enable(e.context.STENCIL_TEST), e.render(this.scene, this.camera, r, this.clear);\n        }\n      }, i.BloomPass.blurX = new i._48(.001953125, 0), i.BloomPass.blurY = new i._48(0, .001953125), t.a = i.BloomPass;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.BokehPass = function (e, t, r) {\n        this.scene = e, this.camera = t;\n        var n = void 0 !== r.focus ? r.focus : 1,\n            o = void 0 !== r.aspect ? r.aspect : t.aspect,\n            a = void 0 !== r.aperture ? r.aperture : .025,\n            s = void 0 !== r.maxblur ? r.maxblur : 1,\n            c = r.width || window.innerWidth || 1,\n            l = r.height || window.innerHeight || 1;\n        this.renderTargetColor = new i._53(c, l, {\n          minFilter: i.U,\n          magFilter: i.U,\n          format: i._22\n        }), this.renderTargetDepth = this.renderTargetColor.clone(), this.materialDepth = new i._5(), void 0 === i.BokehShader && console.error(\"THREE.BokehPass relies on THREE.BokehShader\");\n\n        var u = i.BokehShader,\n            h = i._46.clone(u.uniforms);\n\n        h.tDepth.value = this.renderTargetDepth, h.focus.value = n, h.aspect.value = o, h.aperture.value = a, h.maxblur.value = s, this.materialBokeh = new i._35({\n          uniforms: h,\n          vertexShader: u.vertexShader,\n          fragmentShader: u.fragmentShader\n        }), this.uniforms = h, this.enabled = !0, this.needsSwap = !1, this.renderToScreen = !1, this.clear = !1, this.camera2 = new i._14(-1, 1, 1, -1, 0, 1), this.scene2 = new i._31(), this.quad2 = new i._3(new i._17(2, 2), null), this.scene2.add(this.quad2);\n      }, i.BokehPass.prototype = {\n        render: function render(e, t, r, i, n) {\n          this.quad2.material = this.materialBokeh, this.scene.overrideMaterial = this.materialDepth, e.render(this.scene, this.camera, this.renderTargetDepth, !0), this.uniforms.tColor.value = r, this.renderToScreen ? e.render(this.scene2, this.camera2) : e.render(this.scene2, this.camera2, t, this.clear), this.scene.overrideMaterial = null;\n        }\n      }, t.a = i.BokehPass;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.BokehShader = {\n        uniforms: {\n          tColor: {\n            type: \"t\",\n            value: null\n          },\n          tDepth: {\n            type: \"t\",\n            value: null\n          },\n          focus: {\n            type: \"f\",\n            value: 1\n          },\n          aspect: {\n            type: \"f\",\n            value: 1\n          },\n          aperture: {\n            type: \"f\",\n            value: .025\n          },\n          maxblur: {\n            type: \"f\",\n            value: 1\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"varying vec2 vUv;\", \"uniform sampler2D tColor;\", \"uniform sampler2D tDepth;\", \"uniform float maxblur;\", \"uniform float aperture;\", \"uniform float focus;\", \"uniform float aspect;\", \"void main() {\", \"vec2 aspectcorrect = vec2( 1.0, aspect );\", \"vec4 depth1 = texture2D( tDepth, vUv );\", \"float factor = depth1.x - focus;\", \"vec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );\", \"vec2 dofblur9 = dofblur * 0.9;\", \"vec2 dofblur7 = dofblur * 0.7;\", \"vec2 dofblur4 = dofblur * 0.4;\", \"vec4 col = vec4( 0.0 );\", \"col += texture2D( tColor, vUv.xy );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );\", \"col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );\", \"col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );\", \"col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );\", \"col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );\", \"col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );\", \"col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );\", \"col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\", \"col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\", \"col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\", \"col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\", \"col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );\", \"col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\", \"col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );\", \"col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );\", \"col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\", \"col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\", \"col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\", \"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );\", \"gl_FragColor = col / 41.0;\", \"gl_FragColor.a = 1.0;\", \"}\"].join(\"\\n\")\n      }, t.a = i.BokehShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.BokehShader = {\n        uniforms: {\n          textureWidth: {\n            type: \"f\",\n            value: 1\n          },\n          textureHeight: {\n            type: \"f\",\n            value: 1\n          },\n          focalDepth: {\n            type: \"f\",\n            value: 1\n          },\n          focalLength: {\n            type: \"f\",\n            value: 24\n          },\n          fstop: {\n            type: \"f\",\n            value: .9\n          },\n          tColor: {\n            type: \"t\",\n            value: null\n          },\n          tDepth: {\n            type: \"t\",\n            value: null\n          },\n          maxblur: {\n            type: \"f\",\n            value: 1\n          },\n          showFocus: {\n            type: \"i\",\n            value: 0\n          },\n          manualdof: {\n            type: \"i\",\n            value: 0\n          },\n          vignetting: {\n            type: \"i\",\n            value: 0\n          },\n          depthblur: {\n            type: \"i\",\n            value: 0\n          },\n          threshold: {\n            type: \"f\",\n            value: .5\n          },\n          gain: {\n            type: \"f\",\n            value: 2\n          },\n          bias: {\n            type: \"f\",\n            value: .5\n          },\n          fringe: {\n            type: \"f\",\n            value: .7\n          },\n          znear: {\n            type: \"f\",\n            value: .1\n          },\n          zfar: {\n            type: \"f\",\n            value: 100\n          },\n          noise: {\n            type: \"i\",\n            value: 1\n          },\n          dithering: {\n            type: \"f\",\n            value: 1e-4\n          },\n          pentagon: {\n            type: \"i\",\n            value: 0\n          },\n          shaderFocus: {\n            type: \"i\",\n            value: 1\n          },\n          focusCoords: {\n            type: \"v2\",\n            value: new i._48()\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"varying vec2 vUv;\", \"uniform sampler2D tColor;\", \"uniform sampler2D tDepth;\", \"uniform float textureWidth;\", \"uniform float textureHeight;\", \"const float PI = 3.14159265;\", \"uniform float focalDepth;  //focal distance value in meters, but you may use autofocus option below\", \"uniform float focalLength; //focal length in mm\", \"uniform float fstop; //f-stop value\", \"uniform bool showFocus; //show debug focus point and focal range (red = focal point, green = focal range)\", \"/*\", \"make sure that these two values are the same for your camera, otherwise distances will be wrong.\", \"*/\", \"uniform float znear; // camera clipping start\", \"uniform float zfar; // camera clipping end\", \"//------------------------------------------\", \"//user variables\", \"const int samples = SAMPLES; //samples on the first ring\", \"const int rings = RINGS; //ring count\", \"const int maxringsamples = rings * samples;\", \"uniform bool manualdof; // manual dof calculation\", \"float ndofstart = 1.0; // near dof blur start\", \"float ndofdist = 2.0; // near dof blur falloff distance\", \"float fdofstart = 1.0; // far dof blur start\", \"float fdofdist = 3.0; // far dof blur falloff distance\", \"float CoC = 0.03; //circle of confusion size in mm (35mm film = 0.03mm)\", \"uniform bool vignetting; // use optical lens vignetting\", \"float vignout = 1.3; // vignetting outer border\", \"float vignin = 0.0; // vignetting inner border\", \"float vignfade = 22.0; // f-stops till vignete fades\", \"uniform bool shaderFocus;\", \"// disable if you use external focalDepth value\", \"uniform vec2 focusCoords;\", \"// autofocus point on screen (0.0,0.0 - left lower corner, 1.0,1.0 - upper right)\", \"// if center of screen use vec2(0.5, 0.5);\", \"uniform float maxblur;\", \"//clamp value of max blur (0.0 = no blur, 1.0 default)\", \"uniform float threshold; // highlight threshold;\", \"uniform float gain; // highlight gain;\", \"uniform float bias; // bokeh edge bias\", \"uniform float fringe; // bokeh chromatic aberration / fringing\", \"uniform bool noise; //use noise instead of pattern for sample dithering\", \"uniform float dithering;\", \"uniform bool depthblur; // blur the depth buffer\", \"float dbsize = 1.25; // depth blur size\", \"/*\", \"next part is experimental\", \"not looking good with small sample and ring count\", \"looks okay starting from samples = 4, rings = 4\", \"*/\", \"uniform bool pentagon; //use pentagon as bokeh shape?\", \"float feather = 0.4; //pentagon shape feather\", \"//------------------------------------------\", \"float penta(vec2 coords) {\", \"//pentagonal shape\", \"float scale = float(rings) - 1.3;\", \"vec4  HS0 = vec4( 1.0,         0.0,         0.0,  1.0);\", \"vec4  HS1 = vec4( 0.309016994, 0.951056516, 0.0,  1.0);\", \"vec4  HS2 = vec4(-0.809016994, 0.587785252, 0.0,  1.0);\", \"vec4  HS3 = vec4(-0.809016994,-0.587785252, 0.0,  1.0);\", \"vec4  HS4 = vec4( 0.309016994,-0.951056516, 0.0,  1.0);\", \"vec4  HS5 = vec4( 0.0        ,0.0         , 1.0,  1.0);\", \"vec4  one = vec4( 1.0 );\", \"vec4 P = vec4((coords),vec2(scale, scale));\", \"vec4 dist = vec4(0.0);\", \"float inorout = -4.0;\", \"dist.x = dot( P, HS0 );\", \"dist.y = dot( P, HS1 );\", \"dist.z = dot( P, HS2 );\", \"dist.w = dot( P, HS3 );\", \"dist = smoothstep( -feather, feather, dist );\", \"inorout += dot( dist, one );\", \"dist.x = dot( P, HS4 );\", \"dist.y = HS5.w - abs( P.z );\", \"dist = smoothstep( -feather, feather, dist );\", \"inorout += dist.x;\", \"return clamp( inorout, 0.0, 1.0 );\", \"}\", \"float bdepth(vec2 coords) {\", \"// Depth buffer blur\", \"float d = 0.0;\", \"float kernel[9];\", \"vec2 offset[9];\", \"vec2 wh = vec2(1.0/textureWidth,1.0/textureHeight) * dbsize;\", \"offset[0] = vec2(-wh.x,-wh.y);\", \"offset[1] = vec2( 0.0, -wh.y);\", \"offset[2] = vec2( wh.x -wh.y);\", \"offset[3] = vec2(-wh.x,  0.0);\", \"offset[4] = vec2( 0.0,   0.0);\", \"offset[5] = vec2( wh.x,  0.0);\", \"offset[6] = vec2(-wh.x, wh.y);\", \"offset[7] = vec2( 0.0,  wh.y);\", \"offset[8] = vec2( wh.x, wh.y);\", \"kernel[0] = 1.0/16.0;   kernel[1] = 2.0/16.0;   kernel[2] = 1.0/16.0;\", \"kernel[3] = 2.0/16.0;   kernel[4] = 4.0/16.0;   kernel[5] = 2.0/16.0;\", \"kernel[6] = 1.0/16.0;   kernel[7] = 2.0/16.0;   kernel[8] = 1.0/16.0;\", \"for( int i=0; i<9; i++ ) {\", \"float tmp = texture2D(tDepth, coords + offset[i]).r;\", \"d += tmp * kernel[i];\", \"}\", \"return d;\", \"}\", \"vec3 color(vec2 coords,float blur) {\", \"//processing the sample\", \"vec3 col = vec3(0.0);\", \"vec2 texel = vec2(1.0/textureWidth,1.0/textureHeight);\", \"col.r = texture2D(tColor,coords + vec2(0.0,1.0)*texel*fringe*blur).r;\", \"col.g = texture2D(tColor,coords + vec2(-0.866,-0.5)*texel*fringe*blur).g;\", \"col.b = texture2D(tColor,coords + vec2(0.866,-0.5)*texel*fringe*blur).b;\", \"vec3 lumcoeff = vec3(0.299,0.587,0.114);\", \"float lum = dot(col.rgb, lumcoeff);\", \"float thresh = max((lum-threshold)*gain, 0.0);\", \"return col+mix(vec3(0.0),col,thresh*blur);\", \"}\", \"vec2 rand(vec2 coord) {\", \"// generating noise / pattern texture for dithering\", \"float noiseX = ((fract(1.0-coord.s*(textureWidth/2.0))*0.25)+(fract(coord.t*(textureHeight/2.0))*0.75))*2.0-1.0;\", \"float noiseY = ((fract(1.0-coord.s*(textureWidth/2.0))*0.75)+(fract(coord.t*(textureHeight/2.0))*0.25))*2.0-1.0;\", \"if (noise) {\", \"noiseX = clamp(fract(sin(dot(coord ,vec2(12.9898,78.233))) * 43758.5453),0.0,1.0)*2.0-1.0;\", \"noiseY = clamp(fract(sin(dot(coord ,vec2(12.9898,78.233)*2.0)) * 43758.5453),0.0,1.0)*2.0-1.0;\", \"}\", \"return vec2(noiseX,noiseY);\", \"}\", \"vec3 debugFocus(vec3 col, float blur, float depth) {\", \"float edge = 0.002*depth; //distance based edge smoothing\", \"float m = clamp(smoothstep(0.0,edge,blur),0.0,1.0);\", \"float e = clamp(smoothstep(1.0-edge,1.0,blur),0.0,1.0);\", \"col = mix(col,vec3(1.0,0.5,0.0),(1.0-m)*0.6);\", \"col = mix(col,vec3(0.0,0.5,1.0),((1.0-e)-(1.0-m))*0.2);\", \"return col;\", \"}\", \"float linearize(float depth) {\", \"return -zfar * znear / (depth * (zfar - znear) - zfar);\", \"}\", \"float vignette() {\", \"float dist = distance(vUv.xy, vec2(0.5,0.5));\", \"dist = smoothstep(vignout+(fstop/vignfade), vignin+(fstop/vignfade), dist);\", \"return clamp(dist,0.0,1.0);\", \"}\", \"float gather(float i, float j, int ringsamples, inout vec3 col, float w, float h, float blur) {\", \"float rings2 = float(rings);\", \"float step = PI*2.0 / float(ringsamples);\", \"float pw = cos(j*step)*i;\", \"float ph = sin(j*step)*i;\", \"float p = 1.0;\", \"if (pentagon) {\", \"p = penta(vec2(pw,ph));\", \"}\", \"col += color(vUv.xy + vec2(pw*w,ph*h), blur) * mix(1.0, i/rings2, bias) * p;\", \"return 1.0 * mix(1.0, i /rings2, bias) * p;\", \"}\", \"void main() {\", \"//scene depth calculation\", \"float depth = linearize(texture2D(tDepth,vUv.xy).x);\", \"// Blur depth?\", \"if (depthblur) {\", \"depth = linearize(bdepth(vUv.xy));\", \"}\", \"//focal plane calculation\", \"float fDepth = focalDepth;\", \"if (shaderFocus) {\", \"fDepth = linearize(texture2D(tDepth,focusCoords).x);\", \"}\", \"// dof blur factor calculation\", \"float blur = 0.0;\", \"if (manualdof) {\", \"float a = depth-fDepth; // Focal plane\", \"float b = (a-fdofstart)/fdofdist; // Far DoF\", \"float c = (-a-ndofstart)/ndofdist; // Near Dof\", \"blur = (a>0.0) ? b : c;\", \"} else {\", \"float f = focalLength; // focal length in mm\", \"float d = fDepth*1000.0; // focal plane in mm\", \"float o = depth*1000.0; // depth in mm\", \"float a = (o*f)/(o-f);\", \"float b = (d*f)/(d-f);\", \"float c = (d-f)/(d*fstop*CoC);\", \"blur = abs(a-b)*c;\", \"}\", \"blur = clamp(blur,0.0,1.0);\", \"// calculation of pattern for dithering\", \"vec2 noise = rand(vUv.xy)*dithering*blur;\", \"// getting blur x and y step factor\", \"float w = (1.0/textureWidth)*blur*maxblur+noise.x;\", \"float h = (1.0/textureHeight)*blur*maxblur+noise.y;\", \"// calculation of final color\", \"vec3 col = vec3(0.0);\", \"if(blur < 0.05) {\", \"//some optimization thingy\", \"col = texture2D(tColor, vUv.xy).rgb;\", \"} else {\", \"col = texture2D(tColor, vUv.xy).rgb;\", \"float s = 1.0;\", \"int ringsamples;\", \"for (int i = 1; i <= rings; i++) {\", \"/*unboxstart*/\", \"ringsamples = i * samples;\", \"for (int j = 0 ; j < maxringsamples ; j++) {\", \"if (j >= ringsamples) break;\", \"s += gather(float(i), float(j), ringsamples, col, w, h, blur);\", \"}\", \"/*unboxend*/\", \"}\", \"col /= s; //divide by sample count\", \"}\", \"if (showFocus) {\", \"col = debugFocus(col, blur, depth);\", \"}\", \"if (vignetting) {\", \"col *= vignette();\", \"}\", \"gl_FragColor.rgb = col;\", \"gl_FragColor.a = 1.0;\", \"} \"].join(\"\\n\")\n      }, t.a = i.BokehShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.BrightnessContrastShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          brightness: {\n            type: \"f\",\n            value: 0\n          },\n          contrast: {\n            type: \"f\",\n            value: 0\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform float brightness;\", \"uniform float contrast;\", \"varying vec2 vUv;\", \"void main() {\", \"gl_FragColor = texture2D( tDiffuse, vUv );\", \"gl_FragColor.rgb += brightness;\", \"if (contrast > 0.0) {\", \"gl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;\", \"} else {\", \"gl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;\", \"}\", \"}\"].join(\"\\n\")\n      }, t.a = i.BrightnessContrastShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.ColorCorrectionShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          powRGB: {\n            type: \"v3\",\n            value: new i._49(2, 2, 2)\n          },\n          mulRGB: {\n            type: \"v3\",\n            value: new i._49(1, 1, 1)\n          },\n          addRGB: {\n            type: \"v3\",\n            value: new i._49(0, 0, 0)\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform vec3 powRGB;\", \"uniform vec3 mulRGB;\", \"uniform vec3 addRGB;\", \"varying vec2 vUv;\", \"void main() {\", \"gl_FragColor = texture2D( tDiffuse, vUv );\", \"gl_FragColor.rgb = mulRGB * pow( ( gl_FragColor.rgb + addRGB ), powRGB );\", \"}\"].join(\"\\n\")\n      }, t.a = i.ColorCorrectionShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.ColorifyShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          color: {\n            type: \"c\",\n            value: new i.m(16777215)\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform vec3 color;\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 texel = texture2D( tDiffuse, vUv );\", \"vec3 luma = vec3( 0.299, 0.587, 0.114 );\", \"float v = dot( texel.xyz, luma );\", \"gl_FragColor = vec4( v * color, texel.w );\", \"}\"].join(\"\\n\")\n      }, t.a = i.ColorifyShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.ConvolutionShader = {\n        defines: {\n          KERNEL_SIZE_FLOAT: \"25.0\",\n          KERNEL_SIZE_INT: \"25\"\n        },\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          uImageIncrement: {\n            type: \"v2\",\n            value: new i._48(.001953125, 0)\n          },\n          cKernel: {\n            type: \"fv1\",\n            value: []\n          }\n        },\n        vertexShader: [\"uniform vec2 uImageIncrement;\", \"varying vec2 vUv;\", \"void main() {\", \"vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform float cKernel[ KERNEL_SIZE_INT ];\", \"uniform sampler2D tDiffuse;\", \"uniform vec2 uImageIncrement;\", \"varying vec2 vUv;\", \"void main() {\", \"vec2 imageCoord = vUv;\", \"vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\", \"for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\", \"sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\", \"imageCoord += uImageIncrement;\", \"}\", \"gl_FragColor = sum;\", \"}\"].join(\"\\n\"),\n        buildKernel: function buildKernel(e) {\n          var t,\n              r,\n              i,\n              n,\n              o = 2 * Math.ceil(3 * e) + 1;\n\n          for (o > 25 && (o = 25), n = .5 * (o - 1), r = new Array(o), i = 0, t = 0; t < o; ++t) {\n            r[t] = function (e, t) {\n              return Math.exp(-e * e / (2 * t * t));\n            }(t - n, e), i += r[t];\n          }\n\n          for (t = 0; t < o; ++t) {\n            r[t] /= i;\n          }\n\n          return r;\n        }\n      }, t.a = i.ConvolutionShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.CopyShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          opacity: {\n            type: \"f\",\n            value: 1\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform float opacity;\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 texel = texture2D( tDiffuse, vUv );\", \"gl_FragColor = opacity * texel;\", \"}\"].join(\"\\n\")\n      }, t.a = i.CopyShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.DDSLoader = function () {\n        this._parser = i.DDSLoader.parse;\n      }, i.DDSLoader.prototype = Object.create(i.p.prototype), i.DDSLoader.prototype.constructor = i.DDSLoader, i.DDSLoader.parse = function (e, t) {\n        function r(e) {\n          return e.charCodeAt(0) + (e.charCodeAt(1) << 8) + (e.charCodeAt(2) << 16) + (e.charCodeAt(3) << 24);\n        }\n\n        var n = {\n          mipmaps: [],\n          width: 0,\n          height: 0,\n          format: null,\n          mipmapCount: 1\n        },\n            o = r(\"DXT1\"),\n            a = r(\"DXT3\"),\n            s = r(\"DXT5\"),\n            c = r(\"ETC1\"),\n            l = new Int32Array(e, 0, 31);\n        if (542327876 !== l[0]) return console.error(\"THREE.DDSLoader.parse: Invalid magic number in DDS header.\"), n;\n        if (4 & !l[20]) return console.error(\"THREE.DDSLoader.parse: Unsupported format, must contain a FourCC code.\"), n;\n        var u,\n            h = l[21],\n            d = !1;\n\n        switch (h) {\n          case o:\n            u = 8, n.format = i._25;\n            break;\n\n          case a:\n            u = 16, n.format = i._20;\n            break;\n\n          case s:\n            u = 16, n.format = i._21;\n            break;\n\n          case c:\n            u = 8, n.format = i._24;\n            break;\n\n          default:\n            if (!(32 === l[22] && 16711680 & l[23] && 65280 & l[24] && 255 & l[25] && 4278190080 & l[26])) return console.error(\"THREE.DDSLoader.parse: Unsupported FourCC code \", function (e) {\n              return String.fromCharCode(255 & e, e >> 8 & 255, e >> 16 & 255, e >> 24 & 255);\n            }(h)), n;\n            d = !0, u = 64, n.format = i._19;\n        }\n\n        n.mipmapCount = 1, 131072 & l[2] && !1 !== t && (n.mipmapCount = Math.max(1, l[7]));\n        var p = l[28];\n        if (n.isCubemap = !!(512 & p), n.isCubemap && (!(1024 & p) || !(2048 & p) || !(4096 & p) || !(8192 & p) || !(16384 & p) || !(32768 & p))) return console.error(\"THREE.DDSLoader.parse: Incomplete cubemap faces\"), n;\n        n.width = l[4], n.height = l[3];\n\n        for (var f = l[1] + 4, m = n.isCubemap ? 6 : 1, v = 0; v < m; v++) {\n          for (var g = n.width, y = n.height, x = 0; x < n.mipmapCount; x++) {\n            if (d) var _ = function (e, t, r, i) {\n              for (var n = r * i * 4, o = new Uint8Array(e, t, n), a = new Uint8Array(n), s = 0, c = 0, l = 0; l < i; l++) {\n                for (var u = 0; u < r; u++) {\n                  var h = o[c];\n                  c++;\n                  var d = o[c];\n                  c++;\n                  var p = o[c];\n                  c++;\n                  var f = o[c];\n                  c++, a[s] = p, s++, a[s] = d, s++, a[s] = h, s++, a[s] = f, s++;\n                }\n              }\n\n              return a;\n            }(e, f, g, y),\n                b = _.length;else var b = Math.max(4, g) / 4 * Math.max(4, y) / 4 * u,\n                _ = new Uint8Array(e, f, b);\n            var w = {\n              data: _,\n              width: g,\n              height: y\n            };\n            n.mipmaps.push(w), f += b, g = Math.max(g >> 1, 1), y = Math.max(y >> 1, 1);\n          }\n        }\n\n        return n;\n      }, t.a = i.DDSLoader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.DOFMipMapShader = {\n        uniforms: {\n          tColor: {\n            type: \"t\",\n            value: null\n          },\n          tDepth: {\n            type: \"t\",\n            value: null\n          },\n          focus: {\n            type: \"f\",\n            value: 1\n          },\n          maxblur: {\n            type: \"f\",\n            value: 1\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform float focus;\", \"uniform float maxblur;\", \"uniform sampler2D tColor;\", \"uniform sampler2D tDepth;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 depth = texture2D( tDepth, vUv );\", \"float factor = depth.x - focus;\", \"vec4 col = texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );\", \"gl_FragColor = col;\", \"gl_FragColor.a = 1.0;\", \"}\"].join(\"\\n\")\n      }, t.a = i.DOFMipMapShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.DigitalGlitch = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          tDisp: {\n            type: \"t\",\n            value: null\n          },\n          byp: {\n            type: \"i\",\n            value: 0\n          },\n          amount: {\n            type: \"f\",\n            value: .08\n          },\n          angle: {\n            type: \"f\",\n            value: .02\n          },\n          seed: {\n            type: \"f\",\n            value: .02\n          },\n          seed_x: {\n            type: \"f\",\n            value: .02\n          },\n          seed_y: {\n            type: \"f\",\n            value: .02\n          },\n          distortion_x: {\n            type: \"f\",\n            value: .5\n          },\n          distortion_y: {\n            type: \"f\",\n            value: .6\n          },\n          col_s: {\n            type: \"f\",\n            value: .05\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform int byp;\", \"uniform sampler2D tDiffuse;\", \"uniform sampler2D tDisp;\", \"uniform float amount;\", \"uniform float angle;\", \"uniform float seed;\", \"uniform float seed_x;\", \"uniform float seed_y;\", \"uniform float distortion_x;\", \"uniform float distortion_y;\", \"uniform float col_s;\", \"varying vec2 vUv;\", \"float rand(vec2 co){\", \"return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\", \"}\", \"void main() {\", \"if(byp<1) {\", \"vec2 p = vUv;\", \"float xs = floor(gl_FragCoord.x / 0.5);\", \"float ys = floor(gl_FragCoord.y / 0.5);\", \"vec4 normal = texture2D (tDisp, p*seed*seed);\", \"if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\", \"if(seed_x>0.){\", \"p.y = 1. - (p.y + distortion_y);\", \"}\", \"else {\", \"p.y = distortion_y;\", \"}\", \"}\", \"if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\", \"if(seed_y>0.){\", \"p.x=distortion_x;\", \"}\", \"else {\", \"p.x = 1. - (p.x + distortion_x);\", \"}\", \"}\", \"p.x+=normal.x*seed_x*(seed/5.);\", \"p.y+=normal.y*seed_y*(seed/5.);\", \"vec2 offset = amount * vec2( cos(angle), sin(angle));\", \"vec4 cr = texture2D(tDiffuse, p + offset);\", \"vec4 cga = texture2D(tDiffuse, p);\", \"vec4 cb = texture2D(tDiffuse, p - offset);\", \"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\", \"vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\", \"gl_FragColor = gl_FragColor+ snow;\", \"}\", \"else {\", \"gl_FragColor=texture2D (tDiffuse, vUv);\", \"}\", \"}\"].join(\"\\n\")\n      }, t.a = i.DigitalGlitch;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.DotScreenPass = function (e, t, r) {\n        void 0 === i.DotScreenShader && console.error(\"THREE.DotScreenPass relies on THREE.DotScreenShader\");\n        var n = i.DotScreenShader;\n        this.uniforms = i._46.clone(n.uniforms), void 0 !== e && this.uniforms.center.value.copy(e), void 0 !== t && (this.uniforms.angle.value = t), void 0 !== r && (this.uniforms.scale.value = r), this.material = new i._35({\n          uniforms: this.uniforms,\n          vertexShader: n.vertexShader,\n          fragmentShader: n.fragmentShader\n        }), this.enabled = !0, this.renderToScreen = !1, this.needsSwap = !0, this.camera = new i._14(-1, 1, 1, -1, 0, 1), this.scene = new i._31(), this.quad = new i._3(new i._17(2, 2), null), this.scene.add(this.quad);\n      }, i.DotScreenPass.prototype = {\n        render: function render(e, t, r, i) {\n          this.uniforms.tDiffuse.value = r, this.uniforms.tSize.value.set(r.width, r.height), this.quad.material = this.material, this.renderToScreen ? e.render(this.scene, this.camera) : e.render(this.scene, this.camera, t, !1);\n        }\n      }, t.a = i.DotScreenPass;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.DotScreenShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          tSize: {\n            type: \"v2\",\n            value: new i._48(256, 256)\n          },\n          center: {\n            type: \"v2\",\n            value: new i._48(.5, .5)\n          },\n          angle: {\n            type: \"f\",\n            value: 1.57\n          },\n          scale: {\n            type: \"f\",\n            value: 1\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform vec2 center;\", \"uniform float angle;\", \"uniform float scale;\", \"uniform vec2 tSize;\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"float pattern() {\", \"float s = sin( angle ), c = cos( angle );\", \"vec2 tex = vUv * tSize - center;\", \"vec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\", \"return ( sin( point.x ) * sin( point.y ) ) * 4.0;\", \"}\", \"void main() {\", \"vec4 color = texture2D( tDiffuse, vUv );\", \"float average = ( color.r + color.g + color.b ) / 3.0;\", \"gl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\", \"}\"].join(\"\\n\")\n      }, t.a = i.DotScreenShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.EdgeShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          aspect: {\n            type: \"v2\",\n            value: new i._48(512, 512)\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"uniform vec2 aspect;\", \"vec2 texel = vec2(1.0 / aspect.x, 1.0 / aspect.y);\", \"mat3 G[9];\", \"const mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\", \"const mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\", \"const mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\", \"const mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\", \"const mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\", \"const mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\", \"const mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\", \"const mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\", \"const mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\", \"void main(void)\", \"{\", \"G[0] = g0,\", \"G[1] = g1,\", \"G[2] = g2,\", \"G[3] = g3,\", \"G[4] = g4,\", \"G[5] = g5,\", \"G[6] = g6,\", \"G[7] = g7,\", \"G[8] = g8;\", \"mat3 I;\", \"float cnv[9];\", \"vec3 sample;\", \"for (float i=0.0; i<3.0; i++) {\", \"for (float j=0.0; j<3.0; j++) {\", \"sample = texture2D(tDiffuse, vUv + texel * vec2(i-1.0,j-1.0) ).rgb;\", \"I[int(i)][int(j)] = length(sample);\", \"}\", \"}\", \"for (int i=0; i<9; i++) {\", \"float dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\", \"cnv[i] = dp3 * dp3;\", \"}\", \"float M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\", \"float S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\", \"gl_FragColor = vec4(vec3(sqrt(M/S)), 1.0);\", \"}\"].join(\"\\n\")\n      }, t.a = i.EdgeShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.EdgeShader2 = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          aspect: {\n            type: \"v2\",\n            value: new i._48(512, 512)\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"uniform vec2 aspect;\", \"vec2 texel = vec2(1.0 / aspect.x, 1.0 / aspect.y);\", \"mat3 G[2];\", \"const mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\", \"const mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\", \"void main(void)\", \"{\", \"mat3 I;\", \"float cnv[2];\", \"vec3 sample;\", \"G[0] = g0;\", \"G[1] = g1;\", \"for (float i=0.0; i<3.0; i++)\", \"for (float j=0.0; j<3.0; j++) {\", \"sample = texture2D( tDiffuse, vUv + texel * vec2(i-1.0,j-1.0) ).rgb;\", \"I[int(i)][int(j)] = length(sample);\", \"}\", \"for (int i=0; i<2; i++) {\", \"float dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\", \"cnv[i] = dp3 * dp3; \", \"}\", \"gl_FragColor = vec4(0.5 * sqrt(cnv[0]*cnv[0]+cnv[1]*cnv[1]));\", \"} \"].join(\"\\n\")\n      }, t.a = i.EdgeShader2;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.EffectComposer = function (e, t) {\n        if (this.renderer = e, void 0 === t) {\n          var r = e.getPixelRatio(),\n              n = Math.floor(e.context.canvas.width / r) || 1,\n              o = Math.floor(e.context.canvas.height / r) || 1,\n              a = {\n            minFilter: i.U,\n            magFilter: i.U,\n            format: i._22,\n            stencilBuffer: !1\n          };\n          t = new i._53(n, o, a);\n        }\n\n        this.renderTarget1 = t, this.renderTarget2 = t.clone(), this.writeBuffer = this.renderTarget1, this.readBuffer = this.renderTarget2, this.passes = [], void 0 === i.CopyShader && console.error(\"THREE.EffectComposer relies on THREE.CopyShader\"), this.copyPass = new i.ShaderPass(i.CopyShader);\n      }, i.EffectComposer.prototype = {\n        swapBuffers: function swapBuffers() {\n          var e = this.readBuffer;\n          this.readBuffer = this.writeBuffer, this.writeBuffer = e;\n        },\n        addPass: function addPass(e) {\n          this.passes.push(e);\n        },\n        insertPass: function insertPass(e, t) {\n          this.passes.splice(t, 0, e);\n        },\n        render: function render(e) {\n          this.writeBuffer = this.renderTarget1, this.readBuffer = this.renderTarget2;\n          var t,\n              r,\n              n = !1,\n              o = this.passes.length;\n\n          for (r = 0; r < o; r++) {\n            if (t = this.passes[r], t.enabled) {\n              if (t.render(this.renderer, this.writeBuffer, this.readBuffer, e, n), t.needsSwap) {\n                if (n) {\n                  var a = this.renderer.context;\n                  a.stencilFunc(a.NOTEQUAL, 1, 4294967295), this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer, e), a.stencilFunc(a.EQUAL, 1, 4294967295);\n                }\n\n                this.swapBuffers();\n              }\n\n              t instanceof i.MaskPass ? n = !0 : t instanceof i.ClearMaskPass && (n = !1);\n            }\n          }\n        },\n        reset: function reset(e) {\n          if (void 0 === e) {\n            e = this.renderTarget1.clone();\n            var t = this.renderer.getPixelRatio();\n            e.width = Math.floor(this.renderer.context.canvas.width / t), e.height = Math.floor(this.renderer.context.canvas.height / t);\n          }\n\n          this.renderTarget1.dispose(), this.renderTarget1 = e, this.renderTarget2.dispose(), this.renderTarget2 = e.clone(), this.writeBuffer = this.renderTarget1, this.readBuffer = this.renderTarget2;\n        },\n        setSize: function setSize(e, t) {\n          this.renderTarget1.setSize(e, t), this.renderTarget2.setSize(e, t);\n        }\n      }, t.a = i.EffectComposer;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.FXAAShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: new i._41()\n          },\n          resolution: {\n            type: \"v2\",\n            value: new i._48()\n          }\n        },\n        vertexShader: \"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\nuniform vec2 resolution;\\n\\nvoid main() {\\n  vUv = uv;\\n  vec2 fragCoord = uv * resolution;\\n  vec2 inverseVP = 1.0 / resolution.xy;\\n  v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\\n  v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\\n  v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\\n  v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\\n  v_rgbM = vec2(fragCoord * inverseVP);\\n\\n  gl_Position = projectionMatrix *\\n              modelViewMatrix *\\n              vec4(position,1.0);\\n}\\n\",\n        fragmentShader: '#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\n//texcoords computed in vertex step\\n//to avoid dependent texture reads\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\n//make sure to have a resolution uniform set to the screen size\\nuniform vec2 resolution;\\nuniform sampler2D tDiffuse;\\n\\n/**\\nBasic FXAA implementation based on the code on geeks3d.com with the\\nmodification that the texture2DLod stuff was removed since it\\'s\\nunsupported by WebGL.\\n\\n--\\n\\nFrom:\\nhttps://github.com/mitsuhiko/webgl-meincraft\\n\\nCopyright (c) 2011 by Armin Ronacher.\\n\\nSome rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are\\nmet:\\n\\n    * Redistributions of source code must retain the above copyright\\n      notice, this list of conditions and the following disclaimer.\\n\\n    * Redistributions in binary form must reproduce the above\\n      copyright notice, this list of conditions and the following\\n      disclaimer in the documentation and/or other materials provided\\n      with the distribution.\\n\\n    * The names of the contributors may not be used to endorse or\\n      promote products derived from this software without specific\\n      prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n*/\\n\\n#ifndef FXAA_REDUCE_MIN\\n    #define FXAA_REDUCE_MIN   (1.0/ 128.0)\\n#endif\\n#ifndef FXAA_REDUCE_MUL\\n    #define FXAA_REDUCE_MUL   (1.0 / 8.0)\\n#endif\\n#ifndef FXAA_SPAN_MAX\\n    #define FXAA_SPAN_MAX     8.0\\n#endif\\n\\n//optimized version for mobile, where dependent \\n//texture reads can be a bottleneck\\nvec4 fxaa_1540259130(sampler2D tex, vec2 fragCoord, vec2 resolution,\\n            vec2 v_rgbNW, vec2 v_rgbNE, \\n            vec2 v_rgbSW, vec2 v_rgbSE, \\n            vec2 v_rgbM) {\\n    vec4 color;\\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\\n    vec4 texColor = texture2D(tex, v_rgbM);\\n    vec3 rgbM  = texColor.xyz;\\n    vec3 luma = vec3(0.299, 0.587, 0.114);\\n    float lumaNW = dot(rgbNW, luma);\\n    float lumaNE = dot(rgbNE, luma);\\n    float lumaSW = dot(rgbSW, luma);\\n    float lumaSE = dot(rgbSE, luma);\\n    float lumaM  = dot(rgbM,  luma);\\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\\n    \\n    mediump vec2 dir;\\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\\n    \\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\\n    \\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\\n              dir * rcpDirMin)) * inverseVP;\\n    \\n    vec3 rgbA = 0.5 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\\n\\n    float lumaB = dot(rgbB, luma);\\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\\n        color = vec4(rgbA, texColor.a);\\n    else\\n        color = vec4(rgbB, texColor.a);\\n    return color;\\n}\\n\\nvoid main() {\\n  vec2 fragCoord = vUv * resolution;   \\n  gl_FragColor = fxaa_1540259130(tDiffuse, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\\n}\\n'\n      }, t.a = i.FXAAShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.FilmPass = function (e, t, r, n) {\n        void 0 === i.FilmShader && console.error(\"THREE.FilmPass relies on THREE.FilmShader\");\n        var o = i.FilmShader;\n        this.uniforms = i._46.clone(o.uniforms), this.material = new i._35({\n          uniforms: this.uniforms,\n          vertexShader: o.vertexShader,\n          fragmentShader: o.fragmentShader\n        }), void 0 !== n && (this.uniforms.grayscale.value = n), void 0 !== e && (this.uniforms.nIntensity.value = e), void 0 !== t && (this.uniforms.sIntensity.value = t), void 0 !== r && (this.uniforms.sCount.value = r), this.enabled = !0, this.renderToScreen = !1, this.needsSwap = !0, this.camera = new i._14(-1, 1, 1, -1, 0, 1), this.scene = new i._31(), this.quad = new i._3(new i._17(2, 2), null), this.scene.add(this.quad);\n      }, i.FilmPass.prototype = {\n        render: function render(e, t, r, i) {\n          this.uniforms.tDiffuse.value = r, this.uniforms.time.value += i, this.quad.material = this.material, this.renderToScreen ? e.render(this.scene, this.camera) : e.render(this.scene, this.camera, t, !1);\n        }\n      }, t.a = i.FilmPass;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.FilmShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          time: {\n            type: \"f\",\n            value: 0\n          },\n          nIntensity: {\n            type: \"f\",\n            value: .5\n          },\n          sIntensity: {\n            type: \"f\",\n            value: .05\n          },\n          sCount: {\n            type: \"f\",\n            value: 4096\n          },\n          grayscale: {\n            type: \"i\",\n            value: 1\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform float time;\", \"uniform bool grayscale;\", \"uniform float nIntensity;\", \"uniform float sIntensity;\", \"uniform float sCount;\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 cTextureScreen = texture2D( tDiffuse, vUv );\", \"float x = vUv.x * vUv.y * time *  1000.0;\", \"x = mod( x, 13.0 ) * mod( x, 123.0 );\", \"float dx = mod( x, 0.01 );\", \"vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\", \"vec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\", \"cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\", \"cResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\", \"if( grayscale ) {\", \"cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\", \"}\", \"gl_FragColor =  vec4( cResult, cTextureScreen.a );\", \"}\"].join(\"\\n\")\n      }, t.a = i.FilmShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.FocusShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          screenWidth: {\n            type: \"f\",\n            value: 1024\n          },\n          screenHeight: {\n            type: \"f\",\n            value: 1024\n          },\n          sampleDistance: {\n            type: \"f\",\n            value: .94\n          },\n          waveFactor: {\n            type: \"f\",\n            value: .00125\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform float screenWidth;\", \"uniform float screenHeight;\", \"uniform float sampleDistance;\", \"uniform float waveFactor;\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 color, org, tmp, add;\", \"float sample_dist, f;\", \"vec2 vin;\", \"vec2 uv = vUv;\", \"add = color = org = texture2D( tDiffuse, uv );\", \"vin = ( uv - vec2( 0.5 ) ) * vec2( 1.4 );\", \"sample_dist = dot( vin, vin ) * 2.0;\", \"f = ( waveFactor * 100.0 + sample_dist ) * sampleDistance * 4.0;\", \"vec2 sampleSize = vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2( f );\", \"add += tmp = texture2D( tDiffuse, uv + vec2( 0.111964, 0.993712 ) * sampleSize );\", \"if( tmp.b < color.b ) color = tmp;\", \"add += tmp = texture2D( tDiffuse, uv + vec2( 0.846724, 0.532032 ) * sampleSize );\", \"if( tmp.b < color.b ) color = tmp;\", \"add += tmp = texture2D( tDiffuse, uv + vec2( 0.943883, -0.330279 ) * sampleSize );\", \"if( tmp.b < color.b ) color = tmp;\", \"add += tmp = texture2D( tDiffuse, uv + vec2( 0.330279, -0.943883 ) * sampleSize );\", \"if( tmp.b < color.b ) color = tmp;\", \"add += tmp = texture2D( tDiffuse, uv + vec2( -0.532032, -0.846724 ) * sampleSize );\", \"if( tmp.b < color.b ) color = tmp;\", \"add += tmp = texture2D( tDiffuse, uv + vec2( -0.993712, -0.111964 ) * sampleSize );\", \"if( tmp.b < color.b ) color = tmp;\", \"add += tmp = texture2D( tDiffuse, uv + vec2( -0.707107, 0.707107 ) * sampleSize );\", \"if( tmp.b < color.b ) color = tmp;\", \"color = color * vec4( 2.0 ) - ( add / vec4( 8.0 ) );\", \"color = color + ( add / vec4( 8.0 ) - color ) * ( vec4( 1.0 ) - vec4( sample_dist * 0.5 ) );\", \"gl_FragColor = vec4( color.rgb * color.rgb * vec3( 0.95 ) + color.rgb, 1.0 );\", \"}\"].join(\"\\n\")\n      }, t.a = i.FocusShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.FresnelShader = {\n        uniforms: {\n          mRefractionRatio: {\n            type: \"f\",\n            value: 1.02\n          },\n          mFresnelBias: {\n            type: \"f\",\n            value: .1\n          },\n          mFresnelPower: {\n            type: \"f\",\n            value: 2\n          },\n          mFresnelScale: {\n            type: \"f\",\n            value: 1\n          },\n          tCube: {\n            type: \"t\",\n            value: null\n          }\n        },\n        vertexShader: [\"uniform float mRefractionRatio;\", \"uniform float mFresnelBias;\", \"uniform float mFresnelScale;\", \"uniform float mFresnelPower;\", \"varying vec3 vReflect;\", \"varying vec3 vRefract[3];\", \"varying float vReflectionFactor;\", \"void main() {\", \"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\", \"vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\", \"vec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\", \"vec3 I = worldPosition.xyz - cameraPosition;\", \"vReflect = reflect( I, worldNormal );\", \"vRefract[0] = refract( normalize( I ), worldNormal, mRefractionRatio );\", \"vRefract[1] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.99 );\", \"vRefract[2] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.98 );\", \"vReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), worldNormal ), mFresnelPower );\", \"gl_Position = projectionMatrix * mvPosition;\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform samplerCube tCube;\", \"varying vec3 vReflect;\", \"varying vec3 vRefract[3];\", \"varying float vReflectionFactor;\", \"void main() {\", \"vec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\", \"vec4 refractedColor = vec4( 1.0 );\", \"refractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\", \"refractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\", \"refractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\", \"gl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\", \"}\"].join(\"\\n\")\n      }, t.a = i.FresnelShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.GammaCorrectionShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"#define GAMMA_OUTPUT\", \"#define GAMMA_FACTOR 2\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", i._33.common, \"void main() {\", \"vec4 tex = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );\", \"gl_FragColor = vec4( linearToOutput( tex.rgb ), tex.a );\", \"}\"].join(\"\\n\")\n      }, t.a = i.GammaCorrectionShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.GlitchPass = function (e) {\n        void 0 === i.DigitalGlitch && console.error(\"THREE.GlitchPass relies on THREE.DigitalGlitch\");\n        var t = i.DigitalGlitch;\n        this.uniforms = i._46.clone(t.uniforms), void 0 == e && (e = 64), this.uniforms.tDisp.value = this.generateHeightmap(e), this.material = new i._35({\n          uniforms: this.uniforms,\n          vertexShader: t.vertexShader,\n          fragmentShader: t.fragmentShader\n        }), this.enabled = !0, this.renderToScreen = !1, this.needsSwap = !0, this.camera = new i._14(-1, 1, 1, -1, 0, 1), this.scene = new i._31(), this.quad = new i._3(new i._17(2, 2), null), this.scene.add(this.quad), this.goWild = !1, this.curF = 0, this.generateTrigger();\n      }, i.GlitchPass.prototype = {\n        render: function render(e, t, r, n) {\n          this.uniforms.tDiffuse.value = r, this.uniforms.seed.value = Math.random(), this.uniforms.byp.value = 0, this.curF % this.randX == 0 || 1 == this.goWild ? (this.uniforms.amount.value = Math.random() / 30, this.uniforms.angle.value = i._2.randFloat(-Math.PI, Math.PI), this.uniforms.seed_x.value = i._2.randFloat(-1, 1), this.uniforms.seed_y.value = i._2.randFloat(-1, 1), this.uniforms.distortion_x.value = i._2.randFloat(0, 1), this.uniforms.distortion_y.value = i._2.randFloat(0, 1), this.curF = 0, this.generateTrigger()) : this.curF % this.randX < this.randX / 5 ? (this.uniforms.amount.value = Math.random() / 90, this.uniforms.angle.value = i._2.randFloat(-Math.PI, Math.PI), this.uniforms.distortion_x.value = i._2.randFloat(0, 1), this.uniforms.distortion_y.value = i._2.randFloat(0, 1), this.uniforms.seed_x.value = i._2.randFloat(-.3, .3), this.uniforms.seed_y.value = i._2.randFloat(-.3, .3)) : 0 == this.goWild && (this.uniforms.byp.value = 1), this.curF++, this.quad.material = this.material, this.renderToScreen ? e.render(this.scene, this.camera) : e.render(this.scene, this.camera, t, !1);\n        },\n        generateTrigger: function generateTrigger() {\n          this.randX = i._2.randInt(120, 240);\n        },\n        generateHeightmap: function generateHeightmap(e) {\n          for (var t = new Float32Array(e * e * 3), r = e * e, n = 0; n < r; n++) {\n            var o = i._2.randFloat(0, 1);\n\n            t[3 * n + 0] = o, t[3 * n + 1] = o, t[3 * n + 2] = o;\n          }\n\n          var a = new i.u(t, e, e, i._22, i.I);\n          return a.needsUpdate = !0, a;\n        }\n      }, t.a = i.GlitchPass;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.HorizontalBlurShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          h: {\n            type: \"f\",\n            value: 1 / 512\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform float h;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 sum = vec4( 0.0 );\", \"sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\", \"sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\", \"sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\", \"sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\", \"sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\", \"sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\", \"sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\", \"sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\", \"gl_FragColor = sum;\", \"}\"].join(\"\\n\")\n      }, t.a = i.HorizontalBlurShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.HorizontalTiltShiftShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          h: {\n            type: \"f\",\n            value: 1 / 512\n          },\n          r: {\n            type: \"f\",\n            value: .35\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform float h;\", \"uniform float r;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 sum = vec4( 0.0 );\", \"float hh = h * abs( r - vUv.y );\", \"sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\", \"sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\", \"sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\", \"sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\", \"sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\", \"sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\", \"sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\", \"sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\", \"gl_FragColor = sum;\", \"}\"].join(\"\\n\")\n      }, t.a = i.HorizontalTiltShiftShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.HueSaturationShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          hue: {\n            type: \"f\",\n            value: 0\n          },\n          saturation: {\n            type: \"f\",\n            value: 0\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform float hue;\", \"uniform float saturation;\", \"varying vec2 vUv;\", \"void main() {\", \"gl_FragColor = texture2D( tDiffuse, vUv );\", \"float angle = hue * 3.14159265;\", \"float s = sin(angle), c = cos(angle);\", \"vec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;\", \"float len = length(gl_FragColor.rgb);\", \"gl_FragColor.rgb = vec3(\", \"dot(gl_FragColor.rgb, weights.xyz),\", \"dot(gl_FragColor.rgb, weights.zxy),\", \"dot(gl_FragColor.rgb, weights.yzx)\", \");\", \"float average = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;\", \"if (saturation > 0.0) {\", \"gl_FragColor.rgb += (average - gl_FragColor.rgb) * (1.0 - 1.0 / (1.001 - saturation));\", \"} else {\", \"gl_FragColor.rgb += (average - gl_FragColor.rgb) * (-saturation);\", \"}\", \"}\"].join(\"\\n\")\n      }, t.a = i.HueSaturationShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.KaleidoShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          sides: {\n            type: \"f\",\n            value: 6\n          },\n          angle: {\n            type: \"f\",\n            value: 0\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform float sides;\", \"uniform float angle;\", \"varying vec2 vUv;\", \"void main() {\", \"vec2 p = vUv - 0.5;\", \"float r = length(p);\", \"float a = atan(p.y, p.x) + angle;\", \"float tau = 2. * 3.1416 ;\", \"a = mod(a, tau/sides);\", \"a = abs(a - tau/sides/2.) ;\", \"p = r * vec2(cos(a), sin(a));\", \"vec4 color = texture2D(tDiffuse, p + 0.5);\", \"gl_FragColor = color;\", \"}\"].join(\"\\n\")\n      }, t.a = i.KaleidoShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.LuminosityShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 texel = texture2D( tDiffuse, vUv );\", \"vec3 luma = vec3( 0.299, 0.587, 0.114 );\", \"float v = dot( texel.xyz, luma );\", \"gl_FragColor = vec4( v, v, v, texel.w );\", \"}\"].join(\"\\n\")\n      }, t.a = i.LuminosityShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.MTLLoader = function (e) {\n        this.manager = void 0 !== e ? e : i.v;\n      }, i.MTLLoader.prototype = {\n        constructor: i.MTLLoader,\n        load: function load(e, t, r, n) {\n          var o = this,\n              a = new i._54(this.manager);\n          a.setPath(this.path), a.load(e, function (e) {\n            t(o.parse(e));\n          }, r, n);\n        },\n        setPath: function setPath(e) {\n          this.path = e;\n        },\n        setBaseUrl: function setBaseUrl(e) {\n          this.baseUrl = e;\n        },\n        setCrossOrigin: function setCrossOrigin(e) {\n          this.crossOrigin = e;\n        },\n        setMaterialOptions: function setMaterialOptions(e) {\n          this.materialOptions = e;\n        },\n        parse: function parse(e) {\n          for (var t = e.split(\"\\n\"), r = {}, n = /\\s+/, o = {}, a = 0; a < t.length; a++) {\n            var s = t[a];\n\n            if (s = s.trim(), 0 !== s.length && \"#\" !== s.charAt(0)) {\n              var c = s.indexOf(\" \"),\n                  l = c >= 0 ? s.substring(0, c) : s;\n              l = l.toLowerCase();\n              var u = c >= 0 ? s.substring(c + 1) : \"\";\n              if (u = u.trim(), \"newmtl\" === l) r = {\n                name: u\n              }, o[u] = r;else if (r) if (\"ka\" === l || \"kd\" === l || \"ks\" === l) {\n                var h = u.split(n, 3);\n                r[l] = [parseFloat(h[0]), parseFloat(h[1]), parseFloat(h[2])];\n              } else r[l] = u;\n            }\n          }\n\n          var d = new i.MTLLoader.MaterialCreator(this.baseUrl, this.materialOptions);\n          return d.setCrossOrigin(this.crossOrigin), d.setManager(this.manager), d.setMaterials(o), d;\n        }\n      }, i.MTLLoader.MaterialCreator = function (e, t) {\n        this.baseUrl = e, this.options = t, this.materialsInfo = {}, this.materials = {}, this.materialsArray = [], this.nameLookup = {}, this.side = this.options && this.options.side ? this.options.side : i.L, this.wrap = this.options && this.options.wrap ? this.options.wrap : i._27;\n      }, i.MTLLoader.MaterialCreator.prototype = {\n        constructor: i.MTLLoader.MaterialCreator,\n        setCrossOrigin: function setCrossOrigin(e) {\n          this.crossOrigin = e;\n        },\n        setManager: function setManager(e) {\n          this.manager = e;\n        },\n        setMaterials: function setMaterials(e) {\n          this.materialsInfo = this.convert(e), this.materials = {}, this.materialsArray = [], this.nameLookup = {};\n        },\n        convert: function convert(e) {\n          if (!this.options) return e;\n          var t = {};\n\n          for (var r in e) {\n            var i = e[r],\n                n = {};\n            t[r] = n;\n\n            for (var o in i) {\n              var a = !0,\n                  s = i[o],\n                  c = o.toLowerCase();\n\n              switch (c) {\n                case \"kd\":\n                case \"ka\":\n                case \"ks\":\n                  this.options && this.options.normalizeRGB && (s = [s[0] / 255, s[1] / 255, s[2] / 255]), this.options && this.options.ignoreZeroRGBs && 0 === s[0] && 0 === s[1] && 0 === s[1] && (a = !1);\n              }\n\n              a && (n[c] = s);\n            }\n          }\n\n          return t;\n        },\n        preload: function preload() {\n          for (var e in this.materialsInfo) {\n            this.create(e);\n          }\n        },\n        getIndex: function getIndex(e) {\n          return this.nameLookup[e];\n        },\n        getAsArray: function getAsArray() {\n          var e = 0;\n\n          for (var t in this.materialsInfo) {\n            this.materialsArray[e] = this.create(t), this.nameLookup[t] = e, e++;\n          }\n\n          return this.materialsArray;\n        },\n        create: function create(e) {\n          return void 0 === this.materials[e] && this.createMaterial_(e), this.materials[e];\n        },\n        createMaterial_: function createMaterial_(e) {\n          var t = this.materialsInfo[e],\n              r = {\n            name: e,\n            side: this.side\n          };\n\n          for (var n in t) {\n            var o = t[n];\n            if (\"\" !== o) switch (n.toLowerCase()) {\n              case \"kd\":\n                r.color = new i.m().fromArray(o);\n                break;\n\n              case \"ks\":\n                r.specular = new i.m().fromArray(o);\n                break;\n\n              case \"map_kd\":\n                r.map = this.loadTexture(this.baseUrl + o), r.map.wrapS = this.wrap, r.map.wrapT = this.wrap;\n                break;\n\n              case \"ns\":\n                r.shininess = parseFloat(o);\n                break;\n\n              case \"d\":\n                o < 1 && (r.opacity = o, r.transparent = !0);\n                break;\n\n              case \"Tr\":\n                o > 0 && (r.opacity = 1 - o, r.transparent = !0);\n                break;\n\n              case \"map_bump\":\n              case \"bump\":\n                if (r.bumpMap) break;\n                r.bumpMap = this.loadTexture(this.baseUrl + o), r.bumpMap.wrapS = this.wrap, r.bumpMap.wrapT = this.wrap;\n            }\n          }\n\n          return this.materials[e] = new i._7(r), this.materials[e];\n        },\n        loadTexture: function loadTexture(e, t, r, n, o) {\n          var a,\n              s = i.W.Handlers.get(e),\n              c = void 0 !== this.manager ? this.manager : i.v;\n          return null === s && (s = new i._42(c)), s.setCrossOrigin && s.setCrossOrigin(this.crossOrigin), a = s.load(e, r, n, o), void 0 !== t && (a.mapping = t), a;\n        }\n      }, Object.assign(i.MTLLoader.prototype, i.C.prototype), t.a = i.MTLLoader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.MarchingCubes = function (e, t, r, n) {\n        i.S.call(this, t), this.enableUvs = void 0 !== r && r, this.enableColors = void 0 !== n && n, this.init = function (e) {\n          this.resolution = e, this.isolation = 80, this.size = e, this.size2 = this.size * this.size, this.size3 = this.size2 * this.size, this.halfsize = this.size / 2, this.delta = 2 / this.size, this.yd = this.size, this.zd = this.size2, this.field = new Float32Array(this.size3), this.normal_cache = new Float32Array(3 * this.size3), this.vlist = new Float32Array(36), this.nlist = new Float32Array(36), this.maxCount = 4096, this.count = 0, this.hasPositions = !1, this.hasNormals = !1, this.hasColors = !1, this.hasUvs = !1, this.positionArray = new Float32Array(3 * this.maxCount), this.normalArray = new Float32Array(3 * this.maxCount), this.enableUvs && (this.uvArray = new Float32Array(2 * this.maxCount)), this.enableColors && (this.colorArray = new Float32Array(3 * this.maxCount));\n        }, this.lerp = function (e, t, r) {\n          return e + (t - e) * r;\n        }, this.VIntX = function (e, t, r, i, n, o, a, s, c, l) {\n          var u = (n - c) / (l - c),\n              h = this.normal_cache;\n          t[i] = o + u * this.delta, t[i + 1] = a, t[i + 2] = s, r[i] = this.lerp(h[e], h[e + 3], u), r[i + 1] = this.lerp(h[e + 1], h[e + 4], u), r[i + 2] = this.lerp(h[e + 2], h[e + 5], u);\n        }, this.VIntY = function (e, t, r, i, n, o, a, s, c, l) {\n          var u = (n - c) / (l - c),\n              h = this.normal_cache;\n          t[i] = o, t[i + 1] = a + u * this.delta, t[i + 2] = s;\n          var d = e + 3 * this.yd;\n          r[i] = this.lerp(h[e], h[d], u), r[i + 1] = this.lerp(h[e + 1], h[d + 1], u), r[i + 2] = this.lerp(h[e + 2], h[d + 2], u);\n        }, this.VIntZ = function (e, t, r, i, n, o, a, s, c, l) {\n          var u = (n - c) / (l - c),\n              h = this.normal_cache;\n          t[i] = o, t[i + 1] = a, t[i + 2] = s + u * this.delta;\n          var d = e + 3 * this.zd;\n          r[i] = this.lerp(h[e], h[d], u), r[i + 1] = this.lerp(h[e + 1], h[d + 1], u), r[i + 2] = this.lerp(h[e + 2], h[d + 2], u);\n        }, this.compNorm = function (e) {\n          var t = 3 * e;\n          0 === this.normal_cache[t] && (this.normal_cache[t] = this.field[e - 1] - this.field[e + 1], this.normal_cache[t + 1] = this.field[e - this.yd] - this.field[e + this.yd], this.normal_cache[t + 2] = this.field[e - this.zd] - this.field[e + this.zd]);\n        }, this.polygonize = function (e, t, r, n, o, a) {\n          var s = n + 1,\n              c = n + this.yd,\n              l = n + this.zd,\n              u = s + this.yd,\n              h = s + this.zd,\n              d = n + this.yd + this.zd,\n              p = s + this.yd + this.zd,\n              f = 0,\n              m = this.field[n],\n              v = this.field[s],\n              g = this.field[c],\n              y = this.field[u],\n              x = this.field[l],\n              _ = this.field[h],\n              b = this.field[d],\n              w = this.field[p];\n          m < o && (f |= 1), v < o && (f |= 2), g < o && (f |= 8), y < o && (f |= 4), x < o && (f |= 16), _ < o && (f |= 32), b < o && (f |= 128), w < o && (f |= 64);\n          var M = i.edgeTable[f];\n          if (0 === M) return 0;\n          var E = this.delta,\n              S = e + E,\n              T = t + E,\n              A = r + E;\n          1 & M && (this.compNorm(n), this.compNorm(s), this.VIntX(3 * n, this.vlist, this.nlist, 0, o, e, t, r, m, v)), 2 & M && (this.compNorm(s), this.compNorm(u), this.VIntY(3 * s, this.vlist, this.nlist, 3, o, S, t, r, v, y)), 4 & M && (this.compNorm(c), this.compNorm(u), this.VIntX(3 * c, this.vlist, this.nlist, 6, o, e, T, r, g, y)), 8 & M && (this.compNorm(n), this.compNorm(c), this.VIntY(3 * n, this.vlist, this.nlist, 9, o, e, t, r, m, g)), 16 & M && (this.compNorm(l), this.compNorm(h), this.VIntX(3 * l, this.vlist, this.nlist, 12, o, e, t, A, x, _)), 32 & M && (this.compNorm(h), this.compNorm(p), this.VIntY(3 * h, this.vlist, this.nlist, 15, o, S, t, A, _, w)), 64 & M && (this.compNorm(d), this.compNorm(p), this.VIntX(3 * d, this.vlist, this.nlist, 18, o, e, T, A, b, w)), 128 & M && (this.compNorm(l), this.compNorm(d), this.VIntY(3 * l, this.vlist, this.nlist, 21, o, e, t, A, x, b)), 256 & M && (this.compNorm(n), this.compNorm(l), this.VIntZ(3 * n, this.vlist, this.nlist, 24, o, e, t, r, m, x)), 512 & M && (this.compNorm(s), this.compNorm(h), this.VIntZ(3 * s, this.vlist, this.nlist, 27, o, S, t, r, v, _)), 1024 & M && (this.compNorm(u), this.compNorm(p), this.VIntZ(3 * u, this.vlist, this.nlist, 30, o, S, T, r, y, w)), 2048 & M && (this.compNorm(c), this.compNorm(d), this.VIntZ(3 * c, this.vlist, this.nlist, 33, o, e, T, r, g, b)), f <<= 4;\n\n          for (var L, C, R, P = 0, D = 0; -1 != i.triTable[f + D];) {\n            L = f + D, C = L + 1, R = L + 2, this.posnormtriv(this.vlist, this.nlist, 3 * i.triTable[L], 3 * i.triTable[C], 3 * i.triTable[R], a), D += 3, P++;\n          }\n\n          return P;\n        }, this.posnormtriv = function (e, t, r, i, n, o) {\n          var a = 3 * this.count;\n\n          if (this.positionArray[a] = e[r], this.positionArray[a + 1] = e[r + 1], this.positionArray[a + 2] = e[r + 2], this.positionArray[a + 3] = e[i], this.positionArray[a + 4] = e[i + 1], this.positionArray[a + 5] = e[i + 2], this.positionArray[a + 6] = e[n], this.positionArray[a + 7] = e[n + 1], this.positionArray[a + 8] = e[n + 2], this.normalArray[a] = t[r], this.normalArray[a + 1] = t[r + 1], this.normalArray[a + 2] = t[r + 2], this.normalArray[a + 3] = t[i], this.normalArray[a + 4] = t[i + 1], this.normalArray[a + 5] = t[i + 2], this.normalArray[a + 6] = t[n], this.normalArray[a + 7] = t[n + 1], this.normalArray[a + 8] = t[n + 2], this.enableUvs) {\n            var s = 2 * this.count;\n            this.uvArray[s] = e[r], this.uvArray[s + 1] = e[r + 2], this.uvArray[s + 2] = e[i], this.uvArray[s + 3] = e[i + 2], this.uvArray[s + 4] = e[n], this.uvArray[s + 5] = e[n + 2];\n          }\n\n          this.enableColors && (this.colorArray[a] = e[r], this.colorArray[a + 1] = e[r + 1], this.colorArray[a + 2] = e[r + 2], this.colorArray[a + 3] = e[i], this.colorArray[a + 4] = e[i + 1], this.colorArray[a + 5] = e[i + 2], this.colorArray[a + 6] = e[n], this.colorArray[a + 7] = e[n + 1], this.colorArray[a + 8] = e[n + 2]), this.count += 3, this.count >= this.maxCount - 3 && (this.hasPositions = !0, this.hasNormals = !0, this.enableUvs && (this.hasUvs = !0), this.enableColors && (this.hasColors = !0), o(this));\n        }, this.begin = function () {\n          this.count = 0, this.hasPositions = !1, this.hasNormals = !1, this.hasUvs = !1, this.hasColors = !1;\n        }, this.end = function (e) {\n          if (0 !== this.count) {\n            for (var t = 3 * this.count; t < this.positionArray.length; t++) {\n              this.positionArray[t] = 0;\n            }\n\n            this.hasPositions = !0, this.hasNormals = !0, this.enableUvs && (this.hasUvs = !0), this.enableColors && (this.hasColors = !0), e(this);\n          }\n        }, this.addBall = function (e, t, r, i, n) {\n          var o = this.size * Math.sqrt(i / n),\n              a = r * this.size,\n              s = t * this.size,\n              c = e * this.size,\n              l = Math.floor(a - o);\n          l < 1 && (l = 1);\n          var u = Math.floor(a + o);\n          u > this.size - 1 && (u = this.size - 1);\n          var h = Math.floor(s - o);\n          h < 1 && (h = 1);\n          var d = Math.floor(s + o);\n          d > this.size - 1 && (d = this.size - 1);\n          var p = Math.floor(c - o);\n          p < 1 && (p = 1);\n          var f = Math.floor(c + o);\n          f > this.size - 1 && (f = this.size - 1);\n\n          var m, v, g, y, x, _, b, w, M, E, S;\n\n          for (g = l; g < u; g++) {\n            for (x = this.size2 * g, w = g / this.size - r, M = w * w, v = h; v < d; v++) {\n              for (y = x + this.size * v, b = v / this.size - t, E = b * b, m = p; m < f; m++) {\n                _ = m / this.size - e, (S = i / (1e-6 + _ * _ + E + M) - n) > 0 && (this.field[y + m] += S);\n              }\n            }\n          }\n        }, this.addPlaneX = function (e, t) {\n          var r,\n              i,\n              n,\n              o,\n              a,\n              s,\n              c,\n              l = this.size,\n              u = this.yd,\n              h = this.zd,\n              d = this.field,\n              p = l * Math.sqrt(e / t);\n\n          for (p > l && (p = l), r = 0; r < p; r++) {\n            if (s = r / l, o = s * s, (a = e / (1e-4 + o) - t) > 0) for (i = 0; i < l; i++) {\n              for (c = r + i * u, n = 0; n < l; n++) {\n                d[h * n + c] += a;\n              }\n            }\n          }\n        }, this.addPlaneY = function (e, t) {\n          var r,\n              i,\n              n,\n              o,\n              a,\n              s,\n              c,\n              l,\n              u = this.size,\n              h = this.yd,\n              d = this.zd,\n              p = this.field,\n              f = u * Math.sqrt(e / t);\n\n          for (f > u && (f = u), i = 0; i < f; i++) {\n            if (s = i / u, o = s * s, (a = e / (1e-4 + o) - t) > 0) for (c = i * h, r = 0; r < u; r++) {\n              for (l = c + r, n = 0; n < u; n++) {\n                p[d * n + l] += a;\n              }\n            }\n          }\n        }, this.addPlaneZ = function (e, t) {\n          var r,\n              i,\n              n,\n              o,\n              a,\n              s,\n              c,\n              l,\n              u = this.size,\n              h = this.yd,\n              d = this.zd,\n              p = this.field,\n              f = u * Math.sqrt(e / t);\n\n          for (f > u && (f = u), n = 0; n < f; n++) {\n            if (s = n / u, o = s * s, (a = e / (1e-4 + o) - t) > 0) for (c = d * n, i = 0; i < u; i++) {\n              for (l = c + i * h, r = 0; r < u; r++) {\n                p[l + r] += a;\n              }\n            }\n          }\n        }, this.reset = function () {\n          var e;\n\n          for (e = 0; e < this.size3; e++) {\n            this.normal_cache[3 * e] = 0, this.field[e] = 0;\n          }\n        }, this.render = function (e) {\n          this.begin();\n\n          for (var t = this.size - 2, r = 1; r < t; r++) {\n            for (var i = this.size2 * r, n = (r - this.halfsize) / this.halfsize, o = 1; o < t; o++) {\n              for (var a = i + this.size * o, s = (o - this.halfsize) / this.halfsize, c = 1; c < t; c++) {\n                var l = (c - this.halfsize) / this.halfsize,\n                    u = a + c;\n                this.polygonize(l, s, n, u, this.isolation, e);\n              }\n            }\n          }\n\n          this.end(e);\n        }, this.generateGeometry = function () {\n          var e = 0,\n              t = new i.N(),\n              r = [],\n              n = function n(_n2) {\n            var o, a, s, c, l, u, h, d, p, f, m, v, g, y;\n\n            for (o = 0; o < _n2.count; o++) {\n              d = 3 * o, p = d + 1, f = d + 2, a = _n2.positionArray[d], s = _n2.positionArray[p], c = _n2.positionArray[f], l = new i._49(a, s, c), a = _n2.normalArray[d], s = _n2.normalArray[p], c = _n2.normalArray[f], u = new i._49(a, s, c), u.normalize(), t.vertices.push(l), r.push(u);\n            }\n\n            for (y = _n2.count / 3, o = 0; o < y; o++) {\n              d = 3 * (e + o), p = d + 1, f = d + 2, m = r[d], v = r[p], g = r[f], h = new i.E(d, p, f, [m, v, g]), t.faces.push(h);\n            }\n\n            e += y, _n2.count = 0;\n          };\n\n          return this.render(n), t;\n        }, this.init(e);\n      }, i.MarchingCubes.prototype = Object.create(i.S.prototype), i.MarchingCubes.prototype.constructor = i.MarchingCubes, i.edgeTable = new Int32Array([0, 265, 515, 778, 1030, 1295, 1541, 1804, 2060, 2309, 2575, 2822, 3082, 3331, 3593, 3840, 400, 153, 915, 666, 1430, 1183, 1941, 1692, 2460, 2197, 2975, 2710, 3482, 3219, 3993, 3728, 560, 825, 51, 314, 1590, 1855, 1077, 1340, 2620, 2869, 2111, 2358, 3642, 3891, 3129, 3376, 928, 681, 419, 170, 1958, 1711, 1445, 1196, 2988, 2725, 2479, 2214, 4010, 3747, 3497, 3232, 1120, 1385, 1635, 1898, 102, 367, 613, 876, 3180, 3429, 3695, 3942, 2154, 2403, 2665, 2912, 1520, 1273, 2035, 1786, 502, 255, 1013, 764, 3580, 3317, 4095, 3830, 2554, 2291, 3065, 2800, 1616, 1881, 1107, 1370, 598, 863, 85, 348, 3676, 3925, 3167, 3414, 2650, 2899, 2137, 2384, 1984, 1737, 1475, 1226, 966, 719, 453, 204, 4044, 3781, 3535, 3270, 3018, 2755, 2505, 2240, 2240, 2505, 2755, 3018, 3270, 3535, 3781, 4044, 204, 453, 719, 966, 1226, 1475, 1737, 1984, 2384, 2137, 2899, 2650, 3414, 3167, 3925, 3676, 348, 85, 863, 598, 1370, 1107, 1881, 1616, 2800, 3065, 2291, 2554, 3830, 4095, 3317, 3580, 764, 1013, 255, 502, 1786, 2035, 1273, 1520, 2912, 2665, 2403, 2154, 3942, 3695, 3429, 3180, 876, 613, 367, 102, 1898, 1635, 1385, 1120, 3232, 3497, 3747, 4010, 2214, 2479, 2725, 2988, 1196, 1445, 1711, 1958, 170, 419, 681, 928, 3376, 3129, 3891, 3642, 2358, 2111, 2869, 2620, 1340, 1077, 1855, 1590, 314, 51, 825, 560, 3728, 3993, 3219, 3482, 2710, 2975, 2197, 2460, 1692, 1941, 1183, 1430, 666, 915, 153, 400, 3840, 3593, 3331, 3082, 2822, 2575, 2309, 2060, 1804, 1541, 1295, 1030, 778, 515, 265, 0]), i.triTable = new Int32Array([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 2, 10, 0, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1, -1, -1, -1, -1, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 9, 0, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1, -1, -1, -1, -1, -1, 3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1, 3, 9, 0, 3, 11, 9, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1, 9, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 1, 9, 4, 7, 1, 7, 3, 1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, 9, 2, 10, 9, 0, 2, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, 2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1, -1, -1, -1, 8, 4, 7, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 4, 7, 11, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1, -1, 9, 0, 1, 8, 4, 7, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, 4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1, -1, -1, -1, 3, 10, 1, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1, 1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, -1, -1, -1, -1, 4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, -1, -1, -1, -1, 4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 5, 4, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 0, 8, 1, 2, 10, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1, 5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1, -1, -1, -1, 2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1, -1, 9, 5, 4, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 11, 2, 0, 8, 11, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1, 0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, 2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1, -1, -1, -1, 10, 3, 11, 10, 1, 3, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, 4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, -1, -1, -1, -1, 5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1, -1, -1, -1, 5, 4, 8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, 9, 7, 8, 5, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1, -1, -1, 0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1, 1, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1, -1, -1, -1, -1, -1, 10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1, -1, 8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1, -1, -1, -1, 2, 10, 5, 2, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, 7, 9, 5, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, 9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1, -1, -1, -1, 2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, -1, -1, -1, -1, 11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1, -1, -1, -1, 9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, -1, -1, -1, -1, 5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, -1, 11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, -1, 11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 0, 1, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, 1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 6, 5, 1, 2, 6, 3, 0, 8, -1, -1, -1, -1, -1, -1, -1, 9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1, -1, -1, -1, -1, 5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1, 2, 3, 11, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 0, 8, 11, 2, 0, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, 5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1, -1, 6, 3, 11, 6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1, 0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, -1, -1, -1, -1, 3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1, -1, 6, 5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1, 5, 10, 6, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1, -1, -1, -1, -1, 1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, 10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1, -1, -1, -1, 6, 1, 2, 6, 5, 1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, 1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1, -1, -1, -1, 8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1, -1, 7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, -1, 3, 11, 2, 7, 8, 4, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, 5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1, -1, -1, -1, 0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, 9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, -1, 8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1, -1, -1, -1, 5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, -1, 0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, -1, 6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1, -1, -1, -1, 10, 4, 9, 6, 4, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, 10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1, 8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1, -1, 1, 4, 9, 1, 2, 4, 2, 6, 4, -1, -1, -1, -1, -1, -1, -1, 3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1, -1, 0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 3, 2, 8, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, 10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1, -1, -1, -1, -1, -1, 0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1, -1, -1, -1, 3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1, -1, -1, -1, 6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, -1, 9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1, -1, 8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, -1, 3, 11, 6, 3, 6, 0, 0, 6, 4, -1, -1, -1, -1, -1, -1, -1, 6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 10, 6, 7, 8, 10, 8, 9, 10, -1, -1, -1, -1, -1, -1, -1, 0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, -1, -1, -1, -1, 10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, -1, -1, -1, -1, 10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1, 1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1, 2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, -1, 7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1, 7, 3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, -1, -1, -1, -1, 2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, -1, 1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, -1, 11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, -1, -1, -1, -1, 8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, -1, 0, 9, 1, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, -1, -1, -1, -1, 7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 0, 8, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 9, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 1, 9, 8, 3, 1, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, 10, 1, 2, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 3, 0, 8, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, 2, 9, 0, 2, 10, 9, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, 6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, -1, -1, -1, -1, 7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1, 2, 7, 6, 2, 3, 7, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1, 1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, -1, -1, -1, -1, 10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1, 10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1, 0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, -1, -1, -1, -1, 7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1, -1, -1, 6, 8, 4, 11, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 6, 11, 3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1, -1, 8, 6, 11, 8, 4, 6, 9, 0, 1, -1, -1, -1, -1, -1, -1, -1, 9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1, -1, -1, -1, 6, 8, 4, 6, 11, 8, 2, 10, 1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, -1, -1, -1, -1, 4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1, -1, -1, -1, 10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, -1, 8, 2, 3, 8, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, 0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1, -1, -1, -1, 1, 9, 4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1, -1, 8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, -1, -1, -1, -1, 10, 1, 0, 10, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1, -1, 4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, -1, 10, 9, 4, 6, 10, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, 5, 0, 1, 5, 4, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, 11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, -1, -1, -1, -1, 9, 5, 4, 10, 1, 2, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, 6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, -1, -1, -1, -1, 7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, -1, -1, -1, -1, 3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, -1, 7, 2, 3, 7, 6, 2, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1, 9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, -1, -1, -1, -1, 3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1, -1, -1, -1, 6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, -1, 9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, -1, -1, -1, -1, 1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, -1, 4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, -1, 7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, -1, -1, -1, -1, 6, 9, 5, 6, 11, 9, 11, 8, 9, -1, -1, -1, -1, -1, -1, -1, 3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1, -1, 0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1, -1, -1, -1, 6, 11, 3, 6, 3, 5, 5, 3, 1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1, -1, -1, -1, 0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, -1, 11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, -1, 6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, -1, -1, -1, -1, 5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1, -1, 9, 5, 6, 9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1, -1, 1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, -1, 1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, -1, 10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, -1, -1, -1, -1, 0, 3, 8, 5, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 5, 10, 7, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 5, 10, 11, 7, 5, 8, 3, 0, -1, -1, -1, -1, -1, -1, -1, 5, 11, 7, 5, 10, 11, 1, 9, 0, -1, -1, -1, -1, -1, -1, -1, 10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1, -1, -1, -1, 11, 1, 2, 11, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, -1, -1, -1, -1, 9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1, -1, -1, -1, 7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, -1, 2, 5, 10, 2, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, 8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1, -1, -1, -1, 9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1, -1, -1, -1, 9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, -1, 1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1, 9, 0, 3, 9, 3, 5, 5, 3, 7, -1, -1, -1, -1, -1, -1, -1, 9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, 8, 4, 5, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, 5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1, -1, -1, -1, 0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, -1, -1, -1, -1, 10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, -1, 2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1, -1, -1, -1, 0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, -1, 0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, -1, 9, 4, 5, 2, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1, -1, 5, 10, 2, 5, 2, 4, 4, 2, 0, -1, -1, -1, -1, -1, -1, -1, 3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, -1, 5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1, -1, -1, -1, 8, 4, 5, 8, 5, 3, 3, 5, 1, -1, -1, -1, -1, -1, -1, -1, 0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1, -1, -1, -1, 9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 11, 7, 4, 9, 11, 9, 10, 11, -1, -1, -1, -1, -1, -1, -1, 0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1, -1, -1, -1, 1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1, -1, -1, -1, 3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, -1, 4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1, -1, -1, 9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, -1, 11, 7, 4, 11, 4, 2, 2, 4, 0, -1, -1, -1, -1, -1, -1, -1, 11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, -1, -1, -1, -1, 2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1, -1, 9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, -1, 3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, -1, 1, 10, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1, -1, 4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, -1, -1, -1, -1, 4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 0, 9, 3, 9, 11, 11, 9, 10, -1, -1, -1, -1, -1, -1, -1, 0, 1, 10, 0, 10, 8, 8, 10, 11, -1, -1, -1, -1, -1, -1, -1, 3, 1, 10, 11, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 11, 1, 11, 9, 9, 11, 8, -1, -1, -1, -1, -1, -1, -1, 3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, -1, -1, -1, -1, 0, 2, 11, 8, 0, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 3, 8, 2, 8, 10, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1, 9, 10, 2, 0, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1, -1, 1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 3, 8, 9, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), t.a = i.MarchingCubes;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.MaskPass = function (e, t) {\n        this.scene = e, this.camera = t, this.enabled = !0, this.clear = !0, this.needsSwap = !1, this.inverse = !1;\n      }, i.MaskPass.prototype = {\n        render: function render(e, t, r, i) {\n          var n = e.context;\n          n.colorMask(!1, !1, !1, !1), n.depthMask(!1);\n          var o, a;\n          this.inverse ? (o = 0, a = 1) : (o = 1, a = 0), n.enable(n.STENCIL_TEST), n.stencilOp(n.REPLACE, n.REPLACE, n.REPLACE), n.stencilFunc(n.ALWAYS, o, 4294967295), n.clearStencil(a), e.render(this.scene, this.camera, r, this.clear), e.render(this.scene, this.camera, t, this.clear), n.colorMask(!0, !0, !0, !0), n.depthMask(!0), n.stencilFunc(n.EQUAL, 1, 4294967295), n.stencilOp(n.KEEP, n.KEEP, n.KEEP);\n        }\n      }, i.ClearMaskPass = function () {\n        this.enabled = !0;\n      }, i.ClearMaskPass.prototype = {\n        render: function render(e, t, r, i) {\n          var n = e.context;\n          n.disable(n.STENCIL_TEST);\n        }\n      }, t.a = i.MaskPass;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.MirrorShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          side: {\n            type: \"i\",\n            value: 1\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform int side;\", \"varying vec2 vUv;\", \"void main() {\", \"vec2 p = vUv;\", \"if (side == 0){\", \"if (p.x > 0.5) p.x = 1.0 - p.x;\", \"}else if (side == 1){\", \"if (p.x < 0.5) p.x = 1.0 - p.x;\", \"}else if (side == 2){\", \"if (p.y < 0.5) p.y = 1.0 - p.y;\", \"}else if (side == 3){\", \"if (p.y > 0.5) p.y = 1.0 - p.y;\", \"} \", \"vec4 color = texture2D(tDiffuse, p);\", \"gl_FragColor = color;\", \"}\"].join(\"\\n\")\n      }, t.a = i.MirrorShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.NormalMapShader = {\n        uniforms: {\n          heightMap: {\n            type: \"t\",\n            value: null\n          },\n          resolution: {\n            type: \"v2\",\n            value: new i._48(512, 512)\n          },\n          scale: {\n            type: \"v2\",\n            value: new i._48(1, 1)\n          },\n          height: {\n            type: \"f\",\n            value: .05\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform float height;\", \"uniform vec2 resolution;\", \"uniform sampler2D heightMap;\", \"varying vec2 vUv;\", \"void main() {\", \"float val = texture2D( heightMap, vUv ).x;\", \"float valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\", \"float valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\", \"gl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\", \"}\"].join(\"\\n\")\n      }, t.a = i.NormalMapShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.OBJLoader = function (e) {\n        this.manager = void 0 !== e ? e : i.v;\n      }, i.OBJLoader.prototype = {\n        constructor: i.OBJLoader,\n        load: function load(e, t, r, n) {\n          var o = this;\n          new i.F(o.manager).load(e, function (e) {\n            t(o.parse(e));\n          }, r, n);\n        },\n        parse: function parse(e) {\n          function t(e) {\n            var t = parseInt(e);\n            return 3 * (t >= 0 ? t - 1 : t + p.length / 3);\n          }\n\n          function r(e) {\n            var t = parseInt(e);\n            return 3 * (t >= 0 ? t - 1 : t + f.length / 3);\n          }\n\n          function n(e) {\n            var t = parseInt(e);\n            return 2 * (t >= 0 ? t - 1 : t + m.length / 2);\n          }\n\n          function o(e, t, r) {\n            u.vertices.push(p[e], p[e + 1], p[e + 2], p[t], p[t + 1], p[t + 2], p[r], p[r + 1], p[r + 2]);\n          }\n\n          function a(e, t, r) {\n            u.normals.push(f[e], f[e + 1], f[e + 2], f[t], f[t + 1], f[t + 2], f[r], f[r + 1], f[r + 2]);\n          }\n\n          function s(e, t, r) {\n            u.uvs.push(m[e], m[e + 1], m[t], m[t + 1], m[r], m[r + 1]);\n          }\n\n          function c(e, i, c, l, u, h, d, p, f, m, v, g) {\n            var y,\n                x = t(e),\n                _ = t(i),\n                b = t(c);\n\n            void 0 === l ? o(x, _, b) : (y = t(l), o(x, _, y), o(_, b, y)), void 0 !== u && (x = n(u), _ = n(h), b = n(d), void 0 === l ? s(x, _, b) : (y = n(p), s(x, _, y), s(_, b, y))), void 0 !== f && (x = r(f), _ = r(m), b = r(v), void 0 === l ? a(x, _, b) : (y = r(g), a(x, _, y), a(_, b, y)));\n          }\n\n          console.time(\".obj loading time\");\n          var l,\n              u,\n              h,\n              d = [];\n          !1 === /^o /gm.test(e) && (u = {\n            vertices: [],\n            normals: [],\n            uvs: []\n          }, h = {\n            name: \"\"\n          }, l = {\n            name: \"\",\n            geometry: u,\n            material: h\n          }, d.push(l));\n\n          for (var p = [], f = [], m = [], v = /v( +[\\d|\\.|\\+|\\-|e|E]+)( +[\\d|\\.|\\+|\\-|e|E]+)( +[\\d|\\.|\\+|\\-|e|E]+)/, g = /vn( +[\\d|\\.|\\+|\\-|e|E]+)( +[\\d|\\.|\\+|\\-|e|E]+)( +[\\d|\\.|\\+|\\-|e|E]+)/, y = /vt( +[\\d|\\.|\\+|\\-|e|E]+)( +[\\d|\\.|\\+|\\-|e|E]+)/, x = /f( +-?\\d+)( +-?\\d+)( +-?\\d+)( +-?\\d+)?/, _ = /f( +(-?\\d+)\\/(-?\\d+))( +(-?\\d+)\\/(-?\\d+))( +(-?\\d+)\\/(-?\\d+))( +(-?\\d+)\\/(-?\\d+))?/, b = /f( +(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))( +(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))( +(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))( +(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))?/, w = /f( +(-?\\d+)\\/\\/(-?\\d+))( +(-?\\d+)\\/\\/(-?\\d+))( +(-?\\d+)\\/\\/(-?\\d+))( +(-?\\d+)\\/\\/(-?\\d+))?/, M = e.split(\"\\n\"), E = 0; E < M.length; E++) {\n            var S = M[E];\n            S = S.trim();\n            var T;\n            0 !== S.length && \"#\" !== S.charAt(0) && (null !== (T = v.exec(S)) ? p.push(parseFloat(T[1]), parseFloat(T[2]), parseFloat(T[3])) : null !== (T = g.exec(S)) ? f.push(parseFloat(T[1]), parseFloat(T[2]), parseFloat(T[3])) : null !== (T = y.exec(S)) ? m.push(parseFloat(T[1]), parseFloat(T[2])) : null !== (T = x.exec(S)) ? c(T[1], T[2], T[3], T[4]) : null !== (T = _.exec(S)) ? c(T[2], T[5], T[8], T[11], T[3], T[6], T[9], T[12]) : null !== (T = b.exec(S)) ? c(T[2], T[6], T[10], T[14], T[3], T[7], T[11], T[15], T[4], T[8], T[12], T[16]) : null !== (T = w.exec(S)) ? c(T[2], T[5], T[8], T[11], void 0, void 0, void 0, void 0, T[3], T[6], T[9], T[12]) : /^o /.test(S) ? (u = {\n              vertices: [],\n              normals: [],\n              uvs: []\n            }, h = {\n              name: \"\"\n            }, l = {\n              name: S.substring(2).trim(),\n              geometry: u,\n              material: h\n            }, d.push(l)) : /^g /.test(S) || (/^usemtl /.test(S) ? h.name = S.substring(7).trim() : /^mtllib /.test(S) || /^s /.test(S)));\n          }\n\n          var A,\n              L = new i._12();\n\n          for (E = 0, A = d.length; E < A; E++) {\n            l = d[E], u = l.geometry;\n            var C = new i.k();\n            C.addAttribute(\"position\", new i.j(new Float32Array(u.vertices), 3)), u.normals.length > 0 && C.addAttribute(\"normal\", new i.j(new Float32Array(u.normals), 3)), u.uvs.length > 0 && C.addAttribute(\"uv\", new i.j(new Float32Array(u.uvs), 2)), h = new i._6({\n              color: 16711680\n            }), h.name = l.material.name;\n            var R = new i._3(C, h);\n            R.name = l.name, L.add(R);\n          }\n\n          return console.timeEnd(\".obj loading time\"), L;\n        }\n      }, t.a = i.OBJLoader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i._34.ocean_sim_vertex = {\n        varying: {\n          vUV: {\n            type: \"v2\"\n          }\n        },\n        vertexShader: [\"varying vec2 vUV;\", \"void main (void) {\", \"vUV = position.xy * 0.5 + 0.5;\", \"gl_Position = vec4(position, 1.0 );\", \"}\"].join(\"\\n\")\n      }, i._34.ocean_subtransform = {\n        uniforms: {\n          u_input: {\n            type: \"t\",\n            value: null\n          },\n          u_transformSize: {\n            type: \"f\",\n            value: 512\n          },\n          u_subtransformSize: {\n            type: \"f\",\n            value: 250\n          }\n        },\n        varying: {\n          vUV: {\n            type: \"v2\"\n          }\n        },\n        fragmentShader: [\"precision highp float;\", \"const float PI = 3.14159265359;\", \"uniform sampler2D u_input;\", \"uniform float u_transformSize;\", \"uniform float u_subtransformSize;\", \"varying vec2 vUV;\", \"vec2 multiplyComplex (vec2 a, vec2 b) {\", \"return vec2(a[0] * b[0] - a[1] * b[1], a[1] * b[0] + a[0] * b[1]);\", \"}\", \"void main (void) {\", \"#ifdef HORIZONTAL\", \"float index = vUV.x * u_transformSize - 0.5;\", \"#else\", \"float index = vUV.y * u_transformSize - 0.5;\", \"#endif\", \"float evenIndex = floor(index / u_subtransformSize) * (u_subtransformSize * 0.5) + mod(index, u_subtransformSize * 0.5);\", \"#ifdef HORIZONTAL\", \"vec4 even = texture2D(u_input, vec2(evenIndex + 0.5, gl_FragCoord.y) / u_transformSize).rgba;\", \"vec4 odd = texture2D(u_input, vec2(evenIndex + u_transformSize * 0.5 + 0.5, gl_FragCoord.y) / u_transformSize).rgba;\", \"#else\", \"vec4 even = texture2D(u_input, vec2(gl_FragCoord.x, evenIndex + 0.5) / u_transformSize).rgba;\", \"vec4 odd = texture2D(u_input, vec2(gl_FragCoord.x, evenIndex + u_transformSize * 0.5 + 0.5) / u_transformSize).rgba;\", \"#endif\", \"float twiddleArgument = -2.0 * PI * (index / u_subtransformSize);\", \"vec2 twiddle = vec2(cos(twiddleArgument), sin(twiddleArgument));\", \"vec2 outputA = even.xy + multiplyComplex(twiddle, odd.xy);\", \"vec2 outputB = even.zw + multiplyComplex(twiddle, odd.zw);\", \"gl_FragColor = vec4(outputA, outputB);\", \"}\"].join(\"\\n\")\n      }, i._34.ocean_initial_spectrum = {\n        uniforms: {\n          u_wind: {\n            type: \"v2\",\n            value: new i._48(10, 10)\n          },\n          u_resolution: {\n            type: \"f\",\n            value: 512\n          },\n          u_size: {\n            type: \"f\",\n            value: 250\n          }\n        },\n        fragmentShader: [\"precision highp float;\", \"const float PI = 3.14159265359;\", \"const float G = 9.81;\", \"const float KM = 370.0;\", \"const float CM = 0.23;\", \"uniform vec2 u_wind;\", \"uniform float u_resolution;\", \"uniform float u_size;\", \"float square (float x) {\", \"return x * x;\", \"}\", \"float omega (float k) {\", \"return sqrt(G * k * (1.0 + square(k / KM)));\", \"}\", \"float tanh (float x) {\", \"return (1.0 - exp(-2.0 * x)) / (1.0 + exp(-2.0 * x));\", \"}\", \"void main (void) {\", \"vec2 coordinates = gl_FragCoord.xy - 0.5;\", \"float n = (coordinates.x < u_resolution * 0.5) ? coordinates.x : coordinates.x - u_resolution;\", \"float m = (coordinates.y < u_resolution * 0.5) ? coordinates.y : coordinates.y - u_resolution;\", \"vec2 K = (2.0 * PI * vec2(n, m)) / u_size;\", \"float k = length(K);\", \"float l_wind = length(u_wind);\", \"float Omega = 0.84;\", \"float kp = G * square(Omega / l_wind);\", \"float c = omega(k) / k;\", \"float cp = omega(kp) / kp;\", \"float Lpm = exp(-1.25 * square(kp / k));\", \"float gamma = 1.7;\", \"float sigma = 0.08 * (1.0 + 4.0 * pow(Omega, -3.0));\", \"float Gamma = exp(-square(sqrt(k / kp) - 1.0) / 2.0 * square(sigma));\", \"float Jp = pow(gamma, Gamma);\", \"float Fp = Lpm * Jp * exp(-Omega / sqrt(10.0) * (sqrt(k / kp) - 1.0));\", \"float alphap = 0.006 * sqrt(Omega);\", \"float Bl = 0.5 * alphap * cp / c * Fp;\", \"float z0 = 0.000037 * square(l_wind) / G * pow(l_wind / cp, 0.9);\", \"float uStar = 0.41 * l_wind / log(10.0 / z0);\", \"float alpham = 0.01 * ((uStar < CM) ? (1.0 + log(uStar / CM)) : (1.0 + 3.0 * log(uStar / CM)));\", \"float Fm = exp(-0.25 * square(k / KM - 1.0));\", \"float Bh = 0.5 * alpham * CM / c * Fm * Lpm;\", \"float a0 = log(2.0) / 4.0;\", \"float am = 0.13 * uStar / CM;\", \"float Delta = tanh(a0 + 4.0 * pow(c / cp, 2.5) + am * pow(CM / c, 2.5));\", \"float cosPhi = dot(normalize(u_wind), normalize(K));\", \"float S = (1.0 / (2.0 * PI)) * pow(k, -4.0) * (Bl + Bh) * (1.0 + Delta * (2.0 * cosPhi * cosPhi - 1.0));\", \"float dk = 2.0 * PI / u_size;\", \"float h = sqrt(S / 2.0) * dk;\", \"if (K.x == 0.0 && K.y == 0.0) {\", \"h = 0.0;\", \"}\", \"gl_FragColor = vec4(h, 0.0, 0.0, 0.0);\", \"}\"].join(\"\\n\")\n      }, i._34.ocean_phase = {\n        uniforms: {\n          u_phases: {\n            type: \"t\",\n            value: null\n          },\n          u_deltaTime: {\n            type: \"f\",\n            value: null\n          },\n          u_resolution: {\n            type: \"f\",\n            value: null\n          },\n          u_size: {\n            type: \"f\",\n            value: null\n          }\n        },\n        varying: {\n          vUV: {\n            type: \"v2\"\n          }\n        },\n        fragmentShader: [\"precision highp float;\", \"const float PI = 3.14159265359;\", \"const float G = 9.81;\", \"const float KM = 370.0;\", \"varying vec2 vUV;\", \"uniform sampler2D u_phases;\", \"uniform float u_deltaTime;\", \"uniform float u_resolution;\", \"uniform float u_size;\", \"float omega (float k) {\", \"return sqrt(G * k * (1.0 + k * k / KM * KM));\", \"}\", \"void main (void) {\", \"float deltaTime = 1.0 / 60.0;\", \"vec2 coordinates = gl_FragCoord.xy - 0.5;\", \"float n = (coordinates.x < u_resolution * 0.5) ? coordinates.x : coordinates.x - u_resolution;\", \"float m = (coordinates.y < u_resolution * 0.5) ? coordinates.y : coordinates.y - u_resolution;\", \"vec2 waveVector = (2.0 * PI * vec2(n, m)) / u_size;\", \"float phase = texture2D(u_phases, vUV).r;\", \"float deltaPhase = omega(length(waveVector)) * u_deltaTime;\", \"phase = mod(phase + deltaPhase, 2.0 * PI);\", \"gl_FragColor = vec4(phase, 0.0, 0.0, 0.0);\", \"}\"].join(\"\\n\")\n      }, i._34.ocean_spectrum = {\n        uniforms: {\n          u_size: {\n            type: \"f\",\n            value: null\n          },\n          u_resolution: {\n            type: \"f\",\n            value: null\n          },\n          u_choppiness: {\n            type: \"f\",\n            value: null\n          },\n          u_phases: {\n            type: \"t\",\n            value: null\n          },\n          u_initialSpectrum: {\n            type: \"t\",\n            value: null\n          }\n        },\n        varying: {\n          vUV: {\n            type: \"v2\"\n          }\n        },\n        fragmentShader: [\"precision highp float;\", \"const float PI = 3.14159265359;\", \"const float G = 9.81;\", \"const float KM = 370.0;\", \"varying vec2 vUV;\", \"uniform float u_size;\", \"uniform float u_resolution;\", \"uniform float u_choppiness;\", \"uniform sampler2D u_phases;\", \"uniform sampler2D u_initialSpectrum;\", \"vec2 multiplyComplex (vec2 a, vec2 b) {\", \"return vec2(a[0] * b[0] - a[1] * b[1], a[1] * b[0] + a[0] * b[1]);\", \"}\", \"vec2 multiplyByI (vec2 z) {\", \"return vec2(-z[1], z[0]);\", \"}\", \"float omega (float k) {\", \"return sqrt(G * k * (1.0 + k * k / KM * KM));\", \"}\", \"void main (void) {\", \"vec2 coordinates = gl_FragCoord.xy - 0.5;\", \"float n = (coordinates.x < u_resolution * 0.5) ? coordinates.x : coordinates.x - u_resolution;\", \"float m = (coordinates.y < u_resolution * 0.5) ? coordinates.y : coordinates.y - u_resolution;\", \"vec2 waveVector = (2.0 * PI * vec2(n, m)) / u_size;\", \"float phase = texture2D(u_phases, vUV).r;\", \"vec2 phaseVector = vec2(cos(phase), sin(phase));\", \"vec2 h0 = texture2D(u_initialSpectrum, vUV).rg;\", \"vec2 h0Star = texture2D(u_initialSpectrum, vec2(1.0 - vUV + 1.0 / u_resolution)).rg;\", \"h0Star.y *= -1.0;\", \"vec2 h = multiplyComplex(h0, phaseVector) + multiplyComplex(h0Star, vec2(phaseVector.x, -phaseVector.y));\", \"vec2 hX = -multiplyByI(h * (waveVector.x / length(waveVector))) * u_choppiness;\", \"vec2 hZ = -multiplyByI(h * (waveVector.y / length(waveVector))) * u_choppiness;\", \"if (waveVector.x == 0.0 && waveVector.y == 0.0) {\", \"h = vec2(0.0);\", \"hX = vec2(0.0);\", \"hZ = vec2(0.0);\", \"}\", \"gl_FragColor = vec4(hX + multiplyByI(h), hZ);\", \"}\"].join(\"\\n\")\n      }, i._34.ocean_normals = {\n        uniforms: {\n          u_displacementMap: {\n            type: \"t\",\n            value: null\n          },\n          u_resolution: {\n            type: \"f\",\n            value: null\n          },\n          u_size: {\n            type: \"f\",\n            value: null\n          }\n        },\n        varying: {\n          vUV: {\n            type: \"v2\"\n          }\n        },\n        fragmentShader: [\"precision highp float;\", \"varying vec2 vUV;\", \"uniform sampler2D u_displacementMap;\", \"uniform float u_resolution;\", \"uniform float u_size;\", \"void main (void) {\", \"float texel = 1.0 / u_resolution;\", \"float texelSize = u_size / u_resolution;\", \"vec3 center = texture2D(u_displacementMap, vUV).rgb;\", \"vec3 right = vec3(texelSize, 0.0, 0.0) + texture2D(u_displacementMap, vUV + vec2(texel, 0.0)).rgb - center;\", \"vec3 left = vec3(-texelSize, 0.0, 0.0) + texture2D(u_displacementMap, vUV + vec2(-texel, 0.0)).rgb - center;\", \"vec3 top = vec3(0.0, 0.0, -texelSize) + texture2D(u_displacementMap, vUV + vec2(0.0, -texel)).rgb - center;\", \"vec3 bottom = vec3(0.0, 0.0, texelSize) + texture2D(u_displacementMap, vUV + vec2(0.0, texel)).rgb - center;\", \"vec3 topRight = cross(right, top);\", \"vec3 topLeft = cross(top, left);\", \"vec3 bottomLeft = cross(left, bottom);\", \"vec3 bottomRight = cross(bottom, right);\", \"gl_FragColor = vec4(normalize(topRight + topLeft + bottomLeft + bottomRight), 1.0);\", \"}\"].join(\"\\n\")\n      }, i._34.ocean_main = {\n        uniforms: {\n          u_displacementMap: {\n            type: \"t\",\n            value: null\n          },\n          u_normalMap: {\n            type: \"t\",\n            value: null\n          },\n          u_geometrySize: {\n            type: \"f\",\n            value: null\n          },\n          u_size: {\n            type: \"f\",\n            value: null\n          },\n          u_projectionMatrix: {\n            type: \"m4\",\n            value: null\n          },\n          u_viewMatrix: {\n            type: \"m4\",\n            value: null\n          },\n          u_cameraPosition: {\n            type: \"v3\",\n            value: null\n          },\n          u_skyColor: {\n            type: \"v3\",\n            value: null\n          },\n          u_oceanColor: {\n            type: \"v3\",\n            value: null\n          },\n          u_sunDirection: {\n            type: \"v3\",\n            value: null\n          },\n          u_exposure: {\n            type: \"f\",\n            value: null\n          }\n        },\n        varying: {\n          vPos: {\n            type: \"v3\"\n          },\n          vUV: {\n            type: \"v2\"\n          }\n        },\n        vertexShader: [\"precision highp float;\", \"varying vec3 vPos;\", \"varying vec2 vUV;\", \"uniform mat4 u_projectionMatrix;\", \"uniform mat4 u_viewMatrix;\", \"uniform float u_size;\", \"uniform float u_geometrySize;\", \"uniform sampler2D u_displacementMap;\", \"void main (void) {\", \"vec3 newPos = position + texture2D(u_displacementMap, uv).rgb * (u_geometrySize / u_size);\", \"vPos = newPos;\", \"vUV = uv;\", \"gl_Position = u_projectionMatrix * u_viewMatrix * vec4(newPos, 1.0);\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"precision highp float;\", \"varying vec3 vPos;\", \"varying vec2 vUV;\", \"uniform sampler2D u_displacementMap;\", \"uniform sampler2D u_normalMap;\", \"uniform vec3 u_cameraPosition;\", \"uniform vec3 u_oceanColor;\", \"uniform vec3 u_skyColor;\", \"uniform vec3 u_sunDirection;\", \"uniform float u_exposure;\", \"vec3 hdr (vec3 color, float exposure) {\", \"return 1.0 - exp(-color * exposure);\", \"}\", \"void main (void) {\", \"vec3 normal = texture2D(u_normalMap, vUV).rgb;\", \"vec3 view = normalize(u_cameraPosition - vPos);\", \"float fresnel = 0.02 + 0.98 * pow(1.0 - dot(normal, view), 5.0);\", \"vec3 sky = fresnel * u_skyColor;\", \"float diffuse = clamp(dot(normal, normalize(u_sunDirection)), 0.0, 1.0);\", \"vec3 water = (1.0 - fresnel) * u_oceanColor * u_skyColor * diffuse;\", \"vec3 color = sky + water;\", \"gl_FragColor = vec4(hdr(color, u_exposure), 1.0);\", \"}\"].join(\"\\n\")\n      }, t.a = i._34;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.OrbitControls = function (e, t) {\n        function r() {\n          return 2 * Math.PI / 60 / 60 * I.autoRotateSpeed;\n        }\n\n        function n() {\n          return Math.pow(.95, I.zoomSpeed);\n        }\n\n        function o(e) {\n          j.theta -= e;\n        }\n\n        function a(e) {\n          j.phi -= e;\n        }\n\n        function s(e) {\n          I.object instanceof i._16 ? V /= e : I.object instanceof i._14 ? (I.object.zoom = Math.max(I.minZoom, Math.min(I.maxZoom, I.object.zoom * e)), I.object.updateProjectionMatrix(), W = !0) : (console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"), I.enableZoom = !1);\n        }\n\n        function c(e) {\n          I.object instanceof i._16 ? V *= e : I.object instanceof i._14 ? (I.object.zoom = Math.max(I.minZoom, Math.min(I.maxZoom, I.object.zoom / e)), I.object.updateProjectionMatrix(), W = !0) : (console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"), I.enableZoom = !1);\n        }\n\n        function l(e) {\n          X.set(e.clientX, e.clientY);\n        }\n\n        function u(e) {\n          Q.set(e.clientX, e.clientY);\n        }\n\n        function h(e) {\n          Z.set(e.clientX, e.clientY);\n        }\n\n        function d(e) {\n          q.set(e.clientX, e.clientY), Y.subVectors(q, X);\n          var t = I.domElement === document ? I.domElement.body : I.domElement;\n          o(2 * Math.PI * Y.x / t.clientWidth * I.rotateSpeed), a(2 * Math.PI * Y.y / t.clientHeight * I.rotateSpeed), X.copy(q), I.update();\n        }\n\n        function p(e) {\n          $.set(e.clientX, e.clientY), ee.subVectors($, Q), ee.y > 0 ? s(n()) : ee.y < 0 && c(n()), Q.copy($), I.update();\n        }\n\n        function f(e) {\n          J.set(e.clientX, e.clientY), K.subVectors(J, Z), ie(K.x, K.y), Z.copy(J), I.update();\n        }\n\n        function m(e) {}\n\n        function v(e) {\n          var t = 0;\n          void 0 !== e.wheelDelta ? t = e.wheelDelta : void 0 !== e.detail && (t = -e.detail), t > 0 ? c(n()) : t < 0 && s(n()), I.update();\n        }\n\n        function g(e) {\n          switch (e.keyCode) {\n            case I.keys.UP:\n              ie(0, I.keyPanSpeed), I.update();\n              break;\n\n            case I.keys.BOTTOM:\n              ie(0, -I.keyPanSpeed), I.update();\n              break;\n\n            case I.keys.LEFT:\n              ie(I.keyPanSpeed, 0), I.update();\n              break;\n\n            case I.keys.RIGHT:\n              ie(-I.keyPanSpeed, 0), I.update();\n          }\n        }\n\n        function y(e) {\n          X.set(e.touches[0].pageX, e.touches[0].pageY);\n        }\n\n        function x(e) {\n          var t = e.touches[0].pageX - e.touches[1].pageX,\n              r = e.touches[0].pageY - e.touches[1].pageY,\n              i = Math.sqrt(t * t + r * r);\n          Q.set(0, i);\n        }\n\n        function _(e) {\n          Z.set(e.touches[0].pageX, e.touches[0].pageY);\n        }\n\n        function b(e) {\n          q.set(e.touches[0].pageX, e.touches[0].pageY), Y.subVectors(q, X);\n          var t = I.domElement === document ? I.domElement.body : I.domElement;\n          o(2 * Math.PI * Y.x / t.clientWidth * I.rotateSpeed), a(2 * Math.PI * Y.y / t.clientHeight * I.rotateSpeed), X.copy(q), I.update();\n        }\n\n        function w(e) {\n          var t = e.touches[0].pageX - e.touches[1].pageX,\n              r = e.touches[0].pageY - e.touches[1].pageY,\n              i = Math.sqrt(t * t + r * r);\n          $.set(0, i), ee.subVectors($, Q), ee.y > 0 ? c(n()) : ee.y < 0 && s(n()), Q.copy($), I.update();\n        }\n\n        function M(e) {\n          J.set(e.touches[0].pageX, e.touches[0].pageY), K.subVectors(J, Z), ie(K.x, K.y), Z.copy(J), I.update();\n        }\n\n        function E(e) {}\n\n        function S(e) {\n          if (!1 !== I.enabled) {\n            if (e.preventDefault(), e.button === I.mouseButtons.ORBIT) {\n              if (!1 === I.enableRotate) return;\n              l(e), B = z.ROTATE;\n            } else if (e.button === I.mouseButtons.ZOOM) {\n              if (!1 === I.enableZoom) return;\n              u(e), B = z.DOLLY;\n            } else if (e.button === I.mouseButtons.PAN) {\n              if (!1 === I.enablePan) return;\n              h(e), B = z.PAN;\n            }\n\n            B !== z.NONE && (document.addEventListener(\"mousemove\", T, !1), document.addEventListener(\"mouseup\", A, !1), document.addEventListener(\"mouseout\", A, !1), I.dispatchEvent(N));\n          }\n        }\n\n        function T(e) {\n          if (!1 !== I.enabled) if (e.preventDefault(), B === z.ROTATE) {\n            if (!1 === I.enableRotate) return;\n            d(e);\n          } else if (B === z.DOLLY) {\n            if (!1 === I.enableZoom) return;\n            p(e);\n          } else if (B === z.PAN) {\n            if (!1 === I.enablePan) return;\n            f(e);\n          }\n        }\n\n        function A(e) {\n          !1 !== I.enabled && (m(e), document.removeEventListener(\"mousemove\", T, !1), document.removeEventListener(\"mouseup\", A, !1), document.removeEventListener(\"mouseout\", A, !1), I.dispatchEvent(F), B = z.NONE);\n        }\n\n        function L(e) {\n          !1 === I.enabled || !1 === I.enableZoom || B !== z.NONE && B !== z.ROTATE || (e.preventDefault(), e.stopPropagation(), v(e), I.dispatchEvent(N), I.dispatchEvent(F));\n        }\n\n        function C(e) {\n          !1 !== I.enabled && !1 !== I.enableKeys && !1 !== I.enablePan && g(e);\n        }\n\n        function R(e) {\n          if (!1 !== I.enabled) {\n            switch (e.touches.length) {\n              case 1:\n                if (!1 === I.enableRotate) return;\n                y(e), B = z.TOUCH_ROTATE;\n                break;\n\n              case 2:\n                if (!1 === I.enableZoom) return;\n                x(e), B = z.TOUCH_DOLLY;\n                break;\n\n              case 3:\n                if (!1 === I.enablePan) return;\n                _(e), B = z.TOUCH_PAN;\n                break;\n\n              default:\n                B = z.NONE;\n            }\n\n            B !== z.NONE && I.dispatchEvent(N);\n          }\n        }\n\n        function P(e) {\n          if (!1 !== I.enabled) switch (e.preventDefault(), e.stopPropagation(), e.touches.length) {\n            case 1:\n              if (!1 === I.enableRotate) return;\n              if (B !== z.TOUCH_ROTATE) return;\n              b(e);\n              break;\n\n            case 2:\n              if (!1 === I.enableZoom) return;\n              if (B !== z.TOUCH_DOLLY) return;\n              w(e);\n              break;\n\n            case 3:\n              if (!1 === I.enablePan) return;\n              if (B !== z.TOUCH_PAN) return;\n              M(e);\n              break;\n\n            default:\n              B = z.NONE;\n          }\n        }\n\n        function D(e) {\n          !1 !== I.enabled && (E(e), I.dispatchEvent(F), B = z.NONE);\n        }\n\n        function U(e) {\n          e.preventDefault();\n        }\n\n        this.object = e, this.domElement = void 0 !== t ? t : document, this.enabled = !0, this.target = new i._49(), this.minDistance = 0, this.maxDistance = 1 / 0, this.minZoom = 0, this.maxZoom = 1 / 0, this.minPolarAngle = 0, this.maxPolarAngle = Math.PI, this.minAzimuthAngle = -1 / 0, this.maxAzimuthAngle = 1 / 0, this.enableDamping = !1, this.dampingFactor = .25, this.enableZoom = !0, this.zoomSpeed = 1, this.enableRotate = !0, this.rotateSpeed = 1, this.enablePan = !0, this.keyPanSpeed = 7, this.autoRotate = !1, this.autoRotateSpeed = 2, this.enableKeys = !0, this.keys = {\n          LEFT: 37,\n          UP: 38,\n          RIGHT: 39,\n          BOTTOM: 40\n        }, this.mouseButtons = {\n          ORBIT: i.Y.LEFT,\n          ZOOM: i.Y.MIDDLE,\n          PAN: i.Y.RIGHT\n        }, this.target0 = this.target.clone(), this.position0 = this.object.position.clone(), this.zoom0 = this.object.zoom, this.getPolarAngle = function () {\n          return H.phi;\n        }, this.getAzimuthalAngle = function () {\n          return H.theta;\n        }, this.reset = function () {\n          I.target.copy(I.target0), I.object.position.copy(I.position0), I.object.zoom = I.zoom0, I.object.updateProjectionMatrix(), I.dispatchEvent(O), I.update(), B = z.NONE;\n        }, this.update = function () {\n          var t = new i._49(),\n              n = new i._18().setFromUnitVectors(e.up, new i._49(0, 1, 0)),\n              a = n.clone().inverse(),\n              s = new i._49(),\n              c = new i._18();\n          return function () {\n            var e = I.object.position;\n            return t.copy(e).sub(I.target), t.applyQuaternion(n), H.setFromVector3(t), I.autoRotate && B === z.NONE && o(r()), H.theta += j.theta, H.phi += j.phi, H.theta = Math.max(I.minAzimuthAngle, Math.min(I.maxAzimuthAngle, H.theta)), H.phi = Math.max(I.minPolarAngle, Math.min(I.maxPolarAngle, H.phi)), H.makeSafe(), H.radius *= V, H.radius = Math.max(I.minDistance, Math.min(I.maxDistance, H.radius)), I.target.add(k), t.setFromSpherical(H), t.applyQuaternion(a), e.copy(I.target).add(t), I.object.lookAt(I.target), !0 === I.enableDamping ? (j.theta *= 1 - I.dampingFactor, j.phi *= 1 - I.dampingFactor) : j.set(0, 0, 0), V = 1, k.set(0, 0, 0), !!(W || s.distanceToSquared(I.object.position) > G || 8 * (1 - c.dot(I.object.quaternion)) > G) && (I.dispatchEvent(O), s.copy(I.object.position), c.copy(I.object.quaternion), W = !1, !0);\n          };\n        }(), this.dispose = function () {\n          I.domElement.removeEventListener(\"contextmenu\", U, !1), I.domElement.removeEventListener(\"mousedown\", S, !1), I.domElement.removeEventListener(\"mousewheel\", L, !1), I.domElement.removeEventListener(\"MozMousePixelScroll\", L, !1), I.domElement.removeEventListener(\"touchstart\", R, !1), I.domElement.removeEventListener(\"touchend\", D, !1), I.domElement.removeEventListener(\"touchmove\", P, !1), document.removeEventListener(\"mousemove\", T, !1), document.removeEventListener(\"mouseup\", A, !1), document.removeEventListener(\"mouseout\", A, !1), window.removeEventListener(\"keydown\", C, !1);\n        };\n\n        var I = this,\n            O = {\n          type: \"change\"\n        },\n            N = {\n          type: \"start\"\n        },\n            F = {\n          type: \"end\"\n        },\n            z = {\n          NONE: -1,\n          ROTATE: 0,\n          DOLLY: 1,\n          PAN: 2,\n          TOUCH_ROTATE: 3,\n          TOUCH_DOLLY: 4,\n          TOUCH_PAN: 5\n        },\n            B = z.NONE,\n            G = 1e-6,\n            H = new i._39(),\n            j = new i._39(),\n            V = 1,\n            k = new i._49(),\n            W = !1,\n            X = new i._48(),\n            q = new i._48(),\n            Y = new i._48(),\n            Z = new i._48(),\n            J = new i._48(),\n            K = new i._48(),\n            Q = new i._48(),\n            $ = new i._48(),\n            ee = new i._48(),\n            te = function () {\n          var e = new i._49();\n          return function (t, r) {\n            e.setFromMatrixColumn(r, 0), e.multiplyScalar(-t), k.add(e);\n          };\n        }(),\n            re = function () {\n          var e = new i._49();\n          return function (t, r) {\n            e.setFromMatrixColumn(r, 1), e.multiplyScalar(t), k.add(e);\n          };\n        }(),\n            ie = function () {\n          var e = new i._49();\n          return function (t, r) {\n            var n = I.domElement === document ? I.domElement.body : I.domElement;\n\n            if (I.object instanceof i._16) {\n              var o = I.object.position;\n              e.copy(o).sub(I.target);\n              var a = e.length();\n              a *= Math.tan(I.object.fov / 2 * Math.PI / 180), te(2 * t * a / n.clientHeight, I.object.matrix), re(2 * r * a / n.clientHeight, I.object.matrix);\n            } else I.object instanceof i._14 ? (te(t * (I.object.right - I.object.left) / I.object.zoom / n.clientWidth, I.object.matrix), re(r * (I.object.top - I.object.bottom) / I.object.zoom / n.clientHeight, I.object.matrix)) : (console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"), I.enablePan = !1);\n          };\n        }();\n\n        I.domElement.addEventListener(\"contextmenu\", U, !1), I.domElement.addEventListener(\"mousedown\", S, !1), I.domElement.addEventListener(\"mousewheel\", L, !1), I.domElement.addEventListener(\"MozMousePixelScroll\", L, !1), I.domElement.addEventListener(\"touchstart\", R, !1), I.domElement.addEventListener(\"touchend\", D, !1), I.domElement.addEventListener(\"touchmove\", P, !1), window.addEventListener(\"keydown\", C, !1), this.update();\n      }, i.OrbitControls.prototype = Object.create(i.C.prototype), i.OrbitControls.prototype.constructor = i.OrbitControls, Object.defineProperties(i.OrbitControls.prototype, {\n        center: {\n          get: function get() {\n            return console.warn(\"THREE.OrbitControls: .center has been renamed to .target\"), this.target;\n          }\n        },\n        noZoom: {\n          get: function get() {\n            return console.warn(\"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"), !this.enableZoom;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"), this.enableZoom = !e;\n          }\n        },\n        noRotate: {\n          get: function get() {\n            return console.warn(\"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"), !this.enableRotate;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"), this.enableRotate = !e;\n          }\n        },\n        noPan: {\n          get: function get() {\n            return console.warn(\"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"), !this.enablePan;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"), this.enablePan = !e;\n          }\n        },\n        noKeys: {\n          get: function get() {\n            return console.warn(\"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"), !this.enableKeys;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"), this.enableKeys = !e;\n          }\n        },\n        staticMoving: {\n          get: function get() {\n            return console.warn(\"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"), !this.enableDamping;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"), this.enableDamping = !e;\n          }\n        },\n        dynamicDampingFactor: {\n          get: function get() {\n            return console.warn(\"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"), this.dampingFactor;\n          },\n          set: function set(e) {\n            console.warn(\"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"), this.dampingFactor = e;\n          }\n        }\n      }), t.a = i.OrbitControls;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.ParallaxShader = {\n        modes: {\n          none: \"NO_PARALLAX\",\n          basic: \"USE_BASIC_PARALLAX\",\n          steep: \"USE_STEEP_PARALLAX\",\n          occlusion: \"USE_OCLUSION_PARALLAX\",\n          relief: \"USE_RELIEF_PARALLAX\"\n        },\n        uniforms: {\n          bumpMap: {\n            type: \"t\",\n            value: null\n          },\n          map: {\n            type: \"t\",\n            value: null\n          },\n          parallaxScale: {\n            type: \"f\",\n            value: null\n          },\n          parallaxMinLayers: {\n            type: \"f\",\n            value: null\n          },\n          parallaxMaxLayers: {\n            type: \"f\",\n            value: null\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"varying vec3 vViewPosition;\", \"varying vec3 vNormal;\", \"void main() {\", \"vUv = uv;\", \"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\", \"vViewPosition = -mvPosition.xyz;\", \"vNormal = normalize( normalMatrix * normal );\", \"gl_Position = projectionMatrix * mvPosition;\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform sampler2D bumpMap;\", \"uniform sampler2D map;\", \"uniform float parallaxScale;\", \"uniform float parallaxMinLayers;\", \"uniform float parallaxMaxLayers;\", \"varying vec2 vUv;\", \"varying vec3 vViewPosition;\", \"varying vec3 vNormal;\", \"#ifdef USE_BASIC_PARALLAX\", \"vec2 parallaxMap( in vec3 V ) {\", \"float initialHeight = texture2D( bumpMap, vUv ).r;\", \"vec2 texCoordOffset = parallaxScale * V.xy * initialHeight;\", \"return vUv - texCoordOffset;\", \"}\", \"#else\", \"vec2 parallaxMap( in vec3 V ) {\", \"float numLayers = mix( parallaxMaxLayers, parallaxMinLayers, abs( dot( vec3( 0.0, 0.0, 1.0 ), V ) ) );\", \"float layerHeight = 1.0 / numLayers;\", \"float currentLayerHeight = 0.0;\", \"vec2 dtex = parallaxScale * V.xy / V.z / numLayers;\", \"vec2 currentTextureCoords = vUv;\", \"float heightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;\", \"for ( int i = 0; i < 30; i += 1 ) {\", \"if ( heightFromTexture <= currentLayerHeight ) {\", \"break;\", \"}\", \"currentLayerHeight += layerHeight;\", \"currentTextureCoords -= dtex;\", \"heightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;\", \"}\", \"#ifdef USE_STEEP_PARALLAX\", \"return currentTextureCoords;\", \"#elif defined( USE_RELIEF_PARALLAX )\", \"vec2 deltaTexCoord = dtex / 2.0;\", \"float deltaHeight = layerHeight / 2.0;\", \"currentTextureCoords += deltaTexCoord;\", \"currentLayerHeight -= deltaHeight;\", \"const int numSearches = 5;\", \"for ( int i = 0; i < numSearches; i += 1 ) {\", \"deltaTexCoord /= 2.0;\", \"deltaHeight /= 2.0;\", \"heightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;\", \"if( heightFromTexture > currentLayerHeight ) {\", \"currentTextureCoords -= deltaTexCoord;\", \"currentLayerHeight += deltaHeight;\", \"} else {\", \"currentTextureCoords += deltaTexCoord;\", \"currentLayerHeight -= deltaHeight;\", \"}\", \"}\", \"return currentTextureCoords;\", \"#elif defined( USE_OCLUSION_PARALLAX )\", \"vec2 prevTCoords = currentTextureCoords + dtex;\", \"float nextH = heightFromTexture - currentLayerHeight;\", \"float prevH = texture2D( bumpMap, prevTCoords ).r - currentLayerHeight + layerHeight;\", \"float weight = nextH / ( nextH - prevH );\", \"return prevTCoords * weight + currentTextureCoords * ( 1.0 - weight );\", \"#else\", \"return vUv;\", \"#endif\", \"}\", \"#endif\", \"vec2 perturbUv( vec3 surfPosition, vec3 surfNormal, vec3 viewPosition ) {\", \"vec2 texDx = dFdx( vUv );\", \"vec2 texDy = dFdy( vUv );\", \"vec3 vSigmaX = dFdx( surfPosition );\", \"vec3 vSigmaY = dFdy( surfPosition );\", \"vec3 vR1 = cross( vSigmaY, surfNormal );\", \"vec3 vR2 = cross( surfNormal, vSigmaX );\", \"float fDet = dot( vSigmaX, vR1 );\", \"vec2 vProjVscr = ( 1.0 / fDet ) * vec2( dot( vR1, viewPosition ), dot( vR2, viewPosition ) );\", \"vec3 vProjVtex;\", \"vProjVtex.xy = texDx * vProjVscr.x + texDy * vProjVscr.y;\", \"vProjVtex.z = dot( surfNormal, viewPosition );\", \"return parallaxMap( vProjVtex );\", \"}\", \"void main() {\", \"vec2 mapUv = perturbUv( -vViewPosition, normalize( vNormal ), normalize( vViewPosition ) );\", \"gl_FragColor = texture2D( map, mapUv );\", \"}\"].join(\"\\n\")\n      }, t.a = i.ParallaxShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.RGBShiftShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          amount: {\n            type: \"f\",\n            value: .005\n          },\n          angle: {\n            type: \"f\",\n            value: 0\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform float amount;\", \"uniform float angle;\", \"varying vec2 vUv;\", \"void main() {\", \"vec2 offset = amount * vec2( cos(angle), sin(angle));\", \"vec4 cr = texture2D(tDiffuse, vUv + offset);\", \"vec4 cga = texture2D(tDiffuse, vUv);\", \"vec4 cb = texture2D(tDiffuse, vUv - offset);\", \"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\", \"}\"].join(\"\\n\")\n      }, t.a = i.RGBShiftShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.RenderPass = function (e, t, r, n, o) {\n        this.scene = e, this.camera = t, this.overrideMaterial = r, this.clearColor = n, this.clearAlpha = void 0 !== o ? o : 1, this.oldClearColor = new i.m(), this.oldClearAlpha = 1, this.enabled = !0, this.clear = !0, this.needsSwap = !1;\n      }, i.RenderPass.prototype = {\n        render: function render(e, t, r, i) {\n          this.scene.overrideMaterial = this.overrideMaterial, this.clearColor && (this.oldClearColor.copy(e.getClearColor()), this.oldClearAlpha = e.getClearAlpha(), e.setClearColor(this.clearColor, this.clearAlpha)), e.render(this.scene, this.camera, r, this.clear), this.clearColor && e.setClearColor(this.oldClearColor, this.oldClearAlpha), this.scene.overrideMaterial = null;\n        }\n      }, t.a = i.RenderPass;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.SSAOShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          tDepth: {\n            type: \"t\",\n            value: null\n          },\n          size: {\n            type: \"v2\",\n            value: new i._48(512, 512)\n          },\n          cameraNear: {\n            type: \"f\",\n            value: 1\n          },\n          cameraFar: {\n            type: \"f\",\n            value: 100\n          },\n          onlyAO: {\n            type: \"i\",\n            value: 0\n          },\n          aoClamp: {\n            type: \"f\",\n            value: .5\n          },\n          lumInfluence: {\n            type: \"f\",\n            value: .5\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform float cameraNear;\", \"uniform float cameraFar;\", \"uniform bool onlyAO;\", \"uniform vec2 size;\", \"uniform float aoClamp;\", \"uniform float lumInfluence;\", \"uniform sampler2D tDiffuse;\", \"uniform sampler2D tDepth;\", \"varying vec2 vUv;\", \"#define DL 2.399963229728653\", \"#define EULER 2.718281828459045\", \"const int samples = 8;\", \"const float radius = 5.0;\", \"const bool useNoise = false;\", \"const float noiseAmount = 0.0003;\", \"const float diffArea = 0.4;\", \"const float gDisplace = 0.4;\", \"float unpackDepth( const in vec4 rgba_depth ) {\", \"const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\", \"float depth = dot( rgba_depth, bit_shift );\", \"return depth;\", \"}\", \"vec2 rand( const vec2 coord ) {\", \"vec2 noise;\", \"if ( useNoise ) {\", \"float nx = dot ( coord, vec2( 12.9898, 78.233 ) );\", \"float ny = dot ( coord, vec2( 12.9898, 78.233 ) * 2.0 );\", \"noise = clamp( fract ( 43758.5453 * sin( vec2( nx, ny ) ) ), 0.0, 1.0 );\", \"} else {\", \"float ff = fract( 1.0 - coord.s * ( size.x / 2.0 ) );\", \"float gg = fract( coord.t * ( size.y / 2.0 ) );\", \"noise = vec2( 0.25, 0.75 ) * vec2( ff ) + vec2( 0.75, 0.25 ) * gg;\", \"}\", \"return ( noise * 2.0  - 1.0 ) * noiseAmount;\", \"}\", \"float readDepth( const in vec2 coord ) {\", \"float cameraFarPlusNear = cameraFar + cameraNear;\", \"float cameraFarMinusNear = cameraFar - cameraNear;\", \"float cameraCoef = 2.0 * cameraNear;\", \"return cameraCoef / ( cameraFarPlusNear - unpackDepth( texture2D( tDepth, coord ) ) * cameraFarMinusNear );\", \"}\", \"float compareDepths( const in float depth1, const in float depth2, inout int far ) {\", \"float garea = 2.0;\", \"float diff = ( depth1 - depth2 ) * 100.0;\", \"if ( diff < gDisplace ) {\", \"garea = diffArea;\", \"} else {\", \"far = 1;\", \"}\", \"float dd = diff - gDisplace;\", \"float gauss = pow( EULER, -2.0 * dd * dd / ( garea * garea ) );\", \"return gauss;\", \"}\", \"float calcAO( float depth, float dw, float dh ) {\", \"float dd = radius - depth * radius;\", \"vec2 vv = vec2( dw, dh );\", \"vec2 coord1 = vUv + dd * vv;\", \"vec2 coord2 = vUv - dd * vv;\", \"float temp1 = 0.0;\", \"float temp2 = 0.0;\", \"int far = 0;\", \"temp1 = compareDepths( depth, readDepth( coord1 ), far );\", \"if ( far > 0 ) {\", \"temp2 = compareDepths( readDepth( coord2 ), depth, far );\", \"temp1 += ( 1.0 - temp1 ) * temp2;\", \"}\", \"return temp1;\", \"}\", \"void main() {\", \"vec2 noise = rand( vUv );\", \"float depth = readDepth( vUv );\", \"float tt = clamp( depth, aoClamp, 1.0 );\", \"float w = ( 1.0 / size.x )  / tt + ( noise.x * ( 1.0 - noise.x ) );\", \"float h = ( 1.0 / size.y ) / tt + ( noise.y * ( 1.0 - noise.y ) );\", \"float ao = 0.0;\", \"float dz = 1.0 / float( samples );\", \"float z = 1.0 - dz / 2.0;\", \"float l = 0.0;\", \"for ( int i = 0; i <= samples; i ++ ) {\", \"float r = sqrt( 1.0 - z );\", \"float pw = cos( l ) * r;\", \"float ph = sin( l ) * r;\", \"ao += calcAO( depth, pw * w, ph * h );\", \"z = z - dz;\", \"l = l + DL;\", \"}\", \"ao /= float( samples );\", \"ao = 1.0 - ao;\", \"vec3 color = texture2D( tDiffuse, vUv ).rgb;\", \"vec3 lumcoeff = vec3( 0.299, 0.587, 0.114 );\", \"float lum = dot( color.rgb, lumcoeff );\", \"vec3 luminance = vec3( lum );\", \"vec3 final = vec3( color * mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\", \"if ( onlyAO ) {\", \"final = vec3( mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\", \"}\", \"gl_FragColor = vec4( final, 1.0 );\", \"}\"].join(\"\\n\")\n      }, t.a = i.SSAOShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.SVGLoader = function (e) {\n        this.manager = void 0 !== e ? e : i.v;\n      }, i.SVGLoader.prototype = {\n        constructor: i.SVGLoader,\n        load: function load(e, t, r, n) {\n          var o = this,\n              a = new DOMParser();\n          new i._54(o.manager).load(e, function (e) {\n            var r = a.parseFromString(e, \"image/svg+xml\");\n            t(r.documentElement);\n          }, r, n);\n        }\n      }, t.a = i.SVGLoader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.SavePass = function (e) {\n        void 0 === i.CopyShader && console.error(\"THREE.SavePass relies on THREE.CopyShader\");\n        var t = i.CopyShader;\n        this.textureID = \"tDiffuse\", this.uniforms = i._46.clone(t.uniforms), this.material = new i._35({\n          uniforms: this.uniforms,\n          vertexShader: t.vertexShader,\n          fragmentShader: t.fragmentShader\n        }), this.renderTarget = e, void 0 === this.renderTarget && (this.renderTargetParameters = {\n          minFilter: i.U,\n          magFilter: i.U,\n          format: i._22,\n          stencilBuffer: !1\n        }, this.renderTarget = new i._53(window.innerWidth, window.innerHeight, this.renderTargetParameters)), this.enabled = !0, this.needsSwap = !1, this.clear = !1, this.camera = new i._14(-1, 1, 1, -1, 0, 1), this.scene = new i._31(), this.quad = new i._3(new i._17(2, 2), null), this.scene.add(this.quad);\n      }, i.SavePass.prototype = {\n        render: function render(e, t, r, i) {\n          this.uniforms[this.textureID] && (this.uniforms[this.textureID].value = r), this.quad.material = this.material, e.render(this.scene, this.camera, this.renderTarget, this.clear);\n        }\n      }, t.a = i.SavePass;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.SepiaShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          amount: {\n            type: \"f\",\n            value: 1\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform float amount;\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 color = texture2D( tDiffuse, vUv );\", \"vec3 c = color.rgb;\", \"color.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );\", \"color.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );\", \"color.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );\", \"gl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), color.a );\", \"}\"].join(\"\\n\")\n      }, t.a = i.SepiaShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.ShaderPass = function (e, t) {\n        this.textureID = void 0 !== t ? t : \"tDiffuse\", this.uniforms = i._46.clone(e.uniforms), this.material = new i._35({\n          defines: e.defines || {},\n          uniforms: this.uniforms,\n          vertexShader: e.vertexShader,\n          fragmentShader: e.fragmentShader\n        }), this.renderToScreen = !1, this.enabled = !0, this.needsSwap = !0, this.clear = !1, this.camera = new i._14(-1, 1, 1, -1, 0, 1), this.scene = new i._31(), this.quad = new i._3(new i._17(2, 2), null), this.scene.add(this.quad);\n      }, i.ShaderPass.prototype = {\n        render: function render(e, t, r, i) {\n          this.uniforms[this.textureID] && (this.uniforms[this.textureID].value = r), this.quad.material = this.material, this.renderToScreen ? e.render(this.scene, this.camera) : e.render(this.scene, this.camera, t, this.clear);\n        }\n      }, t.a = i.ShaderPass;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.ShaderToon = {\n        toon1: {\n          uniforms: {\n            uDirLightPos: {\n              value: new i._49()\n            },\n            uDirLightColor: {\n              value: new i.m(15658734)\n            },\n            uAmbientLightColor: {\n              value: new i.m(328965)\n            },\n            uBaseColor: {\n              value: new i.m(16777215)\n            }\n          },\n          vertexShader: [\"varying vec3 vNormal;\", \"varying vec3 vRefract;\", \"void main() {\", \"vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\", \"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\", \"vec3 worldNormal = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\", \"vNormal = normalize( normalMatrix * normal );\", \"vec3 I = worldPosition.xyz - cameraPosition;\", \"vRefract = refract( normalize( I ), worldNormal, 1.02 );\", \"gl_Position = projectionMatrix * mvPosition;\", \"}\"].join(\"\\n\"),\n          fragmentShader: [\"uniform vec3 uBaseColor;\", \"uniform vec3 uDirLightPos;\", \"uniform vec3 uDirLightColor;\", \"uniform vec3 uAmbientLightColor;\", \"varying vec3 vNormal;\", \"varying vec3 vRefract;\", \"void main() {\", \"float directionalLightWeighting = max( dot( normalize( vNormal ), uDirLightPos ), 0.0);\", \"vec3 lightWeighting = uAmbientLightColor + uDirLightColor * directionalLightWeighting;\", \"float intensity = smoothstep( - 0.5, 1.0, pow( length(lightWeighting), 20.0 ) );\", \"intensity += length(lightWeighting) * 0.2;\", \"float cameraWeighting = dot( normalize( vNormal ), vRefract );\", \"intensity += pow( 1.0 - length( cameraWeighting ), 6.0 );\", \"intensity = intensity * 0.2 + 0.3;\", \"if ( intensity < 0.50 ) {\", \"gl_FragColor = vec4( 2.0 * intensity * uBaseColor, 1.0 );\", \"} else {\", \"gl_FragColor = vec4( 1.0 - 2.0 * ( 1.0 - intensity ) * ( 1.0 - uBaseColor ), 1.0 );\", \"}\", \"}\"].join(\"\\n\")\n        },\n        toon2: {\n          uniforms: {\n            uDirLightPos: {\n              value: new i._49()\n            },\n            uDirLightColor: {\n              value: new i.m(15658734)\n            },\n            uAmbientLightColor: {\n              value: new i.m(328965)\n            },\n            uBaseColor: {\n              value: new i.m(15658734)\n            },\n            uLineColor1: {\n              value: new i.m(8421504)\n            },\n            uLineColor2: {\n              value: new i.m(0)\n            },\n            uLineColor3: {\n              value: new i.m(0)\n            },\n            uLineColor4: {\n              value: new i.m(0)\n            }\n          },\n          vertexShader: [\"varying vec3 vNormal;\", \"void main() {\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"vNormal = normalize( normalMatrix * normal );\", \"}\"].join(\"\\n\"),\n          fragmentShader: [\"uniform vec3 uBaseColor;\", \"uniform vec3 uLineColor1;\", \"uniform vec3 uLineColor2;\", \"uniform vec3 uLineColor3;\", \"uniform vec3 uLineColor4;\", \"uniform vec3 uDirLightPos;\", \"uniform vec3 uDirLightColor;\", \"uniform vec3 uAmbientLightColor;\", \"varying vec3 vNormal;\", \"void main() {\", \"float camera = max( dot( normalize( vNormal ), vec3( 0.0, 0.0, 1.0 ) ), 0.4);\", \"float light = max( dot( normalize( vNormal ), uDirLightPos ), 0.0);\", \"gl_FragColor = vec4( uBaseColor, 1.0 );\", \"if ( length(uAmbientLightColor + uDirLightColor * light) < 1.00 ) {\", \"gl_FragColor *= vec4( uLineColor1, 1.0 );\", \"}\", \"if ( length(uAmbientLightColor + uDirLightColor * camera) < 0.50 ) {\", \"gl_FragColor *= vec4( uLineColor2, 1.0 );\", \"}\", \"}\"].join(\"\\n\")\n        },\n        hatching: {\n          uniforms: {\n            uDirLightPos: {\n              value: new i._49()\n            },\n            uDirLightColor: {\n              value: new i.m(15658734)\n            },\n            uAmbientLightColor: {\n              value: new i.m(328965)\n            },\n            uBaseColor: {\n              value: new i.m(16777215)\n            },\n            uLineColor1: {\n              value: new i.m(0)\n            },\n            uLineColor2: {\n              value: new i.m(0)\n            },\n            uLineColor3: {\n              value: new i.m(0)\n            },\n            uLineColor4: {\n              value: new i.m(0)\n            }\n          },\n          vertexShader: [\"varying vec3 vNormal;\", \"void main() {\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"vNormal = normalize( normalMatrix * normal );\", \"}\"].join(\"\\n\"),\n          fragmentShader: [\"uniform vec3 uBaseColor;\", \"uniform vec3 uLineColor1;\", \"uniform vec3 uLineColor2;\", \"uniform vec3 uLineColor3;\", \"uniform vec3 uLineColor4;\", \"uniform vec3 uDirLightPos;\", \"uniform vec3 uDirLightColor;\", \"uniform vec3 uAmbientLightColor;\", \"varying vec3 vNormal;\", \"void main() {\", \"float directionalLightWeighting = max( dot( normalize(vNormal), uDirLightPos ), 0.0);\", \"vec3 lightWeighting = uAmbientLightColor + uDirLightColor * directionalLightWeighting;\", \"gl_FragColor = vec4( uBaseColor, 1.0 );\", \"if ( length(lightWeighting) < 1.00 ) {\", \"if ( mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0) {\", \"gl_FragColor = vec4( uLineColor1, 1.0 );\", \"}\", \"}\", \"if ( length(lightWeighting) < 0.75 ) {\", \"if (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0) {\", \"gl_FragColor = vec4( uLineColor2, 1.0 );\", \"}\", \"}\", \"if ( length(lightWeighting) < 0.50 ) {\", \"if (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0) {\", \"gl_FragColor = vec4( uLineColor3, 1.0 );\", \"}\", \"}\", \"if ( length(lightWeighting) < 0.3465 ) {\", \"if (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0) {\", \"gl_FragColor = vec4( uLineColor4, 1.0 );\", \"}\", \"}\", \"}\"].join(\"\\n\")\n        },\n        dotted: {\n          uniforms: {\n            uDirLightPos: {\n              value: new i._49()\n            },\n            uDirLightColor: {\n              value: new i.m(15658734)\n            },\n            uAmbientLightColor: {\n              value: new i.m(328965)\n            },\n            uBaseColor: {\n              value: new i.m(16777215)\n            },\n            uLineColor1: {\n              value: new i.m(0)\n            }\n          },\n          vertexShader: [\"varying vec3 vNormal;\", \"void main() {\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"vNormal = normalize( normalMatrix * normal );\", \"}\"].join(\"\\n\"),\n          fragmentShader: [\"uniform vec3 uBaseColor;\", \"uniform vec3 uLineColor1;\", \"uniform vec3 uLineColor2;\", \"uniform vec3 uLineColor3;\", \"uniform vec3 uLineColor4;\", \"uniform vec3 uDirLightPos;\", \"uniform vec3 uDirLightColor;\", \"uniform vec3 uAmbientLightColor;\", \"varying vec3 vNormal;\", \"void main() {\", \"float directionalLightWeighting = max( dot( normalize(vNormal), uDirLightPos ), 0.0);\", \"vec3 lightWeighting = uAmbientLightColor + uDirLightColor * directionalLightWeighting;\", \"gl_FragColor = vec4( uBaseColor, 1.0 );\", \"if ( length(lightWeighting) < 1.00 ) {\", \"if ( ( mod(gl_FragCoord.x, 4.001) + mod(gl_FragCoord.y, 4.0) ) > 6.00 ) {\", \"gl_FragColor = vec4( uLineColor1, 1.0 );\", \"}\", \"}\", \"if ( length(lightWeighting) < 0.50 ) {\", \"if ( ( mod(gl_FragCoord.x + 2.0, 4.001) + mod(gl_FragCoord.y + 2.0, 4.0) ) > 6.00 ) {\", \"gl_FragColor = vec4( uLineColor1, 1.0 );\", \"}\", \"}\", \"}\"].join(\"\\n\")\n        }\n      }, t.a = i.ShaderToon;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.TechnicolorShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 tex = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );\", \"vec4 newTex = vec4(tex.r, (tex.g + tex.b) * .5, (tex.g + tex.b) * .5, 1.0);\", \"gl_FragColor = newTex;\", \"}\"].join(\"\\n\")\n      }, t.a = i.TechnicolorShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.TexturePass = function (e, t) {\n        void 0 === i.CopyShader && console.error(\"THREE.TexturePass relies on THREE.CopyShader\");\n        var r = i.CopyShader;\n        this.uniforms = i._46.clone(r.uniforms), this.uniforms.opacity.value = void 0 !== t ? t : 1, this.uniforms.tDiffuse.value = e, this.material = new i._35({\n          uniforms: this.uniforms,\n          vertexShader: r.vertexShader,\n          fragmentShader: r.fragmentShader\n        }), this.enabled = !0, this.needsSwap = !1, this.camera = new i._14(-1, 1, 1, -1, 0, 1), this.scene = new i._31(), this.quad = new i._3(new i._17(2, 2), null), this.scene.add(this.quad);\n      }, i.TexturePass.prototype = {\n        render: function render(e, t, r, i) {\n          this.quad.material = this.material, e.render(this.scene, this.camera, r);\n        }\n      }, t.a = i.TexturePass;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.ToneMapShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          averageLuminance: {\n            type: \"f\",\n            value: 1\n          },\n          luminanceMap: {\n            type: \"t\",\n            value: null\n          },\n          maxLuminance: {\n            type: \"f\",\n            value: 16\n          },\n          middleGrey: {\n            type: \"f\",\n            value: .6\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"uniform float middleGrey;\", \"uniform float maxLuminance;\", \"#ifdef ADAPTED_LUMINANCE\", \"uniform sampler2D luminanceMap;\", \"#else\", \"uniform float averageLuminance;\", \"#endif\", \"const vec3 LUM_CONVERT = vec3(0.299, 0.587, 0.114);\", \"vec3 ToneMap( vec3 vColor ) {\", \"#ifdef ADAPTED_LUMINANCE\", \"float fLumAvg = texture2D(luminanceMap, vec2(0.5, 0.5)).r;\", \"#else\", \"float fLumAvg = averageLuminance;\", \"#endif\", \"float fLumPixel = dot(vColor, LUM_CONVERT);\", \"float fLumScaled = (fLumPixel * middleGrey) / fLumAvg;\", \"float fLumCompressed = (fLumScaled * (1.0 + (fLumScaled / (maxLuminance * maxLuminance)))) / (1.0 + fLumScaled);\", \"return fLumCompressed * vColor;\", \"}\", \"void main() {\", \"vec4 texel = texture2D( tDiffuse, vUv );\", \"gl_FragColor = vec4( ToneMap( texel.xyz ), texel.w );\", \"}\"].join(\"\\n\")\n      }, t.a = i.ToneMapShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.TriangleBlurShader = {\n        uniforms: {\n          texture: {\n            type: \"t\",\n            value: null\n          },\n          delta: {\n            type: \"v2\",\n            value: new i._48(1, 1)\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"#define ITERATIONS 10.0\", \"uniform sampler2D texture;\", \"uniform vec2 delta;\", \"varying vec2 vUv;\", \"float random( vec3 scale, float seed ) {\", \"return fract( sin( dot( gl_FragCoord.xyz + seed, scale ) ) * 43758.5453 + seed );\", \"}\", \"void main() {\", \"vec4 color = vec4( 0.0 );\", \"float total = 0.0;\", \"float offset = random( vec3( 12.9898, 78.233, 151.7182 ), 0.0 );\", \"for ( float t = -ITERATIONS; t <= ITERATIONS; t ++ ) {\", \"float percent = ( t + offset - 0.5 ) / ITERATIONS;\", \"float weight = 1.0 - abs( percent );\", \"color += texture2D( texture, vUv + delta * percent ) * weight;\", \"total += weight;\", \"}\", \"gl_FragColor = color / total;\", \"}\"].join(\"\\n\")\n      }, t.a = i.TriangleBlurShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.UnpackDepthRGBAShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          opacity: {\n            type: \"f\",\n            value: 1\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform float opacity;\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"float unpackDepth( const in vec4 rgba_depth ) {\", \"const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\", \"float depth = dot( rgba_depth, bit_shift );\", \"return depth;\", \"}\", \"void main() {\", \"float depth = 1.0 - unpackDepth( texture2D( tDiffuse, vUv ) );\", \"gl_FragColor = opacity * vec4( vec3( depth ), 1.0 );\", \"}\"].join(\"\\n\")\n      }, t.a = i.UnpackDepthRGBAShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.VerticalBlurShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          v: {\n            type: \"f\",\n            value: 1 / 512\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform float v;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 sum = vec4( 0.0 );\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\", \"gl_FragColor = sum;\", \"}\"].join(\"\\n\")\n      }, t.a = i.VerticalBlurShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.VerticalTiltShiftShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          v: {\n            type: \"f\",\n            value: 1 / 512\n          },\n          r: {\n            type: \"f\",\n            value: .35\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform float v;\", \"uniform float r;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 sum = vec4( 0.0 );\", \"float vv = v * abs( r - vUv.y );\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\", \"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\", \"gl_FragColor = sum;\", \"}\"].join(\"\\n\")\n      }, t.a = i.VerticalTiltShiftShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.VignetteShader = {\n        uniforms: {\n          tDiffuse: {\n            type: \"t\",\n            value: null\n          },\n          offset: {\n            type: \"f\",\n            value: 1\n          },\n          darkness: {\n            type: \"f\",\n            value: 1\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform float offset;\", \"uniform float darkness;\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", \"vec4 texel = texture2D( tDiffuse, vUv );\", \"vec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\", \"gl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\", \"}\"].join(\"\\n\")\n      }, t.a = i.VignetteShader;\n    }, function (e, t, r) {\n      \"use strict\";\n\n      var i = r(0);\n      i.SobelOperatorShader = {\n        uniforms: {\n          tDiffuse: {\n            value: null\n          },\n          resolution: {\n            value: new i._48()\n          }\n        },\n        vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n        fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform vec2 resolution;\", \"varying vec2 vUv;\", \"void main() {\", \"vec2 texel = vec2( 1.0 / resolution.x, 1.0 / resolution.y );\", \"const mat3 Gx = mat3( -1, -2, -1, 0, 0, 0, 1, 2, 1 );\", \"const mat3 Gy = mat3( -1, 0, 1, -2, 0, 2, -1, 0, 1 );\", \"float tx0y0 = texture2D( tDiffuse, vUv + texel * vec2( -1, -1 ) ).r;\", \"float tx0y1 = texture2D( tDiffuse, vUv + texel * vec2( -1,  0 ) ).r;\", \"float tx0y2 = texture2D( tDiffuse, vUv + texel * vec2( -1,  1 ) ).r;\", \"float tx1y0 = texture2D( tDiffuse, vUv + texel * vec2(  0, -1 ) ).r;\", \"float tx1y1 = texture2D( tDiffuse, vUv + texel * vec2(  0,  0 ) ).r;\", \"float tx1y2 = texture2D( tDiffuse, vUv + texel * vec2(  0,  1 ) ).r;\", \"float tx2y0 = texture2D( tDiffuse, vUv + texel * vec2(  1, -1 ) ).r;\", \"float tx2y1 = texture2D( tDiffuse, vUv + texel * vec2(  1,  0 ) ).r;\", \"float tx2y2 = texture2D( tDiffuse, vUv + texel * vec2(  1,  1 ) ).r;\", \"float valueGx = Gx[0][0] * tx0y0 + Gx[1][0] * tx1y0 + Gx[2][0] * tx2y0 + \", \"Gx[0][1] * tx0y1 + Gx[1][1] * tx1y1 + Gx[2][1] * tx2y1 + \", \"Gx[0][2] * tx0y2 + Gx[1][2] * tx1y2 + Gx[2][2] * tx2y2; \", \"float valueGy = Gy[0][0] * tx0y0 + Gy[1][0] * tx1y0 + Gy[2][0] * tx2y0 + \", \"Gy[0][1] * tx0y1 + Gy[1][1] * tx1y1 + Gy[2][1] * tx2y1 + \", \"Gy[0][2] * tx0y2 + Gy[1][2] * tx1y2 + Gy[2][2] * tx2y2; \", \"float G = sqrt( ( valueGx * valueGx ) + ( valueGy * valueGy ) );\", \"gl_FragColor = vec4( vec3( G ), 1 );\", \"}\"].join(\"\\n\")\n      }, t.a = i.SobelOperatorShader;\n    }]);\n  });\n  /***/\n},\n/* 33 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4), __webpack_require__(20)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'), require('./helpers/index'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys, global.index);\n        global.BarLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys, _index) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.Loader = undefined;\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n  0% {left: -35%;right: 100%} \\n  60% {left: 100%;right: -90%}\\n  100% {left: 100%;right: -90%}\\n'], ['\\n  0% {left: -35%;right: 100%} \\n  60% {left: 100%;right: -90%}\\n  100% {left: 100%;right: -90%}\\n']),\n          _templateObject2 = _taggedTemplateLiteral(['\\n  0% {left: -200%;right: 100%} \\n  60% {left: 107%;right: -8%}\\n  100% {left: 107%;right: -8%}\\n'], ['\\n  0% {left: -200%;right: 100%} \\n  60% {left: 107%;right: -8%}\\n  100% {left: 107%;right: -8%}\\n']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      }\n\n      var long = (0, _core.keyframes)(_templateObject);\n      var short = (0, _core.keyframes)(_templateObject2);\n\n      var Loader = exports.Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {\n            var _this$props = _this.props,\n                height = _this$props.height,\n                color = _this$props.color,\n                heightUnit = _this$props.heightUnit;\n            return (\n              /*#__PURE__*/\n              (0, _core.css)('{position:absolute;height:', '' + height + heightUnit, ';overflow:hidden;background-color:', color, ';background-clip:padding-box;display:block;border-radius:2px;will-change:left,right;animation-fill-mode:forwards;animation:', i === 1 ? long : short, ' 2.1s ', i === 2 ? '1.15s' : '', ' ', i === 1 ? 'cubic-bezier(0.65, 0.815, 0.735, 0.395)' : 'cubic-bezier(0.165, 0.84, 0.44, 1)', ' infinite;}label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9CYXJMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVCZ0IiLCJmaWxlIjoic3JjL0JhckxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5pbXBvcnQgeyBjYWxjdWxhdGVSZ2JhIH0gZnJvbSAnLi9oZWxwZXJzL2luZGV4JztcblxuY29uc3QgbG9uZyA9IGtleWZyYW1lc2BcbiAgMCUge2xlZnQ6IC0zNSU7cmlnaHQ6IDEwMCV9IFxuICA2MCUge2xlZnQ6IDEwMCU7cmlnaHQ6IC05MCV9XG4gIDEwMCUge2xlZnQ6IDEwMCU7cmlnaHQ6IC05MCV9XG5gO1xuXG5jb25zdCBzaG9ydCA9IGtleWZyYW1lc2BcbiAgMCUge2xlZnQ6IC0yMDAlO3JpZ2h0OiAxMDAlfSBcbiAgNjAlIHtsZWZ0OiAxMDclO3JpZ2h0OiAtOCV9XG4gIDEwMCUge2xlZnQ6IDEwNyU7cmlnaHQ6IC04JX1cbmA7XG5cbmV4cG9ydCBjbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0eWxlID0gaSA9PiB7XG4gICAgICBjb25zdCB7IGhlaWdodCwgY29sb3IsIGhlaWdodFVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake2hlaWdodH0ke2hlaWdodFVuaXR9YH07XG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgICAgICAgICB3aWxsLWNoYW5nZTogbGVmdCwgcmlnaHQ7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbiAgICAgICAgICAgIGFuaW1hdGlvbjogJHtpID09PSAxID8gbG9uZyA6IHNob3J0fSAyLjFzICR7aSA9PT0gMiA/ICcxLjE1cycgOiAnJ30gJHtpID09PSAxID8gJ2N1YmljLWJlemllcigwLjY1LCAwLjgxNSwgMC43MzUsIDAuMzk1KScgOiAnY3ViaWMtYmV6aWVyKDAuMTY1LCAwLjg0LCAwLjQ0LCAxKSd9IGluZmluaXRlO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgd3JhcHBlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgd2lkdGgsIGhlaWdodCwgY29sb3IsIGhlaWdodFVuaXQsIHdpZHRoVW5pdFxuICAgICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGNvbnN0IHdyYXBwZXIgPSBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHt3aWR0aH0ke3dpZHRoVW5pdH1gfTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtoZWlnaHR9JHtoZWlnaHRVbml0fWB9O1xuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y2FsY3VsYXRlUmdiYShjb2xvciwgMC4yKX07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuICAgICAgICB9YDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMSl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMil9IC8+XG4gICAgICAgIDwvZGl2PiA6IG51bGw7XG4gICAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxuICB3aWR0aFVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGhlaWdodDogUHJvcFR5cGVzLm51bWJlcixcbiAgaGVpZ2h0VW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICB3aWR0aDogMTAwLFxuICB3aWR0aFVuaXQ6ICdweCcsXG4gIGhlaWdodDogNCxcbiAgaGVpZ2h0VW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3dpZHRoJywgJ2hlaWdodCcsICdoZWlnaHRVbml0JywgJ3dpZHRoVW5pdCcsICdjc3MnXSkoTG9hZGVyKTtcbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMgPSBMb2FkZXIuZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuIl19 */'))\n            );\n          }, _this.wrapper = function () {\n            var _this$props2 = _this.props,\n                width = _this$props2.width,\n                height = _this$props2.height,\n                color = _this$props2.color,\n                heightUnit = _this$props2.heightUnit,\n                widthUnit = _this$props2.widthUnit;\n            var wrapper =\n            /*#__PURE__*/\n            (0, _core.css)('{position:relative;width:', '' + width + widthUnit, ';height:', '' + height + heightUnit, ';overflow:hidden;background-color:', (0, _index.calculateRgba)(color, 0.2), ';background-clip:padding-box;}label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9CYXJMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBDeUIiLCJmaWxlIjoic3JjL0JhckxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5pbXBvcnQgeyBjYWxjdWxhdGVSZ2JhIH0gZnJvbSAnLi9oZWxwZXJzL2luZGV4JztcblxuY29uc3QgbG9uZyA9IGtleWZyYW1lc2BcbiAgMCUge2xlZnQ6IC0zNSU7cmlnaHQ6IDEwMCV9IFxuICA2MCUge2xlZnQ6IDEwMCU7cmlnaHQ6IC05MCV9XG4gIDEwMCUge2xlZnQ6IDEwMCU7cmlnaHQ6IC05MCV9XG5gO1xuXG5jb25zdCBzaG9ydCA9IGtleWZyYW1lc2BcbiAgMCUge2xlZnQ6IC0yMDAlO3JpZ2h0OiAxMDAlfSBcbiAgNjAlIHtsZWZ0OiAxMDclO3JpZ2h0OiAtOCV9XG4gIDEwMCUge2xlZnQ6IDEwNyU7cmlnaHQ6IC04JX1cbmA7XG5cbmV4cG9ydCBjbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0eWxlID0gaSA9PiB7XG4gICAgICBjb25zdCB7IGhlaWdodCwgY29sb3IsIGhlaWdodFVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake2hlaWdodH0ke2hlaWdodFVuaXR9YH07XG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgICAgICAgICB3aWxsLWNoYW5nZTogbGVmdCwgcmlnaHQ7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbiAgICAgICAgICAgIGFuaW1hdGlvbjogJHtpID09PSAxID8gbG9uZyA6IHNob3J0fSAyLjFzICR7aSA9PT0gMiA/ICcxLjE1cycgOiAnJ30gJHtpID09PSAxID8gJ2N1YmljLWJlemllcigwLjY1LCAwLjgxNSwgMC43MzUsIDAuMzk1KScgOiAnY3ViaWMtYmV6aWVyKDAuMTY1LCAwLjg0LCAwLjQ0LCAxKSd9IGluZmluaXRlO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgd3JhcHBlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgd2lkdGgsIGhlaWdodCwgY29sb3IsIGhlaWdodFVuaXQsIHdpZHRoVW5pdFxuICAgICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGNvbnN0IHdyYXBwZXIgPSBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHt3aWR0aH0ke3dpZHRoVW5pdH1gfTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtoZWlnaHR9JHtoZWlnaHRVbml0fWB9O1xuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y2FsY3VsYXRlUmdiYShjb2xvciwgMC4yKX07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuICAgICAgICB9YDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMSl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMil9IC8+XG4gICAgICAgIDwvZGl2PiA6IG51bGw7XG4gICAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxuICB3aWR0aFVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGhlaWdodDogUHJvcFR5cGVzLm51bWJlcixcbiAgaGVpZ2h0VW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICB3aWR0aDogMTAwLFxuICB3aWR0aFVuaXQ6ICdweCcsXG4gIGhlaWdodDogNCxcbiAgaGVpZ2h0VW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3dpZHRoJywgJ2hlaWdodCcsICdoZWlnaHRVbml0JywgJ3dpZHRoVW5pdCcsICdjc3MnXSkoTG9hZGVyKTtcbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMgPSBMb2FkZXIuZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuIl19 */'));\n            return _this.props.css ?\n            /*#__PURE__*/\n            (0, _core.css)(wrapper, ';', _this.props.css, 'label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9CYXJMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1EaUMiLCJmaWxlIjoic3JjL0JhckxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5pbXBvcnQgeyBjYWxjdWxhdGVSZ2JhIH0gZnJvbSAnLi9oZWxwZXJzL2luZGV4JztcblxuY29uc3QgbG9uZyA9IGtleWZyYW1lc2BcbiAgMCUge2xlZnQ6IC0zNSU7cmlnaHQ6IDEwMCV9IFxuICA2MCUge2xlZnQ6IDEwMCU7cmlnaHQ6IC05MCV9XG4gIDEwMCUge2xlZnQ6IDEwMCU7cmlnaHQ6IC05MCV9XG5gO1xuXG5jb25zdCBzaG9ydCA9IGtleWZyYW1lc2BcbiAgMCUge2xlZnQ6IC0yMDAlO3JpZ2h0OiAxMDAlfSBcbiAgNjAlIHtsZWZ0OiAxMDclO3JpZ2h0OiAtOCV9XG4gIDEwMCUge2xlZnQ6IDEwNyU7cmlnaHQ6IC04JX1cbmA7XG5cbmV4cG9ydCBjbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0eWxlID0gaSA9PiB7XG4gICAgICBjb25zdCB7IGhlaWdodCwgY29sb3IsIGhlaWdodFVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake2hlaWdodH0ke2hlaWdodFVuaXR9YH07XG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgICAgICAgICB3aWxsLWNoYW5nZTogbGVmdCwgcmlnaHQ7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbiAgICAgICAgICAgIGFuaW1hdGlvbjogJHtpID09PSAxID8gbG9uZyA6IHNob3J0fSAyLjFzICR7aSA9PT0gMiA/ICcxLjE1cycgOiAnJ30gJHtpID09PSAxID8gJ2N1YmljLWJlemllcigwLjY1LCAwLjgxNSwgMC43MzUsIDAuMzk1KScgOiAnY3ViaWMtYmV6aWVyKDAuMTY1LCAwLjg0LCAwLjQ0LCAxKSd9IGluZmluaXRlO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgd3JhcHBlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgd2lkdGgsIGhlaWdodCwgY29sb3IsIGhlaWdodFVuaXQsIHdpZHRoVW5pdFxuICAgICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGNvbnN0IHdyYXBwZXIgPSBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHt3aWR0aH0ke3dpZHRoVW5pdH1gfTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtoZWlnaHR9JHtoZWlnaHRVbml0fWB9O1xuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y2FsY3VsYXRlUmdiYShjb2xvciwgMC4yKX07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuICAgICAgICB9YDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMSl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMil9IC8+XG4gICAgICAgIDwvZGl2PiA6IG51bGw7XG4gICAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxuICB3aWR0aFVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGhlaWdodDogUHJvcFR5cGVzLm51bWJlcixcbiAgaGVpZ2h0VW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICB3aWR0aDogMTAwLFxuICB3aWR0aFVuaXQ6ICdweCcsXG4gIGhlaWdodDogNCxcbiAgaGVpZ2h0VW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3dpZHRoJywgJ2hlaWdodCcsICdoZWlnaHRVbml0JywgJ3dpZHRoVW5pdCcsICdjc3MnXSkoTG9hZGVyKTtcbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMgPSBMb2FkZXIuZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuIl19 */')) : wrapper;\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.wrapper()\n            }, (0, _core.jsx)('div', {\n              css: this.style(1)\n            }), (0, _core.jsx)('div', {\n              css: this.style(2)\n            })) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        color: _propTypes2.default.string,\n        width: _propTypes2.default.number,\n        widthUnit: _propTypes2.default.string,\n        height: _propTypes2.default.number,\n        heightUnit: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        color: '#000000',\n        width: 100,\n        widthUnit: 'px',\n        height: 4,\n        heightUnit: 'px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'width', 'height', 'heightUnit', 'widthUnit', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 34 */\n\n/***/\nfunction (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    /* harmony import */\n    var __WEBPACK_IMPORTED_MODULE_0__emotion_sheet__ = __webpack_require__(15);\n    /* harmony import */\n\n\n    var __WEBPACK_IMPORTED_MODULE_1__emotion_stylis__ = __webpack_require__(35);\n    /* harmony import */\n\n\n    var __WEBPACK_IMPORTED_MODULE_2__emotion_weak_memoize__ = __webpack_require__(36); // https://github.com/thysultan/stylis.js/tree/master/plugins/rule-sheet\n    // inlined to avoid umd wrapper and peerDep warnings/installing stylis\n    // since we use stylis after closure compiler\n\n\n    var delimiter = '/*|*/';\n    var needle = delimiter + '}';\n\n    function toSheet(block) {\n      if (block) {\n        Sheet.current.insert(block + '}');\n      }\n    }\n\n    var Sheet = {\n      current: null\n    };\n\n    var ruleSheet = function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {\n      switch (context) {\n        // property\n        case 1:\n          {\n            switch (content.charCodeAt(0)) {\n              case 64:\n                {\n                  // @import\n                  Sheet.current.insert(content + ';');\n                  return '';\n                }\n              // charcode for l\n\n              case 108:\n                {\n                  // charcode for b\n                  // this ignores label\n                  if (content.charCodeAt(2) === 98) {\n                    return '';\n                  }\n                }\n            }\n\n            break;\n          }\n        // selector\n\n        case 2:\n          {\n            if (ns === 0) return content + delimiter;\n            break;\n          }\n        // at-rule\n\n        case 3:\n          {\n            switch (ns) {\n              // @font-face, @page\n              case 102:\n              case 112:\n                {\n                  Sheet.current.insert(selectors[0] + content);\n                  return '';\n                }\n\n              default:\n                {\n                  return content + (at === 0 ? delimiter : '');\n                }\n            }\n          }\n\n        case -2:\n          {\n            content.split(needle).forEach(toSheet);\n          }\n      }\n    };\n\n    var createCache = function createCache(options) {\n      if (options === undefined) options = {};\n      var key = options.key || 'css';\n      var stylisOptions;\n\n      if (options.prefix !== undefined) {\n        stylisOptions = {\n          prefix: options.prefix\n        };\n      }\n\n      var stylis = new __WEBPACK_IMPORTED_MODULE_1__emotion_stylis__[\"a\"\n      /* default */\n      ](stylisOptions);\n\n      if (process.env.NODE_ENV !== 'production') {\n        // $FlowFixMe\n        if (/[^a-z-]/.test(key)) {\n          throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n        }\n      }\n\n      var inserted = {}; // $FlowFixMe\n\n      var container;\n      {\n        container = options.container || document.head;\n        var nodes = document.querySelectorAll(\"style[data-emotion-\" + key + \"]\");\n        Array.prototype.forEach.call(nodes, function (node) {\n          var attrib = node.getAttribute(\"data-emotion-\" + key); // $FlowFixMe\n\n          attrib.split(' ').forEach(function (id) {\n            inserted[id] = true;\n          });\n\n          if (node.parentNode !== container) {\n            container.appendChild(node);\n          }\n        });\n      }\n\n      var _insert;\n\n      {\n        stylis.use(options.stylisPlugins)(ruleSheet);\n\n        _insert = function insert(selector, serialized, sheet, shouldCache) {\n          var name = serialized.name;\n          Sheet.current = sheet;\n\n          if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n            var map = serialized.map;\n            Sheet.current = {\n              insert: function insert(rule) {\n                sheet.insert(rule + map);\n              }\n            };\n          }\n\n          stylis(selector, serialized.styles);\n\n          if (shouldCache) {\n            cache.inserted[name] = true;\n          }\n        };\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        // https://esbench.com/bench/5bf7371a4cd7e6009ef61d0a\n        var commentStart = /\\/\\*/g;\n        var commentEnd = /\\*\\//g;\n        stylis.use(function (context, content) {\n          switch (context) {\n            case -1:\n              {\n                while (commentStart.test(content)) {\n                  commentEnd.lastIndex = commentStart.lastIndex;\n\n                  if (commentEnd.test(content)) {\n                    commentStart.lastIndex = commentEnd.lastIndex;\n                    continue;\n                  }\n\n                  throw new Error('Your styles have an unterminated comment (\"/*\" without corresponding \"*/\").');\n                }\n\n                commentStart.lastIndex = 0;\n                break;\n              }\n          }\n        });\n        stylis.use(function (context, content, selectors) {\n          switch (context) {\n            case 2:\n              {\n                for (var i = 0, len = selectors.length; len > i; i++) {\n                  // :last-child isn't included here since it's safe\n                  // because a style element will never be the last element\n                  var match = selectors[i].match(/:(first|nth|nth-last)-child/);\n\n                  if (match !== null) {\n                    console.error(\"The pseudo class \\\"\" + match[0] + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + match[1] + \"-of-type\\\"\");\n                  }\n                }\n\n                break;\n              }\n          }\n        });\n      }\n\n      var cache = {\n        key: key,\n        sheet: new __WEBPACK_IMPORTED_MODULE_0__emotion_sheet__[\"a\"\n        /* StyleSheet */\n        ]({\n          key: key,\n          container: container,\n          nonce: options.nonce,\n          speedy: options.speedy\n        }),\n        nonce: options.nonce,\n        inserted: inserted,\n        registered: {},\n        insert: _insert\n      };\n      return cache;\n    };\n    /* harmony default export */\n\n\n    __webpack_exports__[\"a\"] = createCache;\n    /* WEBPACK VAR INJECTION */\n  }).call(__webpack_exports__, __webpack_require__(0));\n  /***/\n},\n/* 35 */\n\n/***/\nfunction (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n\n  function stylis_min(W) {\n    function M(d, c, e, h, a) {\n      for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n        g = e.charCodeAt(l);\n        l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n        if (0 === b + n + v + m) {\n          if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n            switch (g) {\n              case 32:\n              case 9:\n              case 59:\n              case 13:\n              case 10:\n                break;\n\n              default:\n                f += e.charAt(l);\n            }\n\n            g = 59;\n          }\n\n          switch (g) {\n            case 123:\n              f = f.trim();\n              q = f.charCodeAt(0);\n              k = 1;\n\n              for (t = ++l; l < B;) {\n                switch (g = e.charCodeAt(l)) {\n                  case 123:\n                    k++;\n                    break;\n\n                  case 125:\n                    k--;\n                    break;\n\n                  case 47:\n                    switch (g = e.charCodeAt(l + 1)) {\n                      case 42:\n                      case 47:\n                        a: {\n                          for (u = l + 1; u < J; ++u) {\n                            switch (e.charCodeAt(u)) {\n                              case 47:\n                                if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                  l = u + 1;\n                                  break a;\n                                }\n\n                                break;\n\n                              case 10:\n                                if (47 === g) {\n                                  l = u + 1;\n                                  break a;\n                                }\n\n                            }\n                          }\n\n                          l = u;\n                        }\n\n                    }\n\n                    break;\n\n                  case 91:\n                    g++;\n\n                  case 40:\n                    g++;\n\n                  case 34:\n                  case 39:\n                    for (; l++ < J && e.charCodeAt(l) !== g;) {}\n\n                }\n\n                if (0 === k) break;\n                l++;\n              }\n\n              k = e.substring(t, l);\n              0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n              switch (q) {\n                case 64:\n                  0 < r && (f = f.replace(N, ''));\n                  g = f.charCodeAt(1);\n\n                  switch (g) {\n                    case 100:\n                    case 109:\n                    case 115:\n                    case 45:\n                      r = c;\n                      break;\n\n                    default:\n                      r = O;\n                  }\n\n                  k = M(c, r, k, g, a + 1);\n                  t = k.length;\n                  0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                  if (0 < t) switch (g) {\n                    case 115:\n                      f = f.replace(da, ea);\n\n                    case 100:\n                    case 109:\n                    case 45:\n                      k = f + '{' + k + '}';\n                      break;\n\n                    case 107:\n                      f = f.replace(fa, '$1 $2');\n                      k = f + '{' + k + '}';\n                      k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                      break;\n\n                    default:\n                      k = f + k, 112 === h && (k = (p += k, ''));\n                  } else k = '';\n                  break;\n\n                default:\n                  k = M(c, X(c, f, I), k, h, a + 1);\n              }\n\n              F += k;\n              k = I = r = u = q = 0;\n              f = '';\n              g = e.charCodeAt(++l);\n              break;\n\n            case 125:\n            case 59:\n              f = (0 < r ? f.replace(N, '') : f).trim();\n              if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n                case 0:\n                  break;\n\n                case 64:\n                  if (105 === g || 99 === g) {\n                    G += f + e.charAt(l);\n                    break;\n                  }\n\n                default:\n                  58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n              }\n              I = r = u = q = 0;\n              f = '';\n              g = e.charCodeAt(++l);\n          }\n        }\n\n        switch (g) {\n          case 13:\n          case 10:\n            47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n            0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n            z = 1;\n            D++;\n            break;\n\n          case 59:\n          case 125:\n            if (0 === b + n + v + m) {\n              z++;\n              break;\n            }\n\n          default:\n            z++;\n            y = e.charAt(l);\n\n            switch (g) {\n              case 9:\n              case 32:\n                if (0 === n + m + b) switch (x) {\n                  case 44:\n                  case 58:\n                  case 9:\n                  case 32:\n                    y = '';\n                    break;\n\n                  default:\n                    32 !== g && (y = ' ');\n                }\n                break;\n\n              case 0:\n                y = '\\\\0';\n                break;\n\n              case 12:\n                y = '\\\\f';\n                break;\n\n              case 11:\n                y = '\\\\v';\n                break;\n\n              case 38:\n                0 === n + b + m && (r = I = 1, y = '\\f' + y);\n                break;\n\n              case 108:\n                if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                  case 2:\n                    112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                  case 8:\n                    111 === K && (E = K);\n                }\n                break;\n\n              case 58:\n                0 === n + b + m && (u = l);\n                break;\n\n              case 44:\n                0 === b + v + n + m && (r = 1, y += '\\r');\n                break;\n\n              case 34:\n              case 39:\n                0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n                break;\n\n              case 91:\n                0 === n + b + v && m++;\n                break;\n\n              case 93:\n                0 === n + b + v && m--;\n                break;\n\n              case 41:\n                0 === n + b + m && v--;\n                break;\n\n              case 40:\n                if (0 === n + b + m) {\n                  if (0 === q) switch (2 * x + 3 * K) {\n                    case 533:\n                      break;\n\n                    default:\n                      q = 1;\n                  }\n                  v++;\n                }\n\n                break;\n\n              case 64:\n                0 === b + v + n + m + u + k && (k = 1);\n                break;\n\n              case 42:\n              case 47:\n                if (!(0 < n + m + v)) switch (b) {\n                  case 0:\n                    switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                      case 235:\n                        b = 47;\n                        break;\n\n                      case 220:\n                        t = l, b = 42;\n                    }\n\n                    break;\n\n                  case 42:\n                    47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n                }\n            }\n\n            0 === b && (f += y);\n        }\n\n        K = x;\n        x = g;\n        l++;\n      }\n\n      t = p.length;\n\n      if (0 < t) {\n        r = c;\n        if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n        p = r.join(',') + '{' + p + '}';\n\n        if (0 !== w * E) {\n          2 !== w || L(p, 2) || (E = 0);\n\n          switch (E) {\n            case 111:\n              p = p.replace(ha, ':-moz-$1') + p;\n              break;\n\n            case 112:\n              p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n          }\n\n          E = 0;\n        }\n      }\n\n      return G + p + F;\n    }\n\n    function X(d, c, e) {\n      var h = c.trim().split(ia);\n      c = h;\n      var a = h.length,\n          m = d.length;\n\n      switch (m) {\n        case 0:\n        case 1:\n          var b = 0;\n\n          for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n            c[b] = Z(d, c[b], e, m).trim();\n          }\n\n          break;\n\n        default:\n          var v = b = 0;\n\n          for (c = []; b < a; ++b) {\n            for (var n = 0; n < m; ++n) {\n              c[v++] = Z(d[n] + ' ', h[b], e, m).trim();\n            }\n          }\n\n      }\n\n      return c;\n    }\n\n    function Z(d, c, e) {\n      var h = c.charCodeAt(0);\n      33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n      switch (h) {\n        case 38:\n          return c.replace(F, '$1' + d.trim());\n\n        case 58:\n          return d.trim() + c.replace(F, '$1' + d.trim());\n\n        default:\n          if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n      }\n\n      return d + c;\n    }\n\n    function P(d, c, e, h) {\n      var a = d + ';',\n          m = 2 * c + 3 * e + 4 * h;\n\n      if (944 === m) {\n        d = a.indexOf(':', 9) + 1;\n        var b = a.substring(d, a.length - 1).trim();\n        b = a.substring(0, d).trim() + b + ';';\n        return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n      }\n\n      if (0 === w || 2 === w && !L(a, 1)) return a;\n\n      switch (m) {\n        case 1015:\n          return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n        case 951:\n          return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n        case 963:\n          return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n        case 1009:\n          if (100 !== a.charCodeAt(4)) break;\n\n        case 969:\n        case 942:\n          return '-webkit-' + a + a;\n\n        case 978:\n          return '-webkit-' + a + '-moz-' + a + a;\n\n        case 1019:\n        case 983:\n          return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n        case 883:\n          if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n          if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n          break;\n\n        case 932:\n          if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n            case 103:\n              return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n            case 115:\n              return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n            case 98:\n              return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n          }\n          return '-webkit-' + a + '-ms-' + a + a;\n\n        case 964:\n          return '-webkit-' + a + '-ms-flex-' + a + a;\n\n        case 1023:\n          if (99 !== a.charCodeAt(8)) break;\n          b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n          return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n        case 1005:\n          return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n        case 1e3:\n          b = a.substring(13).trim();\n          c = b.indexOf('-') + 1;\n\n          switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n            case 226:\n              b = a.replace(G, 'tb');\n              break;\n\n            case 232:\n              b = a.replace(G, 'tb-rl');\n              break;\n\n            case 220:\n              b = a.replace(G, 'lr');\n              break;\n\n            default:\n              return a;\n          }\n\n          return '-webkit-' + a + '-ms-' + b + a;\n\n        case 1017:\n          if (-1 === a.indexOf('sticky', 9)) break;\n\n        case 975:\n          c = (a = d).length - 10;\n          b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n          switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n            case 203:\n              if (111 > b.charCodeAt(8)) break;\n\n            case 115:\n              a = a.replace(b, '-webkit-' + b) + ';' + a;\n              break;\n\n            case 207:\n            case 102:\n              a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n          }\n\n          return a + ';';\n\n        case 938:\n          if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n            case 105:\n              return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n            case 115:\n              return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n            default:\n              return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n          }\n          break;\n\n        case 973:\n        case 989:\n          if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n        case 931:\n        case 953:\n          if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n          break;\n\n        case 962:\n          if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n      }\n\n      return a;\n    }\n\n    function L(d, c) {\n      var e = d.indexOf(1 === c ? ':' : '{'),\n          h = d.substring(0, 3 !== c ? e : 10);\n      e = d.substring(e + 1, d.length - 1);\n      return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n    }\n\n    function ea(d, c) {\n      var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n      return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n    }\n\n    function H(d, c, e, h, a, m, b, v, n, q) {\n      for (var g = 0, x = c, w; g < A; ++g) {\n        switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n          case void 0:\n          case !1:\n          case !0:\n          case null:\n            break;\n\n          default:\n            x = w;\n        }\n      }\n\n      if (x !== c) return x;\n    }\n\n    function T(d) {\n      switch (d) {\n        case void 0:\n        case null:\n          A = S.length = 0;\n          break;\n\n        default:\n          if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n            T(d[c]);\n          } else Y = !!d | 0;\n      }\n\n      return T;\n    }\n\n    function U(d) {\n      d = d.prefix;\n      void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n      return U;\n    }\n\n    function B(d, c) {\n      var e = d;\n      33 > e.charCodeAt(0) && (e = e.trim());\n      V = e;\n      e = [V];\n\n      if (0 < A) {\n        var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n        void 0 !== h && 'string' === typeof h && (c = h);\n      }\n\n      var a = M(O, e, c, 0, 0);\n      0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n      V = '';\n      E = 0;\n      z = D = 1;\n      return a;\n    }\n\n    var ca = /^\\0+/g,\n        N = /[\\0\\r\\f]/g,\n        aa = /: */g,\n        ka = /zoo|gra/,\n        ma = /([,: ])(transform)/g,\n        ia = /,\\r+?/g,\n        F = /([\\t\\r\\n ])*\\f?&/g,\n        fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n        Q = /::(place)/g,\n        ha = /:(read-only)/g,\n        G = /[svh]\\w+-[tblr]{2}/,\n        da = /\\(\\s*(.*)\\s*\\)/g,\n        oa = /([\\s\\S]*?);/g,\n        ba = /-self|flex-/g,\n        na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n        la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n        ja = /([^-])(image-set\\()/,\n        z = 1,\n        D = 1,\n        E = 0,\n        w = 1,\n        O = [],\n        S = [],\n        A = 0,\n        R = null,\n        Y = 0,\n        V = '';\n    B.use = T;\n    B.set = U;\n    void 0 !== W && U(W);\n    return B;\n  }\n  /* harmony default export */\n\n\n  __webpack_exports__[\"a\"] = stylis_min;\n  /***/\n},\n/* 36 */\n\n/***/\nfunction (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n\n  var weakMemoize = function weakMemoize(func) {\n    // $FlowFixMe flow doesn't include all non-primitive types as allowed for weakmaps\n    var cache = new WeakMap();\n    return function (arg) {\n      if (cache.has(arg)) {\n        // $FlowFixMe\n        return cache.get(arg);\n      }\n\n      var ret = func(arg);\n      cache.set(arg, ret);\n      return ret;\n    };\n  };\n  /* unused harmony default export */\n\n\n  var _unused_webpack_default_export = weakMemoize;\n  /***/\n},\n/* 37 */\n\n/***/\nfunction (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n  /* harmony export (binding) */\n\n  __webpack_require__.d(__webpack_exports__, \"a\", function () {\n    return getRegisteredStyles;\n  });\n  /* harmony export (binding) */\n\n\n  __webpack_require__.d(__webpack_exports__, \"b\", function () {\n    return insertStyles;\n  });\n\n  var isBrowser = \"object\" !== 'undefined';\n\n  function getRegisteredStyles(registered, registeredStyles, classNames) {\n    var rawClassName = '';\n    classNames.split(' ').forEach(function (className) {\n      if (registered[className] !== undefined) {\n        registeredStyles.push(registered[className]);\n      } else {\n        rawClassName += className + \" \";\n      }\n    });\n    return rawClassName;\n  }\n\n  var insertStyles = function insertStyles(cache, serialized, isStringTag) {\n    var className = cache.key + \"-\" + serialized.name;\n\n    if ( // we only need to add the styles to the registered cache if the\n    // class name could be used further down\n    // the tree but if it's a string tag, we know it won't\n    // so we don't have to add it to registered cache.\n    // this improves memory usage since we can avoid storing the whole style string\n    (isStringTag === false || // we need to always store it if we're in compat mode and\n    // in node since emotion-server relies on whether a style is in\n    // the registered cache to know whether a style is global or not\n    // also, note that this check will be dead code eliminated in the browser\n    isBrowser === false && cache.compat !== undefined) && cache.registered[className] === undefined) {\n      cache.registered[className] = serialized.styles;\n    }\n\n    if (cache.inserted[serialized.name] === undefined) {\n      var current = serialized;\n\n      do {\n        var maybeStyles = cache.insert(\".\" + className, current, cache.sheet, true);\n        current = current.next;\n      } while (current !== undefined);\n    }\n  };\n  /***/\n\n},\n/* 38 */\n\n/***/\nfunction (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n  /* eslint-disable */\n  // murmurhash2 via https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js\n\n  function murmurhash2_32_gc(str) {\n    var l = str.length,\n        h = l ^ l,\n        i = 0,\n        k;\n\n    while (l >= 4) {\n      k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n      k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n      k ^= k >>> 24;\n      k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;\n      l -= 4;\n      ++i;\n    }\n\n    switch (l) {\n      case 3:\n        h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n      case 2:\n        h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n      case 1:\n        h ^= str.charCodeAt(i) & 0xff;\n        h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    }\n\n    h ^= h >>> 13;\n    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    h ^= h >>> 15;\n    return (h >>> 0).toString(36);\n  }\n  /* harmony default export */\n\n\n  __webpack_exports__[\"a\"] = murmurhash2_32_gc;\n  /***/\n},\n/* 39 */\n\n/***/\nfunction (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n\n  var unitlessKeys = {\n    animationIterationCount: 1,\n    borderImageOutset: 1,\n    borderImageSlice: 1,\n    borderImageWidth: 1,\n    boxFlex: 1,\n    boxFlexGroup: 1,\n    boxOrdinalGroup: 1,\n    columnCount: 1,\n    columns: 1,\n    flex: 1,\n    flexGrow: 1,\n    flexPositive: 1,\n    flexShrink: 1,\n    flexNegative: 1,\n    flexOrder: 1,\n    gridRow: 1,\n    gridRowEnd: 1,\n    gridRowSpan: 1,\n    gridRowStart: 1,\n    gridColumn: 1,\n    gridColumnEnd: 1,\n    gridColumnSpan: 1,\n    gridColumnStart: 1,\n    msGridRow: 1,\n    msGridRowSpan: 1,\n    msGridColumn: 1,\n    msGridColumnSpan: 1,\n    fontWeight: 1,\n    lineHeight: 1,\n    opacity: 1,\n    order: 1,\n    orphans: 1,\n    tabSize: 1,\n    widows: 1,\n    zIndex: 1,\n    zoom: 1,\n    WebkitLineClamp: 1,\n    // SVG-related properties\n    fillOpacity: 1,\n    floodOpacity: 1,\n    stopOpacity: 1,\n    strokeDasharray: 1,\n    strokeDashoffset: 1,\n    strokeMiterlimit: 1,\n    strokeOpacity: 1,\n    strokeWidth: 1\n  };\n  /* harmony default export */\n\n  __webpack_exports__[\"a\"] = unitlessKeys;\n  /***/\n},\n/* 40 */\n\n/***/\nfunction (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n\n  function memoize(fn) {\n    var cache = {};\n    return function (arg) {\n      if (cache[arg] === undefined) cache[arg] = fn(arg);\n      return cache[arg];\n    };\n  }\n  /* harmony default export */\n\n\n  __webpack_exports__[\"a\"] = memoize;\n  /***/\n},\n/* 41 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    var _interopRequireDefault = __webpack_require__(5);\n\n    exports.__esModule = true;\n    exports.default = void 0;\n\n    var _inheritsLoose2 = _interopRequireDefault(__webpack_require__(42));\n\n    var _react = __webpack_require__(1);\n\n    var _setDisplayName = _interopRequireDefault(__webpack_require__(18));\n\n    var _wrapDisplayName = _interopRequireDefault(__webpack_require__(19));\n\n    var shouldUpdate = function shouldUpdate(test) {\n      return function (BaseComponent) {\n        var factory = (0, _react.createFactory)(BaseComponent);\n\n        var ShouldUpdate =\n        /*#__PURE__*/\n        function (_Component) {\n          (0, _inheritsLoose2.default)(ShouldUpdate, _Component);\n\n          function ShouldUpdate() {\n            return _Component.apply(this, arguments) || this;\n          }\n\n          var _proto = ShouldUpdate.prototype;\n\n          _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n            return test(this.props, nextProps);\n          };\n\n          _proto.render = function render() {\n            return factory(this.props);\n          };\n\n          return ShouldUpdate;\n        }(_react.Component);\n\n        if (process.env.NODE_ENV !== 'production') {\n          return (0, _setDisplayName.default)((0, _wrapDisplayName.default)(BaseComponent, 'shouldUpdate'))(ShouldUpdate);\n        }\n\n        return ShouldUpdate;\n      };\n    };\n\n    var _default = shouldUpdate;\n    exports.default = _default;\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 42 */\n\n/***/\nfunction (module, exports) {\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  module.exports = _inheritsLoose;\n  /***/\n},\n/* 43 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  exports.__esModule = true;\n  exports.default = void 0;\n\n  var setStatic = function setStatic(key, value) {\n    return function (BaseComponent) {\n      /* eslint-disable no-param-reassign */\n      BaseComponent[key] = value;\n      /* eslint-enable no-param-reassign */\n\n      return BaseComponent;\n    };\n  };\n\n  var _default = setStatic;\n  exports.default = _default;\n  /***/\n},\n/* 44 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  exports.__esModule = true;\n  exports.default = void 0;\n\n  var getDisplayName = function getDisplayName(Component) {\n    if (typeof Component === 'string') {\n      return Component;\n    }\n\n    if (!Component) {\n      return undefined;\n    }\n\n    return Component.displayName || Component.name || 'Component';\n  };\n\n  var _default = getDisplayName;\n  exports.default = _default;\n  /***/\n},\n/* 45 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var _interopRequireDefault = __webpack_require__(5);\n\n  exports.__esModule = true;\n  exports.default = void 0;\n\n  var _shallowEqual = _interopRequireDefault(__webpack_require__(46));\n\n  var _default = _shallowEqual.default;\n  exports.default = _default;\n  /***/\n},\n/* 46 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @typechecks\n   * \n   */\n\n  /*eslint-disable no-self-compare */\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      // Added the nonzero y check to make Flow happy, but it is redundant\n      return x !== 0 || y !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /**\n   * Performs equality by iterating through keys on an object and returning false\n   * when any key has values which are not strictly equal between the arguments.\n   * Returns true when the values of all keys are strictly equal.\n   */\n\n\n  function shallowEqual(objA, objB) {\n    if (is(objA, objB)) {\n      return true;\n    }\n\n    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n      return false;\n    }\n\n    var keysA = Object.keys(objA);\n    var keysB = Object.keys(objB);\n\n    if (keysA.length !== keysB.length) {\n      return false;\n    } // Test for A's keys different from B.\n\n\n    for (var i = 0; i < keysA.length; i++) {\n      if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  module.exports = shallowEqual;\n  /***/\n},\n/* 47 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  exports.__esModule = true;\n  exports.default = void 0;\n\n  var pick = function pick(obj, keys) {\n    var result = {};\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (obj.hasOwnProperty(key)) {\n        result[key] = obj[key];\n      }\n    }\n\n    return result;\n  };\n\n  var _default = pick;\n  exports.default = _default;\n  /***/\n},\n/* 48 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys);\n        global.BeatLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n  50% {transform: scale(0.75);opacity: 0.2} \\n  100% {transform: scale(1);opacity: 1}\\n'], ['\\n  50% {transform: scale(0.75);opacity: 0.2} \\n  100% {transform: scale(1);opacity: 1}\\n']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      }\n\n      var beat = (0, _core.keyframes)(_templateObject);\n\n      var Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {\n            var _this$props = _this.props,\n                color = _this$props.color,\n                size = _this$props.size,\n                sizeUnit = _this$props.sizeUnit,\n                margin = _this$props.margin;\n            return (0, _core.css)('{display:inline-block;background-color:', color, ';width:', '' + size + sizeUnit, ';height:', '' + size + sizeUnit, ';margin:', margin, ';border-radius:100%;animation:', beat, ' 0.7s ', i % 2 ? '0s' : '0.35s', ' infinite linear;animation-fill-mode:both;}label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9CZWF0TG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpQmdCIiwiZmlsZSI6InNyYy9CZWF0TG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuY29uc3QgYmVhdCA9IGtleWZyYW1lc2BcbiAgNTAlIHt0cmFuc2Zvcm06IHNjYWxlKDAuNzUpO29wYWNpdHk6IDAuMn0gXG4gIDEwMCUge3RyYW5zZm9ybTogc2NhbGUoMSk7b3BhY2l0eTogMX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSBpID0+IHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgY29sb3IsIHNpemUsIHNpemVVbml0LCBtYXJnaW5cbiAgICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIG1hcmdpbjogJHttYXJnaW59O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICAgICAgICAgIGFuaW1hdGlvbjogJHtiZWF0fSAwLjdzICR7aSAlIDIgPyAnMHMnIDogJzAuMzVzJ30gaW5maW5pdGUgbGluZWFyO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICAgIHdyYXBwZXIgPSAoKSA9PiB0aGlzLnByb3BzLmNzcyB8fCAnJztcblxuICAgIHJlbmRlcigpIHtcbiAgICAgIGNvbnN0IHsgbG9hZGluZyB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGxvYWRpbmcgP1xuICAgICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDEpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDIpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDMpfSAvPlxuICAgICAgICA8L2Rpdj4gOiBudWxsO1xuICAgIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuICBzaXplVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgbWFyZ2luOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemU6IDE1LFxuICBzaXplVW5pdDogJ3B4JyxcbiAgbWFyZ2luOiAnMnB4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3NpemUnLCAnbWFyZ2luJywgJ3NpemVVbml0JywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */'));\n          }, _this.wrapper = function () {\n            return _this.props.css || '';\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.wrapper()\n            }, (0, _core.jsx)('div', {\n              css: this.style(1)\n            }), (0, _core.jsx)('div', {\n              css: this.style(2)\n            }), (0, _core.jsx)('div', {\n              css: this.style(3)\n            })) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        color: _propTypes2.default.string,\n        size: _propTypes2.default.number,\n        sizeUnit: _propTypes2.default.string,\n        margin: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        color: '#000000',\n        size: 15,\n        sizeUnit: 'px',\n        margin: '2px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'size', 'margin', 'sizeUnit', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 49 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys);\n        global.BounceLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n  0%, 100% {transform: scale(0)} \\n  50% {transform: scale(1.0)}\\n'], ['\\n  0%, 100% {transform: scale(0)} \\n  50% {transform: scale(1.0)}\\n']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      }\n\n      var bounce = (0, _core.keyframes)(_templateObject);\n\n      var Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {\n            var _this$props = _this.props,\n                size = _this$props.size,\n                color = _this$props.color,\n                sizeUnit = _this$props.sizeUnit;\n            return (0, _core.css)('{position:absolute;height:', '' + size + sizeUnit, ';width:', '' + size + sizeUnit, ';background-color:', color, ';border-radius:100%;opacity:0.6;top:0;left:0;animation-fill-mode:both;animation:', bounce, ' 2.1s ', i === 1 ? '1s' : '0s', ' infinite ease-in-out;}label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Cb3VuY2VMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWVnQiIsImZpbGUiOiJzcmMvQm91bmNlTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuY29uc3QgYm91bmNlID0ga2V5ZnJhbWVzYFxuICAwJSwgMTAwJSB7dHJhbnNmb3JtOiBzY2FsZSgwKX0gXG4gIDUwJSB7dHJhbnNmb3JtOiBzY2FsZSgxLjApfVxuYDtcblxuY2xhc3MgTG9hZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdHlsZSA9IGkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBjb2xvciwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIHdpZHRoOiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuNjsgICAgICAgIFxuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7Ym91bmNlfSAyLjFzICR7aSA9PT0gMSA/ICcxcycgOiAnMHMnfSBpbmZpbml0ZSBlYXNlLWluLW91dDtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICAgIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUsIHNpemVVbml0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICBjb25zdCB3cmFwcGVyID0gY3NzYHsgICAgICAgIFxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgfWA7XG5cbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake3dyYXBwZXJ9OyR7dGhpcy5wcm9wcy5jc3N9YCA6IHdyYXBwZXI7XG4gICAgfTtcblxuICAgIHJlbmRlcigpIHtcbiAgICAgIGNvbnN0IHsgbG9hZGluZyB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGxvYWRpbmcgP1xuICAgICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDEpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDIpfSAvPlxuICAgICAgICA8L2Rpdj4gOiBudWxsO1xuICAgIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuICBzaXplVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICBzaXplOiA2MCxcbiAgc2l6ZVVuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdzaXplJywgJ3NpemVVbml0JywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */'));\n          }, _this.wrapper = function () {\n            var _this$props2 = _this.props,\n                size = _this$props2.size,\n                sizeUnit = _this$props2.sizeUnit;\n            var wrapper = (0, _core.css)('{position:relative;width:', '' + size + sizeUnit, ';height:', '' + size + sizeUnit, ';}label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Cb3VuY2VMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdDeUIiLCJmaWxlIjoic3JjL0JvdW5jZUxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbmNvbnN0IGJvdW5jZSA9IGtleWZyYW1lc2BcbiAgMCUsIDEwMCUge3RyYW5zZm9ybTogc2NhbGUoMCl9IFxuICA1MCUge3RyYW5zZm9ybTogc2NhbGUoMS4wKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSBpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgY29sb3IsIHNpemVVbml0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgICAgICBvcGFjaXR5OiAwLjY7ICAgICAgICBcbiAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2JvdW5jZX0gMi4xcyAke2kgPT09IDEgPyAnMXMnIDogJzBzJ30gaW5maW5pdGUgZWFzZS1pbi1vdXQ7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgICB3cmFwcGVyID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7ICAgICAgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIHdpZHRoOiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgIH1gO1xuXG4gICAgICByZXR1cm4gdGhpcy5wcm9wcy5jc3MgPyBjc3NgJHt3cmFwcGVyfTske3RoaXMucHJvcHMuY3NzfWAgOiB3cmFwcGVyO1xuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBsb2FkaW5nID9cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMud3JhcHBlcigpfT5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSgxKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSgyKX0gLz5cbiAgICAgICAgPC9kaXY+IDogbnVsbDtcbiAgICB9XG59XG5cbkxvYWRlci5wcm9wVHlwZXMgPSB7XG4gIGxvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZTogUHJvcFR5cGVzLm51bWJlcixcbiAgc2l6ZVVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzczogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuTG9hZGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgbG9hZGluZzogdHJ1ZSxcbiAgY29sb3I6ICcjMDAwMDAwJyxcbiAgc2l6ZTogNjAsXG4gIHNpemVVbml0OiAncHgnLFxuICBjc3M6ICcnXG59O1xuXG5jb25zdCBDb21wb25lbnQgPSBvbmx5VXBkYXRlRm9yS2V5cyhbJ2xvYWRpbmcnLCAnY29sb3InLCAnc2l6ZScsICdzaXplVW5pdCcsICdjc3MnXSkoTG9hZGVyKTtcbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMgPSBMb2FkZXIuZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuIl19 */'));\n            return _this.props.css ? (0, _core.css)(wrapper, ';', _this.props.css, 'label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Cb3VuY2VMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNDaUMiLCJmaWxlIjoic3JjL0JvdW5jZUxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbmNvbnN0IGJvdW5jZSA9IGtleWZyYW1lc2BcbiAgMCUsIDEwMCUge3RyYW5zZm9ybTogc2NhbGUoMCl9IFxuICA1MCUge3RyYW5zZm9ybTogc2NhbGUoMS4wKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSBpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgY29sb3IsIHNpemVVbml0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgICAgICBvcGFjaXR5OiAwLjY7ICAgICAgICBcbiAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2JvdW5jZX0gMi4xcyAke2kgPT09IDEgPyAnMXMnIDogJzBzJ30gaW5maW5pdGUgZWFzZS1pbi1vdXQ7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgICB3cmFwcGVyID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7ICAgICAgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIHdpZHRoOiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgIH1gO1xuXG4gICAgICByZXR1cm4gdGhpcy5wcm9wcy5jc3MgPyBjc3NgJHt3cmFwcGVyfTske3RoaXMucHJvcHMuY3NzfWAgOiB3cmFwcGVyO1xuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBsb2FkaW5nID9cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMud3JhcHBlcigpfT5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSgxKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSgyKX0gLz5cbiAgICAgICAgPC9kaXY+IDogbnVsbDtcbiAgICB9XG59XG5cbkxvYWRlci5wcm9wVHlwZXMgPSB7XG4gIGxvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZTogUHJvcFR5cGVzLm51bWJlcixcbiAgc2l6ZVVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzczogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuTG9hZGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgbG9hZGluZzogdHJ1ZSxcbiAgY29sb3I6ICcjMDAwMDAwJyxcbiAgc2l6ZTogNjAsXG4gIHNpemVVbml0OiAncHgnLFxuICBjc3M6ICcnXG59O1xuXG5jb25zdCBDb21wb25lbnQgPSBvbmx5VXBkYXRlRm9yS2V5cyhbJ2xvYWRpbmcnLCAnY29sb3InLCAnc2l6ZScsICdzaXplVW5pdCcsICdjc3MnXSkoTG9hZGVyKTtcbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMgPSBMb2FkZXIuZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuIl19 */')) : wrapper;\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.wrapper()\n            }, (0, _core.jsx)('div', {\n              css: this.style(1)\n            }), (0, _core.jsx)('div', {\n              css: this.style(2)\n            })) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        color: _propTypes2.default.string,\n        size: _propTypes2.default.number,\n        sizeUnit: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        color: '#000000',\n        size: 60,\n        sizeUnit: 'px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'size', 'sizeUnit', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 50 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys);\n        global.CircleLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n  0% {transform: rotate(0deg)} \\n  50% {transform: rotate(180deg)}\\n  100% {transform: rotate(360deg)}\\n'], ['\\n  0% {transform: rotate(0deg)} \\n  50% {transform: rotate(180deg)}\\n  100% {transform: rotate(360deg)}\\n']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      }\n\n      var circle = (0, _core.keyframes)(_templateObject);\n\n      var Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {\n            var _this$props = _this.props,\n                size = _this$props.size,\n                color = _this$props.color,\n                sizeUnit = _this$props.sizeUnit;\n            return (0, _core.css)('{position:absolute;height:', '' + size * (1 - i / 10) + sizeUnit, ';width:', '' + size * (1 - i / 10) + sizeUnit, ';border:1px solid ', color, ';border-radius:100%;transition:2s;border-bottom:none;border-right:none;top:', i * 0.7 * 2.5, '%;left:', i * 0.35 * 2.5, '%;animation-fill-mode:\\'\\';animation:', circle, ' 1s ', i * 0.2, 's infinite linear;}label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9DaXJjbGVMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdCZ0IiLCJmaWxlIjoic3JjL0NpcmNsZUxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbmNvbnN0IGNpcmNsZSA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogcm90YXRlKDBkZWcpfSBcbiAgNTAlIHt0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpfVxuICAxMDAlIHt0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpfVxuYDtcblxuY2xhc3MgTG9hZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdHlsZSA9IGkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBjb2xvciwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemUgKiAoMSAtIChpIC8gMTApKX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZSAqICgxIC0gKGkgLyAxMCkpfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAke2NvbG9yfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAycztcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgICAgICAgICBib3JkZXItcmlnaHQ6IG5vbmU7XG4gICAgICAgICAgICB0b3A6ICR7KGkgKiAwLjcgKiAyLjUpfSU7XG4gICAgICAgICAgICBsZWZ0OiAkeyhpICogMC4zNSAqIDIuNSl9JTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6ICcnO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2NpcmNsZX0gMXMgJHtpICogMC4yfXMgaW5maW5pdGUgbGluZWFyO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgd3JhcHBlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGNvbnN0IHdyYXBwZXIgPSBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICB9YDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMCl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMSl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMil9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMyl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoNCl9IC8+XG4gICAgICAgIDwvZGl2PiA6IG51bGw7XG4gICAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIHNpemVVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemU6IDUwLFxuICBzaXplVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3NpemUnLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n          }, _this.wrapper = function () {\n            var _this$props2 = _this.props,\n                size = _this$props2.size,\n                sizeUnit = _this$props2.sizeUnit;\n            var wrapper = (0, _core.css)('{position:relative;width:', '' + size + sizeUnit, ';height:', '' + size + sizeUnit, ';}label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9DaXJjbGVMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1DeUIiLCJmaWxlIjoic3JjL0NpcmNsZUxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbmNvbnN0IGNpcmNsZSA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogcm90YXRlKDBkZWcpfSBcbiAgNTAlIHt0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpfVxuICAxMDAlIHt0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpfVxuYDtcblxuY2xhc3MgTG9hZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdHlsZSA9IGkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBjb2xvciwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemUgKiAoMSAtIChpIC8gMTApKX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZSAqICgxIC0gKGkgLyAxMCkpfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAke2NvbG9yfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAycztcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgICAgICAgICBib3JkZXItcmlnaHQ6IG5vbmU7XG4gICAgICAgICAgICB0b3A6ICR7KGkgKiAwLjcgKiAyLjUpfSU7XG4gICAgICAgICAgICBsZWZ0OiAkeyhpICogMC4zNSAqIDIuNSl9JTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6ICcnO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2NpcmNsZX0gMXMgJHtpICogMC4yfXMgaW5maW5pdGUgbGluZWFyO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgd3JhcHBlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGNvbnN0IHdyYXBwZXIgPSBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICB9YDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMCl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMSl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMil9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMyl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoNCl9IC8+XG4gICAgICAgIDwvZGl2PiA6IG51bGw7XG4gICAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIHNpemVVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemU6IDUwLFxuICBzaXplVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3NpemUnLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n            return _this.props.css ? (0, _core.css)(wrapper, ';', _this.props.css, 'label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9DaXJjbGVMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlDaUMiLCJmaWxlIjoic3JjL0NpcmNsZUxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbmNvbnN0IGNpcmNsZSA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogcm90YXRlKDBkZWcpfSBcbiAgNTAlIHt0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpfVxuICAxMDAlIHt0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpfVxuYDtcblxuY2xhc3MgTG9hZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdHlsZSA9IGkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBjb2xvciwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemUgKiAoMSAtIChpIC8gMTApKX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZSAqICgxIC0gKGkgLyAxMCkpfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAke2NvbG9yfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAycztcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgICAgICAgICBib3JkZXItcmlnaHQ6IG5vbmU7XG4gICAgICAgICAgICB0b3A6ICR7KGkgKiAwLjcgKiAyLjUpfSU7XG4gICAgICAgICAgICBsZWZ0OiAkeyhpICogMC4zNSAqIDIuNSl9JTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6ICcnO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2NpcmNsZX0gMXMgJHtpICogMC4yfXMgaW5maW5pdGUgbGluZWFyO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgd3JhcHBlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGNvbnN0IHdyYXBwZXIgPSBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICB9YDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMCl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMSl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMil9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMyl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoNCl9IC8+XG4gICAgICAgIDwvZGl2PiA6IG51bGw7XG4gICAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIHNpemVVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemU6IDUwLFxuICBzaXplVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3NpemUnLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */')) : wrapper;\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.wrapper()\n            }, (0, _core.jsx)('div', {\n              css: this.style(0)\n            }), (0, _core.jsx)('div', {\n              css: this.style(1)\n            }), (0, _core.jsx)('div', {\n              css: this.style(2)\n            }), (0, _core.jsx)('div', {\n              css: this.style(3)\n            }), (0, _core.jsx)('div', {\n              css: this.style(4)\n            })) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        color: _propTypes2.default.string,\n        size: _propTypes2.default.number,\n        sizeUnit: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        color: '#000000',\n        size: 50,\n        sizeUnit: 'px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'size', 'sizeUnit', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 51 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys);\n        global.ClipLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n  0% {transform: rotate(0deg) scale(1)} \\n  50% {transform: rotate(180deg) scale(0.8)}\\n  100% {transform: rotate(360deg) scale(1)}\\n'], ['\\n  0% {transform: rotate(0deg) scale(1)} \\n  50% {transform: rotate(180deg) scale(0.8)}\\n  100% {transform: rotate(360deg) scale(1)}\\n']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      } // This returns an animation\n\n\n      var clip = (0, _core.keyframes)(_templateObject);\n\n      var Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function () {\n            var _this$props = _this.props,\n                size = _this$props.size,\n                sizeUnit = _this$props.sizeUnit,\n                color = _this$props.color;\n            var style = (0, _core.css)('{background:transparent !important;width:', '' + size + sizeUnit, ';height:', '' + size + sizeUnit, ';border-radius:100%;border:2px solid;border-color:', color, ';border-bottom-color:transparent;display:inline-block;animation:', clip, ' 0.75s 0s infinite linear;animation-fill-mode:both;}label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9DbGlwTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtQnVCIiwiZmlsZSI6InNyYy9DbGlwTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuLy8gVGhpcyByZXR1cm5zIGFuIGFuaW1hdGlvblxuY29uc3QgY2xpcCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogcm90YXRlKDBkZWcpIHNjYWxlKDEpfSBcbiAgNTAlIHt0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpIHNjYWxlKDAuOCl9XG4gIDEwMCUge3RyYW5zZm9ybTogcm90YXRlKDM2MGRlZykgc2NhbGUoMSl9XG5gO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0eWxlID0gKCkgPT4ge1xuICAgICAgY29uc3Qge1xuICAgICAgICBzaXplLCBzaXplVW5pdCwgY29sb3JcbiAgICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICBjb25zdCBzdHlsZSA9IGNzc2B7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZDtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIGFuaW1hdGlvbjogJHtjbGlwfSAwLjc1cyAwcyBpbmZpbml0ZSBsaW5lYXI7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgICAgICB9YDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7c3R5bGV9OyR7dGhpcy5wcm9wcy5jc3N9YCA6IHN0eWxlO1xuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG4gICAgICByZXR1cm4gbG9hZGluZyA/IDxkaXYgY3NzPXt0aGlzLnN0eWxlKCl9IC8+IDogbnVsbDtcbiAgICB9XG59XG5cbkxvYWRlci5wcm9wVHlwZXMgPSB7XG4gIGxvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZTogUHJvcFR5cGVzLm51bWJlcixcbiAgc2l6ZVVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzczogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuTG9hZGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgbG9hZGluZzogdHJ1ZSxcbiAgY29sb3I6ICcjMDAwMDAwJyxcbiAgc2l6ZTogMzUsXG4gIHNpemVVbml0OiAncHgnLFxuICBjc3M6ICcnXG59O1xuXG5jb25zdCBDb21wb25lbnQgPSBvbmx5VXBkYXRlRm9yS2V5cyhbJ2xvYWRpbmcnLCAnY29sb3InLCAnc2l6ZScsICdzaXplVW5pdCcsICdjc3MnXSkoTG9hZGVyKTtcbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMgPSBMb2FkZXIuZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuIl19 */'));\n            return _this.props.css ? (0, _core.css)(style, ';', _this.props.css, 'label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9DbGlwTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnQ2lDIiwiZmlsZSI6InNyYy9DbGlwTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuLy8gVGhpcyByZXR1cm5zIGFuIGFuaW1hdGlvblxuY29uc3QgY2xpcCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogcm90YXRlKDBkZWcpIHNjYWxlKDEpfSBcbiAgNTAlIHt0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpIHNjYWxlKDAuOCl9XG4gIDEwMCUge3RyYW5zZm9ybTogcm90YXRlKDM2MGRlZykgc2NhbGUoMSl9XG5gO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0eWxlID0gKCkgPT4ge1xuICAgICAgY29uc3Qge1xuICAgICAgICBzaXplLCBzaXplVW5pdCwgY29sb3JcbiAgICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICBjb25zdCBzdHlsZSA9IGNzc2B7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZDtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIGFuaW1hdGlvbjogJHtjbGlwfSAwLjc1cyAwcyBpbmZpbml0ZSBsaW5lYXI7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgICAgICB9YDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7c3R5bGV9OyR7dGhpcy5wcm9wcy5jc3N9YCA6IHN0eWxlO1xuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG4gICAgICByZXR1cm4gbG9hZGluZyA/IDxkaXYgY3NzPXt0aGlzLnN0eWxlKCl9IC8+IDogbnVsbDtcbiAgICB9XG59XG5cbkxvYWRlci5wcm9wVHlwZXMgPSB7XG4gIGxvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZTogUHJvcFR5cGVzLm51bWJlcixcbiAgc2l6ZVVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzczogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuTG9hZGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgbG9hZGluZzogdHJ1ZSxcbiAgY29sb3I6ICcjMDAwMDAwJyxcbiAgc2l6ZTogMzUsXG4gIHNpemVVbml0OiAncHgnLFxuICBjc3M6ICcnXG59O1xuXG5jb25zdCBDb21wb25lbnQgPSBvbmx5VXBkYXRlRm9yS2V5cyhbJ2xvYWRpbmcnLCAnY29sb3InLCAnc2l6ZScsICdzaXplVW5pdCcsICdjc3MnXSkoTG9hZGVyKTtcbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMgPSBMb2FkZXIuZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuIl19 */')) : style;\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.style()\n            }) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        color: _propTypes2.default.string,\n        size: _propTypes2.default.number,\n        sizeUnit: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        color: '#000000',\n        size: 35,\n        sizeUnit: 'px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'size', 'sizeUnit', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 52 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys);\n        global.ClimbingBoxLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n  0% {transform:translate(0, -1em) rotate(-45deg)} \\n  5% {transform:translate(0, -1em) rotate(-50deg)}\\n  20% {transform:translate(1em, -2em) rotate(47deg)}\\n  25% {transform:translate(1em, -2em) rotate(45deg)}\\n  30% {transform:translate(1em, -2em) rotate(40deg)}\\n  45% {transform:translate(2em, -3em) rotate(137deg)}\\n  50% {transform:translate(2em, -3em) rotate(135deg)}\\n  55% {transform:translate(2em, -3em) rotate(130deg)}\\n  70% {transform:translate(3em, -4em) rotate(217deg)}\\n  75% {transform:translate(3em, -4em) rotate(220deg)}\\n  100% {transform:translate(0, -1em) rotate(-225deg)}\\n'], ['\\n  0% {transform:translate(0, -1em) rotate(-45deg)} \\n  5% {transform:translate(0, -1em) rotate(-50deg)}\\n  20% {transform:translate(1em, -2em) rotate(47deg)}\\n  25% {transform:translate(1em, -2em) rotate(45deg)}\\n  30% {transform:translate(1em, -2em) rotate(40deg)}\\n  45% {transform:translate(2em, -3em) rotate(137deg)}\\n  50% {transform:translate(2em, -3em) rotate(135deg)}\\n  55% {transform:translate(2em, -3em) rotate(130deg)}\\n  70% {transform:translate(3em, -4em) rotate(217deg)}\\n  75% {transform:translate(3em, -4em) rotate(220deg)}\\n  100% {transform:translate(0, -1em) rotate(-225deg)}\\n']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      }\n\n      var climbingBox = (0, _core.keyframes)(_templateObject);\n\n      var _ref = process.env.NODE_ENV === 'production' ? {\n        name: '1kttcze-container',\n        styles: '{position:relative;width:7.1em;height:7.1em;}label:container;'\n      } : {\n        name: '1kttcze-container',\n        styles: '{position:relative;width:7.1em;height:7.1em;}label:container;',\n        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9DbGltYmluZ0JveExvYWRlci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0V5QiIsImZpbGUiOiJzcmMvQ2xpbWJpbmdCb3hMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGtleWZyYW1lcywgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBvbmx5VXBkYXRlRm9yS2V5cyBmcm9tICdyZWNvbXBvc2Uvb25seVVwZGF0ZUZvcktleXMnO1xuXG5jb25zdCBjbGltYmluZ0JveCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMCwgLTFlbSkgcm90YXRlKC00NWRlZyl9IFxuICA1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTUwZGVnKX1cbiAgMjAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ3ZGVnKX1cbiAgMjUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ1ZGVnKX1cbiAgMzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQwZGVnKX1cbiAgNDUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDJlbSwgLTNlbSkgcm90YXRlKDEzN2RlZyl9XG4gIDUwJSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgyZW0sIC0zZW0pIHJvdGF0ZSgxMzVkZWcpfVxuICA1NSUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMmVtLCAtM2VtKSByb3RhdGUoMTMwZGVnKX1cbiAgNzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDNlbSwgLTRlbSkgcm90YXRlKDIxN2RlZyl9XG4gIDc1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgzZW0sIC00ZW0pIHJvdGF0ZSgyMjBkZWcpfVxuICAxMDAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDAsIC0xZW0pIHJvdGF0ZSgtMjI1ZGVnKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHsgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICBib3R0b206IC0wLjFlbTtcbiAgICAgICAgICAgIGhlaWdodDogMWVtO1xuICAgICAgICAgICAgd2lkdGg6IDFlbTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTUlO1xuICAgICAgICAgICAgYm9yZGVyOiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7Y2xpbWJpbmdCb3h9IDIuNXMgaW5maW5pdGUgY3ViaWMtYmV6aWVyKC43OSwgMCwgLjQ3LCAuOTcpO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgd3JhcHBlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IC0yLjdlbTtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMi43ZW07XG4gICAgICAgICAgICB3aWR0aDogNS40ZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDUuNGVtO1xuICAgICAgICAgICAgZm9udC1zaXplOiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuXG4gICAgaGlsbCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgY29sb3IgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgd2lkdGg6IDcuMWVtO1xuICAgICAgICAgICAgaGVpZ2h0OiA3LjFlbTtcbiAgICAgICAgICAgIHRvcDogMS43ZW07XG4gICAgICAgICAgICBsZWZ0OiAxLjdlbTtcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgY29udGFpbmVyID0gKCkgPT4ge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogNy4xZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDcuMWVtO1xuICAgICAgICB9YDtcblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake2NvbnRhaW5lcn07JHt0aGlzLnByb3BzLmNzc31gIDogY29udGFpbmVyO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy5jb250YWluZXIoKX0+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5oaWxsKCl9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+IDogbnVsbDtcbiAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIHNpemVVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemU6IDE1LFxuICBzaXplVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3NpemUnLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'\n      };\n\n      var Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref2;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref2, [this].concat(args))), _this), _this.style = function () {\n            var color = _this.props.color;\n            return (0, _core.css)('{position:absolute;left:0;bottom:-0.1em;height:1em;width:1em;background-color:transparent;border-radius:15%;border:0.25em solid ', color, ';transform:translate(0,-1em) rotate(-45deg);animation-fill-mode:both;animation:', climbingBox, ' 2.5s infinite cubic-bezier(.79,0,.47,.97);}label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9DbGltYmluZ0JveExvYWRlci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0JnQiIsImZpbGUiOiJzcmMvQ2xpbWJpbmdCb3hMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGtleWZyYW1lcywgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBvbmx5VXBkYXRlRm9yS2V5cyBmcm9tICdyZWNvbXBvc2Uvb25seVVwZGF0ZUZvcktleXMnO1xuXG5jb25zdCBjbGltYmluZ0JveCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMCwgLTFlbSkgcm90YXRlKC00NWRlZyl9IFxuICA1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTUwZGVnKX1cbiAgMjAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ3ZGVnKX1cbiAgMjUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ1ZGVnKX1cbiAgMzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQwZGVnKX1cbiAgNDUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDJlbSwgLTNlbSkgcm90YXRlKDEzN2RlZyl9XG4gIDUwJSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgyZW0sIC0zZW0pIHJvdGF0ZSgxMzVkZWcpfVxuICA1NSUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMmVtLCAtM2VtKSByb3RhdGUoMTMwZGVnKX1cbiAgNzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDNlbSwgLTRlbSkgcm90YXRlKDIxN2RlZyl9XG4gIDc1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgzZW0sIC00ZW0pIHJvdGF0ZSgyMjBkZWcpfVxuICAxMDAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDAsIC0xZW0pIHJvdGF0ZSgtMjI1ZGVnKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHsgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICBib3R0b206IC0wLjFlbTtcbiAgICAgICAgICAgIGhlaWdodDogMWVtO1xuICAgICAgICAgICAgd2lkdGg6IDFlbTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTUlO1xuICAgICAgICAgICAgYm9yZGVyOiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7Y2xpbWJpbmdCb3h9IDIuNXMgaW5maW5pdGUgY3ViaWMtYmV6aWVyKC43OSwgMCwgLjQ3LCAuOTcpO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgd3JhcHBlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IC0yLjdlbTtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMi43ZW07XG4gICAgICAgICAgICB3aWR0aDogNS40ZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDUuNGVtO1xuICAgICAgICAgICAgZm9udC1zaXplOiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuXG4gICAgaGlsbCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgY29sb3IgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgd2lkdGg6IDcuMWVtO1xuICAgICAgICAgICAgaGVpZ2h0OiA3LjFlbTtcbiAgICAgICAgICAgIHRvcDogMS43ZW07XG4gICAgICAgICAgICBsZWZ0OiAxLjdlbTtcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgY29udGFpbmVyID0gKCkgPT4ge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogNy4xZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDcuMWVtO1xuICAgICAgICB9YDtcblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake2NvbnRhaW5lcn07JHt0aGlzLnByb3BzLmNzc31gIDogY29udGFpbmVyO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy5jb250YWluZXIoKX0+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5oaWxsKCl9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+IDogbnVsbDtcbiAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIHNpemVVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemU6IDE1LFxuICBzaXplVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3NpemUnLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n          }, _this.wrapper = function () {\n            var _this$props = _this.props,\n                size = _this$props.size,\n                sizeUnit = _this$props.sizeUnit;\n            return (0, _core.css)('{position:absolute;top:50%;left:50%;margin-top:-2.7em;margin-left:-2.7em;width:5.4em;height:5.4em;font-size:', '' + size + sizeUnit, ';}label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9DbGltYmluZ0JveExvYWRlci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMENnQiIsImZpbGUiOiJzcmMvQ2xpbWJpbmdCb3hMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGtleWZyYW1lcywgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBvbmx5VXBkYXRlRm9yS2V5cyBmcm9tICdyZWNvbXBvc2Uvb25seVVwZGF0ZUZvcktleXMnO1xuXG5jb25zdCBjbGltYmluZ0JveCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMCwgLTFlbSkgcm90YXRlKC00NWRlZyl9IFxuICA1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTUwZGVnKX1cbiAgMjAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ3ZGVnKX1cbiAgMjUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ1ZGVnKX1cbiAgMzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQwZGVnKX1cbiAgNDUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDJlbSwgLTNlbSkgcm90YXRlKDEzN2RlZyl9XG4gIDUwJSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgyZW0sIC0zZW0pIHJvdGF0ZSgxMzVkZWcpfVxuICA1NSUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMmVtLCAtM2VtKSByb3RhdGUoMTMwZGVnKX1cbiAgNzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDNlbSwgLTRlbSkgcm90YXRlKDIxN2RlZyl9XG4gIDc1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgzZW0sIC00ZW0pIHJvdGF0ZSgyMjBkZWcpfVxuICAxMDAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDAsIC0xZW0pIHJvdGF0ZSgtMjI1ZGVnKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHsgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICBib3R0b206IC0wLjFlbTtcbiAgICAgICAgICAgIGhlaWdodDogMWVtO1xuICAgICAgICAgICAgd2lkdGg6IDFlbTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTUlO1xuICAgICAgICAgICAgYm9yZGVyOiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7Y2xpbWJpbmdCb3h9IDIuNXMgaW5maW5pdGUgY3ViaWMtYmV6aWVyKC43OSwgMCwgLjQ3LCAuOTcpO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgd3JhcHBlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IC0yLjdlbTtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMi43ZW07XG4gICAgICAgICAgICB3aWR0aDogNS40ZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDUuNGVtO1xuICAgICAgICAgICAgZm9udC1zaXplOiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuXG4gICAgaGlsbCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgY29sb3IgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgd2lkdGg6IDcuMWVtO1xuICAgICAgICAgICAgaGVpZ2h0OiA3LjFlbTtcbiAgICAgICAgICAgIHRvcDogMS43ZW07XG4gICAgICAgICAgICBsZWZ0OiAxLjdlbTtcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgY29udGFpbmVyID0gKCkgPT4ge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogNy4xZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDcuMWVtO1xuICAgICAgICB9YDtcblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake2NvbnRhaW5lcn07JHt0aGlzLnByb3BzLmNzc31gIDogY29udGFpbmVyO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy5jb250YWluZXIoKX0+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5oaWxsKCl9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+IDogbnVsbDtcbiAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIHNpemVVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemU6IDE1LFxuICBzaXplVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3NpemUnLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n          }, _this.hill = function () {\n            var color = _this.props.color;\n            return (0, _core.css)('{position:absolute;width:7.1em;height:7.1em;top:1.7em;left:1.7em;border-left:0.25em solid ', color, ';transform:rotate(45deg);}label:hill;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9DbGltYmluZ0JveExvYWRlci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMERnQiIsImZpbGUiOiJzcmMvQ2xpbWJpbmdCb3hMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGtleWZyYW1lcywgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBvbmx5VXBkYXRlRm9yS2V5cyBmcm9tICdyZWNvbXBvc2Uvb25seVVwZGF0ZUZvcktleXMnO1xuXG5jb25zdCBjbGltYmluZ0JveCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMCwgLTFlbSkgcm90YXRlKC00NWRlZyl9IFxuICA1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTUwZGVnKX1cbiAgMjAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ3ZGVnKX1cbiAgMjUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ1ZGVnKX1cbiAgMzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQwZGVnKX1cbiAgNDUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDJlbSwgLTNlbSkgcm90YXRlKDEzN2RlZyl9XG4gIDUwJSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgyZW0sIC0zZW0pIHJvdGF0ZSgxMzVkZWcpfVxuICA1NSUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMmVtLCAtM2VtKSByb3RhdGUoMTMwZGVnKX1cbiAgNzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDNlbSwgLTRlbSkgcm90YXRlKDIxN2RlZyl9XG4gIDc1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgzZW0sIC00ZW0pIHJvdGF0ZSgyMjBkZWcpfVxuICAxMDAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDAsIC0xZW0pIHJvdGF0ZSgtMjI1ZGVnKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHsgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICBib3R0b206IC0wLjFlbTtcbiAgICAgICAgICAgIGhlaWdodDogMWVtO1xuICAgICAgICAgICAgd2lkdGg6IDFlbTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTUlO1xuICAgICAgICAgICAgYm9yZGVyOiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7Y2xpbWJpbmdCb3h9IDIuNXMgaW5maW5pdGUgY3ViaWMtYmV6aWVyKC43OSwgMCwgLjQ3LCAuOTcpO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgd3JhcHBlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IC0yLjdlbTtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMi43ZW07XG4gICAgICAgICAgICB3aWR0aDogNS40ZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDUuNGVtO1xuICAgICAgICAgICAgZm9udC1zaXplOiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuXG4gICAgaGlsbCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgY29sb3IgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgd2lkdGg6IDcuMWVtO1xuICAgICAgICAgICAgaGVpZ2h0OiA3LjFlbTtcbiAgICAgICAgICAgIHRvcDogMS43ZW07XG4gICAgICAgICAgICBsZWZ0OiAxLjdlbTtcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgY29udGFpbmVyID0gKCkgPT4ge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogNy4xZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDcuMWVtO1xuICAgICAgICB9YDtcblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake2NvbnRhaW5lcn07JHt0aGlzLnByb3BzLmNzc31gIDogY29udGFpbmVyO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy5jb250YWluZXIoKX0+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5oaWxsKCl9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+IDogbnVsbDtcbiAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIHNpemVVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemU6IDE1LFxuICBzaXplVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3NpemUnLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n          }, _this.container = function () {\n            var container = _ref;\n            return _this.props.css ? (0, _core.css)(container, ';', _this.props.css, 'label:container;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9DbGltYmluZ0JveExvYWRlci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEUrQiIsImZpbGUiOiJzcmMvQ2xpbWJpbmdCb3hMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGtleWZyYW1lcywgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBvbmx5VXBkYXRlRm9yS2V5cyBmcm9tICdyZWNvbXBvc2Uvb25seVVwZGF0ZUZvcktleXMnO1xuXG5jb25zdCBjbGltYmluZ0JveCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMCwgLTFlbSkgcm90YXRlKC00NWRlZyl9IFxuICA1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTUwZGVnKX1cbiAgMjAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ3ZGVnKX1cbiAgMjUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQ1ZGVnKX1cbiAgMzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDFlbSwgLTJlbSkgcm90YXRlKDQwZGVnKX1cbiAgNDUlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDJlbSwgLTNlbSkgcm90YXRlKDEzN2RlZyl9XG4gIDUwJSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgyZW0sIC0zZW0pIHJvdGF0ZSgxMzVkZWcpfVxuICA1NSUge3RyYW5zZm9ybTp0cmFuc2xhdGUoMmVtLCAtM2VtKSByb3RhdGUoMTMwZGVnKX1cbiAgNzAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDNlbSwgLTRlbSkgcm90YXRlKDIxN2RlZyl9XG4gIDc1JSB7dHJhbnNmb3JtOnRyYW5zbGF0ZSgzZW0sIC00ZW0pIHJvdGF0ZSgyMjBkZWcpfVxuICAxMDAlIHt0cmFuc2Zvcm06dHJhbnNsYXRlKDAsIC0xZW0pIHJvdGF0ZSgtMjI1ZGVnKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHsgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICBib3R0b206IC0wLjFlbTtcbiAgICAgICAgICAgIGhlaWdodDogMWVtO1xuICAgICAgICAgICAgd2lkdGg6IDFlbTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTUlO1xuICAgICAgICAgICAgYm9yZGVyOiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtMWVtKSByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7Y2xpbWJpbmdCb3h9IDIuNXMgaW5maW5pdGUgY3ViaWMtYmV6aWVyKC43OSwgMCwgLjQ3LCAuOTcpO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgd3JhcHBlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IC0yLjdlbTtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMi43ZW07XG4gICAgICAgICAgICB3aWR0aDogNS40ZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDUuNGVtO1xuICAgICAgICAgICAgZm9udC1zaXplOiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuXG4gICAgaGlsbCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgY29sb3IgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgd2lkdGg6IDcuMWVtO1xuICAgICAgICAgICAgaGVpZ2h0OiA3LjFlbTtcbiAgICAgICAgICAgIHRvcDogMS43ZW07XG4gICAgICAgICAgICBsZWZ0OiAxLjdlbTtcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAwLjI1ZW0gc29saWQgJHtjb2xvcn07XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgY29udGFpbmVyID0gKCkgPT4ge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogNy4xZW07XG4gICAgICAgICAgICBoZWlnaHQ6IDcuMWVtO1xuICAgICAgICB9YDtcblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake2NvbnRhaW5lcn07JHt0aGlzLnByb3BzLmNzc31gIDogY29udGFpbmVyO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy5jb250YWluZXIoKX0+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5oaWxsKCl9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+IDogbnVsbDtcbiAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIHNpemVVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemU6IDE1LFxuICBzaXplVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3NpemUnLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */')) : container;\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.container()\n            }, (0, _core.jsx)('div', {\n              css: this.wrapper()\n            }, (0, _core.jsx)('div', {\n              css: this.style()\n            }), (0, _core.jsx)('div', {\n              css: this.hill()\n            }))) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        color: _propTypes2.default.string,\n        size: _propTypes2.default.number,\n        sizeUnit: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        color: '#000000',\n        size: 15,\n        sizeUnit: 'px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'size', 'sizeUnit', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 53 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys);\n        global.DotLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n  100% {transform: rotate(360deg)}\\n'], ['\\n  100% {transform: rotate(360deg)}\\n']),\n          _templateObject2 = _taggedTemplateLiteral(['\\n  0%, 100% {transform: scale(0)} \\n  50% {transform: scale(1.0)}\\n'], ['\\n  0%, 100% {transform: scale(0)} \\n  50% {transform: scale(1.0)}\\n']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      }\n\n      var rotate = (0, _core.keyframes)(_templateObject);\n      var bounce = (0, _core.keyframes)(_templateObject2);\n\n      var Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {\n            var _this$props = _this.props,\n                size = _this$props.size,\n                sizeUnit = _this$props.sizeUnit,\n                color = _this$props.color;\n            return (0, _core.css)('{position:absolute;top:', i % 2 ? '0' : 'auto', ';bottom:', i % 2 ? 'auto' : '0', ';height:', '' + size / 2 + sizeUnit, ';width:', '' + size / 2 + sizeUnit, ';background-color:', color, ';border-radius:100%;animation-fill-mode:forwards;animation:', bounce, ' 2s ', i === 2 ? '-1s' : '0s', ' infinite linear;}label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Eb3RMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1CZ0IiLCJmaWxlIjoic3JjL0RvdExvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbmNvbnN0IHJvdGF0ZSA9IGtleWZyYW1lc2BcbiAgMTAwJSB7dHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKX1cbmA7XG5cbmNvbnN0IGJvdW5jZSA9IGtleWZyYW1lc2BcbiAgMCUsIDEwMCUge3RyYW5zZm9ybTogc2NhbGUoMCl9IFxuICA1MCUge3RyYW5zZm9ybTogc2NhbGUoMS4wKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSBpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQsIGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogJHtpICUgMiA/ICcwJyA6ICdhdXRvJ307XG4gICAgICAgICAgICBib3R0b206ICR7aSAlIDIgPyAnYXV0bycgOiAnMCd9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemUgLyAyfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplIC8gMn0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7Ym91bmNlfSAycyAke2kgPT09IDIgPyAnLTFzJyA6ICcwcyd9IGluZmluaXRlIGxpbmVhcjtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICAgIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUsIHNpemVVbml0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICBjb25zdCB3cmFwcGVyID0gY3NzYHsgICAgICAgIFxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke3JvdGF0ZX0gMnMgMHMgaW5maW5pdGUgbGluZWFyO1xuICAgICAgICB9YDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMSl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMil9IC8+XG4gICAgICAgIDwvZGl2PiA6IG51bGw7XG4gICAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIHNpemVVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemU6IDYwLFxuICBzaXplVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3NpemUnLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n          }, _this.wrapper = function () {\n            var _this$props2 = _this.props,\n                size = _this$props2.size,\n                sizeUnit = _this$props2.sizeUnit;\n            var wrapper = (0, _core.css)('{position:relative;width:', '' + size + sizeUnit, ';height:', '' + size + sizeUnit, ';animation-fill-mode:forwards;animation:', rotate, ' 2s 0s infinite linear;}label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Eb3RMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1DeUIiLCJmaWxlIjoic3JjL0RvdExvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbmNvbnN0IHJvdGF0ZSA9IGtleWZyYW1lc2BcbiAgMTAwJSB7dHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKX1cbmA7XG5cbmNvbnN0IGJvdW5jZSA9IGtleWZyYW1lc2BcbiAgMCUsIDEwMCUge3RyYW5zZm9ybTogc2NhbGUoMCl9IFxuICA1MCUge3RyYW5zZm9ybTogc2NhbGUoMS4wKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSBpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQsIGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogJHtpICUgMiA/ICcwJyA6ICdhdXRvJ307XG4gICAgICAgICAgICBib3R0b206ICR7aSAlIDIgPyAnYXV0bycgOiAnMCd9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemUgLyAyfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplIC8gMn0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7Ym91bmNlfSAycyAke2kgPT09IDIgPyAnLTFzJyA6ICcwcyd9IGluZmluaXRlIGxpbmVhcjtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICAgIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUsIHNpemVVbml0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICBjb25zdCB3cmFwcGVyID0gY3NzYHsgICAgICAgIFxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke3JvdGF0ZX0gMnMgMHMgaW5maW5pdGUgbGluZWFyO1xuICAgICAgICB9YDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMSl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMil9IC8+XG4gICAgICAgIDwvZGl2PiA6IG51bGw7XG4gICAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIHNpemVVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemU6IDYwLFxuICBzaXplVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3NpemUnLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n            return _this.props.css ? (0, _core.css)(wrapper, ';', _this.props.css, 'label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Eb3RMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJDaUMiLCJmaWxlIjoic3JjL0RvdExvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbmNvbnN0IHJvdGF0ZSA9IGtleWZyYW1lc2BcbiAgMTAwJSB7dHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKX1cbmA7XG5cbmNvbnN0IGJvdW5jZSA9IGtleWZyYW1lc2BcbiAgMCUsIDEwMCUge3RyYW5zZm9ybTogc2NhbGUoMCl9IFxuICA1MCUge3RyYW5zZm9ybTogc2NhbGUoMS4wKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSBpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQsIGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogJHtpICUgMiA/ICcwJyA6ICdhdXRvJ307XG4gICAgICAgICAgICBib3R0b206ICR7aSAlIDIgPyAnYXV0bycgOiAnMCd9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemUgLyAyfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplIC8gMn0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7Ym91bmNlfSAycyAke2kgPT09IDIgPyAnLTFzJyA6ICcwcyd9IGluZmluaXRlIGxpbmVhcjtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICAgIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUsIHNpemVVbml0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICBjb25zdCB3cmFwcGVyID0gY3NzYHsgICAgICAgIFxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke3JvdGF0ZX0gMnMgMHMgaW5maW5pdGUgbGluZWFyO1xuICAgICAgICB9YDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMSl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMil9IC8+XG4gICAgICAgIDwvZGl2PiA6IG51bGw7XG4gICAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIHNpemVVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemU6IDYwLFxuICBzaXplVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3NpemUnLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */')) : wrapper;\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.wrapper()\n            }, (0, _core.jsx)('div', {\n              css: this.style(1)\n            }), (0, _core.jsx)('div', {\n              css: this.style(2)\n            })) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        color: _propTypes2.default.string,\n        size: _propTypes2.default.number,\n        sizeUnit: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        color: '#000000',\n        size: 60,\n        sizeUnit: 'px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'size', 'sizeUnit', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 54 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys);\n        global.FadeLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n  50% {opacity: 0.3} \\n  100% {opacity: 1}\\n'], ['\\n  50% {opacity: 0.3} \\n  100% {opacity: 1}\\n']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      }\n\n      var fade = (0, _core.keyframes)(_templateObject);\n\n      var Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {\n            var _this$props = _this.props,\n                height = _this$props.height,\n                width = _this$props.width,\n                margin = _this$props.margin,\n                color = _this$props.color,\n                radius = _this$props.radius,\n                widthUnit = _this$props.widthUnit,\n                heightUnit = _this$props.heightUnit,\n                radiusUnit = _this$props.radiusUnit;\n            return (0, _core.css)('{position:absolute;width:', '' + width + widthUnit, ';height:', '' + height + heightUnit, ';margin:', margin, ';background-color:', color, ';border-radius:', '' + radius + radiusUnit, ';transition:2s;animation-fill-mode:\\'both\\';animation:', fade, ' 1.2s ', i * 0.12, 's infinite ease-in-out;}label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9GYWRlTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpQmdCIiwiZmlsZSI6InNyYy9GYWRlTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuY29uc3QgZmFkZSA9IGtleWZyYW1lc2BcbiAgNTAlIHtvcGFjaXR5OiAwLjN9IFxuICAxMDAlIHtvcGFjaXR5OiAxfVxuYDtcblxuY2xhc3MgTG9hZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdHlsZSA9IGkgPT4ge1xuICAgICAgY29uc3Qge1xuICAgICAgICBoZWlnaHQsIHdpZHRoLCBtYXJnaW4sIGNvbG9yLCByYWRpdXMsIHdpZHRoVW5pdCwgaGVpZ2h0VW5pdCwgcmFkaXVzVW5pdFxuICAgICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7d2lkdGh9JHt3aWR0aFVuaXR9YH07XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7aGVpZ2h0fSR7aGVpZ2h0VW5pdH1gfTsgICAgICAgICAgICBcbiAgICAgICAgICAgIG1hcmdpbjogJHttYXJnaW59O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAke2Ake3JhZGl1c30ke3JhZGl1c1VuaXR9YH07XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAycztcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6ICdib3RoJztcbiAgICAgICAgICAgIGFuaW1hdGlvbjogJHtmYWRlfSAxLjJzICR7aSAqIDAuMTJ9cyBpbmZpbml0ZSBlYXNlLWluLW91dDtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICByYWRpdXMgPSAyMDtcbiAgcXVhcnRlciA9ICh0aGlzLnJhZGl1cyAvIDIpICsgKHRoaXMucmFkaXVzIC8gNS41KTtcblxuICB3cmFwcGVyID0gKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBmb250LXNpemU6IDA7XG4gICAgICAgICAgICB0b3A6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgICBsZWZ0OiAke3RoaXMucmFkaXVzfXB4O1xuICAgICAgICAgICAgd2lkdGg6ICR7dGhpcy5yYWRpdXMgKiAzfXB4O1xuICAgICAgICAgICAgaGVpZ2h0OiAke3RoaXMucmFkaXVzICogM31weDtcbiAgICAgICAgfWA7XG5cbiAgICByZXR1cm4gdGhpcy5wcm9wcy5jc3MgPyBjc3NgJHt3cmFwcGVyfTske3RoaXMucHJvcHMuY3NzfWAgOiB3cmFwcGVyO1xuICB9O1xuXG4gIGEgPSAoKSA9PiBjc3NgXG4gICAgICAgICAgJHt0aGlzLnN0eWxlKDEpfTtcbiAgICAgICAgICB0b3A6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgYDtcbiAgYiA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoMil9O1xuICAgICAgICAgIHRvcDogJHt0aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHt0aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgYDtcbiAgYyA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoMyl9O1xuICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICBsZWZ0OiAke3RoaXMucmFkaXVzfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgICAgICAgYDtcbiAgZCA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoNCl9O1xuICAgICAgICAgIHRvcDogJHstdGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIGxlZnQ6ICR7dGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgYDtcbiAgZSA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoNSl9O1xuICAgICAgICAgIHRvcDogJHstdGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgYDtcbiAgZiA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoNil9O1xuICAgICAgICAgIHRvcDogJHstdGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIGxlZnQ6ICR7LXRoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICBgO1xuICBnID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg3KX07XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIGxlZnQ6ICR7LXRoaXMucmFkaXVzfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgICAgICAgYDtcbiAgaCA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoOCl9O1xuICAgICAgICAgIHRvcDogJHt0aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgYDtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIGxvYWRpbmcgP1xuICAgICAgPGRpdiBjc3M9e3RoaXMud3JhcHBlcigpfT5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYSgpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5iKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmMoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuZCgpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5lKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmYoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuZygpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5oKCl9IC8+XG4gICAgICA8L2Rpdj4gOiBudWxsO1xuICB9XG59XG5cbkxvYWRlci5wcm9wVHlwZXMgPSB7XG4gIGxvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgaGVpZ2h0OiBQcm9wVHlwZXMubnVtYmVyLFxuICB3aWR0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgbWFyZ2luOiBQcm9wVHlwZXMuc3RyaW5nLFxuICByYWRpdXM6IFByb3BUeXBlcy5udW1iZXIsXG4gIGhlaWdodFVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHdpZHRoVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgcmFkaXVzVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICBoZWlnaHQ6IDE1LFxuICB3aWR0aDogNSxcbiAgbWFyZ2luOiAnMnB4JyxcbiAgcmFkaXVzOiAyLFxuICB3aWR0aFVuaXQ6ICdweCcsXG4gIGhlaWdodFVuaXQ6ICdweCcsXG4gIHJhZGl1c1VuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdoZWlnaHQnLCAnd2lkdGgnLCAnbWFyZ2luJywgJ3JhZGl1cycsICd3aWR0aFVuaXQnLCAnaGVpZ2h0VW5pdCcsICdyYWRpdXNVbml0JywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */'));\n          }, _this.radius = 20, _this.quarter = _this.radius / 2 + _this.radius / 5.5, _this.wrapper = function () {\n            var wrapper = (0, _core.css)('{position:relative;font-size:0;top:', _this.radius, 'px;left:', _this.radius, 'px;width:', _this.radius * 3, 'px;height:', _this.radius * 3, 'px;}label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9GYWRlTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQ3VCIiwiZmlsZSI6InNyYy9GYWRlTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuY29uc3QgZmFkZSA9IGtleWZyYW1lc2BcbiAgNTAlIHtvcGFjaXR5OiAwLjN9IFxuICAxMDAlIHtvcGFjaXR5OiAxfVxuYDtcblxuY2xhc3MgTG9hZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdHlsZSA9IGkgPT4ge1xuICAgICAgY29uc3Qge1xuICAgICAgICBoZWlnaHQsIHdpZHRoLCBtYXJnaW4sIGNvbG9yLCByYWRpdXMsIHdpZHRoVW5pdCwgaGVpZ2h0VW5pdCwgcmFkaXVzVW5pdFxuICAgICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7d2lkdGh9JHt3aWR0aFVuaXR9YH07XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7aGVpZ2h0fSR7aGVpZ2h0VW5pdH1gfTsgICAgICAgICAgICBcbiAgICAgICAgICAgIG1hcmdpbjogJHttYXJnaW59O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAke2Ake3JhZGl1c30ke3JhZGl1c1VuaXR9YH07XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAycztcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6ICdib3RoJztcbiAgICAgICAgICAgIGFuaW1hdGlvbjogJHtmYWRlfSAxLjJzICR7aSAqIDAuMTJ9cyBpbmZpbml0ZSBlYXNlLWluLW91dDtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICByYWRpdXMgPSAyMDtcbiAgcXVhcnRlciA9ICh0aGlzLnJhZGl1cyAvIDIpICsgKHRoaXMucmFkaXVzIC8gNS41KTtcblxuICB3cmFwcGVyID0gKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBmb250LXNpemU6IDA7XG4gICAgICAgICAgICB0b3A6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgICBsZWZ0OiAke3RoaXMucmFkaXVzfXB4O1xuICAgICAgICAgICAgd2lkdGg6ICR7dGhpcy5yYWRpdXMgKiAzfXB4O1xuICAgICAgICAgICAgaGVpZ2h0OiAke3RoaXMucmFkaXVzICogM31weDtcbiAgICAgICAgfWA7XG5cbiAgICByZXR1cm4gdGhpcy5wcm9wcy5jc3MgPyBjc3NgJHt3cmFwcGVyfTske3RoaXMucHJvcHMuY3NzfWAgOiB3cmFwcGVyO1xuICB9O1xuXG4gIGEgPSAoKSA9PiBjc3NgXG4gICAgICAgICAgJHt0aGlzLnN0eWxlKDEpfTtcbiAgICAgICAgICB0b3A6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgYDtcbiAgYiA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoMil9O1xuICAgICAgICAgIHRvcDogJHt0aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHt0aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgYDtcbiAgYyA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoMyl9O1xuICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICBsZWZ0OiAke3RoaXMucmFkaXVzfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgICAgICAgYDtcbiAgZCA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoNCl9O1xuICAgICAgICAgIHRvcDogJHstdGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIGxlZnQ6ICR7dGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgYDtcbiAgZSA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoNSl9O1xuICAgICAgICAgIHRvcDogJHstdGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgYDtcbiAgZiA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoNil9O1xuICAgICAgICAgIHRvcDogJHstdGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIGxlZnQ6ICR7LXRoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICBgO1xuICBnID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg3KX07XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIGxlZnQ6ICR7LXRoaXMucmFkaXVzfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgICAgICAgYDtcbiAgaCA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoOCl9O1xuICAgICAgICAgIHRvcDogJHt0aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgYDtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIGxvYWRpbmcgP1xuICAgICAgPGRpdiBjc3M9e3RoaXMud3JhcHBlcigpfT5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYSgpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5iKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmMoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuZCgpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5lKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmYoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuZygpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5oKCl9IC8+XG4gICAgICA8L2Rpdj4gOiBudWxsO1xuICB9XG59XG5cbkxvYWRlci5wcm9wVHlwZXMgPSB7XG4gIGxvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgaGVpZ2h0OiBQcm9wVHlwZXMubnVtYmVyLFxuICB3aWR0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgbWFyZ2luOiBQcm9wVHlwZXMuc3RyaW5nLFxuICByYWRpdXM6IFByb3BUeXBlcy5udW1iZXIsXG4gIGhlaWdodFVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHdpZHRoVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgcmFkaXVzVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICBoZWlnaHQ6IDE1LFxuICB3aWR0aDogNSxcbiAgbWFyZ2luOiAnMnB4JyxcbiAgcmFkaXVzOiAyLFxuICB3aWR0aFVuaXQ6ICdweCcsXG4gIGhlaWdodFVuaXQ6ICdweCcsXG4gIHJhZGl1c1VuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdoZWlnaHQnLCAnd2lkdGgnLCAnbWFyZ2luJywgJ3JhZGl1cycsICd3aWR0aFVuaXQnLCAnaGVpZ2h0VW5pdCcsICdyYWRpdXNVbml0JywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */'));\n            return _this.props.css ? (0, _core.css)(wrapper, ';', _this.props.css, 'label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9GYWRlTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyQytCIiwiZmlsZSI6InNyYy9GYWRlTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuY29uc3QgZmFkZSA9IGtleWZyYW1lc2BcbiAgNTAlIHtvcGFjaXR5OiAwLjN9IFxuICAxMDAlIHtvcGFjaXR5OiAxfVxuYDtcblxuY2xhc3MgTG9hZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdHlsZSA9IGkgPT4ge1xuICAgICAgY29uc3Qge1xuICAgICAgICBoZWlnaHQsIHdpZHRoLCBtYXJnaW4sIGNvbG9yLCByYWRpdXMsIHdpZHRoVW5pdCwgaGVpZ2h0VW5pdCwgcmFkaXVzVW5pdFxuICAgICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7d2lkdGh9JHt3aWR0aFVuaXR9YH07XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7aGVpZ2h0fSR7aGVpZ2h0VW5pdH1gfTsgICAgICAgICAgICBcbiAgICAgICAgICAgIG1hcmdpbjogJHttYXJnaW59O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAke2Ake3JhZGl1c30ke3JhZGl1c1VuaXR9YH07XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAycztcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6ICdib3RoJztcbiAgICAgICAgICAgIGFuaW1hdGlvbjogJHtmYWRlfSAxLjJzICR7aSAqIDAuMTJ9cyBpbmZpbml0ZSBlYXNlLWluLW91dDtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICByYWRpdXMgPSAyMDtcbiAgcXVhcnRlciA9ICh0aGlzLnJhZGl1cyAvIDIpICsgKHRoaXMucmFkaXVzIC8gNS41KTtcblxuICB3cmFwcGVyID0gKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBjc3NgeyAgICAgICAgXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBmb250LXNpemU6IDA7XG4gICAgICAgICAgICB0b3A6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgICBsZWZ0OiAke3RoaXMucmFkaXVzfXB4O1xuICAgICAgICAgICAgd2lkdGg6ICR7dGhpcy5yYWRpdXMgKiAzfXB4O1xuICAgICAgICAgICAgaGVpZ2h0OiAke3RoaXMucmFkaXVzICogM31weDtcbiAgICAgICAgfWA7XG5cbiAgICByZXR1cm4gdGhpcy5wcm9wcy5jc3MgPyBjc3NgJHt3cmFwcGVyfTske3RoaXMucHJvcHMuY3NzfWAgOiB3cmFwcGVyO1xuICB9O1xuXG4gIGEgPSAoKSA9PiBjc3NgXG4gICAgICAgICAgJHt0aGlzLnN0eWxlKDEpfTtcbiAgICAgICAgICB0b3A6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgYDtcbiAgYiA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoMil9O1xuICAgICAgICAgIHRvcDogJHt0aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHt0aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgYDtcbiAgYyA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoMyl9O1xuICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICBsZWZ0OiAke3RoaXMucmFkaXVzfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgICAgICAgYDtcbiAgZCA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoNCl9O1xuICAgICAgICAgIHRvcDogJHstdGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIGxlZnQ6ICR7dGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgYDtcbiAgZSA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoNSl9O1xuICAgICAgICAgIHRvcDogJHstdGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgYDtcbiAgZiA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoNil9O1xuICAgICAgICAgIHRvcDogJHstdGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIGxlZnQ6ICR7LXRoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICBgO1xuICBnID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg3KX07XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIGxlZnQ6ICR7LXRoaXMucmFkaXVzfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgICAgICAgYDtcbiAgaCA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoOCl9O1xuICAgICAgICAgIHRvcDogJHt0aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgYDtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIGxvYWRpbmcgP1xuICAgICAgPGRpdiBjc3M9e3RoaXMud3JhcHBlcigpfT5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYSgpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5iKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmMoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuZCgpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5lKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmYoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuZygpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5oKCl9IC8+XG4gICAgICA8L2Rpdj4gOiBudWxsO1xuICB9XG59XG5cbkxvYWRlci5wcm9wVHlwZXMgPSB7XG4gIGxvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgaGVpZ2h0OiBQcm9wVHlwZXMubnVtYmVyLFxuICB3aWR0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgbWFyZ2luOiBQcm9wVHlwZXMuc3RyaW5nLFxuICByYWRpdXM6IFByb3BUeXBlcy5udW1iZXIsXG4gIGhlaWdodFVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHdpZHRoVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgcmFkaXVzVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICBoZWlnaHQ6IDE1LFxuICB3aWR0aDogNSxcbiAgbWFyZ2luOiAnMnB4JyxcbiAgcmFkaXVzOiAyLFxuICB3aWR0aFVuaXQ6ICdweCcsXG4gIGhlaWdodFVuaXQ6ICdweCcsXG4gIHJhZGl1c1VuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdoZWlnaHQnLCAnd2lkdGgnLCAnbWFyZ2luJywgJ3JhZGl1cycsICd3aWR0aFVuaXQnLCAnaGVpZ2h0VW5pdCcsICdyYWRpdXNVbml0JywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */')) : wrapper;\n          }, _this.a = function () {\n            return (0, _core.css)(_this.style(1), ';top:', _this.radius, 'px;left:0;label:a;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9GYWRlTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4Q2UiLCJmaWxlIjoic3JjL0ZhZGVMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGtleWZyYW1lcywgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBvbmx5VXBkYXRlRm9yS2V5cyBmcm9tICdyZWNvbXBvc2Uvb25seVVwZGF0ZUZvcktleXMnO1xuXG5jb25zdCBmYWRlID0ga2V5ZnJhbWVzYFxuICA1MCUge29wYWNpdHk6IDAuM30gXG4gIDEwMCUge29wYWNpdHk6IDF9XG5gO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0eWxlID0gaSA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGhlaWdodCwgd2lkdGgsIG1hcmdpbiwgY29sb3IsIHJhZGl1cywgd2lkdGhVbml0LCBoZWlnaHRVbml0LCByYWRpdXNVbml0XG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHt3aWR0aH0ke3dpZHRoVW5pdH1gfTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtoZWlnaHR9JHtoZWlnaHRVbml0fWB9OyAgICAgICAgICAgIFxuICAgICAgICAgICAgbWFyZ2luOiAke21hcmdpbn07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7YCR7cmFkaXVzfSR7cmFkaXVzVW5pdH1gfTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IDJzO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogJ2JvdGgnO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2ZhZGV9IDEuMnMgJHtpICogMC4xMn1zIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gIHJhZGl1cyA9IDIwO1xuICBxdWFydGVyID0gKHRoaXMucmFkaXVzIC8gMikgKyAodGhpcy5yYWRpdXMgLyA1LjUpO1xuXG4gIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7ICAgICAgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMDtcbiAgICAgICAgICAgIHRvcDogJHt0aGlzLnJhZGl1c31weDtcbiAgICAgICAgICAgIGxlZnQ6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgICB3aWR0aDogJHt0aGlzLnJhZGl1cyAqIDN9cHg7XG4gICAgICAgICAgICBoZWlnaHQ6ICR7dGhpcy5yYWRpdXMgKiAzfXB4O1xuICAgICAgICB9YDtcblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake3dyYXBwZXJ9OyR7dGhpcy5wcm9wcy5jc3N9YCA6IHdyYXBwZXI7XG4gIH07XG5cbiAgYSA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoMSl9O1xuICAgICAgICAgIHRvcDogJHt0aGlzLnJhZGl1c31weDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBgO1xuICBiID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSgyKX07XG4gICAgICAgICAgdG9wOiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICBsZWZ0OiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICBgO1xuICBjID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSgzKX07XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIGxlZnQ6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICBgO1xuICBkID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg0KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHt0aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICBgO1xuICBlID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg1KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnJhZGl1c31weDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBgO1xuICBmID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg2KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAgIGA7XG4gIGcgPSAoKSA9PiBjc3NgXG4gICAgICAgICAgJHt0aGlzLnN0eWxlKDcpfTtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICBgO1xuICBoID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg4KX07XG4gICAgICAgICAgdG9wOiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICBsZWZ0OiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICBgO1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5hKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmIoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYygpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5kKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmUoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuZigpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5nKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmgoKX0gLz5cbiAgICAgIDwvZGl2PiA6IG51bGw7XG4gIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBoZWlnaHQ6IFByb3BUeXBlcy5udW1iZXIsXG4gIHdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxuICBtYXJnaW46IFByb3BUeXBlcy5zdHJpbmcsXG4gIHJhZGl1czogUHJvcFR5cGVzLm51bWJlcixcbiAgaGVpZ2h0VW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgd2lkdGhVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICByYWRpdXNVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIGhlaWdodDogMTUsXG4gIHdpZHRoOiA1LFxuICBtYXJnaW46ICcycHgnLFxuICByYWRpdXM6IDIsXG4gIHdpZHRoVW5pdDogJ3B4JyxcbiAgaGVpZ2h0VW5pdDogJ3B4JyxcbiAgcmFkaXVzVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ2hlaWdodCcsICd3aWR0aCcsICdtYXJnaW4nLCAncmFkaXVzJywgJ3dpZHRoVW5pdCcsICdoZWlnaHRVbml0JywgJ3JhZGl1c1VuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n          }, _this.b = function () {\n            return (0, _core.css)(_this.style(2), ';top:', _this.quarter, 'px;left:', _this.quarter, 'px;transform:rotate(-45deg);label:b;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9GYWRlTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtRGUiLCJmaWxlIjoic3JjL0ZhZGVMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGtleWZyYW1lcywgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBvbmx5VXBkYXRlRm9yS2V5cyBmcm9tICdyZWNvbXBvc2Uvb25seVVwZGF0ZUZvcktleXMnO1xuXG5jb25zdCBmYWRlID0ga2V5ZnJhbWVzYFxuICA1MCUge29wYWNpdHk6IDAuM30gXG4gIDEwMCUge29wYWNpdHk6IDF9XG5gO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0eWxlID0gaSA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGhlaWdodCwgd2lkdGgsIG1hcmdpbiwgY29sb3IsIHJhZGl1cywgd2lkdGhVbml0LCBoZWlnaHRVbml0LCByYWRpdXNVbml0XG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHt3aWR0aH0ke3dpZHRoVW5pdH1gfTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtoZWlnaHR9JHtoZWlnaHRVbml0fWB9OyAgICAgICAgICAgIFxuICAgICAgICAgICAgbWFyZ2luOiAke21hcmdpbn07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7YCR7cmFkaXVzfSR7cmFkaXVzVW5pdH1gfTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IDJzO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogJ2JvdGgnO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2ZhZGV9IDEuMnMgJHtpICogMC4xMn1zIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gIHJhZGl1cyA9IDIwO1xuICBxdWFydGVyID0gKHRoaXMucmFkaXVzIC8gMikgKyAodGhpcy5yYWRpdXMgLyA1LjUpO1xuXG4gIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7ICAgICAgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMDtcbiAgICAgICAgICAgIHRvcDogJHt0aGlzLnJhZGl1c31weDtcbiAgICAgICAgICAgIGxlZnQ6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgICB3aWR0aDogJHt0aGlzLnJhZGl1cyAqIDN9cHg7XG4gICAgICAgICAgICBoZWlnaHQ6ICR7dGhpcy5yYWRpdXMgKiAzfXB4O1xuICAgICAgICB9YDtcblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake3dyYXBwZXJ9OyR7dGhpcy5wcm9wcy5jc3N9YCA6IHdyYXBwZXI7XG4gIH07XG5cbiAgYSA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoMSl9O1xuICAgICAgICAgIHRvcDogJHt0aGlzLnJhZGl1c31weDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBgO1xuICBiID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSgyKX07XG4gICAgICAgICAgdG9wOiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICBsZWZ0OiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICBgO1xuICBjID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSgzKX07XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIGxlZnQ6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICBgO1xuICBkID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg0KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHt0aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICBgO1xuICBlID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg1KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnJhZGl1c31weDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBgO1xuICBmID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg2KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAgIGA7XG4gIGcgPSAoKSA9PiBjc3NgXG4gICAgICAgICAgJHt0aGlzLnN0eWxlKDcpfTtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICBgO1xuICBoID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg4KX07XG4gICAgICAgICAgdG9wOiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICBsZWZ0OiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICBgO1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5hKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmIoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYygpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5kKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmUoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuZigpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5nKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmgoKX0gLz5cbiAgICAgIDwvZGl2PiA6IG51bGw7XG4gIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBoZWlnaHQ6IFByb3BUeXBlcy5udW1iZXIsXG4gIHdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxuICBtYXJnaW46IFByb3BUeXBlcy5zdHJpbmcsXG4gIHJhZGl1czogUHJvcFR5cGVzLm51bWJlcixcbiAgaGVpZ2h0VW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgd2lkdGhVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICByYWRpdXNVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIGhlaWdodDogMTUsXG4gIHdpZHRoOiA1LFxuICBtYXJnaW46ICcycHgnLFxuICByYWRpdXM6IDIsXG4gIHdpZHRoVW5pdDogJ3B4JyxcbiAgaGVpZ2h0VW5pdDogJ3B4JyxcbiAgcmFkaXVzVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ2hlaWdodCcsICd3aWR0aCcsICdtYXJnaW4nLCAncmFkaXVzJywgJ3dpZHRoVW5pdCcsICdoZWlnaHRVbml0JywgJ3JhZGl1c1VuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n          }, _this.c = function () {\n            return (0, _core.css)(_this.style(3), ';top:0;left:', _this.radius, 'px;transform:rotate(90deg);label:c;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9GYWRlTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5RGUiLCJmaWxlIjoic3JjL0ZhZGVMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGtleWZyYW1lcywgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBvbmx5VXBkYXRlRm9yS2V5cyBmcm9tICdyZWNvbXBvc2Uvb25seVVwZGF0ZUZvcktleXMnO1xuXG5jb25zdCBmYWRlID0ga2V5ZnJhbWVzYFxuICA1MCUge29wYWNpdHk6IDAuM30gXG4gIDEwMCUge29wYWNpdHk6IDF9XG5gO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0eWxlID0gaSA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGhlaWdodCwgd2lkdGgsIG1hcmdpbiwgY29sb3IsIHJhZGl1cywgd2lkdGhVbml0LCBoZWlnaHRVbml0LCByYWRpdXNVbml0XG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHt3aWR0aH0ke3dpZHRoVW5pdH1gfTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtoZWlnaHR9JHtoZWlnaHRVbml0fWB9OyAgICAgICAgICAgIFxuICAgICAgICAgICAgbWFyZ2luOiAke21hcmdpbn07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7YCR7cmFkaXVzfSR7cmFkaXVzVW5pdH1gfTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IDJzO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogJ2JvdGgnO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2ZhZGV9IDEuMnMgJHtpICogMC4xMn1zIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gIHJhZGl1cyA9IDIwO1xuICBxdWFydGVyID0gKHRoaXMucmFkaXVzIC8gMikgKyAodGhpcy5yYWRpdXMgLyA1LjUpO1xuXG4gIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7ICAgICAgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMDtcbiAgICAgICAgICAgIHRvcDogJHt0aGlzLnJhZGl1c31weDtcbiAgICAgICAgICAgIGxlZnQ6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgICB3aWR0aDogJHt0aGlzLnJhZGl1cyAqIDN9cHg7XG4gICAgICAgICAgICBoZWlnaHQ6ICR7dGhpcy5yYWRpdXMgKiAzfXB4O1xuICAgICAgICB9YDtcblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake3dyYXBwZXJ9OyR7dGhpcy5wcm9wcy5jc3N9YCA6IHdyYXBwZXI7XG4gIH07XG5cbiAgYSA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoMSl9O1xuICAgICAgICAgIHRvcDogJHt0aGlzLnJhZGl1c31weDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBgO1xuICBiID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSgyKX07XG4gICAgICAgICAgdG9wOiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICBsZWZ0OiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICBgO1xuICBjID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSgzKX07XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIGxlZnQ6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICBgO1xuICBkID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg0KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHt0aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICBgO1xuICBlID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg1KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnJhZGl1c31weDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBgO1xuICBmID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg2KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAgIGA7XG4gIGcgPSAoKSA9PiBjc3NgXG4gICAgICAgICAgJHt0aGlzLnN0eWxlKDcpfTtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICBgO1xuICBoID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg4KX07XG4gICAgICAgICAgdG9wOiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICBsZWZ0OiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICBgO1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5hKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmIoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYygpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5kKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmUoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuZigpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5nKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmgoKX0gLz5cbiAgICAgIDwvZGl2PiA6IG51bGw7XG4gIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBoZWlnaHQ6IFByb3BUeXBlcy5udW1iZXIsXG4gIHdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxuICBtYXJnaW46IFByb3BUeXBlcy5zdHJpbmcsXG4gIHJhZGl1czogUHJvcFR5cGVzLm51bWJlcixcbiAgaGVpZ2h0VW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgd2lkdGhVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICByYWRpdXNVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIGhlaWdodDogMTUsXG4gIHdpZHRoOiA1LFxuICBtYXJnaW46ICcycHgnLFxuICByYWRpdXM6IDIsXG4gIHdpZHRoVW5pdDogJ3B4JyxcbiAgaGVpZ2h0VW5pdDogJ3B4JyxcbiAgcmFkaXVzVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ2hlaWdodCcsICd3aWR0aCcsICdtYXJnaW4nLCAncmFkaXVzJywgJ3dpZHRoVW5pdCcsICdoZWlnaHRVbml0JywgJ3JhZGl1c1VuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n          }, _this.d = function () {\n            return (0, _core.css)(_this.style(4), ';top:', -_this.quarter, 'px;left:', _this.quarter, 'px;transform:rotate(45deg);label:d;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9GYWRlTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErRGUiLCJmaWxlIjoic3JjL0ZhZGVMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGtleWZyYW1lcywgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBvbmx5VXBkYXRlRm9yS2V5cyBmcm9tICdyZWNvbXBvc2Uvb25seVVwZGF0ZUZvcktleXMnO1xuXG5jb25zdCBmYWRlID0ga2V5ZnJhbWVzYFxuICA1MCUge29wYWNpdHk6IDAuM30gXG4gIDEwMCUge29wYWNpdHk6IDF9XG5gO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0eWxlID0gaSA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGhlaWdodCwgd2lkdGgsIG1hcmdpbiwgY29sb3IsIHJhZGl1cywgd2lkdGhVbml0LCBoZWlnaHRVbml0LCByYWRpdXNVbml0XG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHt3aWR0aH0ke3dpZHRoVW5pdH1gfTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtoZWlnaHR9JHtoZWlnaHRVbml0fWB9OyAgICAgICAgICAgIFxuICAgICAgICAgICAgbWFyZ2luOiAke21hcmdpbn07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7YCR7cmFkaXVzfSR7cmFkaXVzVW5pdH1gfTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IDJzO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogJ2JvdGgnO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2ZhZGV9IDEuMnMgJHtpICogMC4xMn1zIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gIHJhZGl1cyA9IDIwO1xuICBxdWFydGVyID0gKHRoaXMucmFkaXVzIC8gMikgKyAodGhpcy5yYWRpdXMgLyA1LjUpO1xuXG4gIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7ICAgICAgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMDtcbiAgICAgICAgICAgIHRvcDogJHt0aGlzLnJhZGl1c31weDtcbiAgICAgICAgICAgIGxlZnQ6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgICB3aWR0aDogJHt0aGlzLnJhZGl1cyAqIDN9cHg7XG4gICAgICAgICAgICBoZWlnaHQ6ICR7dGhpcy5yYWRpdXMgKiAzfXB4O1xuICAgICAgICB9YDtcblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake3dyYXBwZXJ9OyR7dGhpcy5wcm9wcy5jc3N9YCA6IHdyYXBwZXI7XG4gIH07XG5cbiAgYSA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoMSl9O1xuICAgICAgICAgIHRvcDogJHt0aGlzLnJhZGl1c31weDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBgO1xuICBiID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSgyKX07XG4gICAgICAgICAgdG9wOiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICBsZWZ0OiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICBgO1xuICBjID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSgzKX07XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIGxlZnQ6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICBgO1xuICBkID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg0KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHt0aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICBgO1xuICBlID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg1KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnJhZGl1c31weDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBgO1xuICBmID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg2KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAgIGA7XG4gIGcgPSAoKSA9PiBjc3NgXG4gICAgICAgICAgJHt0aGlzLnN0eWxlKDcpfTtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICBgO1xuICBoID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg4KX07XG4gICAgICAgICAgdG9wOiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICBsZWZ0OiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICBgO1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5hKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmIoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYygpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5kKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmUoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuZigpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5nKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmgoKX0gLz5cbiAgICAgIDwvZGl2PiA6IG51bGw7XG4gIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBoZWlnaHQ6IFByb3BUeXBlcy5udW1iZXIsXG4gIHdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxuICBtYXJnaW46IFByb3BUeXBlcy5zdHJpbmcsXG4gIHJhZGl1czogUHJvcFR5cGVzLm51bWJlcixcbiAgaGVpZ2h0VW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgd2lkdGhVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICByYWRpdXNVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIGhlaWdodDogMTUsXG4gIHdpZHRoOiA1LFxuICBtYXJnaW46ICcycHgnLFxuICByYWRpdXM6IDIsXG4gIHdpZHRoVW5pdDogJ3B4JyxcbiAgaGVpZ2h0VW5pdDogJ3B4JyxcbiAgcmFkaXVzVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ2hlaWdodCcsICd3aWR0aCcsICdtYXJnaW4nLCAncmFkaXVzJywgJ3dpZHRoVW5pdCcsICdoZWlnaHRVbml0JywgJ3JhZGl1c1VuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n          }, _this.e = function () {\n            return (0, _core.css)(_this.style(5), ';top:', -_this.radius, 'px;left:0;label:e;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9GYWRlTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxRWUiLCJmaWxlIjoic3JjL0ZhZGVMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGtleWZyYW1lcywgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBvbmx5VXBkYXRlRm9yS2V5cyBmcm9tICdyZWNvbXBvc2Uvb25seVVwZGF0ZUZvcktleXMnO1xuXG5jb25zdCBmYWRlID0ga2V5ZnJhbWVzYFxuICA1MCUge29wYWNpdHk6IDAuM30gXG4gIDEwMCUge29wYWNpdHk6IDF9XG5gO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0eWxlID0gaSA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGhlaWdodCwgd2lkdGgsIG1hcmdpbiwgY29sb3IsIHJhZGl1cywgd2lkdGhVbml0LCBoZWlnaHRVbml0LCByYWRpdXNVbml0XG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHt3aWR0aH0ke3dpZHRoVW5pdH1gfTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtoZWlnaHR9JHtoZWlnaHRVbml0fWB9OyAgICAgICAgICAgIFxuICAgICAgICAgICAgbWFyZ2luOiAke21hcmdpbn07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7YCR7cmFkaXVzfSR7cmFkaXVzVW5pdH1gfTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IDJzO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogJ2JvdGgnO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2ZhZGV9IDEuMnMgJHtpICogMC4xMn1zIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gIHJhZGl1cyA9IDIwO1xuICBxdWFydGVyID0gKHRoaXMucmFkaXVzIC8gMikgKyAodGhpcy5yYWRpdXMgLyA1LjUpO1xuXG4gIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7ICAgICAgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMDtcbiAgICAgICAgICAgIHRvcDogJHt0aGlzLnJhZGl1c31weDtcbiAgICAgICAgICAgIGxlZnQ6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgICB3aWR0aDogJHt0aGlzLnJhZGl1cyAqIDN9cHg7XG4gICAgICAgICAgICBoZWlnaHQ6ICR7dGhpcy5yYWRpdXMgKiAzfXB4O1xuICAgICAgICB9YDtcblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake3dyYXBwZXJ9OyR7dGhpcy5wcm9wcy5jc3N9YCA6IHdyYXBwZXI7XG4gIH07XG5cbiAgYSA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoMSl9O1xuICAgICAgICAgIHRvcDogJHt0aGlzLnJhZGl1c31weDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBgO1xuICBiID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSgyKX07XG4gICAgICAgICAgdG9wOiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICBsZWZ0OiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICBgO1xuICBjID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSgzKX07XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIGxlZnQ6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICBgO1xuICBkID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg0KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHt0aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICBgO1xuICBlID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg1KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnJhZGl1c31weDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBgO1xuICBmID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg2KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAgIGA7XG4gIGcgPSAoKSA9PiBjc3NgXG4gICAgICAgICAgJHt0aGlzLnN0eWxlKDcpfTtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICBgO1xuICBoID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg4KX07XG4gICAgICAgICAgdG9wOiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICBsZWZ0OiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICBgO1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5hKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmIoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYygpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5kKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmUoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuZigpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5nKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmgoKX0gLz5cbiAgICAgIDwvZGl2PiA6IG51bGw7XG4gIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBoZWlnaHQ6IFByb3BUeXBlcy5udW1iZXIsXG4gIHdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxuICBtYXJnaW46IFByb3BUeXBlcy5zdHJpbmcsXG4gIHJhZGl1czogUHJvcFR5cGVzLm51bWJlcixcbiAgaGVpZ2h0VW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgd2lkdGhVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICByYWRpdXNVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIGhlaWdodDogMTUsXG4gIHdpZHRoOiA1LFxuICBtYXJnaW46ICcycHgnLFxuICByYWRpdXM6IDIsXG4gIHdpZHRoVW5pdDogJ3B4JyxcbiAgaGVpZ2h0VW5pdDogJ3B4JyxcbiAgcmFkaXVzVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ2hlaWdodCcsICd3aWR0aCcsICdtYXJnaW4nLCAncmFkaXVzJywgJ3dpZHRoVW5pdCcsICdoZWlnaHRVbml0JywgJ3JhZGl1c1VuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n          }, _this.f = function () {\n            return (0, _core.css)(_this.style(6), ';top:', -_this.quarter, 'px;left:', -_this.quarter, 'px;transform:rotate(-45deg);label:f;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9GYWRlTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwRWUiLCJmaWxlIjoic3JjL0ZhZGVMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGtleWZyYW1lcywgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBvbmx5VXBkYXRlRm9yS2V5cyBmcm9tICdyZWNvbXBvc2Uvb25seVVwZGF0ZUZvcktleXMnO1xuXG5jb25zdCBmYWRlID0ga2V5ZnJhbWVzYFxuICA1MCUge29wYWNpdHk6IDAuM30gXG4gIDEwMCUge29wYWNpdHk6IDF9XG5gO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0eWxlID0gaSA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGhlaWdodCwgd2lkdGgsIG1hcmdpbiwgY29sb3IsIHJhZGl1cywgd2lkdGhVbml0LCBoZWlnaHRVbml0LCByYWRpdXNVbml0XG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHt3aWR0aH0ke3dpZHRoVW5pdH1gfTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtoZWlnaHR9JHtoZWlnaHRVbml0fWB9OyAgICAgICAgICAgIFxuICAgICAgICAgICAgbWFyZ2luOiAke21hcmdpbn07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7YCR7cmFkaXVzfSR7cmFkaXVzVW5pdH1gfTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IDJzO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogJ2JvdGgnO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2ZhZGV9IDEuMnMgJHtpICogMC4xMn1zIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gIHJhZGl1cyA9IDIwO1xuICBxdWFydGVyID0gKHRoaXMucmFkaXVzIC8gMikgKyAodGhpcy5yYWRpdXMgLyA1LjUpO1xuXG4gIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7ICAgICAgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMDtcbiAgICAgICAgICAgIHRvcDogJHt0aGlzLnJhZGl1c31weDtcbiAgICAgICAgICAgIGxlZnQ6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgICB3aWR0aDogJHt0aGlzLnJhZGl1cyAqIDN9cHg7XG4gICAgICAgICAgICBoZWlnaHQ6ICR7dGhpcy5yYWRpdXMgKiAzfXB4O1xuICAgICAgICB9YDtcblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake3dyYXBwZXJ9OyR7dGhpcy5wcm9wcy5jc3N9YCA6IHdyYXBwZXI7XG4gIH07XG5cbiAgYSA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoMSl9O1xuICAgICAgICAgIHRvcDogJHt0aGlzLnJhZGl1c31weDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBgO1xuICBiID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSgyKX07XG4gICAgICAgICAgdG9wOiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICBsZWZ0OiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICBgO1xuICBjID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSgzKX07XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIGxlZnQ6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICBgO1xuICBkID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg0KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHt0aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICBgO1xuICBlID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg1KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnJhZGl1c31weDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBgO1xuICBmID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg2KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAgIGA7XG4gIGcgPSAoKSA9PiBjc3NgXG4gICAgICAgICAgJHt0aGlzLnN0eWxlKDcpfTtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICBgO1xuICBoID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg4KX07XG4gICAgICAgICAgdG9wOiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICBsZWZ0OiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICBgO1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5hKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmIoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYygpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5kKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmUoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuZigpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5nKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmgoKX0gLz5cbiAgICAgIDwvZGl2PiA6IG51bGw7XG4gIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBoZWlnaHQ6IFByb3BUeXBlcy5udW1iZXIsXG4gIHdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxuICBtYXJnaW46IFByb3BUeXBlcy5zdHJpbmcsXG4gIHJhZGl1czogUHJvcFR5cGVzLm51bWJlcixcbiAgaGVpZ2h0VW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgd2lkdGhVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICByYWRpdXNVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIGhlaWdodDogMTUsXG4gIHdpZHRoOiA1LFxuICBtYXJnaW46ICcycHgnLFxuICByYWRpdXM6IDIsXG4gIHdpZHRoVW5pdDogJ3B4JyxcbiAgaGVpZ2h0VW5pdDogJ3B4JyxcbiAgcmFkaXVzVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ2hlaWdodCcsICd3aWR0aCcsICdtYXJnaW4nLCAncmFkaXVzJywgJ3dpZHRoVW5pdCcsICdoZWlnaHRVbml0JywgJ3JhZGl1c1VuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n          }, _this.g = function () {\n            return (0, _core.css)(_this.style(7), ';top:0;left:', -_this.radius, 'px;transform:rotate(90deg);label:g;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9GYWRlTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnRmUiLCJmaWxlIjoic3JjL0ZhZGVMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGtleWZyYW1lcywgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBvbmx5VXBkYXRlRm9yS2V5cyBmcm9tICdyZWNvbXBvc2Uvb25seVVwZGF0ZUZvcktleXMnO1xuXG5jb25zdCBmYWRlID0ga2V5ZnJhbWVzYFxuICA1MCUge29wYWNpdHk6IDAuM30gXG4gIDEwMCUge29wYWNpdHk6IDF9XG5gO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0eWxlID0gaSA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGhlaWdodCwgd2lkdGgsIG1hcmdpbiwgY29sb3IsIHJhZGl1cywgd2lkdGhVbml0LCBoZWlnaHRVbml0LCByYWRpdXNVbml0XG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHt3aWR0aH0ke3dpZHRoVW5pdH1gfTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtoZWlnaHR9JHtoZWlnaHRVbml0fWB9OyAgICAgICAgICAgIFxuICAgICAgICAgICAgbWFyZ2luOiAke21hcmdpbn07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7YCR7cmFkaXVzfSR7cmFkaXVzVW5pdH1gfTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IDJzO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogJ2JvdGgnO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2ZhZGV9IDEuMnMgJHtpICogMC4xMn1zIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gIHJhZGl1cyA9IDIwO1xuICBxdWFydGVyID0gKHRoaXMucmFkaXVzIC8gMikgKyAodGhpcy5yYWRpdXMgLyA1LjUpO1xuXG4gIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7ICAgICAgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMDtcbiAgICAgICAgICAgIHRvcDogJHt0aGlzLnJhZGl1c31weDtcbiAgICAgICAgICAgIGxlZnQ6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgICB3aWR0aDogJHt0aGlzLnJhZGl1cyAqIDN9cHg7XG4gICAgICAgICAgICBoZWlnaHQ6ICR7dGhpcy5yYWRpdXMgKiAzfXB4O1xuICAgICAgICB9YDtcblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake3dyYXBwZXJ9OyR7dGhpcy5wcm9wcy5jc3N9YCA6IHdyYXBwZXI7XG4gIH07XG5cbiAgYSA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoMSl9O1xuICAgICAgICAgIHRvcDogJHt0aGlzLnJhZGl1c31weDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBgO1xuICBiID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSgyKX07XG4gICAgICAgICAgdG9wOiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICBsZWZ0OiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICBgO1xuICBjID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSgzKX07XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIGxlZnQ6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICBgO1xuICBkID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg0KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHt0aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICBgO1xuICBlID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg1KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnJhZGl1c31weDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBgO1xuICBmID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg2KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAgIGA7XG4gIGcgPSAoKSA9PiBjc3NgXG4gICAgICAgICAgJHt0aGlzLnN0eWxlKDcpfTtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICBgO1xuICBoID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg4KX07XG4gICAgICAgICAgdG9wOiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICBsZWZ0OiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICBgO1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5hKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmIoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYygpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5kKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmUoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuZigpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5nKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmgoKX0gLz5cbiAgICAgIDwvZGl2PiA6IG51bGw7XG4gIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBoZWlnaHQ6IFByb3BUeXBlcy5udW1iZXIsXG4gIHdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxuICBtYXJnaW46IFByb3BUeXBlcy5zdHJpbmcsXG4gIHJhZGl1czogUHJvcFR5cGVzLm51bWJlcixcbiAgaGVpZ2h0VW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgd2lkdGhVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICByYWRpdXNVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIGhlaWdodDogMTUsXG4gIHdpZHRoOiA1LFxuICBtYXJnaW46ICcycHgnLFxuICByYWRpdXM6IDIsXG4gIHdpZHRoVW5pdDogJ3B4JyxcbiAgaGVpZ2h0VW5pdDogJ3B4JyxcbiAgcmFkaXVzVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ2hlaWdodCcsICd3aWR0aCcsICdtYXJnaW4nLCAncmFkaXVzJywgJ3dpZHRoVW5pdCcsICdoZWlnaHRVbml0JywgJ3JhZGl1c1VuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n          }, _this.h = function () {\n            return (0, _core.css)(_this.style(8), ';top:', _this.quarter, 'px;left:', -_this.quarter, 'px;transform:rotate(45deg);label:h;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9GYWRlTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzRmUiLCJmaWxlIjoic3JjL0ZhZGVMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGtleWZyYW1lcywgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBvbmx5VXBkYXRlRm9yS2V5cyBmcm9tICdyZWNvbXBvc2Uvb25seVVwZGF0ZUZvcktleXMnO1xuXG5jb25zdCBmYWRlID0ga2V5ZnJhbWVzYFxuICA1MCUge29wYWNpdHk6IDAuM30gXG4gIDEwMCUge29wYWNpdHk6IDF9XG5gO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0eWxlID0gaSA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGhlaWdodCwgd2lkdGgsIG1hcmdpbiwgY29sb3IsIHJhZGl1cywgd2lkdGhVbml0LCBoZWlnaHRVbml0LCByYWRpdXNVbml0XG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHt3aWR0aH0ke3dpZHRoVW5pdH1gfTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtoZWlnaHR9JHtoZWlnaHRVbml0fWB9OyAgICAgICAgICAgIFxuICAgICAgICAgICAgbWFyZ2luOiAke21hcmdpbn07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7YCR7cmFkaXVzfSR7cmFkaXVzVW5pdH1gfTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IDJzO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogJ2JvdGgnO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2ZhZGV9IDEuMnMgJHtpICogMC4xMn1zIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gIHJhZGl1cyA9IDIwO1xuICBxdWFydGVyID0gKHRoaXMucmFkaXVzIC8gMikgKyAodGhpcy5yYWRpdXMgLyA1LjUpO1xuXG4gIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7ICAgICAgICBcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMDtcbiAgICAgICAgICAgIHRvcDogJHt0aGlzLnJhZGl1c31weDtcbiAgICAgICAgICAgIGxlZnQ6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgICB3aWR0aDogJHt0aGlzLnJhZGl1cyAqIDN9cHg7XG4gICAgICAgICAgICBoZWlnaHQ6ICR7dGhpcy5yYWRpdXMgKiAzfXB4O1xuICAgICAgICB9YDtcblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake3dyYXBwZXJ9OyR7dGhpcy5wcm9wcy5jc3N9YCA6IHdyYXBwZXI7XG4gIH07XG5cbiAgYSA9ICgpID0+IGNzc2BcbiAgICAgICAgICAke3RoaXMuc3R5bGUoMSl9O1xuICAgICAgICAgIHRvcDogJHt0aGlzLnJhZGl1c31weDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBgO1xuICBiID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSgyKX07XG4gICAgICAgICAgdG9wOiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICBsZWZ0OiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICBgO1xuICBjID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSgzKX07XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIGxlZnQ6ICR7dGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICBgO1xuICBkID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg0KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHt0aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICBgO1xuICBlID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg1KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnJhZGl1c31weDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBgO1xuICBmID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg2KX07XG4gICAgICAgICAgdG9wOiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5xdWFydGVyfXB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAgIGA7XG4gIGcgPSAoKSA9PiBjc3NgXG4gICAgICAgICAgJHt0aGlzLnN0eWxlKDcpfTtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgbGVmdDogJHstdGhpcy5yYWRpdXN9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgICBgO1xuICBoID0gKCkgPT4gY3NzYFxuICAgICAgICAgICR7dGhpcy5zdHlsZSg4KX07XG4gICAgICAgICAgdG9wOiAke3RoaXMucXVhcnRlcn1weDtcbiAgICAgICAgICBsZWZ0OiAkey10aGlzLnF1YXJ0ZXJ9cHg7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICBgO1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5hKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmIoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYygpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5kKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmUoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuZigpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5nKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmgoKX0gLz5cbiAgICAgIDwvZGl2PiA6IG51bGw7XG4gIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBoZWlnaHQ6IFByb3BUeXBlcy5udW1iZXIsXG4gIHdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxuICBtYXJnaW46IFByb3BUeXBlcy5zdHJpbmcsXG4gIHJhZGl1czogUHJvcFR5cGVzLm51bWJlcixcbiAgaGVpZ2h0VW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgd2lkdGhVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICByYWRpdXNVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIGhlaWdodDogMTUsXG4gIHdpZHRoOiA1LFxuICBtYXJnaW46ICcycHgnLFxuICByYWRpdXM6IDIsXG4gIHdpZHRoVW5pdDogJ3B4JyxcbiAgaGVpZ2h0VW5pdDogJ3B4JyxcbiAgcmFkaXVzVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ2hlaWdodCcsICd3aWR0aCcsICdtYXJnaW4nLCAncmFkaXVzJywgJ3dpZHRoVW5pdCcsICdoZWlnaHRVbml0JywgJ3JhZGl1c1VuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.wrapper()\n            }, (0, _core.jsx)('div', {\n              css: this.a()\n            }), (0, _core.jsx)('div', {\n              css: this.b()\n            }), (0, _core.jsx)('div', {\n              css: this.c()\n            }), (0, _core.jsx)('div', {\n              css: this.d()\n            }), (0, _core.jsx)('div', {\n              css: this.e()\n            }), (0, _core.jsx)('div', {\n              css: this.f()\n            }), (0, _core.jsx)('div', {\n              css: this.g()\n            }), (0, _core.jsx)('div', {\n              css: this.h()\n            })) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        color: _propTypes2.default.string,\n        height: _propTypes2.default.number,\n        width: _propTypes2.default.number,\n        margin: _propTypes2.default.string,\n        radius: _propTypes2.default.number,\n        heightUnit: _propTypes2.default.string,\n        widthUnit: _propTypes2.default.string,\n        radiusUnit: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        color: '#000000',\n        height: 15,\n        width: 5,\n        margin: '2px',\n        radius: 2,\n        widthUnit: 'px',\n        heightUnit: 'px',\n        radiusUnit: 'px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'height', 'width', 'margin', 'radius', 'widthUnit', 'heightUnit', 'radiusUnit', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 55 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys);\n        global.GridLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n  0% {transform: scale(1)}\\n  50% {transform: scale(0.5); opacity: 0.7}\\n  100% {transform: scale(1);opacity: 1}\\n'], ['\\n  0% {transform: scale(1)}\\n  50% {transform: scale(0.5); opacity: 0.7}\\n  100% {transform: scale(1);opacity: 1}\\n']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      }\n\n      var grid = (0, _core.keyframes)(_templateObject);\n\n      var random = function random(top) {\n        return Math.random() * top;\n      };\n\n      var Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (rand) {\n            var _this$props = _this.props,\n                color = _this$props.color,\n                size = _this$props.size,\n                sizeUnit = _this$props.sizeUnit,\n                margin = _this$props.margin;\n            return (0, _core.css)('{display:inline-block;background-color:', color, ';width:', '' + size + sizeUnit, ';height:', '' + size + sizeUnit, ';margin:', margin, ';border-radius:100%;animation-fill-mode:\\'both\\';animation:', grid, ' ', rand / 100 + 0.6, 's ', rand / 100 - 0.2, 's infinite ease;}label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9HcmlkTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvQmdCIiwiZmlsZSI6InNyYy9HcmlkTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuY29uc3QgZ3JpZCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogc2NhbGUoMSl9XG4gIDUwJSB7dHJhbnNmb3JtOiBzY2FsZSgwLjUpOyBvcGFjaXR5OiAwLjd9XG4gIDEwMCUge3RyYW5zZm9ybTogc2NhbGUoMSk7b3BhY2l0eTogMX1cbmA7XG5cbmNvbnN0IHJhbmRvbSA9IHRvcCA9PiBNYXRoLnJhbmRvbSgpICogdG9wO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0eWxlID0gcmFuZCA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGNvbG9yLCBzaXplLCBzaXplVW5pdCwgbWFyZ2luXG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIHdpZHRoOiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBtYXJnaW46ICR7bWFyZ2lufTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiAnYm90aCc7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7Z3JpZH0gJHsocmFuZCAvIDEwMCkgKyAwLjZ9cyAkeyhyYW5kIC8gMTAwKSAtIDAuMn1zIGluZmluaXRlIGVhc2U7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgICB3cmFwcGVyID0gKCkgPT4ge1xuICAgICAgY29uc3Qge1xuICAgICAgICBzaXplLCBzaXplVW5pdCwgbWFyZ2luXG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7ICAgICAgICBcbiAgICAgICAgICAgIHdpZHRoOiAke2AkeyhwYXJzZUZsb2F0KHNpemUpICogMykgKyAocGFyc2VGbG9hdChtYXJnaW4pICogNil9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMDtcbiAgICAgICAgfWA7XG5cbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake3dyYXBwZXJ9OyR7dGhpcy5wcm9wcy5jc3N9YCA6IHdyYXBwZXI7XG4gICAgfTtcblxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUocmFuZG9tKDEwMCkpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKHJhbmRvbSgxMDApKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZShyYW5kb20oMTAwKSl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUocmFuZG9tKDEwMCkpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKHJhbmRvbSgxMDApKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZShyYW5kb20oMTAwKSl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUocmFuZG9tKDEwMCkpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKHJhbmRvbSgxMDApKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZShyYW5kb20oMTAwKSl9IC8+XG4gICAgICAgIDwvZGl2PiA6IG51bGw7XG4gICAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIG1hcmdpbjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZVVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzczogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuTG9hZGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgbG9hZGluZzogdHJ1ZSxcbiAgY29sb3I6ICcjMDAwMDAwJyxcbiAgc2l6ZTogMTUsXG4gIG1hcmdpbjogJzJweCcsXG4gIHNpemVVbml0OiAncHgnLFxuICBjc3M6ICcnXG59O1xuXG5jb25zdCBDb21wb25lbnQgPSBvbmx5VXBkYXRlRm9yS2V5cyhbJ2xvYWRpbmcnLCAnY29sb3InLCAnc2l6ZScsICdtYXJnaW4nLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuIl19 */'));\n          }, _this.wrapper = function () {\n            var _this$props2 = _this.props,\n                size = _this$props2.size,\n                sizeUnit = _this$props2.sizeUnit,\n                margin = _this$props2.margin;\n            var wrapper = (0, _core.css)('{width:', '' + (parseFloat(size) * 3 + parseFloat(margin) * 6) + sizeUnit, ';font-size:0;}label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9HcmlkTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxQ3lCIiwiZmlsZSI6InNyYy9HcmlkTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuY29uc3QgZ3JpZCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogc2NhbGUoMSl9XG4gIDUwJSB7dHJhbnNmb3JtOiBzY2FsZSgwLjUpOyBvcGFjaXR5OiAwLjd9XG4gIDEwMCUge3RyYW5zZm9ybTogc2NhbGUoMSk7b3BhY2l0eTogMX1cbmA7XG5cbmNvbnN0IHJhbmRvbSA9IHRvcCA9PiBNYXRoLnJhbmRvbSgpICogdG9wO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0eWxlID0gcmFuZCA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGNvbG9yLCBzaXplLCBzaXplVW5pdCwgbWFyZ2luXG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIHdpZHRoOiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBtYXJnaW46ICR7bWFyZ2lufTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiAnYm90aCc7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7Z3JpZH0gJHsocmFuZCAvIDEwMCkgKyAwLjZ9cyAkeyhyYW5kIC8gMTAwKSAtIDAuMn1zIGluZmluaXRlIGVhc2U7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgICB3cmFwcGVyID0gKCkgPT4ge1xuICAgICAgY29uc3Qge1xuICAgICAgICBzaXplLCBzaXplVW5pdCwgbWFyZ2luXG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7ICAgICAgICBcbiAgICAgICAgICAgIHdpZHRoOiAke2AkeyhwYXJzZUZsb2F0KHNpemUpICogMykgKyAocGFyc2VGbG9hdChtYXJnaW4pICogNil9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMDtcbiAgICAgICAgfWA7XG5cbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake3dyYXBwZXJ9OyR7dGhpcy5wcm9wcy5jc3N9YCA6IHdyYXBwZXI7XG4gICAgfTtcblxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUocmFuZG9tKDEwMCkpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKHJhbmRvbSgxMDApKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZShyYW5kb20oMTAwKSl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUocmFuZG9tKDEwMCkpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKHJhbmRvbSgxMDApKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZShyYW5kb20oMTAwKSl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUocmFuZG9tKDEwMCkpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKHJhbmRvbSgxMDApKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZShyYW5kb20oMTAwKSl9IC8+XG4gICAgICAgIDwvZGl2PiA6IG51bGw7XG4gICAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIG1hcmdpbjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZVVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzczogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuTG9hZGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgbG9hZGluZzogdHJ1ZSxcbiAgY29sb3I6ICcjMDAwMDAwJyxcbiAgc2l6ZTogMTUsXG4gIG1hcmdpbjogJzJweCcsXG4gIHNpemVVbml0OiAncHgnLFxuICBjc3M6ICcnXG59O1xuXG5jb25zdCBDb21wb25lbnQgPSBvbmx5VXBkYXRlRm9yS2V5cyhbJ2xvYWRpbmcnLCAnY29sb3InLCAnc2l6ZScsICdtYXJnaW4nLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuIl19 */'));\n            return _this.props.css ? (0, _core.css)(wrapper, ';', _this.props.css, 'label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9HcmlkTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwQ2lDIiwiZmlsZSI6InNyYy9HcmlkTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuY29uc3QgZ3JpZCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogc2NhbGUoMSl9XG4gIDUwJSB7dHJhbnNmb3JtOiBzY2FsZSgwLjUpOyBvcGFjaXR5OiAwLjd9XG4gIDEwMCUge3RyYW5zZm9ybTogc2NhbGUoMSk7b3BhY2l0eTogMX1cbmA7XG5cbmNvbnN0IHJhbmRvbSA9IHRvcCA9PiBNYXRoLnJhbmRvbSgpICogdG9wO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0eWxlID0gcmFuZCA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGNvbG9yLCBzaXplLCBzaXplVW5pdCwgbWFyZ2luXG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIHdpZHRoOiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBtYXJnaW46ICR7bWFyZ2lufTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiAnYm90aCc7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7Z3JpZH0gJHsocmFuZCAvIDEwMCkgKyAwLjZ9cyAkeyhyYW5kIC8gMTAwKSAtIDAuMn1zIGluZmluaXRlIGVhc2U7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgICB3cmFwcGVyID0gKCkgPT4ge1xuICAgICAgY29uc3Qge1xuICAgICAgICBzaXplLCBzaXplVW5pdCwgbWFyZ2luXG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7ICAgICAgICBcbiAgICAgICAgICAgIHdpZHRoOiAke2AkeyhwYXJzZUZsb2F0KHNpemUpICogMykgKyAocGFyc2VGbG9hdChtYXJnaW4pICogNil9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMDtcbiAgICAgICAgfWA7XG5cbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake3dyYXBwZXJ9OyR7dGhpcy5wcm9wcy5jc3N9YCA6IHdyYXBwZXI7XG4gICAgfTtcblxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUocmFuZG9tKDEwMCkpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKHJhbmRvbSgxMDApKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZShyYW5kb20oMTAwKSl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUocmFuZG9tKDEwMCkpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKHJhbmRvbSgxMDApKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZShyYW5kb20oMTAwKSl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUocmFuZG9tKDEwMCkpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKHJhbmRvbSgxMDApKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZShyYW5kb20oMTAwKSl9IC8+XG4gICAgICAgIDwvZGl2PiA6IG51bGw7XG4gICAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIG1hcmdpbjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZVVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzczogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuTG9hZGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgbG9hZGluZzogdHJ1ZSxcbiAgY29sb3I6ICcjMDAwMDAwJyxcbiAgc2l6ZTogMTUsXG4gIG1hcmdpbjogJzJweCcsXG4gIHNpemVVbml0OiAncHgnLFxuICBjc3M6ICcnXG59O1xuXG5jb25zdCBDb21wb25lbnQgPSBvbmx5VXBkYXRlRm9yS2V5cyhbJ2xvYWRpbmcnLCAnY29sb3InLCAnc2l6ZScsICdtYXJnaW4nLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuIl19 */')) : wrapper;\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.wrapper()\n            }, (0, _core.jsx)('div', {\n              css: this.style(random(100))\n            }), (0, _core.jsx)('div', {\n              css: this.style(random(100))\n            }), (0, _core.jsx)('div', {\n              css: this.style(random(100))\n            }), (0, _core.jsx)('div', {\n              css: this.style(random(100))\n            }), (0, _core.jsx)('div', {\n              css: this.style(random(100))\n            }), (0, _core.jsx)('div', {\n              css: this.style(random(100))\n            }), (0, _core.jsx)('div', {\n              css: this.style(random(100))\n            }), (0, _core.jsx)('div', {\n              css: this.style(random(100))\n            }), (0, _core.jsx)('div', {\n              css: this.style(random(100))\n            })) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        color: _propTypes2.default.string,\n        size: _propTypes2.default.number,\n        margin: _propTypes2.default.string,\n        sizeUnit: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        color: '#000000',\n        size: 15,\n        margin: '2px',\n        sizeUnit: 'px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'size', 'margin', 'sizeUnit', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 56 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys);\n        global.MoonLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n  100% {transform: rotate(360deg)}\\n'], ['\\n  100% {transform: rotate(360deg)}\\n']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      }\n\n      var moon = (0, _core.keyframes)(_templateObject);\n\n      var Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.moonSize = function () {\n            var size = _this.props.size;\n            return size / 7;\n          }, _this.ballStyle = function (size) {\n            var sizeUnit = _this.props.sizeUnit;\n            return (0, _core.css)('{width:', '' + size + sizeUnit, ';height:', '' + size + sizeUnit, ';border-radius:100%;}label:ballStyle;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Nb29uTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvQmMiLCJmaWxlIjoic3JjL01vb25Mb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGtleWZyYW1lcywgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBvbmx5VXBkYXRlRm9yS2V5cyBmcm9tICdyZWNvbXBvc2Uvb25seVVwZGF0ZUZvcktleXMnO1xuXG5jb25zdCBtb29uID0ga2V5ZnJhbWVzYFxuICAxMDAlIHt0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpfVxuYDtcblxuY2xhc3MgTG9hZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBtb29uU2l6ZSA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIHNpemUgLyA3O1xuICAgIH07XG5cbiAgYmFsbFN0eWxlID0gc2l6ZSA9PiB7XG4gICAgY29uc3QgeyBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgIHdpZHRoOiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICBoZWlnaHQ6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICB9YDtcbiAgfTtcblxuICAgIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUsIHNpemVVbml0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIHdpZHRoOiAke2Ake3NpemUgKyAodGhpcy5tb29uU2l6ZSgpICogMil9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtzaXplICsgKHRoaXMubW9vblNpemUoKSAqIDIpfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBhbmltYXRpb246ICR7bW9vbn0gMC42cyAwcyBpbmZpbml0ZSBsaW5lYXI7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICAgIGJhbGwgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IGNvbG9yLCBzaXplLCBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgICAgICR7dGhpcy5iYWxsU3R5bGUodGhpcy5tb29uU2l6ZSgpKX07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuODtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogJHtgJHsoc2l6ZSAvIDIpIC0gKHRoaXMubW9vblNpemUoKSAvIDIpfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBhbmltYXRpb246ICR7bW9vbn0gMC42cyAwcyBpbmZpbml0ZSBsaW5lYXI7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbiAgICAgICAgYDtcbiAgICB9O1xuXG5cbiAgICBjaXJjbGUgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUsIGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICBjb25zdCB3cmFwcGVyID0gY3NzYFxuICAgICAgICAgICAgJHt0aGlzLmJhbGxTdHlsZShzaXplKX07XG4gICAgICAgICAgICBib3JkZXI6ICR7dGhpcy5tb29uU2l6ZSgpfXB4IHNvbGlkICR7Y29sb3J9O1xuICAgICAgICAgICAgb3BhY2l0eTogMC4xO1xuICAgICAgICBgO1xuXG4gICAgICByZXR1cm4gdGhpcy5wcm9wcy5jc3MgPyBjc3NgJHt3cmFwcGVyfTske3RoaXMucHJvcHMuY3NzfWAgOiB3cmFwcGVyO1xuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBsb2FkaW5nID9cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMud3JhcHBlcigpfT5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5iYWxsKCl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuY2lyY2xlKCl9IC8+XG4gICAgICAgIDwvZGl2PiA6IG51bGw7XG4gICAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIHNpemVVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemU6IDYwLFxuICBzaXplVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3NpemUnLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n          }, _this.wrapper = function () {\n            var _this$props = _this.props,\n                size = _this$props.size,\n                sizeUnit = _this$props.sizeUnit;\n            return (0, _core.css)('{position:relative;width:', '' + (size + _this.moonSize() * 2) + sizeUnit, ';height:', '' + (size + _this.moonSize() * 2) + sizeUnit, ';animation:', moon, ' 0.6s 0s infinite linear;animation-fill-mode:forwards;}label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Nb29uTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4QmdCIiwiZmlsZSI6InNyYy9Nb29uTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuY29uc3QgbW9vbiA9IGtleWZyYW1lc2BcbiAgMTAwJSB7dHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgbW9vblNpemUgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBzaXplIC8gNztcbiAgICB9O1xuXG4gIGJhbGxTdHlsZSA9IHNpemUgPT4ge1xuICAgIGNvbnN0IHsgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICB3aWR0aDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgICAgfWA7XG4gIH07XG5cbiAgICB3cmFwcGVyID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplICsgKHRoaXMubW9vblNpemUoKSAqIDIpfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7c2l6ZSArICh0aGlzLm1vb25TaXplKCkgKiAyKX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke21vb259IDAuNnMgMHMgaW5maW5pdGUgbGluZWFyO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgICBiYWxsID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBjb2xvciwgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICAke3RoaXMuYmFsbFN0eWxlKHRoaXMubW9vblNpemUoKSl9O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBvcGFjaXR5OiAwLjg7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6ICR7YCR7KHNpemUgLyAyKSAtICh0aGlzLm1vb25TaXplKCkgLyAyKX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke21vb259IDAuNnMgMHMgaW5maW5pdGUgbGluZWFyO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgICAgIGA7XG4gICAgfTtcblxuXG4gICAgY2lyY2xlID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBjb2xvciB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgY29uc3Qgd3JhcHBlciA9IGNzc2BcbiAgICAgICAgICAgICR7dGhpcy5iYWxsU3R5bGUoc2l6ZSl9O1xuICAgICAgICAgICAgYm9yZGVyOiAke3RoaXMubW9vblNpemUoKX1weCBzb2xpZCAke2NvbG9yfTtcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuMTtcbiAgICAgICAgYDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuYmFsbCgpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLmNpcmNsZSgpfSAvPlxuICAgICAgICA8L2Rpdj4gOiBudWxsO1xuICAgIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuICBzaXplVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICBzaXplOiA2MCxcbiAgc2l6ZVVuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdzaXplJywgJ3NpemVVbml0JywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */'));\n          }, _this.ball = function () {\n            var _this$props2 = _this.props,\n                color = _this$props2.color,\n                size = _this$props2.size,\n                sizeUnit = _this$props2.sizeUnit;\n            return (0, _core.css)(_this.ballStyle(_this.moonSize()), ';background-color:', color, ';opacity:0.8;position:absolute;top:', '' + (size / 2 - _this.moonSize() / 2) + sizeUnit, ';animation:', moon, ' 0.6s 0s infinite linear;animation-fill-mode:forwards;label:ball;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Nb29uTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwQ2dCIiwiZmlsZSI6InNyYy9Nb29uTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuY29uc3QgbW9vbiA9IGtleWZyYW1lc2BcbiAgMTAwJSB7dHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgbW9vblNpemUgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBzaXplIC8gNztcbiAgICB9O1xuXG4gIGJhbGxTdHlsZSA9IHNpemUgPT4ge1xuICAgIGNvbnN0IHsgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICB3aWR0aDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgICAgfWA7XG4gIH07XG5cbiAgICB3cmFwcGVyID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplICsgKHRoaXMubW9vblNpemUoKSAqIDIpfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7c2l6ZSArICh0aGlzLm1vb25TaXplKCkgKiAyKX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke21vb259IDAuNnMgMHMgaW5maW5pdGUgbGluZWFyO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgICBiYWxsID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBjb2xvciwgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICAke3RoaXMuYmFsbFN0eWxlKHRoaXMubW9vblNpemUoKSl9O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBvcGFjaXR5OiAwLjg7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6ICR7YCR7KHNpemUgLyAyKSAtICh0aGlzLm1vb25TaXplKCkgLyAyKX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke21vb259IDAuNnMgMHMgaW5maW5pdGUgbGluZWFyO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgICAgIGA7XG4gICAgfTtcblxuXG4gICAgY2lyY2xlID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBjb2xvciB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgY29uc3Qgd3JhcHBlciA9IGNzc2BcbiAgICAgICAgICAgICR7dGhpcy5iYWxsU3R5bGUoc2l6ZSl9O1xuICAgICAgICAgICAgYm9yZGVyOiAke3RoaXMubW9vblNpemUoKX1weCBzb2xpZCAke2NvbG9yfTtcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuMTtcbiAgICAgICAgYDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuYmFsbCgpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLmNpcmNsZSgpfSAvPlxuICAgICAgICA8L2Rpdj4gOiBudWxsO1xuICAgIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuICBzaXplVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICBzaXplOiA2MCxcbiAgc2l6ZVVuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdzaXplJywgJ3NpemVVbml0JywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */'));\n          }, _this.circle = function () {\n            var _this$props3 = _this.props,\n                size = _this$props3.size,\n                color = _this$props3.color;\n            var wrapper = (0, _core.css)(_this.ballStyle(size), ';border:', _this.moonSize(), 'px solid ', color, ';opacity:0.1;label:circle;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Nb29uTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5RHlCIiwiZmlsZSI6InNyYy9Nb29uTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuY29uc3QgbW9vbiA9IGtleWZyYW1lc2BcbiAgMTAwJSB7dHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgbW9vblNpemUgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBzaXplIC8gNztcbiAgICB9O1xuXG4gIGJhbGxTdHlsZSA9IHNpemUgPT4ge1xuICAgIGNvbnN0IHsgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICB3aWR0aDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgICAgfWA7XG4gIH07XG5cbiAgICB3cmFwcGVyID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplICsgKHRoaXMubW9vblNpemUoKSAqIDIpfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7c2l6ZSArICh0aGlzLm1vb25TaXplKCkgKiAyKX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke21vb259IDAuNnMgMHMgaW5maW5pdGUgbGluZWFyO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgICBiYWxsID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBjb2xvciwgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICAke3RoaXMuYmFsbFN0eWxlKHRoaXMubW9vblNpemUoKSl9O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBvcGFjaXR5OiAwLjg7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6ICR7YCR7KHNpemUgLyAyKSAtICh0aGlzLm1vb25TaXplKCkgLyAyKX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke21vb259IDAuNnMgMHMgaW5maW5pdGUgbGluZWFyO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgICAgIGA7XG4gICAgfTtcblxuXG4gICAgY2lyY2xlID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBjb2xvciB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgY29uc3Qgd3JhcHBlciA9IGNzc2BcbiAgICAgICAgICAgICR7dGhpcy5iYWxsU3R5bGUoc2l6ZSl9O1xuICAgICAgICAgICAgYm9yZGVyOiAke3RoaXMubW9vblNpemUoKX1weCBzb2xpZCAke2NvbG9yfTtcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuMTtcbiAgICAgICAgYDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuYmFsbCgpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLmNpcmNsZSgpfSAvPlxuICAgICAgICA8L2Rpdj4gOiBudWxsO1xuICAgIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuICBzaXplVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICBzaXplOiA2MCxcbiAgc2l6ZVVuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdzaXplJywgJ3NpemVVbml0JywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */'));\n            return _this.props.css ? (0, _core.css)(wrapper, ';', _this.props.css, 'label:circle;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Nb29uTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErRGlDIiwiZmlsZSI6InNyYy9Nb29uTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuY29uc3QgbW9vbiA9IGtleWZyYW1lc2BcbiAgMTAwJSB7dHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgbW9vblNpemUgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBzaXplIC8gNztcbiAgICB9O1xuXG4gIGJhbGxTdHlsZSA9IHNpemUgPT4ge1xuICAgIGNvbnN0IHsgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICB3aWR0aDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgICAgfWA7XG4gIH07XG5cbiAgICB3cmFwcGVyID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplICsgKHRoaXMubW9vblNpemUoKSAqIDIpfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7c2l6ZSArICh0aGlzLm1vb25TaXplKCkgKiAyKX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke21vb259IDAuNnMgMHMgaW5maW5pdGUgbGluZWFyO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgICBiYWxsID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBjb2xvciwgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICAgICAke3RoaXMuYmFsbFN0eWxlKHRoaXMubW9vblNpemUoKSl9O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICBvcGFjaXR5OiAwLjg7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6ICR7YCR7KHNpemUgLyAyKSAtICh0aGlzLm1vb25TaXplKCkgLyAyKX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke21vb259IDAuNnMgMHMgaW5maW5pdGUgbGluZWFyO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgICAgIGA7XG4gICAgfTtcblxuXG4gICAgY2lyY2xlID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBjb2xvciB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgY29uc3Qgd3JhcHBlciA9IGNzc2BcbiAgICAgICAgICAgICR7dGhpcy5iYWxsU3R5bGUoc2l6ZSl9O1xuICAgICAgICAgICAgYm9yZGVyOiAke3RoaXMubW9vblNpemUoKX1weCBzb2xpZCAke2NvbG9yfTtcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuMTtcbiAgICAgICAgYDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuYmFsbCgpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLmNpcmNsZSgpfSAvPlxuICAgICAgICA8L2Rpdj4gOiBudWxsO1xuICAgIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuICBzaXplVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICBzaXplOiA2MCxcbiAgc2l6ZVVuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdzaXplJywgJ3NpemVVbml0JywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */')) : wrapper;\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.wrapper()\n            }, (0, _core.jsx)('div', {\n              css: this.ball()\n            }), (0, _core.jsx)('div', {\n              css: this.circle()\n            })) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        color: _propTypes2.default.string,\n        size: _propTypes2.default.number,\n        sizeUnit: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        color: '#000000',\n        size: 60,\n        sizeUnit: 'px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'size', 'sizeUnit', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 57 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys);\n        global.PacmanLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n      0% {transform: rotate(0deg)} \\n      50% {transform: rotate(-44deg)}\\n    '], ['\\n      0% {transform: rotate(0deg)} \\n      50% {transform: rotate(-44deg)}\\n    ']),\n          _templateObject2 = _taggedTemplateLiteral(['\\n      0% {transform: rotate(0deg)} \\n      50% {transform: rotate(44deg)}\\n    '], ['\\n      0% {transform: rotate(0deg)} \\n      50% {transform: rotate(44deg)}\\n    ']),\n          _templateObject3 = _taggedTemplateLiteral(['\\n          75% {opacity: 0.7}\\n          100% {transform: translate(', ', ', ')}\\n        '], ['\\n          75% {opacity: 0.7}\\n          100% {transform: translate(', ', ', ')}\\n        ']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      } // This returns an animation\n\n\n      var pacman = [(0, _core.keyframes)(_templateObject), (0, _core.keyframes)(_templateObject2)];\n\n      var Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.ball = function () {\n            var _this$props = _this.props,\n                size = _this$props.size,\n                sizeUnit = _this$props.sizeUnit;\n            return (0, _core.keyframes)(_templateObject3, '' + -4 * size + sizeUnit, '' + -size / 4 + sizeUnit);\n          }, _this.ballStyle = function (i) {\n            var _this$props2 = _this.props,\n                color = _this$props2.color,\n                margin = _this$props2.margin,\n                size = _this$props2.size,\n                sizeUnit = _this$props2.sizeUnit;\n            return (0, _core.css)('{width:', '' + size / 3 + sizeUnit, ';height:', '' + size / 3 + sizeUnit, ';background-color:', color, ';margin:', margin, ';border-radius:100%;transform:translate(0,', '' + -size / 4 + sizeUnit, ');position:absolute;top:', size, 'px;left:', '' + size * 4 + sizeUnit, ';animation:', _this.ball(), ' 1s ', i * 0.25, 's infinite linear;animation-fill-mode:both;}label:ballStyle;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9QYWNtYW5Mb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlDZ0IiLCJmaWxlIjoic3JjL1BhY21hbkxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbi8vIFRoaXMgcmV0dXJucyBhbiBhbmltYXRpb25cbmNvbnN0IHBhY21hbiA9IFtcbiAga2V5ZnJhbWVzYFxuICAgICAgMCUge3RyYW5zZm9ybTogcm90YXRlKDBkZWcpfSBcbiAgICAgIDUwJSB7dHJhbnNmb3JtOiByb3RhdGUoLTQ0ZGVnKX1cbiAgICBgLFxuICBrZXlmcmFtZXNgXG4gICAgICAwJSB7dHJhbnNmb3JtOiByb3RhdGUoMGRlZyl9IFxuICAgICAgNTAlIHt0cmFuc2Zvcm06IHJvdGF0ZSg0NGRlZyl9XG4gICAgYFxuXTtcblxuY2xhc3MgTG9hZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBiYWxsID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGtleWZyYW1lc2BcbiAgICAgICAgICA3NSUge29wYWNpdHk6IDAuN31cbiAgICAgICAgICAxMDAlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZSgke2Akey00ICogc2l6ZX0ke3NpemVVbml0fWB9LCAke2Akey1zaXplIC8gNH0ke3NpemVVbml0fWB9KX1cbiAgICAgICAgYDtcbiAgICB9O1xuXG4gICAgYmFsbFN0eWxlID0gaSA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGNvbG9yLCBtYXJnaW4sIHNpemUsIHNpemVVbml0XG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplIC8gM30ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemUgLyAzfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIG1hcmdpbjogJHttYXJnaW59O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsICR7YCR7LXNpemUgLyA0fSR7c2l6ZVVuaXR9YH0pO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAke3NpemV9cHg7XG4gICAgICAgICAgICBsZWZ0OiAke2Ake3NpemUgKiA0fSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBhbmltYXRpb246ICR7dGhpcy5iYWxsKCl9IDFzICR7aSAqIDAuMjV9cyBpbmZpbml0ZSBsaW5lYXI7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgczEgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUsIHNpemVVbml0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gYCR7c2l6ZX0ke3NpemVVbml0fSBzb2xpZCB0cmFuc3BhcmVudGA7XG4gICAgfTtcblxuICAgIHMyID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCwgY29sb3IgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBgJHtzaXplfSR7c2l6ZVVuaXR9IHNvbGlkICR7Y29sb3J9YDtcbiAgICB9O1xuXG4gICAgcGFjbWFuU3R5bGUgPSBpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGNvbnN0IHMxID0gdGhpcy5zMSgpO1xuICAgICAgY29uc3QgczIgPSB0aGlzLnMyKCk7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgICAgICBib3JkZXItcmlnaHQ6ICR7czF9O1xuICAgICAgICAgICAgYm9yZGVyLXRvcDogJHtpID09PSAwID8gczEgOiBzMn07XG4gICAgICAgICAgICBib3JkZXItbGVmdDogJHtzMn07XG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAke2kgPT09IDAgPyBzMiA6IHMxfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke3BhY21hbltpXX0gMC44cyBpbmZpbml0ZSBlYXNlLWluLW91dDtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgICB3cmFwcGVyID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBmb250LXNpemU6IDA7XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICB9YDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgICB9O1xuXG4gIHBhYyA9ICgpID0+IHRoaXMucGFjbWFuU3R5bGUoMCk7XG4gIG1hbiA9ICgpID0+IHRoaXMucGFjbWFuU3R5bGUoMSk7XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgbG9hZGluZyB9ID0gdGhpcy5wcm9wcztcblxuICAgIHJldHVybiBsb2FkaW5nID9cbiAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLnBhYygpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5tYW4oKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYmFsbFN0eWxlKDIpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5iYWxsU3R5bGUoMyl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmJhbGxTdHlsZSg0KX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYmFsbFN0eWxlKDUpfSAvPlxuICAgICAgPC9kaXY+IDogbnVsbDtcbiAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIG1hcmdpbjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZVVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzczogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuTG9hZGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgbG9hZGluZzogdHJ1ZSxcbiAgY29sb3I6ICcjMDAwMDAwJyxcbiAgc2l6ZTogMjUsXG4gIG1hcmdpbjogJzJweCcsXG4gIHNpemVVbml0OiAncHgnLFxuICBjc3M6ICcnXG59O1xuXG5jb25zdCBDb21wb25lbnQgPSBvbmx5VXBkYXRlRm9yS2V5cyhbJ2xvYWRpbmcnLCAnY29sb3InLCAnc2l6ZScsICdtYXJnaW4nLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n          }, _this.s1 = function () {\n            var _this$props3 = _this.props,\n                size = _this$props3.size,\n                sizeUnit = _this$props3.sizeUnit;\n            return '' + size + sizeUnit + ' solid transparent';\n          }, _this.s2 = function () {\n            var _this$props4 = _this.props,\n                size = _this$props4.size,\n                sizeUnit = _this$props4.sizeUnit,\n                color = _this$props4.color;\n            return '' + size + sizeUnit + ' solid ' + color;\n          }, _this.pacmanStyle = function (i) {\n            var _this$props5 = _this.props,\n                size = _this$props5.size,\n                sizeUnit = _this$props5.sizeUnit;\n\n            var s1 = _this.s1();\n\n            var s2 = _this.s2();\n\n            return (0, _core.css)('{width:0;height:0;border-right:', s1, ';border-top:', i === 0 ? s1 : s2, ';border-left:', s2, ';border-bottom:', i === 0 ? s2 : s1, ';border-radius:', '' + size + sizeUnit, ';position:absolute;animation:', pacman[i], ' 0.8s infinite ease-in-out;animation-fill-mode:both;}label:pacmanStyle;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9QYWNtYW5Mb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtFZ0IiLCJmaWxlIjoic3JjL1BhY21hbkxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbi8vIFRoaXMgcmV0dXJucyBhbiBhbmltYXRpb25cbmNvbnN0IHBhY21hbiA9IFtcbiAga2V5ZnJhbWVzYFxuICAgICAgMCUge3RyYW5zZm9ybTogcm90YXRlKDBkZWcpfSBcbiAgICAgIDUwJSB7dHJhbnNmb3JtOiByb3RhdGUoLTQ0ZGVnKX1cbiAgICBgLFxuICBrZXlmcmFtZXNgXG4gICAgICAwJSB7dHJhbnNmb3JtOiByb3RhdGUoMGRlZyl9IFxuICAgICAgNTAlIHt0cmFuc2Zvcm06IHJvdGF0ZSg0NGRlZyl9XG4gICAgYFxuXTtcblxuY2xhc3MgTG9hZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBiYWxsID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGtleWZyYW1lc2BcbiAgICAgICAgICA3NSUge29wYWNpdHk6IDAuN31cbiAgICAgICAgICAxMDAlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZSgke2Akey00ICogc2l6ZX0ke3NpemVVbml0fWB9LCAke2Akey1zaXplIC8gNH0ke3NpemVVbml0fWB9KX1cbiAgICAgICAgYDtcbiAgICB9O1xuXG4gICAgYmFsbFN0eWxlID0gaSA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGNvbG9yLCBtYXJnaW4sIHNpemUsIHNpemVVbml0XG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplIC8gM30ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemUgLyAzfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIG1hcmdpbjogJHttYXJnaW59O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsICR7YCR7LXNpemUgLyA0fSR7c2l6ZVVuaXR9YH0pO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAke3NpemV9cHg7XG4gICAgICAgICAgICBsZWZ0OiAke2Ake3NpemUgKiA0fSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBhbmltYXRpb246ICR7dGhpcy5iYWxsKCl9IDFzICR7aSAqIDAuMjV9cyBpbmZpbml0ZSBsaW5lYXI7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgczEgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUsIHNpemVVbml0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gYCR7c2l6ZX0ke3NpemVVbml0fSBzb2xpZCB0cmFuc3BhcmVudGA7XG4gICAgfTtcblxuICAgIHMyID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCwgY29sb3IgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBgJHtzaXplfSR7c2l6ZVVuaXR9IHNvbGlkICR7Y29sb3J9YDtcbiAgICB9O1xuXG4gICAgcGFjbWFuU3R5bGUgPSBpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGNvbnN0IHMxID0gdGhpcy5zMSgpO1xuICAgICAgY29uc3QgczIgPSB0aGlzLnMyKCk7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgICAgICBib3JkZXItcmlnaHQ6ICR7czF9O1xuICAgICAgICAgICAgYm9yZGVyLXRvcDogJHtpID09PSAwID8gczEgOiBzMn07XG4gICAgICAgICAgICBib3JkZXItbGVmdDogJHtzMn07XG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAke2kgPT09IDAgPyBzMiA6IHMxfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke3BhY21hbltpXX0gMC44cyBpbmZpbml0ZSBlYXNlLWluLW91dDtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgICB3cmFwcGVyID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBmb250LXNpemU6IDA7XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICB9YDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgICB9O1xuXG4gIHBhYyA9ICgpID0+IHRoaXMucGFjbWFuU3R5bGUoMCk7XG4gIG1hbiA9ICgpID0+IHRoaXMucGFjbWFuU3R5bGUoMSk7XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgbG9hZGluZyB9ID0gdGhpcy5wcm9wcztcblxuICAgIHJldHVybiBsb2FkaW5nID9cbiAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLnBhYygpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5tYW4oKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYmFsbFN0eWxlKDIpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5iYWxsU3R5bGUoMyl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmJhbGxTdHlsZSg0KX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYmFsbFN0eWxlKDUpfSAvPlxuICAgICAgPC9kaXY+IDogbnVsbDtcbiAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIG1hcmdpbjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZVVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzczogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuTG9hZGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgbG9hZGluZzogdHJ1ZSxcbiAgY29sb3I6ICcjMDAwMDAwJyxcbiAgc2l6ZTogMjUsXG4gIG1hcmdpbjogJzJweCcsXG4gIHNpemVVbml0OiAncHgnLFxuICBjc3M6ICcnXG59O1xuXG5jb25zdCBDb21wb25lbnQgPSBvbmx5VXBkYXRlRm9yS2V5cyhbJ2xvYWRpbmcnLCAnY29sb3InLCAnc2l6ZScsICdtYXJnaW4nLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n          }, _this.wrapper = function () {\n            var _this$props6 = _this.props,\n                size = _this$props6.size,\n                sizeUnit = _this$props6.sizeUnit;\n            var wrapper = (0, _core.css)('{position:relative;font-size:0;height:', '' + size + sizeUnit, ';width:', '' + size + sizeUnit, ';}label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9QYWNtYW5Mb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1GeUIiLCJmaWxlIjoic3JjL1BhY21hbkxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbi8vIFRoaXMgcmV0dXJucyBhbiBhbmltYXRpb25cbmNvbnN0IHBhY21hbiA9IFtcbiAga2V5ZnJhbWVzYFxuICAgICAgMCUge3RyYW5zZm9ybTogcm90YXRlKDBkZWcpfSBcbiAgICAgIDUwJSB7dHJhbnNmb3JtOiByb3RhdGUoLTQ0ZGVnKX1cbiAgICBgLFxuICBrZXlmcmFtZXNgXG4gICAgICAwJSB7dHJhbnNmb3JtOiByb3RhdGUoMGRlZyl9IFxuICAgICAgNTAlIHt0cmFuc2Zvcm06IHJvdGF0ZSg0NGRlZyl9XG4gICAgYFxuXTtcblxuY2xhc3MgTG9hZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBiYWxsID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGtleWZyYW1lc2BcbiAgICAgICAgICA3NSUge29wYWNpdHk6IDAuN31cbiAgICAgICAgICAxMDAlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZSgke2Akey00ICogc2l6ZX0ke3NpemVVbml0fWB9LCAke2Akey1zaXplIC8gNH0ke3NpemVVbml0fWB9KX1cbiAgICAgICAgYDtcbiAgICB9O1xuXG4gICAgYmFsbFN0eWxlID0gaSA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGNvbG9yLCBtYXJnaW4sIHNpemUsIHNpemVVbml0XG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplIC8gM30ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemUgLyAzfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIG1hcmdpbjogJHttYXJnaW59O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsICR7YCR7LXNpemUgLyA0fSR7c2l6ZVVuaXR9YH0pO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAke3NpemV9cHg7XG4gICAgICAgICAgICBsZWZ0OiAke2Ake3NpemUgKiA0fSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBhbmltYXRpb246ICR7dGhpcy5iYWxsKCl9IDFzICR7aSAqIDAuMjV9cyBpbmZpbml0ZSBsaW5lYXI7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgczEgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUsIHNpemVVbml0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gYCR7c2l6ZX0ke3NpemVVbml0fSBzb2xpZCB0cmFuc3BhcmVudGA7XG4gICAgfTtcblxuICAgIHMyID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCwgY29sb3IgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBgJHtzaXplfSR7c2l6ZVVuaXR9IHNvbGlkICR7Y29sb3J9YDtcbiAgICB9O1xuXG4gICAgcGFjbWFuU3R5bGUgPSBpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGNvbnN0IHMxID0gdGhpcy5zMSgpO1xuICAgICAgY29uc3QgczIgPSB0aGlzLnMyKCk7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgICAgICBib3JkZXItcmlnaHQ6ICR7czF9O1xuICAgICAgICAgICAgYm9yZGVyLXRvcDogJHtpID09PSAwID8gczEgOiBzMn07XG4gICAgICAgICAgICBib3JkZXItbGVmdDogJHtzMn07XG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAke2kgPT09IDAgPyBzMiA6IHMxfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke3BhY21hbltpXX0gMC44cyBpbmZpbml0ZSBlYXNlLWluLW91dDtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgICB3cmFwcGVyID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBmb250LXNpemU6IDA7XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICB9YDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgICB9O1xuXG4gIHBhYyA9ICgpID0+IHRoaXMucGFjbWFuU3R5bGUoMCk7XG4gIG1hbiA9ICgpID0+IHRoaXMucGFjbWFuU3R5bGUoMSk7XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgbG9hZGluZyB9ID0gdGhpcy5wcm9wcztcblxuICAgIHJldHVybiBsb2FkaW5nID9cbiAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLnBhYygpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5tYW4oKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYmFsbFN0eWxlKDIpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5iYWxsU3R5bGUoMyl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmJhbGxTdHlsZSg0KX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYmFsbFN0eWxlKDUpfSAvPlxuICAgICAgPC9kaXY+IDogbnVsbDtcbiAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIG1hcmdpbjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZVVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzczogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuTG9hZGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgbG9hZGluZzogdHJ1ZSxcbiAgY29sb3I6ICcjMDAwMDAwJyxcbiAgc2l6ZTogMjUsXG4gIG1hcmdpbjogJzJweCcsXG4gIHNpemVVbml0OiAncHgnLFxuICBjc3M6ICcnXG59O1xuXG5jb25zdCBDb21wb25lbnQgPSBvbmx5VXBkYXRlRm9yS2V5cyhbJ2xvYWRpbmcnLCAnY29sb3InLCAnc2l6ZScsICdtYXJnaW4nLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n            return _this.props.css ? (0, _core.css)(wrapper, ';', _this.props.css, 'label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9QYWNtYW5Mb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBGaUMiLCJmaWxlIjoic3JjL1BhY21hbkxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbi8vIFRoaXMgcmV0dXJucyBhbiBhbmltYXRpb25cbmNvbnN0IHBhY21hbiA9IFtcbiAga2V5ZnJhbWVzYFxuICAgICAgMCUge3RyYW5zZm9ybTogcm90YXRlKDBkZWcpfSBcbiAgICAgIDUwJSB7dHJhbnNmb3JtOiByb3RhdGUoLTQ0ZGVnKX1cbiAgICBgLFxuICBrZXlmcmFtZXNgXG4gICAgICAwJSB7dHJhbnNmb3JtOiByb3RhdGUoMGRlZyl9IFxuICAgICAgNTAlIHt0cmFuc2Zvcm06IHJvdGF0ZSg0NGRlZyl9XG4gICAgYFxuXTtcblxuY2xhc3MgTG9hZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBiYWxsID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGtleWZyYW1lc2BcbiAgICAgICAgICA3NSUge29wYWNpdHk6IDAuN31cbiAgICAgICAgICAxMDAlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZSgke2Akey00ICogc2l6ZX0ke3NpemVVbml0fWB9LCAke2Akey1zaXplIC8gNH0ke3NpemVVbml0fWB9KX1cbiAgICAgICAgYDtcbiAgICB9O1xuXG4gICAgYmFsbFN0eWxlID0gaSA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGNvbG9yLCBtYXJnaW4sIHNpemUsIHNpemVVbml0XG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplIC8gM30ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemUgLyAzfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIG1hcmdpbjogJHttYXJnaW59O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsICR7YCR7LXNpemUgLyA0fSR7c2l6ZVVuaXR9YH0pO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAke3NpemV9cHg7XG4gICAgICAgICAgICBsZWZ0OiAke2Ake3NpemUgKiA0fSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBhbmltYXRpb246ICR7dGhpcy5iYWxsKCl9IDFzICR7aSAqIDAuMjV9cyBpbmZpbml0ZSBsaW5lYXI7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgczEgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUsIHNpemVVbml0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gYCR7c2l6ZX0ke3NpemVVbml0fSBzb2xpZCB0cmFuc3BhcmVudGA7XG4gICAgfTtcblxuICAgIHMyID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCwgY29sb3IgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBgJHtzaXplfSR7c2l6ZVVuaXR9IHNvbGlkICR7Y29sb3J9YDtcbiAgICB9O1xuXG4gICAgcGFjbWFuU3R5bGUgPSBpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGNvbnN0IHMxID0gdGhpcy5zMSgpO1xuICAgICAgY29uc3QgczIgPSB0aGlzLnMyKCk7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgICAgICBib3JkZXItcmlnaHQ6ICR7czF9O1xuICAgICAgICAgICAgYm9yZGVyLXRvcDogJHtpID09PSAwID8gczEgOiBzMn07XG4gICAgICAgICAgICBib3JkZXItbGVmdDogJHtzMn07XG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAke2kgPT09IDAgPyBzMiA6IHMxfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke3BhY21hbltpXX0gMC44cyBpbmZpbml0ZSBlYXNlLWluLW91dDtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgICB3cmFwcGVyID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBmb250LXNpemU6IDA7XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICB9YDtcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgICB9O1xuXG4gIHBhYyA9ICgpID0+IHRoaXMucGFjbWFuU3R5bGUoMCk7XG4gIG1hbiA9ICgpID0+IHRoaXMucGFjbWFuU3R5bGUoMSk7XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgbG9hZGluZyB9ID0gdGhpcy5wcm9wcztcblxuICAgIHJldHVybiBsb2FkaW5nID9cbiAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLnBhYygpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5tYW4oKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYmFsbFN0eWxlKDIpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5iYWxsU3R5bGUoMyl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmJhbGxTdHlsZSg0KX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuYmFsbFN0eWxlKDUpfSAvPlxuICAgICAgPC9kaXY+IDogbnVsbDtcbiAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIG1hcmdpbjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZVVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzczogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuTG9hZGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgbG9hZGluZzogdHJ1ZSxcbiAgY29sb3I6ICcjMDAwMDAwJyxcbiAgc2l6ZTogMjUsXG4gIG1hcmdpbjogJzJweCcsXG4gIHNpemVVbml0OiAncHgnLFxuICBjc3M6ICcnXG59O1xuXG5jb25zdCBDb21wb25lbnQgPSBvbmx5VXBkYXRlRm9yS2V5cyhbJ2xvYWRpbmcnLCAnY29sb3InLCAnc2l6ZScsICdtYXJnaW4nLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */')) : wrapper;\n          }, _this.pac = function () {\n            return _this.pacmanStyle(0);\n          }, _this.man = function () {\n            return _this.pacmanStyle(1);\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.wrapper()\n            }, (0, _core.jsx)('div', {\n              css: this.pac()\n            }), (0, _core.jsx)('div', {\n              css: this.man()\n            }), (0, _core.jsx)('div', {\n              css: this.ballStyle(2)\n            }), (0, _core.jsx)('div', {\n              css: this.ballStyle(3)\n            }), (0, _core.jsx)('div', {\n              css: this.ballStyle(4)\n            }), (0, _core.jsx)('div', {\n              css: this.ballStyle(5)\n            })) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        color: _propTypes2.default.string,\n        size: _propTypes2.default.number,\n        margin: _propTypes2.default.string,\n        sizeUnit: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        color: '#000000',\n        size: 25,\n        margin: '2px',\n        sizeUnit: 'px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'size', 'margin', 'sizeUnit', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 58 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys);\n        global.PropagateLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n      25% {transform: translateX(-', 'rem) scale(0.75)} \\n      50% {transform: translateX(-', 'rem) scale(0.6)}\\n      75% {transform: translateX(-', 'rem) scale(0.5)}\\n      95% {transform: translateX(0rem) scale(1)}\\n    '], ['\\n      25% {transform: translateX(-', 'rem) scale(0.75)} \\n      50% {transform: translateX(-', 'rem) scale(0.6)}\\n      75% {transform: translateX(-', 'rem) scale(0.5)}\\n      95% {transform: translateX(0rem) scale(1)}\\n    ']),\n          _templateObject2 = _taggedTemplateLiteral(['\\n      25% {transform: translateX(-', 'rem) scale(0.75)} \\n      50% {transform: translateX(-', 'rem) scale(0.6)}\\n      75% {transform: translateX(-', 'rem) scale(0.6)}\\n      95% {transform: translateX(0rem) scale(1)}\\n    '], ['\\n      25% {transform: translateX(-', 'rem) scale(0.75)} \\n      50% {transform: translateX(-', 'rem) scale(0.6)}\\n      75% {transform: translateX(-', 'rem) scale(0.6)}\\n      95% {transform: translateX(0rem) scale(1)}\\n    ']),\n          _templateObject3 = _taggedTemplateLiteral(['\\n      25% {transform: translateX(-', 'rem) scale(0.75)}\\n      75% {transform: translateX(-', 'rem) scale(0.75)}\\n      95% {transform: translateX(0rem) scale(1)}\\n    '], ['\\n      25% {transform: translateX(-', 'rem) scale(0.75)}\\n      75% {transform: translateX(-', 'rem) scale(0.75)}\\n      95% {transform: translateX(0rem) scale(1)}\\n    ']),\n          _templateObject4 = _taggedTemplateLiteral(['\\n      25% {transform: translateX(', 'rem) scale(0.75)}\\n      75% {transform: translateX(', 'rem) scale(0.75)}\\n      95% {transform: translateX(0rem) scale(1)}\\n    '], ['\\n      25% {transform: translateX(', 'rem) scale(0.75)}\\n      75% {transform: translateX(', 'rem) scale(0.75)}\\n      95% {transform: translateX(0rem) scale(1)}\\n    ']),\n          _templateObject5 = _taggedTemplateLiteral(['\\n      25% {transform: translateX(', 'rem) scale(0.75)} \\n      50% {transform: translateX(', 'rem) scale(0.6)}\\n      75% {transform: translateX(', 'rem) scale(0.6)}\\n      95% {transform: translateX(0rem) scale(1)}\\n    '], ['\\n      25% {transform: translateX(', 'rem) scale(0.75)} \\n      50% {transform: translateX(', 'rem) scale(0.6)}\\n      75% {transform: translateX(', 'rem) scale(0.6)}\\n      95% {transform: translateX(0rem) scale(1)}\\n    ']),\n          _templateObject6 = _taggedTemplateLiteral(['\\n      25% {transform: translateX(', 'rem) scale(0.75)} \\n      50% {transform: translateX(', 'rem) scale(0.6)}\\n      75% {transform: translateX(', 'rem) scale(0.5)}\\n      95% {transform: translateX(0rem) scale(1)}\\n    '], ['\\n      25% {transform: translateX(', 'rem) scale(0.75)} \\n      50% {transform: translateX(', 'rem) scale(0.6)}\\n      75% {transform: translateX(', 'rem) scale(0.5)}\\n      95% {transform: translateX(0rem) scale(1)}\\n    ']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      } // 1.5 4.5 7.5\n\n\n      var distance = [1, 3, 5];\n      var propagate = [(0, _core.keyframes)(_templateObject, distance[0], distance[1], distance[2]), (0, _core.keyframes)(_templateObject2, distance[0], distance[1], distance[1]), (0, _core.keyframes)(_templateObject3, distance[0], distance[0]), (0, _core.keyframes)(_templateObject4, distance[0], distance[0]), (0, _core.keyframes)(_templateObject5, distance[0], distance[1], distance[1]), (0, _core.keyframes)(_templateObject6, distance[0], distance[1], distance[2])];\n\n      var _ref = process.env.NODE_ENV === 'production' ? {\n        name: '19gs9ir-wrapper',\n        styles: '{position:relative;}label:wrapper;'\n      } : {\n        name: '19gs9ir-wrapper',\n        styles: '{position:relative;}label:wrapper;',\n        map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Qcm9wYWdhdGVMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdFdUIiLCJmaWxlIjoic3JjL1Byb3BhZ2F0ZUxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbi8vIDEuNSA0LjUgNy41XG5sZXQgZGlzdGFuY2UgPSBbMSwgMywgNV07XG5cbmNvbnN0IHByb3BhZ2F0ZSA9IFtcbiAga2V5ZnJhbWVzYFxuICAgICAgMjUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLSR7ZGlzdGFuY2VbMF19cmVtKSBzY2FsZSgwLjc1KX0gXG4gICAgICA1MCUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgtJHtkaXN0YW5jZVsxXX1yZW0pIHNjYWxlKDAuNil9XG4gICAgICA3NSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgtJHtkaXN0YW5jZVsyXX1yZW0pIHNjYWxlKDAuNSl9XG4gICAgICA5NSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgwcmVtKSBzY2FsZSgxKX1cbiAgICBgLFxuICBrZXlmcmFtZXNgXG4gICAgICAyNSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgtJHtkaXN0YW5jZVswXX1yZW0pIHNjYWxlKDAuNzUpfSBcbiAgICAgIDUwJSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0ke2Rpc3RhbmNlWzFdfXJlbSkgc2NhbGUoMC42KX1cbiAgICAgIDc1JSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0ke2Rpc3RhbmNlWzFdfXJlbSkgc2NhbGUoMC42KX1cbiAgICAgIDk1JSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKDByZW0pIHNjYWxlKDEpfVxuICAgIGAsXG4gIGtleWZyYW1lc2BcbiAgICAgIDI1JSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0ke2Rpc3RhbmNlWzBdfXJlbSkgc2NhbGUoMC43NSl9XG4gICAgICA3NSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgtJHtkaXN0YW5jZVswXX1yZW0pIHNjYWxlKDAuNzUpfVxuICAgICAgOTUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMHJlbSkgc2NhbGUoMSl9XG4gICAgYCxcbiAga2V5ZnJhbWVzYFxuICAgICAgMjUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHtkaXN0YW5jZVswXX1yZW0pIHNjYWxlKDAuNzUpfVxuICAgICAgNzUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHtkaXN0YW5jZVswXX1yZW0pIHNjYWxlKDAuNzUpfVxuICAgICAgOTUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMHJlbSkgc2NhbGUoMSl9XG4gICAgYCxcbiAga2V5ZnJhbWVzYFxuICAgICAgMjUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHtkaXN0YW5jZVswXX1yZW0pIHNjYWxlKDAuNzUpfSBcbiAgICAgIDUwJSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKCR7ZGlzdGFuY2VbMV19cmVtKSBzY2FsZSgwLjYpfVxuICAgICAgNzUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHtkaXN0YW5jZVsxXX1yZW0pIHNjYWxlKDAuNil9XG4gICAgICA5NSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgwcmVtKSBzY2FsZSgxKX1cbiAgICBgLFxuICBrZXlmcmFtZXNgXG4gICAgICAyNSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgke2Rpc3RhbmNlWzBdfXJlbSkgc2NhbGUoMC43NSl9IFxuICAgICAgNTAlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHtkaXN0YW5jZVsxXX1yZW0pIHNjYWxlKDAuNil9XG4gICAgICA3NSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgke2Rpc3RhbmNlWzJdfXJlbSkgc2NhbGUoMC41KX1cbiAgICAgIDk1JSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKDByZW0pIHNjYWxlKDEpfVxuICAgIGBcbl07XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSBpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQsIGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogJHtgJHtzaXplIC8gM30ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y29sb3J9O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke3Byb3BhZ2F0ZVtpXX0gMS41cyAgaW5maW5pdGU7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbiAgICAgICAgfWA7XG4gICAgfTtcblxuXG4gIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIH1gO1xuXG4gICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIGxvYWRpbmcgP1xuICAgICAgPGRpdiBjc3M9e3RoaXMud3JhcHBlcigpfT5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDEpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSgyKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMyl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDQpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSg1KX0gLz5cbiAgICAgIDwvZGl2PiA6IG51bGw7XG4gIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBzaXplOiAxNSxcbiAgY29sb3I6ICcjMDAwMDAwJyxcbiAgc2l6ZVVuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdzaXplJywgJ3NpemVVbml0JywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */'\n      };\n\n      var Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref2;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref2, [this].concat(args))), _this), _this.style = function (i) {\n            var _this$props = _this.props,\n                size = _this$props.size,\n                sizeUnit = _this$props.sizeUnit,\n                color = _this$props.color;\n            return (0, _core.css)('{position:absolute;font-size:', '' + size / 3 + sizeUnit, ';width:', '' + size + sizeUnit, ';height:', '' + size + sizeUnit, ';background:', color, ';border-radius:50%;animation:', propagate[i], ' 1.5s  infinite;animation-fill-mode:forwards;}label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Qcm9wYWdhdGVMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtEZ0IiLCJmaWxlIjoic3JjL1Byb3BhZ2F0ZUxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbi8vIDEuNSA0LjUgNy41XG5sZXQgZGlzdGFuY2UgPSBbMSwgMywgNV07XG5cbmNvbnN0IHByb3BhZ2F0ZSA9IFtcbiAga2V5ZnJhbWVzYFxuICAgICAgMjUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLSR7ZGlzdGFuY2VbMF19cmVtKSBzY2FsZSgwLjc1KX0gXG4gICAgICA1MCUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgtJHtkaXN0YW5jZVsxXX1yZW0pIHNjYWxlKDAuNil9XG4gICAgICA3NSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgtJHtkaXN0YW5jZVsyXX1yZW0pIHNjYWxlKDAuNSl9XG4gICAgICA5NSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgwcmVtKSBzY2FsZSgxKX1cbiAgICBgLFxuICBrZXlmcmFtZXNgXG4gICAgICAyNSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgtJHtkaXN0YW5jZVswXX1yZW0pIHNjYWxlKDAuNzUpfSBcbiAgICAgIDUwJSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0ke2Rpc3RhbmNlWzFdfXJlbSkgc2NhbGUoMC42KX1cbiAgICAgIDc1JSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0ke2Rpc3RhbmNlWzFdfXJlbSkgc2NhbGUoMC42KX1cbiAgICAgIDk1JSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKDByZW0pIHNjYWxlKDEpfVxuICAgIGAsXG4gIGtleWZyYW1lc2BcbiAgICAgIDI1JSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0ke2Rpc3RhbmNlWzBdfXJlbSkgc2NhbGUoMC43NSl9XG4gICAgICA3NSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgtJHtkaXN0YW5jZVswXX1yZW0pIHNjYWxlKDAuNzUpfVxuICAgICAgOTUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMHJlbSkgc2NhbGUoMSl9XG4gICAgYCxcbiAga2V5ZnJhbWVzYFxuICAgICAgMjUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHtkaXN0YW5jZVswXX1yZW0pIHNjYWxlKDAuNzUpfVxuICAgICAgNzUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHtkaXN0YW5jZVswXX1yZW0pIHNjYWxlKDAuNzUpfVxuICAgICAgOTUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMHJlbSkgc2NhbGUoMSl9XG4gICAgYCxcbiAga2V5ZnJhbWVzYFxuICAgICAgMjUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHtkaXN0YW5jZVswXX1yZW0pIHNjYWxlKDAuNzUpfSBcbiAgICAgIDUwJSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKCR7ZGlzdGFuY2VbMV19cmVtKSBzY2FsZSgwLjYpfVxuICAgICAgNzUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHtkaXN0YW5jZVsxXX1yZW0pIHNjYWxlKDAuNil9XG4gICAgICA5NSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgwcmVtKSBzY2FsZSgxKX1cbiAgICBgLFxuICBrZXlmcmFtZXNgXG4gICAgICAyNSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgke2Rpc3RhbmNlWzBdfXJlbSkgc2NhbGUoMC43NSl9IFxuICAgICAgNTAlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHtkaXN0YW5jZVsxXX1yZW0pIHNjYWxlKDAuNil9XG4gICAgICA3NSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgke2Rpc3RhbmNlWzJdfXJlbSkgc2NhbGUoMC41KX1cbiAgICAgIDk1JSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKDByZW0pIHNjYWxlKDEpfVxuICAgIGBcbl07XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSBpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQsIGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogJHtgJHtzaXplIC8gM30ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y29sb3J9O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke3Byb3BhZ2F0ZVtpXX0gMS41cyAgaW5maW5pdGU7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbiAgICAgICAgfWA7XG4gICAgfTtcblxuXG4gIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIH1gO1xuXG4gICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIGxvYWRpbmcgP1xuICAgICAgPGRpdiBjc3M9e3RoaXMud3JhcHBlcigpfT5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDEpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSgyKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMyl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDQpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSg1KX0gLz5cbiAgICAgIDwvZGl2PiA6IG51bGw7XG4gIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBzaXplOiAxNSxcbiAgY29sb3I6ICcjMDAwMDAwJyxcbiAgc2l6ZVVuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdzaXplJywgJ3NpemVVbml0JywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */'));\n          }, _this.wrapper = function () {\n            var wrapper = _ref;\n            return _this.props.css ? (0, _core.css)(wrapper, ';', _this.props.css, 'label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Qcm9wYWdhdGVMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9FK0IiLCJmaWxlIjoic3JjL1Byb3BhZ2F0ZUxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbi8vIDEuNSA0LjUgNy41XG5sZXQgZGlzdGFuY2UgPSBbMSwgMywgNV07XG5cbmNvbnN0IHByb3BhZ2F0ZSA9IFtcbiAga2V5ZnJhbWVzYFxuICAgICAgMjUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLSR7ZGlzdGFuY2VbMF19cmVtKSBzY2FsZSgwLjc1KX0gXG4gICAgICA1MCUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgtJHtkaXN0YW5jZVsxXX1yZW0pIHNjYWxlKDAuNil9XG4gICAgICA3NSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgtJHtkaXN0YW5jZVsyXX1yZW0pIHNjYWxlKDAuNSl9XG4gICAgICA5NSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgwcmVtKSBzY2FsZSgxKX1cbiAgICBgLFxuICBrZXlmcmFtZXNgXG4gICAgICAyNSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgtJHtkaXN0YW5jZVswXX1yZW0pIHNjYWxlKDAuNzUpfSBcbiAgICAgIDUwJSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0ke2Rpc3RhbmNlWzFdfXJlbSkgc2NhbGUoMC42KX1cbiAgICAgIDc1JSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0ke2Rpc3RhbmNlWzFdfXJlbSkgc2NhbGUoMC42KX1cbiAgICAgIDk1JSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKDByZW0pIHNjYWxlKDEpfVxuICAgIGAsXG4gIGtleWZyYW1lc2BcbiAgICAgIDI1JSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0ke2Rpc3RhbmNlWzBdfXJlbSkgc2NhbGUoMC43NSl9XG4gICAgICA3NSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgtJHtkaXN0YW5jZVswXX1yZW0pIHNjYWxlKDAuNzUpfVxuICAgICAgOTUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMHJlbSkgc2NhbGUoMSl9XG4gICAgYCxcbiAga2V5ZnJhbWVzYFxuICAgICAgMjUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHtkaXN0YW5jZVswXX1yZW0pIHNjYWxlKDAuNzUpfVxuICAgICAgNzUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHtkaXN0YW5jZVswXX1yZW0pIHNjYWxlKDAuNzUpfVxuICAgICAgOTUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMHJlbSkgc2NhbGUoMSl9XG4gICAgYCxcbiAga2V5ZnJhbWVzYFxuICAgICAgMjUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHtkaXN0YW5jZVswXX1yZW0pIHNjYWxlKDAuNzUpfSBcbiAgICAgIDUwJSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKCR7ZGlzdGFuY2VbMV19cmVtKSBzY2FsZSgwLjYpfVxuICAgICAgNzUlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHtkaXN0YW5jZVsxXX1yZW0pIHNjYWxlKDAuNil9XG4gICAgICA5NSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgwcmVtKSBzY2FsZSgxKX1cbiAgICBgLFxuICBrZXlmcmFtZXNgXG4gICAgICAyNSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgke2Rpc3RhbmNlWzBdfXJlbSkgc2NhbGUoMC43NSl9IFxuICAgICAgNTAlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHtkaXN0YW5jZVsxXX1yZW0pIHNjYWxlKDAuNil9XG4gICAgICA3NSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgke2Rpc3RhbmNlWzJdfXJlbSkgc2NhbGUoMC41KX1cbiAgICAgIDk1JSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKDByZW0pIHNjYWxlKDEpfVxuICAgIGBcbl07XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSBpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQsIGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogJHtgJHtzaXplIC8gM30ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICR7Y29sb3J9O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke3Byb3BhZ2F0ZVtpXX0gMS41cyAgaW5maW5pdGU7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbiAgICAgICAgfWA7XG4gICAgfTtcblxuXG4gIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIH1gO1xuXG4gICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIGxvYWRpbmcgP1xuICAgICAgPGRpdiBjc3M9e3RoaXMud3JhcHBlcigpfT5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDEpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSgyKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMyl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDQpfSAvPlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSg1KX0gLz5cbiAgICAgIDwvZGl2PiA6IG51bGw7XG4gIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBzaXplOiAxNSxcbiAgY29sb3I6ICcjMDAwMDAwJyxcbiAgc2l6ZVVuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdzaXplJywgJ3NpemVVbml0JywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */')) : wrapper;\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.wrapper()\n            }, (0, _core.jsx)('div', {\n              css: this.style(0)\n            }), (0, _core.jsx)('div', {\n              css: this.style(1)\n            }), (0, _core.jsx)('div', {\n              css: this.style(2)\n            }), (0, _core.jsx)('div', {\n              css: this.style(3)\n            }), (0, _core.jsx)('div', {\n              css: this.style(4)\n            }), (0, _core.jsx)('div', {\n              css: this.style(5)\n            })) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        size: _propTypes2.default.number,\n        color: _propTypes2.default.string,\n        sizeUnit: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        size: 15,\n        color: '#000000',\n        sizeUnit: 'px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'size', 'sizeUnit', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 59 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys);\n        global.PulseLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n  0% {transform: scale(1);opacity: 1} \\n  45% {transform: scale(0.1);opacity: 0.7}\\n  80% {transform: scale(1);opacity: 1}\\n'], ['\\n  0% {transform: scale(1);opacity: 1} \\n  45% {transform: scale(0.1);opacity: 0.7}\\n  80% {transform: scale(1);opacity: 1}\\n']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      } // This returns an animation\n\n\n      var pulse = (0, _core.keyframes)(_templateObject);\n\n      var Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {\n            var _this$props = _this.props,\n                color = _this$props.color,\n                size = _this$props.size,\n                sizeUnit = _this$props.sizeUnit,\n                margin = _this$props.margin;\n            return (0, _core.css)('{background-color:', color, ';width:', '' + size + sizeUnit, ';height:', '' + size + sizeUnit, ';margin:', margin, ';border-radius:100%;display:inline-block;animation:', pulse, ' 0.75s ', i * 0.12, 's infinite cubic-bezier(.2,.68,.18,1.08);animation-fill-mode:both;}label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9QdWxzZUxvYWRlci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUJnQiIsImZpbGUiOiJzcmMvUHVsc2VMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGtleWZyYW1lcywgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBvbmx5VXBkYXRlRm9yS2V5cyBmcm9tICdyZWNvbXBvc2Uvb25seVVwZGF0ZUZvcktleXMnO1xuXG4vLyBUaGlzIHJldHVybnMgYW4gYW5pbWF0aW9uXG5jb25zdCBwdWxzZSA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogc2NhbGUoMSk7b3BhY2l0eTogMX0gXG4gIDQ1JSB7dHJhbnNmb3JtOiBzY2FsZSgwLjEpO29wYWNpdHk6IDAuN31cbiAgODAlIHt0cmFuc2Zvcm06IHNjYWxlKDEpO29wYWNpdHk6IDF9XG5gO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0eWxlID0gaSA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGNvbG9yLCBzaXplLCBzaXplVW5pdCwgbWFyZ2luXG4gICAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgIHdpZHRoOiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIGhlaWdodDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBtYXJnaW46ICR7bWFyZ2lufTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7cHVsc2V9IDAuNzVzICR7aSAqIDAuMTJ9cyBpbmZpbml0ZSBjdWJpYy1iZXppZXIoLjIsLjY4LC4xOCwxLjA4KTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgIH1gO1xuICAgIH07XG5cblxuICAgIHdyYXBwZXIgPSAoKSA9PiB0aGlzLnByb3BzLmNzcyB8fCAnJztcblxuICAgIHJlbmRlcigpIHtcbiAgICAgIGNvbnN0IHsgbG9hZGluZyB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGxvYWRpbmcgP1xuICAgICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDEpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDIpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDMpfSAvPlxuICAgICAgICA8L2Rpdj4gOiBudWxsO1xuICAgIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuICBtYXJnaW46IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemVVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemU6IDE1LFxuICBtYXJnaW46ICcycHgnLFxuICBzaXplVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3NpemUnLCAnbWFyZ2luJywgJ3NpemVVbml0JywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */'));\n          }, _this.wrapper = function () {\n            return _this.props.css || '';\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.wrapper()\n            }, (0, _core.jsx)('div', {\n              css: this.style(1)\n            }), (0, _core.jsx)('div', {\n              css: this.style(2)\n            }), (0, _core.jsx)('div', {\n              css: this.style(3)\n            })) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        color: _propTypes2.default.string,\n        size: _propTypes2.default.number,\n        margin: _propTypes2.default.string,\n        sizeUnit: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        color: '#000000',\n        size: 15,\n        margin: '2px',\n        sizeUnit: 'px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'size', 'margin', 'sizeUnit', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 60 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys);\n        global.RingLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n  0% {transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg)}\\n  100% {transform: rotateX(180deg) rotateY(360deg) rotateZ(360deg)}\\n'], ['\\n  0% {transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg)}\\n  100% {transform: rotateX(180deg) rotateY(360deg) rotateZ(360deg)}\\n']),\n          _templateObject2 = _taggedTemplateLiteral(['\\n  0% {transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg)}\\n  100% {transform: rotateX(360deg) rotateY(180deg) rotateZ(360deg)}\\n'], ['\\n  0% {transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg)}\\n  100% {transform: rotateX(360deg) rotateY(180deg) rotateZ(360deg)}\\n']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      }\n\n      var right = (0, _core.keyframes)(_templateObject);\n      var left = (0, _core.keyframes)(_templateObject2);\n\n      var Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {\n            var _this$props = _this.props,\n                size = _this$props.size,\n                sizeUnit = _this$props.sizeUnit,\n                color = _this$props.color;\n            return (0, _core.css)('{position:absolute;top:0;left:0;width:', '' + size + sizeUnit, ';height:', '' + size + sizeUnit, ';border:', '' + size / 10 + sizeUnit, ' solid ', color, ';opacity:0.4;border-radius:100%;animation-fill-mode:forwards;perspective:800px;animation:', i === 1 ? right : left, ' 2s 0s infinite linear;}label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9SaW5nTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxQmdCIiwiZmlsZSI6InNyYy9SaW5nTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuY29uc3QgcmlnaHQgPSBrZXlmcmFtZXNgXG4gIDAlIHt0cmFuc2Zvcm06IHJvdGF0ZVgoMGRlZykgcm90YXRlWSgwZGVnKSByb3RhdGVaKDBkZWcpfVxuICAxMDAlIHt0cmFuc2Zvcm06IHJvdGF0ZVgoMTgwZGVnKSByb3RhdGVZKDM2MGRlZykgcm90YXRlWigzNjBkZWcpfVxuYDtcblxuY29uc3QgbGVmdCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogcm90YXRlWCgwZGVnKSByb3RhdGVZKDBkZWcpIHJvdGF0ZVooMGRlZyl9XG4gIDEwMCUge3RyYW5zZm9ybTogcm90YXRlWCgzNjBkZWcpIHJvdGF0ZVkoMTgwZGVnKSByb3RhdGVaKDM2MGRlZyl9XG5gO1xuXG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSBpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQsIGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgYm9yZGVyOiAke2Ake3NpemUgLyAxMH0ke3NpemVVbml0fWB9IHNvbGlkICR7Y29sb3J9O1xuICAgICAgICAgICAgb3BhY2l0eTogMC40O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICAgICAgICAgICAgcGVyc3BlY3RpdmU6IDgwMHB4O1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2kgPT09IDEgPyByaWdodCA6IGxlZnR9IDJzIDBzIGluZmluaXRlIGxpbmVhcjtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICAgIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUsIHNpemVVbml0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICBjb25zdCB3cmFwcGVyID0gY3NzYHsgICAgICAgIFxuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgfWA7XG5cbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake3dyYXBwZXJ9OyR7dGhpcy5wcm9wcy5jc3N9YCA6IHdyYXBwZXI7XG4gICAgfTtcblxuICAgIHJlbmRlcigpIHtcbiAgICAgIGNvbnN0IHsgbG9hZGluZyB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGxvYWRpbmcgP1xuICAgICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDEpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDIpfSAvPlxuICAgICAgICA8L2Rpdj4gOiBudWxsO1xuICAgIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuICBzaXplVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICBzaXplOiA2MCxcbiAgc2l6ZVVuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdzaXplJywgJ3NpemVVbml0JywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */'));\n          }, _this.wrapper = function () {\n            var _this$props2 = _this.props,\n                size = _this$props2.size,\n                sizeUnit = _this$props2.sizeUnit;\n            var wrapper = (0, _core.css)('{width:', '' + size + sizeUnit, ';height:', '' + size + sizeUnit, ';position:relative;}label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9SaW5nTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1Q3lCIiwiZmlsZSI6InNyYy9SaW5nTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuY29uc3QgcmlnaHQgPSBrZXlmcmFtZXNgXG4gIDAlIHt0cmFuc2Zvcm06IHJvdGF0ZVgoMGRlZykgcm90YXRlWSgwZGVnKSByb3RhdGVaKDBkZWcpfVxuICAxMDAlIHt0cmFuc2Zvcm06IHJvdGF0ZVgoMTgwZGVnKSByb3RhdGVZKDM2MGRlZykgcm90YXRlWigzNjBkZWcpfVxuYDtcblxuY29uc3QgbGVmdCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogcm90YXRlWCgwZGVnKSByb3RhdGVZKDBkZWcpIHJvdGF0ZVooMGRlZyl9XG4gIDEwMCUge3RyYW5zZm9ybTogcm90YXRlWCgzNjBkZWcpIHJvdGF0ZVkoMTgwZGVnKSByb3RhdGVaKDM2MGRlZyl9XG5gO1xuXG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSBpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQsIGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgYm9yZGVyOiAke2Ake3NpemUgLyAxMH0ke3NpemVVbml0fWB9IHNvbGlkICR7Y29sb3J9O1xuICAgICAgICAgICAgb3BhY2l0eTogMC40O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICAgICAgICAgICAgcGVyc3BlY3RpdmU6IDgwMHB4O1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2kgPT09IDEgPyByaWdodCA6IGxlZnR9IDJzIDBzIGluZmluaXRlIGxpbmVhcjtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICAgIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUsIHNpemVVbml0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICBjb25zdCB3cmFwcGVyID0gY3NzYHsgICAgICAgIFxuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgfWA7XG5cbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake3dyYXBwZXJ9OyR7dGhpcy5wcm9wcy5jc3N9YCA6IHdyYXBwZXI7XG4gICAgfTtcblxuICAgIHJlbmRlcigpIHtcbiAgICAgIGNvbnN0IHsgbG9hZGluZyB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGxvYWRpbmcgP1xuICAgICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDEpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDIpfSAvPlxuICAgICAgICA8L2Rpdj4gOiBudWxsO1xuICAgIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuICBzaXplVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICBzaXplOiA2MCxcbiAgc2l6ZVVuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdzaXplJywgJ3NpemVVbml0JywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */'));\n            return _this.props.css ? (0, _core.css)(wrapper, ';', _this.props.css, 'label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9SaW5nTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2Q2lDIiwiZmlsZSI6InNyYy9SaW5nTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuY29uc3QgcmlnaHQgPSBrZXlmcmFtZXNgXG4gIDAlIHt0cmFuc2Zvcm06IHJvdGF0ZVgoMGRlZykgcm90YXRlWSgwZGVnKSByb3RhdGVaKDBkZWcpfVxuICAxMDAlIHt0cmFuc2Zvcm06IHJvdGF0ZVgoMTgwZGVnKSByb3RhdGVZKDM2MGRlZykgcm90YXRlWigzNjBkZWcpfVxuYDtcblxuY29uc3QgbGVmdCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogcm90YXRlWCgwZGVnKSByb3RhdGVZKDBkZWcpIHJvdGF0ZVooMGRlZyl9XG4gIDEwMCUge3RyYW5zZm9ybTogcm90YXRlWCgzNjBkZWcpIHJvdGF0ZVkoMTgwZGVnKSByb3RhdGVaKDM2MGRlZyl9XG5gO1xuXG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSBpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQsIGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgYm9yZGVyOiAke2Ake3NpemUgLyAxMH0ke3NpemVVbml0fWB9IHNvbGlkICR7Y29sb3J9O1xuICAgICAgICAgICAgb3BhY2l0eTogMC40O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICAgICAgICAgICAgcGVyc3BlY3RpdmU6IDgwMHB4O1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2kgPT09IDEgPyByaWdodCA6IGxlZnR9IDJzIDBzIGluZmluaXRlIGxpbmVhcjtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICAgIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUsIHNpemVVbml0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICBjb25zdCB3cmFwcGVyID0gY3NzYHsgICAgICAgIFxuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgfWA7XG5cbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNzcyA/IGNzc2Ake3dyYXBwZXJ9OyR7dGhpcy5wcm9wcy5jc3N9YCA6IHdyYXBwZXI7XG4gICAgfTtcblxuICAgIHJlbmRlcigpIHtcbiAgICAgIGNvbnN0IHsgbG9hZGluZyB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGxvYWRpbmcgP1xuICAgICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDEpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDIpfSAvPlxuICAgICAgICA8L2Rpdj4gOiBudWxsO1xuICAgIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuICBzaXplVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICBzaXplOiA2MCxcbiAgc2l6ZVVuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdzaXplJywgJ3NpemVVbml0JywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */')) : wrapper;\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.wrapper()\n            }, (0, _core.jsx)('div', {\n              css: this.style(1)\n            }), (0, _core.jsx)('div', {\n              css: this.style(2)\n            })) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        color: _propTypes2.default.string,\n        size: _propTypes2.default.number,\n        sizeUnit: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        color: '#000000',\n        size: 60,\n        sizeUnit: 'px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'size', 'sizeUnit', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 61 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys);\n        global.RiseLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n  0% {transform: scale(1.1)}\\n  25% {translateY(-', 'px)}\\n  50% {transform: scale(0.4)}\\n  75% {transform: translateY(', 'px)}\\n  100% {transform: translateY(0) scale(1.0)}\\n'], ['\\n  0% {transform: scale(1.1)}\\n  25% {translateY(-', 'px)}\\n  50% {transform: scale(0.4)}\\n  75% {transform: translateY(', 'px)}\\n  100% {transform: translateY(0) scale(1.0)}\\n']),\n          _templateObject2 = _taggedTemplateLiteral(['\\n  0% {transform: scale(0.4)}\\n  25% {translateY(', 'px)}\\n  50% {transform: scale(1.1)}\\n  75% {transform: translateY(', 'px)}\\n  100% {transform: translateY(0) scale(0.75)}\\n'], ['\\n  0% {transform: scale(0.4)}\\n  25% {translateY(', 'px)}\\n  50% {transform: scale(1.1)}\\n  75% {transform: translateY(', 'px)}\\n  100% {transform: translateY(0) scale(0.75)}\\n']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      }\n\n      var riseAmount = 30;\n      var even = (0, _core.keyframes)(_templateObject, riseAmount, riseAmount);\n      var odd = (0, _core.keyframes)(_templateObject2, riseAmount, -riseAmount);\n\n      var Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {\n            var _this$props = _this.props,\n                color = _this$props.color,\n                size = _this$props.size,\n                sizeUnit = _this$props.sizeUnit,\n                margin = _this$props.margin;\n            return (0, _core.css)('{background-color:', color, ';width:', '' + size + sizeUnit, ';height:', '' + size + sizeUnit, ';margin:', '' + margin, ';border-radius:100%;display:inline-block;animation:', i % 2 === 0 ? even : odd, ' 1s 0s infinite cubic-bezier(.15,.46,.9,.6);animation-fill-mode:both;}label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9SaXNlTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4QmdCIiwiZmlsZSI6InNyYy9SaXNlTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuY29uc3QgcmlzZUFtb3VudCA9IDMwO1xuXG5jb25zdCBldmVuID0ga2V5ZnJhbWVzYFxuICAwJSB7dHJhbnNmb3JtOiBzY2FsZSgxLjEpfVxuICAyNSUge3RyYW5zbGF0ZVkoLSR7cmlzZUFtb3VudH1weCl9XG4gIDUwJSB7dHJhbnNmb3JtOiBzY2FsZSgwLjQpfVxuICA3NSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWSgke3Jpc2VBbW91bnR9cHgpfVxuICAxMDAlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgc2NhbGUoMS4wKX1cbmA7XG5cbmNvbnN0IG9kZCA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogc2NhbGUoMC40KX1cbiAgMjUlIHt0cmFuc2xhdGVZKCR7cmlzZUFtb3VudH1weCl9XG4gIDUwJSB7dHJhbnNmb3JtOiBzY2FsZSgxLjEpfVxuICA3NSUge3RyYW5zZm9ybTogdHJhbnNsYXRlWSgkey1yaXNlQW1vdW50fXB4KX1cbiAgMTAwJSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHNjYWxlKDAuNzUpfVxuYDtcblxuY2xhc3MgTG9hZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdHlsZSA9IGkgPT4ge1xuICAgICAgY29uc3Qge1xuICAgICAgICBjb2xvciwgc2l6ZSwgc2l6ZVVuaXQsIG1hcmdpblxuICAgICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgbWFyZ2luOiAke2Ake21hcmdpbn1gfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7aSAlIDIgPT09IDAgPyBldmVuIDogb2RkfSAxcyAwcyBpbmZpbml0ZSBjdWJpYy1iZXppZXIoLjE1LC40NiwuOSwuNik7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gICAgd3JhcHBlciA9ICgpID0+IHRoaXMucHJvcHMuY3NzIHx8ICcnO1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBsb2FkaW5nIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMSl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMil9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoMyl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoNCl9IC8+XG4gICAgICAgICAgPGRpdiBjc3M9e3RoaXMuc3R5bGUoNSl9IC8+XG4gICAgICAgIDwvZGl2PiA6IG51bGw7XG4gICAgfVxufVxuXG5Mb2FkZXIucHJvcFR5cGVzID0ge1xuICBsb2FkaW5nOiBQcm9wVHlwZXMuYm9vbCxcbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIG1hcmdpbjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZVVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzczogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuTG9hZGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgbG9hZGluZzogdHJ1ZSxcbiAgY29sb3I6ICcjMDAwMDAwJyxcbiAgc2l6ZTogMTUsXG4gIG1hcmdpbjogJzJweCcsXG4gIHNpemVVbml0OiAncHgnLFxuICBjc3M6ICcnXG59O1xuXG5jb25zdCBDb21wb25lbnQgPSBvbmx5VXBkYXRlRm9yS2V5cyhbJ2xvYWRpbmcnLCAnY29sb3InLCAnc2l6ZScsICdtYXJnaW4nLCAnc2l6ZVVuaXQnLCAnY3NzJ10pKExvYWRlcik7XG5Db21wb25lbnQuZGVmYXVsdFByb3BzID0gTG9hZGVyLmRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiJdfQ== */'));\n          }, _this.wrapper = function () {\n            return _this.props.css || '';\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.wrapper()\n            }, (0, _core.jsx)('div', {\n              css: this.style(1)\n            }), (0, _core.jsx)('div', {\n              css: this.style(2)\n            }), (0, _core.jsx)('div', {\n              css: this.style(3)\n            }), (0, _core.jsx)('div', {\n              css: this.style(4)\n            }), (0, _core.jsx)('div', {\n              css: this.style(5)\n            })) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        color: _propTypes2.default.string,\n        size: _propTypes2.default.number,\n        margin: _propTypes2.default.string,\n        sizeUnit: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        color: '#000000',\n        size: 15,\n        margin: '2px',\n        sizeUnit: 'px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'size', 'margin', 'sizeUnit', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 62 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys);\n        global.RotateLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n  0% {transform: rotate(0deg)}\\n  50% {transform: rotate(180deg)}\\n  100% {transform: rotate(360deg)}\\n'], ['\\n  0% {transform: rotate(0deg)}\\n  50% {transform: rotate(180deg)}\\n  100% {transform: rotate(360deg)}\\n']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      }\n\n      var rotate = (0, _core.keyframes)(_templateObject);\n\n      var Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {\n            return (0, _core.css)('{opacity:0.8;position:absolute;top:0;left:', i % 2 ? -28 : 25, 'px;}label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Sb3RhdGVMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWFrQiIsImZpbGUiOiJzcmMvUm90YXRlTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuY29uc3Qgcm90YXRlID0ga2V5ZnJhbWVzYFxuICAwJSB7dHJhbnNmb3JtOiByb3RhdGUoMGRlZyl9XG4gIDUwJSB7dHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKX1cbiAgMTAwJSB7dHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0eWxlID0gaSA9PiBjc3Nge1xuICAgICAgICBvcGFjaXR5OiAwLjg7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAke2kgJSAyID8gLTI4IDogMjV9cHg7XG4gICAgfWA7XG5cbiAgICBiYWxsID0gKCkgPT4ge1xuICAgICAgY29uc3Qge1xuICAgICAgICBjb2xvciwgc2l6ZSwgc2l6ZVVuaXQsIG1hcmdpblxuICAgICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgbWFyZ2luOiAke21hcmdpbn07XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgICAgICB9YDtcbiAgICB9O1xuXG4gIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgY29uc3Qgd3JhcHBlciA9IGNzc2BcbiAgICAgICAgICAgICR7dGhpcy5iYWxsKCl9O1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgICAgICAgICAgIGFuaW1hdGlvbjogJHtyb3RhdGV9IDFzIDBzIGluZmluaXRlIGN1YmljLWJlemllciguNywtLjEzLC4yMiwuODYpOyAgICAgICAgXG4gICAgICAgIGA7XG5cbiAgICByZXR1cm4gdGhpcy5wcm9wcy5jc3MgPyBjc3NgJHt3cmFwcGVyfTske3RoaXMucHJvcHMuY3NzfWAgOiB3cmFwcGVyO1xuICB9O1xuXG4gIGxvbmcgPSAoKSA9PiBjc3NgXG4gICAgICAgICR7dGhpcy5iYWxsKCl9OyAgICAgICBcbiAgICAgICAgJHt0aGlzLnN0eWxlKDEpfTtcbiAgICBgO1xuICBzaG9ydCA9ICgpID0+IGNzc2BcbiAgICAgICAgJHt0aGlzLmJhbGwoKX07ICAgICAgIFxuICAgICAgICAke3RoaXMuc3R5bGUoMil9O1xuICAgIGA7XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgbG9hZGluZyB9ID0gdGhpcy5wcm9wcztcblxuICAgIHJldHVybiBsb2FkaW5nID9cbiAgICAgIDxkaXYgY3NzPXt0aGlzLndyYXBwZXIoKX0+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLmxvbmcoKX0gLz5cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMuc2hvcnQoKX0gLz5cbiAgICAgIDwvZGl2PiA6IG51bGw7XG4gIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuICBtYXJnaW46IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemVVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemU6IDE1LFxuICBtYXJnaW46ICcycHgnLFxuICBzaXplVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3NpemUnLCAnbWFyZ2luJywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */'));\n          }, _this.ball = function () {\n            var _this$props = _this.props,\n                color = _this$props.color,\n                size = _this$props.size,\n                sizeUnit = _this$props.sizeUnit,\n                margin = _this$props.margin;\n            return (0, _core.css)('{background-color:', color, ';width:', '' + size + sizeUnit, ';height:', '' + size + sizeUnit, ';margin:', margin, ';border-radius:100%;}label:ball;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Sb3RhdGVMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlCZ0IiLCJmaWxlIjoic3JjL1JvdGF0ZUxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbmNvbnN0IHJvdGF0ZSA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogcm90YXRlKDBkZWcpfVxuICA1MCUge3RyYW5zZm9ybTogcm90YXRlKDE4MGRlZyl9XG4gIDEwMCUge3RyYW5zZm9ybTogcm90YXRlKDM2MGRlZyl9XG5gO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdHlsZSA9IGkgPT4gY3NzYHtcbiAgICAgICAgb3BhY2l0eTogMC44O1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgbGVmdDogJHtpICUgMiA/IC0yOCA6IDI1fXB4O1xuICAgIH1gO1xuXG4gICAgYmFsbCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgY29sb3IsIHNpemUsIHNpemVVbml0LCBtYXJnaW5cbiAgICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIG1hcmdpbjogJHttYXJnaW59O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICB3cmFwcGVyID0gKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBjc3NgXG4gICAgICAgICAgICAke3RoaXMuYmFsbCgpfTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7cm90YXRlfSAxcyAwcyBpbmZpbml0ZSBjdWJpYy1iZXppZXIoLjcsLS4xMywuMjIsLjg2KTsgICAgICAgIFxuICAgICAgICBgO1xuXG4gICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgfTtcblxuICBsb25nID0gKCkgPT4gY3NzYFxuICAgICAgICAke3RoaXMuYmFsbCgpfTsgICAgICAgXG4gICAgICAgICR7dGhpcy5zdHlsZSgxKX07XG4gICAgYDtcbiAgc2hvcnQgPSAoKSA9PiBjc3NgXG4gICAgICAgICR7dGhpcy5iYWxsKCl9OyAgICAgICBcbiAgICAgICAgJHt0aGlzLnN0eWxlKDIpfTtcbiAgICBgO1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5sb25nKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLnNob3J0KCl9IC8+XG4gICAgICA8L2Rpdj4gOiBudWxsO1xuICB9XG59XG5cbkxvYWRlci5wcm9wVHlwZXMgPSB7XG4gIGxvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZTogUHJvcFR5cGVzLm51bWJlcixcbiAgbWFyZ2luOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICBzaXplOiAxNSxcbiAgbWFyZ2luOiAnMnB4JyxcbiAgc2l6ZVVuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdzaXplJywgJ21hcmdpbicsICdjc3MnXSkoTG9hZGVyKTtcbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMgPSBMb2FkZXIuZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuIl19 */'));\n          }, _this.wrapper = function () {\n            var wrapper = (0, _core.css)(_this.ball(), ';display:inline-block;position:relative;animation-fill-mode:both;animation:', rotate, ' 1s 0s infinite cubic-bezier(.7,-.13,.22,.86);label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Sb3RhdGVMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1DdUIiLCJmaWxlIjoic3JjL1JvdGF0ZUxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbmNvbnN0IHJvdGF0ZSA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogcm90YXRlKDBkZWcpfVxuICA1MCUge3RyYW5zZm9ybTogcm90YXRlKDE4MGRlZyl9XG4gIDEwMCUge3RyYW5zZm9ybTogcm90YXRlKDM2MGRlZyl9XG5gO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdHlsZSA9IGkgPT4gY3NzYHtcbiAgICAgICAgb3BhY2l0eTogMC44O1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgbGVmdDogJHtpICUgMiA/IC0yOCA6IDI1fXB4O1xuICAgIH1gO1xuXG4gICAgYmFsbCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgY29sb3IsIHNpemUsIHNpemVVbml0LCBtYXJnaW5cbiAgICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIG1hcmdpbjogJHttYXJnaW59O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICB3cmFwcGVyID0gKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBjc3NgXG4gICAgICAgICAgICAke3RoaXMuYmFsbCgpfTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7cm90YXRlfSAxcyAwcyBpbmZpbml0ZSBjdWJpYy1iZXppZXIoLjcsLS4xMywuMjIsLjg2KTsgICAgICAgIFxuICAgICAgICBgO1xuXG4gICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgfTtcblxuICBsb25nID0gKCkgPT4gY3NzYFxuICAgICAgICAke3RoaXMuYmFsbCgpfTsgICAgICAgXG4gICAgICAgICR7dGhpcy5zdHlsZSgxKX07XG4gICAgYDtcbiAgc2hvcnQgPSAoKSA9PiBjc3NgXG4gICAgICAgICR7dGhpcy5iYWxsKCl9OyAgICAgICBcbiAgICAgICAgJHt0aGlzLnN0eWxlKDIpfTtcbiAgICBgO1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5sb25nKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLnNob3J0KCl9IC8+XG4gICAgICA8L2Rpdj4gOiBudWxsO1xuICB9XG59XG5cbkxvYWRlci5wcm9wVHlwZXMgPSB7XG4gIGxvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZTogUHJvcFR5cGVzLm51bWJlcixcbiAgbWFyZ2luOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICBzaXplOiAxNSxcbiAgbWFyZ2luOiAnMnB4JyxcbiAgc2l6ZVVuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdzaXplJywgJ21hcmdpbicsICdjc3MnXSkoTG9hZGVyKTtcbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMgPSBMb2FkZXIuZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuIl19 */'));\n            return _this.props.css ? (0, _core.css)(wrapper, ';', _this.props.css, 'label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Sb3RhdGVMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJDK0IiLCJmaWxlIjoic3JjL1JvdGF0ZUxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbmNvbnN0IHJvdGF0ZSA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogcm90YXRlKDBkZWcpfVxuICA1MCUge3RyYW5zZm9ybTogcm90YXRlKDE4MGRlZyl9XG4gIDEwMCUge3RyYW5zZm9ybTogcm90YXRlKDM2MGRlZyl9XG5gO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdHlsZSA9IGkgPT4gY3NzYHtcbiAgICAgICAgb3BhY2l0eTogMC44O1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgbGVmdDogJHtpICUgMiA/IC0yOCA6IDI1fXB4O1xuICAgIH1gO1xuXG4gICAgYmFsbCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgY29sb3IsIHNpemUsIHNpemVVbml0LCBtYXJnaW5cbiAgICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIG1hcmdpbjogJHttYXJnaW59O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICB3cmFwcGVyID0gKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBjc3NgXG4gICAgICAgICAgICAke3RoaXMuYmFsbCgpfTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7cm90YXRlfSAxcyAwcyBpbmZpbml0ZSBjdWJpYy1iZXppZXIoLjcsLS4xMywuMjIsLjg2KTsgICAgICAgIFxuICAgICAgICBgO1xuXG4gICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgfTtcblxuICBsb25nID0gKCkgPT4gY3NzYFxuICAgICAgICAke3RoaXMuYmFsbCgpfTsgICAgICAgXG4gICAgICAgICR7dGhpcy5zdHlsZSgxKX07XG4gICAgYDtcbiAgc2hvcnQgPSAoKSA9PiBjc3NgXG4gICAgICAgICR7dGhpcy5iYWxsKCl9OyAgICAgICBcbiAgICAgICAgJHt0aGlzLnN0eWxlKDIpfTtcbiAgICBgO1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5sb25nKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLnNob3J0KCl9IC8+XG4gICAgICA8L2Rpdj4gOiBudWxsO1xuICB9XG59XG5cbkxvYWRlci5wcm9wVHlwZXMgPSB7XG4gIGxvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZTogUHJvcFR5cGVzLm51bWJlcixcbiAgbWFyZ2luOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICBzaXplOiAxNSxcbiAgbWFyZ2luOiAnMnB4JyxcbiAgc2l6ZVVuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdzaXplJywgJ21hcmdpbicsICdjc3MnXSkoTG9hZGVyKTtcbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMgPSBMb2FkZXIuZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuIl19 */')) : wrapper;\n          }, _this.long = function () {\n            return (0, _core.css)(_this.ball(), ';', _this.style(1), ';label:long;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Sb3RhdGVMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThDa0IiLCJmaWxlIjoic3JjL1JvdGF0ZUxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbmNvbnN0IHJvdGF0ZSA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogcm90YXRlKDBkZWcpfVxuICA1MCUge3RyYW5zZm9ybTogcm90YXRlKDE4MGRlZyl9XG4gIDEwMCUge3RyYW5zZm9ybTogcm90YXRlKDM2MGRlZyl9XG5gO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdHlsZSA9IGkgPT4gY3NzYHtcbiAgICAgICAgb3BhY2l0eTogMC44O1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgbGVmdDogJHtpICUgMiA/IC0yOCA6IDI1fXB4O1xuICAgIH1gO1xuXG4gICAgYmFsbCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgY29sb3IsIHNpemUsIHNpemVVbml0LCBtYXJnaW5cbiAgICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIG1hcmdpbjogJHttYXJnaW59O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICB3cmFwcGVyID0gKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBjc3NgXG4gICAgICAgICAgICAke3RoaXMuYmFsbCgpfTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7cm90YXRlfSAxcyAwcyBpbmZpbml0ZSBjdWJpYy1iZXppZXIoLjcsLS4xMywuMjIsLjg2KTsgICAgICAgIFxuICAgICAgICBgO1xuXG4gICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgfTtcblxuICBsb25nID0gKCkgPT4gY3NzYFxuICAgICAgICAke3RoaXMuYmFsbCgpfTsgICAgICAgXG4gICAgICAgICR7dGhpcy5zdHlsZSgxKX07XG4gICAgYDtcbiAgc2hvcnQgPSAoKSA9PiBjc3NgXG4gICAgICAgICR7dGhpcy5iYWxsKCl9OyAgICAgICBcbiAgICAgICAgJHt0aGlzLnN0eWxlKDIpfTtcbiAgICBgO1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5sb25nKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLnNob3J0KCl9IC8+XG4gICAgICA8L2Rpdj4gOiBudWxsO1xuICB9XG59XG5cbkxvYWRlci5wcm9wVHlwZXMgPSB7XG4gIGxvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZTogUHJvcFR5cGVzLm51bWJlcixcbiAgbWFyZ2luOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICBzaXplOiAxNSxcbiAgbWFyZ2luOiAnMnB4JyxcbiAgc2l6ZVVuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdzaXplJywgJ21hcmdpbicsICdjc3MnXSkoTG9hZGVyKTtcbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMgPSBMb2FkZXIuZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuIl19 */'));\n          }, _this.short = function () {\n            return (0, _core.css)(_this.ball(), ';', _this.style(2), ';label:short;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Sb3RhdGVMb2FkZXIuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtEbUIiLCJmaWxlIjoic3JjL1JvdGF0ZUxvYWRlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsga2V5ZnJhbWVzLCBjc3MsIGpzeCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IG9ubHlVcGRhdGVGb3JLZXlzIGZyb20gJ3JlY29tcG9zZS9vbmx5VXBkYXRlRm9yS2V5cyc7XG5cbmNvbnN0IHJvdGF0ZSA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogcm90YXRlKDBkZWcpfVxuICA1MCUge3RyYW5zZm9ybTogcm90YXRlKDE4MGRlZyl9XG4gIDEwMCUge3RyYW5zZm9ybTogcm90YXRlKDM2MGRlZyl9XG5gO1xuXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdHlsZSA9IGkgPT4gY3NzYHtcbiAgICAgICAgb3BhY2l0eTogMC44O1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgbGVmdDogJHtpICUgMiA/IC0yOCA6IDI1fXB4O1xuICAgIH1gO1xuXG4gICAgYmFsbCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgY29sb3IsIHNpemUsIHNpemVVbml0LCBtYXJnaW5cbiAgICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIG1hcmdpbjogJHttYXJnaW59O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICB3cmFwcGVyID0gKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBjc3NgXG4gICAgICAgICAgICAke3RoaXMuYmFsbCgpfTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgICAgICBhbmltYXRpb246ICR7cm90YXRlfSAxcyAwcyBpbmZpbml0ZSBjdWJpYy1iZXppZXIoLjcsLS4xMywuMjIsLjg2KTsgICAgICAgIFxuICAgICAgICBgO1xuXG4gICAgcmV0dXJuIHRoaXMucHJvcHMuY3NzID8gY3NzYCR7d3JhcHBlcn07JHt0aGlzLnByb3BzLmNzc31gIDogd3JhcHBlcjtcbiAgfTtcblxuICBsb25nID0gKCkgPT4gY3NzYFxuICAgICAgICAke3RoaXMuYmFsbCgpfTsgICAgICAgXG4gICAgICAgICR7dGhpcy5zdHlsZSgxKX07XG4gICAgYDtcbiAgc2hvcnQgPSAoKSA9PiBjc3NgXG4gICAgICAgICR7dGhpcy5iYWxsKCl9OyAgICAgICBcbiAgICAgICAgJHt0aGlzLnN0eWxlKDIpfTtcbiAgICBgO1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gbG9hZGluZyA/XG4gICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICA8ZGl2IGNzcz17dGhpcy5sb25nKCl9IC8+XG4gICAgICAgIDxkaXYgY3NzPXt0aGlzLnNob3J0KCl9IC8+XG4gICAgICA8L2Rpdj4gOiBudWxsO1xuICB9XG59XG5cbkxvYWRlci5wcm9wVHlwZXMgPSB7XG4gIGxvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZTogUHJvcFR5cGVzLm51bWJlcixcbiAgbWFyZ2luOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICBzaXplOiAxNSxcbiAgbWFyZ2luOiAnMnB4JyxcbiAgc2l6ZVVuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdzaXplJywgJ21hcmdpbicsICdjc3MnXSkoTG9hZGVyKTtcbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMgPSBMb2FkZXIuZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuIl19 */'));\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.wrapper()\n            }, (0, _core.jsx)('div', {\n              css: this.long()\n            }), (0, _core.jsx)('div', {\n              css: this.short()\n            })) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        color: _propTypes2.default.string,\n        size: _propTypes2.default.number,\n        margin: _propTypes2.default.string,\n        sizeUnit: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        color: '#000000',\n        size: 15,\n        margin: '2px',\n        sizeUnit: 'px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'size', 'margin', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 63 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys);\n        global.ScaleLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n  0% {transform: scaley(1.0)}\\n  50% {transform: scaley(0.4)}\\n  100% {transform: scaley(1.0)}\\n'], ['\\n  0% {transform: scaley(1.0)}\\n  50% {transform: scaley(0.4)}\\n  100% {transform: scaley(1.0)}\\n']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      }\n\n      var scale = (0, _core.keyframes)(_templateObject);\n\n      var Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {\n            var _this$props = _this.props,\n                color = _this$props.color,\n                width = _this$props.width,\n                height = _this$props.height,\n                margin = _this$props.margin,\n                radius = _this$props.radius,\n                widthUnit = _this$props.widthUnit,\n                heightUnit = _this$props.heightUnit,\n                radiusUnit = _this$props.radiusUnit;\n            return (0, _core.css)('{background-color:', color, ';width:', '' + width + widthUnit, ';height:', '' + height + heightUnit, ';margin:', margin, ';border-radius:', '' + radius + radiusUnit, ';display:inline-block;animation:', scale, ' 1s ', i * 0.1, 's infinite cubic-bezier(.2,.68,.18,1.08);animation-fill-mode:both;}label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9TY2FsZUxvYWRlci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0JnQiIsImZpbGUiOiJzcmMvU2NhbGVMb2FkZXIuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGtleWZyYW1lcywgY3NzLCBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBvbmx5VXBkYXRlRm9yS2V5cyBmcm9tICdyZWNvbXBvc2Uvb25seVVwZGF0ZUZvcktleXMnO1xuXG5jb25zdCBzY2FsZSA9IGtleWZyYW1lc2BcbiAgMCUge3RyYW5zZm9ybTogc2NhbGV5KDEuMCl9XG4gIDUwJSB7dHJhbnNmb3JtOiBzY2FsZXkoMC40KX1cbiAgMTAwJSB7dHJhbnNmb3JtOiBzY2FsZXkoMS4wKX1cbmA7XG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3R5bGUgPSBpID0+IHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgY29sb3IsIHdpZHRoLCBoZWlnaHQsIG1hcmdpbiwgcmFkaXVzLCB3aWR0aFVuaXQsIGhlaWdodFVuaXQsIHJhZGl1c1VuaXRcbiAgICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY3NzYHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7d2lkdGh9JHt3aWR0aFVuaXR9YH07XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7aGVpZ2h0fSR7aGVpZ2h0VW5pdH1gfTtcbiAgICAgICAgICAgIG1hcmdpbjogJHttYXJnaW59O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogJHtgJHtyYWRpdXN9JHtyYWRpdXNVbml0fWB9O1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke3NjYWxlfSAxcyAke2kgKiAwLjF9cyBpbmZpbml0ZSBjdWJpYy1iZXppZXIoLjIsLjY4LC4xOCwxLjA4KTtcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgICAgIH1gO1xuICAgIH07XG5cbiAgICB3cmFwcGVyID0gKCkgPT4gdGhpcy5wcm9wcy5jc3MgfHwgJyc7XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBsb2FkaW5nID9cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMud3JhcHBlcigpfT5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSgxKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSgyKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSgzKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSg0KX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSg1KX0gLz5cbiAgICAgICAgPC9kaXY+IDogbnVsbDtcbiAgICB9XG59XG5cbkxvYWRlci5wcm9wVHlwZXMgPSB7XG4gIGxvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgaGVpZ2h0OiBQcm9wVHlwZXMubnVtYmVyLFxuICB3aWR0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgbWFyZ2luOiBQcm9wVHlwZXMuc3RyaW5nLFxuICByYWRpdXM6IFByb3BUeXBlcy5udW1iZXIsXG4gIGhlaWdodFVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHdpZHRoVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgcmFkaXVzVW5pdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY3NzOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5Mb2FkZXIuZGVmYXVsdFByb3BzID0ge1xuICBsb2FkaW5nOiB0cnVlLFxuICBjb2xvcjogJyMwMDAwMDAnLFxuICBoZWlnaHQ6IDM1LFxuICB3aWR0aDogNCxcbiAgbWFyZ2luOiAnMnB4JyxcbiAgcmFkaXVzOiAyLFxuICBoZWlnaHRVbml0OiAncHgnLFxuICB3aWR0aFVuaXQ6ICdweCcsXG4gIHJhZGl1c1VuaXQ6ICdweCcsXG4gIGNzczogJydcbn07XG5cbmNvbnN0IENvbXBvbmVudCA9IG9ubHlVcGRhdGVGb3JLZXlzKFsnbG9hZGluZycsICdjb2xvcicsICdoZWlnaHQnLCAnd2lkdGgnLCAnbWFyZ2luJywgJ3JhZGl1cycsICdoZWlnaHRVbml0JywgJ3dpZHRoVW5pdCcsICdyYWRpdXNVbml0JywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */'));\n          }, _this.wrapper = function () {\n            return _this.props.css || '';\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.wrapper()\n            }, (0, _core.jsx)('div', {\n              css: this.style(1)\n            }), (0, _core.jsx)('div', {\n              css: this.style(2)\n            }), (0, _core.jsx)('div', {\n              css: this.style(3)\n            }), (0, _core.jsx)('div', {\n              css: this.style(4)\n            }), (0, _core.jsx)('div', {\n              css: this.style(5)\n            })) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        color: _propTypes2.default.string,\n        height: _propTypes2.default.number,\n        width: _propTypes2.default.number,\n        margin: _propTypes2.default.string,\n        radius: _propTypes2.default.number,\n        heightUnit: _propTypes2.default.string,\n        widthUnit: _propTypes2.default.string,\n        radiusUnit: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        color: '#000000',\n        height: 35,\n        width: 4,\n        margin: '2px',\n        radius: 2,\n        heightUnit: 'px',\n        widthUnit: 'px',\n        radiusUnit: 'px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'height', 'width', 'margin', 'radius', 'heightUnit', 'widthUnit', 'radiusUnit', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 64 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys);\n        global.SyncLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n  33% {transform: translateY(10px)}\\n  66% {transform: translateY(-10px)}\\n  100% {transform: translateY(0)}\\n'], ['\\n  33% {transform: translateY(10px)}\\n  66% {transform: translateY(-10px)}\\n  100% {transform: translateY(0)}\\n']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      }\n\n      var sync = (0, _core.keyframes)(_templateObject);\n\n      var Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {\n            var _this$props = _this.props,\n                color = _this$props.color,\n                size = _this$props.size,\n                sizeUnit = _this$props.sizeUnit,\n                margin = _this$props.margin;\n            return (0, _core.css)('{background-color:', color, ';width:', '' + size + sizeUnit, ';height:', '' + size + sizeUnit, ';margin:', margin, ';border-radius:100%;display:inline-block;animation:', sync, ' 0.6s ', i * 0.07, 's infinite ease-in-out;animation-fill-mode:both;}label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9TeW5jTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQmdCIiwiZmlsZSI6InNyYy9TeW5jTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcblxuY29uc3Qgc3luYyA9IGtleWZyYW1lc2BcbiAgMzMlIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTBweCl9XG4gIDY2JSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMHB4KX1cbiAgMTAwJSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApfVxuYDtcblxuY2xhc3MgTG9hZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdHlsZSA9IGkgPT4ge1xuICAgICAgY29uc3Qge1xuICAgICAgICBjb2xvciwgc2l6ZSwgc2l6ZVVuaXQsIG1hcmdpblxuICAgICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBjc3Nge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBoZWlnaHQ6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgbWFyZ2luOiAke21hcmdpbn07XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke3N5bmN9IDAuNnMgJHtpICogMC4wN31zIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICAgIHdyYXBwZXIgPSAoKSA9PiB0aGlzLnByb3BzLmNzcyB8fCAnJztcblxuICAgIHJlbmRlcigpIHtcbiAgICAgIGNvbnN0IHsgbG9hZGluZyB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGxvYWRpbmcgP1xuICAgICAgICA8ZGl2IGNzcz17dGhpcy53cmFwcGVyKCl9PlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDEpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDIpfSAvPlxuICAgICAgICAgIDxkaXYgY3NzPXt0aGlzLnN0eWxlKDMpfSAvPlxuICAgICAgICA8L2Rpdj4gOiBudWxsO1xuICAgIH1cbn1cblxuTG9hZGVyLnByb3BUeXBlcyA9IHtcbiAgbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuICBtYXJnaW46IFByb3BUeXBlcy5zdHJpbmcsXG4gIHNpemVVbml0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjc3M6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbkxvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGxvYWRpbmc6IHRydWUsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemU6IDE1LFxuICBtYXJnaW46ICcycHgnLFxuICBzaXplVW5pdDogJ3B4JyxcbiAgY3NzOiAnJ1xufTtcblxuY29uc3QgQ29tcG9uZW50ID0gb25seVVwZGF0ZUZvcktleXMoWydsb2FkaW5nJywgJ2NvbG9yJywgJ3NpemUnLCAnbWFyZ2luJywgJ3NpemVVbml0JywgJ2NzcyddKShMb2FkZXIpO1xuQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IExvYWRlci5kZWZhdWx0UHJvcHM7XG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iXX0= */'));\n          }, _this.wrapper = function () {\n            return _this.props.css || '';\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.wrapper()\n            }, (0, _core.jsx)('div', {\n              css: this.style(1)\n            }), (0, _core.jsx)('div', {\n              css: this.style(2)\n            }), (0, _core.jsx)('div', {\n              css: this.style(3)\n            })) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        color: _propTypes2.default.string,\n        size: _propTypes2.default.number,\n        margin: _propTypes2.default.string,\n        sizeUnit: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        color: '#000000',\n        size: 15,\n        margin: '2px',\n        sizeUnit: 'px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'size', 'margin', 'sizeUnit', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 65 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n    (function (global, factory) {\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4), __webpack_require__(20)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('react'), require('prop-types'), require('@emotion/core'), require('recompose/onlyUpdateForKeys'), require('./helpers/index'));\n      } else {\n        var mod = {\n          exports: {}\n        };\n        factory(mod.exports, global.react, global.propTypes, global.core, global.onlyUpdateForKeys, global.index);\n        global.HashLoader = mod.exports;\n      }\n    })(this, function (exports, _react, _propTypes, _core, _onlyUpdateForKeys, _index) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _onlyUpdateForKeys2 = _interopRequireDefault(_onlyUpdateForKeys);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var _templateObject = _taggedTemplateLiteral(['\\n          0% {width: ', 'px;box-shadow: ', 'px ', 'px ', ', ', 'px ', 'px ', '} \\n          35% {width: ', ';box-shadow: 0 ', 'px ', ', 0 ', 'px ', '}\\n          70% {width: ', 'px;box-shadow: ', 'px ', 'px ', ', ', 'px ', 'px ', '}\\n          100% {box-shadow: ', 'px ', 'px ', ', ', 'px ', 'px ', '}\\n        '], ['\\n          0% {width: ', 'px;box-shadow: ', 'px ', 'px ', ', ', 'px ', 'px ', '} \\n          35% {width: ', ';box-shadow: 0 ', 'px ', ', 0 ', 'px ', '}\\n          70% {width: ', 'px;box-shadow: ', 'px ', 'px ', ', ', 'px ', 'px ', '}\\n          100% {box-shadow: ', 'px ', 'px ', ', ', 'px ', 'px ', '}\\n        ']),\n          _templateObject2 = _taggedTemplateLiteral(['\\n          0% {height: ', 'px;box-shadow: ', 'px ', 'px ', ', ', 'px ', 'px ', '} \\n          35% {height: ', ';box-shadow: ', 'px 0 ', ', ', 'px 0 ', '}\\n          70% {height: ', 'px;box-shadow: ', 'px ', 'px ', ', ', 'px ', 'px ', '}\\n          100% {box-shadow: ', 'px ', 'px ', ', ', 'px ', 'px ', '}\\n        '], ['\\n          0% {height: ', 'px;box-shadow: ', 'px ', 'px ', ', ', 'px ', 'px ', '} \\n          35% {height: ', ';box-shadow: ', 'px 0 ', ', ', 'px 0 ', '}\\n          70% {height: ', 'px;box-shadow: ', 'px ', 'px ', ', ', 'px ', 'px ', '}\\n          100% {box-shadow: ', 'px ', 'px ', ', ', 'px ', 'px ', '}\\n        ']);\n\n      function _taggedTemplateLiteral(strings, raw) {\n        return Object.freeze(Object.defineProperties(strings, {\n          raw: {\n            value: Object.freeze(raw)\n          }\n        }));\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var Loader = function (_React$Component) {\n        _inherits(Loader, _React$Component);\n\n        function Loader() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Loader);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.thickness = function () {\n            var size = _this.props.size;\n            return size / 5;\n          }, _this.lat = function () {\n            var size = _this.props.size;\n            return (size - _this.thickness()) / 2;\n          }, _this.offset = function () {\n            return _this.lat() - _this.thickness();\n          }, _this.color = function () {\n            var color = _this.props.color;\n            return (0, _index.calculateRgba)(color, 0.75);\n          }, _this.before = function () {\n            var _this$props = _this.props,\n                size = _this$props.size,\n                sizeUnit = _this$props.sizeUnit;\n\n            var color = _this.color();\n\n            var lat = _this.lat();\n\n            var thickness = _this.thickness();\n\n            var offset = _this.offset();\n\n            return (0, _core.keyframes)(_templateObject, thickness, lat, -offset, color, -lat, offset, color, '' + size + sizeUnit, -offset, color, offset, color, thickness, -lat, -offset, color, lat, offset, color, lat, -offset, color, -lat, offset, color);\n          }, _this.after = function () {\n            var _this$props2 = _this.props,\n                size = _this$props2.size,\n                sizeUnit = _this$props2.sizeUnit;\n\n            var color = _this.color();\n\n            var lat = _this.lat();\n\n            var thickness = _this.thickness();\n\n            var offset = _this.offset();\n\n            return (0, _core.keyframes)(_templateObject2, thickness, offset, lat, color, -offset, -lat, color, '' + size + sizeUnit, offset, color, -offset, color, thickness, offset, -lat, color, -offset, lat, color, offset, lat, color, -offset, -lat, color);\n          }, _this.style = function (i) {\n            var _this$props3 = _this.props,\n                size = _this$props3.size,\n                sizeUnit = _this$props3.sizeUnit;\n            return (0, _core.css)('{position:absolute;content:\\'\\';top:50%;left:50%;display:block;width:', '' + size / 5 + sizeUnit, ';height:', '' + size / 5 + sizeUnit, ';border-radius:', '' + size / 10 + sizeUnit, ';transform:translate(-50%,-50%);animation-fill-mode:none;animation:', i === 1 ? _this.before() : _this.after(), ' 2s infinite;}label:style;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9IYXNoTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4RGdCIiwiZmlsZSI6InNyYy9IYXNoTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcbmltcG9ydCB7IGNhbGN1bGF0ZVJnYmEgfSBmcm9tICcuL2hlbHBlcnMvaW5kZXgnO1xuXG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgdGhpY2tuZXNzID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gc2l6ZSAvIDU7XG4gICAgfTtcblxuICAgIGxhdCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIChzaXplIC0gdGhpcy50aGlja25lc3MoKSkgLyAyO1xuICAgIH07XG4gICAgb2Zmc2V0ID0gKCkgPT4gdGhpcy5sYXQoKSAtIHRoaXMudGhpY2tuZXNzKCk7XG4gICAgY29sb3IgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY2FsY3VsYXRlUmdiYShjb2xvciwgMC43NSk7XG4gICAgfTtcblxuICAgIGJlZm9yZSA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGNvbnN0IGNvbG9yID0gdGhpcy5jb2xvcigpO1xuICAgICAgY29uc3QgbGF0ID0gdGhpcy5sYXQoKTtcbiAgICAgIGNvbnN0IHRoaWNrbmVzcyA9IHRoaXMudGhpY2tuZXNzKCk7XG4gICAgICBjb25zdCBvZmZzZXQgPSB0aGlzLm9mZnNldCgpO1xuXG4gICAgICByZXR1cm4ga2V5ZnJhbWVzYFxuICAgICAgICAgIDAlIHt3aWR0aDogJHt0aGlja25lc3N9cHg7Ym94LXNoYWRvdzogJHtsYXR9cHggJHstb2Zmc2V0fXB4ICR7Y29sb3J9LCAkey1sYXR9cHggJHtvZmZzZXR9cHggJHtjb2xvcn19IFxuICAgICAgICAgIDM1JSB7d2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O2JveC1zaGFkb3c6IDAgJHstb2Zmc2V0fXB4ICR7Y29sb3J9LCAwICR7b2Zmc2V0fXB4ICR7Y29sb3J9fVxuICAgICAgICAgIDcwJSB7d2lkdGg6ICR7dGhpY2tuZXNzfXB4O2JveC1zaGFkb3c6ICR7LWxhdH1weCAkey1vZmZzZXR9cHggJHtjb2xvcn0sICR7bGF0fXB4ICR7b2Zmc2V0fXB4ICR7Y29sb3J9fVxuICAgICAgICAgIDEwMCUge2JveC1zaGFkb3c6ICR7bGF0fXB4ICR7LW9mZnNldH1weCAke2NvbG9yfSwgJHstbGF0fXB4ICR7b2Zmc2V0fXB4ICR7Y29sb3J9fVxuICAgICAgICBgO1xuICAgIH07XG5cbiAgICBhZnRlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGNvbnN0IGNvbG9yID0gdGhpcy5jb2xvcigpO1xuICAgICAgY29uc3QgbGF0ID0gdGhpcy5sYXQoKTtcbiAgICAgIGNvbnN0IHRoaWNrbmVzcyA9IHRoaXMudGhpY2tuZXNzKCk7XG4gICAgICBjb25zdCBvZmZzZXQgPSB0aGlzLm9mZnNldCgpO1xuXG4gICAgICByZXR1cm4ga2V5ZnJhbWVzYFxuICAgICAgICAgIDAlIHtoZWlnaHQ6ICR7dGhpY2tuZXNzfXB4O2JveC1zaGFkb3c6ICR7b2Zmc2V0fXB4ICR7bGF0fXB4ICR7Y29sb3J9LCAkey1vZmZzZXR9cHggJHstbGF0fXB4ICR7Y29sb3J9fSBcbiAgICAgICAgICAzNSUge2hlaWdodDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07Ym94LXNoYWRvdzogJHtvZmZzZXR9cHggMCAke2NvbG9yfSwgJHstb2Zmc2V0fXB4IDAgJHtjb2xvcn19XG4gICAgICAgICAgNzAlIHtoZWlnaHQ6ICR7dGhpY2tuZXNzfXB4O2JveC1zaGFkb3c6ICR7b2Zmc2V0fXB4ICR7LWxhdH1weCAke2NvbG9yfSwgJHstb2Zmc2V0fXB4ICR7bGF0fXB4ICR7Y29sb3J9fVxuICAgICAgICAgIDEwMCUge2JveC1zaGFkb3c6ICR7b2Zmc2V0fXB4ICR7bGF0fXB4ICR7Y29sb3J9LCAkey1vZmZzZXR9cHggJHstbGF0fXB4ICR7Y29sb3J9fVxuICAgICAgICBgO1xuICAgIH07XG5cbiAgICBzdHlsZSA9IGkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplIC8gNX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemUgLyA1fSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAke2Ake3NpemUgLyAxMH0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBub25lO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2kgPT09IDEgPyB0aGlzLmJlZm9yZSgpIDogdGhpcy5hZnRlcigpfSAycyBpbmZpbml0ZTtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICAgIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUsIHNpemVVbml0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICBjb25zdCB3cmFwcGVyID0gY3NzYHsgICAgICAgIFxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE2NWRlZyk7XG4gICAgICAgIH1gO1xuXG4gICAgICByZXR1cm4gdGhpcy5wcm9wcy5jc3MgPyBjc3NgJHt3cmFwcGVyfTske3RoaXMucHJvcHMuY3NzfWAgOiB3cmFwcGVyO1xuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBsb2FkaW5nID9cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMud3JhcHBlcigpfT5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSgxKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSgyKX0gLz5cbiAgICAgICAgPC9kaXY+IDogbnVsbDtcbiAgICB9XG59XG5cbkxvYWRlci5wcm9wVHlwZXMgPSB7XG4gIGxvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZVVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzczogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuTG9hZGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgbG9hZGluZzogdHJ1ZSxcbiAgc2l6ZTogNTAsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemVVbml0OiAncHgnLFxuICBjc3M6ICcnXG59O1xuXG5jb25zdCBDb21wb25lbnQgPSBvbmx5VXBkYXRlRm9yS2V5cyhbJ2xvYWRpbmcnLCAnY29sb3InLCAnc2l6ZScsICdzaXplVW5pdCcsICdjc3MnXSkoTG9hZGVyKTtcbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMgPSBMb2FkZXIuZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG4iXX0= */'));\n          }, _this.wrapper = function () {\n            var _this$props4 = _this.props,\n                size = _this$props4.size,\n                sizeUnit = _this$props4.sizeUnit;\n            var wrapper = (0, _core.css)('{position:relative;width:', '' + size + sizeUnit, ';height:', '' + size + sizeUnit, ';transform:rotate(165deg);}label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9IYXNoTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnRnlCIiwiZmlsZSI6InNyYy9IYXNoTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcbmltcG9ydCB7IGNhbGN1bGF0ZVJnYmEgfSBmcm9tICcuL2hlbHBlcnMvaW5kZXgnO1xuXG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgdGhpY2tuZXNzID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gc2l6ZSAvIDU7XG4gICAgfTtcblxuICAgIGxhdCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIChzaXplIC0gdGhpcy50aGlja25lc3MoKSkgLyAyO1xuICAgIH07XG4gICAgb2Zmc2V0ID0gKCkgPT4gdGhpcy5sYXQoKSAtIHRoaXMudGhpY2tuZXNzKCk7XG4gICAgY29sb3IgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY2FsY3VsYXRlUmdiYShjb2xvciwgMC43NSk7XG4gICAgfTtcblxuICAgIGJlZm9yZSA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGNvbnN0IGNvbG9yID0gdGhpcy5jb2xvcigpO1xuICAgICAgY29uc3QgbGF0ID0gdGhpcy5sYXQoKTtcbiAgICAgIGNvbnN0IHRoaWNrbmVzcyA9IHRoaXMudGhpY2tuZXNzKCk7XG4gICAgICBjb25zdCBvZmZzZXQgPSB0aGlzLm9mZnNldCgpO1xuXG4gICAgICByZXR1cm4ga2V5ZnJhbWVzYFxuICAgICAgICAgIDAlIHt3aWR0aDogJHt0aGlja25lc3N9cHg7Ym94LXNoYWRvdzogJHtsYXR9cHggJHstb2Zmc2V0fXB4ICR7Y29sb3J9LCAkey1sYXR9cHggJHtvZmZzZXR9cHggJHtjb2xvcn19IFxuICAgICAgICAgIDM1JSB7d2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O2JveC1zaGFkb3c6IDAgJHstb2Zmc2V0fXB4ICR7Y29sb3J9LCAwICR7b2Zmc2V0fXB4ICR7Y29sb3J9fVxuICAgICAgICAgIDcwJSB7d2lkdGg6ICR7dGhpY2tuZXNzfXB4O2JveC1zaGFkb3c6ICR7LWxhdH1weCAkey1vZmZzZXR9cHggJHtjb2xvcn0sICR7bGF0fXB4ICR7b2Zmc2V0fXB4ICR7Y29sb3J9fVxuICAgICAgICAgIDEwMCUge2JveC1zaGFkb3c6ICR7bGF0fXB4ICR7LW9mZnNldH1weCAke2NvbG9yfSwgJHstbGF0fXB4ICR7b2Zmc2V0fXB4ICR7Y29sb3J9fVxuICAgICAgICBgO1xuICAgIH07XG5cbiAgICBhZnRlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGNvbnN0IGNvbG9yID0gdGhpcy5jb2xvcigpO1xuICAgICAgY29uc3QgbGF0ID0gdGhpcy5sYXQoKTtcbiAgICAgIGNvbnN0IHRoaWNrbmVzcyA9IHRoaXMudGhpY2tuZXNzKCk7XG4gICAgICBjb25zdCBvZmZzZXQgPSB0aGlzLm9mZnNldCgpO1xuXG4gICAgICByZXR1cm4ga2V5ZnJhbWVzYFxuICAgICAgICAgIDAlIHtoZWlnaHQ6ICR7dGhpY2tuZXNzfXB4O2JveC1zaGFkb3c6ICR7b2Zmc2V0fXB4ICR7bGF0fXB4ICR7Y29sb3J9LCAkey1vZmZzZXR9cHggJHstbGF0fXB4ICR7Y29sb3J9fSBcbiAgICAgICAgICAzNSUge2hlaWdodDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07Ym94LXNoYWRvdzogJHtvZmZzZXR9cHggMCAke2NvbG9yfSwgJHstb2Zmc2V0fXB4IDAgJHtjb2xvcn19XG4gICAgICAgICAgNzAlIHtoZWlnaHQ6ICR7dGhpY2tuZXNzfXB4O2JveC1zaGFkb3c6ICR7b2Zmc2V0fXB4ICR7LWxhdH1weCAke2NvbG9yfSwgJHstb2Zmc2V0fXB4ICR7bGF0fXB4ICR7Y29sb3J9fVxuICAgICAgICAgIDEwMCUge2JveC1zaGFkb3c6ICR7b2Zmc2V0fXB4ICR7bGF0fXB4ICR7Y29sb3J9LCAkey1vZmZzZXR9cHggJHstbGF0fXB4ICR7Y29sb3J9fVxuICAgICAgICBgO1xuICAgIH07XG5cbiAgICBzdHlsZSA9IGkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplIC8gNX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemUgLyA1fSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAke2Ake3NpemUgLyAxMH0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBub25lO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2kgPT09IDEgPyB0aGlzLmJlZm9yZSgpIDogdGhpcy5hZnRlcigpfSAycyBpbmZpbml0ZTtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICAgIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUsIHNpemVVbml0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICBjb25zdCB3cmFwcGVyID0gY3NzYHsgICAgICAgIFxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE2NWRlZyk7XG4gICAgICAgIH1gO1xuXG4gICAgICByZXR1cm4gdGhpcy5wcm9wcy5jc3MgPyBjc3NgJHt3cmFwcGVyfTske3RoaXMucHJvcHMuY3NzfWAgOiB3cmFwcGVyO1xuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBsb2FkaW5nID9cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMud3JhcHBlcigpfT5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSgxKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSgyKX0gLz5cbiAgICAgICAgPC9kaXY+IDogbnVsbDtcbiAgICB9XG59XG5cbkxvYWRlci5wcm9wVHlwZXMgPSB7XG4gIGxvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZVVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzczogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuTG9hZGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgbG9hZGluZzogdHJ1ZSxcbiAgc2l6ZTogNTAsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemVVbml0OiAncHgnLFxuICBjc3M6ICcnXG59O1xuXG5jb25zdCBDb21wb25lbnQgPSBvbmx5VXBkYXRlRm9yS2V5cyhbJ2xvYWRpbmcnLCAnY29sb3InLCAnc2l6ZScsICdzaXplVW5pdCcsICdjc3MnXSkoTG9hZGVyKTtcbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMgPSBMb2FkZXIuZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG4iXX0= */'));\n            return _this.props.css ? (0, _core.css)(wrapper, ';', _this.props.css, 'label:wrapper;' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9IYXNoTG9hZGVyLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1RmlDIiwiZmlsZSI6InNyYy9IYXNoTG9hZGVyLmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBrZXlmcmFtZXMsIGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgb25seVVwZGF0ZUZvcktleXMgZnJvbSAncmVjb21wb3NlL29ubHlVcGRhdGVGb3JLZXlzJztcbmltcG9ydCB7IGNhbGN1bGF0ZVJnYmEgfSBmcm9tICcuL2hlbHBlcnMvaW5kZXgnO1xuXG5cbmNsYXNzIExvYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgdGhpY2tuZXNzID0gKCkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gc2l6ZSAvIDU7XG4gICAgfTtcblxuICAgIGxhdCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIChzaXplIC0gdGhpcy50aGlja25lc3MoKSkgLyAyO1xuICAgIH07XG4gICAgb2Zmc2V0ID0gKCkgPT4gdGhpcy5sYXQoKSAtIHRoaXMudGhpY2tuZXNzKCk7XG4gICAgY29sb3IgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IGNvbG9yIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICByZXR1cm4gY2FsY3VsYXRlUmdiYShjb2xvciwgMC43NSk7XG4gICAgfTtcblxuICAgIGJlZm9yZSA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGNvbnN0IGNvbG9yID0gdGhpcy5jb2xvcigpO1xuICAgICAgY29uc3QgbGF0ID0gdGhpcy5sYXQoKTtcbiAgICAgIGNvbnN0IHRoaWNrbmVzcyA9IHRoaXMudGhpY2tuZXNzKCk7XG4gICAgICBjb25zdCBvZmZzZXQgPSB0aGlzLm9mZnNldCgpO1xuXG4gICAgICByZXR1cm4ga2V5ZnJhbWVzYFxuICAgICAgICAgIDAlIHt3aWR0aDogJHt0aGlja25lc3N9cHg7Ym94LXNoYWRvdzogJHtsYXR9cHggJHstb2Zmc2V0fXB4ICR7Y29sb3J9LCAkey1sYXR9cHggJHtvZmZzZXR9cHggJHtjb2xvcn19IFxuICAgICAgICAgIDM1JSB7d2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O2JveC1zaGFkb3c6IDAgJHstb2Zmc2V0fXB4ICR7Y29sb3J9LCAwICR7b2Zmc2V0fXB4ICR7Y29sb3J9fVxuICAgICAgICAgIDcwJSB7d2lkdGg6ICR7dGhpY2tuZXNzfXB4O2JveC1zaGFkb3c6ICR7LWxhdH1weCAkey1vZmZzZXR9cHggJHtjb2xvcn0sICR7bGF0fXB4ICR7b2Zmc2V0fXB4ICR7Y29sb3J9fVxuICAgICAgICAgIDEwMCUge2JveC1zaGFkb3c6ICR7bGF0fXB4ICR7LW9mZnNldH1weCAke2NvbG9yfSwgJHstbGF0fXB4ICR7b2Zmc2V0fXB4ICR7Y29sb3J9fVxuICAgICAgICBgO1xuICAgIH07XG5cbiAgICBhZnRlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgc2l6ZSwgc2l6ZVVuaXQgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGNvbnN0IGNvbG9yID0gdGhpcy5jb2xvcigpO1xuICAgICAgY29uc3QgbGF0ID0gdGhpcy5sYXQoKTtcbiAgICAgIGNvbnN0IHRoaWNrbmVzcyA9IHRoaXMudGhpY2tuZXNzKCk7XG4gICAgICBjb25zdCBvZmZzZXQgPSB0aGlzLm9mZnNldCgpO1xuXG4gICAgICByZXR1cm4ga2V5ZnJhbWVzYFxuICAgICAgICAgIDAlIHtoZWlnaHQ6ICR7dGhpY2tuZXNzfXB4O2JveC1zaGFkb3c6ICR7b2Zmc2V0fXB4ICR7bGF0fXB4ICR7Y29sb3J9LCAkey1vZmZzZXR9cHggJHstbGF0fXB4ICR7Y29sb3J9fSBcbiAgICAgICAgICAzNSUge2hlaWdodDogJHtgJHtzaXplfSR7c2l6ZVVuaXR9YH07Ym94LXNoYWRvdzogJHtvZmZzZXR9cHggMCAke2NvbG9yfSwgJHstb2Zmc2V0fXB4IDAgJHtjb2xvcn19XG4gICAgICAgICAgNzAlIHtoZWlnaHQ6ICR7dGhpY2tuZXNzfXB4O2JveC1zaGFkb3c6ICR7b2Zmc2V0fXB4ICR7LWxhdH1weCAke2NvbG9yfSwgJHstb2Zmc2V0fXB4ICR7bGF0fXB4ICR7Y29sb3J9fVxuICAgICAgICAgIDEwMCUge2JveC1zaGFkb3c6ICR7b2Zmc2V0fXB4ICR7bGF0fXB4ICR7Y29sb3J9LCAkey1vZmZzZXR9cHggJHstbGF0fXB4ICR7Y29sb3J9fVxuICAgICAgICBgO1xuICAgIH07XG5cbiAgICBzdHlsZSA9IGkgPT4ge1xuICAgICAgY29uc3QgeyBzaXplLCBzaXplVW5pdCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgcmV0dXJuIGNzc2B7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICB3aWR0aDogJHtgJHtzaXplIC8gNX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemUgLyA1fSR7c2l6ZVVuaXR9YH07XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAke2Ake3NpemUgLyAxMH0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBub25lO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiAke2kgPT09IDEgPyB0aGlzLmJlZm9yZSgpIDogdGhpcy5hZnRlcigpfSAycyBpbmZpbml0ZTtcbiAgICAgICAgfWA7XG4gICAgfTtcblxuICAgIHdyYXBwZXIgPSAoKSA9PiB7XG4gICAgICBjb25zdCB7IHNpemUsIHNpemVVbml0IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICBjb25zdCB3cmFwcGVyID0gY3NzYHsgICAgICAgIFxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgd2lkdGg6ICR7YCR7c2l6ZX0ke3NpemVVbml0fWB9O1xuICAgICAgICAgICAgaGVpZ2h0OiAke2Ake3NpemV9JHtzaXplVW5pdH1gfTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE2NWRlZyk7XG4gICAgICAgIH1gO1xuXG4gICAgICByZXR1cm4gdGhpcy5wcm9wcy5jc3MgPyBjc3NgJHt3cmFwcGVyfTske3RoaXMucHJvcHMuY3NzfWAgOiB3cmFwcGVyO1xuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICBjb25zdCB7IGxvYWRpbmcgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIHJldHVybiBsb2FkaW5nID9cbiAgICAgICAgPGRpdiBjc3M9e3RoaXMud3JhcHBlcigpfT5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSgxKX0gLz5cbiAgICAgICAgICA8ZGl2IGNzcz17dGhpcy5zdHlsZSgyKX0gLz5cbiAgICAgICAgPC9kaXY+IDogbnVsbDtcbiAgICB9XG59XG5cbkxvYWRlci5wcm9wVHlwZXMgPSB7XG4gIGxvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2l6ZVVuaXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNzczogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuTG9hZGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgbG9hZGluZzogdHJ1ZSxcbiAgc2l6ZTogNTAsXG4gIGNvbG9yOiAnIzAwMDAwMCcsXG4gIHNpemVVbml0OiAncHgnLFxuICBjc3M6ICcnXG59O1xuXG5jb25zdCBDb21wb25lbnQgPSBvbmx5VXBkYXRlRm9yS2V5cyhbJ2xvYWRpbmcnLCAnY29sb3InLCAnc2l6ZScsICdzaXplVW5pdCcsICdjc3MnXSkoTG9hZGVyKTtcbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMgPSBMb2FkZXIuZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG4iXX0= */')) : wrapper;\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n\n        _createClass(Loader, [{\n          key: 'render',\n          value: function render() {\n            var loading = this.props.loading;\n            return loading ? (0, _core.jsx)('div', {\n              css: this.wrapper()\n            }, (0, _core.jsx)('div', {\n              css: this.style(1)\n            }), (0, _core.jsx)('div', {\n              css: this.style(2)\n            })) : null;\n          }\n        }]);\n\n        return Loader;\n      }(_react2.default.Component);\n\n      Loader.propTypes = {\n        loading: _propTypes2.default.bool,\n        size: _propTypes2.default.number,\n        color: _propTypes2.default.string,\n        sizeUnit: _propTypes2.default.string,\n        css: _propTypes2.default.string\n      };\n      Loader.defaultProps = {\n        loading: true,\n        size: 50,\n        color: '#000000',\n        sizeUnit: 'px',\n        css: ''\n      };\n      var Component = (0, _onlyUpdateForKeys2.default)(['loading', 'color', 'size', 'sizeUnit', 'css'])(Loader);\n      Component.defaultProps = Loader.defaultProps;\n      exports.default = Component;\n    });\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(0));\n  /***/\n},\n/* 66 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var _react = __webpack_require__(1);\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _propTypes = __webpack_require__(2);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  var _reactDom = __webpack_require__(9);\n\n  var _reactDom2 = _interopRequireDefault(_reactDom);\n\n  var _three = __webpack_require__(12);\n\n  var THREE = _interopRequireWildcard(_three);\n\n  var _threeStlLoader = __webpack_require__(67);\n\n  var _threeStlLoader2 = _interopRequireDefault(_threeStlLoader);\n\n  var _threeOrbitControls = __webpack_require__(13);\n\n  var _threeOrbitControls2 = _interopRequireDefault(_threeOrbitControls);\n\n  var _reactSpinners = __webpack_require__(14);\n\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    } else {\n      var newObj = {};\n\n      if (obj != null) {\n        for (var key in obj) {\n          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n        }\n      }\n\n      newObj.default = obj;\n      return newObj;\n    }\n  }\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var STLLoader = (0, _threeStlLoader2.default)(THREE);\n  var OrbitControls = (0, _threeOrbitControls2.default)(THREE);\n\n  var STLViewer = function (_Component) {\n    _inherits(STLViewer, _Component);\n\n    function STLViewer() {\n      _classCallCheck(this, STLViewer);\n\n      return _possibleConstructorReturn(this, (STLViewer.__proto__ || Object.getPrototypeOf(STLViewer)).apply(this, arguments));\n    }\n\n    _createClass(STLViewer, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        this.renderModel(this.props);\n      }\n    }, {\n      key: 'renderModel',\n      value: function renderModel(props) {\n        var _this2 = this;\n\n        var camera = void 0,\n            scene = void 0,\n            renderer = void 0,\n            mesh = void 0,\n            distance = void 0,\n            controls = void 0;\n        var url = props.url,\n            file = props.file,\n            width = props.width,\n            height = props.height,\n            modelColor = props.modelColor,\n            backgroundColor = props.backgroundColor,\n            orbitControls = props.orbitControls,\n            sceneClassName = props.sceneClassName,\n            onSceneRendered = props.onSceneRendered;\n        var xDims = void 0,\n            yDims = void 0,\n            zDims = void 0;\n        var component = this;\n        scene = new THREE.Scene();\n        distance = 10000;\n        var directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n        directionalLight.position.x = 0;\n        directionalLight.position.y = 1;\n        directionalLight.position.z = 0;\n        directionalLight.position.normalize();\n        scene.add(directionalLight);\n        var ambientLight = new THREE.AmbientLight(0x404040); // soft white light\n\n        scene.add(ambientLight);\n\n        var onLoad = function onLoad(geometry) {\n          geometry.computeFaceNormals();\n          geometry.computeVertexNormals();\n          geometry.center();\n          mesh = new THREE.Mesh(geometry, new THREE.MeshLambertMaterial({\n            overdraw: true,\n            color: modelColor\n          }));\n          geometry.computeBoundingBox();\n          xDims = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n          yDims = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n          zDims = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n          scene.add(mesh);\n          camera = new THREE.PerspectiveCamera(30, width / height, 1, distance);\n          camera.position.set(0, 0, Math.max(xDims * 3, yDims * 3, zDims * 3));\n          scene.add(camera);\n          renderer = new THREE.WebGLRenderer({\n            preserveDrawingBuffer: true,\n            antialias: true\n          });\n          renderer.setSize(width, height);\n          renderer.setClearColor(backgroundColor, 1);\n          renderer.domElement.className = sceneClassName;\n\n          if (orbitControls) {\n            controls = new OrbitControls(camera, _reactDom2.default.findDOMNode(component));\n            controls.enableKeys = false;\n            controls.addEventListener('change', orbitRender);\n          }\n\n          _reactDom2.default.findDOMNode(_this2).replaceChild(renderer.domElement, _reactDom2.default.findDOMNode(_this2).firstChild);\n\n          render();\n\n          if (typeof onSceneRendered === \"function\") {\n            onSceneRendered(_reactDom2.default.findDOMNode(renderer.domElement));\n          }\n        };\n\n        var onProgress = function onProgress(xhr) {\n          if (xhr.lengthComputable) {\n            var percentComplete = xhr.loaded / xhr.total * 100;\n          }\n        };\n\n        var loader = new STLLoader();\n\n        if (file) {\n          loader.loadFile(file, onLoad, onProgress);\n        } else {\n          loader.load(url, onLoad, onProgress);\n        }\n\n        var render = function render() {\n          renderer.render(scene, camera);\n        };\n\n        var orbitRender = function orbitRender() {\n          render();\n        };\n      }\n    }, {\n      key: 'shouldComponentUpdate',\n      value: function shouldComponentUpdate(nextProps, nextState) {\n        if (JSON.stringify(nextProps) === JSON.stringify(this.props)) {\n          return false;\n        }\n\n        return true;\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate(nextProps, nextState) {\n        this.renderModel(nextProps);\n      }\n    }, {\n      key: 'componentDidCatch',\n      value: function componentDidCatch(error, info) {\n        console.log(error, info);\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        return _react2.default.createElement('div', {\n          className: this.props.className,\n          style: {\n            width: this.props.width,\n            height: this.props.height,\n            overflow: 'hidden'\n          }\n        }, _react2.default.createElement('div', {\n          style: {\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          }\n        }, _react2.default.createElement(_reactSpinners.ScaleLoader, {\n          color: '#123abc',\n          loading: true\n        })));\n      }\n    }]);\n\n    return STLViewer;\n  }(_react.Component);\n\n  STLViewer.propTypes = {\n    className: _propTypes2.default.string,\n    url: _propTypes2.default.string,\n    file: _propTypes2.default.object,\n    width: _propTypes2.default.number,\n    height: _propTypes2.default.number,\n    backgroundColor: _propTypes2.default.string,\n    modelColor: _propTypes2.default.string,\n    sceneClassName: _propTypes2.default.string,\n    onSceneRendered: _propTypes2.default.func\n  };\n  STLViewer.defaultProps = {\n    backgroundColor: '#EAEAEA',\n    modelColor: '#B92C2C',\n    height: 400,\n    width: 400,\n    rotate: true,\n    orbitControls: true,\n    sceneClassName: ''\n  };\n  ;\n  module.exports = STLViewer;\n  /***/\n},\n/* 67 */\n\n/***/\nfunction (module, exports) {\n  /**\n   * @author aleeper / http://adamleeper.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author gero3 / https://github.com/gero3\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\n   *\n   * Supports both binary and ASCII encoded files, with automatic detection of type.\n   *\n   * The loader returns a non-indexed buffer geometry.\n   *\n   * Limitations:\n   *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\n   *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\n   *  ASCII decoding assumes file is UTF-8.\n   *\n   * Usage:\n   *  var loader = new THREE.STLLoader();\n   *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\n   *    scene.add( new THREE.Mesh( geometry ) );\n   *  });\n   *\n   * For binary STLs geometry might contain colors for vertices. To use it:\n   *  // use the same code to load STL as above\n   *  if (geometry.hasColors) {\n   *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: THREE.VertexColors });\n   *  } else { .... }\n   *  var mesh = new THREE.Mesh( geometry, material );\n   */\n  module.exports = function (THREE) {\n    var STLLoader = function STLLoader(manager) {\n      this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n    };\n\n    STLLoader.prototype = {\n      constructor: THREE.STLLoader,\n      load: function load(url, onLoad, onProgress, onError) {\n        var scope = this;\n        var loader = new THREE.FileLoader(scope.manager);\n        loader.setResponseType('arraybuffer');\n        loader.load(url, function (text) {\n          onLoad(scope.parse(text));\n        }, onProgress, onError);\n      },\n      loadFile: function loadFile(file, onLoad, onProgress, onError) {\n        var scope = this;\n        var reader = new FileReader();\n\n        reader.onload = function (event) {\n          if (event.target.readyState === 2 || event.target.status === 0) {\n            var geometry = scope.parse(event.target.result || event.target.responseText);\n            if (onLoad) onLoad(geometry);\n          } else {\n            if (onError) onError({\n              type: 'error',\n              message: 'Couldn\\'t load URL [' + url + ']',\n              response: event.target.readyState\n            });\n          }\n        };\n\n        reader.onerror = function (event) {\n          if (onError) onError({\n            type: 'error',\n            message: 'Some error ocurred:',\n            response: event.target.error.code\n          });\n        };\n\n        reader.onprogress = function (event) {\n          if (event.lengthComputable) {\n            if (onProgress) onProgress(event.total, event.loaded);\n          }\n        };\n\n        reader.readAsArrayBuffer(file);\n      },\n      parse: function parse(data) {\n        var isBinary = function isBinary() {\n          var expect, face_size, n_faces, reader;\n          reader = new DataView(binData);\n          face_size = 32 / 8 * 3 + 32 / 8 * 3 * 3 + 16 / 8;\n          n_faces = reader.getUint32(80, true);\n          expect = 80 + 32 / 8 + n_faces * face_size;\n\n          if (expect === reader.byteLength) {\n            return true;\n          } // An ASCII STL data must begin with 'solid ' as the first six bytes.\n          // However, ASCII STLs lacking the SPACE after the 'd' are known to be\n          // plentiful.  So, check the first 5 bytes for 'solid'.\n          // US-ASCII ordinal values for 's', 'o', 'l', 'i', 'd'\n\n\n          var solid = [115, 111, 108, 105, 100];\n          var SOLID = [83, 79, 76, 73, 68];\n          var sLetterIndex = 0;\n          var temp; // Some models might have extra symbol or space in front of solid word, we need to find it out\n\n          for (var i = 0; i < 5; i++) {\n            temp = reader.getUint8(i, false);\n\n            if (temp == solid[0] || temp === SOLID[0]) {\n              sLetterIndex = i;\n            }\n          } // If s letter has a space or something in foront of it - we need to shift it back to index 0\n\n\n          if (sLetterIndex > 0) {\n            for (var i = sLetterIndex; i < sLetterIndex + 5; i++) {\n              reader.setUint8(i - sLetterIndex, reader.getUint8(i, false));\n            }\n          }\n\n          for (var i = 0; i < 5; i++) {\n            // If solid[ i ] does not match the i-th byte, then it is not an\n            // ASCII STL; hence, it is binary and return true.\n            if (solid[i] != reader.getUint8(i, false)) {\n              if (SOLID[i] != reader.getUint8(i, false)) {\n                reader.setUint8(i, solid[i]);\n                return true;\n              }\n            }\n          } // First 5 bytes read \"solid\" or uppercase variations; declare it to be an ASCII STL\n\n\n          return false;\n        };\n\n        var binData = this.ensureBinary(data);\n        return isBinary() ? this.parseBinary(binData) : this.parseASCII(this.ensureString(data));\n      },\n      parseBinary: function parseBinary(data) {\n        var reader = new DataView(data);\n        var faces = reader.getUint32(80, true);\n        var r,\n            g,\n            b,\n            hasColors = false,\n            colors;\n        var defaultR, defaultG, defaultB, alpha; // process STL header\n        // check for default color in header (\"COLOR=rgba\" sequence).\n\n        for (var index = 0; index < 80 - 10; index++) {\n          if (reader.getUint32(index, false) == 0x434F4C4F\n          /*COLO*/\n          && reader.getUint8(index + 4) == 0x52\n          /*'R'*/\n          && reader.getUint8(index + 5) == 0x3D\n          /*'='*/\n          ) {\n            hasColors = true;\n            colors = [];\n            defaultR = reader.getUint8(index + 6) / 255;\n            defaultG = reader.getUint8(index + 7) / 255;\n            defaultB = reader.getUint8(index + 8) / 255;\n            alpha = reader.getUint8(index + 9) / 255;\n          }\n        }\n\n        var dataOffset = 84;\n        var faceLength = 12 * 4 + 2;\n        var geometry = new THREE.BufferGeometry();\n        var vertices = [];\n        var normals = [];\n\n        for (var face = 0; face < faces; face++) {\n          var start = dataOffset + face * faceLength;\n          var normalX = reader.getFloat32(start, true);\n          var normalY = reader.getFloat32(start + 4, true);\n          var normalZ = reader.getFloat32(start + 8, true);\n\n          if (hasColors) {\n            var packedColor = reader.getUint16(start + 48, true);\n\n            if ((packedColor & 0x8000) === 0) {\n              // facet has its own unique color\n              r = (packedColor & 0x1F) / 31;\n              g = (packedColor >> 5 & 0x1F) / 31;\n              b = (packedColor >> 10 & 0x1F) / 31;\n            } else {\n              r = defaultR;\n              g = defaultG;\n              b = defaultB;\n            }\n          }\n\n          for (var i = 1; i <= 3; i++) {\n            var vertexstart = start + i * 12;\n            vertices.push(reader.getFloat32(vertexstart, true));\n            vertices.push(reader.getFloat32(vertexstart + 4, true));\n            vertices.push(reader.getFloat32(vertexstart + 8, true));\n            normals.push(normalX, normalY, normalZ);\n\n            if (hasColors) {\n              colors.push(r, g, b);\n            }\n          }\n        }\n\n        geometry.addAttribute('position', new THREE.BufferAttribute(new Float32Array(vertices), 3));\n        geometry.addAttribute('normal', new THREE.BufferAttribute(new Float32Array(normals), 3));\n\n        if (hasColors) {\n          geometry.addAttribute('color', new THREE.BufferAttribute(new Float32Array(colors), 3));\n          geometry.hasColors = true;\n          geometry.alpha = alpha;\n        }\n\n        return geometry;\n      },\n      parseASCII: function parseASCII(data) {\n        var geometry, length, patternFace, patternNormal, patternVertex, result, text;\n        geometry = new THREE.BufferGeometry();\n        patternFace = /facet([\\s\\S]*?)endfacet/g;\n        var vertices = [];\n        var normals = [];\n        var normal = new THREE.Vector3();\n\n        while ((result = patternFace.exec(data)) !== null) {\n          text = result[0];\n          patternNormal = /normal[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\n          while ((result = patternNormal.exec(text)) !== null) {\n            normal.x = parseFloat(result[1]);\n            normal.y = parseFloat(result[3]);\n            normal.z = parseFloat(result[5]);\n          }\n\n          patternVertex = /vertex[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\n          while ((result = patternVertex.exec(text)) !== null) {\n            vertices.push(parseFloat(result[1]), parseFloat(result[3]), parseFloat(result[5]));\n            normals.push(normal.x, normal.y, normal.z);\n          }\n        }\n\n        geometry.addAttribute('position', new THREE.BufferAttribute(new Float32Array(vertices), 3));\n        geometry.addAttribute('normal', new THREE.BufferAttribute(new Float32Array(normals), 3));\n        return geometry;\n      },\n      ensureString: function ensureString(buf) {\n        if (typeof buf !== \"string\") {\n          var array_buffer = new Uint8Array(buf);\n          var strArray = [];\n\n          for (var i = 0; i < buf.byteLength; i++) {\n            strArray.push(String.fromCharCode(array_buffer[i])); // implicitly assumes little-endian\n          }\n\n          return strArray.join('');\n        } else {\n          return buf;\n        }\n      },\n      ensureBinary: function ensureBinary(buf) {\n        if (typeof buf === \"string\") {\n          var array_buffer = new Uint8Array(buf.length);\n\n          for (var i = 0; i < buf.length; i++) {\n            array_buffer[i] = buf.charCodeAt(i) & 0xff; // implicitly assumes little-endian\n          }\n\n          return array_buffer.buffer || array_buffer;\n        } else {\n          return buf;\n        }\n      }\n    };\n    return STLLoader;\n  };\n  /***/\n\n}]);","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _regeneratorRuntime from \"/home/costantinos/Documenti/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/costantinos/Documenti/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/costantinos/Documenti/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/costantinos/Documenti/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/costantinos/Documenti/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/costantinos/Documenti/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/costantinos/Documenti/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/costantinos/Documenti/meme/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport Meme from '../abis/Meme.json'; //connessione al nodo di infura per ipfs\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https'\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    //operazioni quando il contratto viene chiamato\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }() //carico la finestra web3 o la converto in web3\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. ');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }() // dati della blockchain:\n    //account è l'indirizzo di colui che firma la transazione\n    //networkid è l'id della connessione es:localhost:7545\n    //contract è la variabile del contratto\n    //designHash è l'hash del file salvato sull'ipfs\n\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, contract, designHash;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = Meme.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 18;\n                  break;\n                }\n\n                contract = web3.eth.Contract(Meme.abi, networkData.address);\n                this.setState({\n                  contract: contract\n                });\n                _context3.next = 14;\n                return contract.methods.get().call();\n\n              case 14:\n                designHash = _context3.sent;\n                this.setState({\n                  designHash: designHash\n                });\n                _context3.next = 19;\n                break;\n\n              case 18:\n                window.alert('Smart contract not deployed to detected network.');\n\n              case 19:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.submitMetaFile = function (event) {\n      event.preventDefault();\n      console.log(\"submitting metadata to IPFS\");\n      var name = _this.state.name;\n      var surname = _this.state.surname;\n\n      if (name == '' || surname == '') {\n        console.log(\"metadata not saved\");\n\n        _this.setState({\n          name: '',\n          surname: ''\n        });\n\n        return;\n      } else {\n        var toJSON = {\n          name: name,\n          surname: surname\n        };\n        var myJson = JSON.stringify(toJSON);\n        console.log(toJSON);\n        console.log(myJson);\n        var buf = Buffer.from(myJson);\n        ipfs.add(buf, function (error, result) {\n          console.log('Ipfs result', result);\n\n          if (error) {\n            console.error(error);\n            return;\n          }\n\n          console.log(result[0].hash);\n        });\n\n        _this.setState({\n          name: '',\n          surname: ''\n        });\n      }\n    };\n\n    _this.captureFile = function (event) {\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log('buffer', _this.state.buffer);\n      };\n    };\n\n    _this.captureFile2 = function (event) {\n      event.preventDefault();\n      console.log(\"charging name\");\n      var stri = event.target.value;\n\n      _this.setState({\n        name: stri\n      });\n    };\n\n    _this.captureFile3 = function (event) {\n      event.preventDefault();\n      console.log(\"charging surname\");\n      var stri = event.target.value;\n\n      _this.setState({\n        surname: stri\n      });\n    };\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n      console.log(\"Submitting design to ipfs\");\n      ipfs.add(_this.state.buffer, function (error, result) {\n        console.log('Ipfs result', result);\n\n        if (error) {\n          console.error(error);\n          return;\n        }\n\n        _this.state.contract.methods.set(result[0].hash).send({\n          from: _this.state.account\n        }).then(function (r) {\n          return _this.setState({\n            designHash: result[0].hash\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      designHash: '',\n      contract: null,\n      web3: null,\n      buffer: null,\n      account: null,\n      name: '',\n      surname: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"App di prova\")), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://ipfs.infura.io/ipfs/\".concat(this.state.designHash),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Change design\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Send\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"\\xA0\")), React.createElement(\"form\", {\n        onSubmit: this.onSubmit2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.captureFile2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }))), React.createElement(\"form\", {\n        onSubmit: this.onSubmit3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Surname:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.surname,\n        onChange: this.captureFile3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        onClick: this.submitMetaFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Submit\"))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/costantinos/Documenti/meme/src/components/App.js"],"names":["React","Component","Web3","ReactDOM","Meme","ipfsClient","require","ipfs","host","port","protocol","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","networks","contract","Contract","abi","address","methods","get","call","designHash","props","submitMetaFile","event","preventDefault","console","log","name","state","surname","toJSON","myJson","JSON","stringify","buf","Buffer","from","add","error","result","hash","captureFile","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","captureFile2","stri","value","captureFile3","onSubmit","set","send","then","r","onSubmit2","onSubmit3"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport Meme from '../abis/Meme.json'\n//connessione al nodo di infura per ipfs\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' })\n\n\nclass App extends Component {\n\n//operazioni quando il contratto viene chiamato\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n//carico la finestra web3 o la converto in web3\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. ')\n    }\n  }\n// dati della blockchain:\n//account è l'indirizzo di colui che firma la transazione\n//networkid è l'id della connessione es:localhost:7545\n//contract è la variabile del contratto\n//designHash è l'hash del file salvato sull'ipfs\n  async loadBlockchainData() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Meme.networks[networkId]\n    if(networkData) {\n      const contract = web3.eth.Contract(Meme.abi, networkData.address)\n      this.setState({ contract })\n      const designHash = await contract.methods.get().call()\n      this.setState({ designHash })\n    } else {\n      window.alert('Smart contract not deployed to detected network.')\n    }\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      designHash: '',\n      contract: null,\n      web3: null,\n      buffer: null,\n      account: null,\n      name: '',\n      surname:''\n    }\n  }\n  submitMetaFile = (event) => {\n    event.preventDefault()\n    console.log(\"submitting metadata to IPFS\")\n    const name = this.state.name;\n    const surname = this.state.surname;\n    if (name == '' || surname == ''){\n      console.log(\"metadata not saved\")\n      this.setState({name:'',surname:''})\n      return\n    }\n   else{\n     const toJSON = {\n       name : name,\n       surname : surname\n     };\n     const myJson = JSON.stringify(toJSON) ;\n     console.log(toJSON)\n     console.log(myJson)\n     var buf = Buffer.from(myJson);\n     ipfs.add(buf, (error, result) => {\n       console.log('Ipfs result', result)\n       if(error) {\n         console.error(error)\n         return\n       }\n        console.log(result[0].hash)\n     })\n     this.setState({name:'',surname:''})\n   }\n  }\n\n  captureFile = (event) => {\n    event.preventDefault()\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n      console.log('buffer', this.state.buffer)\n    }\n  }\n captureFile2 = (event) => {\n event.preventDefault()\n console.log(\"charging name\")\n const stri = event.target.value\n this.setState({ name: stri })\n }\n captureFile3 = (event) => {\n event.preventDefault()\n console.log(\"charging surname\")\n const stri = event.target.value\n this.setState({ surname: stri})\n }\n  onSubmit = (event) => {\n    event.preventDefault()\n    console.log(\"Submitting design to ipfs\")\n    ipfs.add(this.state.buffer, (error, result) => {\n      console.log('Ipfs result', result)\n      if(error) {\n        console.error(error)\n        return\n      }\n       this.state.contract.methods.set(result[0].hash).send({ from: this.state.account }).then((r) => {\n         return this.setState({ designHash: result[0].hash })\n       })\n    })\n  }\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            App di prova\n          </a>\n        </nav>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img src={`https://ipfs.infura.io/ipfs/${this.state.designHash}`} />\n                </a>\n                <p>&nbsp;</p>\n                <h2>Change design</h2>\n                <form onSubmit={this.onSubmit} >\n                  <input type='file' onChange={this.captureFile} />\n                  <input type='submit'  value = \"Send\"/>\n                <p>&nbsp;</p>\n                </form>\n                <form onSubmit={this.onSubmit2} >\n                <p>&nbsp;</p>\n                <label>\n                Name:\n                <input type=\"text\" onChange={this.captureFile2} />\n                </label>\n                </form>\n              <form onSubmit={this.onSubmit3} >\n              <label>\n              Surname:\n              <input type=\"text\" value={this.state.surname} onChange={this.captureFile3} />\n              </label>\n              </form>\n              <button onClick={this.submitMetaFile}>Submit</button>\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
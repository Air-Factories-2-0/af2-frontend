{"ast":null,"code":"var _classCallCheck = require(\"/home/costantinos/Documenti/Dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/costantinos/Documenti/Dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\n/**\n * 3d Vectors\n */\nvar Vector3 =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} z\n   */\n  function Vector3(x, y, z) {\n    _classCallCheck(this, Vector3);\n\n    this.x = Number(x);\n    this.y = Number(y);\n    this.z = Number(z);\n  }\n  /**\n   * Create a copy of the Vector\n   * @returns {Vector3}\n   */\n\n\n  _createClass(Vector3, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Vector3(this.x, this.y, this.z);\n    }\n    /**\n     * Add Vectors this and v\n     * @param {Vector3} v\n     * @returns {Vector3}\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(v) {\n      this.x = this.x + v.x;\n      this.y = this.y + v.y;\n      this.z = this.z + v.z;\n      return this;\n    }\n    /**\n     * Subtract Vectors this and v\n     * @param {Vector3} v\n     * @returns {Vector3}\n     */\n\n  }, {\n    key: \"sub\",\n    value: function sub(v) {\n      this.x = this.x - v.x;\n      this.y = this.y - v.y;\n      this.z = this.z - v.z;\n      return this;\n    }\n    /**\n     * Calculate the dot product of this and v.\n     * from https://www.cs.uaf.edu/2013/spring/cs493/lecture/01_24_vectors.html\n     * @param {Vector3} v\n     * @returns {Vector3}\n     */\n\n  }, {\n    key: \"dot\",\n    value: function dot(v) {\n      return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n    /**\n     * Calculate the cross product of this and v.\n     * from https://www.cs.uaf.edu/2013/spring/cs493/lecture/01_24_vectors.html\n     * @param {Vector3} v\n     * @returns {Vector3}\n     */\n\n  }, {\n    key: \"cross\",\n    value: function cross(v) {\n      var x = this.x;\n      var y = this.y;\n      var z = this.z;\n      this.x = y * v.z - z * v.y;\n      this.y = z * v.x - x * v.z;\n      this.z = x * v.y - y * v.x;\n      return this;\n    } //\n\n    /**\n     * Calculate Vector length\n     * @returns {number}\n     */\n\n  }, {\n    key: \"length\",\n    value: function length() {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n  }]);\n\n  return Vector3;\n}();\n\nmodule.exports = Vector3;","map":null,"metadata":{},"sourceType":"script"}